insert into s10p12c205.submission (submission_id, problem_id, member_id, code, time, memory, language, created_at, updated_at)
values  (1, 4, 2, '[{"1":"import java.io.BufferedReader;"},{"2":"import java.io.IOException;"},{"3":"import java.io.InputStreamReader;"},{"4":"​"},{"5":"/**"},{"6":" * 백준 전체 1007 문제 알고리즘 클래스"},{"7":" *"},{"8":" * @author RWB"},{"9":" * @see <a href=\\"https://blog.itcode.dev/posts/2021/06/09/a1007\\">1007 풀이</a>"},{"10":" * @since 2021.06.09 Tue 00:50:26"},{"11":" */"},{"12":"public class Main"},{"13":"{"},{"14":"    // 결과"},{"15":"    private static double result;"},{"16":"    "},{"17":"    // 조합 선택 여부"},{"18":"    private static boolean[] isChecked;"},{"19":"    "},{"20":"    // 점의 배열"},{"21":"    private static int[][] P;"},{"22":"    "},{"23":"    /**"},{"24":"     * 메인 함수"},{"25":"     *"},{"26":"     * @param args: [String[]] 매개변수"},{"27":"     *"},{"28":"     * @throws IOException 데이터 입출력 예외"},{"29":"     */"},{"30":"    public static void main(String[] args) throws IOException"},{"31":"    {"},{"32":"        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));"},{"33":"        "},{"34":"        // 케이스 수"},{"35":"        int T = Integer.parseInt(reader.readLine());"},{"36":"        "},{"37":"        for (int i = 0; i < T; i++)"},{"38":"        {"},{"39":"            // 점의 갯수"},{"40":"            int N = Integer.parseInt(reader.readLine());"},{"41":"            "},{"42":"            result = Double.MAX_VALUE;"},{"43":"            "},{"44":"            isChecked = new boolean[N];"},{"45":"            "},{"46":"            P = new int[N][2];"},{"47":"            "},{"48":"            for (int j = 0; j < N; j++)"},{"49":"            {"},{"50":"                String[] temp = reader.readLine().split(\\" \\");"},{"51":"                "},{"52":"                P[j][0] = Integer.parseInt(temp[0]);"},{"53":"                P[j][1] = Integer.parseInt(temp[1]);"},{"54":"            }"},{"55":"            "},{"56":"            combination(0, N / 2);"},{"57":"            "},{"58":"            System.out.println(result);"},{"59":"        }"},{"60":"        "},{"61":"        reader.close();"},{"62":"    }"},{"63":"    "},{"64":"    /**"},{"65":"     * 조합 함수"},{"66":"     *"},{"67":"     * @param index: [int] 인덱스"},{"68":"     * @param count: [int] 조합할 원소 갯수"},{"69":"     */"},{"70":"    private static void combination(int index, int count)"},{"71":"    {"},{"72":"        // 조합할 원소 갯수가 더 이상 없을 경우"},{"73":"        if (count == 0)"},{"74":"        {"},{"75":"            result = Math.min(result, getVector());"},{"76":"        }"},{"77":"        "},{"78":"        // 조합할 원소 갯수가 아직 남아있을 경우"},{"79":"        else"},{"80":"        {"},{"81":"            for (int i = index; i < P.length; i++)"},{"82":"            {"},{"83":"                isChecked[i] = true;"},{"84":"                "},{"85":"                combination(i + 1, count - 1);"},{"86":"                "},{"87":"                isChecked[i] = false;"},{"88":"            }"},{"89":"        }"},{"90":"    }"},{"91":"    "},{"92":"    /**"},{"93":"     * 벡터 계산 함수"},{"94":"     *"},{"95":"     * @return [double] 벡터 크기"},{"96":"     */"},{"97":"    private static double getVector()"},{"98":"    {"},{"99":"        int x = 0;"},{"100":"        int y = 0;"},{"101":"        "},{"102":"        for (int i = 0; i < P.length; i++)"},{"103":"        {"},{"104":"            // 양수로 선택된 점일 경우"},{"105":"            if (isChecked[i])"},{"106":"            {"},{"107":"                x += P[i][0];"},{"108":"                y += P[i][1];"},{"109":"            }"},{"110":"            "},{"111":"            // 음수로 선택된 점일 경우"},{"112":"            else"},{"113":"            {"},{"114":"                x -= P[i][0];"},{"115":"                y -= P[i][1];"},{"116":"            }"},{"117":"        }"},{"118":"        "},{"119":"        return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));"},{"120":"    }"},{"121":"}"}]', 348, 15376, 'JAVA', '2024-02-15 00:36:38', '2024-02-15 00:36:38'),
        (2, 5, 2, '[{"1":"import java.util.Scanner;"},{"2":"​"},{"3":"/**"},{"4":" * 백준 전체 1004 문제 알고리즘 클래스"},{"5":" *"},{"6":" * @author RWB"},{"7":" * @see <a href=\\"https://blog.itcode.dev/posts/2021/05/22/a1004\\">1004 풀이</a>"},{"8":" * @since 2021.04.24 Sat 02:15:31"},{"9":" */"},{"10":"public class Main"},{"11":"{"},{"12":"    /**"},{"13":"     * 메인 함수"},{"14":"     *"},{"15":"     * @param args: [String[]] 매개변수"},{"16":"     */"},{"17":"    public static void main(String[] args)"},{"18":"    {"},{"19":"        Scanner scanner = new Scanner(System.in);"},{"20":"        "},{"21":"        int length = scanner.nextInt();"},{"22":"        scanner.nextLine();"},{"23":"        "},{"24":"        for (int i = 0; i < length; i++)"},{"25":"        {"},{"26":"            String base = scanner.nextLine();"},{"27":"            "},{"28":"            int x_start = Integer.parseInt(base.split(\\" \\")[0]);"},{"29":"            int y_start = Integer.parseInt(base.split(\\" \\")[1]);"},{"30":"            "},{"31":"            int x_end = Integer.parseInt(base.split(\\" \\")[2]);"},{"32":"            int y_end = Integer.parseInt(base.split(\\" \\")[3]);"},{"33":"            "},{"34":"            int through = 0;"},{"35":"            "},{"36":"            int count = scanner.nextInt();"},{"37":"            scanner.nextLine();"},{"38":"            "},{"39":"            for (int j = 0; j < count; j++)"},{"40":"            {"},{"41":"                String circle = scanner.nextLine();"},{"42":"                "},{"43":"                int x = Integer.parseInt(circle.split(\\" \\")[0]);"},{"44":"                int y = Integer.parseInt(circle.split(\\" \\")[1]);"},{"45":"                int r = Integer.parseInt(circle.split(\\" \\")[2]);"},{"46":"                "},{"47":"                boolean hasStartContain = hasContain(x_start, y_start, x, y, r);"},{"48":"                boolean hasEndContain = hasContain(x_end, y_end, x, y, r);"},{"49":"                "},{"50":"                // 해당 행성이 출발 혹은 도착점 중 하나만을 포함할 경우"},{"51":"                if (!(hasStartContain && hasEndContain) && (hasStartContain || hasEndContain))"},{"52":"                {"},{"53":"                    through++;"},{"54":"                }"},{"55":"            }"},{"56":"            "},{"57":"            System.out.println(through);"},{"58":"        }"},{"59":"        "},{"60":"        scanner.close();"},{"61":"    }"},{"62":"    "},{"63":"    /**"},{"64":"     * 출발/도착점 포함 여부 반환 함수"},{"65":"     *"},{"66":"     * @param xo: [int] 출발/도착점의 x좌표"},{"67":"     * @param yo: [int] 출발/도착점의 y좌표"},{"68":"     * @param x: [int] 행성의 x좌표"},{"69":"     * @param y: [int] 행성의 y좌표"},{"70":"     * @param r: [int] 행성의 반지름"},{"71":"     *"},{"72":"     * @return [boolean] 출발/도착점 포함 여부"},{"73":"     */"},{"74":"    private static boolean hasContain(int xo, int yo, int x, int y, int r)"},{"75":"    {"},{"76":"        return Math.sqrt(Math.pow(xo - x, 2) + Math.pow(yo - y, 2)) < r;"},{"77":"    }"},{"78":"}"}]', 488, 30076, 'JAVA', '2024-02-15 00:37:36', '2024-02-15 00:37:36'),
        (3, 10, 2, '[{"1":"import java.io.*;"},{"2":"import java.util.*;"},{"3":"​"},{"4":"public class Main {"},{"5":"​"},{"6":"    public static void main(String[] args) throws IOException{"},{"7":"        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));"},{"8":"        StringTokenizer st = new StringTokenizer(br.readLine());"},{"9":"        long s = Long.parseLong(st.nextToken());"},{"10":"        long e = Long.parseLong(st.nextToken());"},{"11":"        "},{"12":"        long count = e-s+1;"},{"13":"        boolean[] check = new boolean[(int)count];"},{"14":"        "},{"15":"        for(long i=2; i*i<=e; i++) {"},{"16":"            long pow = i*i; // 제곱수 "},{"17":"            long tmp = s/pow;  // 제곱수로 나눠지나? "},{"18":"            if(s%pow != 0) { // 제곱수 아니면 +1 "},{"19":"                tmp += 1;"},{"20":"            }"},{"21":"            "},{"22":"            for(long j = tmp; j*pow<=e; j++) {"},{"23":"                int canSqrt = (int)(j*pow-s);"},{"24":"                if(!check[canSqrt]) {"},{"25":"                    check[canSqrt] = true; // 나누어 떨어지는 수 범위 초과로 -s 해서 저장"},{"26":"                    count--;"},{"27":"                }"},{"28":"            }"},{"29":"        }"},{"30":"        System.out.println(count);"},{"31":"    }"},{"32":"}"}]', 164, 15248, 'JAVA', '2024-02-15 00:39:19', '2024-02-15 00:39:19'),
        (4, 13, 2, '[{"1":"import java.util.Scanner;"},{"2":"​"},{"3":"public class Main {"},{"4":"    "},{"5":"    static int[] cnt;"},{"6":"    static int start, end, digit;"},{"7":"    "},{"8":"    public static void main(String[] args) {"},{"9":"        Scanner sc = new Scanner(System.in);"},{"10":"​"},{"11":"        digit = 1;"},{"12":"        start = 1;"},{"13":"        end = sc.nextInt();"},{"14":"        "},{"15":"        cnt = new int[10];"},{"16":"        "},{"17":"        while(start <= end) {"},{"18":"            // 시작 페이지의 마지막 자리가 0이 될 때 까지 ++ "},{"19":"            while(start % 10 != 0 && start <= end) {"},{"20":"                counting(start, digit);"},{"21":"                start++;"},{"22":"            }"},{"23":"            "},{"24":"            // 마지막 페이지의 마지막 자리가 9가 될 때 까지 -- "},{"25":"            while(end % 10 != 9 && start <= end) {"},{"26":"                counting(end, digit);"},{"27":"                end--;"},{"28":"            }"},{"29":"            "},{"30":"            if(start > end) break;"},{"31":"            "},{"32":"            // 마지막 자릿수를 제거한다. "},{"33":"            start /= 10;"},{"34":"            end /= 10;"},{"35":"            "},{"36":"            // start ~ end 사이의 0 ~ 9 갯수를 모두 센다."},{"37":"            // 현재 자릿수 만큼 곱해줘야한다. "},{"38":"            for(int i = 0 ; i < 10 ; ++i) {"},{"39":"                cnt[i] += (end - start + 1) * digit;"},{"40":"            }"},{"41":"            "},{"42":"            // 자릿수를 높인다. "},{"43":"            digit *= 10;"},{"44":"        }"},{"45":"        "},{"46":"        for(long i : cnt) {"},{"47":"            System.out.print(i + \\" \\");"},{"48":"        }"},{"49":"    }"},{"50":"​"},{"51":"    private static void counting(int num, int digit) {"},{"52":"        while(num > 0) {"},{"53":"            cnt[num % 10] += digit;"},{"54":"            num /= 10;"},{"55":"        }"},{"56":"    }"},{"57":"}"},{"58":"​"},{"59":"​"}]', 224, 18392, 'JAVA', '2024-02-15 00:40:43', '2024-02-15 00:40:43'),
        (5, 11888, 3, '[{"1":"import java.io.BufferedReader;"},{"2":"import java.io.IOException;"},{"3":"import java.io.InputStreamReader;"},{"4":"import java.util.ArrayDeque;"},{"5":"import java.util.Arrays;"},{"6":"import java.util.Queue;"},{"7":"import java.util.StringTokenizer;"},{"8":"​"},{"9":"/**"},{"10":" * BJ 10026 적록색약"},{"11":" * @author leejuhyun"},{"12":" * Flood Fill"},{"13":" * "},{"14":" * Memory: 15024kb"},{"15":" * Time: 160ms"},{"16":" */"},{"17":"​"},{"18":"public class Main {"},{"19":"    "},{"20":"    static int N;"},{"21":"    static char grid[][];"},{"22":"    static boolean visited[][];"},{"23":"    static int normal_ans, abnormal_ans;"},{"24":"    static int[] dr = {-1, 0, 1, 0};"},{"25":"    static int[] dc = {0, 1, 0, -1};"},{"26":"​"},{"27":"    public static void main(String[] args) throws IOException {"},{"28":"        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));"},{"29":"        StringTokenizer st = new StringTokenizer(br.readLine());"},{"30":"        N = Integer.parseInt(st.nextToken());"},{"31":"        "},{"32":"        grid = new char[N][N];"},{"33":"        visited = new boolean[N][N];"},{"34":"        // Make a grid"},{"35":"        for (int i=0; i<N; i++) {"},{"36":"            st = new StringTokenizer(br.readLine());"},{"37":"            char[] temp = st.nextToken().toCharArray();"},{"38":"            for (int j=0; j<N; j++) {"},{"39":"                grid[i][j] = temp[j];"},{"40":"            }"},{"41":"        }"},{"42":"        "},{"43":"//      System.out.println(Arrays.deepToString(grid));"},{"44":"        "},{"45":"        // 정상인 사람이 봤을 때의 구역 개수"},{"46":"        for (int i=0; i<N; i++) {"},{"47":"            for (int j=0; j<N; j++) {"},{"48":"                if (!visited[i][j]) { // 방문한 적이 없으면"},{"49":"                    normal(i, j);"},{"50":"                    normal_ans++;"},{"51":"                }"},{"52":"            }"},{"53":"        }"},{"54":"        System.out.print(normal_ans+\\" \\");"},{"55":"        "},{"56":"        // 적록색약이 아닌 사람이 봤을 때의 구역 개수 "},{"57":"        visited = new boolean[N][N];  // 새로운 방문 배열 만들기 "},{"58":"        for (int i=0; i<N; i++) {"},{"59":"            for (int j=0; j<N; j++) {"},{"60":"                if (!visited[i][j]) { // 방문한 적이 없으면"},{"61":"                    abnormal(i, j);"},{"62":"                    abnormal_ans++;"},{"63":"                }"},{"64":"            }"},{"65":"        }"},{"66":"​"},{"67":"        System.out.print(abnormal_ans);"},{"68":"        "},{"69":"        "},{"70":"    }"},{"71":"    "},{"72":"    private static void normal(int r, int c) {"},{"73":"        Queue<int[]> queue = new ArrayDeque<>();"},{"74":"        queue.offer(new int[] {r, c});"},{"75":"        visited[r][c] = true;"},{"76":"        "},{"77":"        while (!queue.isEmpty()) {"},{"78":"            int[] current = queue.poll();"},{"79":"            int cr = current[0];"},{"80":"            int cc = current[1];"},{"81":"            int color = grid[cr][cc];"},{"82":"            "},{"83":"            for (int d=0; d<4; d++) {"},{"84":"                int nr = cr + dr[d];"},{"85":"                int nc = cc + dc[d];"},{"86":"                if (check(nr, nc) && !visited[nr][nc] && grid[nr][nc] == color) {"},{"87":"                    // 범위 안에 들어가고, 방문을 한 적이 없고, 컬러가 같으면"},{"88":"                    queue.offer(new int[] {nr, nc});"},{"89":"                    visited[nr][nc] = true;"},{"90":"                }"},{"91":"            }"},{"92":"            "},{"93":"        }"},{"94":"        "},{"95":"    }"},{"96":"    "},{"97":"    private static void abnormal(int r, int c) {"},{"98":"        Queue<int[]> queue = new ArrayDeque<>();"},{"99":"        queue.offer(new int[] {r, c});"},{"100":"        visited[r][c] = true;"},{"101":"        "},{"102":"        while (!queue.isEmpty()) {"},{"103":"            int[] current = queue.poll();"},{"104":"            int cr = current[0];"},{"105":"            int cc = current[1];"},{"106":"            char color = grid[cr][cc];"},{"107":"            int colorINT = 0;  // R와 G이면 0으로, B이면 1로"},{"108":"            if (color == ''B'')  colorINT = 1;"},{"109":"            "},{"110":"            if (colorINT == 1) { // 색이 파란색일 때"},{"111":"                for (int d=0; d<4; d++) {"},{"112":"                    int nr = cr + dr[d];"},{"113":"                    int nc = cc + dc[d];"},{"114":"                    if (check(nr, nc) && !visited[nr][nc] && grid[nr][nc] == color) {"},{"115":"                        queue.offer(new int[] {nr, nc});"},{"116":"                        visited[nr][nc] = true;"},{"117":"                    }"},{"118":"                }"},{"119":"            } else { // 색이 빨간색이거나 초록색일 때"},{"120":"                for (int d=0; d<4; d++) {"},{"121":"                    int nr = cr + dr[d];"},{"122":"                    int nc = cc + dc[d];"},{"123":"                    if (check(nr, nc) && !visited[nr][nc]) {"},{"124":"                        if (grid[nr][nc] == ''R'' || grid[nr][nc] == ''G'') {"},{"125":"                            // 범위 안에 들어가고, 방문을 한 적이 없고, 색이 빨간색이거나 초록색이면"},{"126":"                            queue.offer(new int[] {nr, nc});"},{"127":"                            visited[nr][nc] = true;"},{"128":"                        }"},{"129":"                        "},{"130":"                    }"},{"131":"                }"},{"132":"            }"},{"133":"​"},{"134":"        }"},{"135":"​"},{"136":"    }"},{"137":"    "},{"138":"    private static boolean check(int r, int c) {"},{"139":"        return 0<=r && r<N && 0<=c && c<N;"},{"140":"​"},{"141":"    }"},{"142":"​"},{"143":"}"}]', 160, 15076, 'JAVA', '2024-02-15 01:00:20', '2024-02-15 01:00:20'),
        (6, 17, 3, '[{"1":"import java.io.BufferedReader;"},{"2":"import java.io.IOException;"},{"3":"import java.io.InputStreamReader;"},{"4":"import java.util.Arrays;"},{"5":"import java.util.StringTokenizer;"},{"6":"​"},{"7":"/**"},{"8":" * BJ 1026 보물"},{"9":" * @author leejuhyun"},{"10":" * "},{"11":" * Memory: 14428kb"},{"12":" * Time: 124ms"},{"13":" */"},{"14":"​"},{"15":"public class Main {"},{"16":"​"},{"17":"    public static void main(String[] args) throws IOException {"},{"18":"        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));"},{"19":"        StringTokenizer st = new StringTokenizer(br.readLine());"},{"20":"        int N = Integer.parseInt(st.nextToken());"},{"21":"        int[] A = new int[N];"},{"22":"        int[] B = new int[N];"},{"23":"        st = new StringTokenizer(br.readLine());"},{"24":"        for (int i = 0; i < A.length; i++) {"},{"25":"            A[i] = Integer.parseInt(st.nextToken());"},{"26":"        }"},{"27":"        st = new StringTokenizer(br.readLine());"},{"28":"        for (int i = 0; i < B.length; i++) {"},{"29":"            B[i] = Integer.parseInt(st.nextToken());"},{"30":"        }"},{"31":"        Arrays.sort(A);"},{"32":"        Arrays.sort(B);"},{"33":"//      System.out.println(Arrays.toString(A));"},{"34":"//      System.out.println(Arrays.toString(B));"},{"35":"        "},{"36":"        int S = 0;"},{"37":"        for (int i = 0; i < N; i++) {"},{"38":"            S += A[i] * B[N-1-i];"},{"39":"        }"},{"40":"        System.out.println(S);"},{"41":"​"},{"42":"    }"},{"43":"​"},{"44":"}"}]', 132, 14252, 'JAVA', '2024-02-15 01:01:12', '2024-02-15 01:01:12'),
        (7, 6271, 3, '[{"1":"import java.util.ArrayDeque;"},{"2":"import java.util.Arrays;"},{"3":"import java.util.Queue;"},{"4":"import java.util.Scanner;"},{"5":"​"},{"6":"/**"},{"7":" * BJ 11866 요세푸스문제"},{"8":" * @author leejuhyun"},{"9":" * "},{"10":" * Queue"},{"11":" */"},{"12":"​"},{"13":"public class Main {"},{"14":"​"},{"15":"    public static void main(String[] args) {"},{"16":"        "},{"17":"        Scanner sc = new Scanner(System.in);"},{"18":"        StringBuilder sb = new StringBuilder();"},{"19":"        int n = sc.nextInt();"},{"20":"        int k = sc.nextInt();"},{"21":"        int[] result = new int[n];"},{"22":"        int resultIdx = 0;"},{"23":"        int pos = 0;"},{"24":"        int num = 1;"},{"25":"        "},{"26":"        Queue<Integer> queue = new ArrayDeque<>();"},{"27":"        "},{"28":"        for (int i=1; i<=n; i++) {"},{"29":"            queue.offer(i);"},{"30":"        }"},{"31":"        "},{"32":"        while (!queue.isEmpty()) {"},{"33":"            pos++; "},{"34":"            if (pos % k == 0) {"},{"35":"                result[resultIdx++] = queue.poll();"},{"36":"        "},{"37":"            } else {"},{"38":"                queue.offer(queue.poll());"},{"39":"                "},{"40":"            }"},{"41":"        }"},{"42":"        "},{"43":"//      System.out.println(Arrays.toString(result));"},{"44":"        sb.append(\\"<\\");"},{"45":"    "},{"46":"        for (int i=0; i<result.length;i++) {"},{"47":"            if (i==result.length-1) {"},{"48":"                sb.append(result[i]);"},{"49":"            } else{"},{"50":"                sb.append(result[i]+\\", \\");"},{"51":"            }"},{"52":"        }"},{"53":"        sb.append(\\">\\");"},{"54":"        System.out.println(sb.toString());"},{"55":"        "},{"56":"    }"},{"57":"​"},{"58":"}"}]', 440, 19028, 'JAVA', '2024-02-15 01:01:41', '2024-02-15 01:01:41'),
        (8, 14336, 3, '[{"1":"import java.io.BufferedReader;"},{"2":"import java.io.IOException;"},{"3":"import java.io.InputStreamReader;"},{"4":"import java.util.ArrayList;"},{"5":"import java.util.Arrays;"},{"6":"import java.util.List;"},{"7":"import java.util.StringTokenizer;"},{"8":"​"},{"9":"/**"},{"10":" * BJ_14891_톱니바퀴"},{"11":" * @author leejuhyun"},{"12":" * "},{"13":" * 알고리즘 문제 정독 3번 해야한다는 걸 뼈저리게 느낀 문제. "},{"14":" * 문제를 내 마음대로 이해해서 풀이가 산으로 갔다. "},{"15":" * 단순 구현인데 거의 5시간을 푼 것 같다ㅠㅠ "},{"16":" * "},{"17":" * Memory: 14328kb"},{"18":" * Time: 132ms"},{"19":" */"},{"20":"​"},{"21":"public class Main {"},{"22":"    "},{"23":"    static int ans;"},{"24":"    static int[][] T;"},{"25":"​"},{"26":"    public static void main(String[] args) throws IOException {"},{"27":"        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));"},{"28":"        StringTokenizer st;"},{"29":"        T = new int[5][8];"},{"30":"        "},{"31":"        for (int i=1; i<=4; i++) {"},{"32":"             st = new StringTokenizer(br.readLine());"},{"33":"             char[] temp = st.nextToken().toCharArray();"},{"34":"             for (int j=0; j<temp.length; j++) {"},{"35":"                 T[i][j] = temp[j] - ''0'';"},{"36":"             }"},{"37":"        }"},{"38":"        st = new StringTokenizer(br.readLine());"},{"39":"        int orderNum = Integer.parseInt(st.nextToken());"},{"40":"        "},{"41":"        List<int[]> list = new ArrayList<>();"},{"42":"        "},{"43":"        for (int i=0; i<orderNum; i++) {"},{"44":"            st = new StringTokenizer(br.readLine());"},{"45":"            int t_num = Integer.parseInt(st.nextToken());"},{"46":"            int dir = Integer.parseInt(st.nextToken());"},{"47":"            "},{"48":"            list.add(new int[] {t_num, dir});"},{"49":"        }"},{"50":"        "},{"51":"        "},{"52":"        for (int i=0; i<list.size(); i++) {"},{"53":"            int[] temp = list.get(i);"},{"54":"            int t_num = temp[0];"},{"55":"            int dir = temp[1];"},{"56":"            boolean[] rotate = new boolean[5];"},{"57":"            "},{"58":"            switch (t_num) {"},{"59":"            case 1: // 1st 톱니바퀴 : 연쇄적으로 2nd, 3rd, 4th에 영향을 준다 "},{"60":"                for (int j=1; j<T.length-1; j++) {  // j=1, 2, 3"},{"61":"                    if (T[j][2] != T[j+1][6]) {"},{"62":"                        rotate[j+1] = true;"},{"63":"                    } "},{"64":"                    else {"},{"65":"                        break;"},{"66":"                    }"},{"67":"                }"},{"68":"​"},{"69":"                rotate[1] = true;"},{"70":"                for (int j=1; j<rotate.length; j++) { // j=1, 2, 3, 4"},{"71":"                    if (rotate[j] == true) {"},{"72":"                        if (dir == 1) { // 시계방향 "},{"73":"                            rotateCW(j);"},{"74":"                            dir = -1;  // 그 다음 톱니바퀴는 반대 방향으로 회전되어야 함 "},{"75":"                        } else { // 반시계방향 "},{"76":"                            rotateCCW(j);"},{"77":"                            dir = 1;"},{"78":"                        }"},{"79":"                    }"},{"80":"                }"},{"81":"                break;"},{"82":"            "},{"83":"            case 2: // 2nd 톱니바퀴: 1st가 영향을 받고, 3rd이 4th에 영향을 준다 "},{"84":"                // 1st 톱니바퀴 확인 "},{"85":"                if (T[1][2] != T[2][6]) {"},{"86":"                    if (dir == 1) { "},{"87":"                        rotateCCW(1);"},{"88":"                    } else {"},{"89":"                        rotateCW(1);"},{"90":"                    }"},{"91":"                }"},{"92":"                // 3rd, 4th 확인 "},{"93":"                for (int j=2; j<rotate.length-1; j++) { // j=2, 3"},{"94":"                    if (T[j][2] != T[j+1][6]) {"},{"95":"                        rotate[j+1] = true;"},{"96":"                    } else {"},{"97":"                        break;"},{"98":"                    }"},{"99":"                }"},{"100":"​"},{"101":"                rotate[2] = true;"},{"102":"                for (int j=2; j<rotate.length; j++) { // j=3, 4"},{"103":"                    if (rotate[j] == true) {"},{"104":"                        if (dir == 1) { "},{"105":"                            rotateCW(j);"},{"106":"                            dir = -1;"},{"107":"                        } else {"},{"108":"                            rotateCCW(j);"},{"109":"                            dir = 1;"},{"110":"                        }"},{"111":"                    }"},{"112":"                }"},{"113":"                "},{"114":"                break;"},{"115":"            "},{"116":"            case 3: // 3rd 톱니바퀴: 4th가 영향을 받고, 2nd가 1st에 영향을 준다 "},{"117":"                // 4th 확인 "},{"118":"                if (T[3][2] != T[4][6]) {"},{"119":"                    if (dir == 1) {"},{"120":"                        rotateCCW(4);"},{"121":"                    } else { "},{"122":"                        rotateCW(4);"},{"123":"                    }"},{"124":"                }"},{"125":"                // 2nd, 1st 확인 "},{"126":"                for (int j=3; j>1; j--) { // j=3, 2"},{"127":"                    if (T[j][6] != T[j-1][2]) {"},{"128":"                        rotate[j-1] = true;"},{"129":"                    } else {"},{"130":"                        break;"},{"131":"                    }"},{"132":"                }"},{"133":"                "},{"134":"                rotate[3] = true;"},{"135":"                for (int j=3; j>=1; j--) { // j=3, 2, 1"},{"136":"                    if (rotate[j] == true) {"},{"137":"                        if (dir == 1) { "},{"138":"                            rotateCW(j);"},{"139":"                            dir = -1;"},{"140":"                        } else {"},{"141":"                            rotateCCW(j);"},{"142":"                            dir = 1;"},{"143":"                        }"},{"144":"                    }"},{"145":"                }"},{"146":"                break;"},{"147":"                "},{"148":"            case 4: //4th 톱니바퀴: 연쇄적으로 3rd, 2nd, 1st에 영향을 준다 "},{"149":"                for (int j=4; j>1; j--) {  // j=4, 3, 2"},{"150":"                    if (T[j][6] != T[j-1][2]) {"},{"151":"                        rotate[j-1] = true;"},{"152":"                    } else {"},{"153":"                        break;"},{"154":"                    }"},{"155":"                }"},{"156":"                rotate[4] = true;"},{"157":"                for (int j=4; j>=1; j--) { // j=3, 2, 1"},{"158":"                    if (rotate[j] == true) {"},{"159":"                        if (dir == 1) { "},{"160":"                            rotateCW(j);"},{"161":"                            dir = -1; "},{"162":"                        } else {"},{"163":"                            rotateCCW(j);"},{"164":"                            dir = 1;"},{"165":"                        }"},{"166":"                    }"},{"167":"                }"},{"168":"                break;"},{"169":"            }"},{"170":"            "},{"171":"        }"},{"172":"        "},{"173":"        // ans"},{"174":"        ans = 0;"},{"175":"        int[] ansArray = {0, 1, 2, 4, 8};"},{"176":"        for (int i=1; i<T.length; i++) {"},{"177":"            if (T[i][0] == 1) {"},{"178":"                ans += ansArray[i];"},{"179":"            }"},{"180":"        }"},{"181":"        System.out.println(ans);"},{"182":"​"},{"183":"    }"},{"184":"    "},{"185":"    private static void rotateCW(int t_num) {  // 시계방향 "},{"186":"        int[] temp = new int[8];"},{"187":"        int fin = T[t_num][7];"},{"188":"        for (int i=1; i<8; i++) {"},{"189":"            temp[i] = T[t_num][i-1];"},{"190":"        }"},{"191":"        temp[0] = fin;"},{"192":"        T[t_num] = Arrays.copyOf(temp, temp.length);"},{"193":"        "},{"194":"    }"},{"195":"    "},{"196":"    private static void rotateCCW(int t_num) {"},{"197":"        int[] temp = new int[8];"},{"198":"        int init = T[t_num][0];"},{"199":"        for (int i=0; i<7; i++) {"},{"200":"            temp[i] = T[t_num][i+1];"},{"201":"        }"},{"202":"        temp[7] = init;"},{"203":"        T[t_num] = Arrays.copyOf(temp, temp.length);"},{"204":"    }"},{"205":"​"},{"206":"}"}]', 132, 14252, 'JAVA', '2024-02-15 01:02:12', '2024-02-15 01:02:12'),
        (9, 14097, 4, '[{"1":"L = int(input())"},{"2":"N = int(input())"},{"3":"arr = [0 for _ in range(L + 1)]  # L : (1 ≤ L ≤ 1000)"},{"4":"mx = 0  # 가장 많은 조각을 받을 예상 방청객 번호"},{"5":"mx_i = 0"},{"6":"for n in range(N):"},{"7":"    P, K = map(int, input().split())"},{"8":"    if K - P > mx:  # 여러명인 경우 번호가 작은 사람을 출력하도록 초과 범위 지정"},{"9":"        mx_i = n + 1"},{"10":"        mx = K - P"},{"11":"    for i in range(P, K + 1):"},{"12":"        if arr[i] == 0:  # 이미 번호 적혀있으면 받지 못함"},{"13":"            arr[i] = n + 1"},{"14":"print(mx_i)  # 가장 많은 조각을 받을 것으로 기대하고 있던 방청객의 번호를 출력"},{"15":"real = 0"},{"16":"real_i = 0  # 실제로 많이 받는 방청객 번호"},{"17":"for i in range(1, N + 1):"},{"18":"    x = arr.count(i)"},{"19":"    if x > real:"},{"20":"        real = x"},{"21":"        real_i = i"},{"22":"print(real_i)  # 실제로 가장 많은 조각을 받은 방청객의 번호를 출력"}]', 88, 31120, 'PYTHON', '2024-02-15 01:47:47', '2024-02-15 01:47:47'),
        (10, 16189, 3, '[{"1":"import java.util.Arrays;"},{"2":"import java.util.Scanner;"},{"3":"​"},{"4":"/**"},{"5":" * BJ 1463 1로만들기"},{"6":" * @author leejuhyun"},{"7":" * "},{"8":" * Memory: 21696kb"},{"9":" * Timne: 244ms"},{"10":" */"},{"11":"​"},{"12":"public class Main {"},{"13":"    "},{"14":"    static int n, memo[];"},{"15":"​"},{"16":"    public static void main(String[] args) {"},{"17":"        "},{"18":"        Scanner sc = new Scanner(System.in);"},{"19":"        n = sc.nextInt();"},{"20":"        memo = new int[n+4];"},{"21":"        Arrays.fill(memo, -1);"},{"22":"        "},{"23":"        memo[0] = 0;"},{"24":"        memo[1] = 0;"},{"25":"        memo[2] = 1;"},{"26":"        memo[3] = 1;"},{"27":"         "},{"28":"        if (n < 4) {"},{"29":"            System.out.println(memo[n]);"},{"30":"        } else {"},{"31":"            for (int i=4; i<=n; i++) {"},{"32":"                int a = memo[i-1]+1;"},{"33":"                int b = memo[i/2]+1+i%2;"},{"34":"                int c = memo[i/3]+1+i%3;"},{"35":"                memo[i] = Math.min(a, Math.min(b, c));"},{"36":"                "},{"37":"            }"},{"38":"            System.out.println(memo[n]);"},{"39":"        }"},{"40":"        "},{"41":"    }"},{"42":"    "},{"43":"​"},{"44":"}"}]', 236, 21608, 'JAVA', '2024-02-15 01:50:20', '2024-02-15 01:50:20'),
        (11, 9908, 3, '[{"1":"import java.util.Arrays;"},{"2":"import java.util.Scanner;"},{"3":"​"},{"4":"/**"},{"5":" * BJ 15686 치킨배달"},{"6":" * @author leejuhyun"},{"7":" *"},{"8":" * Memory: 24164kb,"},{"9":" * Time: 428ms"},{"10":" */"},{"11":"​"},{"12":"public class Main {"},{"13":"    "},{"14":"    static int N, M;"},{"15":"    static int ckCount;"},{"16":"    static int totalDist;"},{"17":"    static int[] minDist;"},{"18":"    static int minDistIdx;"},{"19":"//  static int totalDist = Integer.MAX_VALUE;"},{"20":"    static int[][] map;"},{"21":"    static int[] selected;"},{"22":"    static int[][] ckArray;"},{"23":"​"},{"24":"    public static void main(String[] args) {"},{"25":"        "},{"26":"        Scanner sc = new Scanner(System.in);"},{"27":"        "},{"28":"        N = sc.nextInt();"},{"29":"        M = sc.nextInt();"},{"30":"        map = new int[N][N];"},{"31":"        selected = new int[M];"},{"32":"        minDist = new int[10000];  // 우선 10개로 설정."},{"33":"        minDistIdx = 0;"},{"34":"        "},{"35":"        // Make a map"},{"36":"        for (int i = 0; i < N; i++) {"},{"37":"            for (int j = 0; j < N; j++) {"},{"38":"                map[i][j] = sc.nextInt();"},{"39":"            }"},{"40":"        }"},{"41":"        "},{"42":"        // 치킨 집 개수"},{"43":"        ckCount = 0;"},{"44":"        for (int i = 0; i < N; i++) {"},{"45":"            for (int j = 0; j < N; j++) {"},{"46":"                if (map[i][j] == 2) {"},{"47":"                    ckCount++;"},{"48":"                }"},{"49":"            }"},{"50":"        }"},{"51":"//      System.out.println(ckCount);"},{"52":"        "},{"53":"        // chicken coordinate array"},{"54":"        ckArray = new int[ckCount][2];"},{"55":"        int idx = 0;"},{"56":"        for (int i = 0; i < N; i++) {"},{"57":"            for (int j = 0; j < N; j++) {"},{"58":"                if (map[i][j] == 2) {"},{"59":"                    ckArray[idx++] = new int[]{i, j};"},{"60":"                }"},{"61":"            }"},{"62":"        }"},{"63":"        "},{"64":"        // Print out"},{"65":"//      for (int[] elements: ckArray) {"},{"66":"//          for (int e: elements) {"},{"67":"//              System.out.print(e+\\" \\");"},{"68":"//          }"},{"69":"//          System.out.println();"},{"70":"//      }"},{"71":"        "},{"72":"        // 거리 최솟값 구하기"},{"73":"        totalDist = 0;"},{"74":"        if (ckCount == M) {// 만약 치킨집 개수와 M이 같다면, 단순하게 치킨집과 집과의 거리를 구해주면 된다"},{"75":"            for (int i = 0; i < N; i++) {"},{"76":"                for (int j = 0; j < N; j++) {"},{"77":"                    if (map[i][j] == 1) { // 집이라면, 치킨집과의 거리를 구해야 한다"},{"78":"                        // 어떤 치킨 집과 가까울까?"},{"79":"                        int tempDist = Integer.MAX_VALUE;"},{"80":"                        for (int k = 0; k < ckCount; k++) {"},{"81":"                            int dist = Math.abs(i - ckArray[k][0]) + Math.abs(j - ckArray[k][1]);"},{"82":"                            if (dist < tempDist) {"},{"83":"                                tempDist = dist;"},{"84":"                            }"},{"85":"                        }"},{"86":"                        totalDist += tempDist;"},{"87":"                    }"},{"88":"                }"},{"89":"            }"},{"90":"        } else { // 최대 M개의 치킨집을 조합으로 고르고, 거리를 구해줘야 한다."},{"91":"//          System.out.println(\\"hello\\");"},{"92":"            "},{"93":"            comb(0, 0);"},{"94":"            "},{"95":"            int init = Integer.MAX_VALUE;"},{"96":"            for (int i = 0; i < minDist.length; i++) {"},{"97":"                if (minDist[i] == 0) break;"},{"98":"                if (minDist[i] < init) {"},{"99":"                    init = minDist[i];"},{"100":"                }"},{"101":"            }"},{"102":"            totalDist = init;"},{"103":"        }"},{"104":"        "},{"105":"        System.out.println(totalDist);"},{"106":"//      System.out.println(Arrays.toString(minDist));"},{"107":"​"},{"108":"    }"},{"109":"    "},{"110":"    private static void comb(int cnt, int start) {"},{"111":"        if (cnt == M) {"},{"112":"            // selected의 배열이 만들어짐. "},{"113":"//          System.out.println(Arrays.toString(selected));"},{"114":"            // selected가 [0, 1], [0, 2] , ... , [3, 4]"},{"115":"            "},{"116":"            // selected chicken coordinate array"},{"117":"            int[][] selectedCkArray = new int[M][2];"},{"118":"            int idx = 0;"},{"119":"            for (int i = 0; i < selected.length; i++) {"},{"120":"                idx = selected[i];   // 치킨집 좌표 ckArray   "},{"121":"                selectedCkArray[i] = ckArray[idx];"},{"122":"            }"},{"123":"            "},{"124":"            totalDist = Integer.MAX_VALUE;"},{"125":"            int totalTempDist = 0;"},{"126":"            // 고른 치킨집의 좌표를 가지고 이제 거리를 구한다. "},{"127":"            for (int i = 0; i < N; i++) {"},{"128":"                for (int j = 0; j < N; j++) {"},{"129":"                    if (map[i][j] == 1) {"},{"130":"                        int tempDist = Integer.MAX_VALUE;"},{"131":"                        for (int k = 0; k < M; k++) {"},{"132":"                            int dist = Math.abs(i - selectedCkArray[k][0]) + Math.abs(j - selectedCkArray[k][1]);"},{"133":"                            if (dist < tempDist) {"},{"134":"                                tempDist = dist;"},{"135":"                            }"},{"136":"                        }"},{"137":"//                      System.out.print(\\"tempDist: \\"+tempDist);"},{"138":"                        totalTempDist += tempDist;"},{"139":"//                      System.out.println(\\", totaltempDist: \\"+totalTempDist);"},{"140":"                    }"},{"141":"                }"},{"142":"            }"},{"143":"            if (totalTempDist < totalDist) {"},{"144":"                totalDist = totalTempDist;  "},{"145":"                minDist[minDistIdx++] = totalDist;"},{"146":"//              System.out.println(\\"totalDist: \\"+totalDist);"},{"147":"            }"},{"148":"            "},{"149":"            "},{"150":"            return;"},{"151":"        }"},{"152":"        "},{"153":"        for (int i = start; i < ckCount; i++) {"},{"154":"            selected[cnt] = i;          // selected에 인덱스 번호를 넣어줌."},{"155":"            comb(cnt + 1, i + 1);"},{"156":"        }"},{"157":"​"},{"158":"    }"},{"159":"​"},{"160":"}"}]', 436, 24496, 'JAVA', '2024-02-15 10:06:30', '2024-02-15 10:06:30'),
        (12, 9908, 3, '[{"1":"import java.util.Arrays;"},{"2":"import java.util.Scanner;"},{"3":"​"},{"4":"/**"},{"5":" * BJ 15686 치킨배달"},{"6":" * @author leejuhyun"},{"7":" *"},{"8":" * Memory: 24164kb,"},{"9":" * Time: 428ms"},{"10":" */"},{"11":"​"},{"12":"public class Main {"},{"13":"    "},{"14":"    static int N, M;"},{"15":"    static int ckCount;"},{"16":"    static int totalDist;"},{"17":"    static int[] minDist;"},{"18":"    static int minDistIdx;"},{"19":"//    static int totalDist = Integer.MAX_VALUE;"},{"20":"    static int[][] map;"},{"21":"    static int[] selected;"},{"22":"    static int[][] ckArray;"},{"23":"​"},{"24":"    public static void main(String[] args) {"},{"25":"        "},{"26":"        Scanner sc = new Scanner(System.in);"},{"27":"        "},{"28":"        N = sc.nextInt();"},{"29":"        M = sc.nextInt();"},{"30":"        map = new int[N][N];"},{"31":"        selected = new int[M];"},{"32":"        minDist = new int[10000];  // 우선 10개로 설정."},{"33":"        minDistIdx = 0;"},{"34":"        "},{"35":"        // Make a map"},{"36":"        for (int i = 0; i < N; i++) {"},{"37":"            for (int j = 0; j < N; j++) {"},{"38":"                map[i][j] = sc.nextInt();"},{"39":"            }"},{"40":"        }"},{"41":"        "},{"42":"        // 치킨 집 개수"},{"43":"        ckCount = 0;"},{"44":"        for (int i = 0; i < N; i++) {"},{"45":"            for (int j = 0; j < N; j++) {"},{"46":"                if (map[i][j] == 2) {"},{"47":"                    ckCount++;"},{"48":"                }"},{"49":"            }"},{"50":"        }"},{"51":"//        System.out.println(ckCount);"},{"52":"        "},{"53":"        // chicken coordinate array"},{"54":"        ckArray = new int[ckCount][2];"},{"55":"        int idx = 0;"},{"56":"        for (int i = 0; i < N; i++) {"},{"57":"            for (int j = 0; j < N; j++) {"},{"58":"                if (map[i][j] == 2) {"},{"59":"                    ckArray[idx++] = new int[]{i, j};"},{"60":"                }"},{"61":"            }"},{"62":"        }"},{"63":"        "},{"64":"        // Print out"},{"65":"//        for (int[] elements: ckArray) {"},{"66":"//            for (int e: elements) {"},{"67":"//                System.out.print(e+\\" \\");"},{"68":"//            }"},{"69":"//            System.out.println();"},{"70":"//        }"},{"71":"        "},{"72":"        // 거리 최솟값 구하기"},{"73":"        totalDist = 0;"},{"74":"        if (ckCount == M) {// 만약 치킨집 개수와 M이 같다면, 단순하게 치킨집과 집과의 거리를 구해주면 된다"},{"75":"            for (int i = 0; i < N; i++) {"},{"76":"                for (int j = 0; j < N; j++) {"},{"77":"                    if (map[i][j] == 1) { // 집이라면, 치킨집과의 거리를 구해야 한다"},{"78":"                        // 어떤 치킨 집과 가까울까?"},{"79":"                        int tempDist = Integer.MAX_VALUE;"},{"80":"                        for (int k = 0; k < ckCount; k++) {"},{"81":"                            int dist = Math.abs(i - ckArray[k][0]) + Math.abs(j - ckArray[k][1]);"},{"82":"                            if (dist < tempDist) {"},{"83":"                                tempDist = dist;"},{"84":"                            }"},{"85":"                        }"},{"86":"                        totalDist += tempDist;"},{"87":"                    }"},{"88":"                }"},{"89":"            }"},{"90":"        } else { // 최대 M개의 치킨집을 조합으로 고르고, 거리를 구해줘야 한다."},{"91":"//            System.out.println(\\"hello\\");"},{"92":"            "},{"93":"            comb(0, 0);"},{"94":"            "},{"95":"            int init = Integer.MAX_VALUE;"},{"96":"            for (int i = 0; i < minDist.length; i++) {"},{"97":"                if (minDist[i] == 0) break;"},{"98":"                if (minDist[i] < init) {"},{"99":"                    init = minDist[i];"},{"100":"                }"},{"101":"            }"},{"102":"            totalDist = init;"},{"103":"        }"},{"104":"        "},{"105":"        System.out.println(totalDist);"},{"106":"//        System.out.println(Arrays.toString(minDist));"},{"107":"​"},{"108":"    }"},{"109":"    "},{"110":"    private static void comb(int cnt, int start) {"},{"111":"        if (cnt == M) {"},{"112":"            // selected의 배열이 만들어짐. "},{"113":"//            System.out.println(Arrays.toString(selected));"},{"114":"            // selected가 [0, 1], [0, 2] , ... , [3, 4]"},{"115":"            "},{"116":"            // selected chicken coordinate array"},{"117":"            int[][] selectedCkArray = new int[M][2];"},{"118":"            int idx = 0;"},{"119":"            for (int i = 0; i < selected.length; i++) {"},{"120":"                idx = selected[i];   // 치킨집 좌표 ckArray   "},{"121":"                selectedCkArray[i] = ckArray[idx];"},{"122":"            }"},{"123":"            "},{"124":"            totalDist = Integer.MAX_VALUE;"},{"125":"            int totalTempDist = 0;"},{"126":"            // 고른 치킨집의 좌표를 가지고 이제 거리를 구한다. "},{"127":"            for (int i = 0; i < N; i++) {"},{"128":"                for (int j = 0; j < N; j++) {"},{"129":"                    if (map[i][j] == 1) {"},{"130":"                        int tempDist = Integer.MAX_VALUE;"},{"131":"                        for (int k = 0; k < M; k++) {"},{"132":"                            int dist = Math.abs(i - selectedCkArray[k][0]) + Math.abs(j - selectedCkArray[k][1]);"},{"133":"                            if (dist < tempDist) {"},{"134":"                                tempDist = dist;"},{"135":"                            }"},{"136":"                        }"},{"137":"//                        System.out.print(\\"tempDist: \\"+tempDist);"},{"138":"                        totalTempDist += tempDist;"},{"139":"//                        System.out.println(\\", totaltempDist: \\"+totalTempDist);"},{"140":"                    }"},{"141":"                }"},{"142":"            }"},{"143":"            if (totalTempDist < totalDist) {"},{"144":"                totalDist = totalTempDist;  "},{"145":"                minDist[minDistIdx++] = totalDist;"},{"146":"//                System.out.println(\\"totalDist: \\"+totalDist);"},{"147":"            }"},{"148":"            "},{"149":"            "},{"150":"            return;"},{"151":"        }"},{"152":"        "},{"153":"        for (int i = start; i < ckCount; i++) {"},{"154":"            selected[cnt] = i;          // selected에 인덱스 번호를 넣어줌."},{"155":"            comb(cnt + 1, i + 1);"},{"156":"        }"},{"157":"​"},{"158":"    }"},{"159":"​"},{"160":"}"}]', 424, 24176, 'JAVA', '2024-02-15 10:24:27', '2024-02-15 10:24:27'),
        (13, 6271, 3, '[{"1":"import java.util.ArrayDeque;"},{"2":"import java.util.Arrays;"},{"3":"import java.util.Queue;"},{"4":"import java.util.Scanner;"},{"5":"​"},{"6":"/**"},{"7":" * BJ 11866 요세푸스문제"},{"8":" * @author leejuhyun"},{"9":" * "},{"10":" * Queue"},{"11":" */"},{"12":"​"},{"13":"public class Main {"},{"14":"​"},{"15":"    public static void main(String[] args) {"},{"16":"        "},{"17":"        Scanner sc = new Scanner(System.in);"},{"18":"        StringBuilder sb = new StringBuilder();"},{"19":"        int n = sc.nextInt();"},{"20":"        int k = sc.nextInt();"},{"21":"        int[] result = new int[n];"},{"22":"        int resultIdx = 0;"},{"23":"        int pos = 0;"},{"24":"        int num = 1;"},{"25":"        "},{"26":"        Queue<Integer> queue = new ArrayDeque<>();"},{"27":"        "},{"28":"        for (int i=1; i<=n; i++) {"},{"29":"            queue.offer(i);"},{"30":"        }"},{"31":"        "},{"32":"        while (!queue.isEmpty()) {"},{"33":"            pos++; "},{"34":"            if (pos % k == 0) {"},{"35":"                result[resultIdx++] = queue.poll();"},{"36":"        "},{"37":"            } else {"},{"38":"                queue.offer(queue.poll());"},{"39":"                "},{"40":"            }"},{"41":"        }"},{"42":"        "},{"43":"//        System.out.println(Arrays.toString(result));"},{"44":"        sb.append(\\"<\\");"},{"45":"    "},{"46":"        for (int i=0; i<result.length;i++) {"},{"47":"            if (i==result.length-1) {"},{"48":"                sb.append(result[i]);"},{"49":"            } else{"},{"50":"                sb.append(result[i]+\\", \\");"},{"51":"            }"},{"52":"        }"},{"53":"        sb.append(\\">\\");"},{"54":"        System.out.println(sb.toString());"},{"55":"        "},{"56":"    }"},{"57":"​"},{"58":"}"},{"59":"​"}]', 444, 18964, 'JAVA', '2024-02-15 10:26:39', '2024-02-15 10:26:39'),
        (14, 6271, 3, '[{"1":"import java.util.ArrayDeque;"},{"2":"import java.util.Arrays;"},{"3":"import java.util.Queue;"},{"4":"import java.util.Scanner;"},{"5":"​"},{"6":"/**"},{"7":" * BJ 11866 요세푸스문제"},{"8":" * @author leejuhyun"},{"9":" * "},{"10":" * Queue"},{"11":" */"},{"12":"​"},{"13":"public class Main {"},{"14":"​"},{"15":"    public static void main(String[] args) {"},{"16":"        "},{"17":"        Scanner sc = new Scanner(System.in);"},{"18":"        StringBuilder sb = new StringBuilder();"},{"19":"        int n = sc.nextInt();"},{"20":"        int k = sc.nextInt();"},{"21":"        int[] result = new int[n];"},{"22":"        int resultIdx = 0;"},{"23":"        int pos = 0;"},{"24":"        int num = 1;"},{"25":"        "},{"26":"        Queue<Integer> queue = new ArrayDeque<>();"},{"27":"        "},{"28":"        for (int i=1; i<=n; i++) {"},{"29":"            queue.offer(i);"},{"30":"        }"},{"31":"        "},{"32":"        while (!queue.isEmpty()) {"},{"33":"            pos++; "},{"34":"            if (pos % k == 0) {"},{"35":"                result[resultIdx++] = queue.poll();"},{"36":"        "},{"37":"            } else {"},{"38":"                queue.offer(queue.poll());"},{"39":"                "},{"40":"            }"},{"41":"        }"},{"42":"        "},{"43":"//        System.out.println(Arrays.toString(result));"},{"44":"        sb.append(\\"<\\");"},{"45":"    "},{"46":"        for (int i=0; i<result.length;i++) {"},{"47":"            if (i==result.length-1) {"},{"48":"                sb.append(result[i]);"},{"49":"            } else{"},{"50":"                sb.append(result[i]+\\", \\");"},{"51":"            }"},{"52":"        }"},{"53":"        sb.append(\\">\\");"},{"54":"        System.out.println(sb.toString());"},{"55":"        "},{"56":"    }"},{"57":"​"},{"58":"}"},{"59":"​"}]', 436, 18952, 'JAVA', '2024-02-15 10:27:59', '2024-02-15 10:27:59'),
        (15, 6271, 6, '[{"1":"import java.util.ArrayDeque;"},{"2":"import java.util.Arrays;"},{"3":"import java.util.Queue;"},{"4":"import java.util.Scanner;"},{"5":"​"},{"6":"/**"},{"7":" * BJ 11866 요세푸스문제"},{"8":" * @author leejuhyun"},{"9":" * "},{"10":" * Queue"},{"11":" */"},{"12":"​"},{"13":"public class Main {"},{"14":"​"},{"15":"    public static void main(String[] args) {"},{"16":"        "},{"17":"        Scanner sc = new Scanner(System.in);"},{"18":"        StringBuilder sb = new StringBuilder();"},{"19":"        int n = sc.nextInt();"},{"20":"        int k = sc.nextInt();"},{"21":"        int[] result = new int[n];"},{"22":"        int resultIdx = 0;"},{"23":"        int pos = 0;"},{"24":"        int num = 1;"},{"25":"        "},{"26":"        Queue<Integer> queue = new ArrayDeque<>();"},{"27":"        "},{"28":"        for (int i=1; i<=n; i++) {"},{"29":"            queue.offer(i);"},{"30":"        }"},{"31":"        "},{"32":"        while (!queue.isEmpty()) {"},{"33":"            pos++; "},{"34":"            if (pos % k == 0) {"},{"35":"                result[resultIdx++] = queue.poll();"},{"36":"        "},{"37":"            } else {"},{"38":"                queue.offer(queue.poll());"},{"39":"                "},{"40":"            }"},{"41":"        }"},{"42":"        "},{"43":"//        System.out.println(Arrays.toString(result));"},{"44":"        sb.append(\\"<\\");"},{"45":"    "},{"46":"        for (int i=0; i<result.length;i++) {"},{"47":"            if (i==result.length-1) {"},{"48":"                sb.append(result[i]);"},{"49":"            } else{"},{"50":"                sb.append(result[i]+\\", \\");"},{"51":"            }"},{"52":"        }"},{"53":"        sb.append(\\">\\");"},{"54":"        System.out.println(sb.toString());"},{"55":"        "},{"56":"    }"},{"57":"​"},{"58":"}"},{"59":"​"},{"60":"​"}]', 448, 19040, 'JAVA', '2024-02-15 10:36:09', '2024-02-15 10:36:09'),
        (16, 14051, 1, '[{"1":"import java.io.*;"},{"2":"import java.util.*;"},{"3":"​"},{"4":"public class Main {"},{"5":"    static int N, students, gender, num;"},{"6":"    static int[]switchArr;"},{"7":"    static int[] dy = {-1, 1};  // 좌, 우"},{"8":"    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));"},{"9":"    static StringTokenizer st = null;"},{"10":"    static StringBuilder sb = new StringBuilder();"},{"11":"    "},{"12":"    public static boolean isIn(int ly, int ry) {"},{"13":"        if(ly < 1 || ry >= N + 1) {"},{"14":"            return false;"},{"15":"        }"},{"16":"        return true;"},{"17":"    }"},{"18":"    "},{"19":"    public static void init() throws IOException {"},{"20":"        switchArr = new int[N + 1];"},{"21":"        st = new StringTokenizer(br.readLine());"},{"22":"        for(int i = 1; i <= N; i++) {"},{"23":"            switchArr[i] = Integer.parseInt(st.nextToken());"},{"24":"        }"},{"25":"    }"},{"26":"    "},{"27":"    public static void solve() throws IOException {"},{"28":"        st = new StringTokenizer(br.readLine());"},{"29":"        gender = Integer.parseInt(st.nextToken());"},{"30":"        num = Integer.parseInt(st.nextToken());"},{"31":"        if(gender == 1) {   // 남"},{"32":"            int cnt = 1;"},{"33":"            while(true) {"},{"34":"                if((num * cnt) > N) break;  // 배수 탐색 중 N을 넘는 경우"},{"35":"                switchArr[num * cnt] = switchArr[num * cnt] == 0 ? 1 : 0;"},{"36":"                // 배수 위치들 바꾸기"},{"37":"                cnt++;"},{"38":"            }"},{"39":"        } else {    // 여"},{"40":"            int cnt = 1;"},{"41":"            switchArr[num] = switchArr[num] == 0 ? 1 : 0;   // 본인이 뽑은 위치는 우선 무조건 바꿈"},{"42":"            while(true) {"},{"43":"                int ly = num - cnt;"},{"44":"                int ry = num + cnt;"},{"45":"                if(isIn(ly, ry) && switchArr[ly] == switchArr[ry]) {"},{"46":"                    switchArr[ly] = switchArr[ly] == 0 ? 1 : 0;"},{"47":"                    switchArr[ry] = switchArr[ry] == 0 ? 1 : 0;"},{"48":"                    cnt++;"},{"49":"                } else {"},{"50":"                    break;"},{"51":"                }"},{"52":"            }"},{"53":"        }"},{"54":"    }"},{"55":"    "},{"56":"    public static void main(String[] args) throws IOException {"},{"57":"        st = new StringTokenizer(br.readLine());"},{"58":"        N = Integer.parseInt(st.nextToken());"},{"59":"        init();"},{"60":"​"},{"61":"        st = new StringTokenizer(br.readLine());"},{"62":"        students = Integer.parseInt(st.nextToken());"},{"63":"        for(int i = 0; i < students; i++) {"},{"64":"            solve();"},{"65":"        }"},{"66":"        for(int i = 1; i <= N; i++) {"},{"67":"            sb.append(switchArr[i]);"},{"68":"            if(i % 20 == 0) {"},{"69":"                sb.append(''\\\\n'');"},{"70":"            } else {"},{"71":"                sb.append(\\" \\");"},{"72":"            }"},{"73":"        }"},{"74":"        System.out.print(sb.toString());"},{"75":"    }"},{"76":"}"}]', 76, 11576, 'JAVA', '2024-02-15 10:36:24', '2024-02-15 10:36:24'),
        (17, 2981, 6, '[{"1":"import java.io.BufferedReader;"},{"2":"import java.io.IOException;"},{"3":"import java.io.InputStreamReader;"},{"4":"import java.util.ArrayDeque;"},{"5":"import java.util.ArrayList;"},{"6":"import java.util.Arrays;"},{"7":"import java.util.List;"},{"8":"import java.util.Queue;"},{"9":"import java.util.StringTokenizer;"},{"10":"​"},{"11":"/**"},{"12":" * BJ 17471 게리맨더링"},{"13":" * @author leejuhyun"},{"14":" *"},{"15":" * 부분집합 + 그래프 연결 확인 "},{"16":" * "},{"17":" * Memory: 16748kb"},{"18":" * Time: 140ms"},{"19":" */"},{"20":"public class Main {"},{"21":"    "},{"22":"    static int ans;"},{"23":"    static int N, pop[];"},{"24":"    static List<Integer>[] graph;"},{"25":"    static boolean selectedA[], selectedB[];"},{"26":"    static List<Integer> grpA, grpB;"},{"27":"​"},{"28":"    public static void main(String[] args) throws IOException {"},{"29":"        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));"},{"30":"        StringTokenizer st = new StringTokenizer(br.readLine());"},{"31":"        "},{"32":"        N = Integer.parseInt(st.nextToken()); // 구역의 개수 "},{"33":"        pop = new int[N+1]; // 인구 수 담는 배열 "},{"34":"        st = new StringTokenizer(br.readLine());"},{"35":"        for (int i=1; i<=N; i++) {"},{"36":"            pop[i] = Integer.parseInt(st.nextToken());"},{"37":"        }"},{"38":"        "},{"39":"        // Make an adjacent list"},{"40":"        graph = new ArrayList[N+1];"},{"41":"        for (int i=1; i<=N; i++) {"},{"42":"            graph[i] = new ArrayList<Integer>();"},{"43":"        }"},{"44":"        "},{"45":"        for (int i=1; i<=N; i++) {"},{"46":"            st = new StringTokenizer(br.readLine());"},{"47":"            int num = Integer.parseInt(st.nextToken());"},{"48":"            for (int j=0; j<num; j++) {"},{"49":"                int temp = Integer.parseInt(st.nextToken());"},{"50":"                graph[i].add(temp);"},{"51":"            }"},{"52":"        }"},{"53":"        "},{"54":"//        printGraph();"},{"55":"        selectedA = new boolean[N+1];"},{"56":"        ans = Integer.MAX_VALUE;"},{"57":"        subset(1);"},{"58":"//        System.out.println(ans);"},{"59":"        if (ans == Integer.MAX_VALUE) {"},{"60":"            System.out.println(-1);"},{"61":"        } else {"},{"62":"            System.out.println(ans);"},{"63":"        }"},{"64":"​"},{"65":"    }"},{"66":"    "},{"67":"    private static void subset(int cnt) {"},{"68":"        if (cnt == N+1) { // 부분집합이 만들어짐 "},{"69":"            "},{"70":"//            System.out.println(\\"A: \\"+Arrays.toString(selectedA));"},{"71":"            // selectedA = [false, true, true, false, false, true, false] -> group A "},{"72":"            selectedB = new boolean[N+1];"},{"73":"            int false_cnt = 0; "},{"74":"            for (int i=1; i<=N; i++) {"},{"75":"                if (!selectedA[i]) { // selectedA에서 false이면, A의 선거구에 포함되지 않으므로 "},{"76":"                    selectedB[i] = true;   // B의 선거구에 포함시킨다 "},{"77":"                    false_cnt++;"},{"78":"                }"},{"79":"            }"},{"80":"//            System.out.println(\\"B: \\"+Arrays.toString(selectedB));"},{"81":"            "},{"82":"            if (isConnected(selectedA) && isConnected(selectedB)) {"},{"83":"                int popA = computePopulation(selectedA);"},{"84":"                int popB = computePopulation(selectedB);"},{"85":"                int diff = Math.abs(popA - popB);"},{"86":"                if (diff < ans) {"},{"87":"                    ans = diff;"},{"88":"                }"},{"89":"            }"},{"90":"            "},{"91":"//            if (false_cnt == N || false_cnt == 0) { // A의 선거구에 포함되지 않거나 모두 A 선거구에 포함되었다면, 리턴 "},{"92":"//                return;"},{"93":"//            } else {"},{"94":"//                if (isConnected(selectedA) && isConnected(selectedAB)) {"},{"95":"//                    int popA = computePopulation(selectedA);"},{"96":"//                    int popB = computePopulation(selectedAB);"},{"97":"//                    int diff = Math.abs(popA - popB);"},{"98":"//                    if (diff < ans) {"},{"99":"//                        ans = diff;"},{"100":"//                    }"},{"101":"//                }"},{"102":"//            }"},{"103":"            "},{"104":"            return;"},{"105":"        }"},{"106":"        "},{"107":"        // 부분집합 만들기 "},{"108":"        selectedA[cnt] = true;"},{"109":"        subset(cnt + 1);"},{"110":"        selectedA[cnt] = false;"},{"111":"        subset(cnt + 1);"},{"112":"​"},{"113":"    }"},{"114":"    "},{"115":"    private static boolean isConnected(boolean[] se) {"},{"116":"        "},{"117":"        boolean[] visited = new boolean[N+1];"},{"118":"        Queue<Integer> q = new ArrayDeque<Integer>();"},{"119":"        "},{"120":"        // 처음 정점 찾기 "},{"121":"        int start = -1;"},{"122":"        for (int i=1; i<=N; i++) {"},{"123":"            if (se[i]) {"},{"124":"                start = i;"},{"125":"                q.offer(start);"},{"126":"                break;"},{"127":"            }"},{"128":"        }"},{"129":"        "},{"130":"        if (start == -1) return false;"},{"131":"                "},{"132":"        while (!q.isEmpty()) {"},{"133":"            int current = q.poll();"},{"134":"            visited[current] = true;"},{"135":"            "},{"136":"            for (int next: graph[current]) { // current 정점의 연결된 정점 탐색 "},{"137":"                if (se[next] && !visited[next]) {"},{"138":"                    // 선거구에 포함되어야 할 정점이면서 아직 방문하지 않은 정점이라면 "},{"139":"                    q.offer(next);"},{"140":"                    visited[next] = true;"},{"141":"                }"},{"142":"            }"},{"143":"        }"},{"144":"        "},{"145":"        // 선거구에 포함되어야 하는 정점들이 방문되었는지 확인 "},{"146":"        for (int i=1; i<=N; i++) {"},{"147":"            if (se[i] && !visited[i]) {"},{"148":"                // 선거구에 포함되어야 하는데 방문하지 않았다면 "},{"149":"                return false;"},{"150":"            }"},{"151":"        }"},{"152":"        return true;"},{"153":"​"},{"154":"    }"},{"155":"    "},{"156":"    private static int computePopulation(boolean[] se) {"},{"157":"        int totalPop = 0;"},{"158":"        for (int i=1; i<=N; i++) {"},{"159":"            if (se[i]) {"},{"160":"                totalPop += pop[i];"},{"161":"            }"},{"162":"        }"},{"163":"        return totalPop;"},{"164":"        "},{"165":"    }"},{"166":"​"},{"167":"}"}]', 144, 15532, 'JAVA', '2024-02-15 10:37:25', '2024-02-15 10:37:25'),
        (18, 14051, 1, '[{"1":"import java.io.*;"},{"2":"import java.util.*;"},{"3":"​"},{"4":"public class Main {"},{"5":"    static int N, students, gender, num;"},{"6":"    static int[]switchArr;"},{"7":"    static int[] dy = {-1, 1};  // 좌, 우"},{"8":"    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));"},{"9":"    static StringTokenizer st = null;"},{"10":"    static StringBuilder sb = new StringBuilder();"},{"11":"    "},{"12":"    public static boolean isIn(int ly, int ry) {"},{"13":"        if(ly < 1 || ry >= N + 1) {"},{"14":"            return false;"},{"15":"        }"},{"16":"        return true;"},{"17":"    }"},{"18":"    "},{"19":"    public static void init() throws IOException {"},{"20":"        switchArr = new int[N + 1];"},{"21":"        st = new StringTokenizer(br.readLine());"},{"22":"        for(int i = 1; i <= N; i++) {"},{"23":"            switchArr[i] = Integer.parseInt(st.nextToken());"},{"24":"        }"},{"25":"    }"},{"26":"    "},{"27":"    public static void solve() throws IOException {"},{"28":"        st = new StringTokenizer(br.readLine());"},{"29":"        gender = Integer.parseInt(st.nextToken());"},{"30":"        num = Integer.parseInt(st.nextToken());"},{"31":"        if(gender == 1) {   // 남"},{"32":"            int cnt = 1;"},{"33":"            while(true) {"},{"34":"                if((num * cnt) > N) break;  // 배수 탐색 중 N을 넘는 경우"},{"35":"                switchArr[num * cnt] = switchArr[num * cnt] == 0 ? 1 : 0;"},{"36":"                // 배수 위치들 바꾸기"},{"37":"                cnt++;"},{"38":"            }"},{"39":"        } else {    // 여"},{"40":"            int cnt = 1;"},{"41":"            switchArr[num] = switchArr[num] == 0 ? 1 : 0;   // 본인이 뽑은 위치는 우선 무조건 바꿈"},{"42":"            while(true) {"},{"43":"                int ly = num - cnt;"},{"44":"                int ry = num + cnt;"},{"45":"                if(isIn(ly, ry) && switchArr[ly] == switchArr[ry]) {"},{"46":"                    switchArr[ly] = switchArr[ly] == 0 ? 1 : 0;"},{"47":"                    switchArr[ry] = switchArr[ry] == 0 ? 1 : 0;"},{"48":"                    cnt++;"},{"49":"                } else {"},{"50":"                    break;"},{"51":"                }"},{"52":"            }"},{"53":"        }"},{"54":"    }"},{"55":"    "},{"56":"    public static void main(String[] args) throws IOException {"},{"57":"        st = new StringTokenizer(br.readLine());"},{"58":"        N = Integer.parseInt(st.nextToken());"},{"59":"        init();"},{"60":"​"},{"61":"        st = new StringTokenizer(br.readLine());"},{"62":"        students = Integer.parseInt(st.nextToken());"},{"63":"        for(int i = 0; i < students; i++) {"},{"64":"            solve();"},{"65":"        }"},{"66":"        for(int i = 1; i <= N; i++) {"},{"67":"            sb.append(switchArr[i]);"},{"68":"            if(i % 20 == 0) {"},{"69":"                sb.append(''\\\\n'');"},{"70":"            } else {"},{"71":"                sb.append(\\" \\");"},{"72":"            }"},{"73":"        }"},{"74":"        System.out.print(sb.toString());"},{"75":"    }"},{"76":"}"}]', 80, 11588, 'JAVA', '2024-02-15 10:39:02', '2024-02-15 10:39:02'),
        (19, 14051, 1, '[{"1":"import java.io.*;"},{"2":"import java.util.*;"},{"3":"​"},{"4":"public class Main {"},{"5":"    static int N, students, gender, num;"},{"6":"    static int[]switchArr;"},{"7":"    static int[] dy = {-1, 1};  // 좌, 우"},{"8":"    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));"},{"9":"    static StringTokenizer st = null;"},{"10":"    static StringBuilder sb = new StringBuilder();"},{"11":"    "},{"12":"    public static boolean isIn(int ly, int ry) {"},{"13":"        if(ly < 1 || ry >= N + 1) {"},{"14":"            return false;"},{"15":"        }"},{"16":"        return true;"},{"17":"    }"},{"18":"    "},{"19":"    public static void init() throws IOException {"},{"20":"        switchArr = new int[N + 1];"},{"21":"        st = new StringTokenizer(br.readLine());"},{"22":"        for(int i = 1; i <= N; i++) {"},{"23":"            switchArr[i] = Integer.parseInt(st.nextToken());"},{"24":"        }"},{"25":"    }"},{"26":"    "},{"27":"    public static void solve() throws IOException {"},{"28":"        st = new StringTokenizer(br.readLine());"},{"29":"        gender = Integer.parseInt(st.nextToken());"},{"30":"        num = Integer.parseInt(st.nextToken());"},{"31":"        if(gender == 1) {   // 남"},{"32":"            int cnt = 1;"},{"33":"            while(true) {"},{"34":"                if((num * cnt) > N) break;  // 배수 탐색 중 N을 넘는 경우"},{"35":"                switchArr[num * cnt] = switchArr[num * cnt] == 0 ? 1 : 0;"},{"36":"                // 배수 위치들 바꾸기"},{"37":"                cnt++;"},{"38":"            }"},{"39":"        } else {    // 여"},{"40":"            int cnt = 1;"},{"41":"            switchArr[num] = switchArr[num] == 0 ? 1 : 0;   // 본인이 뽑은 위치는 우선 무조건 바꿈"},{"42":"            while(true) {"},{"43":"                int ly = num - cnt;"},{"44":"                int ry = num + cnt;"},{"45":"                if(isIn(ly, ry) && switchArr[ly] == switchArr[ry]) {"},{"46":"                    switchArr[ly] = switchArr[ly] == 0 ? 1 : 0;"},{"47":"                    switchArr[ry] = switchArr[ry] == 0 ? 1 : 0;"},{"48":"                    cnt++;"},{"49":"                } else {"},{"50":"                    break;"},{"51":"                }"},{"52":"            }"},{"53":"        }"},{"54":"    }"},{"55":"    "},{"56":"    public static void main(String[] args) throws IOException {"},{"57":"        st = new StringTokenizer(br.readLine());"},{"58":"        N = Integer.parseInt(st.nextToken());"},{"59":"        init();"},{"60":"​"},{"61":"        st = new StringTokenizer(br.readLine());"},{"62":"        students = Integer.parseInt(st.nextToken());"},{"63":"        for(int i = 0; i < students; i++) {"},{"64":"            solve();"},{"65":"        }"},{"66":"        for(int i = 1; i <= N; i++) {"},{"67":"            sb.append(switchArr[i]);"},{"68":"            if(i % 20 == 0) {"},{"69":"                sb.append(''\\\\n'');"},{"70":"            } else {"},{"71":"                sb.append(\\" \\");"},{"72":"            }"},{"73":"        }"},{"74":"        System.out.print(sb.toString());"},{"75":"    }"},{"76":"}"}]', 76, 11580, 'JAVA', '2024-02-15 10:41:29', '2024-02-15 10:41:29'),
        (20, 14051, 1, '[{"1":"import java.io.*;"},{"2":"import java.util.*;"},{"3":"​"},{"4":"public class Main {"},{"5":"    static int N, students, gender, num;"},{"6":"    static int[]switchArr;"},{"7":"    static int[] dy = {-1, 1};  // 좌, 우"},{"8":"    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));"},{"9":"    static StringTokenizer st = null;"},{"10":"    static StringBuilder sb = new StringBuilder();"},{"11":"    "},{"12":"    public static boolean isIn(int ly, int ry) {"},{"13":"        if(ly < 1 || ry >= N + 1) {"},{"14":"            return false;"},{"15":"        }"},{"16":"        return true;"},{"17":"    }"},{"18":"    "},{"19":"    public static void init() throws IOException {"},{"20":"        switchArr = new int[N + 1];"},{"21":"        st = new StringTokenizer(br.readLine());"},{"22":"        for(int i = 1; i <= N; i++) {"},{"23":"            switchArr[i] = Integer.parseInt(st.nextToken());"},{"24":"        }"},{"25":"    }"},{"26":"    "},{"27":"    public static void solve() throws IOException {"},{"28":"        st = new StringTokenizer(br.readLine());"},{"29":"        gender = Integer.parseInt(st.nextToken());"},{"30":"        num = Integer.parseInt(st.nextToken());"},{"31":"        if(gender == 1) {   // 남"},{"32":"            int cnt = 1;"},{"33":"            while(true) {"},{"34":"                if((num * cnt) > N) break;  // 배수 탐색 중 N을 넘는 경우"},{"35":"                switchArr[num * cnt] = switchArr[num * cnt] == 0 ? 1 : 0;"},{"36":"                // 배수 위치들 바꾸기"},{"37":"                cnt++;"},{"38":"            }"},{"39":"        } else {    // 여"},{"40":"            int cnt = 1;"},{"41":"            switchArr[num] = switchArr[num] == 0 ? 1 : 0;   // 본인이 뽑은 위치는 우선 무조건 바꿈"},{"42":"            while(true) {"},{"43":"                int ly = num - cnt;"},{"44":"                int ry = num + cnt;"},{"45":"                if(isIn(ly, ry) && switchArr[ly] == switchArr[ry]) {"},{"46":"                    switchArr[ly] = switchArr[ly] == 0 ? 1 : 0;"},{"47":"                    switchArr[ry] = switchArr[ry] == 0 ? 1 : 0;"},{"48":"                    cnt++;"},{"49":"                } else {"},{"50":"                    break;"},{"51":"                }"},{"52":"            }"},{"53":"        }"},{"54":"    }"},{"55":"    "},{"56":"    public static void main(String[] args) throws IOException {"},{"57":"        st = new StringTokenizer(br.readLine());"},{"58":"        N = Integer.parseInt(st.nextToken());"},{"59":"        init();"},{"60":"​"},{"61":"        st = new StringTokenizer(br.readLine());"},{"62":"        students = Integer.parseInt(st.nextToken());"},{"63":"        for(int i = 0; i < students; i++) {"},{"64":"            solve();"},{"65":"        }"},{"66":"        for(int i = 1; i <= N; i++) {"},{"67":"            sb.append(switchArr[i]);"},{"68":"            if(i % 20 == 0) {"},{"69":"                sb.append(''\\\\n'');"},{"70":"            } else {"},{"71":"                sb.append(\\" \\");"},{"72":"            }"},{"73":"        }"},{"74":"        System.out.print(sb.toString());"},{"75":"    }"},{"76":"}"}]', 76, 11616, 'JAVA', '2024-02-15 10:43:19', '2024-02-15 10:43:19'),
        (21, 14051, 5, '[{"1":"import java.io.*;"},{"2":"import java.util.*;"},{"3":"​"},{"4":"public class Main {"},{"5":"    static int N, students, gender, num;"},{"6":"    static int[]switchArr;"},{"7":"    static int[] dy = {-1, 1};  // 좌, 우"},{"8":"    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));"},{"9":"    static StringTokenizer st = null;"},{"10":"    static StringBuilder sb = new StringBuilder();"},{"11":"    "},{"12":"    public static boolean isIn(int ly, int ry) {"},{"13":"        if(ly < 1 || ry >= N + 1) {"},{"14":"            return false;"},{"15":"        }"},{"16":"        return true;"},{"17":"    }"},{"18":"    "},{"19":"    public static void init() throws IOException {"},{"20":"        switchArr = new int[N + 1];"},{"21":"        st = new StringTokenizer(br.readLine());"},{"22":"        for(int i = 1; i <= N; i++) {"},{"23":"            switchArr[i] = Integer.parseInt(st.nextToken());"},{"24":"        }"},{"25":"    }"},{"26":"    "},{"27":"    public static void solve() throws IOException {"},{"28":"        st = new StringTokenizer(br.readLine());"},{"29":"        gender = Integer.parseInt(st.nextToken());"},{"30":"        num = Integer.parseInt(st.nextToken());"},{"31":"        if(gender == 1) {   // 남"},{"32":"            int cnt = 1;"},{"33":"            while(true) {"},{"34":"                if((num * cnt) > N) break;  // 배수 탐색 중 N을 넘는 경우"},{"35":"                switchArr[num * cnt] = switchArr[num * cnt] == 0 ? 1 : 0;"},{"36":"                // 배수 위치들 바꾸기"},{"37":"                cnt++;"},{"38":"            }"},{"39":"        } else {    // 여"},{"40":"            int cnt = 1;"},{"41":"            switchArr[num] = switchArr[num] == 0 ? 1 : 0;   // 본인이 뽑은 위치는 우선 무조건 바꿈"},{"42":"            while(true) {"},{"43":"                int ly = num - cnt;"},{"44":"                int ry = num + cnt;"},{"45":"                if(isIn(ly, ry) && switchArr[ly] == switchArr[ry]) {"},{"46":"                    switchArr[ly] = switchArr[ly] == 0 ? 1 : 0;"},{"47":"                    switchArr[ry] = switchArr[ry] == 0 ? 1 : 0;"},{"48":"                    cnt++;"},{"49":"                } else {"},{"50":"                    break;"},{"51":"                }"},{"52":"            }"},{"53":"        }"},{"54":"    }"},{"55":"    "},{"56":"    public static void main(String[] args) throws IOException {"},{"57":"        st = new StringTokenizer(br.readLine());"},{"58":"        N = Integer.parseInt(st.nextToken());"},{"59":"        init();"},{"60":"​"},{"61":"        st = new StringTokenizer(br.readLine());"},{"62":"        students = Integer.parseInt(st.nextToken());"},{"63":"        for(int i = 0; i < students; i++) {"},{"64":"            solve();"},{"65":"        }"},{"66":"        for(int i = 1; i <= N; i++) {"},{"67":"            sb.append(switchArr[i]);"},{"68":"            if(i % 20 == 0) {"},{"69":"                sb.append(''\\\\n'');"},{"70":"            } else {"},{"71":"                sb.append(\\" \\");"},{"72":"            }"},{"73":"        }"},{"74":"        System.out.print(sb.toString());"},{"75":"    }"},{"76":"}"}]', 80, 11588, 'JAVA', '2024-02-15 10:48:20', '2024-02-15 10:48:20'),
        (22, 14097, 6, '[{"1":"L = int(input())"},{"2":"N = int(input())"},{"3":"arr = [0 for _ in range(L + 1)]"},{"4":"mx = 0 "},{"5":"mx_i = 0"},{"6":"for n in range(N):"},{"7":"    P, K = map(int, input().split())"},{"8":"    if K - P > mx:  "},{"9":"        mx_i = n + 1"},{"10":"        mx = K - P"},{"11":"    for i in range(P, K + 1):"},{"12":"        if arr[i] == 0:  "},{"13":"            arr[i] = n + 1"},{"14":"print(mx_i)  "},{"15":"real = 0"},{"16":"real_i = 0 "},{"17":"for i in range(1, N + 1):"},{"18":"    x = arr.count(i)"},{"19":"    if x > real:"},{"20":"        real = x"},{"21":"        real_i = i"},{"22":"print(real_i) "}]', 92, 31120, 'PYTHON', '2024-02-15 12:16:29', '2024-02-15 12:16:29'),
        (23, 11171, 5, '[{"1":"import java.io.*;"},{"2":"import java.util.*;"},{"3":"​"},{"4":"public class Main {"},{"5":"    static int[][]graph;"},{"6":"    static boolean[] visited;"},{"7":"    static int N, M, V; // 정점 개수, 간선 개수, 탐택 시작 정점 번호"},{"8":"    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));"},{"9":"    static StringTokenizer st;"},{"10":"    static StringBuilder sb = new StringBuilder();"},{"11":"    "},{"12":"    public static void graphInit() throws IOException {"},{"13":"        graph = new int[N + 1][N + 1];"},{"14":"        for(int i = 0; i < M; i++) {"},{"15":"            st = new StringTokenizer(br.readLine());"},{"16":"            int first = Integer.parseInt(st.nextToken());"},{"17":"            int second = Integer.parseInt(st.nextToken());"},{"18":"            graph[first][second] = graph[second][first] = 1;"},{"19":"        }"},{"20":"    }"},{"21":"​"},{"22":"    public static void DFS(int start) {"},{"23":"        visited[start] = true;"},{"24":"        sb.append(start + \\" \\");"},{"25":"        "},{"26":"        for(int i = 1; i <= N; i++) {"},{"27":"          if(graph[start][i] == 1 && !visited[i]) {"},{"28":"            DFS(i);"},{"29":"          }"},{"30":"        }"},{"31":"    }"},{"32":"    "},{"33":"    public static void BFS() {"},{"34":"        Queue<Integer> queue = new LinkedList<>();"},{"35":"        queue.offer(V);"},{"36":"        visited[V] = true;"},{"37":"        sb.append(V + \\" \\");"},{"38":"        "},{"39":"        while(!queue.isEmpty()) {"},{"40":"            int nextV = queue.poll();"},{"41":"            "},{"42":"            for(int i = 1; i <= N; i++) {"},{"43":"                if(graph[nextV][i] == 1 && !visited[i]) {"},{"44":"                    queue.offer(i);"},{"45":"                    visited[i] = true;"},{"46":"                    sb.append(i + \\" \\");"},{"47":"                }"},{"48":"            }"},{"49":"        }"},{"50":"    }"},{"51":"    "},{"52":"    public static void main(String[] args) throws IOException {"},{"53":"        st = new StringTokenizer(br.readLine());"},{"54":"        N = Integer.parseInt(st.nextToken());"},{"55":"        M = Integer.parseInt(st.nextToken());"},{"56":"        V = Integer.parseInt(st.nextToken());"},{"57":"        graphInit();"},{"58":"        "},{"59":"        visited = new boolean[N + 1];"},{"60":"        DFS(V);"},{"61":"        sb.append(''\\\\n'');"},{"62":"        "},{"63":"        visited = new boolean[N + 1];"},{"64":"        BFS();"},{"65":"        System.out.print(sb.toString());"},{"66":"    }"},{"67":"}"},{"68":"​"}]', 200, 20436, 'JAVA', '2024-02-15 15:19:39', '2024-02-15 15:19:39'),
        (24, 7, 6, '[{"1":"T = int(input())"},{"2":"​"},{"3":"for _ in range(T):"},{"4":"    a, b = map(int, input().split())"},{"5":"    a = a % 10"},{"6":"    "},{"7":"    if a == 0:"},{"8":"        print(10)"},{"9":"    elif a == 1 or a == 5 or a == 6:"},{"10":"        print(a)"},{"11":"    elif a == 4 or a == 9:"},{"12":"        b = b % 2"},{"13":"        if b == 1:"},{"14":"            print(a)"},{"15":"        else:"},{"16":"            print((a * a) % 10)"},{"17":"    else:"},{"18":"        b = b % 4"},{"19":"        if b == 0:"},{"20":"            print((a**4) % 10 % 10 % 10)"},{"21":"        else:"},{"22":"            print((a**b) % 10 % 10 % 10)"}]', 80, 31120, 'PYTHON', '2024-02-15 15:29:33', '2024-02-15 15:29:33'),
        (25, 16160, 6, '[{"1":"​"}]', 52, 31120, 'PYTHON', '2024-02-15 16:09:30', '2024-02-15 16:09:30'),
        (26, 16174, 6, '[{"1":"#include <iostream>"},{"2":"#include <cstring>"},{"3":"using namespace std;"},{"4":"​"},{"5":"int n = 0, result = 0,sum=0;"},{"6":"int arr[6] = { 0, };"},{"7":"long long dp[11][11][11][11][11][6][6] = { 0, };"},{"8":"​"},{"9":"long long solved(int prefer, int current,int cnt) {"},{"10":"    if (cnt == sum) {"},{"11":"        return 1;"},{"12":"    }"},{"13":"    "},{"14":"    long long &ret = dp[arr[1]][arr[2]][arr[3]][arr[4]][arr[5]][prefer][current];"},{"15":"    if (ret != -1)"},{"16":"        return ret;"},{"17":"    ret = 0;"},{"18":"    for (int i = 1; i <= n; i++) {"},{"19":"        if (prefer != i && current != i && arr[i]) {"},{"20":"            arr[i]--;"},{"21":"            ret += solved(current, i, cnt+1);"},{"22":"            arr[i]++;"},{"23":"        }"},{"24":"​"},{"25":"    }"},{"26":"​"},{"27":"    return ret;"},{"28":"}"},{"29":"​"},{"30":"int main() {"},{"31":"    cin >> n;"},{"32":"    for (int i = 1; i <= n; i++) {"},{"33":"        cin >> arr[i];"},{"34":"        sum += arr[i];"},{"35":"    }"},{"36":"    memset(dp, -1, sizeof(dp));"},{"37":"    cout << solved(0, 0, 0) << endl;"},{"38":"​"},{"39":"    return 0;"},{"40":"}"}]', 44, 47316, 'CPP', '2024-02-15 16:23:39', '2024-02-15 16:23:39'),
        (27, 16187, 6, '[{"1":"​"}]', 992, 38592, 'PYTHON', '2024-02-15 16:27:33', '2024-02-15 16:27:33'),
        (28, 7, 6, '[{"1":"T = int(input())"},{"2":"​"},{"3":"for _ in range(T):"},{"4":"    a, b = map(int, input().split())"},{"5":"    a = a % 10"},{"6":"    "},{"7":"    if a == 0:"},{"8":"        print(10)"},{"9":"    elif a == 1 or a == 5 or a == 6:"},{"10":"        print(a)"},{"11":"    elif a == 4 or a == 9:"},{"12":"        b = b % 2"},{"13":"        if b == 1:"},{"14":"            print(a)"},{"15":"        else:"},{"16":"            print((a * a) % 10)"},{"17":"    else:"},{"18":"        b = b % 4"},{"19":"        if b == 0:"},{"20":"            print((a**4) % 10 % 10 % 10)"},{"21":"        else:"},{"22":"            print((a**b) % 10 % 10 % 10)"}]', 76, 31120, 'PYTHON', '2024-02-15 20:54:10', '2024-02-15 20:54:10'),
        (29, 7, 6, '[{"1":"T = int(input())"},{"2":"​"},{"3":"for _ in range(T):"},{"4":"    a, b = map(int, input().split())"},{"5":"    a = a % 10"},{"6":"    "},{"7":"    if a == 0:"},{"8":"        print(10)"},{"9":"    elif a == 1 or a == 5 or a == 6:"},{"10":"        print(a)"},{"11":"    elif a == 4 or a == 9:"},{"12":"        b = b % 2"},{"13":"        if b == 1:"},{"14":"            print(a)"},{"15":"        else:"},{"16":"            print((a * a) % 10)"},{"17":"    else:"},{"18":"        b = b % 4"},{"19":"        if b == 0:"},{"20":"            print((a**4) % 10 % 10 % 10)"},{"21":"        else:"},{"22":"            print((a**b) % 10 % 10 % 10)"}]', 76, 31120, 'PYTHON', '2024-02-15 20:54:10', '2024-02-15 20:54:10'),
        (30, 4, 6, '[{"1":"import sys"},{"2":"import math"},{"3":"import itertools"},{"4":"# import random"},{"5":"T = int(sys.stdin.readline())"},{"6":"results = []"},{"7":"​"},{"8":"for _ in range(T):"},{"9":"    N = int(sys.stdin.readline())"},{"10":"    coords = []"},{"11":"    "},{"12":"    # 모든 좌표들의 총합"},{"13":"    x_total = 0"},{"14":"    y_total = 0"},{"15":"    for _ in range(N):"},{"16":"        x, y = map(int, sys.stdin.readline().split())"},{"17":"        x_total += x"},{"18":"        y_total += y"},{"19":"        coords.append([x, y])"},{"20":"    "},{"21":"    res = math.inf"},{"22":"    combinations = list(itertools.combinations(coords, int(N/2)))"},{"23":"    combinations_len_half = int(len(combinations) / 2)"},{"24":"    for sum_coord in combinations[:combinations_len_half]:"},{"25":"        sum_coord = list(sum_coord)"},{"26":"​"},{"27":"        # 더해야하는 좌표 총합"},{"28":"        x1_total = 0"},{"29":"        y1_total = 0"},{"30":"        for x1, y1 in sum_coord:"},{"31":"            x1_total += x1"},{"32":"            y1_total += y1"},{"33":"        "},{"34":"        # 빼야하는 좌표 총합(= 모든 좌표들의 총합 - 더해야하는 좌표 총합)"},{"35":"        x2_total = x_total - x1_total"},{"36":"        y2_total = y_total - y1_total"},{"37":"        "},{"38":"        res = min(res, math.sqrt((x1_total - x2_total) ** 2 + (y1_total - y2_total) ** 2))"},{"39":"​"},{"40":"    results.append(res)"},{"41":"​"},{"42":"for result in results:"},{"43":"    sys.stdout.write(str(result)+''\\\\n'')"}]', 5216, 84440, 'PYTHON', '2024-02-15 21:01:08', '2024-02-15 21:01:08'),
        (31, 4, 6, '[{"1":"import sys"},{"2":"import math"},{"3":"import itertools"},{"4":"# import random"},{"5":"T = int(sys.stdin.readline())"},{"6":"results = []"},{"7":"​"},{"8":"for _ in range(T):"},{"9":"    N = int(sys.stdin.readline())"},{"10":"    coords = []"},{"11":"    "},{"12":"    # 모든 좌표들의 총합"},{"13":"    x_total = 0"},{"14":"    y_total = 0"},{"15":"    for _ in range(N):"},{"16":"        x, y = map(int, sys.stdin.readline().split())"},{"17":"        x_total += x"},{"18":"        y_total += y"},{"19":"        coords.append([x, y])"},{"20":"    "},{"21":"    res = math.inf"},{"22":"    combinations = list(itertools.combinations(coords, int(N/2)))"},{"23":"    combinations_len_half = int(len(combinations) / 2)"},{"24":"    for sum_coord in combinations[:combinations_len_half]:"},{"25":"        sum_coord = list(sum_coord)"},{"26":"​"},{"27":"        # 더해야하는 좌표 총합"},{"28":"        x1_total = 0"},{"29":"        y1_total = 0"},{"30":"        for x1, y1 in sum_coord:"},{"31":"            x1_total += x1"},{"32":"            y1_total += y1"},{"33":"        "},{"34":"        # 빼야하는 좌표 총합(= 모든 좌표들의 총합 - 더해야하는 좌표 총합)"},{"35":"        x2_total = x_total - x1_total"},{"36":"        y2_total = y_total - y1_total"},{"37":"        "},{"38":"        res = min(res, math.sqrt((x1_total - x2_total) ** 2 + (y1_total - y2_total) ** 2))"},{"39":"​"},{"40":"    results.append(res)"},{"41":"​"},{"42":"for result in results:"},{"43":"    sys.stdout.write(str(result)+''\\\\n'')"}]', 5216, 84440, 'PYTHON', '2024-02-15 21:01:08', '2024-02-15 21:01:08'),
        (32, 11888, 6, '[{"1":"from collections import deque"},{"2":"​"},{"3":"def BFS(x,y):"},{"4":"    q.append((x,y))"},{"5":"    dx = [-1,0,1,0]"},{"6":"    dy = [0,1,0,-1]"},{"7":"    visited[x][y] = 1"},{"8":"    while q:"},{"9":"        x, y = q.popleft()"},{"10":"        for d in range(4):"},{"11":"            nx = x + dx[d]"},{"12":"            ny = y + dy[d]"},{"13":"            # 인덱스 범위 안에 있으면서, 같은 색이면서, 방문 안한 경우"},{"14":"            if 0<=nx<N and 0<=ny<N and a[nx][ny] == a[x][y] and not visited[nx][ny]:"},{"15":"                visited[nx][ny] = 1  # 방문체크 후 큐에 넣음"},{"16":"                q.append((nx,ny))"},{"17":"​"},{"18":"​"},{"19":"N = int(input())"},{"20":"a = [list(input()) for _ in range(N)]"},{"21":"q = deque()"},{"22":"​"},{"23":"# 적록색약 아닌 경우"},{"24":"visited = [[0] * N for _ in range(N)]"},{"25":"cnt1 = 0"},{"26":"for i in range(N):"},{"27":"    for j in range(N):"},{"28":"        if not visited[i][j]:  # 아직 방문 안한 경우만 체킹"},{"29":"            BFS(i,j)"},{"30":"            cnt1 += 1"},{"31":"​"},{"32":"# 적록색약인 경우"},{"33":"for i in range(N):"},{"34":"    for j in range(N):"},{"35":"        if a[i][j] == ''G'':"},{"36":"            a[i][j] = ''R''"},{"37":"​"},{"38":"visited = [[0] * N for _ in range(N)]"},{"39":"cnt2 = 0"},{"40":"for i in range(N):"},{"41":"    for j in range(N):"},{"42":"        if not visited[i][j]:"},{"43":"            BFS(i,j)"},{"44":"            cnt2 += 1"},{"45":"​"},{"46":"print(cnt1, cnt2)"}]', 84, 34096, 'PYTHON', '2024-02-15 21:02:19', '2024-02-15 21:02:19'),
        (33, 14336, 5, '[{"1":"import java.io.*;"},{"2":"import java.util.*;"},{"3":"​"},{"4":"public class Main {"},{"5":"    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));"},{"6":"    static StringTokenizer st;"},{"7":"    static ArrayList wheel[] = new ArrayList[4];"},{"8":"    static int N, checkTurn[];"},{"9":"    static Select selectList[];"},{"10":"​"},{"11":"    static class Select {"},{"12":"        int select, dir;"},{"13":"        Select(int select, int dir) {"},{"14":"            this.select = select;"},{"15":"            this.dir = dir;"},{"16":"        }"},{"17":"    }"},{"18":"​"},{"19":"    public static void main(String[] args) throws IOException {"},{"20":"        run();"},{"21":"    }"},{"22":"​"},{"23":"    static void run() throws IOException {"},{"24":"        init();"},{"25":"        for(int i = 0; i < N; i++) {"},{"26":"            checkTurn = new int[4];"},{"27":"            setCheckTurn(selectList[i], 1);"},{"28":"            setCheckTurn(selectList[i], -1);"},{"29":"            runTurn();"},{"30":"        }"},{"31":"        System.out.println(solve());"},{"32":"    }"},{"33":"​"},{"34":"    static void init() throws IOException {"},{"35":"        for(int i = 0; i < 4; i++) {"},{"36":"            String str = br.readLine();"},{"37":"            wheel[i] = new ArrayList<>();"},{"38":"            for(int k = 0; k < str.length(); k++) {"},{"39":"                wheel[i].add(str.charAt(k) - ''0'');"},{"40":"            }"},{"41":"        }"},{"42":"        N = Integer.parseInt(br.readLine());"},{"43":"        selectList = new Select[N];"},{"44":"        for(int i = 0; i < N; i++) {"},{"45":"            st = new StringTokenizer(br.readLine());"},{"46":"            int select = Integer.parseInt(st.nextToken()) - 1;"},{"47":"            int dir = Integer.parseInt(st.nextToken());"},{"48":"            selectList[i] = new Select(select, dir);"},{"49":"        }"},{"50":"    }"},{"51":"​"},{"52":"    static void setCheckTurn(Select s, int d) {"},{"53":"        checkTurn[s.select] = s.dir;"},{"54":"        int next = s.select, cur;"},{"55":"        while(true) {"},{"56":"            cur = next;"},{"57":"            next = next + d;"},{"58":"            if(!isIn(next)) break;"},{"59":"            if(wheel[cur].get(d == 1 ? 2 : 6) != wheel[next].get(d == 1 ? 6 : 2)) checkTurn[next] = checkTurn[cur] * -1;"},{"60":"            else break;"},{"61":"        }"},{"62":"    }"},{"63":"​"},{"64":"    static void runTurn() {"},{"65":"        for(int i = 0; i < 4; i++) {"},{"66":"            if(checkTurn[i] == 0) continue;"},{"67":"            int tmp;"},{"68":"            int dir = checkTurn[i];"},{"69":"            tmp = (int) wheel[i].get(dir == 1 ? 7 : 0);"},{"70":"            wheel[i].remove(dir == 1 ? 7 : 0);"},{"71":"            wheel[i].add(dir == 1 ? 0 : 7, tmp);"},{"72":"        }"},{"73":"    }"},{"74":"​"},{"75":"    static int solve() {"},{"76":"        int sum = 0;"},{"77":"        for(int i = 0; i < 4; i++) {"},{"78":"            if((int) wheel[i].get(0) == 1) sum += Math.pow(2, i);"},{"79":"        }"},{"80":"        return sum;"},{"81":"    }"},{"82":"​"},{"83":"    static boolean isIn(int next) {"},{"84":"        return next >= 0 && next < 4;"},{"85":"    }"},{"86":"}"},{"87":"​"}]', 84, 11660, 'JAVA', '2024-02-15 22:32:07', '2024-02-15 22:32:07'),
        (34, 14591, 6, '[{"1":"import java.io.*;"},{"2":"import java.util.*;"},{"3":"​"},{"4":"public class Main {"},{"5":"    public static void main(String[] args) throws IOException {"},{"6":"        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));"},{"7":"        StringTokenizer st = new StringTokenizer(br.readLine());"},{"8":"​"},{"9":"        int n = Integer.parseInt(st.nextToken());"},{"10":"        int m = Integer.parseInt(st.nextToken());"},{"11":"        int[] lessonList = new int[n];"},{"12":"​"},{"13":"        int left = 0;"},{"14":"        int right = 0;"},{"15":"        st = new StringTokenizer(br.readLine());"},{"16":"        for (int i = 0; i < n; i++) {"},{"17":"            lessonList[i] = Integer.parseInt(st.nextToken());"},{"18":"            right += lessonList[i];"},{"19":"            left = Math.max(left, lessonList[i]);"},{"20":"        }"},{"21":"​"},{"22":"        while (left <= right) {"},{"23":"            int mid = (left + right) / 2;"},{"24":"​"},{"25":"            int count = getCount(n, lessonList, mid);"},{"26":"​"},{"27":"            if(count > m){"},{"28":"                left = mid + 1;"},{"29":"            }else{"},{"30":"                right = mid - 1;"},{"31":"            }"},{"32":"        }"},{"33":"​"},{"34":"        System.out.println(left);"},{"35":"    }"},{"36":"​"},{"37":"    private static int getCount(int n, int[] lessonList, int mid) {"},{"38":"        int sum = 0;"},{"39":"        int count = 0;"},{"40":"        for (int i = 0; i < n; i++) {"},{"41":"            if (sum + lessonList[i] > mid) {"},{"42":"                sum = 0;"},{"43":"                count++;"},{"44":"            }"},{"45":"            sum += lessonList[i];"},{"46":"        }"},{"47":"​"},{"48":"        if(sum != 0) count++;"},{"49":"        return count;"},{"50":"    }"},{"51":"}"}]', 340, 24112, 'JAVA', '2024-02-15 23:12:53', '2024-02-15 23:12:53'),
        (35, 14591, 6, '[{"1":"import java.io.*;"},{"2":"import java.util.*;"},{"3":"​"},{"4":"public class Main {"},{"5":"    public static void main(String[] args) throws IOException {"},{"6":"        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));"},{"7":"        StringTokenizer st = new StringTokenizer(br.readLine());"},{"8":"​"},{"9":"        int n = Integer.parseInt(st.nextToken());"},{"10":"        int m = Integer.parseInt(st.nextToken());"},{"11":"        int[] lessonList = new int[n];"},{"12":"​"},{"13":"        int left = 0;"},{"14":"        int right = 0;"},{"15":"        st = new StringTokenizer(br.readLine());"},{"16":"        for (int i = 0; i < n; i++) {"},{"17":"            lessonList[i] = Integer.parseInt(st.nextToken());"},{"18":"            right += lessonList[i];"},{"19":"            left = Math.max(left, lessonList[i]);"},{"20":"        }"},{"21":"​"},{"22":"        while (left <= right) {"},{"23":"            int mid = (left + right) / 2;"},{"24":"​"},{"25":"            int count = getCount(n, lessonList, mid);"},{"26":"​"},{"27":"            if(count > m){"},{"28":"                left = mid + 1;"},{"29":"            }else{"},{"30":"                right = mid - 1;"},{"31":"            }"},{"32":"        }"},{"33":"​"},{"34":"        System.out.println(left);"},{"35":"    }"},{"36":"​"},{"37":"    private static int getCount(int n, int[] lessonList, int mid) {"},{"38":"        int sum = 0;"},{"39":"        int count = 0;"},{"40":"        for (int i = 0; i < n; i++) {"},{"41":"            if (sum + lessonList[i] > mid) {"},{"42":"                sum = 0;"},{"43":"                count++;"},{"44":"            }"},{"45":"            sum += lessonList[i];"},{"46":"        }"},{"47":"​"},{"48":"        if(sum != 0) count++;"},{"49":"        return count;"},{"50":"    }"},{"51":"}"}]', 324, 23632, 'JAVA', '2024-02-15 23:24:13', '2024-02-15 23:24:13'),
        (36, 14336, 5, '[{"1":"import java.io.*;"},{"2":"import java.util.*;"},{"3":"​"},{"4":"public class Main {"},{"5":"    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));"},{"6":"    static StringTokenizer st;"},{"7":"    static ArrayList wheel[] = new ArrayList[4];"},{"8":"    static int N, checkTurn[];"},{"9":"    static Select selectList[];"},{"10":"​"},{"11":"    static class Select {"},{"12":"        int select, dir;"},{"13":"        Select(int select, int dir) {"},{"14":"            this.select = select;"},{"15":"            this.dir = dir;"},{"16":"        }"},{"17":"    }"},{"18":"​"},{"19":"    public static void main(String[] args) throws IOException {"},{"20":"        run();"},{"21":"    }"},{"22":"​"},{"23":"    static void run() throws IOException {"},{"24":"        init();"},{"25":"        for(int i = 0; i < N; i++) {"},{"26":"            checkTurn = new int[4];"},{"27":"            setCheckTurn(selectList[i], 1);"},{"28":"            setCheckTurn(selectList[i], -1);"},{"29":"            runTurn();"},{"30":"        }"},{"31":"        System.out.println(solve());"},{"32":"    }"},{"33":"​"},{"34":"    static void init() throws IOException {"},{"35":"        for(int i = 0; i < 4; i++) {"},{"36":"            String str = br.readLine();"},{"37":"            wheel[i] = new ArrayList<>();"},{"38":"            for(int k = 0; k < str.length(); k++) {"},{"39":"                wheel[i].add(str.charAt(k) - ''0'');"},{"40":"            }"},{"41":"        }"},{"42":"        N = Integer.parseInt(br.readLine());"},{"43":"        selectList = new Select[N];"},{"44":"        for(int i = 0; i < N; i++) {"},{"45":"            st = new StringTokenizer(br.readLine());"},{"46":"            int select = Integer.parseInt(st.nextToken()) - 1;"},{"47":"            int dir = Integer.parseInt(st.nextToken());"},{"48":"            selectList[i] = new Select(select, dir);"},{"49":"        }"},{"50":"    }"},{"51":"​"},{"52":"    static void setCheckTurn(Select s, int d) {"},{"53":"        checkTurn[s.select] = s.dir;"},{"54":"        int next = s.select, cur;"},{"55":"        while(true) {"},{"56":"            cur = next;"},{"57":"            next = next + d;"},{"58":"            if(!isIn(next)) break;"},{"59":"            if(wheel[cur].get(d == 1 ? 2 : 6) != wheel[next].get(d == 1 ? 6 : 2)) checkTurn[next] = checkTurn[cur] * -1;"},{"60":"            else break;"},{"61":"        }"},{"62":"    }"},{"63":"​"},{"64":"    static void runTurn() {"},{"65":"        for(int i = 0; i < 4; i++) {"},{"66":"            if(checkTurn[i] == 0) continue;"},{"67":"            int tmp;"},{"68":"            int dir = checkTurn[i];"},{"69":"            tmp = (int) wheel[i].get(dir == 1 ? 7 : 0);"},{"70":"            wheel[i].remove(dir == 1 ? 7 : 0);"},{"71":"            wheel[i].add(dir == 1 ? 0 : 7, tmp);"},{"72":"        }"},{"73":"    }"},{"74":"​"},{"75":"    static int solve() {"},{"76":"        int sum = 0;"},{"77":"        for(int i = 0; i < 4; i++) {"},{"78":"            if((int) wheel[i].get(0) == 1) sum += Math.pow(2, i);"},{"79":"        }"},{"80":"        return sum;"},{"81":"    }"},{"82":"​"},{"83":"    static boolean isIn(int next) {"},{"84":"        return next >= 0 && next < 4;"},{"85":"    }"},{"86":"}"},{"87":"​"}]', 80, 11652, 'JAVA', '2024-02-16 00:25:39', '2024-02-16 00:25:39'),
        (37, 14591, 6, '[{"1":"import java.io.*;"},{"2":"import java.util.*;"},{"3":"​"},{"4":"public class Main {"},{"5":"    public static void main(String[] args) throws IOException {"},{"6":"        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));"},{"7":"        StringTokenizer st = new StringTokenizer(br.readLine());"},{"8":"​"},{"9":"        int n = Integer.parseInt(st.nextToken());"},{"10":"        int m = Integer.parseInt(st.nextToken());"},{"11":"        int[] lessonList = new int[n];"},{"12":"​"},{"13":"        int left = 0;"},{"14":"        int right = 0;"},{"15":"        st = new StringTokenizer(br.readLine());"},{"16":"        for (int i = 0; i < n; i++) {"},{"17":"            lessonList[i] = Integer.parseInt(st.nextToken());"},{"18":"            right += lessonList[i];"},{"19":"            left = Math.max(left, lessonList[i]);"},{"20":"        }"},{"21":"​"},{"22":"        while (left <= right) {"},{"23":"            int mid = (left + right) / 2;"},{"24":"​"},{"25":"            int count = getCount(n, lessonList, mid);"},{"26":"​"},{"27":"            if(count > m){"},{"28":"                left = mid + 1;"},{"29":"            }else{"},{"30":"                right = mid - 1;"},{"31":"            }"},{"32":"        }"},{"33":"​"},{"34":"        System.out.println(left);"},{"35":"    }"},{"36":"​"},{"37":"    private static int getCount(int n, int[] lessonList, int mid) {"},{"38":"        int sum = 0;"},{"39":"        int count = 0;"},{"40":"        for (int i = 0; i < n; i++) {"},{"41":"            if (sum + lessonList[i] > mid) {"},{"42":"                sum = 0;"},{"43":"                count++;"},{"44":"            }"},{"45":"            sum += lessonList[i];"},{"46":"        }"},{"47":"​"},{"48":"        if(sum != 0) count++;"},{"49":"        return count;"},{"50":"    }"},{"51":"}"}]', 332, 23960, 'JAVA', '2024-02-16 01:09:42', '2024-02-16 01:09:42');