INSERT INTO problem (problem_id,platform,href,no,title,runtime,memory,difficulty,content,input,output,type) VALUES

                                                                                                                (3,'BAEKJOON','https://www.acmicpc.net/problem/1002',1002,'터렛','2초','128 MB',8,'<p>조규현과 백승환은 터렛에 근무하는 직원이다. 하지만 워낙 존재감이 없어서 인구수는 차지하지 않는다. 다음은 조규현과 백승환의 사진이다.</p>

<p style="text-align: center;"><img alt="" src=https://www.acmicpc.net/upload/201003/dfcmhrjj_142c3w76qg8_b.jpg" style="height: 135px; width: 136px;"></p>

<p>이석원은 조규현과 백승환에게 상대편 마린(류재명)의 위치를 계산하라는 명령을 내렸다. 조규현과 백승환은 각각 자신의 터렛 위치에서 현재 적까지의 거리를 계산했다.</p>

<p>조규현의 좌표 $(x_1, y_1)$와 백승환의 좌표 $(x_2, y_2)$가 주어지고, 조규현이 계산한 류재명과의 거리 $r_1$과 백승환이 계산한 류재명과의 거리 $r_2$가 주어졌을 때, 류재명이 있을 수 있는 좌표의 수를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 $T$가 주어진다. 각 테스트 케이스는 다음과 같이 이루어져 있다.</p>

<p>한 줄에 공백으로 구분 된 여섯 정수 $x_1$, $y_1$, $r_1$, $x_2$, $y_2$, $r_2$가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 류재명이 있을 수 있는 위치의 수를 출력한다. 만약 류재명이 있을 수 있는 위치의 개수가 무한대일 경우에는 $-1$ 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
0 0 13 40 0 37
0 0 3 0 7 4
1 1 1 1 1 5
','2
1
0
','MATH'),
                                                                                                                (5,'BAEKJOON','https://www.acmicpc.net/problem/1004',1004,'어린 왕자','2초','128 MB',8,'<p>어린 왕자는 소혹성 B-664에서 자신이 사랑하는 한 송이 장미를 위해 살아간다. 어느 날 장미가 위험에 빠지게 된 것을 알게 된 어린 왕자는, 장미를 구하기 위해 은하수를 따라 긴 여행을 하기 시작했다. 하지만 어린 왕자의 우주선은 그렇게 좋지 않아서 행성계 간의 이동을 최대한 피해서 여행해야 한다. 아래의 그림은 어린 왕자가 펼쳐본 은하수 지도의 일부이다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/upload/201003/dfcmhrjj_113gw6bcng2_b.gif" style="height: 285.833px; width: 364.167px;"></p>

<p>빨간 실선은 어린 왕자가 출발점에서 도착점까지 도달하는데 있어서 필요한 행성계 진입/이탈 횟수를 최소화하는 경로이며, 원은 행성계의 경계를 의미한다. 이러한 경로는 여러 개 존재할 수 있지만 적어도 3번의 행성계 진입/이탈이 필요하다는 것을 알 수 있다.</p>

<p>위와 같은 은하수 지도, 출발점, 도착점이 주어졌을 때 어린 왕자에게 필요한 최소의 행성계 진입/이탈 횟수를 구하는 프로그램을 작성해 보자. 행성계의 경계가 맞닿거나 서로 교차하는 경우는 없다. 또한, 출발점이나 도착점이 행성계 경계에 걸쳐진 경우 역시 입력으로 주어지지 않는다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에는 테스트 케이스의 개수 T가 주어진다. 그 다음 줄부터 각각의 테스트케이스에 대해 첫째 줄에 출발점 (x<sub>1</sub>, y<sub>1</sub>)과 도착점 (x<sub>2</sub>, y<sub>2</sub>)이 주어진다. 두 번째 줄에는 행성계의 개수 n이 주어지며, 세 번째 줄부터 n줄에 걸쳐 행성계의 중점과 반지름 (c<sub>x</sub>, c<sub>y</sub>, r)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 어린 왕자가 거쳐야&nbsp;할 최소의 행성계 진입/이탈 횟수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
-5 1 12 1
7
1 1 8
-3 -1 1
2 2 2
5 5 1
-4 5 1
12 1 1
12 1 2
-5 1 5 1
1
0 0 2
','3
0
','MATH'),
                                                                                                                (7,'BAEKJOON','https://www.acmicpc.net/problem/1009',1009,'분산처리','1초','128 MB',4,'<p>재용이는 최신 컴퓨터 10대를 가지고 있다. 어느 날 재용이는 많은 데이터를 처리해야 될 일이 생겨서 각 컴퓨터에 1번부터 10번까지의 번호를 부여하고, 10대의 컴퓨터가 다음과 같은&nbsp;방법으로 데이터들을 처리하기로 하였다.</p>

<p>1번 데이터는 1번 컴퓨터, 2번 데이터는 2번 컴퓨터, 3번 데이터는 3번 컴퓨터, ... ,</p>

<p>10번 데이터는 10번 컴퓨터, 11번 데이터는 1번 컴퓨터, 12번 데이터는 2번 컴퓨터, ...</p>

<p>총 데이터의 개수는 항상 a<sup>b</sup>개의 형태로 주어진다. 재용이는 문득 마지막 데이터가 처리될&nbsp;컴퓨터의 번호가 궁금해졌다. 이를 수행해주는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에는 테스트 케이스의 개수 T가 주어진다. 그 다음 줄부터 각각의 테스트 케이스에&nbsp;대해 정수 a와 b가 주어진다. (1 ≤ a < 100, 1 ≤ b < 1,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 마지막 데이터가 처리되는 컴퓨터의 번호를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1 6
3 7
6 2
7 100
9 635
','1
7
6
1
9
','MATH'),
                                                                                                                (8,'BAEKJOON','https://www.acmicpc.net/problem/1010',1010,'다리 놓기','0.5초(추가시간없음)','128 MB',6,'<p>재원이는 한 도시의 시장이 되었다. 이 도시에는&nbsp;도시를 동쪽과 서쪽으로 나누는 큰 일직선 모양의 강이 흐르고 있다.&nbsp;하지만 재원이는 다리가 없어서 시민들이 강을 건너는데 큰 불편을 겪고 있음을 알고 다리를 짓기로 결심하였다. 강 주변에서 다리를 짓기에 적합한 곳을 사이트라고 한다. 재원이는 강 주변을 면밀히 조사해 본 결과 강의 서쪽에는 N개의 사이트가 있고 동쪽에는 M개의 사이트가 있다는 것을 알았다. (N ≤ M)</p>

<p>재원이는 서쪽의 사이트와 동쪽의 사이트를 다리로 연결하려고 한다. (이때 한 사이트에는 최대 한 개의 다리만 연결될 수 있다.) 재원이는 다리를 최대한 많이 지으려고 하기 때문에 서쪽의 사이트 개수만큼 (N개) 다리를 지으려고 한다. 다리끼리는 서로 겹쳐질 수 없다고 할 때 다리를 지을 수 있는 경우의 수를 구하는 프로그램을 작성하라.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/201003/pic1.JPG" style="height:353px; width:329px"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에는 테스트 케이스의 개수 T가 주어진다. 그 다음 줄부터 각각의 테스트케이스에 대해 강의 서쪽과 동쪽에 있는 사이트의 개수 정수 N, M (0 < N ≤ M < 30)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 주어진 조건하에 다리를 지을 수 있는 경우의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
2 2
1 5
13 29
','1
5
67863915
','MATH'),
                                                                                                                (10,'BAEKJOON','https://www.acmicpc.net/problem/1016',1016,'제곱 ㄴㄴ 수','2초','512 MB',15,'<p>어떤 정수 X가 1보다 큰 제곱수로 나누어 떨어지지 않을 때, 그 수를 제곱ㄴㄴ수라고 한다. 제곱수는 정수의 제곱이다. min과 max가 주어지면, min보다 크거나 같고, max보다 작거나 같은 제곱ㄴㄴ수가 몇 개 있는지 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 min과 max가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 min보다 크거나 같고, max보다 작거나 같은 제곱ㄴㄴ수의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 10
','7
','MATH'),
                                                                                                                (12,'BAEKJOON','https://www.acmicpc.net/problem/1017',1017,'소수 쌍','2초','128 MB',18,'<p>지민이는 수의 리스트가 있을 때, 이를 짝지어 각 쌍의 합이 소수가 되게 하려고 한다. 예를 들어, {1, 4, 7, 10, 11, 12}가 있다고 하자. 지민이는 다음과 같이 짝지을 수 있다.</p>

<p>1 + 4 = 5,&nbsp;7 + 10 = 17,&nbsp;11 + 12 = 23</p>

<p>또는</p>

<p>1 + 10 = 11,&nbsp;4 + 7 = 11,&nbsp;11 + 12 = 23</p>

<p>수의 리스트가 주어졌을 때, 지민이가 모든 수를 다 짝지었을 때, 첫 번째 수와 어떤 수를 짝지었는지 오름차순으로 출력하는 프로그램을 작성하시오. 위의 예제에서 1 + 12 = 13으로 소수이다. 그러나, 남은 4개의 수를 합이 소수가 되게 짝지을 수 있는 방법이 없다. 따라서 위의 경우 정답은 4, 10이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 리스트의 크기 N이 주어진다. N은 50보다 작거나 같은 자연수이며, 짝수이다. 둘째 줄에 리스트에 들어있는 수가 주어진다. 리스트에 들어있는 수는 1,000보다 작거나 같은 자연수이며, 중복되지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 정답을 출력한다. 없으면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
1 4 7 10 11 12
','4 10
','MATH'),
                                                                                                                (13,'BAEKJOON','https://www.acmicpc.net/problem/1019',1019,'책 페이지','2초','128 MB',15,'<p>지민이는 전체 페이지의 수가 N인&nbsp;책이 하나 있다. 첫 페이지는 1 페이지이고, 마지막 페이지는 N 페이지이다. 각 숫자가 전체 페이지 번호에서 모두 몇 번 나오는지 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. N은 1,000,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 0이 총 몇 번 나오는지, 1이 총 몇 번 나오는지, ..., 9가 총 몇 번 나오는지를 공백으로 구분해 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','11
','1 4 1 1 1 1 1 1 1 1
','MATH'),
                                                                                                                (14,'BAEKJOON','https://www.acmicpc.net/problem/1022',1022,'소용돌이 예쁘게 출력하기','2초','128 MB',13,'<p>크기가 무한인 정사각형 모눈종이가 있다. 모눈종이의 각 정사각형은 행과 열의 쌍으로 표현할 수 있다.</p>

<p>이 모눈종이 전체를 양의 정수의&nbsp;소용돌이 모양으로 채울 것이다. 일단 숫자 1을 0행 0열에 쓴다. 그리고 나서 0행 1열에 숫자 2를 쓴다. 거기서 부터 소용돌이는 반시계 방향으로 시작된다. 다음 숫자는 다음과 같이 채우면 된다.</p>

<pre>    -3 -2 -1  0  1  2  3
    --------------------
-3 |37 36 35 34 33 32 31
-2 |38 17 16 15 14 13 30
-1 |39 18  5  4  3 12 29
 0 |40 19  6  1  2 11 28
 1 |41 20  7  8  9 10 27
 2 |42 21 22 23 24 25 26
 3 |43 44 45 46 47 48 49</pre>

<p>이 문제는 위와 같이 채운 것을 예쁘게 출력하면 된다. r<sub>1</sub>, c<sub>1</sub>, r<sub>2</sub>, c<sub>2</sub>가 입력으로 주어진다. r<sub>1</sub>, c<sub>1</sub>은 가장 왼쪽 위 칸이고, r<sub>2</sub>, c<sub>2</sub>는 가장 오른쪽 아래 칸이다.</p>

<p>예쁘게 출력한다는 것은 다음과 같이 출력하는 것이다.</p>

<ol>
	<li>출력은 r<sub>1</sub>행부터 r<sub>2</sub>행까지 차례대로 출력한다.</li>
	<li>각 원소는 공백으로 구분한다.</li>
	<li>모든 행은 같은 길이를 가져야 한다.</li>
	<li>공백의 길이는 최소로 해야 한다.</li>
	<li>모든 숫자의 길이(앞에 붙는 공백을 포함)는 같아야 한다.</li>
	<li>만약 수의 길이가 가장 길이가 긴 수보다 작다면, 왼쪽에서부터 공백을 삽입해 길이를 맞춘다.</li>
</ol>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 네 정수 r<sub>1</sub>, c<sub>1</sub>, r<sub>2</sub>, c<sub>2</sub>가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>r<sub>2</sub> - r<sub>1</sub> + 1개의 줄에 소용돌이를 예쁘게 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','-3 -3 2 0
','37 36 35 34
38 17 16 15
39 18  5  4
40 19  6  1
41 20  7  8
42 21 22 23
','MATH'),
                                                                                                                (16,'BAEKJOON','https://www.acmicpc.net/problem/1024',1024,'수열의 합','2초','128 MB',9,'<p>N과 L이 주어질 때, 합이 N이면서, 길이가 적어도 L인 가장 짧은 연속된 음이 아닌 정수 리스트를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 L이 주어진다. N은 1,000,000,000보다 작거나 같은 자연수이고, L은 2보다 크거나 같고, 100보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>만약 리스트의 길이가 100보다 작거나 같으면, 연속된 수를 첫째 줄에 공백으로 구분하여 출력한다. 만약 길이가 100보다 크거나 그러한 수열이 없을 때는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','18 2
','5 6 7
','MATH'),
                                                                                                                (20,'BAEKJOON','https://www.acmicpc.net/problem/1033',1033,'칵테일','2초','128 MB',14,'<p>august14는 세상에서 가장 맛있는 칵테일이다. 이 칵테일을 만드는 정확한 방법은 아직 세상에 공개되지 않았지만, 들어가는 재료 N개는 공개되어 있다.&nbsp;</p>

<p>경근이는 인터넷 검색을 통해서 재료 쌍 N-1개의 비율을 알아냈고, 이 비율을 이용해서 칵테일에 들어가는 전체 재료의 비율을 알아낼 수 있다.</p>

<p>총 재료 쌍 N-1개의 비율이 입력으로 주어진다. 이때, 칵테일을 만드는데 필요한 각 재료의 양을 구하는 프로그램을 작성하시오. 이때, 필요한 재료의 질량을 모두 더한 값이 최소가 되어야 한다. 칵테일을 만드는 재료의 양은 정수이고, 총 질량은 0보다 커야한다.</p>

<p>비율은 "a b p q"와 같은 형식이고, a번 재료의 질량을 b번 재료의 질량으로 나눈 값이 p/q라는 뜻이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 august14를 만드는데 필요한 재료의 개수 N이 주어지며, N은 10보다 작거나 같은 자연수이다.</p>

<p>둘째 줄부터 N-1개의 줄에는 재료 쌍의 비율이 한 줄에 하나씩 주어지는데, 문제 설명에 나온 형식인 "a b p q"로 주어진다. 재료는 0번부터 N-1까지이며, a와 b는 모두 N-1보다 작거나 같은 음이 아닌 정수이다. p와 q는 9보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 칵테일을 만드는데 필요한 각 재료의 질량을 0번 재료부터 순서대로 공백으로 구분해 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
4 0 1 1
4 1 3 1
4 2 5 1
4 3 7 1
','105 35 21 15 105
','MATH'),
                                                                                                                (4532,'BAEKJOON','https://www.acmicpc.net/problem/1036',1036,'36진수','2초','128 MB',15,'<p>36진법의 숫자는 0부터 9까지의 수와 알파벳 A에서 Z로 나타낸다. A부터 Z까지 알파벳은 10부터 35에 차례대로 대응한다.</p>

<p>36진법의 수 N개가 주어진다. 36진법 숫자(0-9, A-Z) 중에서 K개의 숫자를 고른다. 그러고 나서 N개의 수 모두에서 나타난 그 숫자를 Z로 바꾼다. 그 이후에 N개의 수를 모두 더한다.</p>

<p>이때 가능한 합의 최댓값을 구하는 프로그램을 작성하시오. 합의 최댓값도 36진수로 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 수의 개수 N이 주어진다. 둘째 줄부터 N개의 줄에 수가 주어진다. N은 최대 50이고, 수의 길이도 최대 50이다. 마지막 줄에 K가 주어진다. K는 36보다 작거나 같은 자연수 또는 0이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제의 정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
GOOD
LUCK
AND
HAVE
FUN
7
','31YUB
','MATH'),
                                                                                                                (21,'BAEKJOON','https://www.acmicpc.net/problem/1037',1037,'약수','2초','512 MB',5,'<p>양수 A가 N의 진짜 약수가 되려면, N이 A의 배수이고, A가 1과 N이 아니어야 한다.&nbsp;어떤 수 N의 진짜 약수가 모두 주어질 때, N을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N의 진짜 약수의 개수가 주어진다. 이 개수는 50보다 작거나 같은 자연수이다. 둘째 줄에는 N의 진짜 약수가 주어진다. 1,000,000보다 작거나 같고, 2보다 크거나 같은 자연수이고, 중복되지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 N을 출력한다. N은 항상 32비트 부호있는 정수로 표현할 수 있다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
4 2
','8
','MATH'),
                                                                                                                (22,'BAEKJOON','https://www.acmicpc.net/problem/1041',1041,'주사위','2초','128 MB',11,'<pre style="text-align: center;">    +---+
    | D |
+---+---+---+---+
| E | A | B | F |
+---+---+---+---+
    | C |
    +---+
</pre>

<p>주사위는 위와 같이 생겼다. 주사위의 여섯 면에는 수가 쓰여 있다. 위의 전개도를 수가 밖으로 나오게 접는다.</p>

<p>A, B, C, D, E,&nbsp;F에 쓰여 있는 수가 주어진다.</p>

<p>지민이는 현재 동일한 주사위를 N<sup>3</sup>개 가지고 있다. 이 주사위를 적절히 회전시키고 쌓아서, N×N×N크기의 정육면체를 만들려고 한다. 이 정육면체는 탁자위에 있으므로, 5개의 면만 보인다.</p>

<p>N과 주사위에 쓰여 있는 수가 주어질 때, 보이는 5개의 면에 쓰여&nbsp;있는 수의 합의 최솟값을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. 둘째 줄에 주사위에 쓰여 있는 수가 주어진다. 위의 그림에서 A, B, C, D, E, F에 쓰여 있는 수가 차례대로 주어진다. N은 1,000,000보다 작거나 같은 자연수이고, 쓰여 있는 수는 50보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제의 정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1 2 3 4 5 6
','36
','MATH'),
                                                                                                                (24,'BAEKJOON','https://www.acmicpc.net/problem/1052',1052,'물병','1초','512 MB',10,'<p>지민이는 N개의 물병을 가지고 있다. 각 물병에는 물을 무한대로 부을 수 있다. 처음에 모든 물병에는 물이 1리터씩 들어있다. 지민이는 이 물병을 또 다른 장소로 옮기려고 한다. 지민이는 한 번에 K개의 물병을 옮길 수 있다.&nbsp;하지만, 지민이는 물을 낭비하기는 싫고, 이동을 한 번보다 많이 하기는 싫다. 따라서, 지민이는 물병의 물을 적절히 재분배해서, K개를 넘지 않는 비어있지 않은 물병을 만들려고 한다.</p>

<p>물은 다음과 같이 재분배 한다.</p>

<blockquote>
<p>먼저 같은 양의 물이 들어있는 물병 두 개를 고른다. 그 다음에 한 개의 물병에 다른 한 쪽에 있는 물을 모두 붓는다. 이 방법을 필요한 만큼 계속 한다.</p>
</blockquote>

<p>이런 제약 때문에, N개로 K개를 넘지않는 비어있지 않은 물병을 만드는 것이 불가능할 수도 있다. 다행히도, 새로운 물병을 살 수 있다. 상점에서 사는 물병은 물이 1리터 들어있다.</p>

<p>예를 들어, N=3이고, K=1일 때를 보면, 물병 3개로 1개를 만드는 것이 불가능하다. 한 병을 또다른 병에 부으면, 2리터가 들어있는 물병 하나와, 1리터가 들어있는 물병 하나가 남는다. 만약 상점에서 한 개의 물병을 산다면, 2리터가 들어있는 물병 두 개를 만들 수 있고, 마지막으로 4리터가 들어있는 물병 한 개를 만들 수 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 K가 주어진다. N은 10<sup>7</sup>보다 작거나 같은 자연수이고, K는 1,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 상점에서 사야하는 물병의 최솟값을 출력한다. 만약 정답이 없을 경우에는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 1
','1
','MATH'),
                                                                                                                (25,'BAEKJOON','https://www.acmicpc.net/problem/1057',1057,'토너먼트','1초','512 MB',7,'<p>김지민은 N명이 참가하는 스타 토너먼트에 진출했다. 토너먼트는 다음과 같이 진행된다. 일단 N명의 참가자는 번호가 1번부터 N번까지 배정받는다. 그러고 난 후에 서로 인접한 번호끼리 스타를 한다. 이긴 사람은 다음 라운드에 진출하고, 진 사람은 그 라운드에서 떨어진다. 만약 그 라운드의 참가자가 홀수명이라면, 마지막 번호를 가진 참가자는 다음 라운드로 자동 진출한다. 다음 라운드에선 다시 참가자의 번호를 1번부터 매긴다. 이때, 번호를 매기는 순서는 처음 번호의 순서를 유지하면서 1번부터 매긴다. 이 말은 1번과 2번이 스타를 해서 1번이 진출하고, 3번과 4번이 스타를 해서 4번이 진출했다면, 4번은 다음 라운드에서 번호 2번을 배정받는다. 번호를 다시 배정받은 후에 한 명만 남을 때까지 라운드를 계속 한다.</p>

<p>마침 이 스타 대회에 임한수도 참가했다. 김지민은 갑자기 스타 대회에서 우승하는 욕심은 없어지고, 몇 라운드에서 임한수와 대결하는지 궁금해졌다. 일단 김지민과 임한수는 서로 대결하기 전까지 항상 이긴다고 가정한다. 1 라운드에서 김지민의 번호와 임한수의 번호가 주어질 때, 과연 김지민과 임한수가 몇 라운드에서 대결하는지 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 참가자의 수 N과 1 라운드에서 김지민의 번호와 임한수의 번호가 순서대로 주어진다. N은 2보다 크거나 같고, 100,000보다 작거나 같은 자연수이고, 김지민의 번호와 임한수의 번호는 N보다 작거나 같은 자연수이고, 서로 다르다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 김지민과 임한수가 대결하는 라운드 번호를 출력한다. 만약 서로 대결하지 않을 때는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','16 1 2
','1
','MATH'),
                                                                                                                (26,'BAEKJOON','https://www.acmicpc.net/problem/1059',1059,'좋은 구간','2초','128 MB',7,'<p>정수 집합 S가 주어졌을때, 다음 조건을 만족하는 구간 [A, B]를 좋은 구간이라고 한다.</p>

<ul>
	<li>A와 B는 양의 정수이고, A < B를 만족한다.</li>
	<li>A ≤ x ≤ B를 만족하는 모든 정수 x가 집합 S에 속하지 않는다.</li>
</ul>

<p>집합 S와 n이 주어졌을 때, n을 포함하는 좋은 구간의 개수를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 집합 S의 크기 L이 주어진다. 둘째 줄에는 집합에 포함된 정수가 주어진다. 셋째 줄에는 n이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에&nbsp;n을 포함하는 좋은&nbsp;구간의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 7 14 10
2
','4
','MATH'),
                                                                                                                (27,'BAEKJOON','https://www.acmicpc.net/problem/1060',1060,'좋은 수','2초','128 MB',15,'<p>정수 집합 S가 주어졌을때, 다음 조건을 만족하는 구간 [A, B]를 좋은 구간이라고 한다.</p>

<ul>
	<li>A와 B는 양의 정수이고, A < B를 만족한다.</li>
	<li>A ≤ x ≤ B를 만족하는 모든 정수 x가 집합 S에 속하지 않는다.</li>
</ul>

<p>정수 x를 포함하는 좋은 구간의 개수가 정수 y를 포함하는 좋은 구간의 개수보다 작으면 x는 y보다 더 좋다고 한다. x와 y를 포함하는 좋은 구간의 개수가 같거나, 구간의 개수가 둘 다 무한대와 같은 경우, 작은 수를 더 좋다고 한다.</p>

<p>집합 S가 주어지고, 이를 이용해 전체 정수를 더 좋은 수가 앞으로 오게 정렬했다고 가정하자. 앞에 오는 수 n개를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<section id="input">
<p>첫째 줄에 집합 S의 크기 L이 주어진다. 둘째 줄에는 집합에 포함된 정수가 주어진다. 셋째 줄에는 n이 주어진다.</p>
</section>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>상위 N개의 수를 공백으로 구분해 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
3
6
','3 1 2 4 5 6
','MATH'),
                                                                                                                (30,'BAEKJOON','https://www.acmicpc.net/problem/1064',1064,'평행사변형','2초','128 MB',7,'<p>평행사변형은 평행한 두 변을 가진 사각형이다. 세 개의 서로 다른 점이 주어진다. A(x<sub>A</sub>,y<sub>A</sub>), B(x<sub>B</sub>,y<sub>B</sub>), C(x<sub>C</sub>,y<sub>C</sub>)</p>

<p>이때, 적절히 점 D를 찾아서 네 점으로 평행사변형을 만들면 된다. 이때, D가 여러 개 나올 수도 있다.</p>

<p>만들어진 모든 사각형 중 가장 큰 둘레 길이와 가장 작은 둘레 길이의 차이를 출력하는 프로그램을 작성하시오. 만약 만들 수 있는 평행사변형이 없다면 -1을 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 x<sub>A</sub> y<sub>A</sub> x<sub>B</sub> y<sub>B</sub> x<sub>C</sub> y<sub>C</sub>가 주어진다. 모두 절댓값이 5000보다 작거나 같은 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제의 정답을 출력한다. 절대/상대 오차는 10<sup>-9</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','0 0 0 1 1 0
','0.8284271247461898
','MATH'),
                                                                                                                (28,'BAEKJOON','https://www.acmicpc.net/problem/1065',1065,'한수','2초','128 MB',7,'<p>어떤 양의 정수 X의 각 자리가 등차수열을 이룬다면, 그 수를 한수라고 한다. 등차수열은 연속된 두 개의 수의 차이가 일정한 수열을 말한다. N이 주어졌을 때, 1보다 크거나 같고, N보다 작거나 같은 한수의 개수를 출력하는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 1,000보다 작거나 같은 자연수 N이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 1보다 크거나 같고, N보다 작거나 같은 한수의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','110
','99
','MATH'),
                                                                                                                (29,'BAEKJOON','https://www.acmicpc.net/problem/1067',1067,'이동','1초','512 MB',20,'<p>N개의 수가 있는 X와 Y가 있다. 이때 X나 Y를 순환 이동시킬 수 있다. 순환 이동이란 마지막 원소를 제거하고 그 수를 맨 앞으로 다시 삽입하는 것을 말한다. 예를 들어, {1, 2, 3}을 순환 이동시키면 {3, 1, 2}가 될 것이고, {3, 1, 2}는 {2, 3, 1}이 된다. 순환 이동은 0번 또는 그 이상 할 수 있다. 이 모든 순환 이동을 한 후에 점수를 구하면 된다. 점수 S는 다음과 같이 구한다.</p>

<p>S = X[0]×Y[0] + X[1]×Y[1] + ... + X[N-1]×Y[N-1]</p>

<p>이때 S를 최대로 하면 된다.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. 둘째 줄에는 X에 들어있는 N개의 수가 주어진다. 셋째 줄에는 Y에 있는 수가 모두 주어진다. N은 60,000보다 작거나 같은 자연수이고, X와 Y에 들어있는 모든 수는 100보다 작은 자연수 또는 0이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 S의 최댓값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 2 3 4
6 7 8 5
','70
','MATH'),
                                                                                                                (31,'BAEKJOON','https://www.acmicpc.net/problem/1072',1072,'게임','2초','128 MB',8,'<p>김형택은 지금 몰래 Spider Solitaire(스파이더 카드놀이)를 하고 있다. 형택이는 이 게임을 이길 때도 있었지만, 질 때도 있었다. 누군가의 시선이 느껴진 형택이는 게임을 중단하고 코딩을 하기 시작했다. 의심을 피했다고 생각한 형택이는 다시 게임을 켰다. 그 때 형택이는 잠시 코딩을 하는 사이에 자신의 게임 실력이 눈에 띄게 향상된 것을 알았다.</p>

<p>이제 형택이는 앞으로의 모든 게임에서 지지 않는다. 하지만, 형택이는 게임 기록을 삭제 할 수 없기 때문에, 자신의 못하던 예전 기록이 현재 자신의 엄청난 실력을 증명하지 못한다고 생각했다.</p>

<p>게임 기록은 다음과 같이 생겼다.</p>

<ul>
	<li>게임 횟수 : X</li>
	<li>이긴 게임 : Y (Z%)</li>
	<li>Z는 형택이의 승률이고, 소수점은 버린다. 예를 들어, X=53, Y=47이라면, Z=88이다.</li>
</ul>

<p>X와 Y가 주어졌을 때, 형택이가 게임을 최소 몇 번 더 해야 Z가 변하는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>각 줄에 정수 X와 Y가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 형택이가 게임을 최소 몇 판 더 해야하는지 출력한다. 만약 Z가 절대 변하지 않는다면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10 8
','1
','MATH'),
                                                                                                                (32,'BAEKJOON','https://www.acmicpc.net/problem/1073',1073,'도미노','2초','128 MB',18,'<p>은진이는 도미노 게임을 좋아한다. 도미노는 직사각형 모양이고, 두 개의 정사각형으로 나누어져 있다. 그리고, 각 정사각형에는 0보다 크거나 같고, 9보다 작거나 같은 정수가 하나 쓰여 있다. 따라서, 가능한 모든 조각은 45조각이다. 조각은 뒤집을 수도 있어서, 숫자 1과 2가 포함된 조각은 다음과 같이 하나이다.</p>

<pre style="text-align: center;">+---+---+     +---+---+
| 1 | 2 |     | 2 | 1 |
+---+---+     +---+---+
</pre>

<p>안타깝게도, 장엄지가 조각 몇 개를 가지고 가버렸다. 따라서, 은진이는 은진이답게 남은 도미노 조각을 가지고 할 수 있는 게임을 생각했다. 바로 “남은 도미노 조각을 가지고 사이클 콜렉션을 만들 수 있을까?” 이다.</p>

<p>사이클 콜렉션이란, 조각을 공유하지 않는 1개 또는 그 이상의 사이클이 모인 집합이다. 사이클은 i번째 놓인 조각의 왼쪽 번호와 i-1번째 놓인 조각의 오른쪽 번호가 같은 것 끼리 배열한 것이다. 그리고, 가장 처음에 놓은 조각의 왼쪽 번호와 가장 마지막에 놓은 조각의 오른쪽 번호도 같아야 한다.</p>

<pre style="text-align: center;">+---+---++---+---++---+---++---+---++---+---++---+---+
| 1 | 2 || 2 | 5 || 5 | 4 || 4 | 2 || 2 | 8 || 8 | 1 |
+---+---++---+---++---+---++---+---++---+---++---+---+
+---+---++---+---++---+---++---+---++---+---++---+---+
| 1 | 2 || 2 | 4 || 4 | 5 || 5 | 2 || 2 | 8 || 8 | 1 |
+---+---++---+---++---+---++---+---++---+---++---+---+
+---+---++---+---++---+---+ +---+---++---+---++---+---+
| 1 | 2 || 2 | 8 || 8 | 1 | | 4 | 5 || 5 | 2 || 2 | 4 |
+---+---++---+---++---+---+ +---+---++---+---++---+---+
</pre>

<p>위의 그림은 같은 조각의 집합을 가지고 만들 수 있는 세 가지 사이클 콜렉션이다.</p>

<p>조각이 연결되어 있다는 말은, 조각을 둘러 싸고 있는 두 조각과 연결되어 있는 것이다. 물론, 처음 조각과 마지막 조각도 연결되어 있는 것이다.</p>

<p>두 사이클이 같다는 말은 각 조각이 두 사이클에서 같은 조각과 연결되어 있을 때이고, 두 사이클 콜렉션이 같다는 말은, 같은 사이클의 집합을 포함할 때이다.</p>

<p>남은 조각이 주어질 때, 사이클 콜렉션을 총 몇 개 만들 수 있는지 구하는 프로그램을 작성하시오. 조각은 모두 사용해야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 조각의 개수 N (1 ≤ N ≤ 45)이 주어진다. 둘째 줄부터 N개의 줄에는 각 조각이 주어진다. 조각은 2개의 숫자로 되어 있고, 앞에 있는 숫자는 항상 뒤에 있는 숫자보다 작다. 조각은 중복되지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 만들 수 있는 사이클 콜렉션의 개수를 출력한다. 이 값은 2<sup>63</sup>보다 작다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
12
25
45
24
28
18
','3
','MATH'),
                                                                                                                (33,'BAEKJOON','https://www.acmicpc.net/problem/1075',1075,'나누기','2초','128 MB',4,'<p>두 정수 N과 F가 주어진다. 지민이는 정수 N의 가장 뒤 두 자리를 적절히 바꿔서 N을 F로 나누어 떨어지게 만들려고 한다. 만약 가능한 것이 여러 가지이면, 뒤 두 자리를 가능하면 작게 만들려고 한다.</p>

<p>예를 들어, N=275이고, F=5이면, 답은 00이다. 200이 5로 나누어 떨어지기 때문이다.&nbsp;N=1021이고, F=11이면, 정답은 01인데, 1001이 11로 나누어 떨어지기 때문이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, 둘째 줄에&nbsp;F가 주어진다. N은 100보다 크거나 같고, 2,000,000,000보다 작거나 같은 자연수이다. F는 100보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 마지막 두 자리를 모두 출력한다. 한자리이면 앞에 0을 추가해서 두 자리로 만들어야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1000
3
','02
','MATH'),
                                                                                                                (34,'BAEKJOON','https://www.acmicpc.net/problem/1078',1078,'뒤집음','2초','128 MB',20,'<p>어떤 수를 뒤집는다는 것은 오른쪽부터 다시 쓰는것이다. 예를 들어, 1234를 뒤집으면 4321이 되고, 100을 뒤집으면 1이 된다. (앞에 0은 무시)</p>

<p>어떤 수 D가 주어질 때, x ? (x를 뒤집은 수)가 D가 되는 가장 작은 음이 아닌 정수 x를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 D가 주어진다. D는 1,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 가장 작은 x를 출력한다. 만약 그러한 x가 없다면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','18
','20
','MATH'),
                                                                                                                (35,'BAEKJOON','https://www.acmicpc.net/problem/1081',1081,'합','2초','128 MB',15,'<p>L보다 크거나 같고, U보다 작거나 같은 모든 정수의 각 자리의 합을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 L과 U이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제의 정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','0 3
','6
','MATH'),
                                                                                                                (36,'BAEKJOON','https://www.acmicpc.net/problem/1085',1085,'직사각형에서 탈출','2초','128 MB',3,'<p>한수는 지금 (x, y)에 있다. 직사각형은 각 변이 좌표축에 평행하고,&nbsp;왼쪽 아래 꼭짓점은 (0, 0), 오른쪽 위 꼭짓점은 (w, h)에 있다. 직사각형의 경계선까지 가는 거리의 최솟값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 x, y, w, h가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제의 정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 2 10 3
','1
','MATH'),
                                                                                                                (39,'BAEKJOON','https://www.acmicpc.net/problem/1089',1089,'스타트링크 타워','2초','128 MB',12,'<p>스타트링크 타워는 총 10<sup>N</sup>개 층이 있는 고층 건물이고, 0층부터 10<sup>N</sup>-1층으로 번호가 매겨져 있다. 층 번호를 숫자 N개로 표현한다. 숫자 N개로 층 번호를 표시할 수 없는 경우 앞에 0을 채운다.</p>

<p>숫자 1개를 표현하려면 전구 5×3개가 필요하고, 이 전구를 세로 크기 5, 가로 크기 3인 격자 형태로 배치한다. 다음은 0부터 9까지 숫자를 나타낸 것이다. #는 불이 켜져있는 전구, .는 불이 꺼져있는 전구이다.</p>

<pre>###...#.###.###.#.#.###.###.###.###.###
#.#...#...#...#.#.#.#...#.....#.#.#.#.#
#.#...#.###.###.###.###.###...#.###.###
#.#...#.#.....#...#...#.#.#...#.#.#...#
###...#.###.###...#.###.###...#.###.###</pre>

<p>엘리베이터에 있는&nbsp;층 번호 안내판의 상태가 주어진다. 안내판의 각 숫자는 불이 꺼져있는 전구 한 열로 구분되어 있다. 안내판의 일부 전구는 고장이 나서 항상 꺼져있는 상태이다. 꺼져있는 전구의 일부가 고장이 났다고 가정할 때, 현재 층 번호 안내판이 나타내고 있다고 볼 수 있는 모든 층 번호의 평균을 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. N은 9보다 작거나 같은 자연수이다. 둘째 줄부터 다섯 개의 줄에는 엘리베이터 층 번호 안내판의 상태가 주어진다. 각 문자열의 길이는 4N-1이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 층 번호 안내판이 나타내고 있다고 가정할 수 있는 모든 층 번호의 평균을&nbsp;출력한다. 만약, 가능한 층 번호가 없는 경우 -1을 출력한다.</p>

<p>정답과의 절대/상대 오차는 10<sup>-5</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
###
#.#
###
#.#
###
','8.0
','MATH'),
                                                                                                                (37,'BAEKJOON','https://www.acmicpc.net/problem/1094',1094,'막대기','2초','128 MB',6,'<p>지민이는 길이가 64cm인 막대를 가지고 있다. 어느 날, 그는 길이가 Xcm인 막대가 가지고 싶어졌다. 지민이는 원래 가지고 있던 막대를 더 작은 막대로 자른다음에, 풀로 붙여서 길이가 Xcm인 막대를 만들려고 한다.</p>

<p>막대를 자르는 가장 쉬운 방법은 절반으로 자르는 것이다. 지민이는 아래와 같은 과정을 거쳐서 막대를 자르려고 한다.</p>

<ol>
	<li>지민이가 가지고 있는 막대의 길이를 모두 더한다. 처음에는 64cm 막대 하나만 가지고&nbsp;있다. 이때, 합이 X보다 크다면, 아래와 같은 과정을 반복한다.
	<ol>
		<li>가지고 있는 막대 중 길이가 가장 짧은 것을 절반으로 자른다.</li>
		<li>만약, 위에서 자른 막대의 절반 중 하나를 버리고 남아있는 막대의 길이의 합이 X보다 크거나 같다면, 위에서 자른 막대의 절반 중 하나를 버린다.</li>
	</ol>
	</li>
	<li>이제, 남아있는 모든 막대를 풀로 붙여서 Xcm를 만든다.</li>
</ol>

<p>X가 주어졌을 때, 위의 과정을 거친다면, 몇 개의 막대를 풀로 붙여서 Xcm를 만들 수 있는지 구하는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 X가 주어진다. X는 64보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>문제의 과정을 거친다면, 몇 개의 막대를 풀로 붙여서 Xcm를 만들 수 있는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','23
','4
','MATH'),
                                                                                                                (40,'BAEKJOON','https://www.acmicpc.net/problem/1095',1095,'마법의 구슬','2초','128 MB',16,'<p>옛날에 백은진이라는 마법사가 S개의 마법의 구슬을 만들었다. 이 마법의 구슬은 함께 모여있을 때는, 상상을 초월하는 힘의 근원이 된다. 이것을 김지민과 같은 악당이 사용하는 것을 막기 위해 백은진은 F개의 가짜 구슬을 만들었다. 이 가짜 구슬은 마법의 구슬과 똑같이 생겼지만, 마법의 힘은 없다.</p>

<p>이제 김형택은 세계를 지배하기 위해 어떤 구슬이 진짜 구슬인지 알아야 한다. 따라서 김지민은 N명의 사람을 모아서, S+F개 중 모든 S개의 조합을 테스트하기로 했다.</p>

<p>김형택은 각 사람들에게 미리 어떤 조합을 테스트 할 것인지 정해주었다. 그리고 같은 조합을 최대 한 번만 테스트한다.</p>

<p>그런데, 이 사람들은 절대로 다른 사람보다 일을 많이 하지 않는다. 즉, 모두 같은 개수의 조합을 테스트 한다. 따라서 김형택은 몇 명의 사람을 뽑아야, 모든 조합을 테스트하면서, 모든 사람이 같은 횟수의 테스트를 하는지 궁금해졌다.</p>

<p>김형택이 모을 수 있는 사람의 최댓값 M이 주어질 때, M을 넘지 않으면서, 김형택이 뽑을 수 있는 최대 사람의 수를 구하는 프로그램을 작성하시오</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 S, F, M이 주어진다. S와 F는 1,000,000,000보다 작거나 같은 자연수이고, M은 100,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제의 정답을 출력한다. 만약 불가능 할 때는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>총 4개의 마법 구슬 중에 가능한 조합의 개수는 4개이다. 따라서 2명의 사람에게 2개의 조합 씩 나눠주면 된다.</p>

				</div>
				</div>','3 1 3
','2
','MATH'),
                                                                                                                (38,'BAEKJOON','https://www.acmicpc.net/problem/1105',1105,'팔','2초','512 MB',10,'<p>L과 R이&nbsp;주어진다. 이때, L보다 크거나 같고, R보다 작거나 같은 자연수 중에 8이 가장 적게 들어있는 수에 들어있는 8의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 L과 R이 주어진다. L은 2,000,000,000보다 작거나 같은 자연수이고, R은 L보다 크거나 같고, 2,000,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 L보다 크거나 같고, R보다 작거나 같은 자연수 중에 8이 가장 적게 들어있는 수에 들어있는 8의 개수를 구하는 프로그램을 작성하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 10
','0
','MATH'),
                                                                                                                (41,'BAEKJOON','https://www.acmicpc.net/problem/1110',1110,'더하기 사이클','2초','128 MB',5,'<p>0보다 크거나 같고, 99보다 작거나 같은 정수가 주어질 때 다음과 같은 연산을 할 수 있다. 먼저 주어진 수가 10보다 작다면 앞에 0을 붙여 두 자리 수로 만들고, 각 자리의 숫자를 더한다. 그 다음, 주어진 수의 가장 오른쪽 자리 수와 앞에서 구한 합의 가장 오른쪽 자리 수를 이어 붙이면 새로운 수를 만들 수 있다. 다음 예를 보자.</p>

<p>26부터 시작한다. 2+6 = 8이다. 새로운 수는 68이다. 6+8 = 14이다. 새로운 수는 84이다. 8+4 = 12이다. 새로운 수는 42이다. 4+2 = 6이다. 새로운 수는 26이다.</p>

<p>위의 예는 4번만에 원래 수로 돌아올 수 있다. 따라서 26의 사이클의 길이는 4이다.</p>

<p>N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. N은 0보다 크거나 같고, 99보다 작거나 같은 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 N의 사이클 길이를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','26
','4
','MATH'),
                                                                                                                (43,'BAEKJOON','https://www.acmicpc.net/problem/1112',1112,'진법 변환','2초','128 MB',13,'<p>우리는 10진수를 사용한다. 10진수는 0부터 9까지 숫자를 사용한다. 12345가 10진수라면, 이 값은 1×10<sup>4</sup> + 2×10<sup>3</sup> + 3×10<sup>2</sup> + 4×10<sup>1</sup> + 5×10<sup>0</sup>이다.</p>

<p>자 이제 -10진법을 보자. 이 수도 0부터 9까지 숫자를 사용하고, -10진수 12345는, 1×(-10)<sup>4</sup> + 2×(-10)<sup>3</sup> + 3×(-10)<sup>2</sup> + 4(-10)<sup>1</sup> + 5(-10)<sup>0</sup> 이다. 따라서, 10진법으로는 10000-2000+300-40+5 = 8265가 된다.</p>

<p>어떤 수를 음의 진법으로 나타내는 방법도 항상 일정하다. 음의 진법이 신기한 이유는 음수를 나타내는데 ?가 필요 없기 때문이다. 예를 들어, -10진법에서, 10진수 -1은 19로 나타내면 되고, 10진수 -2는 18로 나타내면 된다.</p>

<p>10진수 x를 b진법으로 바꾸는 프로그램을 작성하시오. 음의 진법일 때는 음수를 나타낼 때 -부호가 있으면 안 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 x와 b가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제의 정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','12345 10
','12345
','MATH'),
                                                                                                                (48,'BAEKJOON','https://www.acmicpc.net/problem/1117',1117,'색칠 1','2초','128 MB',11,'<p>지민이는 종이에 색칠하기를 좋아한다. 지민이는 W×H 크기의 직사각형 종이를 가지고 있다. 지민이는 종이에 다음과 같이 색칠 하려고 한다.</p>

<ol>
	<li>종이를 x = f에 맞춰서 접는다. 이때, 왼쪽 종이가 오른쪽 종이 위에 올라오게 접는다.</li>
	<li>종이를 가로로 c+1개의 크기가 동일 한 구간으로 나눈다. 그 다음에 c번 가장 위의 구간부터 차례대로 접는다.</li>
	<li>왼쪽 아래가 (x<sub>1</sub>, y<sub>1</sub>) 이고, 오른쪽 위가 (x<sub>2</sub>, y<sub>2</sub>)인 직사각형을 찾는다. 이때, (0, 0)은 현재 접힌 상태에서 가장 왼쪽 아래 점이다. 그 직사각형을 칠한다. 이때, 페인트는 겹쳐있는 모든 곳에 스며든다.</li>
	<li>종이를 편다.</li>
</ol>

<p>다음 예는 5×6 종이에, x=2이고, c=2이고, (x<sub>1</sub>, y<sub>1</sub>) = (1, 1), (x<sub>2</sub>, y<sub>2</sub>) = (3, 2)인 경우이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/7c49e41f-720b-4add-ad4c-76c14713a041/-/preview/"><img alt="" src="https://upload.acmicpc.net/a7f8f028-ed9b-4453-a94a-eacb09e26377/-/preview/"><img alt="" src="https://upload.acmicpc.net/3c67a1ba-49a4-4d1b-a5aa-e0147144adab/-/preview/"></p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/534a806e-29a9-4045-ad48-c0da65b59412/-/preview/"><img alt="" src="https://upload.acmicpc.net/a8ccf82d-3d34-45d0-b71a-85e9b945eea5/-/preview/"><img alt="" src="https://upload.acmicpc.net/3abf2512-9a2a-40a1-9465-17d87c7cd58c/-/preview/"></p>

<p>W, H, f, c, x<sub>1</sub>, y<sub>1</sub>, x<sub>2</sub>, y<sub>2</sub>가 주어질 때, 색칠되어 있지 않은 면적을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 8개의 정수 W, H, f, c, x<sub>1</sub>, y<sub>1</sub>, x<sub>2</sub>, y<sub>2</sub>가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 색칠되지 않은 영역의 넓이를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 6 2 2 1 1 3 2
','21
','MATH'),
                                                                                                                (46,'BAEKJOON','https://www.acmicpc.net/problem/1121',1121,'도형','2초','128 MB',18,'<p>1부터 N까지 번호가 매겨져 있는 선분이 있다. 각 선분의 길이가 주어진다. 이때, 이 선분을 이용해서 만들 수 있는 서로 다른 K각형의 개수를 출력하는 프로그램을 작성하시오. K각형의 한 변은 주어진 선분 중의 하나여야 한다. 그리고 각 선분은 한 번만 사용할 수 있다.</p>

<p>다각형이 서로 다른 것은, 두 다각형 A와 B가 있을 때, A에 쓰였는데, B에 쓰이지 않은 선분이 있다면, 두 다각형을 서로 다르다고 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. N은 50보다 작거나 같은 자연수이다. 둘째 줄에는 N개의 선분의 길이가 주어진다. 길이는 50,000보다 작거나 같은 자연수이다. 셋째 줄에는 K가 주어진다. K는 3보다 크거나 같고, 10보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제의 정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
4 4 4 2 2 2
3
','11
','MATH'),
                                                                                                                (44,'BAEKJOON','https://www.acmicpc.net/problem/1122',1122,'뒤집기','2초','128 MB',17,'<p>홍준이는 A개의 0과 B개의 1을 가지고 있다. 이것을 가지고 게임을 할 것이다. 이 게임의 목표는 모두 1로 만드는 것이다. 각 턴은 정확하게 K개의 숫자를 뒤집는 것이다. (0 → 1, 1 → 0) 매번 수의 값이나, 이전에 뒤집은 적이 있는지 없는지에 상관없이 아무 K개의 숫자를 고를 수 있다. 게임에서 이기기 위한 뒤집는 횟수의 최솟값을 출력하는 프로그램을 작성하시오. 만약 불가능하면 -1을 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 세 정수 A, B, K가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제의 정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 0 3
','4
','MATH'),
                                                                                                                (45,'BAEKJOON','https://www.acmicpc.net/problem/1123',1123,'셔플','2초','128 MB',22,'<p>나는 음악을 사랑하기 때문에, 항상 음악을 듣는다. 나는 많은 곡을 소장하고 있고, 음악을 매번 곡을 선택하는 것보다, 셔플로 (무작위로) 듣는다. 그러나 나는 다른 장르의 음악도 듣지만, 어떤 것들은 서로 맞지 않는다. (예를 들어, 조용한 클래식을 듣다가, 갑자기&nbsp;시끄러운 가요가 나오는 것은 좀 불편하다) 따라서, 나는 다음과 같은 룰을 적용해서 셔플을 하게 하는 프로그램을 작성하려고 한다. 룰은 다음과 같다.</p>

<p>나는 여러 개의 장르를 정의해 놓았고, 모든 곡은 하나의 장르에 속한다. 그리고 나는 어떤 장르가 서로 맞는지도 정해놓았다. (서로 맞다는 말은 i라는 장르가 j와 맞다면, i란 장르의 노래를 듣고, j를 듣는것은 괜찮다는 것, 서로 맞지 않으면, i란 장르의 노래를 듣고, j란 장르의 노래를 듣는것은 안 된다는 것)</p>

<p>나의 프로그램은 다음과 같이 작동한다.</p>

<p>처음에 하나의 곡을 랜덤하게 재생한다. 그 곡이 끝나면, 그 곡의 장르와 맞는 곳을 랜덤하게 선택해서, 그 곡을 재생한다. 같은 곡은 여러 번 재생될 수도 있고, 연속해서 재생하는 것도 가능한다.</p>

<p>나의 프로그램을 이용해서 재생할 수 있는 곡의 순서 중 그 길이가 A보다 크거나 같고, B보다 작거나 같은 것의 경우의 수를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 곡의 개수 N이 주어진다. 곡의 개수는 1000보다 작거나 같은 자연수이다. 둘째 줄 부터 N개의 줄에는 각 곡의 장르번호와 곡의 길이가 주어진다. 다음 줄에는 장르의 개수 M이 주어진다. M은 9보다 작거나 같은 자연수이고, 장르 번호는 0부터 M-1까지 이다. 곡의 길이는 9보다 작거나 같은 자연수이다. 다음 줄에는 서로 맞는 장르가 인접행렬 형식으로 주어진다. Y는 서로 맞는 장르, N은 아니다. 이때, 이 인접행렬을 T라고 했을 때, T[i][i] = ‘Y’이다. 마지막 줄에는 A와 B가 주어진다. B는 A보다 크거나 같고, 1,000,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>곡의 순서 중 그 길이가 A보다 크거나 같고, B보다 작거나 같은 것의 경우의 수를&nbsp;600921647로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
0 3
1 2
0 2
2
YY
YY
2 4
','7
','MATH'),
                                                                                                                (47,'BAEKJOON','https://www.acmicpc.net/problem/1124',1124,'언더프라임','2초','128 MB',10,'<p>자연수 X를 소인수분해하면, 곱해서 X가 되는 소수의 목록을 얻을 수 있다. 예를 들어, 12 = 2 × 2 × 3이다. 1은 소수가 아니다.</p>

<p>어떤 수 X를 소인수분해 해서 구한 소수의 목록의 길이가 소수이면, 그 수를 언더프라임 이라고 한다. 12는 목록에 포함된 소수의 개수가 3개이고, 3은 소수이니 12는 언더프라임이다.</p>

<p>두 정수 A와 B가 주어졌을 때, A보다 크거나 같고, B보다 작거나 같은 정수 중에서 언더프라임인 것의 개수를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 A와 B가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 A보다 크거나 같고, B보다 작거나 같은 언더프라임 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 10
','5
','MATH'),
                                                                                                                (50,'BAEKJOON','https://www.acmicpc.net/problem/1125',1125,'바닥 장식','2초','128 MB',17,'<p>방 바닥을 꾸미려고 한다. 다음과 같이 1×5 크기의 나무 판으로 만든 무한한 패턴의 평면을 생각해보자. 가장 왼쪽 위 좌표는 (0,0)이고, X좌표는 왼쪽에서 오른쪽으로 증가하고, Y좌표는 위에서 아래로 증가한다.</p>

<p>이제 이 패턴에서 방 크기와 맞는 구역을 선택할 것이다. 이때 왼쪽 위의 좌표가 (x<sub>1</sub>, y<sub>1</sub>)이고, 오른쪽 아래의 좌표가 (x<sub>2</sub>, y<sub>2</sub>)인 직사각형 구역을 선택한다. 자 이제 선택한 구역의 모양을 만들 것이다.</p>

<p>하지만, 근처의 상점에서는 오직 1×5크기의 나무 판만 판다. 따라서, 1×3, 1×2크기의 나무 판은 1×5크기의 나무 판을 적절히 잘라서 만들면 된다. 예를 들어, 1×5를 잘라서 1×3과 1×2를 만들 수 있고, 1×2 2개와 1×1 1개를 만들 수도 있다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/6eee8913-121f-4f44-815e-7cae585079c5/-/preview/"></p>

<p>위의 그림은 (x<sub>1</sub>, y<sub>1</sub>)이 (8, 5)이고, (x<sub>2</sub>, y<sub>2</sub>)가 (20, 16)일 때이다. 23개의 1×5와 6개의 1×2, 5개의 1×1이 필요하다. 따라서 27개의 나무 판을 사면 된다.</p>

<p>x<sub>1</sub>, y<sub>1</sub>, x<sub>2</sub>, y<sub>2</sub>가 주어질 때 구매해야 하는 나무 판의 개수의 최솟값을 구하는 프로그램을 작성하시오. 필요없는 조각은 버려도 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 네 정수 x<sub>1</sub>, y<sub>1</sub>, x<sub>2</sub>, y<sub>2</sub>가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 구매해야 하는 나무 판 개수의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8 5 20 16
','27
','MATH'),
                                                                                                                (49,'BAEKJOON','https://www.acmicpc.net/problem/1128',1128,'피보나치 냅색','2초','128 MB',20,'<p>종혁이는 물건 N개를 가지고 있고, 각 물건의 무게와 가격을 알고 있다. 또, 가방을 하나 가지고 있다. 가방에 담을 수 있는 무게의 최댓값은 C이다. 종혁이는 가방에 물건을 넣으려고 한다. 이때, 가방에 들어있는 물건의 가격의 합을 최대로 만들려고 한다.</p>

<p>이 문제는 유명한 냅색문제이다. 따라서, 시간 복잡도가 O(2<sup>N</sup>) 또는 O(N×무게의 합)이기 때문에 풀 수 없다. 따라서, 특별한 조건이 있다. 물건의 무게는 모두 피보나치 수이다.</p>

<p>첫 번째와 두 번째 피보나치 수는 1과 2이고, 그 다음 수는 이전의 두 수를 더해서 만든다. 즉, 피보나치 숫자는 1, 2, 3, 5, 8, 13, ... 으로 시작하게 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. N은 50보다 작거나 같은 자연수이다.</p>

<p>둘째 줄부터 N개의 줄에는 각 물건의 무게와 가격이 주어진다. 무게와 가격은 모두 10<sup>16</sup>보다 작거나 같은 자연수이다.</p>

<p>마지막 줄에는 C가 주어진다. C는 10<sup>16</sup>보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 가방에 들어있는 물건의 가격의 합의 최댓값을&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
5 555
8 195
13 651
15
','750
','MATH'),
                                                                                                                (9,'BAEKJOON','https://www.acmicpc.net/problem/1140',1140,'요금','2초','128 MB',19,'<p>민식텔레콤은 이동통신 회사이다. 이 회사에는 기본 요금제에서 문자메시지 한 건당 요금은 10원이다. 민식텔레콤은 문자팩도 판매하고 있는데, 문자팩을 구매하면, 특정 개수의 문자메시지를 별도의 요금 없이 보낼 수 있다. 이러한 문자팩은 여러 번 구매할 수 있다. 만약, 구매한 문자팩에서 제공하는 문자메시지의 개수를 넘게 문자를 보낸다면, 넘는 문자메시지는 기본 요금을 지불해야 한다.</p>

<p>민식텔레콤의 사용자 영식이는 월 요금을 최소화 하려고 한다. 영식이가 한 달에 보내는 문자메시지의 개수는 T개이다. 민식텔레콤에는 두 종류의 문자팩이 있다. 첫 번째 문자팩의 가격은 P<sub>1</sub>원이고, K<sub>1</sub>개의 문자메시지가 제공된다. 두 번째 문자팩의 가격은 P<sub>2</sub>원이고, K<sub>2</sub>개의 문자메시지가 제공된다. 두 종류의 문자팩을 함께 구매해도 된다. 구매한 문자팩에서 제공하는 문제메시지의 양이 T보다 커도 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 다섯 정수 <span style="line-height:1.6em">T, K<sub>1</sub>, P<sub>1</sub>, K<sub>2</sub>, P<sub>2</sub>가 주어진다.</span></p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 가능한 월 요금의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','92 10 90 20 170
','790
','MATH'),
                                                                                                                (51,'BAEKJOON','https://www.acmicpc.net/problem/1146',1146,'지그재그 서기','2초','128 MB',17,'<p>N명의 학생들이 있다. 이 학생들을 다음과 같은 방식으로 줄을 세우려고 한다.</p>

<ol>
	<li>맨 앞줄에는 아무나 설 수 있다.</li>
	<li>둘째 줄에도 아무나 설 수 있다.</li>
	<li>셋째 줄에는 둘째 줄에 서 있는 사람이 첫째 줄에 서 있는 사람보다 클 경우, 둘째 줄에 서 있는 사람보다 작은 사람만이 설 수 있으며, 둘째 줄에 서 있는 사람이 첫째 줄에 서 있는 사람보다 작을 경우, 둘째 줄에 서 있는 사람보다 큰 사람만이 설 수 있다.</li>
	<li>넷째 줄부터는 둘째 줄과 셋째 줄을 비교하는 식으로 해서 N번째의 줄을 서는 사람은 N-2번째 줄과 N-1번째 줄에 서는 사람을 비교해서 세운다.</li>
</ol>

<p>학생들이 1이 가장 작은 사람, N이 가장 큰 사람이며, 같은 키를 가진 사람이 없다고 할 때, 5명을 세운다면 1 - 3 - 2 - 5 - 4, 3 - 2 - 5 - 1 - 4 등의 방법으로 세울 수 있다.</p>

<p>문제는 N명의 학생을 이런 식으로 줄을 세울 때 총 몇 가지의 경우의 수가 생기는지 찾아내는 것이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 학생 수 N(1 ≤ N ≤ 100)이 입력된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 총 경우의 수를 1,000,000으로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
','32','MATH'),
                                                                                                                (52,'BAEKJOON','https://www.acmicpc.net/problem/1147',1147,'BOJ 소풍','2초','128 MB',18,'<p>BOJ 유저들이 다함께 소풍에 왔다. 넓은 잔디밭을 보니 일부 유저들은 갑자기 문제가 하나 풀고 싶어졌다.&nbsp;</p>

<p>먼저, 잔디밭을 크기가 N×M인 격자로 나누었다. 격자는 1×1 크기의 단위 정사각형으로 나누어져 있다. 그 다음, 여기에서 마름모를 그릴 수 있는 방법의 개수를 세어보려고 한다. 마름모의 꼭짓점은 단위 정사각형의 꼭짓점 위에 있어야 한다. 예를 들어, 2×2 크기의 격자에서는&nbsp;6가지 마름모를 그릴 수 있다.</p>

<p>N과 M이 주어졌을 때, 마름모를 그릴 수 있는 서로 다른 방법의 개수를 구해보자. 두 마름모 A, B가 있을 때, 적어도 한 꼭짓점이 A에는 포함되고, B에는 포함되지 않으면 다른 마름모이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 M이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 마름모를 그릴 수 있는 방법의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 2
','6
','MATH'),
                                                                                                                (53,'BAEKJOON','https://www.acmicpc.net/problem/1153',1153,'네 개의 소수','2초','128 MB',13,'<p>임의의 자연수가 주어지면, 이를 네 개의 소수의 합으로 분해하는 프로그램을 작성하시오. 예를 들어 38 = 5 + 7 + 13 + 13이 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수 N(1 ≤ N ≤ 1,000,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 네 개의 소수를 빈 칸을 사이에 두고 순서대로 출력한다. 불가능한 경우는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','38
','5 7 13 13
','MATH'),
                                                                                                                (55,'BAEKJOON','https://www.acmicpc.net/problem/1177',1177,'조쌤포스','2초','128 MB',16,'<p>학생들은 프로그래밍 시간에 계속해서 떠들고 있다. 더 이상 참지 못한 조쌤은 자리를 박차고 애들을 잡기 위해 뛰기 시작했고 이와 동시에 떠들던 $N$명의 학생은 도망가기 시작했다.</p>

<p>현재 조쌤은 $(B_X, B_Y)$ 위치에 있다. 그리고 뛰기 시작한 조쌤은 $t$초 후 $(B_X+BV_X \times t, B_Y+BV_Y \times t)$ 위치에 있게 된다. 즉, 조쌤은 초당 $(BV_X, BV_Y)$ 방향으로 뛰고 있는 것이다.</p>

<p>$N$명의 학생 역시 현재 $(X_i, Y_i)$에 위치하고 있고 $t$ ($t ≥ 0$)초 후 $(X_i+VX_i \times t, Y_i+VY_i \times t)$ 위치에 있게 된다.</p>

<p>조쌤은 현재 자신 위치에서 반경이 $R$인 원 안에 있는 아이들은 모조리 잡을 수 있다. 하지만 위의 조건을 살펴보면 현재 아이들과 조쌤 모두 뛰는 상황이기에 시간마다 아이들을 잡을 수 있는 숫자가 변한다. 조쌤은 한 번 잡고나면 잡히지 않은 아이들은 모두 도망간 상태기 때문에 단 한번의 기회에 최대한 많은 아이들을 잡고 싶다.</p>

<p>문제는 조쌤과 학생들의 위치 및 뛰는 방향이 주어지면 한 번에 얼마나 많은 학생을 잡을 수 있는지 구하는 것이다. 물론, 최대한 많이 잡을 수 있는 시간이 정수가 아닌 소수일 수도 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에는 학생의 수 $N$과 조쌤이 잡을 수 있는 반경 $R$, 그리고 조쌤의 위치를 나타내는 $B_X$, $B_Y$와 조쌤이 뛰는 방향을 나타내는 $BV_X$, $BV_Y$가 공백으로 구분되어 주어진다. 두 번째 줄부터 $N+1$번째 줄까지는 각 학생의 정보가 주어지는데 각 줄에는 학생의 초기 위치 $X_i$, $Y_i$와 뛰는 방향 $VX_i$, $VY_i$가 공백으로 구분되어 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 줄에 조쌤이 한 번에 잡을 수 있는 최대 학생 숫자를 출력한다. 실수 오차 조정을 위해 학생과 조쌤 사이의 거리가 $R \pm 0.0001$이라면 잡을 수 있다고 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>$1.5$초의 시간이 흐른 후 조쌤은 $(0, 3)$에 위치해 있고 각 학생은 $(0, 3)$, $(-0.5, 3.5)$, $(4, -3.5)$에 위치하여 있다. 즉 반경 $1$ 안에 있는 $1$, $2$번 학생을 조쌤은 잡을 수 있고 이것이 한 번에 잡을 수 있는 최대 학생 수가 된다.</p>

				</div>
				</div>','3 1 0 0 0 2
0 -3 0 4
1 2 -1 1
1 -2 2 -1
','2','MATH'),
                                                                                                                (56,'BAEKJOON','https://www.acmicpc.net/problem/1179',1179,'마지막 요세푸스 문제','2초','128 MB',20,'<p>요세푸스 문제는 다음과 같다.</p>

<p>1번부터 N번까지 N명의 사람이 원을 이루면서&nbsp;앉아있고, 양의 정수 K(≤ N)가&nbsp;주어진다. 이제 순서대로 K번째 사람을 제거한다. 한 사람이 제거되면 남은 사람들로 이루어진 원을 따라 이 과정을 계속해 나간다. 이 과정은 N명의 사람이 모두 제거될 때까지 계속된다. 원에서 사람들이 제거되는 순서를 (N, K)-요세푸스 순열이라고 한다. 예를 들어 (7, 3)-요세푸스 순열은 <3, 6, 2, 7, 5, 1, 4>이다.</p>

<p>N과 K가 주어지면, 마지막으로 남는 사람의 번호를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 K가&nbsp;빈 칸을 사이에 두고 순서대로 주어진다. (1 ≤ N ≤ 10<sup>15</sup>, 1 ≤ K ≤ 90)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 마지막으로 남는 사람의 번호를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7 3
','4
','MATH'),
                                                                                                                (57,'BAEKJOON','https://www.acmicpc.net/problem/1183',1183,'약속','2초','128 MB',9,'<p>마법사 N명이 머글 문화를 이해하기 위해 머글과 약속을 잡았다. 각 마법사는 한 명의 머글을 만날 예정이다. 하지만, 마법사는 약속 시간보다 빨리 또는 늦게 도착할 수 있기 때문에 고민에 빠졌다. 결국&nbsp;기다리는 시간을 최소화 하기 위해 모든 약속 시간을 T씩 미루려고 한다. 기다리는 시간은 먼저 도착한 사람이 늦게 도착한 사람이 도착할 때까지 기다리는 시간을 의미한다.</p>

<p>마법사의 약속 시간은 A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>N</sub>이고, 도착 시간은 B<sub>1</sub>, B<sub>2</sub>, ..., B<sub>N</sub>이다. 약속 시간을 T만큼 미루면, 기다리는 시간의 합은 |A<sub>i</sub> + T - B<sub>i</sub>|의 합과 같다. 기다리는 시간의 합이 최소가 되는 서로 다른 정수 T의 개수를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. 다음 N개의 줄에 A<sub>i</sub>, B<sub>i</sub>가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 기다리는 시간의 합이 최소인 서로 다른 정수 T의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
10 9
','1
','MATH'),
                                                                                                                (59,'BAEKJOON','https://www.acmicpc.net/problem/1187',1187,'숫자 놀이','2초','128 MB',21,'<p>2N - 1개(N = 2<sup>k</sup>, 1 ≤ k ≤ 10)의 정수가 있다. 주어진 수 중 임의로 N개를 뽑았을 때 이 합이 N으로 나누어떨어지도록 하는 N개의 수를 출력하는 것이 문제이다.&nbsp; 답이 여러 개일 경우 아무거나 한 개만 출력하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 N의 값이 주어진다. 두 번째 줄에는 2N-1개의 1000 이하의 음이 아닌 정수가 입력된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 줄에 N으로 나누어떨어지는 N개의 숫자를 출력한다. 답이 여러 개일 경우 그 중 임의의 하나만 출력하면 되고, 답이 존재하지 않을 경우 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 2 3 4 5 6 7
','1 3 5 7','MATH'),
                                                                                                                (60,'BAEKJOON','https://www.acmicpc.net/problem/1188',1188,'음식 평론가','1초','128 MB',12,'<p>선영이의 직업은 소시지 요리사이다. 소시지를 팔기 전에 음식 평론가 M명을 모아서 맛을 테스트해보려고 한다.</p>

<p>선영이는 동일한 소시지를 총 N개를 준비했다. 이 소시지를 모든 평론가들이 같은 양을 받게 소시지를 자르려고 한다. 이때, 소시지를 자르는 횟수를 최소로 하려고 한다.</p>

<p>예를 들어, 소시지가 2개, 평론가가 6명있는 경우를 생각해보자. 이때, 각 소시지를 세 조각으로 만든 다음, 각 평론가에게 한 조각씩 주면 된다. 이 경우에 소시지는 총 네 번 자르게 된다. 다른 경우로 소시지가 3개, 평론가가 4명 있는 경우를 생각해보자. 이때는 각 소시지의&nbsp;크기를&nbsp;3:1로 잘라서 큰 조각을 평론가에게 하나씩 주고, 남은 조각을 평론가에게 주면 모두 동일한 양을 받게 된다.</p>

<p>소시지의 수와 평론가의 수가 주어졌을 때, 모든 평론가에게 같은 양의 소시지를 주기 위해 필요한 칼질의 수를 구하는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 소시지의 수 N과 평론가의 수 M이 주어진다. (1 ≤ N, M ≤ 100)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 모든 평론가에게 동일한 양을 주기 위해 필요한 칼질 횟수의 최솟값을 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 6
','4
','MATH'),
                                                                                                                (61,'BAEKJOON','https://www.acmicpc.net/problem/1192',1192,'장갑','2초','128 MB',22,'<p>어느 날 화학선생님이 화학시간에 맨날 딴짓만 하던 선영이에게 지하실에 가서 실험 때 쓸 장갑을 가져오라고 지시했다.</p>

<p>장갑엔 n가지 색상이 있고 지하실에는 2개의 통이 있는데 한쪽에는 n가지 색상의 왼손쪽 장갑이 들어있고 다른 한쪽에는 n가지 색상의 오른손쪽 장갑이 들어있다. 선영이는 각각의 통에 어떤 색깔의 장갑이 몇 개가 들어있는지 알고 있다.</p>

<p>그런데 지하실은 너무나도 깜깜해서 장갑을 꺼내도 색을 구별하기는 힘들고 양쪽의 통에서 임의로 장갑 여러개를 집어올 수 있다.</p>

<p>여러개의 장갑중에 항상 색깔이 같은 장갑의 쌍이 적어도 한 개이상 존재하도록 하기 위해서 선영이가 각각 통에서 가져와야할 장갑은 몇 개인지 구하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에는 색깔의 가지수 N(1 ≤ N ≤ 20)이 주어지고 2번째 줄과 3번째 줄에는 각각 왼쪽 통과 오른쪽 통에 들어 있는 색깔별 장갑의 수(10<sup>8</sup>&nbsp;이하의 음이 아닌 정수)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>일치하는 장갑을 하나 이상 뽑아내기 위해 가져와야 되는 최소한의 장갑의 수를 각각 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>임의로 왼쪽 통에서 2개, 오른쪽 통에서 8개를 가져온다면 최소한 한 쌍의 같은색의 장갑이 나옴을 보장할 수 있다.</p>

				</div>
				</div>','4
0 7 1 6
1 5 0 6
','2
8
','MATH'),
                                                                                                                (62,'BAEKJOON','https://www.acmicpc.net/problem/1193',1193,'분수찾기','0.5초(추가시간없음)','256 MB',6,'<p>무한히 큰 배열에 다음과 같이 분수들이&nbsp;적혀있다.</p>

<table class="table table-bordered" style="width:30%">
	<tbody>
		<tr>
			<td style="width:5%">1/1</td>
			<td style="width:5%">1/2</td>
			<td style="width:5%">1/3</td>
			<td style="width:5%">1/4</td>
			<td style="width:5%">1/5</td>
			<td style="width:5%">…</td>
		</tr>
		<tr>
			<td>2/1</td>
			<td>2/2</td>
			<td>2/3</td>
			<td>2/4</td>
			<td>…</td>
			<td>…</td>
		</tr>
		<tr>
			<td>3/1</td>
			<td>3/2</td>
			<td>3/3</td>
			<td>…</td>
			<td>…</td>
			<td>…</td>
		</tr>
		<tr>
			<td>4/1</td>
			<td>4/2</td>
			<td>…</td>
			<td>…</td>
			<td>…</td>
			<td>…</td>
		</tr>
		<tr>
			<td>5/1</td>
			<td>…</td>
			<td>…</td>
			<td>…</td>
			<td>…</td>
			<td>…</td>
		</tr>
		<tr>
			<td>…</td>
			<td>…</td>
			<td>…</td>
			<td>…</td>
			<td>…</td>
			<td>…</td>
		</tr>
	</tbody>
</table>

<p>이와 같이 나열된 분수들을 1/1 → 1/2 → 2/1 → 3/1 →&nbsp;2/2 → … 과 같은 지그재그 순서로 차례대로 1번, 2번, 3번, 4번, 5번, … 분수라고 하자.</p>

<p>X가 주어졌을 때, X번째 분수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 X(1 ≤ X ≤ 10,000,000)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 분수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','1/1
','MATH'),
                                                                                                                (63,'BAEKJOON','https://www.acmicpc.net/problem/1196',1196,'잭 바우어','2초','256 MB',22,'<p>다음 이야기는 오후 8시부터 오후 9시 사이에 일어난 일이다.</p>

<p>지난이야기.</p>

<p>두바쿠는 샹갈라에서 가장 악명이 높은 악당이다. 샹갈라는 현재 대규모의 폭동 사태가 일어나고 있고, 미군은 폭동 사태를 해결하기 위해 샹갈라에 주둔하고 있다. 두바쿠는 미국에 미군의 철수를 요구했지만, 미국은 테러리스트와는 협상을 하지 않는다는 핑계를 대면서 두바쿠의 요구를 거절했다. 두바쿠는 크게 분노했고, 미국을 테러하기로 결심했다. 먼저, 두바쿠는 토니 알메이다를 시켜서 CIP장치를 가져오게 했다. CIP장치를 이용해 비행기 두 대를 공중에서 충돌시키는 테러를 저질렀지만, 미국 대통령은 두바쿠의 요구를 또 한번 무시했다. 이때, 지금은 없어진 CTU의 국장 뷰캐넌과 프로그래머 클로이는 FBI 내에 첩자가 있다는 사실을 알게되었다. 두 사람은 첩자의 존재 때문에, 두바쿠를 잡을 수 없다는 것을 알게되었고, 독자적으로 FBI 내의 첩자를 잡아내기로 했다. 사실 토니 알메이다는 두바쿠를 잡기 위해 심어진 사람이었고, 이제 잭 바우어와 함께 두바쿠를 잡으려고 한다.</p>

<p>두바쿠는 잭 바우어가 자기를 잡으러 오기를 내심 기대하고 있었다. 따라서, 두바쿠는 자신의 본거지 주소를&nbsp;서로 다른 코드로 N개로 변형시켰고, N개의 코드를 모두 모아야 본거지 주소를 알 수 있다. 두바쿠는 이 코드를 자신의 부하들에게 분배했다. 따라서, 각각의 부하들이 어떤 코드를 가질 확률은 1/N이다. (서로 다른 부하가 같은 코드를 가지고 있을 수도 있고, 부하의 수는 무한대이다)</p>

<p>두바쿠의 부하들은 이 코드를 자신의 안 주머니에 넣어놓기 때문에, 잭 바우어는 이들을 죽이기 전까지는 코드를 모을 수 없다. 잭 바우어에게는 뛰어난 컴퓨터 프로그래머이자 주부인 클로이가 있다. 클로이는 너무 뛰어나기 때문에, 코드 K개만 가지고 있어도 두바쿠의 본거지를 찾을 수 있다. 잭 바우어가 서로 다른 코드 K개를 모으기 위해서 죽어야 하는 두바쿠 부하의 수의 기댓값을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 K가 주어진다. N은 10<sup>18</sup>보다 작거나 같은 자연수이고, K는 N보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제의 정답을 출력한다. 절대/상대 오차는 10<sup>-9</sup> 까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 3
','4.333333333333333
','MATH'),
                                                                                                                (64,'BAEKJOON','https://www.acmicpc.net/problem/1198',1198,'삼각형으로 자르기','2초','128 MB',9,'<p>볼록 다각형이 있고, 여기서 3개의 연속된 점을 선택해서 삼각형을 만든다. 그 다음, 만든 삼각형을 다각형에서 제외한다. 원래 다각형이 N개의 점이 있었다면, 이제 N-1개의 점으로 구성된 볼록 다각형이 된다. 위의 과정은 남은 다각형이 삼각형이 될 때까지 반복한다.</p>

<p>볼록 다각형의 점이 시계 방향순으로 주어진다. 마지막에 남은 삼각형은 여러 가지가 있을 수 있다. 이때, 가능한 넓이의 최댓값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 볼록 다각형 점의 수 N (3 ≤ N ≤ 35)이 주어진다. 둘째 줄부터 N개의 줄에는 볼록 다각형을 이루고 있는 점이 시계 방향 순서로 주어진다. 좌표는 10,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제의 정답을 출력한다. 절대/상대 오차는 10<sup>-9</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 1
2 3
3 2
','1.5
','MATH'),
                                                                                                                (69,'BAEKJOON','https://www.acmicpc.net/problem/1203',1203,'게임','2초','128 MB',17,'<p>N명의 학생이 원탁에 둘러앉아 게임을 하려한다. N명의 학생 중 한 사람이 동전을 받으면서 이 게임은 시작된다. 어떤 사람이 동전을 받았을 때 지정된 특정한 확률로 바로 왼쪽 옆 사람에게 주거나 아니면 오른쪽 옆 사람에게 줄 수 있다. 마찬가지로 동전을 받은 사람 역시 옆사람에게 전달을 하는 식으로 게임은 진행된다. 여기서 왼쪽 혹은 오른쪽 사람에게 줄 확률은 개개인마다 서로 다르다. 이런 식으로 모든 사람이 동전을 적어도 한 번 이상 받은 적이 있으면 게임은 끝나게 되고 마지막으로 동전을 받은 사람이 이 게임의 승자가 된다.&nbsp;</p>

<p><img alt="" src=https://www.acmicpc.net/upload/201003/Untitled.png" style="height:145px; width:149px"></p>

<p>문제는 N명의 학생이 위 그림과 같은 순서로 둘러앉았을 때, (i번 학생의 오른쪽에 i+1번 학생이 앉고 단, N번 학생 오른쪽은 1번 학생이 앉는 방식) N번 학생이 이 게임의 승자가 될 확률을 구하는 것이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에는 총 학생의 수 N(1 ≤ N ≤ 50)과 처음 동전을 가지고 있는 사람의 번호 K(1 ≤ K ≤ N)가 주어진다. 두 번째 줄에는 N-1개의 실수가 입력되는데 이는 1번부터 N-1번 학생까지 차례대로 각각의 학생이 오른쪽 학생에게 동전을 줄 확률을 의미한다. (오른쪽 학생에게 동전을 줄 확률이 P라면 왼쪽 학생에게 줄 확률을 1-P가 된다.) 입력되는 확률 값은 최대 소수점 두 자리까지이며 0이나 1인 경우는 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 줄에 N번 학생이 승자가 될 확률을 출력한다. 절대/상대 오차는 10<sup>-6</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 1
0.3 0.6
','0.3000000000
','MATH'),
                                                                                                                (65,'BAEKJOON','https://www.acmicpc.net/problem/1206',1206,'사람의 수','2초','128 MB',10,'<p>송유진은 길거리에서 사람들에게 설문조사를 하고 있다.&nbsp;설문조사에는 N개의 문항이 있고, 설문에 응한 사람은&nbsp;각 문항을&nbsp;0보다 크거나 같고, 10보다 작거나 같은 정수로 대답해야 한다.</p>

<p>설문조사를 모두 마친 후 유진이는 각 문항의 평균 점수 소수점 셋째 자리에서 자른 값을 보고서 종이에 적고 사무실로 돌아왔다. 예를 들어, 어떤 문항에 각 사람이 점수를 4, 6, 10점으로 대답했다면, 평균 점수는 6.666이다. 이제 설문조사 결과를 보고해야 하는데, 문제가 하나 생겼다. 평균 점수만 알고 있기 때문에, 설문조사에 참여한 사람의 수를 알 수 없다는 점이다.</p>

<p>각 문항의 평균 점수가 주어진다. 이때 설문조사에 참여한 사람의 수를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. 둘째 줄부터 N개의 줄에 각 문항의 평균 점수가 주어진다. N은 50보다 작거나 같은 자연수이고, 평균 점수는 0보다 크거나 같고, 10보다 작거나 같은 소수이다. 항상 소수점 셋째자리 까지 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 설문조사에 참여한 사람의 수를 출력한다. 만약, 가능한 정답이 여러가지라면, 가장 작은 값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1','#2 76','MATH'),
                                                                                                                (67,'BAEKJOON','https://www.acmicpc.net/problem/1211',1211,'보일의 법칙','2초','128 MB',21,'<p>화학시간에 보일의 법칙에 대해서 설명을 듣던 선영이는 수업이 지겨워서 숫자장난을 하기 시작했다.</p>

<p>어떤 숫자의 digit-product는 그 숫자의 각각 자리 수들을 곱한 값이다. 예를 들면 2612의 digit-product는 2*6*1*2=24이다.</p>

<p>그리고 어떤 숫자의 self-product는 (그 숫자)(그 숫자의 digit-product)이다. 예를 들면 2612의 self-product는 2612*24=62688이다. 이때 A, B가 주어지면 self-product가 A와 B사이(A, B포함)에 있는 숫자들의 개수를 구하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 A, B가 주어진다 (1 ≤ A ≤ B < 10<sup>18</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>self-product가 A이상 B이하인 숫자들의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>19, 24, 32, 41의 self-product가 각각 171, 192, 192, 164이므로 이 4개가 답이 된다.</p>

				</div>
				</div>','5','#10 72','MATH'),
                                                                                                                (66,'BAEKJOON','https://www.acmicpc.net/problem/1212',1212,'8진수 2진수','1초','256 MB',4,'<p>8진수가 주어졌을 때, 2진수로 변환하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p><span style="line-height:1.6em">첫째 줄에&nbsp;8진수가&nbsp;주어진다. 주어지는 수의 길이는 333,334을 넘지 않는다.</span></p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 주어진 수를 2진수로 변환하여 출력한다. 수가 0인 경우를 제외하고는 반드시 1로 시작해야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6','11001100
','MATH'),
                                                                                                                (68,'BAEKJOON','https://www.acmicpc.net/problem/1214',1214,'쿨한 물건 구매','0.5초','128 MB',16,'<p>구사과는 지폐를 오직 두 종류만 가지고 있다. 바로 P원 지폐와 Q원 지폐이다. 이 두 종류의 지폐를 구사과는 무한대만큼 가지고 있다.</p>

<p>오늘 구사과가 구매하려고 하는 물건의 가격은 D원이다. 구사과가 이 물건을 구매하기 위해서 지불해야 하는 금액의 최솟값은 얼마일까?</p>

<p>물건을 구매하기 위해서는 물건의 가격보다 크거나 같은 금액을 지불해야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 D, P, Q가 주어진다. 모두 10<sup>9</sup>보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 물건을 구매하기 위해 구사과가 지불해야 하는 금액의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','ti','20
','MATH'),
                                                                                                                (82,'BAEKJOON','https://www.acmicpc.net/problem/1215',1215,'잘못 작성한 요세푸스 코드','2초(추가시간없음)','128 MB',17,'<p>요세푸스 문제는 아래와 같이 풀 수 있다.</p>

<pre class="brush:c++; toolbar:false;">r := 0;
for i from 1 to n do
    r := (r + k) mod i;
return r;</pre>

<p>하지만 상근이는 코드를 잘못 읽고 아래와 같이 작성했다.</p>

<pre class="brush:c++; toolbar:false;">r := 0;
for i from 1 to n do
    r := r + (k mod i);
return r;</pre>

<p>n과 k가 주어졌을 때, 상근이의 잘못 작성한&nbsp;소스를 실행시킨 결과를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 n과 k가 주어진다. (1 ≤ n, k ≤ 10<sup>9</sup>)<br>
&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 주어진 n과 k로 상근이의 잘못&nbsp;작성한 소스의 결과를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','Starteatingwellwiththeseeighttipsforhealthyeating,whichcoverthebasicsofahealthydietandgoodnutrition','7
','MATH'),
                                                                                                                (70,'BAEKJOON','https://www.acmicpc.net/problem/1222',1222,'홍준 프로그래밍 대회','2초','128 MB',14,'<p>홍준이는 프로그래밍 대회를 개최했다. 이 대회는 사람들이 팀을 이루어서 참가해야 하며, 팀원의 수는 홍준이가 정해준다. 팀원이 홍준이가 정한 값보다 부족하다면, 그 팀은 대회에 참여할 수 없다. 모든 팀은 같은 수의 팀원으로 이루어져 있다.</p>

<p>대회에 참여 의사를 밝힌 학교는 총 N개이다. 각 학교는 모든 학생이 참여할 수 있는 경우에만 대회에 참가한다. 즉, 남는 사람 없이 모든 학생이&nbsp;팀에 들어갈 수 있어야 한다.</p>

<p>대회는 예선과 본선으로 구성되어 있다. 모든 팀은 같은 학교 소속으로 이루어져 있어야 한다. 예선에서 각 학교 1등팀만 본선에 진출한다.&nbsp;</p>

<p>홍준이의 대회는 올해가 첫 해이기 때문에, 많은 관심이 필요하다. 따라서, 본선에 참가하는 사람의 수를 최대가 되도록 팀원의 수를 정하려고 한다. 또, 본선이 지루해지는 것을 막기 위해 적어도 두 팀이 본선에 참가할 수 있어야 한다.</p>

<p>홍준이가 팀원을 몇 명으로 정해야 본선에 참가하는 사람의 수가 최대가 되는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 홍준이의 대회에 참여 의사를 밝힌 학교의 수 N (2 ≤ N ≤ 200,000)이 주어진다.</p>

<p>둘째 줄에는 각 학교 학생의 수가 주어진다. 학생의 수는 구간 [1, 2,000,000]에 포함된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 홍준이의 대회 본선에 참가하는 사람의 수의 최댓값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 예제의 경우 홍준이가 한 팀당 두 명으로 결정하면, 2번과 3번 학교가 참가할 수 있다.</p>

				</div>
				</div>','6','4
','MATH'),
                                                                                                                (71,'BAEKJOON','https://www.acmicpc.net/problem/1224',1224,'분수','2초','128 MB',20,'<p>유리수를 표현하기 위해 보통 분수를 사용한다. 분수 a/b에서 a를 분자, b를 분모라고 부르고, a와 b는 모두 정수이다. 분수에서 분모가 너무 큰 숫자이면 수식에서 다루기 힘들어진다. 그래서 수학자들은 분모 b가 매우 큰 분수 a/b가 있을 때, 이를 대신하여 분모가 작은 분수 a<sub>1</sub>/b<sub>1</sub>와 a<sub>2</sub>/b<sub>2</sub>를 사용한다, 여기서 a<sub>1</sub>/b<sub>1</sub> ≤&nbsp;a/b ≤ a<sub>2</sub>/b<sub>2</sub>이고 b<sub>1</sub>과 b<sub>2</sub>는 둘 다 특정한 정수 c보다 크지 않아야 한다. (즉, b<sub>1</sub>, b<sub>2</sub> ≤ c).</p>

<p>분수 a<sub>1</sub>/b<sub>1</sub>과 a<sub>2</sub>/b<sub>2</sub>를 a/b의 근사치 분수 쌍이라고 하자. 수학자들은 근사치 분수 쌍들 중 두 분수의 차이(즉,&nbsp; a<sub>2</sub>/b<sub>2</sub> - a<sub>1</sub>/b<sub>1</sub>)가 최소가 되는 근사치 분수 쌍을 사용하기를 원한다. 수학자를 도와주기 위해, 주어진 분수에 대해 차이가 최소가 되는 근사치 분수 쌍을 찾는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 세 개의 정수 a, b, c가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 네 개의 정수 a<sub>1</sub>, b<sub>1</sub>, a<sub>2</sub>, b<sub>2</sub>를 출력한다. 여기서 a<sub>1</sub>/b<sub>1</sub>과 a<sub>2</sub>/b<sub>2</sub>는 주어진 분수의 근사치 분수 쌍들 중 그 차이가 최소인 것이어야 하고, a<sub>1</sub>과 b<sub>1</sub>이 서로소이고 a<sub>2</sub>와 b<sub>2</sub>가 서로소이어야 한다. 단, 값이 0인 분수는 항상 “0 1”을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7','1 3 1 2
','MATH'),
                                                                                                                (73,'BAEKJOON','https://www.acmicpc.net/problem/1227',1227,'그녀의 마음','2초','128 MB',19,'<p>김상근과 김정인이 그녀의 마음을 얻기 위해 경쟁을 벌이고 있다. 그들은 다음과 같은 방법으로 승자를 결정하기로 했다.</p>

<p>무한한 크기의 2차원 평면에 어떤 지점에서 그녀가 걷기 시작한다. 그리고 그녀는 상, 하, 좌, 우 4방향으로 걸어갈 수 있는데 한번 걸어갈때마다 마음이 바뀐다. 즉, 상근이를 좋아하고 있었다면 정인이를 좋아하게 되고 정인이를 좋아하고 있었다면 상근이를&nbsp;좋아하게 된다. 시작점에서는 그녀가 상근이를 좋아한다고 한다. 또한 2차원 좌표판 중에는 장애물이 있는 곳이 있어서 그런 곳은 지나가지 못한다고 하자. 이때 그녀는&nbsp;그 시작점에서 (0, 0)까지 장애물을 피하여 최단거리로 걸어온다고 가정한다.</p>

<p>그녀가 무한한 체력을 가진 것은 아니므로 그녀가 걷는 걸음수를 S걸음 이하로 제한할 때 2차원 좌표 중 최종적으로 그녀가 (0, 0)에 왔을때 상근이를 좋아하게 될 시작점의 개수와 정인이를 좋아하게 될 시작점의 개수를 구하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에는 장애물의 개수 B와 걸음수 S가 주어진다.&nbsp;<span style="line-height:1.6em">(1<=B<=10000, 1<=S<=10000000)&nbsp;</span><span style="line-height:1.6em">그리고 다음 B줄에는 장애물의 좌표가 주어진다. 장애물의 x, y값의 절댓값은 1000보다 작다고 하자.</span></p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>상근이를 좋아하게 될 시작점의 개수와 정인이를 좋아하게 될 시작점의 개수를 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','9','9 4
','MATH'),
                                                                                                                (75,'BAEKJOON','https://www.acmicpc.net/problem/1229',1229,'육각수','2초','128 MB',12,'<p>육각수는 육각형을 이용해 정의할 수 있다. h<sub>n</sub>은 한 변에 점 1, 2, ..., n개가 있는 육각형을 점 하나만 겹치게 그렸을 때 존재하는 서로 다른 점의 개수이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/be790cb3-e1ff-4725-9de8-a265adca71f6/-/preview/" style="width: 320px; height: 109px;"></p>

<p style="text-align: center;">그림 1</p>

<p>그림1은 h<sub>1</sub>, h<sub>2</sub>, h<sub>3</sub>, h<sub>4</sub>를 의미하며, 처음 육각수 6개는 1, 6, 15, 28, 45, 66이다.</p>

<p>자연수 N이 주어졌을 때, 합이 N이 되는 육각수 개수의 최솟값을 구해보자.</p>

<table class="table table-bordered table-center-20">
	<thead>
		<tr>
			<th>N</th>
			<th>최소 개수</th>
			<th>합</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>1</td>
			<td>1</td>
			<td>1</td>
		</tr>
		<tr>
			<td>2</td>
			<td>2</td>
			<td>1+1</td>
		</tr>
		<tr>
			<td>3</td>
			<td>3</td>
			<td>1+1+1</td>
		</tr>
		<tr>
			<td>4</td>
			<td>4</td>
			<td>1+1+1+1</td>
		</tr>
		<tr>
			<td>5</td>
			<td>5</td>
			<td>1+1+1+1+1</td>
		</tr>
		<tr>
			<td>6</td>
			<td>1</td>
			<td>6</td>
		</tr>
		<tr>
			<td>7</td>
			<td>2</td>
			<td>1+6</td>
		</tr>
		<tr>
			<td>8</td>
			<td>3</td>
			<td>1+1+6</td>
		</tr>
		<tr>
			<td>9</td>
			<td>4</td>
			<td>1+1+1+6</td>
		</tr>
		<tr>
			<td>10</td>
			<td>5</td>
			<td>1+1+1+1+6</td>
		</tr>
		<tr>
			<td>11</td>
			<td>6</td>
			<td>1+1+1+1+1+6</td>
		</tr>
		<tr>
			<td>12</td>
			<td>2</td>
			<td>6+6</td>
		</tr>
	</tbody>
</table>

<p>1791보다 큰 정수는 항상 육각수 4개의 합으로 만들 수 있다. 또한, 수가 충분히 크다면 항상 육각수 3개의 합으로 만들 수 있다. 또, 최소 개수는 항상 6 이하이고, 이것이 최소인 N은 11과 26밖에 없다. 답이 6인 가장 큰 N은 26, 5인 가장 큰 N은 130, 4인 가장 큰 N은&nbsp;146858이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 N을 만들기 위해 필요한 육각수 개수의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','es','6
','MATH'),
                                                                                                                (74,'BAEKJOON','https://www.acmicpc.net/problem/1234',1234,'크리스마스 트리','2초','128 MB',14,'<p>오민식은 오늘이 크리스마스라고 생각해서, 크리스마스 트리를 만들려고 한다. 트리는 N개의 레벨로 이루어져 있다. 위에서부터 레벨1, ... 레벨 N이다. 또, 민식이는 빨강, 파랑, 초록색의 장난감을 가지고 있다. 그리고 민식이는 이 장난감을 일정한 규칙에 의해서 장식하려고 한다.</p>

<p>레벨 K에는 딱 K개의 장난감이 있어야 한다. 또, 각 레벨에 놓으려고 선택한 색이 있으면, 그 색의 장난감의 수는 서로 같아야 한다. 예를 들어, 레벨 3에 장난감을 놓으려고 할 때, 빨강 2, 파랑 1과 같이 놓으면, 빨강과 파랑의 수가 다르기 때문에 안 된다. 하지만, 레벨 4에 빨강 2, 파랑 2와 같이 놓으면, 가능하다.</p>

<p>N과, 장난감의 수가 주어질 때, 트리를 장식하는 경우의 수를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 트리의 크기 N, 빨강의 개수, 초록의 개수, 파랑의 개수가 주어진다. N은 10보다 작거나 같다. 빨강, 초록, 파랑의 개수는 0보다 크거나 같고, 100보다 작거나 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 경우의 수를 출력한다. 만약 주어진 장난감으로 트리를 장식할 수 없으면 0을 출력한다. 문제의 정답은 2<sup>63</sup>-1보다 작거나 같다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 1 1 1
','6
','MATH'),
                                                                                                                (76,'BAEKJOON','https://www.acmicpc.net/problem/1241',1241,'머리 톡톡','2초','128 MB',11,'<p>엄지 생일 기념으로 학생들은 파티를 하고 있다. 엄지는 N(1≤N≤100,000)명의 학생에게 1부터 N번까지 차례대로 번호를 부여하였고 그들을 순서대로 빙 둘러앉아 원을 만들게 하였다. (즉 i번째 학생은 i-1과 i+1학생 사이에 앉아있다. 단, N번째 학생은 N-1번째 학생과 첫 번째 학생 사이에 앉아있다.)</p>
<p>N명의 학생은 둘러앉아 "머리톡톡" 게임을 하려한다. 게임 규칙은 다음과 같다. 각각의 학생은 자신의 머리 위에 1,000,000 이하의 자연수 중 하나를 쓴다. 그리고 1번부터 N번 학생까지 한 명씩 차례대로 일어나 원을 돌면서 자신이 쓴 숫자가 다른 사람이 쓴 숫자의 배수이면 그 학생의 머리를 "톡톡" 친다.</p>
<p>문제는 각각의 학생이 일어나 자신의 자리로 돌아올 때까지 총 몇 명의 학생의 머리를 치는지 구하는 것이다.</p>

					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 학생의 수 N이 입력되고 다음 N개의 줄에는 1번부터 N번까지 각각의 학생이 자신의 머리에 쓴 숫자를 입력받는다.</p>
					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>총 N개의 줄로 i번째 줄에는 i번째 학생이 한 바퀴를 돌면서 머리를 친 학생의 수를 출력한다.</p>
					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
2
1
2
3
4
','2
0
2
1
3
','MATH'),
                                                                                                                (77,'BAEKJOON','https://www.acmicpc.net/problem/1242',1242,'소풍','1초','128 MB',15,'<p>동호와 동호네 반 친구들은 산정호수로 소풍을 갔다. 총 N명이 소풍에 참가했고, KIN 게임을 하려고 한다. 이 게임은 다음과 같이 진행된다.</p>

<p>무대에 올라간 N명은 1번부터 N번까지 시계방향으로 원형으로 앉았다. 이 게임은 1번부터 시작된다. 그리고 한 명씩 시계방향으로 1, 2, ... , K까지 센다. K를 말하는 사람은 퇴장 당한다. 그 후에는 다음 자리에 앉아있는 사람이 1부터 다시 센다. 동호도 이 게임에 M번 학생으로 참가한다. 동호는 자기가 몇 번째로 퇴장 당하는지 궁금해졌다.</p>

<p>예를 들어, 5명의 학생이 참가하고 K=2이고, 동호는 3번 학생이라고 하면, 가장 처음에는 1 2 3 4 5와 같이 앉아있다. 1부터 게임을 시작하기 때문에, 1이 1이라고 말하고, 2가 2라고 말한다. 2가 퇴장 당한다. 3이 1이라고 말하고, 4가 2라고 말한다. 4가 퇴장 당한다. 그 다음에는 1이 퇴장 당한다. 그 후에는 5가 퇴장당하고, 마지막으로 3이 퇴장 당한다. 동호는 3번 학생이기 때문에, 5번째로 퇴장 당한다.</p>

<p>N, K, M가 주어졌을 때, 동호가 몇 번째로 퇴장 당하는지 알아내는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 세 정수 N, K, M가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 동호가 몇 번째로 퇴장당하는 지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 2 3
','5
','MATH'),
                                                                                                                (78,'BAEKJOON','https://www.acmicpc.net/problem/1247',1247,'부호','2초','256 MB',3,'<p>N개의 정수가 주어지면, 이 정수들의 합 S의 부호를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>총 3개의 테스트 셋이 주어진다. 각 테스트 셋의 첫째 줄에는 N(1 ≤ N ≤ 100,000)이 주어지고, 둘째 줄부터 N개의 줄에 걸쳐 각 정수가 주어진다. 주어지는 정수의 절댓값은 9223372036854775807보다 작거나 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>총 3개의 줄에 걸쳐 각 테스트 셋에 대해 N개의 정수들의 합 S의 부호를 출력한다. S=0이면 "0"을, S>0이면 "+"를, S<0이면 "-"를 출력하면 된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
0
0
0
10
1
2
4
8
16
32
64
128
256
-512
6
9223372036854775807
9223372036854775806
9223372036854775805
-9223372036854775807
-9223372036854775806
-9223372036854775804
','0
-
+
','MATH'),
                                                                                                                (80,'BAEKJOON','https://www.acmicpc.net/problem/1249',1249,'워드똑똑','3초','128 MB',18,'<p>진영이는 워드똑똑을 공부한다. 민승이는 워드똑똑을 공부한다. 종혁이는 워드똑똑을 공부한다. 백준이는 워드똑똑을 공부한다. 하지만, 성경이는 워드똑똑을 공부하지 않는다.</p>

<p>워드똑똑을 공부하지 않는 성경이를 본 진영이는 분노로 휩싸여 교실의 책상을 의자로 부셔버렸다. 그리고 나서 의자를 창 밖으로 던졌다. 이 광경을 본 동호는 자기도 워드똑똑을 공부해야하겠다고 느끼면서, 책을 no24에서 인터넷 주문했다.</p>

<p>하지만, no24는 이름에 걸맞게 책을 잘못 보냈다. 이 책의 이름은 “팰린드롬똑똑 (Palindrome Smart)” 이었다.</p>

<p>이 책의 첫 페이지에는 다음과 같이 쓰여 있다.</p>

<p>이 책을 산 모든 사람은 다음과 같은 문제를 풀어야한다. 문자열의 길이가 1보다 크거나 같고, N보다 작거나 같은 팰린드롬 문자열을 모두 쓰라. 모든 문자는 알파벳 소문자이고, 모든 팰린드롬 문자열은 K개 보다 작거나 같은 서로 다른 문자를 가져야 한다. 다음 페이지에는 한 페이지에 하나씩 N과 K가 쓰여 있다.</p>

<p>동호는 그 많은 문자열을 다 쓰느니 차라리 개수만 구하겠다고 하고, 개수를 구하기로 했다. 동호가 부러워진 많은 학생들은 다같이 개수를 구하기로 했다.</p>

<p>N과 K가 주어졌을 때, 위의 조건을 만족하는 팰린드롬 문자열의 개수를 출력하는 프로그램을 작성하시오. 팰린드롬이란 앞에서 읽으나 뒤에서 읽으나 같은 문자열을 얘기한다. 예) wow, abba</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, K이 주어진다. N은 1,000,000,000보다 작거나 같은 자연수이고, K은 26보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제의 조건에 맞는 팰린드롬의 개수를 1234567891로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','44 7
','240249781
','MATH'),
                                                                                                                (81,'BAEKJOON','https://www.acmicpc.net/problem/1252',1252,'이진수 덧셈','2초','128 MB',4,'<p>두 개의 이진수를 입력받아 이를 더하는 프로그램을 작성하시오.</p>

					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 개의 이진수가 빈 칸을 사이에 두고 주어진다. 각 이진수는 1 또는 0으로만 이루어져 있으며, 0으로 시작할 수도 있다. 또한 각 이진수의 길이는 80을 넘지 않는다.</p>
					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 이진수 덧셈 결과를 출력한다. 결과가 0인 경우를 제외하고는 출력되는 이진수는 항상 1로 시작해야 한다.</p>
					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1001101 10010
','1011111
','MATH'),
                                                                                                                (83,'BAEKJOON','https://www.acmicpc.net/problem/1256',1256,'사전','2초','128 MB',14,'<p>동호와 규완이는 212호에서 문자열에 대해 공부하고 있다. 김진영 조교는 동호와 규완이에게 특별 과제를 주었다. 특별&nbsp;과제는 특별한 문자열로 이루어 진 사전을 만드는 것이다. 사전에 수록되어 있는 모든 문자열은 N개의 "a"와 M개의 "z"로 이루어져 있다. 그리고 다른 문자는 없다. 사전에는 알파벳 순서대로 수록되어 있다.</p>

<p>규완이는 사전을 완성했지만, 동호는 사전을 완성하지 못했다. 동호는 자신의 과제를 끝내기 위해서 규완이의 사전을 몰래 참조하기로 했다. 동호는 규완이가 자리를 비운 사이에 몰래 사전을 보려고 하기 때문에, 문자열 하나만 찾을 여유밖에 없다.</p>

<p>N과 M이 주어졌을 때, 규완이의 사전에서 K번째 문자열이 무엇인지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 세 정수 N, M, K가 순서대로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 규완이의 사전에서 K번째 문자열을 출력한다. 만약 규완이의 사전에 수록되어 있는 문자열의 개수가 K보다 작으면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 2 2
','azaz
','MATH'),
                                                                                                                (79,'BAEKJOON','https://www.acmicpc.net/problem/1267',1267,'핸드폰 요금','2초','128 MB',3,'<p>동호는 새악대로 T 통신사의 새 핸드폰 옴머나를 샀다. 새악대로 T 통신사는 동호에게 다음 두 가지 요금제 중 하나를 선택하라고 했다.</p>

<ol>
	<li>영식 요금제</li>
	<li>민식 요금제</li>
</ol>

<p>영식 요금제는 30초마다 10원씩 청구된다. 이 말은 만약 29초 또는 그 보다 적은 시간 통화를 했으면 10원이 청구된다. 만약 30초부터 59초 사이로 통화를 했으면 20원이 청구된다.</p>

<p>민식 요금제는 60초마다 15원씩 청구된다. 이 말은 만약 59초 또는 그 보다 적은 시간 통화를 했으면 15원이 청구된다. 만약 60초부터 119초 사이로 통화를 했으면 30원이 청구된다.</p>

<p>동호가 저번 달에 새악대로 T 통신사를 이용할 때 통화 시간 목록이 주어지면 어느 요금제를 사용 하는 것이 저렴한지 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>동호가 저번 달에 이용한 통화의 개수 N이 주어진다. N은 20보다 작거나 같은 자연수이다. 둘째 줄에 통화 시간 N개가 주어진다. 통화 시간은 10,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 싼 요금제의 이름을 출력한다. 그 후에 공백을 사이에 두고 요금이 몇 원 나오는지 출력한다. 만약 두 요금제의 요금이 모두 같으면 영식을 먼저 쓰고 민식을 그 다음에 쓴다.</p>

<p>영식은 Y로, 민식은 M으로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
40 40 40
','M 45
','MATH'),
                                                                                                                (87,'BAEKJOON','https://www.acmicpc.net/problem/1271',1271,'엄청난 부자2','2초','128 MB',1,'<p>갑부 최백준 조교는 동전을 최소로 바꾸는데 성공했으나 김재홍 조교가 그 돈을 발견해서 최백준 조교에게 그 돈을 나누자고 따진다.</p>

<p>그 사실이 전 우주로 알려지자 우주에 있던 많은 생명체들이 자신들에게 돈을 분배해 달라고 당장 달려오기 시작했다.</p>

<p>프로토스 중앙 우주 정부의 정책인, ‘모든 지적 생명체는 동등하다’라는 규칙에 입각해서 돈을 똑같이 분배하고자 한다.</p>

<p>한 생명체에게 얼마씩 돈을 줄 수 있는가?</p>

<p>또, 생명체들에게 동일하게 분배한 후 남는 돈은 얼마인가?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 최백준 조교가 가진 돈 n과 돈을 받으러 온 생명체의 수 m이 주어진다. (1 ≤&nbsp;m ≤ n ≤&nbsp;10<sup>1000</sup>, m과 n은 10진수 정수)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 생명체 하나에게 돌아가는 돈의 양을 출력한다. 그리고 두 번째 줄에는 1원씩 분배할 수 없는 남는 돈을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1000 100
','10
0
','MATH'),
                                                                                                                (86,'BAEKJOON','https://www.acmicpc.net/problem/1278',1278,'연극','2초','128 MB',13,'<p>연극극단 "월드"는 2009년 새해를 맞아 새로운 연극을 기획 중이다. 이 연극에는 새로운 오디션을 통해 선발된 N명의 신인 배우들만이 출연할 예정이다. 극단을 운영하고 있는 김형택 사장의 지시에 따라, 당신은 아래의 조건을 만족시키는 참신한 연극을 만들어야 한다.</p>

<ol>
	<li>연극은 연속된 K개의 장면으로 구성되게 된다. 그리고 각 장면에는 적어도 한 명 이상의 배우가 무대에 서 있어야 한다.</li>
	<li>하나의 장면이 계속되는 동안에는 무대에 서는 배우들이 바뀔 수 없다. 즉 장면 중간에 새로운 배우가 무대로 나오거나, 무대에 있던 배우가 무대 뒤로 들어가는 일은 없다.</li>
	<li>무대가 혼란스러워지는 것을 방지하기 위해, 한 장면이 끝나고 다음 장면으로 넘어갈 때에는 단 한 명의 배우만 이동해야 한다. 즉 새로운 배우 하나가 무대로 나오거나, 무대에 있던 배우 하나가 무대 뒤로 들어가는 경우만이 허용된다.</li>
	<li>연극이 시작되기 전과, 연극이 끝나고 난 후에는 무대가 비어 있어야 한다. 따라서 첫 번째 장면과 마지막 장면에서는 무대 위에 한 명의 배우만이 있어야 한다.</li>
	<li>각 장면에서 무대에 서는 배우들의 구성은 장면마다 달라야 한다. 예를 들어 한 장면에서 배우 2, 배우 3, 배우 5가 출연했다면, 동일한 세 명의 배우가 무대에 서는 장면이 있어서는 안 된다.</li>
	<li>신인 배우들에게 보다 많은 기회를 주기 위해, 연극은 가능한 많은 장면으로 구성되어 있어야 한다. 즉 K를 최대로 해야 한다.</li>
</ol>

<p>예를 들어 N=2인 경우, 아래와 같이 연극을 구성하면 모든 조건을 만족시키게 된다.</p>

<ul>
	<li>연극이 시작되기 전:
	<ul>
		<li>(배우 1) 무대로</li>
	</ul>
	</li>
	<li>첫 번째 장면: (배우 1)
	<ul>
		<li>(배우 2) 무대로</li>
	</ul>
	</li>
	<li>두 번째 장면: (배우 1), (배우 2)
	<ul>
		<li>(배우 1) 뒤로</li>
	</ul>
	</li>
	<li>세 번째 장면: (배우 2)
	<ul>
		<li>(배우 2) 뒤로</li>
	</ul>
	</li>
	<li>연극이 끝나고 난 후:&nbsp;</li>
</ul>

<p>배우의 수가 주어지면, 극단의 매니저 김수현을 도와 연극을 구성하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수 N이 주어진다. (2 ≤ N ≤ 17) 신인 배우들은 1부터 N까지 순서대로 번호가 매겨진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 조건을 만족시키는 최대의 장면 수 K를 출력한다. 두 번째 줄에는 첫 번째 장면에 무대로 나올 배우의 번호를 출력한다. 세 번째 줄부터 K-1개 줄에 걸쳐 각 장면이 끝나고 다음 장면으로 넘어갈 때 무대로 나오거나 무대 뒤로 들어가는 배우의 번호를 출력한다. K+2번째 줄에는 마지막 장면에서 무대에 서게 되는 배우의 번호를 출력한다. 연극을 구성하는 방법이 둘 이상이면 아무 것이나 하나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
','3
1
2
1
2
','MATH'),
                                                                                                                (88,'BAEKJOON','https://www.acmicpc.net/problem/1279',1279,'내멋대로 주사위','2초','128 MB',14,'<p>진영이는 월드 카지노의 사장이다. 이번에 블랙잭의 신 최백준에게 거의 전 재산을 뺏기고 난 후에 어떻게 하면 다른 게임으로 돈을 되찾을까 고민하다가 새로운 주사위를 만들었다.</p>

<p>진영이가 만든 이 주사위는 6면이고, 각 면에는 양의 정수가 쓰여져 있고, 모두 다른 숫자들이다. 그리고, 주사위에 쓰여 있는 숫자의 평균은 M을 넘을 수 없다.</p>

<p>진영이가 원하는 주사위의 가능한 경우의 수를 구하는 프로그램을 작성하시오.</p>

<p>주사위 A와 B가 있을 때, B를 회전시켜서 A를 얻을 수 있다면, A와 B는 같은 주사위라고 한다. 정답이 매우 커질 수 있으니 1,000,000,007로 나눈 나머지를 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 M이 주어진다. M은 1보다 크거나 같고, 1,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>문제의 정답을 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>가능한 가장 작은 주사위가 (1,2,3,4,5,6)인데, 이 주사위의 평균이 3.5이다. 따라서 3을 넘지 않는 주사위는 없다.</p>

				</div>
				</div>','3
','0
','MATH'),
                                                                                                                (93,'BAEKJOON','https://www.acmicpc.net/problem/1284',1284,'집 주소','1초','128 MB',3,'<p>재석이는 대문에 붙이는 (주소를 나타내는) 호수판 제작업체의 직원이다. 고객에게 전달할 호수판은 숫자와 숫자 사이 그리고 왼쪽 오른쪽으로 적당히 여백이 들어가 줘야하고 숫자마다 차지하는 간격이 조금씩 상이하다. 다행이도 규칙은 매우 간단하다.&nbsp;</p>

<ol>
	<li><span style="font-family:Arial,&quot;Helvetica Neue&quot;,Helvetica,Tahoma,sans-serif">각 숫자 사이에는 1cm의 여백이 들어가야한다.</span></li>
	<li><span style="font-family:Arial,&quot;Helvetica Neue&quot;,Helvetica,Tahoma,sans-serif">1은 2cm의 너비를 차지해야한다. 0은 4cm의 너비를 차지해야한다. 나머지 숫자는 모두 3cm의 너비를 차지한다.</span></li>
	<li><span style="font-family:Arial,&quot;Helvetica Neue&quot;,Helvetica,Tahoma,sans-serif">호수판의 경계와 숫자 사이에는 1cm의 여백이 들어가야한다.</span></li>
</ol>

<p><img alt="120.png" src="https://upload.acmicpc.net/f203f2d5-ff6a-4afb-9cfe-226612dd4095/-/preview/" style="height:121px; width:213px"></p>

<p><span style="font-family:Arial,&quot;Helvetica Neue&quot;,Helvetica,Tahoma,sans-serif">예를 들어 위의 120 같은 경우,&nbsp;</span>&nbsp;각 숫자 사이에 여백이 1cm 씩 2개 들어간다. 1은 2cm, 2는 3cm, 0은 4cm를 차지한다. 오른쪽, 왼쪽 경계에서 각각 여백이 1cm씩 차지한다. 따라서 총 2 + 2 + 3 + 4 + 1 + 1 = 13(cm) 가 된다.</p>

<p>재석이는 고객에게 전달해야할 호수판의 너비가 얼마나 되는지 궁금해졌다. 재석이를 도와주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>호수판에 들어갈 숫자 N의 범위는 1 ≤ N ≤ 9999 이다.</p>

<p>입력은 마지막에 0이 들어오기 전까지 계속해서 줄 단위로 주어진다.</p>

<p>또한, 마지막의 0은 처리하지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 입력마다 얼마만큼 너비를 차지하는지 정수로 출력하면 된다.</p>

<p>각 출력은 줄바꿈으로 구분되어야한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','120
5611
100
0
','13
15
14
','MATH'),
                                                                                                                (90,'BAEKJOON','https://www.acmicpc.net/problem/1286',1286,'부분 직사각형','2초','128 MB',11,'<p>오민식은 크기가 N×M 이고, 문자로 채워져있는 직사각형 표를 하나 가지고 있다. 이 표를 복사해 표가 2×2 크기의 직사각형을 이루게 만든다. 그 다음, 복사해서 만든 표의 모든 부분 직사각형을 적는다.</p>

<p>예를 들어, 크기가 1×2인 직사각형 표가 있고, 다음과 같은 문자가 채워져 있는 경우를 보자.</p>

<pre>OK</pre>

<p>표를 복사해 2×2 크기의 직사각형을 이루게 만들면 다음과 같아진다.</p>

<pre>OKOK
OKOK</pre>

<p>여기서 찾을 수 있는 모든 부분 직사각형은 30가지가 있고, 다음과 같다. .은 구분을 위해 적은 문자이다.</p>

<pre>OKOK .... OKOK OKO. .... OKO. .KOK .... .KOK OK.. .... OK.. .KO. .... .KO.
OKOK OKOK .... OKO. OKO. .... .KOK .KOK .... OK.. OK.. .... .KO. .KO. ....

..OK ..OK .... O... .... O... .K.. .... .K.. ..O. .... ..O. ...K .... ...K
..OK .... ..OK O... O... .... .K.. .K.. .... ..O. ..O. .... ...K ...K ....
</pre>

<p>모든 부분 직사각형에서 각 알파벳이 몇 번 나오는지 구해보자. 위의 경우 K가 40번, O가 40번 등장한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 N, M이 주어진다. 둘째 줄부터 N개의 줄에는 표의 각 행에 채워져있는 문자가 주어진다. 문자는 모두 알파벳 대문자이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄부터 26번째 줄 까지 A가 몇 번 나오는지, B가 몇 번 나오는지, ...,&nbsp;Z가 몇 번 나오는지 까지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 4
GOOD
LUCK
','0
0
320
280
0
0
280
0
0
0
280
280
0
0
640
0
0
0
0
0
320
0
0
0
0
0
','MATH'),
                                                                                                                (89,'BAEKJOON','https://www.acmicpc.net/problem/1287',1287,'할 수 있다','2초','128 MB',16,'<p>당신은 사칙연산을 할 줄 아는가? 식이 주어지면, 그 식을 계산하여서 사칙연산을 할 줄 안다는 것을 보여라.</p>

<p>이 문제에서 계산할 <strong>식</strong>은 다음의 문법으로 정의되는 <code><expr></code>이다.</p>

<pre><digit> = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
<number> = <digit> | <number> <digit>
<expr> = <number> | <expr> + <expr> | <expr> - <expr> | <expr> * <expr> | <expr> / <expr> | ( <expr> )
</pre>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 계산해야 하는 식이 주어진다. 식은 <code>()*/+-0123456789</code>의 문자로만 이루어져 있으며, 길이는 1,000자 이하이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>식의 계산 결과를 출력한다. 만약 식이 올바르지 않아 계산할 수 없는 경우라면 <code>ROCK</code>을 출력한다.</p>

<ul>
	<li>식을 계산할 때는 일반적인 연산의 우선순위를 따른다. 즉 괄호(<code>()</code>) 안의 식 → 곱하기(<code>*</code>)와 나누기(<code>/</code>) → 더하기(<code>+</code>)와 빼기(<code>-</code>) 순서대로 계산하며, 같은 순위의 연산이 여러 개일 경우 왼쪽부터 순서대로 계산한다.</li>
	<li>주어진 식이 위의 문법을 만족할 경우, 식을 계산하는 과정에서 나눗셈이 등장한다면 반드시 나눗셈의 결과가 정수로 나누어떨어지거나 제수(나누는 수)가 0임이 보장된다. 이때, 제수가 0인 경우가 등장한다면 식이 올바르지 않은 것으로 간주한다.</li>
</ul>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5+(1+2)*3
','14
','MATH'),
                                                                                                                (92,'BAEKJOON','https://www.acmicpc.net/problem/1289',1289,'트리의 가중치','2초','128 MB',18,'<p>트리는 N개의 정점과 N-1개의 간선으로 구성된 그래프이다. 트리의 성질 중 하나는 어느 두 정점 간에도 유일하게 하나의 경로가 존재한다는 것이다.</p>

<p>트리의 모든 간선에 음이 아닌 정수인 가중치가 배정되었다. ‘경로의 가중치’란 경로에 해당하는 간선의 곱으로 정의된다. 또한 ‘트리의 가중치’는 트리 상에 가능한 모든 경로에 대해 ‘경로의 가중치’의 합을 의미한다. 문제는 트리가 주어졌을 때 ‘트리의 가중치’를 구하는 것이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 트리의 정점의 개수 N(1 ≤ N ≤ 100,000)이 주어진다. 다음 N-1개의 줄에 대해 각 줄에는 세 개의 정수 A, B, W(1 ≤ A, B ≤ N, 0 ≤ W ≤ 1,000)가 입력되는데 이는 A점과 B점이 연결되어 있고 이 간선의 가중치는 W라는 것을 의미한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에&nbsp;트리의 가중치를 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
3 2 100
2 1 100
','10200
','MATH'),
                                                                                                                (94,'BAEKJOON','https://www.acmicpc.net/problem/1292',1292,'쉽게 푸는 문제','2초','128 MB',5,'<p>동호는 내년에 초등학교를 입학한다. 그래서 동호 어머니는 수학 선행 학습을 위해 쉽게 푸는 문제를 동호에게 주었다.</p>

<p>이 문제는 다음과 같다. 1을 한 번, 2를 두 번, 3을 세 번, 이런 식으로 1 2 2 3 3 3 4 4 4 4 5 .. 이러한 수열을 만들고 어느 일정한 구간을 주면 그 구간의 합을 구하는 것이다.</p>

<p>하지만 동호는 현재 더 어려운 문제를 푸느라 바쁘기에 우리가 동호를 도와주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 구간의 시작과 끝을 나타내는 정수 A, B(1 ≤ A ≤ B ≤ 1,000)가 주어진다. 즉, 수열에서 A번째 숫자부터 B번째 숫자까지 합을 구하면 된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 줄에 구간에 속하는 숫자의 합을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 7
','15
','MATH'),
                                                                                                                (98,'BAEKJOON','https://www.acmicpc.net/problem/1307',1307,'마방진','2초','128 MB',17,'<p>마방진이란 N*N의 격자의 각 칸에 1부터 N*N까지의 정수를 정확히 하나씩 채웠을 때, 모든 가로줄, 세로줄, 대각선의 합이 같은 배치를 말한다.</p>

<p>예를 들면, 다음은 3*3 마방진 중 하나이다. 가로줄, 세로줄, 대각선의 합이 모두 15로 같다는 것을 알 수 있다.</p>

<p style="text-align: center;"><img alt="" src=https://www.acmicpc.net/upload/201004/mmm.JPG" style="height: 135px; width: 137px;"></p>

<p>N이 주어졌을 때 N*N 마방진을 하나 구해 보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수 N이 주어진다. (3 ≤ N ≤ 300)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>N*N 크기의 마방진을 아무거나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
','17 24 1 8 15
23 5 7 14 16
4 6 13 20 22
10 12 19 21 3
11 18 25 2 9
','MATH'),
                                                                                                                (91,'BAEKJOON','https://www.acmicpc.net/problem/1312',1312,'소수','2초','128 MB',6,'<p>피제수(분자) A와 제수(분모) B가 있다. 두 수를 나누었을 때, 소숫점 아래 N번째 자리수를 구하려고 한다. 예를 들어, A=3, B=4, N=1이라면, A÷B=0.75 이므로 출력 값은 7이 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 A와 B(1 ≤ A, B ≤ 100,000), N(1 ≤ N ≤ 1,000,000)이 공백을 경계로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>A÷B를 했을 때, 소숫점 아래 N번째 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','25 7 5
','2','MATH'),
                                                                                                                (95,'BAEKJOON','https://www.acmicpc.net/problem/1313',1313,'합성소수','1초','1024 MB',12,'<p>$1313$은 $ 13 \times 101$로 소인수분해되므로 합성수이지만, $1313$의 연속되는 진부분수 $13$, $31$, $13$, $131$, $313$은 모두 소수이다.</p>

<p>이 문제에서, <strong>연속되는 진부분수</strong>란 세 자리 이상의 양의 정수 $N$에 대하여 $N$의 십진수 표현에서 연속된 2개 이상의 숫자를 선택해 순서를 유지해서 만들 수 있는 수 중 $N$을 제외한 음이 아닌 정수라고 정의한다.</p>

<p>$1313$과 같이, 양의 정수 $N$이 다음 세 가지 조건을 모두 만족하면 <strong>합성소수</strong>라고 정의하자.</p>

<ul>
	<li>$N$은 세 자리 이상</li>
	<li>$N$은 합성수</li>
	<li>$N$의 연속되는 진부분수가 모두 소수</li>
</ul>

<p>단, 어떤 수의 연속되는 진부분수는 $0$으로 시작하는 수 및 $0$도 포함한다. 예를 들어 $20023$의 연속되는 진부분수는 $20$, $00(=0)$, $02(=2)$, $23$, $200$, $002(=2)$, $023(=23)$, $2002$, $0023(=23)$이 있다. $20$이 소수가 아니므로 $20023$은 합성소수가 아니다.</p>

<p>양의 정수 $ N $이 주어졌을 때 $ N $ 이하인 합성소수 중 가장 큰 수를 구해 보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트케이스의 수 $ T ( 1 \le T \le 10^5 )$ 가 주어진다.</p>

<p>두 번째 줄부터 $ T $개의 줄에 각각 하나의 정수 $ N ( 1 \le N \le 10^7 ) $이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트케이스마다 $ N $ 이하인 합성소수 중 가장 큰 수를 출력한다. 만약 $ N $ 이하인 합성소수가 존재하지 않는다면 그 대신 $-1$을 출력한다.</p>

<p>예제 출력과 같이 각 테스트케이스의 출력값은 입력 순서대로 한 줄에 하나씩 출력되어야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8
100
200
300
400
600
800
1000
1200
','-1
171
297
371
597
737
979
1137
','MATH'),
                                                                                                                (96,'BAEKJOON','https://www.acmicpc.net/problem/1322',1322,'X와 K','2초','128 MB',12,'<p>두 자연수 X와 K가 주어진다. 그러면, 다음 식을 만족하는 K번째로 작은 자연수 Y를 찾아야 한다.</p>

<p>X + Y = X | Y</p>

<p>|는 비트 연산 OR이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 X와 K가 주어진다. X와 K는 2,000,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 X + Y = X | Y를 만족하는 K번째 작은 Y를 출력한다. 정답은&nbsp;2<sup>31</sup>-1 보다 클 수도 있다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 1
','2
','MATH'),
                                                                                                                (100,'BAEKJOON','https://www.acmicpc.net/problem/1323',1323,'숫자 연결하기','2초','128 MB',12,'<p>영훈이는 태형이에게 어떤 수 N과 K를 주었다.</p>

<p>태형이는 N을 종이에 쓰기 시작했다. 태형이는 자신이 이 수를 몇 번 써야 그 수가 K로 나누어지는지 궁금해지기 시작했다.</p>

<p>N=10일 때, 이 수를 한 번 쓰면 10이고, 두 번 쓰면 1010이고, 세 번쓰면 101010이고,... 이런식이다.</p>

<p>어떤 수 N과 K가 주어졌을 때, N을 몇 번 써야 K로 나누어 떨어지는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 K가 주어진다. N은 1,000,000,000보다 작거나 같은 자연수이다. K는 100,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 몇 번 써야하는지 그 최솟값을 출력한다. 만약 아무리 써도 불가능할 경우에는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 9
','9
','MATH'),
                                                                                                                (97,'BAEKJOON','https://www.acmicpc.net/problem/1328',1328,'고층 빌딩','2초','128 MB',16,'<p>상근이가 살고있는 동네에는 빌딩 N개가 한 줄로 세워져 있다. 모든 빌딩의 높이는 1보다 크거나 같고, N보다 작거나 같으며, 같은 높이를 가지는 빌딩은 없다. 상근이는 학교 가는 길에 가장 왼쪽에 서서 빌딩을 몇 개 볼 수 있는지 보았고, 집에 돌아오는 길에는 가장 오른쪽에 서서 빌딩을 몇 개 볼 수 있는지 보았다.</p>

<p>상근이는 가장 왼쪽과 오른쪽에서만 빌딩을 봤기 때문에, 빌딩이 어떤 순서로 위치해있는지는 알 수가 없다.</p>

<p>빌딩의 개수 N과 가장 왼쪽에서 봤을 때 보이는 빌딩의 수 L, 가장 오른쪽에서 봤을 때 보이는 빌딩의 수 R이 주어졌을 때, 가능한 빌딩 순서의 경우의 수를 구하는 프로그램을 작성하시오.</p>

<p>예를 들어, N = 5, L = 3, R = 2인 경우에 가능한 빌딩의 배치 중 하나는 1 3 5 2 4이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에&nbsp;빌딩의 개수 N과 가장 왼쪽에서 봤을 때 보이는 빌딩의 수 L, 가장 오른쪽에서 봤을 때 보이는 빌딩의 수 R이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에&nbsp;가능한 빌딩 순서의 경우의 수를&nbsp;1000000007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 2 2
','2
','MATH'),
                                                                                                                (99,'BAEKJOON','https://www.acmicpc.net/problem/1335',1335,'여섯 쌍 서로소','2초','512 MB',24,'<p>$N$개의 정수 $X_1, X_2, \dots X_N$가 있다. $Y_{i,j} = X_i \times X_j \bmod {359999}$ 이다.</p>

<p>다음 조건을 만족하는 $(a, b, c, d, e, f)$의 개수를 구해보자.</p>

<ul>
	<li>$1 \le a, b, c, d, e, f \le N$</li>
	<li>$gcd(Y_{a,b}, Y_{c,d}, Y_{e,f}) = 1$</li>
</ul>

<p>$gcd(0, 0) = 0$이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 $N$, 둘째 줄에&nbsp;$X_1, X_2, \dots X_N$이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>문제 조건을 만족하는 $(a, b, c, d, e, f)$의 개수를 $10^9 + 7$로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
300 3000 30000
','234
','MATH'),
                                                                                                                (84,'BAEKJOON','https://www.acmicpc.net/problem/1338',1338,'알 수 없는 번호','2초','128 MB',12,'<p>당신은 한 개의 알 수 없는 수를 알아내야만 한다. <strong>"이런 젠장"</strong></p>

<p>어쨌든 당신은 그 수를 알아내야만 한다. 당신에게 주어지는 정보는 다음과 같다.</p>

<ol>
	<li>그 수가 있을 수 있는 범위</li>
	<li>그 수를 x로 나눈 나머지, 즉 그 수를 qx + y(0 ≤ y < |x|) 꼴로 나타냈을 때 y의 값</li>
</ol>

<p>이때, 당신은 그 수가 무엇인지 추측해야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 수가 있을 수 있는 범위의 양끝 값을 의미하는 두 개의 수가 주어진다.</p>

<p>두 번째 줄에는 나누는 수 x와 나머지 y가 주어진다.</p>

<p>주어지는 모든 수는 -2<sup>31</sup> 이상 2<sup>31</sup> - 1 이하의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 추측한 수를 출력한다. 만약 정확히 한 개로 추측할 수 없다면 <code>Unknwon Number</code>를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 10
10 5
','5
','MATH'),
                                                                                                                (58,'BAEKJOON','https://www.acmicpc.net/problem/1341',1341,'사이좋은 형제','2초','128 MB',13,'<p>영식이와 민식이는 케이크를 나누어 먹으려고 한다. 일단 영식이가 절반을 먹고, 민식이가 남은 절반을 먹는다. 또 계속 이렇게 절반을 먹고 한다. 이렇게 무한번 하고 나면 결국 케이크를 다 먹게 된다. 표로 만들어 보면 다음과 같다.</p>

<table class="table table-bordered table-center-20">
	<thead>
		<tr>
			<th>영식</th>
			<th>민식</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>1/2</td>
			<td>1/4</td>
		</tr>
		<tr>
			<td>1/8</td>
			<td>1/16</td>
		</tr>
		<tr>
			<td>1/32</td>
			<td>1/64</td>
		</tr>
		<tr>
			<td>1/128</td>
			<td>1/256</td>
		</tr>
		<tr>
			<td>...</td>
			<td>...</td>
		</tr>
	</tbody>
</table>

<p>위와 같이 먹게 되면 영식이는 항상 민식이의 두 배를 먹게 되므로 케이크의 2/3을 먹게 되고, 민식이는 1/3을 먹게 된다.</p>

<p>케이크를 재미있게 먹기 위해서 여러 가지 패턴을 만들기로 했다. 그렇게 되면 영식이가 먹게되는 케이크는 달라지게 된다. 만약 “영식,민식,영식”과 같이 먹게되면 다음과 같이 먹는다.</p>

<p>이렇게 되면 영식이는 5/7을 먹게 된다.</p>

<p>영식이가 먹게되는 케이크의 양이 분수로 주어진다. 그때, 패턴을 출력하는 프로그램을 작성하시오.</p>

<table class="table table-bordered table-center-30">
	<thead>
		<tr>
			<th>영식</th>
			<th>민식</th>
			<th>영식</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>1/2</td>
			<td>1/4</td>
			<td>1/8</td>
		</tr>
		<tr>
			<td>1/16</td>
			<td>1/32</td>
			<td>1/64</td>
		</tr>
		<tr>
			<td>1/128</td>
			<td>1/256</td>
			<td>1/512</td>
		</tr>
	</tbody>
</table>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 a와 b가 주어진다. a와 b는 a/b에서 분자와 분모다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 먹는 패턴을 출력한다. 패턴은 영식은 *로, 민식은 -로 출력한다. 만약, 패턴의 길이가 60 이하인 것이 없으면 -1을 출력한다.&nbsp;가능한 패턴이 여러 가지이면 짧은 것을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 3
','*-
','MATH'),
                                                                                                                (101,'BAEKJOON','https://www.acmicpc.net/problem/1342',1342,'행운의 문자열','2초','256 MB',10,'<p>민식이와 준영이는 자기 방에서 문자열을 공부하고 있다. 민식이가 말하길 인접해 있는 모든 문자가 같지 않은 문자열을 행운의 문자열이라고 한다고 한다. 준영이는 문자열 S를 분석하기 시작했다. 준영이는 문자열 S에 나오는 문자를 재배치하면 서로 다른 행운의 문자열이 몇 개 나오는지 궁금해졌다. 만약 원래 문자열 S도 행운의 문자열이라면 그것도 개수에 포함한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 문자열 S가 주어진다. S의 길이는 최대 10이고, 알파벳 소문자로만 이루어져 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 위치를 재배치해서 얻은 서로 다른 행운의 문자열의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','aabbbaa
','1','MATH'),
                                                                                                                (102,'BAEKJOON','https://www.acmicpc.net/problem/1344',1344,'축구','2초','128 MB',12,'<p>홍준이는 축구 경기를 보고 있다. 그러다가 홍준이는 역시 두 팀 중 적어도 한 팀이 골을 소수로 득점할 확률이 궁금해 졌다. 축구 경기는 90분동안 이루어지고, 분석을 쉽게하기 위해서 경기를 5분 간격으로 나눴다. 처음 간격은 처음 5분이고, 두 번째 간격은 그 다음 5분, 그리고 이런식으로 나눈다. 경기가 진행되는 동안 각 간격에서 A팀이 득점할 확률과 B팀이 득점할 확률이 주어진다. 그리고, 각 간격에서 두 팀은 각각 많아야 한 골을 득점할 수 있다. 경기가 끝난 후 적어도 한 팀이 골을 소수로 득점할 확률을 구하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 A팀이 득점할 확률, 둘째 줄에 B팀이 득점할 확률이 퍼센트 단위로 주어진다. 퍼센트 단위로 주어지는 확률은 모두 0보다 크거나 같고 100보다 작거나 같은 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에&nbsp;적어도 한 팀이 골을 소수로 득점할 확률을 출력한다. 정답과의 절대/상대 오차가&nbsp;10<sup>-6</sup>이내인 경우에 정답이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','50
50
','0.5265618908306351
','MATH'),
                                                                                                                (104,'BAEKJOON','https://www.acmicpc.net/problem/1350',1350,'진짜 공간','2초','128 MB',4,'<p>어떤 파일 시스템에는 디스크 공간이 파일의 사이즈와 항상 같지는 않다. 이것은 디스크가 일정한 크기의 클러스터로 나누어져 있고, 한 클러스터는 오직 한 파일만 이용할 수 있기 때문이다.</p>

<p>예를 들어, 클러스터의 크기가 512바이트이고, 600바이트 파일을 저장하려고 한다면, 두 개의 클러스터에 저장하게 된다. 두 클러스터는 다른 파일과 공유할 수 없기 때문에, 디스크 사용 공간은 1024바이트가 된다.</p>

<p>파일의 사이즈와 클러스터의 크기가 주어질 때, 사용한 디스크 공간을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 파일의 개수 N이 주어진다. N은 50보다 작거나 같은 자연수이다. 둘째 줄에는 파일의 크기가 공백을 사이에 두고 하나씩 주어진다. 파일의 크기는 1,000,000,000보다 작거나 같은 음이 아닌 정수이다. 마지막 줄에는 클러스터의 크기가 주어진다. 이 값은 1,048,576보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 사용한 디스크 공간을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
600
512
','1024
','MATH'),
                                                                                                                (103,'BAEKJOON','https://www.acmicpc.net/problem/1353',1353,'합과 곱','2초','128 MB',16,'<p>음이 아닌 수의 리스트가 있을 때, 그 리스트에 있는 수의 합이 S이고, 곱이 P일 때, 만족하는 리스트라고 한다.</p>

<p>S와 P가 주어졌을 때, 가능한 만족하는 리스트의 크기중 최소를 출력한다. 리스트의 크기란 그 리스트에 있는 수의 개수를 말한다. 만약 그러한 것이 없다면 -1을 출력한다.</p>

<p>리스트에는 정수가 아닌 수가 포함될 수도 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 S와 P가 주어진다. S와 P는 1,000,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 6
','2
','MATH'),
                                                                                                                (107,'BAEKJOON','https://www.acmicpc.net/problem/1355',1355,'구멍난 케이크 자르기','1초','128 MB',14,'<p>태수는 생일 선물로 특별한 케이크를 받았다. 이 케이크를&nbsp;위에서 보면 가운데 정사각형 구멍이 뚫려 있는 정사각형 모양이다.</p>

<p>케이크를 수평으로&nbsp;H번, 수직으로 V번 자르려고 한다. 수평으로 자를 때는 x축과 평행하면서 점 (0, h<sub>i</sub>)를 지나게 자르고, 수직으로 자를 때는 y축과 평행하면서 점 (v<sub>i</sub>, 0)을 지나게 자르려고 한다. 케이크를 자를 때는 그 길이는 무한대이다.</p>

<p>두 정사각형의 중심은 (0, 0)이고,&nbsp;모든 변은 x축 또는 y축에 평행하다.</p>

<p>케이크 한 변의 길이의 절반 L<sub>C</sub>와&nbsp;구멍 한&nbsp;변의 길이이 절반 L<sub>H</sub>가 주어진다.&nbsp;케이크를 주어진 방법으로 모두 잘랐을 때, 총 몇&nbsp;조각 났는지 구해보자.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 LC와 LH가 주어진다. 둘째 줄에는 H가 주어지고, 셋째 줄에는 h<sub>i</sub>를 공백으로 구분되어&nbsp;있다.&nbsp;넷째 줄에는 V가 주어지고, 다섯째 줄에는 v<sub>i</sub>를 공백으로 구분되어 있다.</p>

<p>H가 0인 경우 셋째 줄은 빈 줄이고, V가 0인 경우 다섯째 줄은 빈 줄이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 조각의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 3
2
1 -4
1
1
','6
','MATH'),
                                                                                                                (106,'BAEKJOON','https://www.acmicpc.net/problem/1356',1356,'유진수','2초','128 MB',5,'<p>유진수는 어떤 수를 10진수로 표현한 뒤 그 수를 두 부분으로 나눴을 때, 앞부분 자리수의 곱과 뒷부분 자리수의 곱이 같을 때를 말한다.</p>

<p>예를 들어, 1221은 유진수이다. 12와 21로 나눴을 때, 앞부분 자리수의 곱 1*2는 뒷부분 자리수의 곱 2*1과 같기 때문이다. 1236도 마찬가지로 유진수이다. 하지만, 1234는 아니다. 수를 나눌 때 항상 연속된 자리수를 나눠야하고, 각 부분에 적어도 한자리는 있어야 한다.</p>

<p>예를 들어, 12345는 총 4가지 방법으로 나눌 수 있다. 1-2345, 12-345, 123-45, 1234-5 어떤 수 N이 주어질 때, 이 수가 유진수인지 아닌지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 수 N이 주어진다. 이 수는 2,147,483,647보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 N이 유진수이면 YES, 아니면 NO를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1236
','YES
','MATH'),
                                                                                                                (105,'BAEKJOON','https://www.acmicpc.net/problem/1359',1359,'복권','2초','128 MB',7,'<p>어제, 지민이는 몰래 리조트에 갔다가 입구에 걸려있는 복권 광고를 하나 보았다.</p>

<p>“1부터 N까지의 수 중에 서로 다른 M개의 수를 골라보세요. 저희도 1부터 N까지의 수 중에 서로 다른 M개의 수를 고를건데, 적어도 K개의 수가 같으면 당첨입니다.!”</p>

<p>지민이는 돌아오면서 자신이 복권에 당첨될 확률이 궁금해졌다.</p>

<p>지민이가 복권에 당첨될 확률을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 세 정수 N, M, K가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 지민이가 복권에 당첨될 확률을 출력한다. 절대/상대 오차는 10<sup>-9</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 1 1
','0.3333333333333333
','MATH'),
                                                                                                                (108,'BAEKJOON','https://www.acmicpc.net/problem/1364',1364,'울타리 치기','2초','128 MB',12,'<p><img width="271" height="271" alt="" src=https://www.acmicpc.net/upload/201004/bej.JPG"></p>
<p>육각형 블록들로 이루어진 RPG 세계가 있다. 그 세계에 나라를 세우려고 하는 군주 캐릭터 송유진은 일반 블록을 울타리 블록으로 바꿀 수 있는 아이템을 N개 가지고 있다. 유진이가 이 N개의 아이템을 이용해서 점령할 수 있는 최대의 영토의 넓이를 구해보자. 울타리 안에 둘러싸인 블록들은 당연히 넓이에 포함 시키고, 울타리를 세운 블록도 넓이에 포함을 시킨다. 울타리는 항상 이어져 있어야 하며, 맵의 넓이는 무한하다.</p>

					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에는 송유진이 가지고 있는 아이템의 수 N(1≤N≤1,000,000)이 주어진다.</p>
					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>N개의 아이템을 이용하여 점령할 수 있는 최대의 블록 수를 출력한다.</p>
					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6','7','MATH'),
                                                                                                                (111,'BAEKJOON','https://www.acmicpc.net/problem/1369',1369,'배열값','2초','128 MB',16,'<p>가로 N칸, 세로 N칸으로 되어 있는 정사각형 모양의 배열이 있고, 배열의 각 칸에는 음이 아닌 정수가 하나씩 적혀져 있다. 우리는 이 배열의 배열값을 다음과 같이 찾고자 한다.</p>
<p>배열의 왼쪽 위 칸인 (1, 1)에서 오른쪽 아래 칸인 (N, N)으로의 이동을 생각할 수 있다. 이동할 때는 반드시 현재 위치의 아래 칸이나, 현재 위치의 오른쪽 칸으로만 이동할 수 있다. 물론, 배열 밖으로 나갈 수는 없다. 또한 하나의 제약이 더 있는데, 그 칸에 적혀져 있는 정수가 0인 경우에는 그 칸으로 이동할 수 없다.</p>
<p>이렇게 (1, 1)에서 (N, N)까지 이동하는 경로는 여러 가지가 있을 수 있다. 우리는 이러한 각각의 경로에 대해서 경로값을 정의할 수 있는데, 이동하면서 거쳐 온 2N-1개의 칸에 적혀 있는 모든 정수의 곱을 이 경로의 경로값으로 정의한다. 예를 들어 N=3이고 배열이 아래와 같은 모양이라고 할 때, 거쳐 온 칸에 적혀 있는 정수가 1, 2, 3, 5, 8이 되도록 이동했다면 이 경우 경로값은 240(=1×2×3×5×8)이 된다.</p>
<p><img width="251" height="117" alt="" src=https://www.acmicpc.net/upload/201004/qoduf.JPG"></p>
<p>주어진 배열에서 (1, 1)부터 (N, N)까지 이동하는 경로는 매우 많을 수 있으므로, 경로값 또한 다양하게 나타날 수 있다. 이러한 모든 경로값 중에서, 경로값을 나타내는 자연수의 끝자리 0의 개수가 가장 적을 때, 그 0의 개수를 이 배열의 배열값으로 정의한다. 위 배열의 경우 1, 4, 6, 7, 8의 경로로 이동하면 경로값이 1344(=1×4×6×7×8)이 되므로, 이 경우가 끝자리 0의 개수가 가장 적은 경우이다. (240은 끝자리 0의 개수가 1개이므로 0개보다 많다) 따라서 위 배열의 배열값은 0이 된다.</p>
<p>배열이 주어지면 그 배열의 배열값을 계산하는 프로그램을 작성하시오. 항상 (1, 1)에서 (N, N)으로 이동하는 경로가 존재하는 데이터만이 입력으로 들어온다.</p>

					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 배열의 크기를 나타내는 자연수 N(2≤N≤1,000)이 주어진다. 둘째 줄부터 N개의 줄에 걸쳐 배열에 적힌 수를 나타내는 정수가 각각 N개씩 빈 칸을 사이에 두고 들어온다. 입력되는 정수는 음 아닌 정수로 그 크기는 1,000,000을 넘지 않는다.</p>
					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 이 배열의 배열값을 출력한다.</p>
					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 2 3
4 0 5
6 7 8
','0
','MATH'),
                                                                                                                (109,'BAEKJOON','https://www.acmicpc.net/problem/1373',1373,'2진수 8진수','1초','128 MB',5,'<p>2진수가 주어졌을 때, 8진수로 변환하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에&nbsp;2진수가&nbsp;주어진다. 주어지는 수의 길이는 1,000,000을 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 주어진 수를 8진수로 변환하여 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','11001100
','314
','MATH'),
                                                                                                                (110,'BAEKJOON','https://www.acmicpc.net/problem/1386',1386,'f와 g','3초','512 MB',25,'<p>$N$개의 정수 $a_1, a_2, \dots, a_N$이 주어진다. 함수 $f$와 $g$는 다음과 같이 정의한다.</p>

<p>\[f(x,k) = (x + a_1)^k + (x + a_2)^k + \cdots + (x + a_N)^k\]</p>

<p>\[g(t,k) = f(0,k) + f(1,k) + \cdots + f(t,k)\]</p>

<p>두 정수 $T$와 $K$, 그리고 $N$개의 정수가 주어졌을때, $g(T,i)$를 $10^9+7$로 나눈 나머지를 구해보자. ($0 \le i \le k$)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에&nbsp;$N$, $K$, $T$가 주어진다.</p>

<p>둘째 줄에&nbsp;$a_1, a_2, \dots, a_N$이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>$g(T, 0), g(T, 1), \dots, g(T, K)$를 $10^9 +7$로 나눈 나머지를 공백 한 칸으로 구분해 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 3 4
0 1
','10 25 85 325
','MATH'),
                                                                                                                (112,'BAEKJOON','https://www.acmicpc.net/problem/1393',1393,'음하철도 구구팔','2초','128 MB',10,'<p>최백준은 음하철도 구구팔에 탔다.</p>

<p>문제는 구구팔의 기장인 조교 김재홍이 반쯤 미쳐서 열차를 멈추지 않는다는 것이다. 그래서&nbsp;최백준은 달리고 있는 열차에서 뛰어내려야 한다.</p>

<p>그런데 뛰어내릴 때 정류장 까지 거리가 너무 멀면 마이 아플 수 있다.</p>

<p>그래서 철도가 정류장에 가장 많이 근접했을 때 뛰어내리고자 한다.</p>

<p>어디서 뛰어내려야 하는가?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫번째 줄에는 x<sub>s</sub>와 y<sub>s</sub>가 주어진다. 이는 정류장의 위치가 (x<sub>s</sub>, y<sub>s</sub>)임을 의미한다.</p>

<p>두번째 줄에는 x<sub>e</sub>, y<sub>e</sub>, dx, dy가 주어진다. 이는 현재 열차 위치가 (x<sub>e</sub>, y<sub>e</sub>)이고, 열차가 1초마다 x가 증가하는 방향으로 dx만큼, y가 증가하는 방향으로 dy만큼 이동함을 의미한다</p>

<p>주어지는 모든 수는 -100이상, 100이하의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>최백준이 뛰어내릴 위치의 x좌표와 y좌표를 출력한다. 뛰어내릴 위치의 좌표가 항상 정수인 입력만 주어진다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 2
2 1 2 4
','3 3
','MATH'),
                                                                                                                (113,'BAEKJOON','https://www.acmicpc.net/problem/1394',1394,'암호','2초','128 MB',11,'<p>유진이는 현수의 암호를 알아내려고 한다. 유진이는 사전 조사를 통해 임현수의 컴퓨터에 어떤 문자들이 쓰이는지 알아내었고, 하나씩 대입해보려고 한다. 대입하는 순서는 유진이가 메모한 문자 집합의 순서대로이고, 한 글자부터 암호가 풀릴 때까지 모두 대입해본다.</p>
<p>예를 들어, 메모한 문자 집합이 bca라고 한다면, 유진이는 b, c, a, bb, bc, ba, cb, cc, ca, ab, ac, aa, bbb, bbc, ........ 순서로 암호가 풀릴 때까지 계속 대입해본다.</p>

					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 암호로 사용할 수 있는 문자가 공백 없이 주어지고, 두 번째 줄에는 컴퓨터의 암호가 주어진다. 암호에 사용할 수 있는 문자의 종류는 최대 100가지이고, 공백은 사용할 수 없다. 영문자는 대소문자를 구분한다. 암호의 길이는 최대 1,000,000자이다.</p>
					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 주어진 암호를 몇 번의 시도로 풀 수 있는지 출력한다. 만약 수가 클 경우, 시도 횟수를 900528으로 나눈 나머지를 출력한다.</p>
					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','abcdefghijklmnopqrstuvwxyz
ak
','37
','MATH'),
                                                                                                                (114,'BAEKJOON','https://www.acmicpc.net/problem/1399',1399,'보물의 위치','2초','128 MB',16,'<p>dig라는 함수를 다음과 같이 정의하자.</p>

<ul>
	<li>dig(x) = x (0 ≤ x ≤ 9)</li>
	<li>dig(x) = dig(x의 모든 자리수의 합) (x ≥ 10)</li>
</ul>

<p>예를 들어, dig(49) = dig(13) = dig(4) = 4</p>

<p>오민식은 아주 낡은 지도를 가지고 보물을 찾아 헤매는 사냥꾼의 두목이다. 낡은 지도에는 보물을 어떻게 찾아야 하는지가 나와 있다.</p>

<p>지금 오민식은 북쪽을 보고 있고, 현재 좌표는 (0, 0)이다.&nbsp;북쪽은&nbsp;Y좌표가 증가하는 방향, 동쪽은 X좌표가 증가하는 방향이다.</p>

<p>오민식은 다음과 같은 작업을 K번 반복하면 보물의 위치를 찾을 수 있다. 골드 넘버는 1부터 시작한다.</p>

<ol>
	<li>dig(골드 넘버)만큼 앞으로 간다. 그리고 90도 오른쪽으로 회전한다.</li>
	<li>골드 넘버에 M을 곱한다.</li>
</ol>

<p>오민식의 마지막 위치. 즉, 보물의 위치를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 둘째 줄부터 T개의 줄에 각각의 테스트 케이스에 대해&nbsp; K와 M이 주어진다. K는 10<sup>9</sup>보다 작거나 같은 자연수이고, M은 1000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스에 대해 보물의 위치를 X Y 형태로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
5 2
99 1
6 9
','-6 4
1 0
9 1
','MATH'),
                                                                                                                (115,'BAEKJOON','https://www.acmicpc.net/problem/1401',1401,'요컨대 형택이의 사탕봉지','5초','128 MB',18,'<p>요컨대 형택이는 사탕을 좋아한다. 이제 이 사탕을 보관하기 위해, 형택이는 요컨대 N개의 사탕 봉지를 만들었다. 그런데 형택이는 서로 다른 사탕 봉지에 같은 개수의 사탕이 들어있는 것을 요컨대 끔찍이도 싫어한다.</p>
<p>요컨대 첫 번째 사탕 봉지에는 사탕이 한 개, 요컨대 두 번째 사탕 봉지에는 사탕이 두 개, ..., 요컨대 N번째 사탕 봉지에는 사탕이 요컨대 N개 들어있다. 이제 요컨대 형택이는 이 N개의 요컨대 사탕 봉지 중에 몇 개만을 골라서 남겨 두고 나머지는 요컨대 조교님들께 드리려고 한다. 그런데 문제가 있다.</p>
<p>문제는 바로, 기훈이가 호시탐탐 형택이를, 아니 형택이의 사탕봉지를 노리고 있다는 것이다. 기훈이는 절대로 사탕을 노리는 것이 아니다. 형택이가 손수 만든 사탕 봉지를 노리는 것이다. 그런데 너무 티가 나면 안 되니까, 두 개의 사탕 봉지에 들은 사탕을 합쳐서 한 봉지에 넣고, 한 봉지를 자신이 가져가려고 한다.</p>
<p>그런데 문제가 있다. 바로 N = 10일 때, 네 개의 사탕이 들어있는 사탕봉지와 다섯 개의 사탕이 들어있는 사탕봉지를 합치게 되면 아홉 개의 사탕이 들어있는 사탕봉지와 개수가 똑같아진다. 이것은 형택이가 너무너무 싫어하는 것!</p>
<p>따라서 기훈이는 N개의 사탕 봉지 중에 K개를 고를 때, K개중 어떤 두 개의 사탕 봉지를 합쳤을 때 그것과 같은 개수의 사탕이 들어 있는 봉지가 포함되지 않도록 K개를 고르고 싶다. 위의 예처럼 각각 4개, 5개의 사탕이 들은 사탕 봉지를 고르기로 하였으면 9개의 사탕이 들은 사탕 봉지는 고르지 않아야 하는 것이다.<br>
&nbsp; 이러한 조건을 만족하면서 최대 몇 개의 사탕 봉지를 고를 수 있는지를 결정하는 프로그램을 작성하시오. 또한, 그러한 경우가 몇 가지나 있는지, 또 실제로 어떻게 고르면 되는지도 함께 구해야 한다. 예를 들어 N=3일 때, 최대로 두 개의 사탕 봉지만을 고를 수 있고, (세 개를 고르면 1+2=3이 되어 안 된다.) 이러한 경우는 1과 2, 1과 3, 2와 3의 세 가지 경우가 있다.</p>

					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 데이터 케이스의 개수 D가 주어진다. (1≤D≤100) 둘째 줄부터 D개의 줄에 걸쳐 각각의 케이스의 경우 N이 주어진다. (1≤N≤1,000,000)</p>
					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해, 첫째 줄에 최대 몇 봉지를 뽑을 수 있는지를 나타내는 정수 K와, 그러한 경우가 몇 가지인지를 나타내는 정수 A를 빈 칸을 사이에 두고 출력한다. 둘째 줄부터 A개의 줄에 걸쳐 최대로 사탕봉지를 뽑을 수 있는 경우를 각각 한 줄에 한 가지씩 출력한다. 각 줄에는 K개의 정수를 오름차순으로 빈 칸을 사이에 두고 하나씩 나타내면 된다. 각각의 A개의 줄을 출력할 때는, K개의 정수를 나열한 것을 하나의 순열으로 볼 때 사전 순으로 앞서는 순서대로 출력해야 한다. 예를 들어 N=3인 경우 1, 2를 먼저, 1, 3을 그 다음, 마지막으로 2, 3을 출력하면 된다.</p>
					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1
3
','1 1
1
2 3
1 2
1 3
2 3
','MATH'),
                                                                                                                (116,'BAEKJOON','https://www.acmicpc.net/problem/1402',1402,'아무래도이문제는A번난이도인것같다','2초','128 MB',6,'<p>어떤 정수 A가 있으면 그 수를 A = a<sub>1</sub> * a<sub>2</sub> * a<sub>3</sub> * a<sub>4</sub> ... * a<sub>n</sub>으로 했을 때 A = a<sub>1</sub> + a<sub>2</sub> + a<sub>3</sub> ... + a<sub>n</sub>이 성립하면 "A는 A으로 변할 수 있다"라고 한다. (a<sub>i</sub>는 정수) 만약 A이 A"으로 변할 수 있으면 "A는 A"으로 변할 수 있다"라고 한다.</p>

<p>이때 A와 B가 주어지면 A는 B로 변할 수 있는지 판별하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 테스트 케이스의 개수 T(1 ≤ T ≤ 100)이 주어진다. 테스트 케이스마다 두 정수 A, B(-2<sup>31</sup> ≤ A, B ≤ 2<sup>31</sup>-1)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스마다 한 줄에 변할 수 있으면 yes, 아니면 no를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>6 = 2*3, 2+3=5이므로 성립한다.</p>

				</div>
				</div>','1
6 5
','yes
','MATH'),
                                                                                                                (118,'BAEKJOON','https://www.acmicpc.net/problem/1404',1404,'토너먼트 승자','2초','128 MB',8,'<p>최백준은 8명이 참가하는 스타크래프트 토너먼트를 개최했다. 토너먼트는 3개의 라운드로 열리고, 다음과 같이 진행된다.</p>

<p>라운드 1에서 i번 경기는 2×i번 참가자와 2×i+1번 참가자의 경기이다. (0 ≤ i ≤ 3), 4명의 승자가 라운드 2로 진출한다.</p>

<p>라운드 2에서 2*i번 경기의 승자와 2×i+1번 경기의 승자가 서로 경기를 한다. (0 ≤ i ≤ 1), 2명의 승자가 라운드 3에 진출한다.</p>

<p>라운드 2의 승자가 토너먼트의 승자를 가리기 위해서 한 게임을 한다.</p>

<p>8명의 참가자가 서로와 싸웠을 때 이길 수 있는 승률이 주어진다. 이때, 각 참가자가 우승할 수 있는 확률을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 수 28개가 주어진다. 처음 7개의 수는 0번 참가자가 1번 참가자와 싸워서 이길 수 있는 확률부터 7번 참가자와 싸워서 이길 수 있는 확률이다. 다음 6개의 수는 1번 참가자와 2번 참가자와 싸워서 이길 수 있는 확률부터 7번 참가자와 싸워서 이길 수 있는 확률이다. 이와 같이 주어진다. 모든 수는 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 각 참가자가 우승할 수 있는 확률을 출력한다. 절대/상대 오차는 10<sup>-9</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 0 10 15 20 25 30 0 35 40 45 50 55 100 100 100 100 100 60 65 70 75 80 85 90 95 50 50
','0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0
','MATH'),
                                                                                                                (117,'BAEKJOON','https://www.acmicpc.net/problem/1405',1405,'미친 로봇','1초','128 MB',12,'<p>통제 할 수 없는 미친 로봇이 평면위에 있다. 그리고 이 로봇은 N번의 행동을 취할 것이다.</p>

<p>각 행동에서 로봇은 4개의 방향 중에 하나를 임의로 선택한다. 그리고 그 방향으로 한 칸 이동한다.</p>

<p>로봇이 같은 곳을 한 번보다 많이 이동하지 않을 때, 로봇의 이동 경로가 단순하다고 한다. (로봇이 시작하는 위치가 처음 방문한 곳이다.) 로봇의 이동 경로가 단순할 확률을 구하는 프로그램을 작성하시오. 예를 들어, EENE와 ENW는 단순하지만, ENWS와 WWWWSNE는 단순하지 않다. (E는 동, W는 서, N은 북, S는 남)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, 동쪽으로 이동할 확률, 서쪽으로 이동할 확률, 남쪽으로 이동할 확률, 북쪽으로 이동할 확률이 주어진다. N은 14보다 작거나 같은 자연수이고,&nbsp; 모든 확률은 100보다 작거나 같은 자연수 또는 0이다. 그리고, 동서남북으로 이동할 확률을 모두 더하면 100이다.</p>

<p>확률의 단위는 %이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 로봇의 이동 경로가 단순할 확률을 출력한다.&nbsp;절대/상대 오차는 10<sup>-9</sup> 까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 25 25 25 25
','0.75
','MATH'),
                                                                                                                (120,'BAEKJOON','https://www.acmicpc.net/problem/1407',1407,'2로 몇 번 나누어질까','2초','128 MB',12,'<p>자연수 N이 주어지면, 자연수를 유지하면서 N을 2로 몇 번까지 나눌 수 있는지를 생각해 볼 수 있다. 즉, N의 모든 약수 중 2의 거듭제곱 꼴이면서 가장 큰 약수를 생각하는 것이다. 예를 들어 15의 경우는 2로 한 번도 나눌 수 없으므로 2^0 = 1이 해당되고, 40의 경우는 2로 세 번까지 나눌 수 있으므로 2^3 = 8이 해당된다. 이러한 약수를 함수값으로 가지는 함수 f(x)를 정의하자. 즉, f(15) = 1이고, f(40) = 8이다.</p>

<p>두 자연수 A, B(A≤B)가 주어지면, A 이상 B 이하의 모든 자연수에 대해서, 그 자연수의 모든 약수 중 2의 거듭제곱 꼴이면서 가장 큰 약수들의 총 합을 구하는 프로그램을 작성하시오. 즉 아래와 같은 수식의 값을 구해야 한다.</p>

<p>f(A) + f(A+1) + ... + f(B-1) + f(B)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수 A와 B가 빈 칸을 사이에 두고 주어진다. (1≤A≤B≤10^15)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 구하고자 하는 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','176 177
','17
','MATH'),
                                                                                                                (122,'BAEKJOON','https://www.acmicpc.net/problem/1413',1413,'박스 안의 열쇠','2초','128 MB',16,'<p>1부터 N까지 번호가 매겨진 박스와 1부터 N까지 번호가 매겨진 열쇠가 있다. i번째 키는 i번째 박스를 열 수 있다.</p>

<p>다못이는 각각의 박스에 정확하게 하나의 열쇠를 무작위로 넣는다. 각각의 열쇠가 박스에 들어갈 확률은 모두 같다고 가정한다. 그러고 나서 박스를 모두 잠근다. 다못이에게는 M개의 폭탄이 있다. 폭탄은 잠겨져 있는 박스를 파괴하는 역할을 한다. 이때 박스 안에 있는 열쇠는 부서지지 않는다. 다못이는 모든 열쇠를 얻고 싶다. 그래서 다음 전략을 사용하기로 했다.</p>

<p>우선 잠겨져 있는 박스 하나를 선택해서 폭탄으로 파괴하고 열쇠를 얻는다. 각각의 잠겨져 있는 박스가 선택될 확률은 모두 같다. 그 열쇠로 열 수 있는 박스가 있으면 열고, 그 박스 속의 열쇠로 열 수 있는 박스가 있으면 또 열고, 이를 열 박스가 더 이상 없을 때까지 반복한다. 그러고 나서 폭탄이 남았으면 그 폭탄을 이용해서 이 전략을 반복한다.</p>

<p>다못이가 모든 열쇠를 얻을 확률을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 박스와 열쇠의 개수 N과 폭탄의 개수 M이 공백을 사이에 두고 주어진다. N은 20보다 작거나 같은 자연수이고, M은 N보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>다못이가 모든 열쇠를 얻을 확률을 A/B 형태로 출력한다. A와 B는 최대공약수가 1인 자연수이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1의 경우 1번 박스에&nbsp;열쇠2가 들어있으면, 모든 키를 얻을 수 있다.</p>

				</div>
				</div>','2 1
','1/2
','MATH'),
                                                                                                                (119,'BAEKJOON','https://www.acmicpc.net/problem/1415',1415,'사탕','2초','128 MB',15,'<p>다솜이는 슈퍼에서 사탕을 사려고 한다. 슈퍼에는 사탕이 N종류가 있다. 각각의 사탕은 가격이 있다. 다솜이는 사탕을 사는데, 사탕의 가격의 합이 소수가 되게하려고 한다.</p>

<p>가격이 같은 사탕은 모양이 같게 생겼다. 따라서 다솜이는 사탕을 적절히 샀을 때, 그 모양이 전부 똑같은 방법은 사지 않으려고 한다.</p>

<p>예를 들어, (1, 2, 1, 3, 1)을 사는 것과, (3, 1, 1, 1, 2)를 사는 것은 같은 방법이다. 따라서 한번만 세야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 슈퍼에 있는 사탕의 개수 N이 주어진다. N은 50보다 작거나 같은 자연수이다. 둘째 줄부터 N개의 줄에 각 사탕의 가격이 주어진다. 사탕의 가격은 10,000보다 작거나 같은 음이 아닌 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 다솜이가 사탕을 살 수 있는 방법의 경우의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1
1
2
7
','5','MATH'),
                                                                                                                (123,'BAEKJOON','https://www.acmicpc.net/problem/1418',1418,'K-세준수','2초','128 MB',6,'<p>오세준은 어떤 자연수의 소인수중 최댓값이 K보다 크지 않을때 그 수를 K-세준수라고 부른다.</p>

<p>N보다 작거나 같은 자연수 중에 K-세준수가 총 몇 개인지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, 둘째 줄에 K가 주어진다. N은 100,000보다 작거나 같은 자연수이고, K는 100보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 N보다 작거나 같은 K-세준수가 몇 개인지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10
3
','7','MATH'),
                                                                                                                (124,'BAEKJOON','https://www.acmicpc.net/problem/1419',1419,'등차수열의 합','2초','128 MB',11,'<p>첫 항이 x이고 공차가 d인 등차수열의 첫 k개의 항은 x, x+d, x+2d, ..., x+(k-1)d이다. x와 d가 자연수인 등차수열의 첫 k개의 항의 합으로 나타낼 수 있는 수 중에서, l 이상이고 r 이하인 수가 몇 개인지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>자연수 l, r, k가 순서대로 한 줄에 하나씩&nbsp;주어진다. (1&nbsp;≤ l ≤ r ≤ 1,000,000,000, 2&nbsp;≤ k&nbsp;≤ 5)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 조건을 만족하는 수의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>6=1+2+3, 9=2+3+4=1+3+5, 12=3+4+5=2+4+6=1+4+7</p>

				</div>
				</div>','1
12
3
','3
','MATH'),
                                                                                                                (126,'BAEKJOON','https://www.acmicpc.net/problem/1424',1424,'새 앨범','2초','128 MB',11,'<p>인기 펑크 락밴드 SHOM은 새 앨범을 내기로 했다. SHOM의 새 앨범에는 총 N개의 노래가 들어간다. SHOM은 요번 앨범에는 새로운 시도를 했는데, 앨범에 수록되는 모든 노래의 길이가 모두 같다.</p>

<p>시디 한 장에는 C초만큼의 노래를 저장할 수 있다.</p>

<p>숌은 N개의 곡을 모두 앨범에 넣고 싶은 욕망이 있었기 때문에, N개의 곡을 몇 장의 씨디로 나누어야 할지 궁금해졌다. 하지만, 가격을 위해 시디의 개수를 최소화하고 싶었다.</p>

<p>하지만, SHOM의 보컬 이다솜은 자신의 미신 때문에, 절대로 시디에 녹음되는 노래의 개수가 13으로 나누어 떨어지면 안 된다는 조건을 걸었다.</p>

<p>시디에 노래를 두 곡이상 수록할 때, 어떤 노래와 어떤 노래 사이에는 1초의 공백이 반드시 필요하다.</p>

<p>SHOM의 새 앨범은 총 몇 장으로 발매될지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 노래의 개수 N이 주어진다. 이 값은 100,000보다 작거나 같은 자연수이다. 둘째 줄에는 노래의 길이 L이 주어진다. 이 값은 초 단위이다. 셋째 줄에는 한 시디의 용량 C가 초 단위로 주어진다. C는 10,000보다 작거나 같은 자연수이고, L은 C보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 시디가 총 몇 장 필요한지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1의 경우 한 시디에 최대 두 곡까지 밖에 넣을 수 없다.</p>

				</div>
				</div>','7
2
6
','4
','MATH'),
                                                                                                                (127,'BAEKJOON','https://www.acmicpc.net/problem/1430',1430,'공격','2초','128 MB',12,'<p>다솜이는 누구나 쉽게 게임을 만들 수 있도록 하기 위해 Microsoft에서 출시한 XNA Game Studio Express를 가지고 게임을 만들었다.</p>

<p>다솜이의 게임은 적의 공격에 대비해서 도시를 방어하는 게임이다. 도시에는 탑이 N개가 있다. 각각의 탑은 X-Y좌표 평면위에 존재한다. 또, 탑은 맨 처음에 D의 에너지를 가지고 있고, 탑의 사정거리는 R이다.</p>

<p>탑 주변에 적이 나타나면, 탑은 적을 다음과 같은 방법으로 공격할 수 있다.</p>

<p>일단, 탑은 자신의 에너지를 재분배할 수 있다. 만약 서로 다른 두 탑의 거리가 R보다 작거나 같다면, 둘 중에 한 탑은 다른 탑에게 에너지를 자기가 가지고 있는 한도내에서 자유롭게 전송할 수 있다. 하지만, 에너지를 전송할 때는, 절반을 잃는다. (탑 1이 탑 2에게 에너지를 10 전송하면, 탑 1은 에너지를 10을 잃고, 탑 2는 에너지를 5 얻는다.)</p>

<p>탑이 적을 공격할 때는, 적과 탑의 거리가 R보다 작거나 같아야한다. 탑에서 적을 공격할 때는, 자신의 모든 에너지를 적을 공격하는데 쓴다. 이때 적이 받는 데미지는 에너지의 양과 같다.</p>

<p>적이 받을 수 있는 에너지의 최댓값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 탑의 개수 N, 사정 거리 R, 초기 에너지 D, 적의 X좌표 X, 적의 Y좌표 Y가 주어진다. 둘째 줄부터는 탑의 위치가 한 줄에 하나씩 X좌표 Y좌표 순으로 주어진다. N은 50보다 작거나 같은 자연수이고, R은 500보다 작거나 같은 자연수, D는 100보다 작거나 같은 자연수이다. 모든 X좌표와 Y좌표는 1,000보다 작거나 같은 음이 아닌 정수이다. 탑의 위치가 같은 경우는 없고, 적과 탑의 위치가 같은 경우도 입력으로 주어지지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 적이 받는 데미지의 최댓값을 출력한다. 절대/상대 오차는 10<sup>-2</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1: 탑4 -> 탑3 10 전송 탑3 -> 탑2 15 전송 탑2 -> 탑1 17.5 전송 탑1 -> 적 18.75 공격</p>

				</div>
				</div>','4 2 10 0 0
2 0
4 0
6 0
8 0
','18.75
','MATH'),
                                                                                                                (129,'BAEKJOON','https://www.acmicpc.net/problem/1433',1433,'화학 실험','2초','128 MB',15,'<p>화학에서 말하는 솔루션은 컴퓨터 프로그래밍에서 말하는 솔루션과 다른 의미를 가지고 있다.</p>

<p>x리터의 어떤 물질을 (100-x)리터의 물에 넣으면 어떤 물질의 x% 솔루션을 얻는다고 한다. (한국어로 x% 용액)</p>

<p>다솜이는 같은 물질의 용액을 담고 있는 N개의 병을 가지고 있다. 각각의 병에는 몇 리터가 들어있고, 몇 %용액인지 이름표가 붙어있다.</p>

<p>다솜이는 N개의 병의 용액을 몇 개 골라서 한 병에 모아서 (빈 병이 아니라 N개의 병 중에 하나) M% 용액을 만들려고 한다. M% 용액을 최대 몇 리터 얻을 수 있는지 구하는 프로그램을 작성하시오. (꼭 전부 섞을 필요는 없다. 약간만 섞어도 됨)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 다솜이가 가지고 있는 병의 개수 N과 만들고자 하는 용액의 농도 M이 주어진다. N은 50보다 작거나 같은 자연수이고, M은 100보다 작거나 같은 음이 아닌 정수이다. 둘째 줄부터 한 줄에 하나씩 각각의 병의 정보가 주어진다. 병의 정보는 이름표에 쓰여있는 %의 값과&nbsp;용액의 양이 공백을 사이에 두고 주어진다. %의 값은 100보다 작거나 같은 음이 아닌 정수, 용액의 양은 1,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 M% 용액을 최대 몇 L만들 수 있는지 최댓값을 출력한다. 절대/상대 오차는 10<sup>-2</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>20리터의 물과, 30리터의 물질이 있다. 50% 용액을 만들어야 하기 때문에, 20리터의 물질을 20리터의 물과 섞으면 된다.</p>

				</div>
				</div>','2 50
0 20
100 30
','40.00
','MATH'),
                                                                                                                (128,'BAEKJOON','https://www.acmicpc.net/problem/1434',1434,'책 정리','2초','128 MB',4,'<p>빈 박스 N개가 한 줄로 놓여져 있고, 박스에 책 M개를 넣으려고 한다. 박스는 1번부터 N번까지 번호가 매겨져 있고, 책도 1번부터 M번까지 번호가 매겨져 있다. 다음은 책을 박스에 넣는 방법이며, 가장 처음에는 1번 박스의 앞에 있고, 손에는 1번 책을 들고 있다.</p>

<ol>
	<li>현재 책이 현재 박스에 들어가지 않으면, 3번으로 간다. 아니면 2번으로 간다.</li>
	<li>현재 책을 현재 박스에 넣는다. 다음 책을 손에 집고 1번으로 간다.</li>
	<li>현재 박스를 다른 쪽으로 치운 다음에, 테이프로 못 열게 봉인한다. 다음 박스를 앞으로 가져오고 1번으로 간다.</li>
</ol>

<p>i번 박스의 용량은 A<sub>i</sub>이고, j번 책의 크기는 B<sub>j</sub>이다. 책의 크기와&nbsp;박스에 들어있는 책의 크기의 합이 박스의 용량을 넘지 않으면 책을 박스에 넣을 수 있다.</p>

<p>위의 방법대로 책을 넣었을 때, 전체 박스의 낭비된 용량의 합을 구하는 프로그램을 작성하시오. 박스의 낭비된 용량은 박스의 용량에서 박스에 들어있는 책의 크기의 합을 뺀 값이다.</p>

<p>입력으로 주어진 박스와 책의 순서를 변경하면 안된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 박스의 개수 N, 책의 개수 M이 주어진다. 둘째 줄에는 박스의 용량 A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>N</sub>이 주어지고, 셋째 줄에는 B<sub>1</sub>, B<sub>2</sub>, ..., B<sub>M</sub>이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에&nbsp;전체 박스의 낭비된 용량의 합을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 3
5 5 5
5 5 5
','0
','MATH'),
                                                                                                                (130,'BAEKJOON','https://www.acmicpc.net/problem/1435',1435,'네 점','2초','128 MB',16,'<p>네 점의 거리의 차가 주어지면, 그러한 거리의 차이를 만족하는 네 점이 공간에 존재하는지 없는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 총 4줄이 주어지며, 각 줄에는 4개의 정수가 있다. i번째 줄의 j번째 정수는 i번 점과 j번 점 사이의 거리이다. i번째 줄의 i번째 정수는 항상 0이고, i번째 줄의 j번째 정수와 j번째 줄의 i번째 정수는 같다. i와 j가 같지 않은 경우 i번째 줄의 j번째 정수는 10보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어진 점이 존재하면 YES, 존재하지 않으면 NO를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1은 정사면체다.</p>

				</div>
				</div>','0 1 1 1
1 0 1 1
1 1 0 1
1 1 1 0
','YES
','MATH'),
                                                                                                                (131,'BAEKJOON','https://www.acmicpc.net/problem/1437',1437,'수 분해','2초','128 MB',12,'<p>음이 아닌 정수 N을 한 개 이상의 음이 아닌 정수의 합으로 나타낼 때, 이를 "N을 분해한다"라고 부르자.</p>

<p>예를 들어, 4 = 1+1+1+1 = 1+1+2 = 1+3 = 2+2 = 4 로 나눌 수 있다.</p>

<p>분해 곱이란 N을 분해해서 나타난 수들을 전부 곱한 것을 의미한다. N=4일 때, 분해 곱은 다음과 같다.</p>

<ul>
	<li>4 = 1+1+1+1, 곱 : 1×1×1×1 = 1</li>
	<li>4 = 1+1+2, 곱 : 1×1×2 = 2</li>
	<li>4 = 1+3, 곱 : 1×3 = 3</li>
	<li>4 = 2+2, 곱 : 2×2 = 4</li>
	<li>4 = 4, 곱 : 4</li>
</ul>

<p>N이 주어졌을 때, 그 수의 분해 곱의 최댓값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 음이 아닌 정수 N이 주어진다. N은 1,000,000보다 작거나 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 입력으로 주어진 수의 분해 곱의 최댓값을 10,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7
','12
','MATH'),
                                                                                                                (132,'BAEKJOON','https://www.acmicpc.net/problem/1441',1441,'나누어 질까','2초','128 MB',15,'<p>어떤 숫자 배열 A가 주어지면, L보다 크거나 같고, R보다 작거나 같은 자연수 중에, A에 속해있는 원소 중 적어도 하나로 나누어지는 수의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 A의 크기 N과 L, R이 주어진다. N은 18보다 작거나 같은 자연수이고, L은 1,000,000,000보다 작거나 같은 자연수, R은 L보다 크거나 같고, 1,000,000,000보다 작거나 같은 자연수이다. 둘째 줄에 A에 속하는 원소가 들어온다. 각 원소는 공백을 사이에 두고 구분되어 있고, 원소는 1,000,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 L보다 크거나 같고, R보다 작거나 같은 자연수 중에, A에 속해있는 원소 중 적어도 하나로 나누어지는 수의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 1 1000000000
2 3
','666666667
','MATH'),
                                                                                                                (133,'BAEKJOON','https://www.acmicpc.net/problem/1448',1448,'삼각형 만들기','2초','128 MB',8,'<p>세준이는 N개의 빨대를 가지고 있다. N개의 빨대 중에 3개의 빨대를 선택했을 때, 이 빨대로 삼각형을 만들 수 있다면, 세 변의 길이의 합의 최댓값을 구하고 싶다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 빨대의 개수 N이 주어진다. N은 3보다 크거나 같고, 1,000,000보다 작거나 같은 자연수이다. 둘째 줄부터 N개의 줄에 빨대의 길이가 한 줄에 하나씩 주어진다. 빨대의 길이는 1,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 삼각형 세 변의 길이의 합의 최댓값을 출력한다. 만약 삼각형을 만들 수 없으면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1
2
3
','-1
','MATH'),
                                                                                                                (135,'BAEKJOON','https://www.acmicpc.net/problem/1456',1456,'거의 소수','2초','256 MB',11,'<p>어떤 수가 소수의 N제곱(N ≥ 2)&nbsp;꼴일 때, 그 수를 거의 소수라고 한다.</p>

<p>두 정수 A와 B가 주어지면, A보다 크거나 같고, B보다 작거나 같은 거의 소수가 몇 개인지 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 왼쪽 범위 A와 오른쪽 범위 B가 공백 한 칸을 사이에 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 총 몇 개가 있는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1000
','25
','MATH'),
                                                                                                                (134,'BAEKJOON','https://www.acmicpc.net/problem/1457',1457,'정확해','2초','128 MB',15,'<p>0보다 큰 정수 K가 M보다 작은 약수이지만, M이 K<sup>N</sup>으로 나누어 떨어지지 않을 때, K를 M의 멋진 약수라고 한다. d(M)을 M의 멋진 약수의 개수라고 했을 때, d(A) + d(A+1) + ... + d(A+B)를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 세 개의 정수 A, B, N이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 답을 출력한다. 정답은 항상 2147483647보다 작거나 같다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','32 1 3
','5
','MATH'),
                                                                                                                (137,'BAEKJOON','https://www.acmicpc.net/problem/1459',1459,'걷기','2초','128 MB',7,'<p>세준이는 학교에서 집으로 가려고 한다. 도시의 크기는 무한대이고, 도시의 세로 도로는 모든 정수 x좌표마다 있고, 가로 도로는 모든 정수 y좌표마다 있다. 세준이는 현재 (0, 0)에 있다. 그리고 (X, Y)에 위치한 집으로 가려고 한다. 세준이가 걸을 수 있는 방법은 두가지 인데, 하나는 도로를 따라서 가로나 세로로 한 블록 움직여서 이번 사거리에서 저 사거리로 움직이는 방법이고, 블록을 대각선으로 가로지르는 방법이 있다.</p>

<p>세준이가 집으로 가는데 걸리는 최소시간을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 집의 위치 X Y와 걸어서 한 블록 가는데 걸리는 시간 W와 대각선으로 한 블록을 가로지르는 시간 S가 주어진다. X와 Y는 1,000,000,000보다 작거나 같은 음이 아닌 정수이고, W와 S는 10,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 세준이가 집에가는데 걸리는 최소시간을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 2 3 10
','18
','MATH'),
                                                                                                                (138,'BAEKJOON','https://www.acmicpc.net/problem/1476',1476,'날짜 계산','2초','4 MB',6,'<p>준규가 사는 나라는 우리가 사용하는 연도와 다른 방식을 이용한다. 준규가 사는&nbsp;나라에서는 수 3개를 이용해서 연도를 나타낸다. 각각의 수는 지구, 태양, 그리고 달을 나타낸다.</p>

<p>지구를 나타내는 수를 E, 태양을 나타내는 수를 S, 달을 나타내는 수를 M이라고 했을 때, 이 세 수는 서로 다른 범위를 가진다. (1 ≤ E ≤ 15, 1 ≤ S ≤ 28, 1 ≤ M ≤ 19)</p>

<p>우리가 알고있는 1년은 준규가 살고있는 나라에서는 1 1 1로 나타낼 수 있다. 1년이 지날 때마다, 세 수는 모두 1씩 증가한다. 만약, 어떤 수가 범위를 넘어가는 경우에는 1이 된다.</p>

<p>예를 들어, 15년은 15 15 15로 나타낼 수 있다. 하지만, 1년이 지나서 16년이 되면 16 16 16이 아니라 1 16 16이 된다. 이유는 1 ≤ E ≤ 15 라서 범위를 넘어가기 때문이다.</p>

<p>E, S, M이 주어졌고, 1년이 준규가 사는 나라에서 1 1 1일때, 준규가 사는 나라에서 E S M이 우리가 알고 있는 연도로 몇 년인지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 세 수 E, S, M이 주어진다. 문제에 나와있는 범위를 지키는 입력만 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 E S M으로 표시되는 가장 빠른 연도를 출력한다. 1 1 1은 항상 1이기 때문에, 정답이 음수가 나오는 경우는 없다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 16 16
','16
','MATH'),
                                                                                                                (136,'BAEKJOON','https://www.acmicpc.net/problem/1484',1484,'다이어트','2초','128 MB',11,'<p>성원이는 다이어트를 시도중이다. 성원이는 정말 정말 무겁기 때문에, 저울이 부셔졌다. 성원이의 힘겨운 다이어트 시도를 보고만 있던 엔토피아는 성원이에게 새로운 저울을 선물해 주었다. 성원이는 엔토피아가&nbsp;선물해준 저울 위에 올라갔다. “안돼!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! G 킬로그램이나 더 쪘어ㅜㅠ”라고 성원이가 말했다. 여기서 말하는 G킬로그램은 성원이의 현재 몸무게의 제곱에서 성원이가 기억하고 있던 몸무게의 제곱을 뺀 것이다.</p>

<p>성원이의 현재 몸무게로 가능한 것을 모두 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 G가 주어진다. G는 100,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄부터 한 줄에 하나씩 가능한 성원이의 현재 몸무게를 오름차순으로 출력한다. 가능한 몸무게가 없을 때는 -1을 출력한다. 현재 몸무게는 자연수로 떨어지지 않을 수도 있는데, 이런 경우는 제외해야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','15
','4
8
','MATH'),
                                                                                                                (139,'BAEKJOON','https://www.acmicpc.net/problem/1490',1490,'자리수로 나누기','2초','128 MB',11,'<p>어떤 수 N이 주어졌을 때, N으로 시작하면서, N의 0이 아닌 모든 자리수로 나누어지는 떨어지는 수 중 가장 작은 수를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 어떤 수 N이 주어진다. N은 1,000,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','13
','132
','MATH'),
                                                                                                                (142,'BAEKJOON','https://www.acmicpc.net/problem/1492',1492,'합','2초','128 MB',19,'<p>N과 K가 주어졌을 때, 1<sup>K</sup> + 2<sup>K</sup> + 3<sup>K</sup> + ... + N<sup>K</sup>를 1,000,000,007로 나눈 나머지를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 K가 주어진다. N은 10<sup>9</sup>보다 작거나 같은 자연수이고, K는 50보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 1<sup>K</sup>&nbsp;+ 2<sup>K</sup>&nbsp;+ 3<sup>K</sup>&nbsp;+ ... + N<sup>K</sup>를 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 2
','30
','MATH'),
                                                                                                                (141,'BAEKJOON','https://www.acmicpc.net/problem/1493',1493,'박스 채우기','2초','128 MB',14,'<p>세준이는 length × width × height 크기의 박스를 가지고 있다. 그리고 세준이는 이 박스를 큐브를 이용해서 채우려고 한다. 큐브는 정육면체 모양이며, 한 변의 길이는 2의 제곱꼴이다. (1×1×1, 2×2×2, 4×4×4, 8×8×8, ...)</p>

<p>세준이가 가지고 있는 박스의 종류와 큐브의 종류와 개수가 주어졌을 때, 박스를 채우는데 필요한 큐브의 최소 개수를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 세 자연수 length width height가 주어진다.</p>

<p>둘째 줄에 세준이가 가지고 있는 큐브의 종류의 개수 N이 주어진다.</p>

<p>셋째 줄부터 총 N개의 줄에 큐브의 종류 A<sub>i</sub>와&nbsp;개수 B<sub>i</sub>가 i가 증가하는 순서대로 주어진다. 큐브의 종류는 한 변의 길이를 나타낼 때 쓰는 2<sup>i</sup>에서 i이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 필요한 큐브의 개수의 최솟값을 출력한다. 만약 채울 수 없다면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 4 8
3
0 10
1 10
2 1
','9
','MATH'),
                                                                                                                (143,'BAEKJOON','https://www.acmicpc.net/problem/1494',1494,'절댓값 수열','2초','128 MB',20,'<p>길이가 무한한 수열 S는 다음과 같이 정의된다.</p>

<ul>
	<li>S<sub>0</sub> = first;</li>
	<li>S<sub>1</sub> = second;</li>
	<li>S<sub>i</sub> = |S<sub>i-2</sub> - S<sub>i-1</sub>| (i>=2)</li>
</ul>

<p>first와 second와 질문의 개수가 주어졌을 때, 질문에 답하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 first와 second와 질문의 개수 N이 주어진다. 둘째 줄부터 N개의 줄에 질문이 주어진다. 질문이라는 것은 정수 i로 주어지며, S<sub>i</sub>를 출력하면 되는 것이다. N은 50보다 작거나 같은 자연수이고, 이 외의 모든 수는 10<sup>18</sup>보다 작거나 같은 음이 아닌 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 각 질문에 대한 S<sub>i</sub>를 출력하면 된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','21 12 5
0
1
2
3
4
','21
12
9
3
6
','MATH'),
                                                                                                                (140,'BAEKJOON','https://www.acmicpc.net/problem/1497',1497,'기타콘서트','2초','128 MB',10,'<p>강토는 Day Of Mourning의 기타리스트로, 다가오는 공연을 준비하고 있다.</p>

<p>어느 날 강토의 집에 도둑이 들어서 기타를 모두 도둑맞고 말았다. 기타를 사야 한다.</p>

<p>강토는 공연 때 연주할 노래의 목록을 뽑아 놓았다. 하지만, 하나의 기타로 모든 곡을 연주할 수는 없다. 어떤 기타는 어떤 곡을 연주할 때, 이상한 소리가 나기 때문이다. 항상 완벽을 추구하는 강토는 이런 일을 용납하지 않는다.</p>

<p>최대한 많은 곡을 제대로 연주하려고 할&nbsp;때, 필요한 기타의 최소 개수를 구하는 프로그램을 작성하시오.</p>

<p>예를 들어, GIBSON으로 1, 2, 3번 곡을 제대로 연주할 수 있고, FENDER로 1, 2, 5번 곡을 제대로 연주할 수 있고, EPIPHONE으로 4, 5번 곡을 제대로 연주할 수 있고, ESP로 1번곡을 제대로 연주할 수 있다면, 세준이는 EPIPHONE과 GIBSON을 사면 최소의 개수로 모든 곡을 연주할 수 있다.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 기타의 개수 N과 곡의 개수 M이 주어진다. N은 10보다 작거나 같은 자연수이고, M은 50보다 작거나 같은 자연수이다. 둘째 줄부터 N개의 줄에 기타의 이름과 기타가 연주할 수 있는 곡의 정보가 1번 곡부터 차례대로 주어진다. Y는 연주할 수 있는 것이고, N은 없는 것이다. 기타의 이름은 알파벳 대문자로만 이루어져 있고, 길이는 2 이상, 50 이하이다. 두 기타의 이름이 같은 경우는 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 필요한 기타의 개수를 출력한다. 만약 연주할 수 있는 곡이 없으면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/GKgvWzGQ-X0" width="560"></iframe></p>

				</div>
				</div>','4 5
GIBSON YYYNN
FENDER YYNNY
EPIPHONE NNNYY
ESP YNNNN
','2
','MATH'),
                                                                                                                (144,'BAEKJOON','https://www.acmicpc.net/problem/1500',1500,'최대 곱','2초','128 MB',9,'<p>세준이는 정수 S와 K가 주어졌을 때, 합이 S인 K개의 양의&nbsp;정수를 찾으려고 한다. 만약 여러개일 경우 그 곱을 가능한 최대로 하려고 한다.</p>

<p>가능한 최대의 곱을 출력한다.</p>

<p>만약 S=10, K=3이면, 3,3,4는 곱이 36으로 최대이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 수 S와 K가 주어진다. K는 20보다 작거나 같고, S는 100보다 작거나 같으며 K보다 크거나 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 정답을 출력한다. 답은&nbsp;9223372036854775807보다 작다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10 3
','36
','MATH'),
                                                                                                                (145,'BAEKJOON','https://www.acmicpc.net/problem/1510',1510,'이등변 삼각형','2초','128 MB',16,'<p>이등변 삼각형이란 삼각형의 두 변의 길이가 같을 때, 이등변 삼각형이라고 한다.</p>

<p>만약 두 삼각형이 서로 다른 꼭짓점의 위치를 가지고 있다면, 두 삼각형은 서로 다르다고 할 수 있다.</p>

<p>세준이는 N*M크기의 모눈종이를 가지고 있다. 이 모눈종이에서 서로 다른 이등변 삼각형을 모두 몇 개 그릴 수 있는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 M이 주어진다. N과 M은 200보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 서로 다른 이등변삼각형의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1의 경우 다음과 같은 10가지가 가능하다.</p>

<pre>XX. XX. .X. X.. X.X
X.. .X. XX. XX. .X.

.XX .XX ..X .X. .X.
.X. ..X .XX .XX X.X</pre>

				</div>
				</div>','2 3
','10
','MATH'),
                                                                                                                (146,'BAEKJOON','https://www.acmicpc.net/problem/1521',1521,'랜덤 소트','2초','128 MB',16,'<p>랜덤 소트는 어떤 순열이 주어졌을 때, i<j이면서 A[i] > A[j]인 임의의 쌍을 교환하는 것이다.</p>

<p>입력으로 주어진 순열을 오름차순으로 정렬할 때, 필요한 교환의 횟수의 기댓값을 구하는&nbsp;프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 순열의 크기 N이 주어진다. 둘째 줄에 순열에 들어있는 수 N개가 주어진다. 이 수는 모두 1보다 크거나 같고, N보나 작거나 같으며, 같은 수는 2번 이상 주어지지 않는다. 또, N은 8보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 필요한 교환 횟수의 기댓값을 출력한다. 정답과의 절대/상대 오차는 10<sup>-6</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 3 2
','1.0
','MATH'),
                                                                                                                (147,'BAEKJOON','https://www.acmicpc.net/problem/1526',1526,'가장 큰 금민수','2초','256 MB',5,'<p>은민이는 4와 7을 좋아하고, 나머지 숫자는 싫어한다. 금민수는 어떤 수가 4와 7로만 이루어진 수를 말한다.</p>

<p>N이 주어졌을 때, N보다 작거나 같은 금민수 중 가장 큰&nbsp;것을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. N은 4보다 크거나 같고 1,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 N보다 작거나 같은 금민수 중 가장 큰&nbsp;것을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','100
','77
','MATH'),
                                                                                                                (148,'BAEKJOON','https://www.acmicpc.net/problem/1529',1529,'동민 수열','2초','128 MB',16,'<p>은민이는 4와 7을 좋아하고, 나머지 숫자는 싫어한다. 금민수는 어떤 수가 4와 7로만 이루어진 수를 말한다.</p>

<p>동민 수열은 길이가 L이고, A[0], A[1], ..., A[L-1]와 같이 생긴 수열이다. 또, 다음과 같은 성질을 가진다.</p>

<ol>
	<li>A[i]는 금민수이다. (0 ≤ i < L)</li>
	<li>모든 i에 대해서 A[i] = Numbers[j]인 j가 적어도 하나 존재한다. (0 ≤ i < L)</li>
	<li>모든 i에 대해서 A[i]의 마지막 자리는 A[i+1]의 첫 번째 자리와 같다. (0 ≤ i < L-1)</li>
</ol>

<p>Numbers배열과 L이 주어졌을 때, 서로 다른 동민 수열의 개수를 1,234,567,891로 나눈 나머지를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 Numbers 배열의 크기 N과 L이 주어진다. N은 50보다 작거나 같은 자연수이고, L은 1,000,000,000보다 작거나 같은 자연수이다. 둘째 줄에 Numbers배열에 들어있는 수가 주어진다. 각각의 수는 1,000,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 서로 다른 동민 수열의 개수를 1,234,567,891로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 47
100 4774 200 747 300
','2
','MATH'),
                                                                                                                (149,'BAEKJOON','https://www.acmicpc.net/problem/1533',1533,'길의 개수','2초','128 MB',18,'<p>세준이는 정문이를 데리러 공항으로 가기로 했다. 하지만, 방금 세준이는 정문이의 비행기가 연착된다는 전화를 받았다. 세준이는 정문이가 정확하게 몇 분 늦는지 알고 있고, 그 시간 동안 밖에서 드라이브를 하려고 한다. 정문이가 늦는 시간을 T라고 하자.</p>

<p>세준이는 자기가 지금 있는 위치에서부터, 공항까지 정확하게 T분만에 도착하는 경로의 개수를 구하고 싶다.</p>

<p>길의 정보는 인접행렬로 주어진다. A[i][j]가 0이라면 i에서 j로 가는 길이 없는 것이고, A[i][j] ≤ 5라면, 정확히 그 만큼의 시간이 걸리는 i에서 j로 가는 길이 있는 것이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 교차점의 개수 N이 주어진다. N은 10보다 작거나 같고, 시작점의 위치 S와 끝점의 위치 E, 그리고 정문이가 늦는 시간 T도 주어진다. S와 E는 N보다 작거나 같은 자연수이다. T는 1,000,000,000보다 작거나 같은 자연수이다. 둘째 줄부터 길의 정보가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 경로의&nbsp;개수를 1,000,003로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 1 3 5
012
201
120
','8
','MATH'),
                                                                                                                (150,'BAEKJOON','https://www.acmicpc.net/problem/1538',1538,'공 칠하기','2초','128 MB',22,'<p>세준이는 가방을 하나 가지고 있다. 이 가방 속에는 N개의 공이 들어있다. N개의 공엔 색이 칠해져 있다. 세준이는 이 가방에서 서로 다른 두 개의 공을 하나씩 차례대로 고른다. 그 후에 두 번째로 고른 공을 첫 번째로 고른 공의 색으로 색 칠한다. 그 후, 공이 마르면, 두 공을 다시 가방에 집어 넣고 섞는다.</p>

<p>세준이는 이 공의 색이 모두 같아지려면 몇 번을 색 칠해야 하는지 궁금해졌다.</p>

<p>세준이가 공을 칠해야 하는 횟수의 기댓값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 공의 개수 N(1 ≤ N ≤ 24)이 주어진다. 둘째 줄에 공에 칠해진 N개의 색이 공백없이 주어진다. 색은 알파벳 대문자(A - Z)중 하나이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 세준이가 공을 색 칠하는 회수의 기댓값을 출력한다. 정답과의 절대/상대 오차는 10<sup>-8</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
ABA
','3.0
','MATH'),
                                                                                                                (125,'BAEKJOON','https://www.acmicpc.net/problem/1540',1540,'정사각형의 개수','2초','128 MB',13,'<p>세준이는 2차원 평면에 N개의 점을 찍었다. 그리고 나서 정사각형의 개수를 세려고 한다.</p>

<p>정사각형의 개수란, 세준이가 찍은 서로 다른 N개의 점을 꼭짓점으로 하며, 모든 변은 축에 평행한 서로 다른 정사각형을 모두 센 것이다.</p>

<p>세준이는 정사각형의 개수를 최대로 하려고 한다.</p>

<p>N이 주어졌을 때, 정사각형의 개수의 최댓값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. 이 값은 0보다 크거나 같고, 1000000보다 작거나 같은 값이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 정사각형의 개수의 최댓값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','16
','14
','MATH'),
                                                                                                                (152,'BAEKJOON','https://www.acmicpc.net/problem/1541',1541,'잃어버린 괄호','2초','128 MB',9,'<p>세준이는 양수와 +, -, 그리고 괄호를 가지고&nbsp;식을 만들었다. 그리고 나서 세준이는 괄호를 모두 지웠다.</p>

<p>그리고 나서 세준이는 괄호를 적절히 쳐서 이 식의 값을 최소로 만들려고 한다.</p>

<p>괄호를 적절히 쳐서 이 식의 값을 최소로 만드는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 식이 주어진다. 식은 ‘0’~‘9’, ‘+’, 그리고 ‘-’만으로 이루어져 있고, 가장 처음과 마지막 문자는 숫자이다. 그리고 연속해서 두 개 이상의 연산자가 나타나지 않고, 5자리보다 많이&nbsp;연속되는 숫자는 없다. 수는 0으로 시작할 수 있다. 입력으로 주어지는 식의 길이는 50보다 작거나 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','55-50+40
','-35
','MATH'),
                                                                                                                (153,'BAEKJOON','https://www.acmicpc.net/problem/1546',1546,'평균','2초','128 MB',5,'<p>세준이는 기말고사를 망쳤다. 세준이는 점수를 조작해서 집에 가져가기로 했다. 일단 세준이는 자기 점수 중에 최댓값을 골랐다. 이 값을 M이라고 한다. 그리고 나서 모든 점수를 점수/M*100으로 고쳤다.</p>

<p>예를 들어, 세준이의 최고점이 70이고, 수학점수가 50이었으면 수학점수는 50/70*100이 되어 71.43점이 된다.</p>

<p>세준이의 성적을 위의 방법대로 새로 계산했을 때, 새로운 평균을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 시험 본 과목의 개수 N이 주어진다. 이 값은 1000보다 작거나 같다. 둘째 줄에 세준이의 현재 성적이 주어진다. 이 값은 100보다 작거나 같은 음이 아닌 정수이고, 적어도 하나의 값은 0보다 크다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 새로운 평균을 출력한다. 실제 정답과 출력값의 절대오차 또는 상대오차가 10<sup>-2</sup> 이하이면 정답이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
40 80 60
','75.0
','MATH'),
                                                                                                                (154,'BAEKJOON','https://www.acmicpc.net/problem/1550',1550,'16진수','2초','128 MB',4,'<p>16진수 수를 입력받아서 10진수로 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 16진수 수가 주어진다. 이 수의 최대 길이는 6글자이다. 16진수 수는 0~9와 A~F로 이루어져 있고, A~F는 10~15를 뜻한다. 또, 이 수는 음이 아닌 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 입력으로 주어진 16진수 수를 10진수로 변환해 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','A
','10
','MATH'),
                                                                                                                (155,'BAEKJOON','https://www.acmicpc.net/problem/1551',1551,'수열의 변화','2초','128 MB',5,'<p>크기가 N인 수열 A가 주어졌을 때, 세준이는 인접한 두 원소의 차이를 이용해서 크기가 N-1인 수열 B를 만들 수 있다.</p>

<p>예를 들어, A = {5, 6, 3, 9, -1} 이었을 때, B = {6-5, 3-6, 9-3, -1-9} = {1, -3, 6, -10}이 된다. 즉, B[i] = A[i+1]-A[i]가 된다.</p>

<p>수열 A가 주어졌을 때, 세준이가 위의 방법을 K번 했을 때 나오는 수열을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 수열의 크기 N과 K가 주어진다. N은 20보다 작거나 같은 자연수이고, K는 0보다 크거나 같고, N-1보다 작거나 같은 정수이다. 둘째 줄에는 수열이 ‘,’로 구분되어 주어진다. 수열을 이루고 있는 수는 절댓값이 100보다 작거나 같은 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 K번 변형한 수열을 ‘,’로 구분하여 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 1
5,6,3,9,-1
','1,-3,6,-10
','MATH'),
                                                                                                                (156,'BAEKJOON','https://www.acmicpc.net/problem/1554',1554,'나무 심기','2초','128 MB',21,'<p>세준이는 황무지에 호화로운 저택을 지어서 살고 있다. 황무지에 집을 지었기 때문에, 세준이의 뒷마당에는 나무가 하나도 없었다. 따라서 세준이는 뒷마당에 나무를 심기로 했다.</p>

<p>세준이의 뒷마당은 W×H(가로×세로)의 직사각형 모양이다. 세준이는 T개의 나무를 심으려고 한다. 세준이는 전직 미술가이기 때문에, 미적 감각을 살려 다음과 같은 모양으로 나무를 심으려고 한다.</p>

<ol>
	<li>모든 나무는 정수 좌표에 있어야 한다.</li>
	<li>모든 나무는 한 직선 위에 있어야 한다.</li>
	<li>모든 나무는 위치의 차이는 적어도 D만큼 차이가 나야 한다.&nbsp;</li>
</ol>

<p style="text-align: center;"><img alt="" src=https://www.acmicpc.net/upload/201004/back1.png" style="height:219px; width:248px"><img alt="" src=https://www.acmicpc.net/upload/201004/back2.png" style="height:219px; width:248px"></p>

<p>위의 그림은 10×10 크기의 뒷마당에 나무 4개를 나무들 사이의 거리 차이가 최소 2가 되게 채운 두 가지 방법이다.</p>

<p>W와 H와 T와 D가 주어졌을 때, 서로 다른 몇 가지 방법으로 나무를 심을 수 있는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 T, W, H, D가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 서로 다른 방법의 수를 1,000,000,000으로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 4 4 1
','300
','MATH'),
                                                                                                                (157,'BAEKJOON','https://www.acmicpc.net/problem/1555',1555,'소수 만들기','2초','128 MB',16,'<p>1보다 크거나 같고, 30보다 작거나 같은 수로 채워진 크기 N의 배열 A가 주어진다. 이 배열의 원소를 +, -, *, /, 괄호를 원하는 만큼 써서 식을 만들어서, 가장 큰 소수와 가장 작은 소수를 구하는 프로그램을 작성하시오.</p>

<p>배열 A에 있는 수는 중복될 수 있고, 모두 단 한번씩 사용해야 한다.</p>

<p>예를 들어, A = {1,2,3}일 때, 만들 수 있는 가장 작은 소수는 3-2+1=2 이고, 가장 큰 소수는 3*2+1=7이다. </p>

<p>나눗셈의 두 피연산자는 양의 정수이며, 결과가 정수가 되는 정수 나눗셈을 사용한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 A의 크기 N이 주어진다. 둘째 줄에 A에 들어있는 원소가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 가장 작은 소수를 출력하고, 둘째 줄에 가장 큰 소수를 출력한다. 만약 소수를 만들 수 없으면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1 2
','2
3
','MATH'),
                                                                                                                (158,'BAEKJOON','https://www.acmicpc.net/problem/1556',1556,'도미노2','2초','128 MB',18,'<p style="text-align: center;"><img alt="" height="300" src=https://www.acmicpc.net/upload/201004/do.png" width="300"></p>

<p>도미노는 위와 같이 생겼다.</p>

<p>세준이가 가지고 있는 도미노는 약간 다르다. 세준이는 도미노를 N<sup>2</sup>개 가지고 있다. 따라서 N=2라면, 세준이는 (1,1), (1,2), (2,1), (2,2) 이렇게 총 N<sup>2</sup>개를 가지고 있는 것이다.</p>

<p>세준이는 이 도미노를 가지고 도미노미도마도라는 게임을 하려고 한다. 이 게임은 김민오가 만들었다.</p>

<p>이 게임에서 도미노는 N*N크기의 보드에 놓여져 있다. i번째 행, j번째 열에는 (i,j)라고 쓰여 있는 도미노가 놓여져 있다. 플레이어는 도미노를 정확하게 N개를 골라야 하는데, 선택한 도미노를 두 개가 같은 행에서 고르고, 선택한 도미노를 같은 열에서 고르면 안 된다는 조건이 있다. 또, 고른 도미노를 가지고 사이클을 만들 수 있다. 사이클을 만드는 방법은, 도미노 A와 B가 있을 때, A의 두 번째 숫자와 B의 첫 번째 수가 같으면 된다. 그리고 사이클을 이루는 첫 번째 도미노의 처음 숫자와 마지막 도미노의 둘째 숫자가 같으면 된다.</p>

<p>예를 들어, (1,3), (3,2), (2,4), (4,1)을 골라서 사이클을 만들 수 있다.</p>

<p>N개의 도미노를 고르면 이러한 사이클이 한 개 또는 그 이상의 그룹이 나온다. (1,1)와 같은 도미노는 자기 자신으로 사이클을 이루므로 하나의 그룹이다.</p>

<p>게임의 조건 중에 각 행과 열에서 중복되면 안되는 조건이 있기 때문에, 항상 사이클을 이룰 수 있다.</p>

<p>모든 도미노는 그 뒷면에 숫자가 쓰여 있다. 이 게임에서 점수를 계산할 때는 자기가 고른 도미노의 뒷면에 쓰여 있는 수를 모두 곱한다. 그 다음에 만약 사이클 그룹의 개수가 짝수가 되면 그 수에 -1을 곱한다.</p>

<p>도미노의 개수와 도미노 뒷면에 쓰여 있는 수가 주어질 때, 세준이가 얻을 수 있는 가능한 모든 점수의 합을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. N은 100보다 작거나 같은 자연수이다. 둘째 줄부터 N개의 줄에 각 도미노에 쓰여 있는 수가 주어진다. i행 j열에 쓰여 있는 수는 도미노 (i,j)의 뒷 면에 쓰여 있는 수이다. 도미노의 뒷면에는 0부터 9까지의 수와 A부터 I까지 알파벳 대문자가 쓰여 있고, A부터 I까지 문자가 의미하는 것은 -1부터 -9까지이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 세준이가 얻을 수 있는 모든 점수의 합을 121547로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
35
44
','8
','MATH'),
                                                                                                                (159,'BAEKJOON','https://www.acmicpc.net/problem/1557',1557,'제곱 ㄴㄴ','2초','128 MB',21,'<p>어떤수 N이 1이 아닌 제곱수로 나누어지지 않을 때, 이 수를 제곱ㄴㄴ수라고 한다. 제곱수는 4, 9, 16, 25와 같은 것이고, 제곱ㄴㄴ수는 1, 2, 3, 5, 6, 7, 10, 11, 13, ...과 같은 수이다.</p>

<p>K가 주어졌을 때, K번째 제곱ㄴㄴ수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 K가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 K번째 제곱ㄴㄴ수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','13
','19
','MATH'),
                                                                                                                (160,'BAEKJOON','https://www.acmicpc.net/problem/1564',1564,'팩토리얼5','2초','128 MB',10,'<p>팩토리얼5란, N!의 0이 아닌 뒤 5자리를 말한다.</p>

<p>N이 주어졌을 때, 팩토리얼5를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 N이 주어진다. N은 1,000,000보다 작거나 같다. 또, 9보다 크거나 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 N의 팩토리얼5를 계산한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','20
','17664
','MATH'),
                                                                                                                (161,'BAEKJOON','https://www.acmicpc.net/problem/1565',1565,'수학','2초','128 MB',12,'<p>배열 D와, 배열 M이 주어졌을 때, D에 있는 모든 수의 배수이며, M에 있는 모든 수의 약수인 수의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 D의 크기와 M의 크기가 주어진다. 둘째 줄에 배열 D, 셋째 줄에 배열 M이 주어진다. D와 M의 크기는 50보다 작거나 같고, 그 속에 들어있는 수는 모두 10<sup>9</sup>보다 작거나 같은 양의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1
1
100
','9
','MATH'),
                                                                                                                (162,'BAEKJOON','https://www.acmicpc.net/problem/1568',1568,'새','2초','128 MB',4,'<p>N마리의 새가 나무에 앉아있고, 자연수를 배우기 원한다. 새들은 1부터 모든 자연수를 오름차순으로 노래한다. 어떤 숫자 K를 노래할 때, K마리의 새가 나무에서 하늘을 향해 날아간다. 만약, 현재 나무에 앉아있는 새의 수가 지금 불러야 하는 수 보다 작을 때는, 1부터 게임을 다시 시작한다.</p>

<p>나무에 앉아 있는 새의 수 N이 주어질 때, 하나의 수를 노래하는데 1초가 걸린다고 하면, 모든 새가 날아가기까지 총 몇 초가 걸리는지 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 새의 수 N이 주어진다. 이 값은 10<sup>9</sup>보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','14
','7
','MATH'),
                                                                                                                (163,'BAEKJOON','https://www.acmicpc.net/problem/1570',1570,'오세준','2초','128 MB',12,'<p>오세준은 외계 로봇이다. 오세준은 지구를 정복하기 위해서 10만년 전부터 지구에 있었고, 2008년 6월 25일까지, 조금씩 자기의 원래 모습으로 변해가고 있었다. 이정문은 이미 이 사실을 알고 오세준을 잡을 단 하나의 무기인 지뢰를 설치해 놨다. 지뢰는 준비되었다. 하지만, 문제는 오세준이 지뢰를 밟게하는 것이다. 운이 좋게도, 김형택의 도움을 받아서 이정문은 오세준의 행동 시스템을 해킹했다. 그리고, 이정문은 자기가 원하는 대로 오세준을 조정할 수 있게 되었다.</p>

<p>땅은 무한한 칸이 있는 좌표이다. 오세준은 현재 (SejunX, SejunY)에 있다. 그리고, 지뢰는 현재 (mineX, mineY)에 있다.</p>

<p>오세준의 프로그램은 간단하다. N개의 명령으로 이루어져 있다. 명령에는 2가지가 있는데</p>

<ul>
	<li>U : 오세준이 (x,y)에 있으면, (x, y+1)로 움직인다.</li>
	<li>R : 오세준이 (x,y)에 있으면, (x+1, y)로 움직이다.</li>
</ul>

<p>명령은 처음부터 순서대로 진행되고, 마지막 명령을 실행하고 나면, 처음 명령부터 다시 실행한다.</p>

<p>오세준이 지뢰를 밟으면, 오세준의 프로그램은 즉시 중지된다. 오세준이 지뢰를 밟게되는 N개의 명령을 출력하는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 명령의 길이 N과, 오세준의 위치 SejunX, SejunY, 지뢰의 위치 mineX, mineY가 주어진다. N은 50보다 작거나 같은 자연수이고, 나머지 좌표는 1,000,000,000보다 작거나 같은 음이 아닌 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 오세준의 N개 명령을 출력한다. 만약 답이 여러 가지일 때는, 사전순으로 가장 앞서는 것을 출력하고, 오세준이 지뢰를 밟을 수 없다면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>URU도 가능하지만, 사전 순으로 가장 앞서는 답은 아니다.</p>

				</div>
				</div>','3 1 1 3 4
','RUU
','MATH'),
                                                                                                                (164,'BAEKJOON','https://www.acmicpc.net/problem/1571',1571,'단어 굴리기','2초','128 MB',16,'<p>오세준의 전광판은 한 번에 N개의 문자를 표시할 수 있다. 이 전광판은 약간 독특해서 하나의 문자를 표시할 때, 원형 모양을 사용한다.</p>

<p>설명하기 어려워서 예를 들어 설명한다.</p>

<p>만약 첫 번째 원형 바퀴에 “XYZ"라고 쓰여 있고, 두 번째 바퀴에 "DEF", 세 번째 바퀴에 "OPRS"라고 쓰여 있으면,</p>

<p>가장 처음에 XDO가 보인다. 그 다음 1초가 진행될 때, 바퀴가 다음 문자가 보일 만큼 돌아간다. 따라서 YES란 문자가 보일 때 까지 걸리는 시간은 다음과 같다.</p>

<ul>
	<li>0: XDO</li>
	<li>1: YEP</li>
	<li>2: ZFR</li>
	<li>3: XDS</li>
	<li>4: YEO</li>
	<li>5: ZFP</li>
	<li>6: XDR</li>
	<li>7: YES</li>
</ul>

<p>따라서 7초만에 YES를 볼 수 있다.</p>

<p>전광판의 크기와, 각 바퀴에 쓰여 있는 문자, 그리고 오세준이 보고싶은 문자가 주어질 때, 그 문자가 뜨기까지 걸리는 시간을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 전광판의 크기 N이 주어진다. 이 값은 50보다 작거나 같은 자연수이고, 둘째 줄부터 N개의 줄에는 각 바퀴에 쓰여 있는 글자가 주어진다. 이 글자는 대문자로만 이루어져 있고, 크기는 2보다 크고 26보다 작거나 같다. 마지막 줄에는 오세준이 보고싶어하는 문자열이 주어진다. 이 문자열의 크기는 N이고, 대문자로만 이루어져 있고, 등장하는 알파벳은 중복되지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>둘째 줄에 정답을 출력한다. 이 값은 9,223,372,036,854,775,807보다 작거나 같고, 불가능할 때는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
XYZ
DEF
OPRS
YES
','7
','MATH'),
                                                                                                                (167,'BAEKJOON','https://www.acmicpc.net/problem/1590',1590,'캠프가는 영식','2초','128 MB',7,'<p>영식이는 민식이와 함게 고속버스를 타고 캠프를 가야 하지만, 민식이는 영식이를 깨우지 않고 혼자 버스를 타고 캠프에 가버렸다.</p>

<p>영식이는 혼자 고속버스터미널까지 가서 캠프에 오려고 한다. 터미널에는 캠프 장소까지 운행하는 N가지의 버스가 있다. 각각의 버스는 시작 시각, 간격, 대수의 정보를 가지고 있다. 예를 들어, 어떤 버스의 시작 시각이 특점 시점을 기준으로 10분 후이고, 간격은 10분이고, 대수가 5대이면, 이 버스는 10분, 20분, 30분, 40분, 50분에 한 대씩 출발한다.</p>

<p>영식이는 버스터미널에 T분에 도착했다. 영식이가 버스를 타려면 최소 몇 분을 더 기다려야 하는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 버스의 개수 N과 영식이가 버스터미널에 도착하는 시간 T가 주어진다. 둘째 줄부터 총 N개의 줄에 각 버스의 시작 시각 S<sub>i</sub>, 간격 I<sub>i</sub>, 대수 C<sub>i</sub>가 공백을 사이에 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 영식이가 기다려야 하는 시간을 출력한다. 영식이가 도착하는 동시에 버스가 출발하면 정답은 0이다. 만약 버스가 없어서 캠프에 갈 수 없으면 -1을 출력한다. 정답은 2<sup>31</sup>보다 작다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1의 경우 150분, 200분, 250분, ..., 600분에 한 대씩 버스가 출발한다. 따라서 영식이는 300분에 버스를 타면 된다.</p>

				</div>
				</div>','1 285
150 50 10
','15
','MATH'),
                                                                                                                (169,'BAEKJOON','https://www.acmicpc.net/problem/1598',1598,'꼬리를 무는 숫자 나열','2초','128 MB',3,'<p>동물원에서 막 탈출한 원숭이 한 마리가 세상구경을 하고 있다. 그 녀석은 원주 부근을 돌아다니다가 코레스코 콘도에서 아주 재밌는 놀이를 발견했다. 그 놀이의 이름은 바로 “꼬리를 무는 숫자 나열”. 이제부터 원숭이가 그토록 좋아하던 그 놀이를 파헤쳐보자.</p>

<p>놀이의 방법은 간단하다. 일단 4줄짜리 표에 왼쪽부터 수를 아래로 1부터 순서대로 적어나간다. 다음에 그 예가 잘 나타나있다.</p>

<p style="text-align: center;"><img alt="" height="131" src=https://www.acmicpc.net/upload/201004/psw1.png" width="361"></p>

<p>이제 원숭이는 두 개의 자연수를 아무거나 생각한다. 그리고 숫자판에서 두 개의 자연수 사이의 직각거리를 구하면 된다. 여기서 직각거리는 동서방향거리와 남북방향거리의 합을 뜻한다.</p>

<p>예를 들어 저 숫자판에서 11과 33을 생각했다고 하자. 그렇다면 11과 33사이의 직각거리는 8이 된다.(동서방향거리 : 6, 남북방향거리 : 2) 다음 그림에 잘 나타나있다.</p>

<p style="text-align: center;"><img alt="" height="124" src=https://www.acmicpc.net/upload/201004/psw2.png" width="354"></p>

<p>하지만 원숭이는 지금 혼란스럽다. 동물원에서 탈출한지 얼마 되지 않아서 계산을 할 수 없는 경지에 이르렀다. 여러분이 불쌍한 원숭이를 좀 도와줘야겠다. 원숭이가 생각한 두 자연수 사이의 직각거리를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 원숭이가 생각한 두 개의 자연수가 주어진다. 각 수는 10,000,000 이하이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 원숭이가 생각한 두 개의 자연수 사이의 직각거리를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','11 33
','8
','MATH'),
                                                                                                                (166,'BAEKJOON','https://www.acmicpc.net/problem/1606',1606,'침투 계획 세우기','2초','128 MB',8,'<p>동물원에서 막 탈출한 원숭이 한 마리가 세상구경을 하고 있다. 그러다가 자신의 영원한 숙적 멍멍이가 떼돈을 벌어 잘 살고 있는 모습을 목격하게 되었다. 원숭이는 너무나 배가 아팠다. 그래서 원숭이는 멍멍이의 집에 침투해서 멍멍이의 금고를 털기로 했다.</p>
<p>그런데 문제가 있다. 멍멍이의 집의 구조는 하나이지만 집안의 위치를 인식하는 방법은 원숭이와 멍멍이가 다르기 때문에 원숭이는 이 문제를 적절하게 해결해야 한다. 멍멍이의 집은 육각형구조의 타일로 이루어져 있다. 원숭이와 멍멍이의 인식방법을 하나하나 살펴보자.</p>
<p><img width="168" height="233" alt="" src=https://www.acmicpc.net/upload/201004/won1.png"></p>
<p>위 그림은 원숭이가 멍멍이네 집을 볼 때, 각 지점을 인식하는 방법이다. 가운데 점에서 1부터 번호를 붙이며 위치를 인식한다.</p>
<p><img width="168" height="233" alt="" src=https://www.acmicpc.net/upload/201004/won2.png"></p>
<p>위 그림은 멍멍이가 멍멍이네 집을 볼 때, 각 지점을 인식하는 방법이다. 가운데 점을 (0,0)으로 두고, 각 위치마다 좌표를 붙이며 위치를 인식한다.</p>
<p>현재 원숭이는 멍멍이의 금고의 위치를 좌표형식(멍멍이가 인식하는 형식)으로 알고 있다. 하지만 그렇게 나타내면 원숭이가 어딘지 모르므로 원숭이가 인식할 수 있는 위치로 바꿔주어야 한다. 원숭이가 금고를 털 수 있도록 도와주는 프로그램을 작성하시오.</p>

					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 멍멍이의 금고의 위치를 나타내는 좌표가 주어진다. 각 수는 0이상 1,000,000이하의 정수이다.</p>
					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 멍멍이의 금고의 위치를 원숭이가 인식하는 방법으로 나타낸 것을 출력한다.</p>
					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','0 3
','22
','MATH'),
                                                                                                                (165,'BAEKJOON','https://www.acmicpc.net/problem/1607',1607,'원숭이 타워','2초','128 MB',14,'<p>동물원에서 막 탈출한 원숭이 한 마리가 세상구경을 하고 있다. 그는 자신이 원래 살던 곳으로 돌아가고 싶었지만 너무 멀어서 갈 수 없었다. 그래서 그는 자신이 살던 곳의 전통방식으로 지어진 탑을 간절히 생각하며 슬픔을 달래기로 했다. 그 탑의 이름은 원숭이 타워!!</p>

<p>원숭이 타워는 원숭이들이 만든 것이라고는 하지만 원숭이들의 창의력이 부족하여 실제로는 하노이지방의 하노이타워를 응용하여 만든 탑이다. 이제 그 탑을 살펴보자.</p>

<p style="text-align: center;"><img alt="" src=https://www.acmicpc.net/upload/201004/montower.png" style="height:178px; width:253px"></p>

<p>위의 그림에 잘 나타나있다. 원숭이 타워가 하노이타워와 다른 점은 기둥을 네 개를 쓴다는 점이다. 이 탑의 목적은 하노이타워와 마찬가지로 디스크들을 1번 기둥에서 4번 기둥으로 모두 옮기는 것이다. 물론, 하노이타워의 규칙을 똑같이 적용해서 옮겨야 한다.</p>

<p>하노이타워의 규칙을 모르는 자들을 위해 하노이타워의 규칙을 설명하겠다.</p>

<ol>
	<li>작은 디스크는 항상 큰 디스크의 위에 놓여야 한다.</li>
	<li>한 번에 딱 하나의 디스크를 다른 기둥으로 옮길 수 있다.</li>
</ol>

<p>이제 원숭이는 머릿속으로 원숭이 타워를 생각하려 하는데 두뇌가 딸려서 잘 계산이 되지 않아 여러분에게 도움을 요청하였다. 처음에 1번기둥에 N개의 크기가 서로 다른 디스크가 쌓여있을 때, N개의 디스크를 모두 4번기둥으로 옮기는 최소회수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 디스크의 개수 N이 주어진다. N은 1,000,000 이하의 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 N개의 디스크를 옮기는데 드는 최소회수를 9901로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>이 문제는&nbsp;<a href="https://en.wikipedia.org/wiki/Tower_of_Hanoi#With_four_pegs_and_beyond">Frame-Stewart conjecture</a>를 이용해서 풀어야 한다.</p>

				</div>
				</div>','5
','13
','MATH'),
                                                                                                                (168,'BAEKJOON','https://www.acmicpc.net/problem/1612',1612,'가지고 노는 1','2초','128 MB',11,'<p>동물원에서 막 탈출한 원숭이 한 마리가 세상구경을 하고 있다. 이 원숭이는 수를 이리저리 가지고 노는 것을 매우 좋아한다. 그중에서도 1을 가지고 노는 것을 매우매우매우매우매우 좋아한다. 이제 원숭이가 1을 가지고 노는 법을 알아보자.</p>

<p>원숭이는 1만으로 이루어진 수를 매우매우매우매우매우매우매우 좋아한다. 그래서 어떤 자연수 N이 있을 때, N의 배수 중에서 1만으로 이루어진 수가 있을 까 생각하게 되었다. 그리고는 원숭이는 N의 배수 중에서 1만으로 이루어진 수중에 가장 작은 수의 자릿수가 알고 싶어졌다. 하지만 오늘도 역시 멍청한 원숭이는 스스로 계산하지 못하고 여러분에게 도움을 요청했다. 조건에 맞는 가장 작은 수의 자릿수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수 N이 주어진다. N은 1이상 1,000,000이하인 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 N의 배수 중에 1만으로 이루어진 수 중 가장 작은 수의 자릿수를 출력한다. 불가능한 경우는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','9901
','12
','MATH'),
                                                                                                                (170,'BAEKJOON','https://www.acmicpc.net/problem/1614',1614,'영식이의 손가락','2초','128 MB',8,'<p>영식이는 숫자를 셀 때, 왼손을 이용한다. 엄지손가락부터 시작해서 새끼손가락까지 차례대로 하나씩 센다. 그다음에 새끼손가락까지 센 다음에는 반대로 엄지손가락으로 다시 역방향으로 센다. 영식이는 자기가 원하는 숫자가 나올 때 까지 계속해서 이 방법으로 센다. 영식이는 절대 손가락을 건너뛰지 않는다. 예를 들어 숫자 10을 셀 때는, 엄지 → 검지 → 중지 → 약지 → 새끼 → 약지 → 중지 → 검지 → 엄지 → 검지 이렇게 센다.</p>

<p>영식이가 손가락을 하나 다쳤다. 영식이는 오른손으로는 셀 수 없기 때문에, 왼손으로 세야 한다. 다친 손가락을 이용해서 셀 수 있는 횟수가 제한되어 있다.</p>

<p>영식이가 셀 수 있는 최대 숫자를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 영식이가 다친 손가락이 주어진다. 엄지부터 차례대로 1, 2, 3, 4, 5로 번호가 매겨져 있다. 둘째 줄에는 영식이가 다친 손가락으로 몇 번 셀 수 있는지 주어진다. 이 수는 1,000,000,000보다 작거나 같은 자연수 또는 0이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 영식이가 셀 수 있는 수의 최댓값을 출력한다. 만약 시작도 할 수 없으면 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
3
','15
','MATH'),
                                                                                                                (171,'BAEKJOON','https://www.acmicpc.net/problem/1629',1629,'곱셈','0.5초(추가시간없음)','128 MB',10,'<p>자연수 A를 B번 곱한 수를 알고 싶다. 단 구하려는 수가 매우 커질 수 있으므로 이를 C로 나눈 나머지를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 A, B, C가 빈 칸을 사이에 두고 순서대로 주어진다. A, B, C는 모두 2,147,483,647 이하의 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 A를 B번 곱한 수를 C로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10 11 12
','4','MATH'),
                                                                                                                (172,'BAEKJOON','https://www.acmicpc.net/problem/1630',1630,'오민식','2초','128 MB',12,'<p>오민식을 만족하는 수: 1보다&nbsp;크거나 같고, N보다 작거나 같은 모든 자연수로 나누어 떨어지는 수.</p>

<p>영식이와 다솜이는 N이 주어졌을 때, 오민식을 만족하는 가장 작은 수가 궁금해졌다. 그 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수 N이 주어진다. N은 1,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 주어진&nbsp;입력에 대해 오민식을 만족하는 가장 작은 자연수를 987654321로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10
','2520','MATH'),
                                                                                                                (173,'BAEKJOON','https://www.acmicpc.net/problem/1631',1631,'오영식의 보물','1초','128 MB',12,'<p>오영식의 보물은 베트남의 하노이에 있는 하노이 탑(Tower of Hanoi)의 모형이다. 하노이 탑은 3개의 막대로 이루어져 있다. 막대는 왼쪽부터 차례대로 A, B, C로 이름이 매겨져 있고, N개의 디스크로 이루어져있다. N개의 디스크 크기는 1부터 N으로 차례대로 이루어져있다. 처음에 모든 디스크들은 막대 A에 놓여져있다. 디스크는 크기가 큰 것이 반드시 크기가 작은 것의 밑에 있어야 한다. 따라서 처음에는 모두 막대 A의 가장 아래에 N크기의 디스크가 있고, 가장 위에는 1크기의 디스크가 있다. 디스크를 이동할 때는 한 번에 하나씩만 이동할 수 있다.</p>

<p>민식이는 영식이랑 같이 하노이 탑을 이동시키면서 놀고 싶었다. 마침 둘은 처음 상태에서 모든 디스크를 C로 이동시키는 게임을 너무 많이 했기 때문에, 새로운 규칙이 필요했다. 마침 민식이의 근처에 살던 다솜이는 새로운 규칙을 만들어 주었다. 일단 다솜이가 규칙에 맞게 적절히 이동한 상태를 보여준다. 그럼 두 사람이 그 상태로 최소 이동횟수로 이동시켜야 한다. 그 최소 이동횟수의 방법대로 M번 움직였을 때, 하노이탑의 상태를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 디스크의 개수 N과 움직여야하는 횟수 M이 주어진다. 둘째 줄에 이동해야하는 다솜이가 규칙에 맞게 적절히 이동한 상태가 문자열로 주어진다. 모든 문자는 A, B, C중 하나이며, 그 문자열의 0번째 원소는 1번 디스크가 있는 위치, 1번째 원소는 2번째 디스크가 있는 위치와 같은 순서이다. i번째 원소는 i+1번째 디스크가 있는 위치이다. N은 30보다 작거나 같은 자연수이고, M은 0보다 크거나 같고, m보다 작거나 같은 자연수이다. m은 입력으로 주어진 상태로 만드는데 드는 최소 이동 횟수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 입력으로 주어진 것과 같은 형식으로 하노이탑의 상태를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1의 경우 AAA에서 CCC로 이동하는 최소 이동 상태는 AAA -> CAA -> CBA -> BBA -> BBC -> ABC -> ACC -> CCC 이다.</p>

				</div>
				</div>','3 4
CCC
','BBC
','MATH'),
                                                                                                                (175,'BAEKJOON','https://www.acmicpc.net/problem/1642',1642,'딱따구리','10초','128 MB',20,'<p>강원도 횡성에는 엄청나게 큰 나무 두 개가 마주보고 있다. 이 나무의 기둥에는 수많은 구멍들이 있고, 수많은 딱따구리들이 이 구멍에서 서식하기 위해 몰려들었다. 하나의 구멍에는 한 마리의 딱따구리만이 서식할 수 있고 비어있는 구멍도 있을 수 있다. 이들 중 몇몇 두 딱따구리는 친밀한 관계를 유지하여 이들의 서식지를 왔다 갔다 한다. 하지만 딱따구리는 워낙 빨리 이동하기 때문에 충돌의 위험을 줄이기 위해 몇몇 규칙으로 딱따구리의 서식지를 배정하려 한다.</p>

<ol>
	<li>딱따구리의 이동경로는 직선이다.</li>
	<li>친밀한 관계를 가지는 두 딱따구리는 서로 다른 나무에 서식하고 있어야한다.</li>
	<li>친밀한 관계를 가지는 딱따구리의 서식지를 연결하는 선분끼리 교차하면 안 된다. 단, 끝점 즉 서식지는 공유해도 상관없다</li>
</ol>

<p>딱따구리는 가능한 한 낮은 곳에 위치한 구멍에서 서식하기를 원한다. 또한 각각의 나무에 있는 구멍의 수는 딱따구리의 수보다 크다. 문제는 이러한 조건을 만족하는 서식지 배정의 가짓수를 구하는 것이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 새들의 숫자를 나타내는 N(1 ≤ N ≤ 1,000,000), 친밀한 관계를 유지하는 딱따구리 쌍의 수를 나타내는 M(1 ≤ M ≤ 10,000,000), 결과를 나눌 제수 K(1 ≤ K ≤ 2,000,000)가 공백으로 구분되어 주어진다. 새들은 1번부터 N번까지 번호가 붙여져 있고 두 번째 줄부터 M+1번째 줄까지 각 줄에 친밀한 관계를 가지는 딱따구리의 번호가 공백으로 구분되어 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 서식지 배정의 가짓수 R을 K로 나눈 나머지를 출력한다. 서식지를 배정할 수 없는 경우는 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p><img alt="" height="392" src="/JudgeOnline/upload/201005/ekrekrnfl.PNG" width="422"></p>

				</div>
				</div>','3 2 10
1 2
1 3
','4
','MATH'),
                                                                                                                (182,'BAEKJOON','https://www.acmicpc.net/problem/1643',1643,'쿠폰','1초','128 MB',11,'<p>신기한 마이마이의 치킨박스 하나를 사면 1부터 N까지의 숫자 중 하나가 적힌 쿠폰 한 개를 준다.</p>

<p>해빈이는 골드치즈치킨을 매우 좋아한다. 1부터 N까지의 쿠폰들을 모두 모아야 골드치즈치킨 하나를 주문할 수 있다고 할 때, 해빈이는 신기한 마이마이의 치킨박스를 평균적으로 얼마나 많이 주문해야 하는가?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>쿠폰에 적힐 숫자의 범위(1 ≤ N ≤ 22)가 여러 줄에 걸쳐서 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 입력에 대해 해빈이가 주문해야할 치킨박스의 수를 출력한다. 만약 답이 정수라면 그대로 출력한다. 답이 정수가 아니라면 정수부분을 출력하고, 공백하나를 출력한 다음, 아래에 보인 형식대로 적절히 정수를 뺀 나머지 값을 기약분수를 출력한다. 불필요한 공백은 출력하지 않는다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
5
17
','3
   5
11 --
   12
   340463
58 ------
   720720
','MATH'),
                                                                                                                (176,'BAEKJOON','https://www.acmicpc.net/problem/1644',1644,'소수의 연속합','2초','128 MB',13,'<p>하나 이상의 연속된 소수의 합으로 나타낼 수 있는 자연수들이 있다. 몇 가지 자연수의 예를 들어 보면 다음과 같다.</p>

<ul>
	<li>3 : 3 (한 가지)</li>
	<li>41 : 2+3+5+7+11+13 = 11+13+17 = 41 (세 가지)</li>
	<li>53 : 5+7+11+13+17 = 53 (두 가지)</li>
</ul>

<p>하지만 연속된 소수의 합으로 나타낼 수 없는 자연수들도 있는데, 20이 그 예이다. 7+13을 계산하면 20이 되기는 하나 7과 13이 연속이 아니기에 적합한 표현이 아니다. 또한 한 소수는 반드시 한 번만 덧셈에 사용될 수 있기 때문에, 3+5+5+7과 같은 표현도 적합하지 않다.</p>

<p>자연수가 주어졌을 때, 이 자연수를 연속된 소수의 합으로 나타낼 수 있는 경우의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수 N이 주어진다. (1 ≤ N ≤ 4,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 자연수 N을 연속된 소수의 합으로 나타낼 수 있는 경우의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','20
','0','MATH'),
                                                                                                                (177,'BAEKJOON','https://www.acmicpc.net/problem/1665',1665,'화물열차','2초','128 MB',20,'<p>화물열차가 두 대가 있을 때, 이웃한 레일 위에 놓인 두 화물 열차 사이에 짐을 옮기려고 한다. 화물 열차의 각 칸에는 컨테이너가 놓여 있기도 하고, 놓여 있지 않기도 한데 컨테이너가 놓인 칸이 가장 많이 겹치도록 두 화물 열차를 겹쳐 놓으면 짐을 옮기는 과정이 수월하다.</p>

<p>처음에 두 화물 열차는 아래 그림과 같이 첫 칸의 앞부분이 서로 마주보며 같은 선에 위치하고 있다. 화물 열차 A는 가만히 있고, 화물 열차 B를 움직여 컨테이너가 놓인 칸이 가능한 많이 겹쳐지게 하려고 한다. 화물 열차 B를 몇 칸 앞으로 움직여야 하는지 구하는 프로그램을 작성하시오.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/5a0468d3-d509-47ab-868c-6fa364e91f65/-/preview/" style="width: 263px; height: 114px;"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 화물 열차 A에 연속적으로 컨테이너가 놓여 있는 구간의 개수 N이 주어진다. 이어 N줄에는 X<sub>i</sub>와 Y<sub>i</sub> (X<sub>i</sub> ≤ Y<sub>i</sub>)가 공백을 사이에 두고 주어지는데 이는 화물 열차 A의 X<sub>i</sub>칸부터 Y<sub>i</sub>칸까지 컨테이너가 놓여 있음을 의미한다. 다음 줄에는 화물 열차 B에 연속적으로 컨테이너가 놓여 있는 구간의 개수 M이 주어진다. 이어 M줄에는 Z<sub>i</sub>와 W<sub>i</sub> (Z<sub>i</sub> ≤ W<sub>i</sub>)가 공백을 사이에 두고 주어지는데 이는 화물 열차 B의 Z<sub>i</sub>칸부터 W<sub>i</sub>칸까지 컨테이너가 놓여 있음을 의미한다. N과 M은 1,000이하의 자연수이고, X<sub>i</sub>, Y<sub>i</sub>, Z<sub>i</sub>, W<sub>i</sub>는 10<sup>9</sup>이하의 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 두 열차의 컨테이너가 놓인 칸이 최대로 겹쳐지게 하기 위하여 화물 열차 B를 몇 칸 앞으로 움직여야 하는지를 출력한다. 최대로 겹쳐지게 하도록 열차 B를 움직이는 칸수가 여러 가지인 경우에는 그 중 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 3
5 5
7 9
3
2 3
6 6
8 9
','10
','MATH'),
                                                                                                                (188,'BAEKJOON','https://www.acmicpc.net/problem/1669',1669,'멍멍이 쓰다듬기','2초','128 MB',11,'<p>동물원에서 막 탈출한 원숭이 한 마리가 세상구경을 하고 있다. 그러다 오늘도 어김없이 그의 영원한 라이벌 멍멍이를 만나게 되었다. 원숭이는 멍멍이를 쓰다듬고&nbsp;싶었다. 하지만 원숭이는 멍멍이보다 키가 작기 때문에 멍멍이를 쓰다듬어줄&nbsp;수 없다. 원숭이가 멍멍이를 쓰다듬으려면 둘의 키가 같아야 하기 때문이다.</p>

<p>그래서 원숭이는 그 날부터 자신의 키를 조절하기로 마음먹었다. 원숭이는 초능력자이기 때문에 마음대로 키를 늘릴 수 있다. 하지만 안타깝게도 사람이 아니라 동물이기 때문에 하루에 늘릴 수 있는 키의 양을 1cm밖에 조절할 수 없다. 예를 들어 오늘 키를 5cm 만큼 늘렸다면, 내일은 키를 4cm, 5cm, 6cm 중 하나만큼 키를 늘릴 수 있다는 뜻이다. 늘릴 수 있는 키의 양은 음수가 될 수 없다. 그리고 첫째 날과 마지막 날에는 무조건 1cm 만큼 늘릴 수 있다.</p>

<p>현재 원숭이와 멍멍이의 키가 주어졌을 때, 원숭이가 매일 키를 늘려서 멍멍이와 키가 같아지는 최소의 일수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 원숭이의 키 X와 멍멍이의 키 Y가 주어진다. X, Y는 0 ≤ X ≤ Y < 2<sup>31</sup>을 만족하는 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 원숭이가 멍멍이의 키와 같아지게 되는 최소의 일수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','45 49
','3
','MATH'),
                                                                                                                (178,'BAEKJOON','https://www.acmicpc.net/problem/1670',1670,'정상 회담 2','2초','128 MB',13,'<p>여러 개의 소국가로 나뉘어져 있었던 A국을 다시 하나의 국가로 합치기 위해 각 소국가의 대표 N명이 원탁에 모였다.</p>

<p>각 대표는 미리 원탁의 자리를 배정받았다. 회의를 시작하기 전에 일단 서로 악수를 하려고 한다. 각 대표는 한 사람과만 악수할수 있고, 모든 악수는 동시에 일어난다. 이때, 어떤 사람의 팔도 교차하지 않았을 때 완벽하게 악수했다고 한다.</p>

<p>N이 주어지면 완벽하게 악수하는 경우의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정상 회담에 참가한 사람의 수 N이 주어진다. 이 값은 10,000보다 작거나 같은 짝수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>완벽한 악수의 경우의 수를 987654321로 나눈 나머지를&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
','2
','MATH'),
                                                                                                                (179,'BAEKJOON','https://www.acmicpc.net/problem/1673',1673,'치킨 쿠폰','2초','128 MB',4,'<p>강민이는 치킨 한 마리를 주문할 수 있는 치킨 쿠폰을 n장 가지고 있다. 이 치킨집에서는 치킨을 한 마리 주문할 때마다 도장을 하나씩 찍어 주는데, 도장을 k개 모으면 치킨 쿠폰 한 장으로 교환할 수 있다.</p>

<p>강민이가 지금 갖고 있는 치킨 쿠폰으로 치킨을 최대 몇 마리나 먹을 수 있는지 구하여라. 단, 치킨을 주문하기 위해서는 반드시 치킨 쿠폰을 갖고 있어야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>여러 줄에 걸쳐서&nbsp;자연수 n과 k가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 입력마다 한 줄에&nbsp;정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 3
10 3
100 5
','5
14
124
','MATH'),
                                                                                                                (184,'BAEKJOON','https://www.acmicpc.net/problem/1676',1676,'팩토리얼 0의 개수','2초','128 MB',6,'<p>N!에서 뒤에서부터 처음 0이 아닌 숫자가 나올 때까지 0의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. (0 ≤ N ≤ 500)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 구한 0의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10
','2
','MATH'),
                                                                                                                (180,'BAEKJOON','https://www.acmicpc.net/problem/1678',1678,'기차','2초','128 MB',8,'<p>사무실에서 가까스로 도망친(장애물이 계단을 막고 있는 입력이 주어졌다) 이 사장은 기차를 이용하여 멀리 도망치기로 결심하였다. 도망을 치는 도중에 한 기차를 오래 타고 있는 것은 위험했기 때문에, 이 사장은 같은 기차를 타고 두 역 이상을 이동하지 않기로 하였다. 기차의 종류가 같더라도 출발 시간이 다르면 같은 기차가 아니다.</p>

<p>모든 기차는 0번 역에서 각 기차의 고유 출발시간에 매 시간마다 계속 출발한다. 이 사장은 0번 역에서 한 기차를 타고 1번 역에서 내린다. 그리고 1번 역에서 기차를 기다리다 가장 먼저 오는 기차를 타고 2번 역으로 이동한다. 그리고 2번 역에서 가장 먼저 도착한 기차를 타고 3번 역으로 이동하며, 이를 N번 역에 도착할 때까지 반복한다.</p>

<p>이와 같이 N번 역으로 이동했을 때, 가장 마지막에 탄 기차의 번호를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 기차의 종류 개수 T(<30), 이 사장이 출발하는 시간(분 단위로) M(<60), N(<1,000,000,000)이 주어진다. 다음 줄에는 각 기차 종류별로 기차의 번호(길이 10을 넘지 않는 문자열)과 그 기차가 0번 역에서 출발하는 시간을 분 단위(<60)로 입력한다. 각 줄의 끝에는 -1로 주어진다. 같은 시간에 출발하는 기차는 없다고 가정해도 좋다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 기차의 번호를 출력한다</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 48 783
11 10 20 30 -1
13-4 16 25 35 45 58 -1
','13-4
','MATH'),
                                                                                                                (189,'BAEKJOON','https://www.acmicpc.net/problem/1684',1684,'같은 나머지','2초','128 MB',11,'<p>정수 N을 정수 D로 나눴을 때의 몫을 Q, 나머지를 R이라고 하면 항등식 R = N - Q×D가 성립한다.</p>

<p>n개의 정수로 된 수열이 있을 때, 모든 정수를 한 정수 D로 나눴을 때 나머지가 같아지는 경우가 있다. 그리고 수열에 따라서는 이러한 정수 D가 여러 개 존재할 수 있다.</p>

<p>n개의 정수로 된 수열이 주어졌을 때, 가장 큰 D를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n(1 ≤ n ≤ 1,000)이 주어진다. 다음 줄에는 절댓값이 1,000,000을 넘지 않는 n개의 정수들이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 가장 큰 D를 출력한다. 항상 가장 큰 D가 존재하는 경우만 입력으로 주어진다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
701 1059 1417 2312
','179
','MATH'),
                                                                                                                (181,'BAEKJOON','https://www.acmicpc.net/problem/1685',1685,'숫자놀이 2','2초','128 MB',19,'<p>홀순이(holsoon)와 짝순이(jjaksoon) 둘이서 숫자 게임을 한다. 예를 들어, 정수 1과 3이 주어지고, 이 둘을 통틀어 5번까지 마음대로 사용하여 그 합을 구하여 1,2,3,…을 만드는 놀이다. 이 경우 먼저 홀순이가 1 하나만을 사용하여 1을 만든다. 짝순이는 1+1로 1을 두 번 사용하여 2를 만들고, 다시 홀순이는 3을 만들어야하는데 1+1+1로 1을 세 번 사용하거나 3을 한 번 사용하여 3을 만든다. 짝순이는 1+1+1+1, 1+3으로 4를 만든다. 서로 번갈아서 상대방의 수보다 1이 큰 수를 만들어야 한다. 단, 1과 3을 통틀어 최대 5번 사용한다. 이런 식으로 진행하면 13까지는 만들 수 있지만 14를 만들지 못하게 되므로 짝순이가 졌다.&nbsp;</p>

<p>숫자 게임에서 사용하는 정수 N개와 최대 사용 횟수 K가&nbsp;주어질 때, 누가 어느 수에서 이기는지를 판별하는 프로그램을 작성해보자. 사용하는 정수에는 반드시 1이 포함된다. 그렇지 않으면 홀순이가 1을 만들지 못하므로 무조건 지게 된다. 1이 꼭 있으니 상대방이 만든 방법에 1만 한 번 더 쓰면 된다고 생각하기 쉽지만, 최대 사용 횟수가 정해져 있으므로, 이 방법이 수가 커지는 경우에는 잘 되지 않는다. 위에서 13을 홀순이가 만들었지만 짝순이는 최대 사용 횟수 때문에 14를 만들지 못하고 진다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 숫자 게임에서 사용하는 정수의 수 N이,&nbsp;둘째 줄에는 사용하는 정수가 크기 순으로 주어진다. 셋째 줄에는 최대 사용 횟수 K가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 누가 몇 번째 수에서 이겼는지를 출력한다.&nbsp;예제에서는 짝순이가 14를 못 만들어서, 홀순이가 14에서 이겼다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1 3
5
','holsoon win at 14
','MATH'),
                                                                                                                (190,'BAEKJOON','https://www.acmicpc.net/problem/1690',1690,'순열','2초','128 MB',17,'<p>N개의 정수로 구성된 배열 A[1..N]가 있다. 이 배열의 원소들은 1부터 N사이의 정수이고 모두 다른 숫자이다. 배열 B[1..N]는 아래의 규칙에 의해 배열 A로부터 만들어진다.</p>

<p>B[A[A[i]]] = i, (1 ≤ i ≤ n)</p>

<p>문제는 역으로 배열 B를 입력받으면 이에 해당하는 배열 A를 찾는 것이다. (물론 존재하지 않을수도 있다) 만약 가능한 배열 A가 두 개이상 존재한다면 그 중 임의로 하나만 출력하면 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 B배열의 원소 개수 N(1 ≤ N ≤ 20,000)이 입력된다. 두 번째 줄부터 N+1번째 줄까지 한 줄에 하나씩 B[1], …, B[N]이 차례대로 입력된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 배열 A의 원소 개수 N을 출력한다. (해가 존재할 경우 배열 B의 원소 개수 N을 출력하고 해가 존재하지 않을 경우 0을 출력한다) 다음 줄부터 한 줄에 하나씩 A[1], …, A[N]을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
3
4
1
2
','4
2
3
4
1
','MATH'),
                                                                                                                (183,'BAEKJOON','https://www.acmicpc.net/problem/1699',1699,'제곱수의 합','2초','128 MB',9,'<p>어떤 자연수 N은 그보다 작거나 같은&nbsp;제곱수들의 합으로 나타낼 수 있다. 예를 들어 11=3<sup>2</sup>+1<sup>2</sup>+1<sup>2</sup>(3개 항)이다. 이런 표현방법은 여러 가지가 될 수 있는데, 11의 경우 11=2<sup>2</sup>+2<sup>2</sup>+1<sup>2</sup>+1<sup>2</sup>+1<sup>2</sup>(5개 항)도 가능하다. 이 경우, 수학자 숌크라테스는 “11은 3개 항의 제곱수 합으로 표현할 수 있다.”라고 말한다. 또한 11은 그보다 적은 항의 제곱수 합으로 표현할 수 없으므로, 11을 그 합으로써 표현할 수 있는 제곱수 항의 최소 개수는 3이다.</p>

<p>주어진 자연수 N을 이렇게 제곱수들의 합으로 표현할 때에 그 항의 최소개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수 N이 주어진다. (1 ≤ N ≤ 100,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>주어진 자연수를 제곱수의 합으로 나타낼 때에 그 제곱수 항의 최소 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7
','4
','MATH'),
                                                                                                                (191,'BAEKJOON','https://www.acmicpc.net/problem/1703',1703,'생장점','1초','128 MB',3,'<p>branchorama 나무는 특이한 규칙을 가지고 성장합니다. 어린 branchorama&nbsp;초목은 하나의 잎을 꼭대기에 가진 가는 묘목이며, 그 잎에는 생장점이 있습니다. 성장하는 계절 동안 나무의 생장점들은 여러 개의 가지로 나뉘게 되며, 성장이 끝나면 각 가지는 생장점을 가진 하나의 잎을 꼭대기에 매달게 됩니다. 놀랍게도 같은 나무의 모든 생장점들은 같은 숫자(splitting factor)의 가지로 나뉘며, 그 숫자는 해가 지남에 따라 변합니다.</p>

<p>아래의 예는 Brown 씨의 과수원에서 한&nbsp;branchorama&nbsp;나무가 유목에서부터 3년간 자란 결과를 보여줍니다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3.amazonaws.com/problem/1703/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202017-01-12%20%EC%98%A4%EC%A0%84%208.31.45.png" style="height: 141.667px; width: 381.667px;"></p>

<p>예시에서 예측할 수 있듯이, branchorama&nbsp;나무는 과밀하게 성장하는 경향이 있습니다. 따라서 Brown 씨는 매 겨울마다 과도하게 성장한 나무들의 가지를 쳐냅니다. 아래는 가지를 쳐낸 &nbsp;branchorama&nbsp;나무의 예입니다</p>

<p style="text-align: center;"><img alt="스크린샷 2017-01-12 오전 8.31.53.png" src="https://upload.acmicpc.net/7ed14a0d-f79e-41fd-b899-051095b7edc7/-/crop/320x225/628,183/-/preview/"></p>

<p>branchorama&nbsp;나뭇잎은 굉장히 크고 광합성에 유리하지만, 오직&nbsp;생장점이 온전히 보존된 가지의 끝에만 달립니다. 따라서 나무가 버티지 못할 정도로 가지를 쳐내는 일은 없어야 합니다.</p>

<p>Brown 씨는 각 나무가 몇 개의 잎을 가졌는지 알고 싶어합니다. 나뭇잎을 일일이 세는 것은 지루하기 때문에, 각 해(level) 성장기의 splitting factor와 그 해 겨울에 쳐낸 가지의 수를 이용해 Brown 씨에게 나뭇잎의 수를 알려주세요.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 각 줄은 하나의&nbsp;branchorama&nbsp;나무를 의미합니다.</p>

<p>각 줄은 나무의 나이 a(1 ≤ a ≤ 20)로 시작하며, 그 뒤로 2a 개의 정수가 공백을 두고 주어집니다. 2a 개의 정수는&nbsp;splitting factor와 가지치기 한 가지의 수가 level 별로 나열된 것입니다.</p>

<p>마지막 줄로 &nbsp;0이 주어지며 더 이상의 입력은 없습니다. 0은 처리하지 않습니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 나무에 대하여 나무에 달려있는 잎의 수를 한 줄씩 출력하세요. 나뭇잎의 수가 signed 32-bit integer를 초과하지 않는다고 가정해도 좋습니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>처음에 심는 것은 가지 하나에 잎이 하나 달린 묘목입니다.</p>
				</div>
				</div>','1 3 0
2 3 0 2 0
3 3 0 2 0 2 0
3 3 0 2 1 2 3
2 4 1 3 4
4 5 0 5 1 5 2 5 101
0
','3
6
12
7
5
489
','MATH'),
                                                                                                                (200,'BAEKJOON','https://www.acmicpc.net/problem/1712',1712,'손익분기점','0.35초','128 MB',4,'<p>월드전자는 노트북을 제조하고 판매하는 회사이다. 노트북 판매 대수에 상관없이 매년 임대료, 재산세, 보험료, 급여 등 A만원의 고정 비용이 들며, 한 대의 노트북을 생산하는 데에는 재료비와 인건비 등 총 B만원의 가변 비용이 든다고 한다.</p>

<p>예를 들어 A=1,000, B=70이라고 하자. 이 경우 노트북을 한 대 생산하는 데는 총 1,070만원이 들며, 열 대 생산하는 데는 총 1,700만원이 든다.</p>

<p>노트북 가격이 C만원으로 책정되었다고 한다. 일반적으로 생산 대수를 늘려 가다 보면 어느 순간 총 수입(판매비용)이 총 비용(=고정비용+가변비용)보다 많아지게 된다. 최초로 총 수입이 총 비용보다 많아져 이익이 발생하는 지점을 손익분기점(BREAK-EVEN POINT)이라고 한다.</p>

<p>A, B, C가 주어졌을 때, 손익분기점을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 A, B, C가 빈 칸을 사이에 두고 순서대로 주어진다. A, B, C는 21억 이하의 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 손익분기점 즉 최초로 이익이 발생하는 판매량을 출력한다. 손익분기점이 존재하지 않으면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>이 문제에서 설명하는 손익분기점은 회계학에서 정의하는 손익분기점과 다를 수 있다.</p>

				</div>
				</div>','1000 70 170
','11','MATH'),
                                                                                                                (195,'BAEKJOON','https://www.acmicpc.net/problem/1720',1720,'타일 코드','2초','128 MB',12,'<p>2×N 크기의 넓은 판을 1×2 (또는 2×1) 크기와 2×2 크기의 타일로 채우려고 한다. 여러 가지 경우가 있을 수 있으므로, 각각을 하나의 코드로 대응시켜서 암호화에 이용하려고 한다.</p>

<p>그런데 문제가 생겼다. 넓은 판을 교환하다 보니 좌우 대칭인 경우가 있어, 뒤집히는 경우 코드가 헷갈리게 되는 경우가 발생한 것이다. 예를 들어 아래의 두 경우는 달라 보이지만 좌우 대칭을 이루고 있다.</p>

<p><img alt="" src="/JudgeOnline/upload/201006/xkdlf.PNG" style="height:208px; width:253px"></p>

<p>N이 주어지면, 전체 타일 코드의 개수를 구하는 프로그램을 작성하시오. (단, 서로 좌우 대칭을 이루는 중복된 표현은 한 가지 경우로만 처리한다.)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 타일의 크기 N(1 ≤ N ≤ 30)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 타일 코드의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
','8','MATH'),
                                                                                                                (197,'BAEKJOON','https://www.acmicpc.net/problem/1722',1722,'순열의 순서','2초','128 MB',11,'<p>1부터 N까지의 수를 임의로 배열한 순열은 총 N! = N×(N-1)×…×2×1 가지가 있다.</p>

<p>임의의 순열은 정렬을 할 수 있다. 예를 들어&nbsp; N=3인 경우 {1, 2, 3}, {1, 3, 2}, {2, 1, 3}, {2, 3, 1}, {3, 1, 2}, {3, 2, 1}의 순서로 생각할 수 있다. 첫 번째 수가 작은 것이 순서상에서 앞서며, 첫 번째 수가 같으면 두 번째 수가 작은 것이, 두 번째 수도 같으면 세 번째 수가 작은 것이….</p>

<p>N이 주어지면, 아래의 두 소문제 중에 하나를 풀어야 한다. k가 주어지면 k번째 순열을 구하고, 임의의 순열이 주어지면 이 순열이 몇 번째 순열인지를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(1 ≤ N ≤ 20)이 주어진다. 둘째 줄의 첫 번째 수는 소문제 번호이다. 1인 경우 k(1 ≤ k ≤ N!)를 입력받고, 2인 경우 임의의 순열을 나타내는 N개의 수를 입력받는다. N개의 수에는 1부터 N까지의 정수가 한 번씩만 나타난다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>k번째 수열을 나타내는 N개의 수를 출력하거나, 몇 번째 수열인지를 출력하면 된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 3
','1 3 2 4
','MATH'),
                                                                                                                (193,'BAEKJOON','https://www.acmicpc.net/problem/1728',1728,'구슬 굴리기','2초','128 MB',17,'<p>탁자 위에 N 개의 구슬이&nbsp;굴러다닌다. 탁자를 하나의 좌표 평면으로 보았을 때, 구슬은 x축에 나란하게 굴러다니는데, 각각의 y좌표가 달라 굴러다니는 도중에 충돌은 일어나지 않는다. 각각의 구슬은 일정한 속도를 가지고 있으며, 출발 위치가 서로 다르다.</p>

<p>일정한 시간 간격으로 구슬의 사진을 찍어 구슬들의 x좌표들을 모두 나열한다고 생각하자. 이때, 구슬들의 모양이 모두 똑같아서 어느 구슬이 어느 좌표에 있는지는 사진에서 알 수 없다. 그러나 일정한 간격으로 찍은 몇 개의 사진이 주어진다면, 각 구슬의 출발 위치와 속도를 모두 알아낼 수 있게 된다. 이를 알아내는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 행에는 구슬의 개수 N이 주어진다. (1 ≤ N ≤ 500) 사진은 N+1장이 주어지며, 다음 행부터 각각의 사진에 보이는 구슬들의 x좌표가 주어진다.</p>

<p>구슬의 x좌표는 절댓값이 20억을 넘지 않는 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>N개의 줄에 각 구슬의 처음 위치와 속도를 빈 칸을 사이에 두고 출력한다. 이때, 구슬의 처음 위치를 기준으로, 오름차순 정렬하여 출력하도록 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
0 2 3
5 1 1
2 0 7
9 3 -1
','0 1
2 -1
3 2
','MATH'),
                                                                                                                (194,'BAEKJOON','https://www.acmicpc.net/problem/1731',1731,'추론','2초','128 MB',4,'<p>등차가 정수인 등차수열 (어떤 수에 차례대로 일정한 수를 더해서 이루어지는 수열) 은 2개의 숫자로 나타낼 수 있다. P는 수열의 첫 번째 수이고, Q는 그 다음수가 되기 위해 바로 전의 수에 더해야 하는 수이다. 예를 들어 P=1, Q=2 이면 그 등차수열은 1, 3, 5, 7, ..... 이 된다.</p>

<p>등비가 정수인 등비수열 (어떤 수에서 시작해 차례로 같은 수를 곱하여 만든 수열) 은 등차수열과 비슷하게 2개의 숫자로 나타낼 수 있다. P는 수열의 첫 번째 수이고, Q는 그 다음수가 되기 위해 바로 전의 수에 곱해야 하는 수이다. 예를 들어 P=3, Q=2이면 그 등비수열은 3, 6, 12, ...이 된다.</p>

<p>테디는 세상에서 수학을 제일 좋아해서 매일같이 이 수열이 등차수열인지 등비수열인지 정한다음에 다음 수를 구한다.</p>

<p>어떤 수열이 주어졌을 때, 그 수열의 규칙이 등차수열인지, 등비수열인지 결정한 후에, 다음에 등장할 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 수열의 길이 N이 주어진다. 둘째 줄부터 N개의 줄에 수열의 각 원소가 차례대로 주어진다. 주어지는 수열은 등차수열이나 등비수열 중에 하나다. N은 항상 3 이상 50이하이며, 입력되는 수는 10<sup>6</sup> 이하의 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 수열의 다음 원소를 출력한다. 이 수는 20억보다 작거나 같은 자연수이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
364
843
1322
1801
','2280
','MATH'),
                                                                                                                (196,'BAEKJOON','https://www.acmicpc.net/problem/1735',1735,'분수 합','2초','128 MB',8,'<p>분수 A/B는 분자가 A, 분모가 B인 분수를 의미한다. A와 B는 모두 자연수라고 하자.</p>
<p>두 분수의 합 또한 분수로 표현할 수 있다. 두 분수가 주어졌을 때, 그 합을 기약분수의 형태로 구하는 프로그램을 작성하시오. 기약분수란 더 이상 약분되지 않는 분수를 의미한다.</p>

					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄과 둘째 줄에, 각 분수의 분자와 분모를 뜻하는 두 개의 자연수가 순서대로 주어진다. 입력되는 네 자연수는 모두 30,000 이하이다.</p>
					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 구하고자 하는 기약분수의 분자와 분모를 뜻하는 두 개의 자연수를 빈 칸을 사이에 두고 순서대로 출력한다.</p>
					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 7
3 5
','31 35
','MATH'),
                                                                                                                (198,'BAEKJOON','https://www.acmicpc.net/problem/1740',1740,'거듭제곱','2초','128 MB',7,'<p>3의 제곱수를 생각하자. 3의 0제곱, 3의 1제곱, 3의 2제곱, ... 은 순서대로 1, 3, 9, 27, ... 이 된다.</p>

<p>이를 바탕으로, 한 개 이상의 서로 다른 3의 제곱수의 합으로 표현되는 수를 생각할 수 있다. 예를 들어 30은 27과 3의 합이므로, 이러한 수에 포함된다.</p>

<p>한 개 이상의 서로 다른 3의 제곱수의 합으로 표현되는 N번째로 작은&nbsp;수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. N은 500,000,000,000 이하의 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 한 개 이상의 서로 다른 3의 제곱수의 합으로 표현되는 N번째로 작은&nbsp;수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
','9
','MATH'),
                                                                                                                (185,'BAEKJOON','https://www.acmicpc.net/problem/1742',1742,'레이싱결과','2초','128 MB',17,'<p>상욱이는 레이싱 결과 맞추기를 좋아한다. 상욱이가 레이싱 결과를 맞추는 방법은 이전 경기에서 A란 선수가 B란 선수를 이긴 적이 있으면, A는 B를 무슨일이 있어도 이번 레이스에서 항상 이긴다고 가정하고 경기 결과를 예측 하는 방법이다.</p>

<p>하지만 상욱이는 위와 같은 방법으로는 경기 결과가 하나로 결정되지 않는다는 것을 깨달았다.</p>

<p>예를 들어, 이번 레이스경기에 참가하는 자동차의 수가 4개이고, 상욱이가 알고있는 예전의 경기결과가 1이 2를 이기고, 1이 3을 이긴다면, 상욱이가 예측할 수 있는 레이스의 결과는 4123, 4132, 1423, 1432, 1243, 1342, 1234, 1324로 총 8가지이다.</p>

<p>자동차의 수와, 상욱이가 알고잇는 예전 경기 결과가 주어졌을 때, 현재 가능한 경기결과의 수를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 이번 레이스에 참가하는 자동차의 수 N이 주어진다. N은 30보다 같거나 작은 자연수이다. 둘째 줄에 상욱이가 알고있는 예전 경기 결과의 수 M이 주어진다. M은 15보다 같거나 작은 자연수 또는 0이다. 셋째 줄부터 M개의 줄에는 예전 경기 결과가 주어진다. 예전 경기 결과는 A B 이렇게 주어지는데, A가 B를 항상 이긴다는 뜻이다. 자동차의 번호는 1부터 시작하며, N까지 하나씩 매겨져 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 상욱이가 예상할 수 있는 경기 결과의 수를 1,000,003으로 나눈 나머지를 출력한다. 만약 예전 경기 결과 모순(1이 2를 이기고, 2가 1을 이기는 상황, 즉 경기결과를 예상할 수 없는 상황)이라면, 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>가능한 경기결과는 123 213 231 이다.</p>

				</div>
				</div>','3
1
2 3
','3','MATH'),
                                                                                                                (187,'BAEKJOON','https://www.acmicpc.net/problem/1747',1747,'소수&팰린드롬','2초','256 MB',10,'<p>어떤 수와 그 수의&nbsp;숫자 순서를 뒤집은 수가 일치하는 수를 팰린드롬이라 부른다. 예를 들어 79,197과 324,423 등이 팰린드롬 수이다.</p>

<p>어떤 수 N (1 ≤ N ≤ 1,000,000)이 주어졌을 때, N보다 크거나 같고,&nbsp;소수이면서 팰린드롬인 수 중에서, 가장 작은 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 조건을 만족하는 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','31
','101
','MATH'),
                                                                                                                (199,'BAEKJOON','https://www.acmicpc.net/problem/1748',1748,'수 이어 쓰기 1','0.15초(하단참고)','128 MB',7,'<p>1부터 N까지의 수를 이어서 쓰면 다음과 같이 새로운 하나의 수를 얻을 수 있다.</p>

<blockquote>
<p>1234567891011121314151617181920212223...</p>
</blockquote>

<p>이렇게 만들어진 새로운 수는 몇 자리 수일까? 이 수의 자릿수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(1 ≤ N ≤ 100,000,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 새로운 수의 자릿수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
','5
','MATH'),
                                                                                                                (151,'BAEKJOON','https://www.acmicpc.net/problem/1750',1750,'서로소의 개수','2초','128 MB',13,'<p>어떤 수열 S가 주어진다. 이때, 한&nbsp;개 이상을 선택했을 때, 선택한 수의 최대공약수가 1이 되는 것의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 수열의 크기 N이 주어진다. 둘째 줄부터 N개의 줄에 수열의 각 원소 S<sub>i</sub>가 주어진다. 같은 수가 들어올 수도 있다. (1 ≤ N ≤ 50, 1 ≤ S<sub>i</sub> ≤ 100,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 정답을 10,000,003으로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1의 경우 가능한 경우의 수는 (2, 3), (4, 3), (2, 4, 3)이다.</p>

				</div>
				</div>','3
2
4
3
','3
','MATH'),
                                                                                                                (201,'BAEKJOON','https://www.acmicpc.net/problem/1754',1754,'진영 순열','2초','128 MB',18,'<p>길이가 N의 순열 A = (A<sub>0</sub>, A<sub>1</sub>, ..., A<sub>N-1</sub>)이 있다. 순열 A는 N-1보다 작거나 같은 음이 아닌 정수로만 이루어져 있다. 진영 순열 B = (B<sub>0</sub>, B<sub>1</sub>, ..., B<sub>N-1</sub>)은 B<sub>A<sub>i</sub></sub> = i를 만족하는 순열이다. 예를 들어 (2, 0, 3, 1, 4)의 진영 순열은 (1, 3, 0, 2, 4) 이다.</p>

<p>진영 순열 B에서&nbsp;B<sub>i</sub> > B<sub>i+1</sub>를 만족하는 i의 수가 k개이면, 그 순열을 K-진영 순열이라고 한다. (2, 0, 3, 1, 4)는 1-진영 순열이다. 그 이유는 이 순열의 진영 순열인 (1, 3, 0, 2, 4)에서 B<sub>i</sub> > B<sub>i+1</sub>를 만족하는 i의 개수가 1개이기 때문이다. (i = 1)</p>

<p>N, K, 그리고 F이 주어진다. N-1보다 작거나 같은 음이 아닌 정수로 이루어진 순열 중에서 A<sub>0</sub>이 F이면서, K-진영 순열인 것의 개수를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, 둘째 줄에 K, 셋째 줄에 F가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제의 정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7
3
2
','330
','MATH'),
                                                                                                                (202,'BAEKJOON','https://www.acmicpc.net/problem/1759',1759,'암호 만들기','2초','128 MB',11,'<p>바로 어제 최백준 조교가 방 열쇠를 주머니에 넣은 채 깜빡하고 서울로 가 버리는 황당한 상황에 직면한 조교들은, 702호에 새로운 보안 시스템을 설치하기로 하였다. 이 보안 시스템은 열쇠가 아닌 암호로 동작하게 되어 있는 시스템이다.</p>

<p>암호는 서로 다른 L개의 알파벳 소문자들로 구성되며 최소 한 개의 모음(a, e, i, o, u)과 최소 두 개의 자음으로 구성되어 있다고 알려져 있다. 또한 정렬된 문자열을 선호하는 조교들의 성향으로 미루어 보아 암호를 이루는 알파벳이 암호에서 증가하는 순서로 배열되었을 것이라고 추측된다. 즉, abc는 가능성이 있는 암호이지만 bac는 그렇지 않다.</p>

<p>새 보안 시스템에서 조교들이 암호로 사용했을 법한 문자의 종류는 C가지가 있다고 한다. 이 알파벳을 입수한 민식, 영식 형제는 조교들의 방에 침투하기 위해 암호를 추측해 보려고 한다. C개의 문자들이 모두 주어졌을 때, 가능성 있는 암호들을 모두 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 L, C가 주어진다. (3 ≤ L ≤ C&nbsp;≤ 15) 다음 줄에는 C개의 문자들이 공백으로 구분되어 주어진다. 주어지는 문자들은 알파벳 소문자이며, 중복되는 것은 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 줄에 하나씩, 사전식으로 가능성 있는 암호를 모두 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 6
a t c i s w
','acis
acit
aciw
acst
acsw
actw
aist
aisw
aitw
astw
cist
cisw
citw
istw
','MATH'),
                                                                                                                (204,'BAEKJOON','https://www.acmicpc.net/problem/1769',1769,'3의 배수','2초','128 MB',6,'<p>문제가 잘 풀리지 않을 때, 문제를 바라보는 시각을 조금만 다르게 가지면 문제가 쉽게 풀리는 경험을 종종 해 보았을 것이다. 여러 가지 방법이 있지만 그 중 하나로 우리가 풀고 싶은 문제를 좀 더 쉬운 문제로 바꾸어 풀어 보는 방법이 있다.</p>

<p>소위 "다른 문제로 바꾸어 풀기"라는 이 방법은, 아래와 같은 과정으로 이루어진다.</p>

<ol>
	<li>풀고자 하는 문제를 다른 문제로 변환한다.</li>
	<li>변환된 문제의 답을 구한다.</li>
	<li>구한 답을 원래 문제의 답으로 삼는다.</li>
</ol>

<p>이를 보다 쉽게 이해하기 위해서, 다음의 초등학교 수학 수준의 예를 들어 보자.</p>

<p>문제 1. "양의 정수 X는 3의 배수인가?"</p>

<p>이 문제를 아래와 같이 변환하는데, X의 각 자리의 수를 단순히 더한 수 Y를 만든다. 예를 들어 X가 1107이었다면, Y는 1+1+0+7=9가 된다. 그리고 Y에 대해서, 아래와 같은 문제를 생각한다.</p>

<p>문제 2. "Y는 3의 배수인가?"</p>

<p>위의 문제 1의 답은 아래의 문제 2의 대답과 일치한다. 위의 예의 경우, Y=9는 3의 배수이므로 X=1107 역시 3의 배수가 되는 것이다. 214는 각 자리수의 합 2+1+4=7이 3의 배수가 아니므로 3의 배수가 아니다.</p>

<p>문제 1을 풀고 싶으면 문제 2로 변환을 해서 문제 2의 답을 문제 1의 답으로 삼으면 된다. 일반적으로 Y는 X보다 크기가 작으므로, 문제 2가 더 쉬운 문제가 된다.</p>

<p>당신이 알고 있는 3의 배수는 한 자리 수밖에 없다고 가정하자. 즉, 문제 변환의 과정을 여러 번 거치다 보면 Y가 한 자리 수가 되는 순간이 있게 되는데, 그렇게 될 때까지 문제 변환을 반복한다는 뜻이다. 변환 후의 Y가 3, 6, 9 중 하나이면 원래의 수 X는 3의 배수이고, Y가 1, 2, 4, 5, 7, 8 중 하나이면 원래의 수 X는 3의 배수가 아니다.</p>

<p>큰 수 X가 주어졌을 때, 앞에서 설명한 문제 변환의 과정을 몇 번 거쳐야 Y가 한 자리 수가 되어, X가 3의 배수인지 아닌지를 알 수 있게 될지를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 큰 자연수 X가 주어진다. X는 1,000,000자리 이하의 수이다. 수는 0으로 시작하지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제 변환의 과정을 몇 번 거쳤는지를 출력한다. 이 수는 음이 아닌 정수가 되어야 한다. 둘째 줄에는 주어진 수가 3의 배수이면 YES, 아니면 NO를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>1234567 -> 28 -> 10 -> 1 (NO)</p>

				</div>
				</div>','1234567
','3
NO
','MATH'),
                                                                                                                (205,'BAEKJOON','https://www.acmicpc.net/problem/1770',1770,'배수와 약수의 개수','1초','512 MB',22,'<p>양의 정수 N이 주어졌을 때, 다음 두 조건을 만족하는 양의 정수 X의 개수를 구해보자.</p>

<ul>
	<li>X는 N의 배수이다.</li>
	<li>X의 양의 약수의 개수는 N개이다.</li>
</ul>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, 양의 정수 N을 포함하고 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스마다 문제 조건을 만족하는 양의 정수 X의 개수를 한 줄에 하나씩 출력한다. 만약, 조건을 만족하는 정수의 개수가 무한대인 경우 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째&nbsp;테스트 케이스의 경우에는 12와 18, 두 번째 테스트 케이스의 경우에는 113<sup>112</sup>가 조건을 만족하는 정수이다.</p>

				</div>
				</div>','3
6
113
144
','2
1
-1
','MATH'),
                                                                                                                (203,'BAEKJOON','https://www.acmicpc.net/problem/1773',1773,'폭죽쇼','2초','128 MB',4,'<p>학생들은 3주가 지난 기념으로 매점에서 1월 1일이 지나 싸게 파는 폭죽을 사서 터뜨리고 있다.</p>

<p>폭죽쇼를 하는 동안 N명의 학생들이 폭죽을 터뜨린다. 그리고 이 N명의 학생은 각각 일정한 주기로 폭죽을 터뜨린다. 물론 이 주기는 학생들마다 같을 수도, 다를 수도 있다. 그리고 우리는 초 단위로 관찰을 하고, 폭죽 역시 초 단위로 터진다.</p>

<p>폭죽쇼가 끝날 때까지 얼마나 많은 시간동안 밤하늘에 폭죽이 터지는 것을 볼 수 있는지 궁금해 하는 조교를 도와주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 폭죽을 터뜨리는 학생의 수 N(1 ≤ N ≤ 100)과 폭죽쇼가 끝나는 시간 C(1 ≤ C ≤ 2,000,000)가 주어진다. 그 다음 N개의 줄에는 학생들이 폭죽을 터뜨리는 주기가 한 줄에 하나씩 주어진다. 주기는 1보다 크거나 같고, C보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>폭죽쇼가 시작되고 끝날 때까지 밤하늘에 폭죽을 볼 수 있는 총 시간을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<pre>                                    2
            1     2     1           1           1     2     1
0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20
            1     2     3           4           5     6     7</pre>

<p>위의 그림에서 1,2가 쓰여있는 4, 6, 8, 12, 16, 18, 20초에 폭죽이 밤 하늘에 터진다. 단 12초에는 두 폭죽이 동시에 하늘에 터지지만 한번으로 세는 것에 주의하자.</p>

				</div>
				</div>','2 20
4
6
','7
','MATH'),
                                                                                                                (237,'BAEKJOON','https://www.acmicpc.net/problem/1782',1782,'거울 숫자','1초','64 MB',16,'<p>디지털 화면에서 숫자(디지털 숫자)는 코레스코 콘도에 돌아다니는 엘리베이터에 나온 숫자처럼 쓴다.</p>

<p>어떤 디지털 숫자를 거울에 비춰봤을 때 그 숫자가 원래 숫자와 같으면 그 숫자를 거울 숫자라고 부른다. 0과 1과 8은 서로 대칭이고, 2와 5는 서로 거울에 비췄을 때 반대 숫자를 보여준다. 다른 숫자는 대칭으로 보여지지 않는다. 거울 숫자로 이루어진 수를 거울 수라고 한다.</p>

<p>예를 들어, 0, 101, 1521은 거울 수이다. 하지만, 1221이나 1010은 거울 수가 아니다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/26321504-5ba4-4a9e-9dc4-e04f8dc72a78/-/preview/"><img alt="" src="https://upload.acmicpc.net/001706ea-995d-4de4-8f97-98319b86f252/-/preview/"></p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/ec119bfa-8a56-4201-b1ed-1cf2d5549bf2/-/preview/"><img alt="" src="https://upload.acmicpc.net/f84092b9-9eb0-49f8-9e3f-8e4630cafa77/-/preview/"></p>

<p>두 수 A와 B가 들어오면, A와 B 사이에 있는 거울 수의 개수를 출력하는 프로그램을 작성하시오. A와 B도 포함한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 A와 B가 공백을 사이에 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 거울 숫자의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','0 100
','7
','MATH'),
                                                                                                                (207,'BAEKJOON','https://www.acmicpc.net/problem/1785',1785,'팀 사모예드의 신작','2초','128 MB',18,'<p><a href="https://store.steampowered.com/app/1372810/">팀파이트 매니저</a>를 만든&nbsp;<a href="https://team-samoyed.tistory.com/">팀 사모예드</a>에서 신작을 만들고 있다. 이번 게임은 지폐를 화폐로 사용하고,&nbsp;다음과 같은 규칙을 만족해야 한다.</p>

<ol>
	<li>지폐의 서로 다른 액면가는 K가지가 있다.</li>
	<li>액면가가 가장 작은 지폐의 액면가는 1원이다.</li>
	<li>i번째 지폐의 액면가는 i-1번째 지폐의 액면가의 2, 3, 4, 5 배 중 하나이다.</li>
</ol>

<p>이 게임을 시작할 때, 플레이어는 N원을 받고 시작하게 된다. 플레이어에게 지폐를 너무 많이 주면 리소스에 문제가 생길 수 있기 때문에, N원을 만드는 지폐의 개수를 최소로 하려고 한다. 두 정수 N과&nbsp;K가 주어진다.&nbsp;지폐 개수를 최소로 하는 액면가 구성을 찾고, 그 때 플레이어가 받게되는 지폐 개수의 최소값을 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 N과 K가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 N원을 만들 수 있는 최소 지폐의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1025
6
','2
','MATH'),
                                                                                                                (209,'BAEKJOON','https://www.acmicpc.net/problem/1788',1788,'피보나치 수의 확장','2초','128 MB',8,'<p>$$F(n) := \begin{cases}0 &amp; \text{if }n = 0\text{;} \\ 1 &amp; \text{if }n = 1\text{;} \\ F(n-1) + F(n-2) &amp; \text{if }n > 1\text{.} \end{cases}$$</p>

<p>수학에서, 피보나치 수는 위의 점화식과 같이 귀납적으로 정의되는 수열이다. 위의 식에서도 알 수 있듯이, 피보나치 수 F(n)은 0 이상의 n에 대해서만 정의된다.</p>

<p>하지만 피보나치 수 F(n)을 n이 음수인 경우로도 확장시킬 수 있다. 위의 식에서 n > 1인 경우에만 성립하는 F(n) = F(n-1) + F(n-2)를 n ≤ 1일 때도 성립되도록 정의하는 것이다. 예를 들어 n = 1일 때 F(1) = F(0) + F(-1)이 성립되어야 하므로, F(-1)은 1이 되어야 한다.</p>

<p>n이 주어졌을 때, 피보나치 수 F(n)을 구하는 프로그램을 작성하시오. n은 음수로 주어질 수도 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n이 주어진다. n은 절댓값이 1,000,000을 넘지 않는 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 F(n)이&nbsp;양수이면 1, 0이면 0, 음수이면 -1을 출력한다. 둘째 줄에는 F(n)의 절댓값을 출력한다. 이 수가 충분히 커질 수 있으므로, 절댓값을 1,000,000,000으로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','-2
','-1
1
','MATH'),
                                                                                                                (210,'BAEKJOON','https://www.acmicpc.net/problem/1789',1789,'수들의 합','2초','128 MB',6,'<p>서로 다른 N개의 자연수의 합이 S라고 한다. S를 알 때, 자연수 N의 최댓값은 얼마일까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수 S(1 ≤ S ≤ 4,294,967,295)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 자연수 N의 최댓값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','200
','19
','MATH'),
                                                                                                                (211,'BAEKJOON','https://www.acmicpc.net/problem/1790',1790,'수 이어 쓰기 2','2초','64 MB',11,'<p>1부터 N까지의 수를 이어서 쓰면 다음과 같이 새로운 하나의 수를 얻을 수 있다.</p>

<blockquote>
<p>1234567891011121314151617181920212223...</p>
</blockquote>

<p>이렇게 만들어진 새로운 수에서, 앞에서 k번째 자리 숫자가 어떤 숫자인지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(1 ≤ N ≤ 100,000,000)과,  k(1 ≤ k ≤ 1,000,000,000)가 주어진다. N과 k 사이에는 공백이 하나 이상 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 앞에서 k번째 자리 숫자를 출력한다. 수의 길이가 k보다 작아서 k번째 자리 숫자가 없는 경우는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','20 23
','6
','MATH'),
                                                                                                                (212,'BAEKJOON','https://www.acmicpc.net/problem/1792',1792,'공약수','2초','128 MB',21,'<p>세 개의 정수 a, b, d가 주어지면, 다음의 세 조건을 만족하는 자연수 순서쌍 (x, y)의 개수를 구하는 프로그램을 작성하시오.</p>

<ol>
	<li>1 ≤ x ≤ a</li>
	<li>1 ≤ y ≤ b</li>
	<li>x와 y의 최대공약수는 d이다.</li>
</ol>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>여러 개의 문제가 하나의 입력파일 내에 주어진다. 첫째 줄에 문제의 개수 n이 주어진다. 각각의 문제는 세 개의 정수 a, b, d로 이루어져 있다. 둘째 줄부터 한 줄에 한 문제씩, 문제를 나타내는 세 정수 a, b, d가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 문제의 답을 한 줄에 하나씩 출력하도록 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 문제의 경우, (2,2), (2,4), (4,2) 세 개의 순서쌍이 존재한다. 두 번째 문제의 경우 (3,3), (6,3) 두 개의 순서쌍이 존재한다.</p>

				</div>
				</div>','2
4 5 2
6 4 3
','3
2
','MATH'),
                                                                                                                (213,'BAEKJOON','https://www.acmicpc.net/problem/1807',1807,'척 노리스','1초','128 MB',14,'<p>길이가 무한대인 수열 A가 있다. A[N](N ≥ 1)은 N으로 시작하는 가장 작은 4의 배수이다. A[N]의 모든 자리수를 이어 붙이면 길이가 무한대인 문자열 S를 만들 수 있다. 척 노리스는 이 수열을 두 번이나 끝까지 써보았다.</p>

<p>S의 K번째 숫자를 구하는 프로그램을 작성하시오.</p>

<p>수열은 12, 20, 32, 4, 52, 60, ... 으로 시작하게 되며, S = "12203245260..."이 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있으며 양의 정수 K가 주어진다. (K ≤&nbsp;10<sup>15</sup>) 입력의 마지막 줄에는 0이 하나 주어진다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, S의 K번째 자리수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
7
15
0
','1
4
9
','MATH'),
                                                                                                                (216,'BAEKJOON','https://www.acmicpc.net/problem/1812',1812,'사탕','2초','128 MB',7,'<p>N(3≤N≤999, N은 홀수)명의 학생들이 원 모양으로 둘러앉아 있다. 각 학생들은 모두 몇 개의 사탕(≤100,000)을 가지고 있는데 그 개수는 사람마다 다를 수 있고, 사탕을 아예 가지고 있지 않을 수도 있다. 물론 사탕의 개수는 음이 아닌 정수이다.</p>

<p>편의상 학생들에게 번호를 매기는데, 반시계 방향으로 1번 학생, 2번 학생, …, N번 학생으로 번호를 매겼다. 1번 학생 오른쪽엔 2번 학생, 2번 학생 오른쪽엔 3번 학생이 앉아 있는 것이고, 마지막 N번 학생 오른쪽엔 1번 학생이 앉아 있게 된다.</p>

<p>우리는 인접한 두 학생이 가지고 있는 사탕의 수의 합을 안다. 즉 1번 학생과 2번 학생이 가지고 있는 사탕의 수의 합, 2번 학생과 3번 학생이 가지고 있는 사탕의 수의 합, …, N-1번 학생과 N번 학생이 가지고 있는 사탕의 수의 합, 마지막으로 N번 학생과 1번 학생의 가지고 있는 사탕의 수의 합을 안다. 이때, 각 학생이 가지고 있는 사탕의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(3 ≤ N ≤ 999, N은 홀수)이 주어진다. 둘째 줄부터 N개의 줄에 걸쳐 1번 학생과 2번 학생이 가지고 있는 사탕의 수의 합, 2번 학생과 3번 학생이 가지고 있는 사탕의 수의 합, …, N-1번 학생과 N번 학생이 가지고 있는 사탕의 수의 합, 마지막으로 N번 학생과 1번 학생의 가지고 있는 사탕의 수의 합이 순서대로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄부터 N개의 줄에 걸쳐 1번 학생이 가지고 있는 사탕의 수, 2번 학생이 가지고 있는 사탕의 수, …, N번 학생이 가지고 있는 사탕의 수를 순서대로 출력한다. 출력하는 수는 음이 아닌 정수들이어야 하며, 항상 답이 존재하는 경우만이 입력으로 주어진다고 가정해도 좋다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
5
7
6
','2
3
4
','MATH'),
                                                                                                                (214,'BAEKJOON','https://www.acmicpc.net/problem/1816',1816,'암호 키','2초','128 MB',5,'<p>현대 사회에서 통용되고 있는 많은 종류의 암호 시스템에서는, 매우 큰 소수의 곱으로 만들어진 수를 암호 키로 이용하는 경우가 많다. 현실적으로 매우 큰 수를 빠른 시간 내에 소인수분해하는 것은 어려운 일이기 때문이다.</p>

<p>물론 실제 생활에서는 수십만 또는 수백만 자리 이상의 매우 큰 소수가 활용되지만 그러한 소수를 구하는 것은 매우 어려운 일이므로, 우리는 좀 더 스케일이 작은 경우에 대해서만 생각해 보기로 하자. 1,000,000=10<sup>6</sup>보다 큰 소수이면 매우 큰 소수로 생각하는 것이다.</p>

<p>어떤 수 S가 주어지면, 이 수가 우리가 생각하는 스케일이 작은 경우에서 적절한 암호 키인지 아닌지를 구하는 프로그램을 작성하시오. 만일 S의 모든 소인수가 10<sup>6</sup>보다 크다면 그 수는 적절한 암호 키이고, 그렇지 않은 경우는 적절하지 못한 암호 키가 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 수의 개수 N ()이 주어진다. 둘째 줄부터 N개의 줄에 걸쳐 확인하고자 하는 수 S가 한 줄에 하나씩 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>N개의 줄에 걸쳐, 입력받은 수가 적절한 암호 키이면 YES, 아니면 NO를 순서대로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1000036000099
1500035500153
20000000000002
','YES
NO
NO
','MATH'),
                                                                                                                (235,'BAEKJOON','https://www.acmicpc.net/problem/1821',1821,'수들의 합 6','2초','128 MB',10,'<p>가장 윗줄에 1부터 N까지의 숫자가 한 개씩 적혀 있다. 그리고 둘째 줄부터 차례대로 파스칼의 삼각형처럼 위의 두개를 더한 값이 저장되게 된다. 예를 들어 N이 4 이고 가장 윗 줄에 3 1 2 4 가 있다고 했을 때, 다음과 같은 삼각형이 그려진다.</p>

<pre>3 1 2 4
 4 3 6
  7 9
   16</pre>

<p>N과 가장 밑에 있는 숫자가 주어져 있을 때 가장 윗줄에 있는 숫자를 구하는 프로그램을 작성하시오. 단, 답이 여러 가지가 나오는 경우에는 사전순으로 가장 앞에 오는 것을 출력하여야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두개의 정수 N(1 ≤ N ≤ 10)과 F가 주어진다. N은 가장 윗줄에 있는 숫자의 개수를 의미하며 F는 가장 밑에 줄에 있는 수로 1,000,000 이하인 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 삼각형에서 가장 위에 들어갈 N개의 숫자를 빈 칸을 사이에 두고 출력한다. 답이 존재하지 않는 경우는 입력으로 주어지지 않는다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 16
','3 1 2 4
','MATH'),
                                                                                                                (224,'BAEKJOON','https://www.acmicpc.net/problem/1829',1829,'사탕 항아리','2초','128 MB',17,'<p>N개의 항아리에 사탕이 들어 있다. 첫 번째 항아리에는 K개의 사탕, 두 번째 항아리에는 하나 많은 K+1개의 사탕이 들어 있다. 마찬가지로 항아리의 번호가 1만큼 커질 때마다 항아리에 들어 있는 사탕의 개수도 1개씩 증가하여, 마지막 N번째 항아리에는 K+N-1개의 사탕이 들어 있다.</p>

<p>사탕을 꺼내는 방법은 다음과 같다. 먼저 N개의 항아리 중에서 임의로 몇 개의 항아리를 고른다. 이렇게 고른 항아리에서 같은 개수의 사탕을 각각 꺼낸다. 물론 항아리에 들어 있는 사탕의 개수가 꺼내려는 사탕의 개수보다 작아서는 안 된다.</p>

<p>사탕을 좋아하는 순일이는 최대한 빨리 모든 사탕을 꺼내고 싶다. N과 K가 주어지면 주어진 방법을 가능한 적은 횟수로 사용하여 항아리에 들어 있는 모든 사탕을 꺼내는 방법을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(1 ≤ N ≤ 100,000)과 K(1 ≤ K ≤ 500,000)가 빈 칸을 사이에 두고 주어진다. 모든 항아리에는 순서대로 1번부터 N번까지 번호가 매겨져 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에는 방법을 사용한 최소 횟수 M을 출력한다. 이어서 사용한 방법에 대한 구체적인 정보를 다음과 같이 한 방법에 대해 두 줄씩 총 2×M개의 줄에 걸쳐 순서대로 출력한다. 각 정보는 다음과 같이 출력한다.</p>

<p>첫째 줄에는 선택한 항아리의 개수와 사탕 몇 개를 꺼낼 건지를 출력한다. 둘째 줄에는 선택한 항아리의 번호를 공백으로 구분하여 출력한다. 예를 들어, 1,3,4,5번 항아리에서 사탕 3개를 꺼낸다면</p>

<pre>4 3
1 3 4 5</pre>

<p>와 같이 출력하면 된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 3
','3
3 1
1 3 5
3 2
1 4 5
4 4
2 3 4 5
','MATH'),
                                                                                                                (217,'BAEKJOON','https://www.acmicpc.net/problem/1832',1832,'카우보이','2초','128 MB',19,'<p>N명의 카우보이가 있다. 그런데 1번 카우보이부터 N번 카우보이까지 차례로 총을 쏴 다른 사람을 맞추려 한다. (N번 사람이 총을 쏜 후에는 1번 사람이 총을 쏘게 될 것이다.) 총을 맞은 사람은 죽게 되어서 더 이상 총을 쏘지 못하게 된다. 이렇게 계속 반복을 하다가 1명이 남게 되면 그 사람이 승자가 된다고 한다.</p>

<p>그런데 N명의 사람들은 모두 총을 쏠 수 있는 능력이 다르기 때문에 총을 쏴서 다른 사람을 맞힐 수 있는 확률이 다르다. 그렇기 때문에 N명의 카우보이는 모두 이러한 확률을 이용하여서 자기가 이길 수 있는 전략을 짜서 자신이 총을 겨눌 사람을 정하게 된다.&nbsp;쏘아서 자신의 생존 확률이 가장 커지는 상대가 여러 명일 때, &nbsp;그 중 무작위로한 명을 쏜다.</p>

<p>N명의 사람들의 총을 쏘는 능력이 주어져 있을 때, 각각의 사람이 최후의 1인이 되는 확률을 구하는 프로그램을 작성하시오.</p>

<p>카우보이들은 투철한 직업관을 가지고 있기 때문에, 허공에 총을 쏠 때 자신의 생존 확률이 가장 높은 경우라도, 항상 다른 사람을 맞추기 위해 최선을 다할 것이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 카우보이의 수 N(2 ≤ N ≤ 13)이 주어지고 두 번째 줄에는 N개의 정수 P<sub>i</sub>&nbsp;(1 ≤ P<sub>i</sub> ≤ 100)가 주어진다. P<sub>i</sub>는 i번째 사람이 총을 쏴서 다른 사람을 맞추는 확률을 의미한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 N개의 소수 Q<sub>i</sub> 를 출력한다 Q<sub>i</sub>는 i번째 사람이 최후의 1인이 될 확률을 의미한다. 절대/상대 오차는 10<sup>-2</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1 100
','1.00 99.00
','MATH'),
                                                                                                                (220,'BAEKJOON','https://www.acmicpc.net/problem/1834',1834,'나머지와 몫이 같은 수','2초','256 MB',5,'<p>N으로 나누었을 때 나머지와 몫이 같은 모든 자연수의 합을 구하는 프로그램을 작성하시오. 예를 들어 N=3일 때, 나머지와 몫이 모두 같은 자연수는 4와 8 두 개가 있으므로, 그 합은 12이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 2,000,000 이하의 자연수 N이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 줄에 구하고자 하는 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
','12
','MATH'),
                                                                                                                (218,'BAEKJOON','https://www.acmicpc.net/problem/1837',1837,'암호제작','2초','256 MB',3,'<p><img alt="" src="/JudgeOnline/upload/201006/Screen shot 2010-06-11 at 4_48_42 PM.png" style="float:right; height:244px; width:291px">원룡이는 한 컴퓨터 보안 회사에서 일을 하고 있다. 그러던 도중, 원룡이는 YESWOA.COM 으로부터 홈페이지 유저들의 비밀키를 만들라는 지시를 받았다. 원룡이는 비밀 키를 다음과 같은 방법으로 만들었다.</p>

<p>개인마다 어떤 특정한 소수 p와 q를 주어 두 소수의 곱 pq를 비밀 키로 두었다. 이렇게 해 주면 두 소수 p,q를 알지 못하는 이상, 비밀 키를 알 수 없다는 장점을 가지고 있다.</p>

<p>하지만 원룡이는 한 가지 사실을 잊고 말았다. 최근 컴퓨터 기술이 발달함에 따라, 소수가 작은 경우에는 컴퓨터로 모든 경우의 수를 돌려보아 비밀 키를 쉽게 알 수 있다는 것이다.</p>

<p>원룡이는 주성조교님께 비밀 키를 제출하려던 바로 직전에 이 사실을 알아냈다. 그래서 두 소수 p, q 중 하나라도 K보다 작은 암호는 좋지 않은 암호로 간주하여 제출하지 않기로 하였다. 이것을 손으로 직접 구해보는 일은 매우 힘들 것이다. 당신은 원룡이를 도와 두 소수의 곱으로 이루어진 암호와 K가 주어져 있을 때, 그 암호가 좋은 암호인지 좋지 않은 암호인지 구하는 프로그램을 작성하여야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>암호 P(4 ≤ P ≤ 10<sup>100</sup>)와 K (2 ≤ K ≤ 10<sup>6</sup>) 이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>만약에 그 암호가 좋은 암호이면 첫째 줄에 GOOD을 출력하고, 만약에 좋지 않은 암호이면 BAD와 소수 r을&nbsp;공백으로 구분하여 출력하는데 r은&nbsp;암호를 이루는 두 소수&nbsp;중 작은 소수를 의미한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','143 10
','GOOD
','MATH'),
                                                                                                                (221,'BAEKJOON','https://www.acmicpc.net/problem/1843',1843,'방정식','2초','128 MB',13,'<p>X + Y = Z (단, X ≤ Y)</p>

<p>우리는 세 자연수 X, Y, Z로 이루어진 위와 같은 방정식의 해의 개수를 알고 싶다. 만일 제약 조건이 없다면 방정식의 해는 무수히 많아질 수 있기 때문에, 아래와 같은 제약 조건이 있을 때 해의 개수를 각각 구하려고 한다. 모든 제약 조건이 동시에 적용되는 것은 아니고, 각각의 경우에 해의 개수를 따로 구하면 된다.</p>

<ul>
	<li>제약 조건 A: 세 자연수 X, Y, Z는 모두 N 이하이며, 서로 다르다.</li>
	<li>제약 조건 B: 세 자연수 X, Y, Z는 모두 N의 양의 약수이다.</li>
	<li>제약 조건 C: 세 자연수 X, Y, Z는 모두 N 이하의 양의 소수이다.</li>
</ul>

<p>예를 들어 N=6일 때, 각각의 제약 조건이 있을 때의 해를 모두 구하면 다음과 같다.</p>

<ul>
	<li>제약 조건 A:&nbsp;1+2=3, 1+3=4, 1+4=5,1+5=6, 2+3=5, 2+4=6 (6개)</li>
	<li>제약 조건 B: 1+1=2, 1+2=3, 3+3=6 (3개)</li>
	<li>제약 조건 C: 2+3=5 (1개)</li>
</ul>

<p>제약 조건 A, B, C에 대해 주어진 방정식의 해의 개수를 각각 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수 N(1 ≤ N ≤ 500,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 제약 조건 A가 있을 때 방정식의 해의 개수를 출력한다. 둘째 줄에 제약 조건 B가 있을 때 방정식의 해의 개수를 출력한다. 셋째 줄에 제약 조건 C가 있을 때 방정식의 해의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
','6
3
1
','MATH'),
                                                                                                                (219,'BAEKJOON','https://www.acmicpc.net/problem/1845',1845,'배열 회전','10초','128 MB',30,'<p>1부터 N까지의 자연수가 차례로 적혀 있는 배열이 있다. 아래의 배열은 N=6인 경우의 예이다.</p>

<table class="table table-bordered table-center-30 td-center">
	<tbody>
		<tr>
			<td style="width:5%">1</td>
			<td style="width:5%">2</td>
			<td style="width:5%">3</td>
			<td style="width:5%">4</td>
			<td style="width:5%">5</td>
			<td style="width:5%">6</td>
		</tr>
	</tbody>
</table>

<p>이러한 배열에서 임의의 구간 (a, b)를 잡아, 그 구간에 포함되는 수들을 회전시킬 수 있다. 회전을 하게 되면 a번째 칸부터 b번째 칸까지 적혀 있는 수의 순서가 뒤집히고, 부호 또한 바뀌게 된다. (1 ≤ a ≤ b ≤ N) 예를 들어 위의 배열에서 (1, 4)에서 회전을 수행한 결과는 아래와 같이 된다.</p>

<table class="table table-bordered table-center-30 td-center">
	<tbody>
		<tr>
			<td style="width:5%">-4</td>
			<td style="width:5%">-3</td>
			<td style="width:5%">-2</td>
			<td style="width:5%">-1</td>
			<td style="width:5%">5</td>
			<td style="width:5%">6</td>
		</tr>
	</tbody>
</table>

<p>이미 회전을 수행한 배열에 대해서도 물론 계속 회전을 수행할 수 있다. 다시 (3, 5)에서 회전을 수행하면 최종 배열 상태는 아래와 같이 된다.</p>

<table class="table table-bordered table-center-30 td-center">
	<tbody>
		<tr>
			<td style="width:5%">-4</td>
			<td style="width:5%">-3</td>
			<td style="width:5%">-5</td>
			<td style="width:5%">1</td>
			<td style="width:5%">2</td>
			<td style="width:5%">6</td>
		</tr>
	</tbody>
</table>

<p>초기 배열에는 1부터 N까지의 자연수가 차례로 적혀 있다. 최종 배열 상태가 주어졌을 때 가급적 적은 횟수의 회전 연산을 수행하여 초기 배열에서 최종 배열을 만드는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 배열의 크기 N(1 ≤ N ≤ 250)이 주어진다. 둘째 줄에는 최종 배열 상태가 빈 칸을 사이에 두고 순서대로 주어진다. 주어지는 수열에는 절댓값이 1 이상 N 이하인 수들이 모두 한 번씩 등장한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 줄에 회전 연산의 사용 횟수 K를 출력한다. 이어서 K줄에 걸쳐 연산을 사용한 순서대로 회전 연산을 사용한 구간 (a, b)를 나타내는 두 정수 a와 b를 빈 칸을 사이에 두고 출력한다. (1 ≤ a ≤ b ≤ N)</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
-4 -3 -5 1 2 6
','2
1 4
3 5
','MATH'),
                                                                                                                (222,'BAEKJOON','https://www.acmicpc.net/problem/1850',1850,'최대공약수','2초','256 MB',10,'<p>모든 자리가 1로만 이루어져있는 두 자연수 A와 B가 주어진다. 이때, A와 B의 최대 공약수를 구하는 프로그램을 작성하시오.</p>

<p>예를 들어, A가 111이고, B가 1111인 경우에 A와 B의 최대공약수는 1이고, A가 111이고, B가 111111인 경우에는 최대공약수가 111이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 자연수 A와 B를 이루는 1의 개수가 주어진다. 입력되는 수는 2<sup>63</sup>보다 작은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 A와 B의 최대공약수를 출력한다. 정답은 천만 자리를 넘지 않는다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 4
','1
','MATH'),
                                                                                                                (225,'BAEKJOON','https://www.acmicpc.net/problem/1853',1853,'정사영','2초','128 MB',21,'<p>3차원 공간에 입체도형이 있다. 이 입체도형은 볼록하며, xz평면과 yz평면에 수직으로 빛을 비췄을 때에 나오는 그림자가 볼록다각형 형태를 띤다. 즉, 입체도형의 두 평면에 대한 정사영이 볼록다각형이다. 예를 들어 밑의 그림과 같이 xz평면과 yz평면 위로의 정사영을 각각 P<sub>xz</sub>, P<sub>yz</sub>라 했을 때 각각이 볼록다각형임을 확인할 수 있다.</p>

<p style="text-align: center;"><img alt="" src="/JudgeOnline/upload/201006/Screen shot 2010-06-11 at 8_49_10 PM.png" style="height:181px; width:351px"></p>

<p>우리가 해야 할 일은 위와 같은 입체도형을 xz평면과 yz평면에 정사영시킨 형태가 주어졌을 때에 원본 입체도형을 복원해 그 부피를 구하는 것이다. 하지만 이 정보만으로 입체도형을 유일하게 복원할 수 없기 때문에 가능한 최대 부피를 구해야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 xz평면에 비친 정사영의 꼭짓점의 개수 N<sub>xz</sub> (3 ≤ N<sub>xz</sub> ≤ 1,000)가 주어진다. 그리고 두 번째 줄부터 N<sub>xz</sub>+1번째 줄까지 P<sub>xz</sub>의 꼭짓점의 좌표 x,z가 시계방향 순서로 공백을 사이에 두고 주어진다. 그리고 N<sub>xz</sub>+2번째 줄에는 yz평면에 비친 정사영의 꼭짓점의 개수 N<sub>yz</sub> (3 ≤ N<sub>yz</sub> ≤ 1,000)가 주어지고 마찬가지로 N<sub>xz</sub>+3번째 줄부터 N<sub>xz</sub>+N<sub>yz</sub>+2번째 줄까지 P<sub>yz</sub>의 꼭짓점 좌표 y, z가 시계방향 순서로 공백을 사이에 두고 주어진다.</p>

<p>주어지는 모든 좌표는 절댓값이 500이하이다. 또한 입력되는 두 다각형은 볼록다각형임이 보장되며, 두 다각형의 최소, 최대 z 좌표는 각각 동일하다. 각 다각형의 입력에서 인접한 두 점은 항상 다르지만, 한 변 위에 있는 세 개 이상의 점이 입력될 수는 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 원본 입체도형의 부피로 가능한 최댓값을 출력한다. 절대/상대 오차는 10<sup>-2</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1 0
1 -1
-1 0
-1 1
0 1
5
-1 1
0 1
1 1
1 -1
-1 -1
','5.00
','MATH'),
                                                                                                                (227,'BAEKJOON','https://www.acmicpc.net/problem/1858',1858,'기울기가 가장 큰 두 점','2초','128 MB',16,'<p>평면상에 N개의 서로 다른 점들이 주어져 있을 때, 그 중 임의의 두 점을 지나는 직선의 기울기의 절댓값이 가장 큰 두 점을 찾고 싶다. 두 점의 좌표가 (x1, y1), (x2, y2) 라고 할 때, 기울기의 절댓값은 다음과 같은 수식으로 표현된다.</p>

<p style="text-align: center;">| (y2-y1) / (x2-x1) |</p>

<p>모든 점의 x좌표는 다르다고 하자. 또한, 모든 점의 y좌표 역시 다르다고 하자.</p>

<p>점들의 좌표가 주어지면 임의의 두 점을 지나는 직선의 기울기의 절댓값이 가장 큰 두 점을 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 점의 개수 N(2 ≤ N ≤ 50,000)이 주어진다. 이어서 N개의 줄에 걸쳐 각 점의 x좌표와 y좌표가 빈 칸을 사이에 두고 주어진다. 좌표는 절댓값이 30,000을 넘지 않는 정수이다. 모든 점은 입력되는 순서대로 1번부터 N번까지 번호가 매겨진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>기울기의 절댓값이 가장 큰 두 점의 번호 A와 B를 빈 칸을 사이에 두고 출력한다. (A < B) 그러한 두 점의 쌍이 둘 이상인 경우 A가 가장 작은 것을 출력하고, 만일 A가 가장 작은 답도 여러 가지가 있으면 B가 가장 작은 것을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1 1
6 5
4 7
3 9
2 10
','1 5
','MATH'),
                                                                                                                (226,'BAEKJOON','https://www.acmicpc.net/problem/1862',1862,'미터계','0.5초','128 MB',7,'<p>수현이의 차에는 미터계가 있다. 그런데 이 미터계에는 문제가 있다. 숫자 4를 표시할 수가 없어서 3 다음에는 바로 5라는 숫자 체계를 갖고 있다는 것이다.&nbsp; 만약에 15339m에서 수현이의 차가 1m를 더 달린다면 15350m로 표시가 된다. (15340m의 4가 5로 바뀐 것이다.)</p>

<p>우리가 하여야 할 일은 다음과 같다. 수연이의 차에 있는 미터계에 있는 숫자가 주어져 있을 때 원래 수현이의 차가 달린 거리는 얼마인지 구하는 프로그램을 작성하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 미터계에 표시된 거리가 주어진다. 단, 이 거리는 정수이고, 1 이상 999,999,999 이하이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 원래 달린 거리를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','15
','13
','MATH'),
                                                                                                                (228,'BAEKJOON','https://www.acmicpc.net/problem/1864',1864,'문어 숫자','1초','128 MB',4,'<p>해류가 매우 느리고 바닥을 기어다니는 생물이 적은 바다 밑바닥에서만 발견되는 잔물결 무늬의 정체는 오랫동안 해양학자들에게 수수께끼였다. 하지만 최근의 연구 성과는 동물 언어학 분야에 일대 혁명을 불러왔다. 이 무늬의 정체는 바로 문어가 숫자를 적는 방법이라는 것이 해양 생물학자들에 의해 밝혀진 것이다. 학자들은 문어가 무엇을 세는 것인지는 아직 알 수 없지만, 수 표기법을 해독하는 데에는 성공했다.</p>

<p>뭍 위에 사는 이들에게는 문어가 쓰는 숫자와 그를 표현하는 잔물결 무늬가 매우 낯설 수밖에 없다. 따라서 연구자들은 다음과 같은 기호로 잔물결 무늬를 적기로 합의했다. 각 기호와 대응하는 숫자는 다음과 같다.</p>

<ul>
	<li>-는 0에 대응한다.</li>
	<li>\는 1에 대응한다.</li>
	<li>(는 2에 대응한다.</li>
	<li>@는 3에 대응한다.</li>
	<li>?는 4에 대응한다.</li>
	<li>>는 5에 대응한다.</li>
	<li>&amp;는 6에 대응한다.</li>
	<li>%는 7에 대응한다.</li>
	<li>/는 -1에 대응한다.</li>
</ul>

<p>해양 신경학자들은 특히 음수를 나타내는 기호가 있다는 사실에 흥분하면서, 아직 걸음마 단계인 두족류 신경학이 이 발견을 계기로 크게 발전하기를 기대하고 있다.</p>

<p>당연히 문어의 수 체계는 8진법에 기반한다. 예를 들면 다음과 같다.</p>

<p>(@&amp;는 2 × 8<sup>2</sup> + 3 × 8 + 6 = 158이다.</p>

<p>?/--는 4 × 8<sup>3</sup> + ?1 × 8<sup>2</sup> + 0 × 8 + 0 = 1984이다.<br>
/(\는 ?1 × 8<sup>2</sup> + 2 × 8 + 1 = ?47이다.</p>

<p>당신에게 주어진 문제는 문어 숫자를 입력 받아 십진수로 나타내는 것이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>한 줄에 하나씩 문어 숫자가 입력으로 주어진다. 각 숫자는 최소 한 개, 최대 여덟 개의 문어 숫자 기호로 이루어져있다. 입력으로 #이 들어오면 입력을 종료한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력 받은 문어 숫자에 대응하는 십진수를 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','(@&amp;
?/--
/(\
?
#
','158
1984
-47
4
','MATH'),
                                                                                                                (230,'BAEKJOON','https://www.acmicpc.net/problem/1876',1876,'튕기는 볼링공','1초','128 MB',9,'<p>상근이는 지름이 20cm인 볼링공을 폭이 105cm인 볼링 레인에 각도 X도로 레인의 중심에서 던졌다. (아래 그림을 참고)</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/bowling.png" style="height: 144.167px; width: 385.833px;"></p>

<p>레인은 범퍼가 장착되어 있어, 공이 범퍼에 닿으면, 입사각과 같은 각도로 튕기게 된다. 지름이 12cm 핀이 T 미터&nbsp;떨어진 곳에 놓여져 있다. 상근이가 던진 볼링공이 이 핀을 맞출 수 있는지 없는지를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 N이 주어진다. 다음 N개 줄에는 볼링공과 핀 사이의&nbsp;거리 T (16.0 ≤ T ≤ 18.0)와 공을 던진 각도 X (중심을 기준으로 계산, 10 ≤ X ≤ 80)가 주어진다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다, 볼링공이 핀을 맞추면 "yes"를, 아니면 "no"를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
18.00 80
16.39 16
','yes
no
','MATH'),
                                                                                                                (231,'BAEKJOON','https://www.acmicpc.net/problem/1877',1877,'끔찍한 수열','2초','128 MB',12,'<p>우리는 양의 정수들이 나열된 다음과 같은 끔찍한 수열 <a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>>을 구하는 두 개의 문제를 풀려고 한다. 수열 <a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>>의 길이는 수열에 포함된 정수의 수이다.</p>

<ul>
	<li>문제 A: 양의 정수 M이 주어질 때,&nbsp; 정수들의 합 a<sub>1</sub> + a<sub>2</sub> + ... + a<sub>n</sub> = M을 만족시키면서, 정수들의 곱 a<sub>1</sub> × a<sub>2</sub> × ... × a<sub>n</sub>의 값이 가장 크게 되는 끔찍한 수열 <a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>>을 구하시오. 단, 곱 a<sub>1</sub> × a<sub>2</sub> × ... × a<sub>n</sub>의 값이 가장 크게 되는 서로 다른 길이의 수열이 두 개 이상 존재할 경우, 수열의 길이 n이 최대인 것과 최소인 것을 모두 구한다.</li>
	<li>문제 B: 양의 정수 M이 주어질 때, 정수들의 곱 a<sub>1</sub> × a<sub>2</sub> × ... × a<sub>m</sub> = M을 만족시키면서, 정수들의 합 a<sub>1</sub> + a<sub>2</sub> + ... + a<sub>m</sub>의 값이 가장 작게 되는 끔찍한 수열&nbsp; <a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>m</sub>>을 구하시오. 단, 합 a<sub>1</sub> + a<sub>2</sub> + ... + a<sub>m</sub>의 값이 가장 작게 되는 서로 다른 길이의 수열이 두 개 이상 존재할 경우, 수열의 길이 m이 최대인 것과 최소인 것을 모두 구한다.</li>
</ul>

<p>문제 A에서 구한 수열의 최대/최소 길이 n과 문제 B에서 구한 수열의 최대/최소 길이 m을 출력하는 프로그램을 작성하시오.</p>

<p>예를 들어 M = 6이면, 문제 A에서 구한 수열은 <3, 3> 뿐이므로 이 수열의 최대/최소 길이는 2이고, 문제 B에서 구한 수열은 <2, 3>뿐이므로 이 수열의 최대/최소 길이는 2이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 이 주어진다. (1 ≤ M ≤ 1,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제 A에서 구한 수열의 최대/최소 길이 n과 문제 B에서 구한 수열의 최대/최소 길이 m을 나타내는 네 개의 정수를 빈칸을 사이에 두고 차례대로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
','2 2 2 2
','MATH'),
                                                                                                                (229,'BAEKJOON','https://www.acmicpc.net/problem/1882',1882,'분수 찾기','2초','128 MB',18,'<p>분모가 N 이하인 모든 기약분수 p/q 를 증가하는 순서대로 나열하려고 한다. (1 ≤ p < q ≤ N) 예를 들어 N=5인 경우, 아래와 같이 나열할 수 있다.</p>

<p>1/5, 1/4, 1/3, 2/5, 1/2, 3/5, 2/3, 3/4, 4/5</p>

<p>N이 주어졌을 때, 위와 같이 분수를 나열했을 때 K번째 분수를 구하는 프로그램을 작성하시오. 예를 들어 N=5이고 K=6인 경우 구하고자 하는 분수는 3/5가 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수 N과 K가 빈 칸을 사이에 두고 주어진다. (1 ≤ N ≤ 40,000) 분모가 N 이하인 모든 기약분수의 개수보다 K가 큰 경우는 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 K번째 분수가 p/q인 경우 p와 q를 빈 칸을 사이에 두고 출력한다. p와 q는 반드시 서로소여야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 6
','3 5','MATH'),
                                                                                                                (241,'BAEKJOON','https://www.acmicpc.net/problem/1891',1891,'사분면','2초','128 MB',12,'<p>하나의 좌표평면은 다음과 같이 네 개의 사분면으로 나뉜다.</p>

<p style="text-align: center;"><img alt="" src="/JudgeOnline/upload/201007/44.PNG" style="height: 289.167px; width: 340.833px;"></p>

<p>그러면, 각각의 사분면을 다시 사분면으로 나누어 번호를 붙여 보면 어떨까? 예를 들어 1번 사분면의 1번 사분면은 11번 사분면, 3번 사분면의 2번 사분면은 32번 사분면이라고 하면 좋지 않을까? 물론 한 번 더 나눠 볼 수도 있겠다. 3번 사분면의 4번 사분면의 1번 사분면은 341번 사분면이다.</p>

<p style="text-align: center;"><img alt="" src="/JudgeOnline/upload/201007/444.PNG" style="height: 297.5px; width: 335.833px;"></p>

<p>사분면의 번호 길이가 길어짐에 따라 각각의 사분면의 크기는 급격히 작아지며, 그 개수는 기하급수적으로 증가한다.</p>

<p>사분면에 번호를 붙이는 이러한 규칙을 상정하고서, 어떤 사분면 조각을 이동시켰을 때, 그 조각이 위치하게 되는 사분면의 번호가 궁금하다. 예를 들어, 341번 사분면을 오른쪽으로 두 번, 위쪽으로 한 번 이동시키면 424번 사분면에 온다.</p>

<p style="text-align: center;"><img alt="" src="/JudgeOnline/upload/201007/4444.PNG" style="height: 303.333px; width: 340px;"></p>

<p>하나의 사분면 조각을 이동시켰을 때, 그 조각이 도착한 사분면의 번호를 알아내는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 이동시키려는 사분면 조각 번호의 자릿수를 나타내는 정수 d와, 그 사분면 조각의 번호가 주어진다. (1 ≤ d ≤ 50) 둘째 줄에는 이동의 내용을 나타내는 두 정수가 x, y가 주어진다. (|x|, |y| ≤ 2<sup>50</sup>) 오른쪽으로 이동한 경우 x가 양수, 왼쪽으로 이동한 경우 음수이며, 그 절댓값은 오른쪽 왼쪽 방향 이동 횟수를 나타낸다. 위쪽으로 이동한 경우 y가 양수, 아래쪽으로 이동한 경우 음수이며, 역시 그 절댓값은 아래위 방향 이동 횟수를 나타낸다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 줄에 도착한 사분면의 번호를 출력한다. 만약, 존재하지 않는 사분면인 경우에는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 341
2 1
','424','MATH'),
                                                                                                                (236,'BAEKJOON','https://www.acmicpc.net/problem/1892',1892,'가위바위보','2초','128 MB',15,'<p>동주와 항승이가 가위바위보 게임을 하고 있다. N번의 가위바위보를 하는데, K번 먼저 이기는 사람이 게임에서 승리하게 된다. 동주를 꼭 이기고 싶어하는 항승이는 자신이 승리할 확률이 얼마나 되는지 궁금해졌다.</p>

<p>항승이가 가위바위보로 동주를 이길 확률을 구하는 프로그램을 작성하시오. 단, 두 사람 모두 가위, 바위, 보를 같은 확률로 낸다고 가정한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 N과 K가 빈 칸을 사이에 두고 주어진다. (1 ≤ K ≤ N ≤ 40)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>항승이가 이길 확률을 A/B로 나타낸다고 할 때, A와 B를 빈 칸을 사이에 두고 출력한다. A와 B는 서로소인 자연수여야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1
','1 3','MATH'),
                                                                                                                (234,'BAEKJOON','https://www.acmicpc.net/problem/1894',1894,'4번째 점','2초','128 MB',5,'<p>꿍은 지금 학생들에게 평행사변형에 대해 가르쳐주고 있는데 다음과 같은 문제를 내주고 있다. 여러분들도 함께 풀어 보아라.</p>

<p>문제 : 평행사변형의 인접한 두 변의 꼭짓점의 좌표들이 주어졌을 때, 나머지 하나의 점, 즉 4번째 점의 좌표를 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>각 줄은 8개의 실수로 이루어져 있는데 각각&nbsp;첫 번째 변의 양 끝점의 (x,y) 좌표와 두 번째 변의 양 끝점의 (x,y) 좌표로 구성되어 있다. 모든 좌표는 미터 단위이며 mm까지 나타내야 한다. 또한 모든 좌표값은 -10000~10000의 범위를 갖는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 입력에 대해 각 줄에&nbsp;네 번째 점의 좌표를 미터 단위로 mm까지 나타내어라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','0.000 0.000 0.000 1.000 0.000 1.000 1.000 1.000
1.000 0.000 3.500 3.500 3.500 3.500 0.000 1.000
1.866 0.000 3.127 3.543 3.127 3.543 1.412 3.145
','1.000 0.000
-2.500 -2.500
0.151 -0.398
','MATH'),
                                                                                                                (232,'BAEKJOON','https://www.acmicpc.net/problem/1908',1908,'곱셈 전개식','2초','128 MB',16,'<p>대수학에서 전개식을 구하는 것은 꽤나 지루한 작업 중의 하나이다. 자연수 n이 주어지면, 아래와 같은 곱셈식을 생각해 볼 수 있다.</p>

<p style="text-align: center;">(x+a<sub>1</sub>)(x+a<sub>2</sub>)...(x+a<sub>n-1</sub>)(x+a<sub>n</sub>)</p>

<p>예를 들어 n=2와 n=3인 경우, 위 식을 전개해 보면 아래와 같은 결과가 된다.</p>

<ul>
	<li>n=2: x<sup>2</sup>+x(a<sub>1</sub>+a<sub>2</sub>)+a<sub>1</sub>a<sub>2</sub></li>
	<li>n=3:&nbsp;x<sup>3</sup>+x<sup>2</sup>(a<sub>1</sub>+a<sub>2</sub>+a<sub>3</sub>)+x(a<sub>1</sub>a<sub>2</sub>+a<sub>1</sub>a<sub>3</sub>+a<sub>2</sub>a<sub>3</sub>)+a<sub>1</sub>a<sub>2</sub>a<sub>3</sub></li>
</ul>

<p>매번 곱셈 전개식을 구하는 번거로움을 덜기 위해, 당신은 n이 주어지면 이를 계산해 주는 프로그램을 작성하려고 한다. 하지만 텍스트로 수식을 출력하려면 위 첨자와 아래 첨자 때문에 아래와 같이 세 줄에 걸쳐서 출력해야 한다. (맨 위의 숫자가 적힌 줄은 길이를 나타내 주기 위함이다.)</p>

<pre>1234567890123456789012345678901234567890
&nbsp;3  2
x +x (a +a +a )+x(a a +a a +a a )+a a a
 &nbsp;     1  2  3     1 2  1 3  2 3   1 2 3
</pre>

<p>따라서 우리는 n=3일 때 곱셈 전개식의 길이가 40이 됨을 알 수 있다. 만일 n이 점점 커진다면, 곱셈 전개식의 길이는 어떻게 될까? 이를 구하는 프로그램을 작성하시오.</p>

<p>주의할 점은 출력할 때 불필요한 괄호가 포함되어서는 안 되고, x를 x<sup>1</sup>과 같이 표현해서는 안 된다는 것이다.</p>

<p>예를 들어 n=10일 때, 곱셈 전개식의 앞 부분은 아래와 같이 된다.</p>

<pre>123456789012345678901234567890123456789012345678
 10  9                                  8
x  +x (a +a +a +a +a +a +a +a +a +a  )+x (a a +
&nbsp;       1  2  3  4  5  6  7  8  9  10      1 2
</pre>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수 n이 주어진다. (1 ≤ n ≤ 1,000,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 식을 전개하였을 때의 길이를 출력한다. 단, 길이가 매우 길어질 수 있으므로 이를 10,000으로 나눈 나머지만을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
','16
','MATH'),
                                                                                                                (233,'BAEKJOON','https://www.acmicpc.net/problem/1910',1910,'위닝','2초','128 MB',21,'<p>어제 자유시간에 혼자 위닝을 하면서 자신의 실력을 자랑하던 주호는 강조교한테 편안하게 버스를 타고 말았다.</p>

<p>이에 화가 난 주호는 공부에 대한 생각도 잊은채 위닝을 연습하기로 결심하였다. 하지만 수업시간에 컴퓨터로 직접 하는것이 힘들었기 때문에 바깥에서 N개의 돌멩이로 전략을 세우기로 결심하였다.</p>

<p>주호는 연구한 끝에 자신의 가장 큰 약점은 패스라는 것을 깨달았다. 결국 적절하게 돌멩이를 배치한 다음 효율적으로 패스하는 법을 연구하기로 했는데….</p>

<p>N개의 돌멩이들이 있고&nbsp; 상호간에 패스가 가능한 쌍들이 있다. 즉 모든 쌍들 사이에 패스가 가능한 것이 아니다.</p>

<p>주호는 이 돌멩이들을 적절하게 공격 그룹과 수비 그룹의 두 그룹으로 나누고자 한다. 하지만 패스가 효율적으로 이루어지기 위해서는 각각의 돌멩이들에 대해, 자신과 같은 그룹에 속해 있으면서 패스가 가능한 돌멩이들의 수가 짝수가 되어야 한다. 결국 주호의 목적은 이 조건을 만족하는 총 돌멩이의 숫자가 최대 몇 개인지 알아내는 것이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 돌멩이의 개수 N(1 ≤ N ≤ 200)이 주어진다. 그 다음 i+1번째 줄에 i번째 돌멩이가 패스할 수 있는 돌멩이의 개수 L<sub>i</sub>가 들어온다. 그리고 그 다음 각각의 줄에 L<sub>i</sub>개의 패스 가능한 돌멩이에 해당하는 숫자가 들어온다. 단 각각의 돌멩이들이 자신에게 패스하는 경우는 없고, A 돌멩이가 B 돌멩이의 패스가 가능하다면 B도 A에게 패스가 가능하다고 하자.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 공격이나 수비 중 한쪽 그룹에 속한 돌멩이의 개수 M이 출력된다. 그리고 그 다음 줄에 그 그룹에 속한 돌멩이에 해당하는 숫자를 출력한다. 출력되지 않은 숫자는 반대편 그룹에 속하는 것으로 한다. 여러 가지 해가 존재하는 경우 그 중 하나만 출력하면 된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
3 2 3 4
2 1 3
4 2 1 4 5
2 1 3
1 3
','3
1 2 3
','MATH'),
                                                                                                                (239,'BAEKJOON','https://www.acmicpc.net/problem/1924',1924,'2007년','2초','128 MB',5,'<p>오늘은 2007년 1월 1일 월요일이다. 그렇다면 2007년 x월 y일은 무슨 요일일까? 이를 알아내는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 빈 칸을 사이에 두고 x(1 ≤ x ≤ 12)와 y(1 ≤ y ≤ 31)이 주어진다. 참고로 2007년에는 1, 3, 5, 7, 8, 10, 12월은 31일까지, 4, 6, 9, 11월은 30일까지, 2월은 28일까지 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 x월 y일이 무슨 요일인지에 따라 SUN, MON, TUE, WED, THU, FRI, SAT중 하나를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1
','MON
','MATH'),
                                                                                                                (238,'BAEKJOON','https://www.acmicpc.net/problem/1929',1929,'소수 구하기','2초','256 MB',8,'<p>M이상 N이하의 소수를 모두 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수 M과 N이 빈 칸을 사이에 두고 주어진다. (1 ≤ M ≤ N ≤ 1,000,000)&nbsp;M이상 N이하의 소수가 하나 이상 있는 입력만 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>한 줄에 하나씩, 증가하는 순서대로 소수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 16
','3
5
7
11
13
','MATH'),
                                                                                                                (242,'BAEKJOON','https://www.acmicpc.net/problem/1930',1930,'정사면체','2초','128 MB',12,'<p>두 정사면체가 있다. 각 면에는 어떤 색깔이 칠해져 있다. 색깔은 정수로 표시한다. 두 정사면체의 면에 어떤 색이 칠해져 있는지가 주어졌을 때, 두 정사면체가 같은 정사면체인지 판별하시오. 정사면체를 회전하였을 때 같아지는 경우도 같은 경우로 본다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 데이터의 개수 K(1 ≤ K ≤ 1,000)가 주어진다. 다음 K개의 줄에는 8개의 정수로 정사면체의 각 면의 색깔이 주어진다. 첫 수는 밑면의 색깔이고, 다음 수들은 옆면의 색이 시계방향으로 순서대로 주어진다. 한 정사면체에 대한 네 정수가 먼저 주어지고, 다른 정사면체에 대한 네 정수가 뒤따른다. 색은 60,000 이하의 자연수로 표현한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>K개의 줄에 결과를 출력한다. 같으면 1, 다르면 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 2 3 4 1 2 3 4
4 1 2 3 4 3 2 1
1 2 3 4 3 4 1 2
','1
0
1
','MATH'),
                                                                                                                (247,'BAEKJOON','https://www.acmicpc.net/problem/1934',1934,'최소공배수','1초','128 MB',5,'<p>두 자연수 A와 B에 대해서, A의 배수이면서 B의 배수인 자연수를 A와 B의 공배수라고 한다. 이런 공배수 중에서 가장 작은 수를 최소공배수라고 한다. 예를 들어, 6과 15의 공배수는 30, 60, 90등이 있으며, 최소 공배수는 30이다.</p>

<p>두 자연수 A와 B가 주어졌을 때, A와 B의 최소공배수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T(1 ≤ T ≤ 1,000)가 주어진다. 둘째 줄부터 T개의 줄에 걸쳐서 A와 B가 주어진다. (1 ≤ A, B ≤ 45,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄부터 T개의 줄에 A와 B의&nbsp;최소공배수를 입력받은 순서대로 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 45000
6 10
13 17
','45000
30
221
','MATH'),
                                                                                                                (248,'BAEKJOON','https://www.acmicpc.net/problem/1936',1936,'재미있는 수학 문제','2초','512 MB',24,'<p>$f(n, k)$는 집합 $[n]$에서&nbsp;모든 $k$-부분 집합을 구하고, 각 부분 집합에서 원소를 곱한 값을 모두 더한 값이다. 집합 $[n]$은 $1$보다 크거나 같고, $n$보다 작거나 같은 모든 자연수로 이루어진 집합이고, $k$-부분 집합은 크기가 $k$인 부분 집합이다. $f(n, k)$는 다음과 같은 수식으로 표현할 수 있다.</p>

<p>\[\sum_{S \subseteq [n], |S| = k}{\prod_{x \in S}{x}}\]</p>

<p>$f(n, 0) = 1$이다.</p>

<p>$f(n, k)$를 구하는 것은 지루하기 때문에, 재미있는 값을 구하려고 한다. 자연수 $n$과 소수 $p$가 주어졌을 때, $f(n, k)$가 $p$로 나누어 떨어지지 않는 $k$ $(0 \le k \le n)$의 개수를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 $n$과 소수 $p$가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>문제 조건을 만족하는 $k$의 개수를 $10^9+7$로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 2
','2
','MATH'),
                                                                                                                (246,'BAEKJOON','https://www.acmicpc.net/problem/1941',1941,'소문난 칠공주','2초','256 MB',13,'<p>총 25명의 여학생들로 이루어진 여학생반은 5×5의 정사각형 격자 형태로 자리가 배치되었고, 얼마 지나지 않아 이다솜과 임도연이라는 두 학생이 두각을 나타내며 다른 학생들을 휘어잡기 시작했다. 곧 모든 여학생이 ‘이다솜파’와 ‘임도연파’의 두 파로 갈라지게 되었으며, 얼마 지나지 않아 ‘임도연파’가 세력을 확장시키며 ‘이다솜파’를 위협하기 시작했다.</p>

<p>위기의식을 느낀 ‘이다솜파’의 학생들은 과감히 현재의 체제를 포기하고, ‘소문난 칠공주’를 결성하는 것이 유일한 생존 수단임을 깨달았다. ‘소문난 칠공주’는 다음과 같은 규칙을 만족해야 한다.</p>

<ol>
	<li>이름이 이름인 만큼, 7명의 여학생들로 구성되어야 한다.</li>
	<li>강한 결속력을 위해, 7명의 자리는 서로 가로나 세로로 반드시 인접해 있어야 한다.</li>
	<li>화합과 번영을 위해, 반드시 ‘이다솜파’의 학생들로만 구성될 필요는 없다.</li>
	<li>그러나 생존을 위해, ‘이다솜파’가 반드시 우위를 점해야 한다. 따라서 7명의 학생 중 ‘이다솜파’의 학생이 적어도 4명 이상은 반드시 포함되어 있어야 한다.</li>
</ol>

<p>여학생반의 자리 배치도가 주어졌을 때, ‘소문난 칠공주’를 결성할 수 있는 모든 경우의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>S(이다‘솜’파의 학생을 나타냄) 또는 Y(임도‘연’파의 학생을 나타냄)을 값으로 갖는 5*5 행렬이 공백 없이 첫째 줄부터 다섯 줄에 걸쳐 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 ‘소문난 칠공주’를 결성할 수 있는 모든 경우의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>가능한 방법은 아래와 같다.</p>

<pre>.....    .....
SYSYS    SYSYS
....Y    .Y...
....S    .S...
.....    .....
</pre>

				</div>
				</div>','YYYYY
SYSYS
YYYYY
YSYYS
YYYYY
','2
','MATH'),
                                                                                                                (245,'BAEKJOON','https://www.acmicpc.net/problem/1942',1942,'디지털시계','2초','128 MB',4,'<p><img width="212" height="135" alt="" src="/JudgeOnline/upload/201007/cc.png"></p>
<p>디지털시계는 일반적으로 시각을 “hh:mm:ss”의 형태로 표현한다. hh는 00 이상 23 이하의 값을, mm과 ss는 00 이상 59 이하의 값을 가질 수 있다. 이러한 형태의 시각에서 콜론(“:”)을 제거하면 “hhmmss”라는 정수를 얻을 수 있는데, 이러한 정수를 시계 정수라고 한다. 예를 들어, 오후 5시 5분 13초, 즉 17:05:13의 시계 정수는 170513이고, 오전 0시 7분 37초, 즉 00:07:37의 시계 정수는 737이다.</p>
<p>이 문제에서 시간이란 시각의 구간을 나타낸다. 예를 들어 [00:59:58, 01:01:24]와 같이 시작하는 시각과 끝나는 시각으로 이루어진 구간을 우리는 시간이라고 부른다. (이러한 구간에는 시작하는 시간과 끝나는 시간도 포함된다)</p>
<p>이렇게 시간이 구간으로 주어지면, 그 구간에 포함되는 시계 정수들을 나열할 수 있다. 예를 들어 [00:59:58, 01:01:24]에 포함되는 시계 정수는 5958, 5959, 다음으로 10000 이상 10059 이하, 마지막으로 10100 이상 10124 이하로 총 87개가 된다. 우리는 이처럼 특정한 시간에 포함되는 시계 정수들 중, 3의 배수인 것이 몇 개나 있는지를 알고 싶다.</p>
<p>시간은 자정을 포함할 수도 있다. 즉 [23:59:03, 00:01:24]처럼 시작하는 시각의 시계 정수(235903)가 끝나는 시각의 시계 정수(124)보다 클 수도 있다. 물론 이 경우 이 구간에 포함되는 시계 정수는 235903 이상 235959 이하, 0 이상 59 이하, 100 이상 124 이하가 된다. 모든 구간이 포함하는 시간은 만 하루, 즉 24시간보다는 항상 작다고 가정해도 좋다.</p>
<p>시간이 시작하는 시각과 끝나는 시각으로 주어졌을 때, 이 구간에 포함되는 시계 정수들 중, 3의 배수인 것의 개수를 구하는 프로그램을 작성하시오.</p>

					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>세 개의 입력이 주어진다. 첫째 줄부터 세 줄에 걸쳐 시작하는 시각과 끝나는 시각이 “hh:mm:ss”의 형태로 주어진다. 시작하는 시각과 끝나는 시각 사이에는 빈 칸이 하나 있어서, 한 줄마다 (빈 칸을 포함하여) 총 17글자가 입력으로 주어진다. 시작하는 시각과 끝나는 시각은 항상 다르다.</p>
					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄부터 세 개의 줄에 걸쳐 입력된 구간에 포함되는 시계 정수들 중, 3의 배수인 것의 개수를 출력한다. 입력된 순서대로 각 줄에 한 개씩 차례로 출력하면 된다.</p>
					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','00:59:58 01:01:24
22:47:03 01:03:24
00:00:09 00:03:37','29
2727
70','MATH'),
                                                                                                                (249,'BAEKJOON','https://www.acmicpc.net/problem/1947',1947,'선물 전달','2초','128 MB',13,'<p>이번 ACM-ICPC 대회에 참가한 모든 사람들은 선물을&nbsp;하나씩 준비했다.</p>

<p>대회가 끝나고 난 후에 각자 선물을 전달하려고 할 때, 선물을 나누는 경우의 수를 구하는 프로그램을 작성하시오.</p>

<p>모든 사람은 선물을 하나씩 받으며, 자기의 선물을 자기가 받는 경우는 없다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 ACM-ICPC 대회에 참가한 학생의 수 N(1 ≤ N ≤ 1,000,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>경우의 수를 1,000,000,000으로 나눈 나머지를 첫째 줄에 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
','44
','MATH'),
                                                                                                                (250,'BAEKJOON','https://www.acmicpc.net/problem/1951',1951,'활자','2초','128 MB',8,'<p>옛날에는 책을 만들 때, 한글자 한글자를 나눠서 활자를 만들어서 그걸 합쳐서 책을 만들었다고 한다. 예를 들면 가나다라는 글씨를 쓰기 위해서는 3개의 활자가 필요할 것이다. 그렇다고 할 때, N이하의 자연수를 활자로 표현하기 위해서는 몇 개의 활자가 필요한지 구하여라.&nbsp; 예를 들어 10이하의 자연수를 활자로 표현하려면&nbsp;1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 0 이렇게 11개의 활자가 필요할 것이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(1 ≤ N ≤ 2,000,000,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 필요한 활자의 수를 1234567로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10
','11
','MATH'),
                                                                                                                (243,'BAEKJOON','https://www.acmicpc.net/problem/1952',1952,'달팽이2','2초','128 MB',5,'<p>M줄 N칸으로 되어 있는 표 위에, 달팽이 모양으로 선을 그리려고 한다.</p>

<table class="table table-bordered" style="width:9%">
	<tbody>
		<tr>
			<td style="width:3%">ㅇ</td>
			<td style="width:3%">&nbsp;</td>
			<td style="width:3%">&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>

<p>위의 그림은 M=5, N=3의 예이다. 이제 표의 왼쪽 위 칸(ㅇ)에서 시작하여, 오른쪽으로 선을 그려 나간다. 표의 바깥 또는 이미 그려진 칸에 닿아서 더 이상 이동할 수 없게 되면, 시계방향으로 선을 꺾어서 그려나간다.</p>

<table class="table table-bordered" style="width:9%">
	<tbody>
		<tr>
			<td style="width:3%">ㅇ</td>
			<td style="width:3%">→</td>
			<td style="width:3%">↘</td>
		</tr>
		<tr>
			<td>↗</td>
			<td>↘</td>
			<td>↓</td>
		</tr>
		<tr>
			<td>↑</td>
			<td>↓</td>
			<td>↓</td>
		</tr>
		<tr>
			<td>↑</td>
			<td>끝</td>
			<td>↓</td>
		</tr>
		<tr>
			<td>↖</td>
			<td>←</td>
			<td>↙</td>
		</tr>
	</tbody>
</table>

<p>위의 표는 선을 그려 나간 모양을 나타낸 것이다. 선이 꺾어진 부분은 대각선으로 나타내었다. 표의 모든 칸이 채워질 때까지, 선을 몇 번 꺾게 될까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 M과 N이 빈 칸을 사이에 두고 주어진다. (2 ≤ M, N ≤ 100)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 표의 모든 칸이 채워질 때까지 선이 꺾어지는 횟수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 3
','5
','MATH'),
                                                                                                                (240,'BAEKJOON','https://www.acmicpc.net/problem/1957',1957,'앉았다 일어나기','10초','128 MB',20,'<p>이번 겨울 캠프에서 N(1 ≤ N ≤ 1,000,000)명의 학생들이 무더기로 인터넷을 하다 걸렸다. 이에 격분한 김조교는 학생들을 일렬로 세우고, 다음과 같은 벌칙을 실시하도록 하였다.</p>

<ol>
	<li>먼저 처음의 상태는 학생들이 임의로 정할 수 있다. 학생들은 앉아 있을 수도 있으며, 일어나 있을 수도 있다. 이때의 상태를 임의로 0번째 단계라고 하자.</li>
	<li>이 벌칙에는 단계가 있는데, 다음 단계로 넘어갈 때에는 자신의 오른쪽 학생의 상태에 따라 자신의 상태를 결정해야 한다. 만일 이번 단계에 오른쪽 학생이 일어서 있으면 자신은 다음 턴에 상태를 바꾸어야 한다. 즉 일어나 있었으면 앉아야 하고, 앉아 있었으면 일어나야 한다. 만일 이번 턴에 오른쪽 학생이 앉아 있으면 자신은 다음 턴에 상태를 바꿀 필요 없이 그대로 있어도 된다. (바꾸면 안 된다)</li>
	<li>학생의 번호는 편의상 왼쪽부터 오른쪽으로 1부터 N까지 매겨진다. T LOGIN을 제공하여 학생들이 인터넷을 할 수 있도록 해 준 N번 학생은 특별히 가장 어려운데, 자신의 오른쪽 학생이 없지만 1번 학생을 자신의 오른쪽 학생으로 생각하고 벌칙을 받아야 한다.</li>
</ol>

<p>예를 들어 N=4이고, 처음에 4번 학생만 일어나 있다고 하자. 이 벌칙이 몇 번 진행된 상태는 다음과 같다. 약삭빠른 학생들은 어이없게도 순식간에 머리를 굴려서, 4단계 이후 모두가 쉴 수 있는 다음과 같은 초기 상태를 정하고야 말았다.</p>

<table class="table table-bordered table-center-50">
	<tbody>
		<tr>
			<td>&nbsp;</td>
			<td>학생 1</td>
			<td>학생 2</td>
			<td>학생 3</td>
			<td>학생 4</td>
		</tr>
		<tr>
			<td>0단계</td>
			<td>앉음</td>
			<td>앉음</td>
			<td>앉음</td>
			<td>일어남</td>
		</tr>
		<tr>
			<td>1단계</td>
			<td>앉음</td>
			<td>앉음</td>
			<td><span style="color:#ff0000">일어남</span></td>
			<td>일어남</td>
		</tr>
		<tr>
			<td>2단계</td>
			<td>앉음</td>
			<td>일어남</td>
			<td>앉음</td>
			<td>일어남</td>
		</tr>
		<tr>
			<td>3단계</td>
			<td>일어남</td>
			<td>일어남</td>
			<td>일어남</td>
			<td>일어남</td>
		</tr>
		<tr>
			<td>4단계</td>
			<td>앉음</td>
			<td>앉음</td>
			<td>앉음</td>
			<td>앉음</td>
		</tr>
		<tr>
			<td colspan="5">허걱...</td>
		</tr>
	</tbody>
</table>

<p>학생들이 뉘우치지는 않고 어떡하면 벌칙을 덜 받을 수 있을까만을 궁리하는 모습에 격분한 김조교는 학생들에게 이 벌칙을 무려 M(1 ≤ M ≤ 1,000,000,000)단계까지 반복하도록 하고, 휭 나가버렸다. 김 조교는 곧 돌아올텐데, M번째 단계에 학생들은 어떤 모습을 하고 있어야 할까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 M이 빈칸을 사이에 두고 주어진다. 둘째 줄에는 학생들의 0단계 상태가 빈 칸 없이 N개의 문자열로 주어진다. 1번 학생부터 N번 학생까지의 상태를 순서대로 나타낸 것으로, u는 일어난 상태, d는 앉은 상태를 나타낸다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 M번째 단계에 학생들의 상태를 입력과 마찬가지 형식으로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 1000000000
dddu
','dddd
','MATH'),
                                                                                                                (223,'BAEKJOON','https://www.acmicpc.net/problem/1959',1959,'달팽이3','2초','128 MB',13,'<p>M줄 N칸으로 되어 있는 표 위에, 달팽이 모양으로 선을 그리려고 한다.</p>

<table class="table table-bordered" style="width:9%">
	<tbody>
		<tr>
			<td style="width:3%">ㅇ</td>
			<td style="width:3%">&nbsp;</td>
			<td style="width:3%">&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>

<p>위의 그림은 M=5, N=3의 예이다. 이제 표의 왼쪽 위 칸(○)에서 시작하여, 오른쪽으로 선을 그려 나간다. 표의 바깥 또는 이미 그려진 칸에 닿아서 더 이상 이동할 수 없게 되면, 시계방향으로 선을 꺾어서 그려나간다.</p>

<table class="table table-bordered" style="width:9%">
	<tbody>
		<tr>
			<td style="width:3%">ㅇ</td>
			<td style="width:3%">→</td>
			<td style="width:3%">↘</td>
		</tr>
		<tr>
			<td>↗</td>
			<td>↘</td>
			<td>↓</td>
		</tr>
		<tr>
			<td>↑</td>
			<td>↓</td>
			<td>↓</td>
		</tr>
		<tr>
			<td>↑</td>
			<td>끝</td>
			<td>↓</td>
		</tr>
		<tr>
			<td>↖</td>
			<td>←</td>
			<td>↙</td>
		</tr>
	</tbody>
</table>

<p>위의 표는 선을 그려 나간 모양을 나타낸 것이다. 선이 꺾어진 부분은 대각선으로 나타내었다.&nbsp; 표의 모든 칸이 채워질 때까지 선을 몇 번 꺾게 될까? 또, 어디에서 끝나게 될까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 M과 N이 빈 칸을 사이에 두고 주어진다. (2 ≤ M, N ≤ 2,100,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 표의 모든 칸이 채워질 때까지 선이 꺾어지는 횟수를 출력한다. 둘째 줄에 끝나는 점의 좌표를 출력한다. 왼쪽 위 칸의 좌표를 (1, 1), 오른쪽 아래 칸의 좌표를 (M, N)이라고 하자.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 3
','5
4 2
','MATH'),
                                                                                                                (208,'BAEKJOON','https://www.acmicpc.net/problem/1962',1962,'한글 ㄴㄴ 수','2초','512 MB',17,'<p>세종대왕이 펴낸 훈민정음해례본은 <strong>1962년</strong>에 국보 70호로 지정되었다. 한글의 우수성을 널리 알리고 세종대왕이 이 훈민정음을 창제하여 반포한 사실을 기념하기 위한 목적으로, 한글이 반포된 날을 기념일로 매년 <strong>10월 9일</strong>을 국경일(<strong>한글날</strong>)로 지정하였다.</p>

<p>한글날을 기념하기 위해 수를 한글로 적어보자. $1$부터 $10^{52} - 1$까지의 수를 한글로 적을 때에는 일반적인 수의 한글 표기를 따른다. 다만 표기가 상황마다 다를 수 있으므로 통일을 위해 이 문제에서는 기존 한글 표기를 아래의 문법에 맞추어 적는다.</p>

<pre><기수 1> = 일 | 이 | 삼 | 사 | 오 | 육 | 칠 | 팔 | 구
<기수 2> = 십 | 백 | 천
<기수 3> = 만 | 억 | 조 | 경 | 해 | 자 | 양 | 구 | 간 | 정 | 재 | 극
<기수 4> = <기수 1> | <기수 1> <기수 2> | <기수 1> <기수 2> <기수 4>
<수의 한글 표기> = <기수 4> | <기수 4> <기수 3> | <기수 4> <기수 3> <수의 한글 표기>
</pre>

<p>예를 들어 $1234\,5678\,9099\,8808\,7770\,0666\,0055\,4004\,3300\, 0002\,1000\,0000\,1962$는 "일천이백삼십사<span style="color:#e74c3c;"><strong>극</strong></span>오천육백칠십팔<span style="color:#e74c3c;"><strong>재</strong></span>구천구십구<span style="color:#e74c3c;"><strong>정</strong></span>팔천팔백팔<span style="color:#e74c3c;"><strong>간</strong></span>칠천칠백칠십<span style="color:#e74c3c;"><strong>구</strong></span>육백육십육<span style="color:#e74c3c;"><strong>양</strong></span>오십오<span style="color:#e74c3c;"><strong>자</strong></span>사천사<span style="color:#e74c3c;"><strong>해</strong></span>삼천삼백<span style="color:#e74c3c;"><strong>경</strong></span>이<span style="color:#e74c3c;"><strong>조</strong></span>일천<span style="color:#e74c3c;"><strong>억</strong></span>일천구백육십이"라고 쓰고, $21\,4748\,3647$는 "이십일<span style="color:#e74c3c;"><strong>억</strong></span>사천칠백사십팔<span style="color:#e74c3c;"><strong>만</strong></span>삼천육백사십칠"이라 쓴다.</p>

<p>우리 세계에서는 한글의 자음과 모음이 모두 존재하기에 위의 규칙을 따른다. 이제 일부 자음과 모음이 없는 다른 평행 세계를 상상해 보자. ㅇ (이응)이 없는 세계에서는 우리 세계의 수의 한글 표기로 ㅇ가 있다면, 그 수는 존재하지 않는 수로 취급한다. 따라서 $1$(일), $2$(이)가 아닌 $3$(삼)이 첫 번째 양의 정수이다.</p>

<p>우리 세계에는 <span style="color:#3498db;"><strong>항하사</strong></span>, <span style="color:#3498db;"><strong>아승기</strong></span>, <span style="color:#3498db;"><strong>나유타</strong></span>, <span style="color:#3498db;"><strong>불가사의</strong></span>, <span style="color:#3498db;"><strong>무량대수</strong></span>와 같이 더 큰 수를 표현하는 단위가 존재하지만, 이 문제에서는 사용하지 않는다. 따라서 만약 수가 매우 커서 문제에서 통일한 한글 표기 문법으로 적을 수 없다면, 그 수 또한 존재하지 않는 수이다.</p>

<p>일부 자음과 모음이 없는 다른 평행 세계에서의 $N$번째 양의 정수를 우리 세계의 아라비아 숫자로 출력해 보자.</p>


<div class="headline">
<h2>입력</h2>
</div>
<div id="problem_input" class="problem-text">
<p>총 $T$개의 테스트 케이스가 입력으로 주어지며, 첫 번째 줄에 $T$가 주어진다. $(1 \le T \le 1\,000)$</p>

<p>테스트 케이스의 첫 번째 줄에 양의 정수 $N$과 평행 세계에서 존재하지 않는 자음과 모음의 개수 $M$이 공백으로 구분되어 주어진다. $(1 \le N \le 10^{52} - 1$; $1 \le M \le 21)$</p>

<p>테스트 케이스의 두 번째 줄에는 평행 세계에서 존재하지 않는 자음과 모음이 중복 없이 공백으로 구분되어 주어진다. 자음은 <code><span style="color:#e74c3c;">ㄱ</span></code>, <code><span style="color:#e74c3c;">ㄴ</span></code>, <code><span style="color:#e74c3c;">ㄹ</span></code>, <code><span style="color:#e74c3c;">ㅁ</span></code>, <code><span style="color:#e74c3c;">ㅂ</span></code>, <code><span style="color:#e74c3c;">ㅅ</span></code>, <code><span style="color:#e74c3c;">ㅇ</span></code>, <code><span style="color:#e74c3c;">ㅈ</span></code>, <code><span style="color:#e74c3c;">ㅊ</span></code>, <code><span style="color:#e74c3c;">ㅍ</span></code>, <code><span style="color:#e74c3c;">ㅎ</span></code>로 $11$개 중에서만 주어진다. 모음은 <code><span style="color:#e74c3c;">ㅏ</span></code>, <code><span style="color:#e74c3c;">ㅐ</span></code>, <code><span style="color:#e74c3c;">ㅑ</span></code>, <code><span style="color:#e74c3c;">ㅓ</span></code>, <code><span style="color:#e74c3c;">ㅕ</span></code> <code><span style="color:#e74c3c;">ㅗ</span></code>, <code><span style="color:#e74c3c;">ㅜ</span></code>, <code><span style="color:#e74c3c;">ㅠ</span></code>, <code><span style="color:#e74c3c;">ㅡ</span></code>, <code><span style="color:#e74c3c;">ㅣ</span></code>로 $10$개 중에서만 주어진다.</p>

<p>주어지는 모든 입력은 UTF-8로 인코딩되어 주어진다.</p>

</div>

<div class="headline">
<h2>출력</h2>
</div>
<div id="problem_output" class="problem-text">
<p>각 줄에 각 테스트 케이스마다 평행 세계에서의 $N$번째 양의 정수가</p>

<ul>
<li>존재한다면 우리 세계의 아라비아 숫자로 출력한다.</li>
<li>존재하지 않는다면 <code><span style="color:#e74c3c;">-1</span></code>을 출력한다.</li>
</ul>

</div>

<div class="headline">
<h2>힌트</h2>
</div>
<div id="problem_hint" class="problem-text">

</div>
</div>','5
1 1
ㅇ
7 1
ㄹ
4 2
ㅣ ㅏ
1000 3
ㅅ ㅣ ㄱ
10 6
ㅜ ㅣ ㅇ ㅠ ㅗ ㅏ
','3
20
500
500005000000050000005
-1
','MATH'),
                                                                                                                (260,'BAEKJOON','https://www.acmicpc.net/problem/1963',1963,'소수 경로','2초','256 MB',12,'<p>소수를&nbsp;유난히도 좋아하는 창영이는 게임 아이디 비밀번호를 4자리 ‘소수’로 정해놓았다. 어느 날 창영이는 친한 친구와 대화를 나누었는데:</p>

<ul>
	<li>“이제 슬슬 비번 바꿀 때도 됐잖아”</li>
	<li>“응 지금은 1033으로 해놨는데... 다음 소수를 무엇으로 할지 고민중이야"</li>
	<li>“그럼 8179로 해”</li>
	<li>“흠... 생각 좀 해볼게. 이 게임은 좀 이상해서 비밀번호를 한 번에 한 자리 밖에 못 바꾼단 말이야. 예를 들어 내가 첫 자리만 바꾸면 8033이 되니까 소수가 아니잖아. 여러 단계를 거쳐야 만들 수 있을 것 같은데... 예를 들면... 1033 1733 3733 3739 3779 8779 8179처럼 말이야.”</li>
	<li>“흠...역시 소수에 미쳤군. 그럼 아예 프로그램을 짜지 그래. 네 자리 소수 두 개를 입력받아서 바꾸는데 몇 단계나 필요한지 계산하게 말야.”</li>
	<li>“귀찮아”</li>
</ul>

<p>그렇다. 그래서 여러분이 이 문제를 풀게 되었다. 입력은 항상 네 자리 소수만(1000 이상) 주어진다고 가정하자. 주어진 두 소수 A에서 B로 바꾸는 과정에서도 항상 네 자리 소수임을 유지해야 하고, ‘네 자리 수’라 하였기 때문에 0039 와 같은 1000 미만의 비밀번호는 허용되지 않는다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 test case의 수 T가 주어진다. 다음 T줄에 걸쳐 각 줄에 1쌍씩 네 자리 소수가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 test case에 대해 두 소수 사이의 변환에 필요한 최소 회수를 출력한다. 불가능한 경우 Impossible을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1033 8179
1373 8017
1033 1033
','6
7
0
','MATH'),
                                                                                                                (258,'BAEKJOON','https://www.acmicpc.net/problem/1964',1964,'오각형, 오각형, 오각형…','2초','256 MB',4,'<p>오각형의 각 변에 아래 그림과 같이 점을 찍어 나간다. N단계에서 점의 개수는 모두 몇 개일까?</p>

<p style="text-align: center;"><img alt="" height="167" src="/JudgeOnline/upload/201007/55555.png" width="479" style="width: 399.167px; height: 139.167px;"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(1 ≤ N ≤ 10,000,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 N단계에서 점의 개수를 45678로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
','22
','MATH'),
                                                                                                                (263,'BAEKJOON','https://www.acmicpc.net/problem/1977',1977,'완전제곱수','2초','128 MB',4,'<p>M과 N이 주어질 때 M이상 N이하의 자연수 중 완전제곱수인 것을 모두 골라 그 합을 구하고 그 중 최솟값을 찾는 프로그램을 작성하시오. 예를 들어 M=60, N=100인 경우&nbsp;60이상 100이하의 자연수 중 완전제곱수는&nbsp;64,&nbsp;81, 100&nbsp;이렇게 총 3개가 있으므로 그 합은 245가 되고 이 중 최솟값은 64가 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 M이, 둘째 줄에 N이 주어진다. M과 N은 10000이하의 자연수이며 M은 N보다 같거나 작다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>M이상 N이하의 자연수 중 완전제곱수인 것을 모두 찾아 첫째 줄에 그 합을, 둘째 줄에 그 중 최솟값을 출력한다. 단, M이상 N이하의 자연수 중 완전제곱수가 없을 경우는 첫째 줄에 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','60
100
','245
64
','MATH'),
                                                                                                                (261,'BAEKJOON','https://www.acmicpc.net/problem/1978',1978,'소수 찾기','2초','128 MB',4,'<p>주어진 수 N개&nbsp;중에서&nbsp;소수가 몇 개인지 찾아서 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 수의 개수 N이 주어진다. N은 100이하이다. 다음으로 N개의 수가 주어지는데 수는 1,000 이하의 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>주어진 수들 중 소수의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 3 5 7
','3
','MATH'),
                                                                                                                (262,'BAEKJOON','https://www.acmicpc.net/problem/1979',1979,'극적인 곱셈','2초','128 MB',16,'<p>혁화는 초등학생 동생의 곱셈 숙제를 도와주다가 새롭게 알아낸 사실이 있다.</p>

<p>102564에 4를 곱하면 410256이 되고, 이 수는&nbsp;102564가 오른쪽으로 한 칸씩 옮겨진 숫자이다.</p>

<p>이렇게 어떤 숫자에 n을 곱했는데 오른쪽으로 한 칸씩 옮겨지는 숫자를 n-극적인 숫자라고 한다. 예를 들어, 102564와 128205는 4-극적인 숫자이다.</p>

<p>두 숫자 n과 k가 주어졌을 때, n-극적인 숫자중 마지막 숫자가 k인 수를 구하는 프로그램을 작성하시오. (정답이&nbsp;여러 가지인 경우 가장 작은 것을 출력한다)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n(1 ≤&nbsp;n ≤&nbsp;9)과 k(1 ≤&nbsp;k ≤&nbsp;9)가 공백을 사이에 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 구한 n-극적인 숫자 중 마지막 숫자가 k인 수를 출력한다. 그런 숫자가 존재하지 않는 경우에는 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 5
','128205
','MATH'),
                                                                                                                (265,'BAEKJOON','https://www.acmicpc.net/problem/1980',1980,'햄버거 사랑','2초','128 MB',7,'<p>민혁이는 타워버거와 불고기버거를 매우 좋아한다. 민혁이는 타워버거를 먹는데 n분이 걸리고, 불고기버거를 먹는데 m분이 걸린다. 그는 t분 동안 햄버거를 최대한 많이 먹으려고 한다. 햄버거를 먹는 도중에 t분이 끝나면 안 되고, 아무것도 안 먹고 있을 때는 콜라를 마신다. 문제의 목적은 다음과 같다.</p>

<ol>
	<li>우선 콜라를 마시는 시간을 최소로 한다.</li>
	<li>콜라를 마시는 시간이 같은 여러 가지 경우에는 햄버거를 가장 많이 먹을 수 있는 경우를 알아본다.</li>
</ol>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 n, m, 주어진 시간 t가 주어진다. 세 수는 모두 1만 이하의 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>한 줄에 두 개의 수를 출력하는데, 첫 수는 먹은 햄버거의 개수이고, 두 번째 수는 콜라를 마신 시간이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 5 55
','17 0
','MATH'),
                                                                                                                (252,'BAEKJOON','https://www.acmicpc.net/problem/1990',1990,'소수인팰린드롬','1초','256 MB',11,'<p>151은 소수이면서 동시에 팰린드롬이기 때문에 소수인 팰린드롬이다. 팰린드롬이란 앞으로 읽어나 뒤로 읽으나 같은 수를 말한다. 예를 들어 1234는 앞으로 읽으면 1234지만, 뒤로 읽으면 4321이 되고 이 두 수가 다르기 때문에 팰린드롬이 아니다. 두 정수 a, b가 주어졌을 때, a이상 b이하인 소수인 팰린드롬을 모두 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 첫째 줄에 공백으로 구분된 두 자연수 a, b가 주어진다. 단 5 ≤ a < b ≤ 100,000,000 이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄부터 차례로 증가하는 순서대로 한 줄에 한개씩 소수인 팰린드롬을 출력한다. 마지막 줄에는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 550
','5
7
11
101
131
151
181
191
313
353
373
383
-1
','MATH'),
                                                                                                                (286,'BAEKJOON','https://www.acmicpc.net/problem/1997',1997,'박스포장','2초','128 MB',11,'<p>동호는 어떤 도자기 장식 판을 포장하는 회사에서 일을 하고 있다. 모든 장식 판은 두께가 1이고 너비가 모두 같으며 각자 자신의 고유한 모양을 가지고 있다.</p>

<p><img alt="" height="92" src="/JudgeOnline/upload/201007/bbbbb.png" width="289"></p>

<p>박스의 너비는 장식 판의 너비와 같아 장식 판을 포장할 때, 차례로 쌓을 수밖에 없다. 예를 들어 위의 장식 판을 차례로 쌓으면 아래의 왼쪽 그림과 같은 모양이 나오게 되고 세 번째 -> 두 번째 -> 첫 번째 순서로 쌓으면 오른쪽 그림과 같이 나오게 된다.</p>

<p><img alt="" height="142" src="/JudgeOnline/upload/201007/bb.png" width="189"></p>

<p>그런데 박스의 높이에는 한계가 있어서 왼쪽과 같은 경우에는 박스를 포장할 수 없게 된다. 그렇기 때문에 왼쪽과 같이 포장을 하려면 박스를 두개로 나누어서 첫 번째 박스는 두 번째 장식 판까지 쌓고, 두 번째 박스에 세 번째 장식 판을 넣어 포장을 해야 할 것이다.</p>

<p>우리가 해야 할 일은 다음과 같다. 어떤 장식 판의 개수, 너비, 박스의 높이, 그리고 장식 판들의 모양이 주어져 있다고 가정하자. 이러한 상황에서 주어진 장식 판을 순서대로 쌓을 때, 사용한 각 박스 안에 쌓은 높이를 출력하는 프로그램을 작성하시오. (ex, 위의 예 같은 경우에는 첫 번째 박스에 2번째 장식 판 까지 쌓아 높이가 9가 되고 두 번째 박스에 세 번째 장식 판을 넣어 높이가 6이 된다. 그래서 답은 9 6이 되는 것이다.)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 첫째 줄에 공백으로 구분된 100을 넘지 않는 세 자연수 n, w, b가 주어진다. n은 장식 판의 종류이고, w는 장식판과 박스의 너비, 그리고 b는 박스의 높이이다. 그리고 다음으로 n개의 장식 판의 정보가 주어지는데, 각 정보의 첫줄에는 장식 판의 높이 h(1 ≤ h ≤ 10, h ≤ b) 가 주어지고 두 번째 줄부터 h+1번째 줄까지 장식 판의 정보가 .과 X로 주어진다. .은 빈 공간을 의미하고 X는 장식 판의 한 부분을 의미한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>필요한 박스의 개수만큼의 정수를 출력하는데 각 박스에 쌓인 장식 판의 높이를 공백을 사이에 두고 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 5 12
5
XXXXX
.XXXX
..XXX
...XX
....X
4
XXX..
..X..
..XXX
..X..
6
X....
X....
X....
X....
X....
XXXXX
','9 6
','MATH'),
                                                                                                                (255,'BAEKJOON','https://www.acmicpc.net/problem/2004',2004,'조합 0의 개수','2초','128 MB',9,'<p>$n \choose m$의 끝자리 $0$의 개수를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 $n$,&nbsp;$m$ ($0 \le m \le n \le 2,000,000,000$, $n \ne 0$)이 들어온다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 $n \choose m$의 끝자리 $0$의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','25 12
','2
','MATH'),
                                                                                                                (270,'BAEKJOON','https://www.acmicpc.net/problem/2005',2005,'사발','1초','128 MB',17,'<p>밑면이 반지름이 r인 원이고 윗면이 반지름이 R인 사발이 있다. (윗면을 뚫려있다) 그리고 옆면이 직선이다. N개의 사발이 주어져 있을 때, 이 사발을 적절한 순서로 쌓을 때 최소 높이를 구하는 프로그램을 작성하시오. (단 사발의 두께는 무시하는 걸로 하자)</p>

<p>사발의 쌓는 모양을 그림으로 표현하면 대략 다음과 같다.</p>

<p style="text-align: center;"><img alt="" height="114" src="/JudgeOnline/upload/201007/4b.png" width="406" style="width: 338.333px; height: 95px;"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 사발의 개수 n이&nbsp;주어진다. 그리고 두 번째 줄부터 n+1번째 줄까지 각 사발의 정보가 주어지는데 각 줄에는 h, r, R 세 개의 정수가 빈칸을 사이에 두고 차례로 주어진다. h는 높이를 의미하고, r은 밑면의 반지름, R은 윗면의 반지름을 의미한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 최소 높이를 출력한다. 결과를 버림하여 정수값으로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
50 30 80
35 25 70
40 10 90
','55
','MATH'),
                                                                                                                (257,'BAEKJOON','https://www.acmicpc.net/problem/2007',2007,'수들의 합 3','2초','128 MB',18,'<p>N개의 정수가 있을 때 모든 두 수를 한 쌍으로 하여 더한 N×(N-1)/2개의 합을 생각해볼 수 있다. 그러한 N×(N-1)/2개의 합이 주어지면 그것으로 원래 N개의 수들을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 N(2 ≤ N ≤ 100) 이 입력된다. 두 번째 줄에는 N×(N-1)/2개의 합들이 주어진다. 입력으로 주어지는 합은 절댓값이 1,000,000보다 작거나 같은 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>그러한 합이 나오게 하는 원래 N개의 수를 비내림차순으로 출력한다. 답이 여러 개 존재 할 경우 그 중 하나만 출력하면 되며, 답이 없는 경우 “Impossible” 이라고 출력한다.</p>

<p>출력하는 정수는 -1억보다 크거나 같고, 1억보다 작거나 같아야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1269 1160 1663
','383 777 886
','MATH'),
                                                                                                                (264,'BAEKJOON','https://www.acmicpc.net/problem/2010',2010,'플러그','2초','256 MB',3,'<p>선영이의 집에는 콘센트를 꽂을 수 있는 플러그가 하나밖에 없다. 선영이는 많은 컴퓨터를 가지고 있는데, 컴퓨터의 전원 문제는 어떻게 해결하는 것일까?</p>

<p>하나의 플러그가 있고, N개의 멀티탭이 있다. 각 멀티탭은 몇 개의 플러그로 이루어져 있다고 한다. 최대 몇 대의 컴퓨터를 전원에 연결할 수 있을까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 멀티탭의 개수 N이 주어진다. (1 ≤ N ≤ 500,000) 이어서 둘째 줄부터 N개의 줄에 걸쳐 각 멀티탭이 몇 개의 플러그를 꽂을 수 있도록 되어 있는지를 나타내는 자연수가 주어진다. 이 자연수는 1,000을 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 최대로 전원에 연결될 수 있는 컴퓨터의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1
1
1
','1
','MATH'),
                                                                                                                (266,'BAEKJOON','https://www.acmicpc.net/problem/2014',2014,'소수의 곱','2초','128 MB',15,'<p>K개의 소수가 있다. 이때, 이 소수들 중에서 몇 개를 곱해서 얻게 되는 수들이 있을 것이다. 소수들을 선택할 때에는 같은 수를 선택해도 되며, 주어지는 소수 자체도 포함시키자.</p>

<p>예를 들어 세 소수가 2, 5, 7이었다면, 이러한 곱들을 오름차순으로 나타내 보면, 2, 4, 5, 7, 8, 10, 14, 16, 20, 25, 28, 32, 35, 등이 된다.</p>

<p>K개의 소수가 주어졌을 때, 이러한 소수의 곱들 중에서 N번째 수를 구해 보자. 단 정답은 2<sup>31</sup>보다 작은 자연수이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 K(1 ≤ K ≤ 100), N(1 ≤ N ≤ 100,000)이 주어진다. 다음 줄에는 K개의 소수가 오름차순으로 주어진다. 같은 소수가 여러 번 주어지는 경우는 없으며, 주어지는 소수는 모두 541보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제에서 설명한 대로 소수의 곱을 나열했을 때, N번째 오는 것을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 19
2 3 5 7
','27
','MATH'),
                                                                                                                (267,'BAEKJOON','https://www.acmicpc.net/problem/2018',2018,'수들의 합 5','2초','32 MB',6,'<p>어떠한 자연수 N은, 몇 개의 연속된 자연수의 합으로 나타낼 수 있다. 당신은 어떤 자연수 N(1 ≤ N ≤ 10,000,000)에 대해서, 이 N을 몇 개의 연속된 자연수의 합으로 나타내는 가지수를 알고 싶어한다. 이때, 사용하는 자연수는 N이하여야 한다.</p>

<p>예를 들어, 15를 나타내는 방법은 15, 7+8, 4+5+6, 1+2+3+4+5의 4가지가 있다. 반면에 10을 나타내는 방법은 10, 1+2+3+4의 2가지가 있다.</p>

<p>N을 입력받아 가지수를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 정수 N이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력된 자연수 N을 몇 개의 연속된 자연수의 합으로 나타내는 가지수를 출력하시오</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','15
','4
','MATH'),
                                                                                                                (274,'BAEKJOON','https://www.acmicpc.net/problem/2022',2022,'사다리','2초','128 MB',12,'<p>아래의 그림과 같이 높은 빌딩 사이를 따라 좁은 길이 나있다. 두 개의 사다리가 있는데 길이가 x인 사다리는 오른쪽 빌딩의 아래를 받침대로 하여 왼쪽 빌딩에 기대져 있고 길이가 y인 사다리는 왼쪽 빌딩의 아래를 받침대로 하여 오른쪽 빌딩에 기대져 있다. 그리고 두 사다리는 땅에서부터 정확하게 c인 지점에서 서로 교차한다. 그렇다면 두 빌딩은 얼마나 떨어져 있는 걸까?</p>

<p><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/upload/201007/ladd.png" style="height:250px; width:304px"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 차례대로 x, y, c에 해당하는 양의 실수 세 개가 입력된다. 수는 소수점 여섯째 자리까지 주어질 수 있으며, 3,000,000,000보다 작거나 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>두 빌딩사이에 너비가 되는 수치를 출력한다. 절대/상대 오차는 10<sup>-3</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','30 40 10
','26.033
','MATH'),
                                                                                                                (253,'BAEKJOON','https://www.acmicpc.net/problem/2023',2023,'신기한 소수','2초','4 MB',11,'<p>수빈이가 세상에서 가장 좋아하는 것은 소수이고, 취미는 소수를 가지고 노는 것이다. 요즘 수빈이가 가장 관심있어 하는 소수는 7331이다.</p>

<p>7331은 소수인데, 신기하게도 733도 소수이고, 73도 소수이고, 7도 소수이다. 즉, 왼쪽부터 1자리, 2자리, 3자리, 4자리 수 모두 소수이다! 수빈이는 이런 숫자를 신기한 소수라고 이름 붙였다.</p>

<p>수빈이는 N자리의 숫자 중에서 어떤 수들이 신기한 소수인지 궁금해졌다. N이 주어졌을 때, 수빈이를 위해 N자리 신기한 소수를 모두 찾아보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(1 ≤ N ≤ 8)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>N자리 수 중에서 신기한 소수를 오름차순으로 정렬해서 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
','2333
2339
2393
2399
2939
3119
3137
3733
3739
3793
3797
5939
7193
7331
7333
7393
','MATH'),
                                                                                                                (268,'BAEKJOON','https://www.acmicpc.net/problem/2028',2028,'자기복제수','2초','128 MB',4,'<p>어떤 자연수 N을 제곱했을 때, 그 제곱수의 맨 뒷자리에 원래의 수 N이 다시 나타나면, 우리는 그 수 N을 자기복제수라고 한다.</p>

<p>예를 들면, 5의 제곱은 5<sup>2</sup>는&nbsp;25이고 25의 맨 뒷자리에 원래의 수 5가 나타나므로 5는 자기복제수이다. 또 다른 예로, 76의 제곱은 5776이고 5776의 맨 뒷자리에 76이 나타나므로 76 또한 자기복제수이다.</p>

<p>자연수 N이 주어졌을 때, 그 수가 자기복제수인지 아닌지를 알아내는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에는 테스트 케이스의 개수 T (1 ≤ T&nbsp;≤ 20)가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있으며,&nbsp;자연수 N (1 ≤ N&nbsp;≤ 1000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해, 주어진 자연수가 자기복제수이면 YES를 아니면 NO를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1
6
76
89
','YES
YES
YES
NO
','MATH'),
                                                                                                                (256,'BAEKJOON','https://www.acmicpc.net/problem/2033',2033,'반올림','2초','128 MB',5,'<p>정수 N이 주어져 있을 때 이 수가 10보다 크면 일의 자리에서 반올림을 하고, 이 결과가 100보다 크면 다시 10의 자리에서 반올림을 하고, 또 이 수가 1000보다 크면 100의 자리에서 반올림을 하고.. (이하 생략) 이러한 연산을 한 결과를 출력하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 N이 주어진다. (0 ≤ N ≤ 99,999,999)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 위와 같은 연산을 한 결과를 출력하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','15
','20
','MATH'),
                                                                                                                (269,'BAEKJOON','https://www.acmicpc.net/problem/2038',2038,'골롱 수열','2초','128 MB',15,'<p>Golomb 수열이란 모든 k에 대해 k가 수열상에서 f(k)번 등장하는 단조증가 수열이다. 단조증가 수열이란 k값이 증가함에 따라 f(k)값이 감소하지 않는 수열을 말한다. 여기서 k와 f(k)는 모두 자연수이다.</p>

<p>골롱 수열은 유일하게 결정될 수밖에 없다. 잘 생각해 보시길 ..</p>

<p>n이 주어졌을 때 f(n)을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 f(n)을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','100
','21
','MATH'),
                                                                                                                (279,'BAEKJOON','https://www.acmicpc.net/problem/2052',2052,'지수연산','2초','8 MB',4,'<p>양의 정수 $N$이 주어질 때, $\displaystyle\frac{1}{2^N}$을 계산하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 $N$이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 $\displaystyle\frac{1}{2^N}$의 정확한 값을 소수 형태로 출력한다. 단, 뒤에 불필요한 $0$을 덧붙여서는 안 된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
','0.03125
','MATH'),
                                                                                                                (291,'BAEKJOON','https://www.acmicpc.net/problem/2055',2055,'삼각형 찾기','2초','128 MB',16,'<p>삼각형이란 세 개의 변으로 이루어진 면적이 양수인 도형이다. 격자 삼각형이란 삼각형의 세 꼭짓점의 좌표가 정수로 표현되는 삼각형을 말한다. 격자의 범위가 N×M으로 주어질 때, 가능한 삼각형의 개수를 구하는 프로그램을 작성하시오. 예를 들어 N=1, M=2일 경우에는 다음과 같은 18개의 경우가 있다.</p>

<p style="text-align: center;"><img alt="" height="207" src="/JudgeOnline/upload/201007/33333.png" width="567" style="width: 394.167px; height: 144.167px;"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 N, M이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 2
','18
','MATH'),
                                                                                                                (273,'BAEKJOON','https://www.acmicpc.net/problem/2057',2057,'팩토리얼 분해','2초','128 MB',6,'<p>음 아닌 정수 N이 주어졌을 때, 이 수를 서로 다른 정수 M(M ≥ 1)개의 팩토리얼의 합으로 나타낼 수 있는지 알아내는 프로그램을 작성하시오. 예를 들어 2=0!+1!로 나타낼 수 있지만, 5는 이와 같은 방식으로 나타낼 수 없다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 N이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어진 수를 서로 다른 정수 M개의 팩토리얼의 합으로 나타낼 수 있으면 YES, 없으면 NO를 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
','NO
','MATH'),
                                                                                                                (272,'BAEKJOON','https://www.acmicpc.net/problem/2060',2060,'염소 줄서기','2초','128 MB',22,'<p>거액 사기도박 혐의로 체포된 아기염소들은 구치소에서 저녁밥을 먹기 위해 줄을 선다. 아기염소들은 각각 저마다의 번호판을 달고 있고, 줄 서는 순서는 이 번호판의 번호에 의해 정해진다. 아기염소들은 그다지 영리하지 않기 때문에, 번호는 0과 1로만 이루어진 이진수 형태를 띤다. 각각의 번호의 길이는 31비트를 넘지 않는다.</p>

<p>아기염소들은 우리가 예상하는 이런 순서로 줄을 서지 않는다.&nbsp;0, 1, 10, 11, 100, ......</p>

<p>그 대신, 다음과 같은 규칙에 의한 우선순위에 따른다.</p>

<ul>
	<li>번호판에서 1의 총 개수가 더 적은 아기염소가 밥을 먼저 먹는다.</li>
	<li>1의 총 개수가 서로 같을 경우, 번호를 이진수로 보았을 때 더 작은 번호의 아기염소가 밥을 먼저 먹는다. (위에서 우리가 예상했던 순서와 같다)</li>
</ul>

<p>따라서 1000 (1이 1개)은 110 (1이 2개) 보다 우선순위가 먼저다. 100번부터 1111번까지의 모든 아기염소들을 순서대로 나열해보면 다음과 같다.</p>

<p>100, 1000, 101, 110, 1001, 1010, 1100, 111, 1011, 1101, 1110, 1111</p>

<p>번호가 정확히 0번인 아기염소를 제외하고는, 어떤 아기염소의 번호도 0으로 시작할 수 없다.</p>

<p>A번부터 B번까지 염소가 있을 때, 우선순위에 따라 정렬했을 때, X번째 염소의 번호를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p><span style="line-height:1.6em">첫째 줄에 A가, 둘째 줄에 B가 주어진다.</span></p>

<p><span style="line-height:1.6em">셋째 줄에, 우리가 그 번호를 구하고자 하는 아기염소의 위치가 주어진다. (물론 첫 번째 아기염소는 1번이다)</span></p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에, 해당 위치에 있는 아기염소의 번호를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','100
1111
5','1001','MATH'),
                                                                                                                (275,'BAEKJOON','https://www.acmicpc.net/problem/2061',2061,'좋은 암호','2초','128 MB',3,'<p>암호화 방식 중에는 소수를 이용하는 것들이 많다. 보통은 매우 큰 두 개의 소수를 선택하고, 두 소수를 곱한 값을 암호화에서의 키로 사용하고는 한다. 이러한 방법이 좋은 이유는 일반적으로 매우 큰 수를 소인수분해 하는 것이 어렵기 때문이다.</p>

<p>소수를 택할 때 큰 수를 택하면, 이 둘을 곱해서 얻어지는 키 값도 커지게 된다. 하지만 그 반대는 성립하지 않을 수도 있다. 즉, 키 값이 매우 큰 경우에도 이를 소인수분해 하는 것은 쉬울 수도 있다.</p>

<p>따라서 암호문이 크랙되지 않도록 하기 위해서는, 키 값이 적절히 큰 수들의 곱으로 이루어져 있는지를 확인해야 할 필요가 있다. 키 값 K와 정수 L이 주어졌을 때, K를 인수분해 했을 때, 항상 L 이상의 값으로만 이루어져 있는지를 확인하고 싶다. 물론 인수분해 할 때 1로 나누는 경우는 고려하지 않는다.</p>

<p>예를 들어 K=143인 경우, 이는 11과 13의 곱으로 이루어져 있다. 즉, 이를 인수분해 하는 방법은 11×13, 143의 두 가지 경우뿐이다. 따라서 L이 11일 경우에는 인수분해 했을 때 나온 수들이 모두 L 이상이므로 좋은 경우지만, L이 12이상일 경우에는 좋은 암호가 아니다.</p>

<p>K와 L이 주어졌을 때, 좋은 암호인지 판단하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 K, L이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>좋은 암호인 경우에는 GOOD을 출력한다. 나쁜 암호일 경우에는 BAD를 출력하고, K의 가장 작은 (1 아닌) 인수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','143 11
','GOOD
','MATH'),
                                                                                                                (271,'BAEKJOON','https://www.acmicpc.net/problem/2078',2078,'무한이진트리','1초','128 MB',9,'<p>다음과 같은 귀납적인 규칙에 의해서 만들어지는 무한한 크기의 이진 트리를 생각하자. 각각의 노드에는 두 정수의 순서쌍이 할당되어 있다.</p>

<ol>
	<li>루트에는 (1, 1)이 할당된다.</li>
	<li>어떤 노드가 (a, b)가 할당되었을 때, 그 노드의 왼쪽 자식에는 (a+b, b)가 할당되고, 오른쪽 자식에는 (a, a+b)가 할당된다.</li>
</ol>

<p>우리는 어떤 노드가 주어졌을 때, 루트에서 그 노드로 이동하는 최단 경로를 찾으려 한다. 하지만 최단 경로가 매우 길 수도 있기 때문에, 왼쪽 자식으로 이동하는 회수와 오른쪽 자식으로 이동하는 회수를 찾으려고 한다.</p>

<p>입력으로 두 정수 A, B가 주어졌을 때, 루트에서 (A, B)가 할당된 노드까지 최단 경로로 이동할 때, 왼쪽 자식으로 이동하는 회수와 오른쪽 자식으로 이동하는 회수를 구해내는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 A, B(1 ≤ A, B ≤ 2,000,000,000)가 주어진다. 잘못된 입력은 주어지지 않는다고 가정한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 두 정수 L, R을 출력한다. 각각은 왼쪽으로 이동한 회수, 오른쪽으로 이동한 회수를 나타낸다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 4
','2 1
','MATH'),
                                                                                                                (276,'BAEKJOON','https://www.acmicpc.net/problem/2086',2086,'피보나치 수의 합','2초','128 MB',15,'<p>제 1항과 제 2항을 1이라 하고, 제 3항부터는 앞의 두 항의 합을 취하는 수열을 피보나치(fibonacci) 수열이라고 한다. 예를 들어 제 3항은 2이며, 제 4항은 3이다.</p>

<p>피보나치 수열의 a번째 항부터 b번째 항까지의 합을 구하는 프로그램을 작성하시오. 수가 매우 커질 수 있으므로 마지막 아홉 자리만을 구하도록 한다. 즉 1,000,000,000으로 나눈 나머지를 구하면 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 a와 b이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 구한 합을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<ul>
	<li>1 ≤ a ≤ b ≤ 9,000,000,000,000,000,000</li>
</ul>

				</div>
				</div>','4 10
','139
','MATH'),
                                                                                                                (277,'BAEKJOON','https://www.acmicpc.net/problem/2089',2089,'-2진수','2초','128 MB',9,'<p>-2진법은 부호 없는 2진수로 표현이 된다. 2진법에서는 2<sup>0</sup>, 2<sup>1</sup>, 2<sup>2</sup>, 2<sup>3</sup>이 표현 되지만 -2진법에서는 (-2)<sup>0</sup> = 1, (-2)<sup>1</sup> = -2, (-2)<sup>2</sup> = 4, (-2)<sup>3</sup> = -8을 표현한다. 10진수로 1부터 표현하자면 1, 110, 111, 100, 101, 11010, 11011, 11000, 11001 등이다.</p>

<p>10진법의 수를 입력 받아서 -2진수를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 10진법으로 표현된 수 N이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>-2진법 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','-13
','110111
','MATH'),
                                                                                                                (278,'BAEKJOON','https://www.acmicpc.net/problem/2090',2090,'조화평균','2초','128 MB',7,'<p>N개의 수 A[1], …, A[N]의 조화평균은 1/(1/A[1] + 1/A[2] + … + 1/A[N]) 으로 정의된다. 즉, 각각의 수들을 뒤집어서(분모와 분자) 모두 더한 뒤, 그 값을 다시 뒤집는 것이다. 예를 들어 1, 2, 4의 조화평균을 구하면 4/7이 된다.</p>

<p>N개의 자연수 A[1], …, A[N]이 주어졌을 때, 그 조화평균을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수 N(1≤N≤9)이 주어진다. 다음 줄에는 차례로 A[1], …, A[N]이 주어진다. 각 수들은 자연수이며, 100을 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 분수 형태로 답을 출력한다. 답을 표현하는 방법이 여러 가지 있을 수 있는데, 그 중에서 가장 적은 수의 문자(숫자 및 /)를 사용하는 답을 출력하고, 그러한 경우가 여럿 있다면 사전 식으로 제일 앞서는 것을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>실제로 조화평균은&nbsp;N/(1/A[1] + 1/A[2] + … + 1/A[N]) 이지만, 이 문제에서는 문제에 나와있는 값을 조화평균이라고 하자.</p>

				</div>
				</div>','3
4 1 2
','4/7
','MATH'),
                                                                                                                (280,'BAEKJOON','https://www.acmicpc.net/problem/2097',2097,'조약돌','1초','128 MB',6,'<p>당신은 N개의 조약돌을 가지고 있다. 이 조약돌을 좌표평면의 격자점 위에 아무렇게나 떨어뜨렸다. 격자점이란, x좌표와 y좌표 모두가 정수인 지점을 말한다. 이를테면 (1, 1)이나 (0, -9)는 격자점이며, (-2, 3.5)이나 (π, 7.14)는 격자점이 아니다.</p>

<p>모든 조약돌을 포함하는 가장 작은 직사각형을 생각할 수 있다. 예를 들어 세 개의 조약돌을 (2,4), (4, 8), (5,5)에 떨어뜨렸다면, 이 세 조약돌을 모두 포함하는 가장 작은 직사각형은 가로 3, 세로 4인 직사각형이다. 이 경우 직사각형의 둘레는 14가 된다. 직사각형의 가로와 세로 길이는 반드시 1 이상이어야 한다.</p>

<p>조약돌의 개수 N이 주어졌을 때, 조약돌을 좌표평면의 격자점에 적절히 떨어뜨려서 모든 조약돌을 포함하는 직사각형의 둘레를 최소로 하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 조약돌의 개수 N(1 ≤ n ≤ 500,000,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 최소 둘레를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
','6
','MATH'),
                                                                                                                (282,'BAEKJOON','https://www.acmicpc.net/problem/2108',2108,'통계학','2초','256 MB',8,'<p>수를 처리하는 것은 통계학에서 상당히 중요한 일이다. 통계학에서 N개의 수를 대표하는 기본 통계값에는 다음과 같은 것들이 있다. 단, N은 홀수라고 가정하자.</p>

<ol>
	<li>산술평균 : N개의 수들의 합을 N으로 나눈 값</li>
	<li>중앙값 : N개의 수들을 증가하는 순서로 나열했을 경우 그 중앙에 위치하는 값</li>
	<li>최빈값 : N개의 수들 중 가장 많이 나타나는 값</li>
	<li>범위 : N개의 수들 중 최댓값과 최솟값의 차이</li>
</ol>

<p>N개의 수가 주어졌을 때, 네 가지 기본 통계값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 수의 개수 N(1 ≤ N ≤ 500,000)이 주어진다. 단, N은 홀수이다. 그 다음 N개의 줄에는 정수들이 주어진다. 입력되는 정수의 절댓값은 4,000을 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에는 산술평균을 출력한다. 소수점 이하 첫째 자리에서 반올림한 값을 출력한다.</p>

<p>둘째 줄에는 중앙값을 출력한다.</p>

<p>셋째 줄에는 최빈값을 출력한다. 여러 개 있을 때에는 최빈값 중 두 번째로 작은 값을 출력한다.</p>

<p>넷째 줄에는 범위를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1
3
8
-2
2
','2
2
1
10
','MATH'),
                                                                                                                (284,'BAEKJOON','https://www.acmicpc.net/problem/2113',2113,'행렬과 피보나치 수','5초','512 MB',24,'<p>크기가 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D43E TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-cD7"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="3"><mjx-c class="mjx-c1D43E TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>K</mi><mo>×</mo><mi>K</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$K \times K$</span></mjx-container>인 행렬 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D440 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>M</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$M$</span></mjx-container>, 음이 아닌 정수&nbsp;<mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>N</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$N$</span></mjx-container>, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D44E TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>a</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$a$</span></mjx-container>, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D451 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>d</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$d$</span></mjx-container>가 입력으로 주어진다. 행렬 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D440 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>M</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$M$</span></mjx-container>의 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45F TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>r</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$r$</span></mjx-container>행 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D450 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>c</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$c$</span></mjx-container>열에 있는 원소는 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D440 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em; margin-left: -0.081em;"><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45F TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D450 TEX-I"></mjx-c></mjx-mi></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>M</mi><mrow data-mjx-texclass="ORD"><mi>r</mi><mo>,</mo><mi>c</mi></mrow></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$M_{r,c}$</span></mjx-container>로 표시한다. 행렬 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D446 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>S</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$S$</span></mjx-container>는 다음과 같은 정의한다.</p>

<p><mjx-container class="MathJax" jax="CHTML" display="true" style="font-size: 109%; position: relative;">?<mjx-math display="true" class="MJX-TEX" aria-hidden="true" style="margin-left: 0px; margin-right: 0px;"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D446 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-munderover space="4"><mjx-over style="padding-bottom: 0.2em; padding-left: 0.408em;"><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi></mjx-texatom></mjx-over><mjx-box><mjx-munder><mjx-row><mjx-base><mjx-mo class="mjx-lop"><mjx-c class="mjx-c2211 TEX-S2"></mjx-c></mjx-mo></mjx-base></mjx-row><mjx-row><mjx-under style="padding-top: 0.167em; padding-left: 0.148em;"><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mn class="mjx-n"><mjx-c class="mjx-c30"></mjx-c></mjx-mn></mjx-texatom></mjx-under></mjx-row></mjx-munder></mjx-box></mjx-munderover><mjx-texatom space="2" texclass="ORD"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D439 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em; margin-left: -0.106em;"><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D44E TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2B"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c22C5"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D451 TEX-I"></mjx-c></mjx-mi></mjx-texatom></mjx-script></mjx-msub><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c22C5"></mjx-c></mjx-mo><mjx-msup space="3"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D440 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: 0.413em; margin-left: 0.054em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msup></mjx-texatom><mjx-mtext class="mjx-n"><mjx-c class="mjx-c2E"></mjx-c></mjx-mtext></mjx-math><mjx-assistive-mml unselectable="on" display="block"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi>S</mi><mo>=</mo><munderover><mo data-mjx-texclass="OP">∑</mo><mrow data-mjx-texclass="ORD"><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow data-mjx-texclass="ORD"><mi>N</mi></mrow></munderover><mrow data-mjx-texclass="ORD"><msub><mi>F</mi><mrow data-mjx-texclass="ORD"><mi>a</mi><mo>+</mo><mi>i</mi><mo>?</mo><mi>d</mi></mrow></msub><mo>?</mo><msup><mi>M</mi><mi>i</mi></msup></mrow><mtext>.</mtext></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\[S = \sum_{i=0}^{N}{F_{a+i \cdot d} \cdot M^i} \text{.}\]</span>?</mjx-container></p>

<p><mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;">?<mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msup><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D440 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: 0.363em; margin-left: 0.054em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c30"></mjx-c></mjx-mn></mjx-script></mjx-msup></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mi>M</mi><mn>0</mn></msup></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$M^0$</span></mjx-container>는 단위 행렬이고, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D439 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em; margin-left: -0.106em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c30"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="4"><mjx-c class="mjx-c30"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>F</mi><mn>0</mn></msub><mo>=</mo><mn>0</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$F_0 = 0$</span></mjx-container>, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D439 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em; margin-left: -0.106em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="4"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>F</mi><mn>1</mn></msub><mo>=</mo><mn>1</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$F_1 = 1$</span></mjx-container>, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3E"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="4"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>i</mi><mo>></mo><mn>1</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$i > 1$</span></mjx-container>인 경우에는 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D439 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em; margin-left: -0.106em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-msub space="4"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D439 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em; margin-left: -0.106em;"><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-texatom></mjx-script></mjx-msub><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c2B"></mjx-c></mjx-mo><mjx-msub space="3"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D439 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em; margin-left: -0.106em;"><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-mn class="mjx-n"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>F</mi><mi>i</mi></msub><mo>=</mo><msub><mi>F</mi><mrow data-mjx-texclass="ORD"><mi>i</mi><mo>?</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>F</mi><mrow data-mjx-texclass="ORD"><mi>i</mi><mo>?</mo><mn>2</mn></mrow></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$F_i = F_{i-1} + F_{i-2}$</span></mjx-container>이다.</p>

<p>행렬 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D446 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>S</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$S$</span></mjx-container>를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D43E TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>K</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$K$</span></mjx-container>, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D44E TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>a</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$a$</span></mjx-container>, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D451 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>d</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$d$</span></mjx-container>, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>N</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$N$</span></mjx-container>이 주어진다.</p>

<p>둘째 줄부터 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D43E TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>K</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$K$</span></mjx-container>개의 줄에 행렬 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D440 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>M</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$M$</span></mjx-container>의 원소가 주어진다. 여기서 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>i</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$i$</span></mjx-container>번째 줄에 주어지는 값은 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D440 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em; margin-left: -0.081em;"><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>M</mi><mrow data-mjx-texclass="ORD"><mi>i</mi><mo>,</mo><mn>1</mn></mrow></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$M_{i,1}$</span></mjx-container>, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D440 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em; margin-left: -0.081em;"><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mn class="mjx-n"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>M</mi><mrow data-mjx-texclass="ORD"><mi>i</mi><mo>,</mo><mn>2</mn></mrow></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$M_{i,2}$</span></mjx-container>, ..., <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D440 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em; margin-left: -0.081em;"><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D43E TEX-I"></mjx-c></mjx-mi></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>M</mi><mrow data-mjx-texclass="ORD"><mi>i</mi><mo>,</mo><mi>K</mi></mrow></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$M_{i, K}$</span></mjx-container>이고, 공백 한 칸으로 구분되어 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>총 K개의 줄에 행렬 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D446 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>S</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$S$</span></mjx-container>의 원소를 998,244,353으로 나눈 나머지를 출력한다. <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>i</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$i$</span></mjx-container>번째 줄에 출력해야 하는 값은&nbsp;<mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D446 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em; margin-left: -0.032em;"><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>S</mi><mrow data-mjx-texclass="ORD"><mi>i</mi><mo>,</mo><mn>1</mn></mrow></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$S_{i,1}$</span></mjx-container>, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D446 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em; margin-left: -0.032em;"><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mn class="mjx-n"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>S</mi><mrow data-mjx-texclass="ORD"><mi>i</mi><mo>,</mo><mn>2</mn></mrow></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$S_{i,2}$</span></mjx-container>, ..., <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D446 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em; margin-left: -0.032em;"><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D43E TEX-I"></mjx-c></mjx-mi></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>S</mi><mrow data-mjx-texclass="ORD"><mi>i</mi><mo>,</mo><mi>K</mi></mrow></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$S_{i, K}$</span></mjx-container>를 998,244,353으로 나눈 나머지이고, 공백 한 칸으로 구분해야 한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 0 2 4
1
','33
','MATH'),
                                                                                                                (285,'BAEKJOON','https://www.acmicpc.net/problem/2117',2117,'원형 댄스','2초','128 MB',10,'<p>N(1 ≤ n ≤ 32767)명의 사람들이 잔치에서 춤을 추게 되었다. 처음에는 1번부터 N번까지의 사람들이 차례대로, 둥글게 손을 잡고 서 있다. 그리고 춤이 끝날 때에는 이 순서가 반대(거꾸로, 뒤집힌)가 되어야 한다. 물론 사람들이 모두 손을 놓고 다시 자리를 잡으면 되겠지만, 그렇게 하면 둥그런 모양이 깨지게 된다. 따라서 자리를 바꿀 때에는, 서로 손을 잡고 있는 두 명의 사람만 자리를 바꿀 수 있다.</p>

<p>예를 들어 n=6인 경우를 보자. 맨 처음의 순서는 (1, 2, 3, 4, 5, 6)이 된다. 둥글게 서 있기 때문에 1번과 6번도 손을 잡고 있다. 이제 (1,&nbsp;2, 3, 4, 5, 6) → (6, 2, 3, 4, 5, 1) → (2, 6, 3, 4, 5, 1) → (1,&nbsp;6, 3, 4, 5, 2) → (1, 6, 3, 5, 4, 2) → (1, 6, 5, 3, 4, 2) → (1, 6, 5, 4, 3, 2)의 순서대로 바꾸면 자리가 반대가 된다. (6, 5, 4, 3, 2, 1)이 되는 게 맞겠지만, 어차피 둥글게 서 있기 때문에 (1, 6, 5, 4, 3, 2)와 같은 경우도 순서는 반대가 되는 게 맞다.</p>

<p>가급적이면 자리를 최소로 바꾸려고 한다. 최소로 자리를 바꾸려면 어떻게 해야 할까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 최소 자리바꿈 회수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
','6
','MATH'),
                                                                                                                (283,'BAEKJOON','https://www.acmicpc.net/problem/2122',2122,'여섯이서 놀기','2초','128 MB',18,'<p>사람들이 N명 있다. 이 중 여섯 명을 뽑아서 둥글게 둥글게 놀이를 하려고 한다. 단 서로 손을 잡아야 하기 때문에 이 여섯 명은 둥글게 섰을 때 서로 양쪽에 있는 사람을 알고 있어야 한다. 또 같은 여섯 명일지라도 그 순서에 따라서 다른 둥그런 모양이 될 수 있다. 하지만 시계방향과 반시계방향으로 순서가 반대인 경우에는 같은 경우로 생각한다. 이를테면, (1-2-3-4-5-6-1)과 (1-6-5-4-3-2-1)의 경우는 한 가지로 친다. 하지만 순서가 달라지는 (1-2-3-4-5-6-1)과 (1-2-4-3-5-6-1)은 다른 경우로 친다.</p>

<p>우린 몇 가지 방법으로 둥글게 둥글게 놀이를 할 수 있을지 궁금하다. 가능한 가짓수를 모두 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 후보들의 수 N(6 ≤ N ≤ 150)이 주어진다. 그리고 서로 아는지에 관한 관계가 인접행렬로 주어진다. A가 B를 알면 물론 B도 A를 안다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 줄에 가능한 모든 경우의 수를 출력한다. 단, 답이 클 수 있으므로 9901로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>N = 6인 완전 그래프의 답은 60, N = 7인 완전 그래프의 답은 420이다.</p>

				</div>
				</div>','6
010001
101000
010100
001010
000101
100010
','1
','MATH'),
                                                                                                                (287,'BAEKJOON','https://www.acmicpc.net/problem/2137',2137,'가장 가까운 분수','2초','128 MB',12,'<p>컴퓨터가 기본적으로 지원하는 것은 이진수에 기반한 정수 뿐이기 때문에, 이를 이용하여 실수(소수)를 표현하기 위한 방법이 연구되어 왔다. 여러 가지 방법들 중에서 현재는 부동 소수점 방식이 채택되어 널리 사용되고 있다. 하지만 이 방법은 오차 등의 문제가 있는 완벽하지 못한 방법이다.</p>

<p>당신은 실수를 다루는 프로그램을 하나 설계하게 되었는데, 이 프로그램 안에서 기약분수를 이용하여 실수를 표현하기로 하였다. 프로그램을 설계하는 과정에서 실수들의 대소 비교에 대해 살펴보게 되었고, 이 과정에서 한 실수에 가장 가까운 분수가 무엇인지 알아보고 싶어졌다.</p>

<p>기약분수 하나가 주어졌을 때, 이 분수에 가장 가까운 기약분수를 구하는 프로그램을 작성하시오. 가장 가깝다는 말은, 물론 두 분수가 표현하는 실수의 차이가 최소이며, 자기 자신과는 달라야 한다. 또, 그러한 기약분수가 여러 가지인 경우 가장 작은 것이다.</p>

<p>우리가 다루는 분수들은 분모와 분자가 모두 1 이상 32767 이하라고 가정하자. 기약분수란 분모와 분자의 최대 공약수가 1인 분수를 말한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 분수를 표현하는 분자와 분모가 주어진다.&nbsp;단, 분자는 분모보다 작다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 우리가 찾는 분수를 표현하는 분자와 분모를 공백으로 구분해 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 3
','21845 32767
','MATH'),
                                                                                                                (289,'BAEKJOON','https://www.acmicpc.net/problem/2139',2139,'나는 너가 살아온 날을 알고 있다','1초','128 MB',4,'<p>우리는 일상생활에서 휴가 일수를 계산하는 것 처럼 두 날짜 사이의 기간을 계산해야 하는 경우가 많다.</p>

<p>이때, 계산을 하는 가장 간단한 방법은 적당한 날짜를 잡은 뒤 계산할 날짜가 될 때까지 하루가 지날 때마다 계속 카운트를 하는 것이다.</p>

<p>이 문제에서는 해당하는 연도의 1월 1일을 시작하는 기준으로 잡을 것이다.</p>

<p>예를 들어 2005년 8월 13일은 총 225일이다. 그리고 그 1년 전인 2004년 8월 13일은 총 226일인데, 2004년은 윤년이기 때문이다.</p>

<p>윤년은 해당하는 연도가 4로 나누어 떨어지며 100으로는 나누어지는 연도는 제외하며, 그 중에서도 400으로 나누어 떨어지는 연도는 다시 포함한다. 그러므로 2000년이나 1976년은 윤년이다. 그러나, 1900년이나 1977년과 같은 경우는 윤년이 아니다.</p>

<p>또한 여러분은 28일로 이루어진(윤년에는 29일) 2월, 30일로 이루어진 4월, 6월 , 9월, 11월을 제외한 모든 달은 31일로 이루어져 있다는 것을 알고 있다.</p>

<p>이 문제에서, 여러분은 주어진 날짜를 카운트해야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 한 줄의 날짜로 이루어진다.</p>

<p>각 날짜는 일, 월, 년이 공백을 두고 주어지며, 일과 월은 항상 유효하며, 연도는 항상 1700과 2200사이의 값으로만 주어진다.</p>

<p>0 0 0이 입력되면 프로그램을 종료한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 줄에 날짜에 해당하는 날의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','14 8 2004
1 1 2004
31 1 1976
1 3 1974
1 3 1976
0 0 0
','227
1
31
60
61
','MATH'),
                                                                                                                (288,'BAEKJOON','https://www.acmicpc.net/problem/2142',2142,'정돈된 배열','2초','128 MB',15,'<p>정수로 이루어진 N×M&nbsp;크기의 2차원 배열이 있다. 이러한 2차원 배열이 정돈되어 있다는 말은, 1 ≤ i < k ≤ m, 1 ≤ j < l ≤ n를 만족하는 모든 i, j, k, l 에 대해서 A[i][j] + A[k][l] ≤ A[i][l] + A[k][j]가 성립하는 경우를 말한다.</p>

<p>2차원 배열이 주어졌을 때, 이러한 배열이 정돈된 배열인지 확인하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 배열의 개수 T가 주어진다. 다음 줄에는 배열에 대한 입력이 T개 주어진다. 각 배열에서 첫째 줄에는 두 정수 N, M이 주어진다. 다음 N개의 줄에는 M개의 정수로 배열의 각 원소가 주어진다. 입력은 A[1][1], A[1][2], …, A[1][M], A[2][1], A[2][2], …, A[2][M], …, A[N][M] 순서대로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>T개의 줄에, 주어진 순서대로 답을 출력한다. 정돈된 배열인 경우에는 YES를 출력하고, 아닌 경우에는 NO를 출력한다. 반드시 대소문자에 주의하도록 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
2 3
1 1 1
1 1 1
3 2
1 1
1 2
1 1
','YES
NO
','MATH'),
                                                                                                                (292,'BAEKJOON','https://www.acmicpc.net/problem/2145',2145,'숫자 놀이','2초','128 MB',4,'<p>초등학생인 도겸이는 숫자를 좋아한다. 어느 날 도겸이는 숫자 책을 보다가 간단한 놀이를 하나 생각해냈다. 숫자 놀이의 규칙은 다음과 같다.</p>

<ol>
	<li>주어진 숫자의 각 자릿수를 더한다.</li>
	<li>결과가 한 자릿수가 될 때 까지 규칙1을 반복한다.</li>
</ol>

<p>예를들어, 숫자 673에 규칙을 적용해보면 결과는 7이 된다 ;&nbsp;<span style="font-family:Arial,&quot;Helvetica Neue&quot;,Helvetica,Tahoma,sans-serif">6 + 7 + 3 = 16, 1 + 6 = 7&nbsp;</span></p>

<p>도겸이는 당신과 함께 숫자놀이를 하고싶어한다. 도겸이가 주는 숫자들을 풀어보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>각 줄에 숫자 N이 주어진다. N은 100,000보다 작은 양의 정수이다. 마지막 입력은 0이며, 0에 대한 결과는 출력하지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>한 줄에 하나씩 한 자릿수 결과를 출력한다.</p>
					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','673
51
1000
99
0
','7
6
1
9
','MATH'),
                                                                                                                (293,'BAEKJOON','https://www.acmicpc.net/problem/2153',2153,'소수 단어','2초','128 MB',4,'<p>소수란 1과 자기 자신으로만 나누어떨어지는 수를 말한다. 예를 들면 1, 2, 3, 5, 17, 101, 10007 등이 소수이다. 이 문제에서는 편의상 1도 소수로 하자.</p>

<p>알파벳 대소문자로 이루어진 영어 단어가 하나 있을 때, a를 1로, b를 2로, …, z를 26으로, A를 27로, …, Z를 52로 하여 그 합을 구한다. 예를 들어 cyworld는 합을 구하면 100이 되고, abcd는 10이 된다.</p>

<p>이와 같이 구한 수가 소수인 경우, 그 단어를 소수 단어라고 한다. 단어가 주어졌을 때, 그 단어가 소수 단어인지 판별하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 단어가 주어진다. 단어의 길이는 20자 이하이다.&nbsp;주어지는 단어는 알파벳 소문자와 대문자만으로 이루어져 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>아래의 예제와 같은 형식으로 출력을 한다. 소수 단어인 경우에는 It is a prime word.를, 아닌 경우에는 It is not a prime word.를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','UFRN
','It is a prime word.
','MATH'),
                                                                                                                (298,'BAEKJOON','https://www.acmicpc.net/problem/2155',2155,'삼각형의 최단 경로','2초','128 MB',12,'<p style="text-align: center;"><img alt="" height="236" src="/JudgeOnline/upload/201008/tri.PNG" width="192"></p>

<p>위의 그림과 같은 삼각형이 있다. 작은 삼각형들은 1부터 시작해서 위와 같은 규칙으로 번호가 쭉 매겨져 있다. 이와 같은 그림에서, A가 적혀 있는 삼각형에서 B가 적혀 있는 삼각형으로 이동하려 한다.</p>

<p>한 삼각형에서 다른 삼각형으로 이동할 때에는 삼각형들의 변을 통해서만 움직일 수 있으며, 꼭짓점을 통해서는 다른 삼각형으로 이동할 수 없다. 또한 삼각형의 밖으로 이동할 수도 없다. 이와 같이 이동을 할 때, 도중에 지나는 변의 개수가 그 경로의 길이가 된다.</p>

<p>A와 B가 주어졌을 때, 가장 짧은 경로의 길이를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 A, B(1 ≤ A, B ≤ 1,000,000,000)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 12
','3
','MATH'),
                                                                                                                (294,'BAEKJOON','https://www.acmicpc.net/problem/2163',2163,'초콜릿 자르기','2초','128 MB',5,'<p>정화는 N×M 크기의 초콜릿을 하나 가지고 있다. 초콜릿은 금이 가 있는 모양을 하고 있으며, 그 금에 의해 N×M개의 조각으로 나눠질 수 있다.</p>

<p>초콜릿의 크기가 너무 크다고 생각한 그녀는 초콜릿을 친구들과 나눠 먹기로 했다. 이를 위해서 정화는 초콜릿을 계속 쪼개서 총 N×M개의 조각으로 쪼개려고 한다. 초콜릿을 쪼갤 때에는 초콜릿 조각을 하나 들고, 적당한 위치에서 초콜릿을 쪼갠다. 초콜릿을 쪼갤 때에는 금이 가 있는 위치에서만 쪼갤 수 있다. 이와 같이 초콜릿을 쪼개면 초콜릿은 두 개의 조각으로 나눠지게 된다. 이제 다시 이 중에서 초콜릿 조각을 하나 들고, 쪼개는 과정을 반복하면 된다.</p>

<p>초콜릿을 쪼개다보면 초콜릿이 녹을 수 있기 때문에, 정화는 가급적이면 초콜릿을 쪼개는 횟수<span style="line-height:1.6em">를 최소로 하려 한다. 초콜릿의 크기가 주어졌을 때, 이를 1×1 크기의 초콜릿으로 쪼개기 위한 최소 쪼개기 횟수를 구하는 프로그램을 작성하시오.</span></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 N, M(1 ≤ N, M ≤ 300)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 2
','3
','MATH'),
                                                                                                                (295,'BAEKJOON','https://www.acmicpc.net/problem/2168',2168,'타일 위의 대각선','1초','128 MB',10,'<p>한 변의 길이가 1cm인 정사각형 모양의 타일이 있다. 이 타일들을 가로가 xcm, 세로가 ycm인 직사각형 모양의 벽에 빈틈없이 붙였다. x와 y는 정수이다.</p>

<p>이 직사각형에 하나의 대각선을 그렸다. 직사각형에 붙어 있는 x*y개의 타일 중에는 대각선이 그려진 타일도 있고, 그렇지 않은 타일도 있다. x*y개의 타일 중에서 대각선이 그려져 있는 타일의 개수를 구하는 프로그램을 작성하시오.</p>

<p>&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 가로의 길이 xcm와 세로의 길이 ycm가 주어진다. x와 y는 1,000,000,000 이하의 자연수이다. x와 y사이에는 빈칸이 하나 이상 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 대각선이 그려져 있는 타일의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8 12
','16
','MATH'),
                                                                                                                (297,'BAEKJOON','https://www.acmicpc.net/problem/2200',2200,'계산기','2초','128 MB',8,'<p>다항식을 계산하기 위해 고안된 계산기가 있다. 이 계산기에는 0부터 9까지의 숫자와 +, ×(곱하기), x, =의 14개의 키가 있다.</p>

<p>예를 들어 이 계산기를 이용하여 x^3 + x + 11을 계산하려면 x, ×, x, ×, x, +, x + 1, 1, = 을 누르면 된다. 또 x^3 + 2x^2 + 11을 계산하기 위해서는 x, +, 2, ×, x, ×, x, +, 1, 1, = 을 누르면 된다.</p>

<p>일반적인 계산기라면 x, +, 2, ×, x, ×, x, +, 1, 1, = 을 x + 2x^2 + 11로 인식하겠지만, 이 계산기는 추가 메모리가 없기 때문에 계산을 할 때에 계산 직전에 계산기에 저장되어 있던 값에 계산을 한다. 즉 x, +, 2, ×, x, ×, x, +, 1, 1, = 을 입력하면 계산기에는 차례로 x, x+2, x^2+2x, x^3+2x^2, x^3+2x^2+11 이 입력되는 것이다.</p>

<p>문제를 단순하게 하기 위해서 최고차항의 계수는 항상 1이라고 가정하자. 또 음수 계수는 고려하지 않기로 하자.</p>

<p>다항식이 주어졌을 때, 이 계산기로 주어진 다항식을 계산하려면 계산기를 최소 몇 번 눌러야 하는지를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 다항식의 차수 N(1 ≤ N ≤ 10,000)이 주어진다. 다음 줄에는 다항식의 계수가 최고차항부터 주어진다. 최고차항의 계수는 항상 1이며 모든 계수는 0 이상이다. 모든 계수는 1,000,000,000을 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 계산기를 누르는 최소 횟수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 0 1 11
','11
','MATH'),
                                                                                                                (296,'BAEKJOON','https://www.acmicpc.net/problem/2201',2201,'이친수 찾기','2초','128 MB',14,'<p>0과 1로만 이루어진 수를 이진수라 한다. 이러한 이진수 들 특별한 성질을 갖는 것들이 있는데, 이들을 이친수(pinary number)라 한다. 이친수는 다음의 성질을 만족한다.</p>

<ol>
	<li>이친수는 0으로 시작하지 않는다.</li>
	<li>이친수에서는 1이 두 번 연속으로 나타나지 않는다. 즉, 11을 부분 문자열로 갖지 않는다.</li>
</ol>

<p>예를 들면 1, 10, 100, 101, 1000, 1001 등이 이친수가 된다. 하지만 0010101이나 101101은 각각 (1), (2)번 규칙에 위배되므로 이친수가 아니다.</p>

<p>이와 같은 이친수를 이진수의 크기 순서대로 정렬하여 차례로 번호를 붙인다. 이를테면 첫 번째 이친수는 1, 두 번째 이친수는 10, 네 번째 이친수는 101이 되는 식이다.</p>

<p>자연수 K(1&nbsp;≤ K ≤ 1,000,000,000,000,000,000)가 주어졌을 때, K번째 이친수를 찾아내는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 K가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7
','1010
','MATH'),
                                                                                                                (299,'BAEKJOON','https://www.acmicpc.net/problem/2205',2205,'저울 추 만들기','2초','256 MB',10,'<p>질량(또는 무게)가 1, 2, 3, …, n인 납덩어리가 있고, 질량이 1, 2, 3, …, n인 주석덩어리가 있다. 각각의 질량을 갖는 덩어리들은 1개씩밖에 없다. 이제 이 납덩어리와 주석덩어리를 한개씩 녹여 합쳐서 질량이 2의 거듭제곱이 되는 저울추를 n개 만들려고 한다.</p>

<p>질량이 x인 납덩어리와 질량이 y인 주석덩어리를 합친 경우를 (x, y)로 나타내기로 하고, 다음과 같이 녹여 합친 경우를 보자. (1, 1), (2, 2), (3, 5), (4, 4), (5, 3). 각각의 저울추의 질량은 2, 4, 8, 8, 8이 되고 이들은 모두 2의 거듭제곱 꼴이 된다.</p>

<p>n이 주어졌을 때 저울추 n개를 만드는 방법을 하나 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n(1 ≤ n ≤ 10,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄부터 각 줄에 질량이 1인 납덩어리와 합친 주석덩어리의 질량, 질량이 2인 납덩어리와 합친 주석덩어리의 질량, 질량이 3인 납덩어리와 합친 주석덩어리의 질량, …을 n개의 줄에 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
','1
2
5
4
3
','MATH'),
                                                                                                                (300,'BAEKJOON','https://www.acmicpc.net/problem/2209',2209,'버스 터미널','5초','128 MB',20,'<p>용인시는 버스 정류장이 N개 있는 버스 노선을 짜려고 한다. 각 버스 정류장은 거리의 모퉁이에 있다. 용인시는 현대적으로 설계된 도시이기 때문에 지리 구조가 정사각형 격자 모양으로 짜여 있다. 우리는 이 버스 정류장들 가운데 두 곳을, 중심지로서 H<sub>1</sub>, H<sub>2</sub>라는 이름으로 선택하려고 한다. 중심지를 선택하고 나면, 두 중심지 사이에는 버스가 가는 길이 생기며, 중심지를 제외한 나머지 N-2개의 버스 정류장들은 H<sub>1</sub> 아니면 H<sub>2</sub> 중 한 곳(두 중심지 모두와 연결되는 것은 아님.)과 직통하게 될 것이다. 이렇게 버스 노선이 결정된다.</p>

<p>이 문제에서 임의의 두 지점 사이의 거리는, 두 곳을 수평 수직 방향으로만 통행하는 가장 가까운 거리이다. 다시 말해, 위치를 (x, y) 좌표로 표현했을 때, 두 지점 (x<sub>1</sub>, y<sub>1</sub>)과 (x<sub>2</sub>, y<sub>2</sub>)의 거리는 |x<sub>1</sub> - x<sub>2</sub>| + |y<sub>1</sub>&nbsp;- y<sub>2</sub>|로 정의된다는 뜻이다. 한편, 버스 정류장 A와 B가 같은 중심지 H<sub>1</sub>과 연결돼 있으면 두 정류장 사이의 거리는 A와 H<sub>1</sub> 사이의 거리와 H<sub>1</sub>과 B 사이의 거리의 합이 된다. 그리고 A와 B가 각각 다른 중심지인 H<sub>1</sub>, H<sub>2</sub>와 연결돼 있으면 두 정류장 사이의 거리는 A와 H<sub>1</sub>, H<sub>1</sub>과 H<sub>2</sub>, H<sub>2</sub>와 B 사이의 거리들의 합이 된다.</p>

<p>용인시의 도시 계획부는, 모든 시민이 도시의 모든 구역에 최대한 빨리 도착할 수 있게 하길 원한다. 따라서 도시 계획자들은 버스 정거장들 중, 서로 가장 멀리 떨어져 있는 두 곳 사이의 거리를 최소화할 수 있게끔 중심지 두 곳을 고르려고 한다. 이 거리를 최소화하게 중심지를 고른 뒤, 서로 거리가 가장 먼 두 정류장 사이의 거리를 계산하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 버스 정류장의 개수인 정수 N(2 ≤ N ≤ 500)이 있다. 그리고 다음 N 개의 줄에는 버스 정류장의 x, y좌표가 있다. (가로 먼저, 다음 세로) 각 좌표들은 5000과 같거나 작은 자연수이다. 정류장들은 모두 서로 다른 위치에 있으며, 겹치는 경우가 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>거리가 가장 먼 두 정류장 사이의 거리의 최솟값을 나타내는 자연수 하나를 한 줄에다 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
1 7
16 6
12 4
4 4
1 1
11 1
','20
','MATH'),
                                                                                                                (251,'BAEKJOON','https://www.acmicpc.net/problem/2217',2217,'로프','2초','192 MB',7,'<p>N(1 ≤ N ≤ 100,000)개의 로프가 있다. 이 로프를 이용하여 이런 저런 물체를 들어올릴 수 있다. 각각의 로프는 그 굵기나 길이가 다르기 때문에 들 수 있는 물체의 중량이 서로 다를 수도 있다.</p>

<p>하지만 여러 개의 로프를 병렬로 연결하면 각각의 로프에 걸리는 중량을 나눌 수 있다. k개의 로프를 사용하여 중량이 w인 물체를 들어올릴 때, 각각의 로프에는 모두 고르게 w/k 만큼의 중량이 걸리게 된다.</p>

<p>각 로프들에 대한 정보가 주어졌을 때, 이 로프들을 이용하여 들어올릴 수 있는 물체의 최대 중량을 구해내는 프로그램을 작성하시오. 모든 로프를 사용해야 할 필요는 없으며, 임의로 몇 개의 로프를 골라서 사용해도 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 N이 주어진다. 다음 N개의 줄에는 각 로프가 버틸 수 있는 최대 중량이 주어진다. 이 값은 10,000을 넘지 않는 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
10
15
','20
','MATH'),
                                                                                                                (301,'BAEKJOON','https://www.acmicpc.net/problem/2223',2223,'금화','2초','128 MB',8,'<p>고대 유적을 탐험하던 지민이는 금화가 가득 들어 있는 방을 발견하였다. 지민이는 가져간 주머니에 가득 금화를 담으려고 하였는데, 금화를 주머니에 담을 때 나는 소리 때문에 고대 유적 안의 몬스터들이 움직이게 된다는 사실을 알게 되었다. 다행히도 이 몬스터들은 지능적이지 않아서, 금화를 주워 담는 것을 멈추고 기다리면, 금화가 짤랑거리는 소리가 나지 않기 때문에 다시 원래의 자리로 돌아가고, 다시 소리가 나면 다가오는 식으로 움직인다. 몬스터에게 잡히지 않기 위해서 지민이는 금화를 적당히 주워 담다가 적당히 기다리는 것을 반복하기로 하였다.</p>

<p>지민이는 총 t(0 ≤ t ≤ 1,000,000) 단위의 시간 동안 금화를 주워 담을 수 있다. 또한 한 단위의 시간 동안 x(0 < x ≤ 10)개의 금화를 주워 담을 수 있다. 각각의 몬스터들은 지민이로부터 d(0 < d ≤ 1,000,000)만큼의 거리에 위치해 있으며, 단위 시간동안 s(0 < s ≤ 1,000,000)만큼의 거리를 움직인다. 몬스터가 지민이에게 다가올 때와 원래의 위치로 돌아갈 때 모두 같은 속도로 움직인다.</p>

<p>문제를 간명하게 만들기 위해서 모든 행동은 단위 시간마다 일어난다고 가정하자. 즉 지민이는 1만큼의 시간동안 금화를 줍거나 멈추는 행위 중에서 하나를 선택해야 한다. 몬스터들도 1만큼의 시간동안 다가오거나(지민이가 그 시간에 금화를 줍는 경우), 원래의 위치로 돌아가거나(지민이가 그 시간에 멈춰 있는 경우), 아니면 원래의 위치에서 가만히 있게 된다(지민이가 그 시간에 멈춰 있으며 몬스터가 원래의 위치에 있는 경우). 만약 몬스터가 지민이의 위치에 도착하는 순간 금화를 줍는 행위를 멈추게 되면, 이 역시 몬스터에게 잡히는 것으로 간주한다.</p>

<p>이러한 정보가 주어졌을 때, 지민이가 주워 담을 수 있는 금화의 최대 개수를 구하는 프로그램을 작성하시오. 금화는 무한히 많으며, 금화를 주워 담을 주머니 역시 무한히 크다고 가정한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 세 정수 t, x, m(0 ≤ m < 1,000)이 주어진다. 다음 m개의 줄에는 각 몬스터에 대한 정보를 나타내는 두 정수 d, s가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 1 1
10 3
','3
','MATH'),
                                                                                                                (302,'BAEKJOON','https://www.acmicpc.net/problem/2225',2225,'합분해','2초','128 MB',11,'<p>0부터 N까지의 정수 K개를 더해서 그 합이 N이 되는 경우의 수를 구하는 프로그램을 작성하시오.</p>

<p>덧셈의 순서가 바뀐 경우는 다른 경우로 센다(1+2와 2+1은 서로 다른 경우). 또한 한 개의 수를 여러 번 쓸 수도 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 N(1 ≤ N ≤ 200), K(1 ≤ K ≤ 200)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 답을 1,000,000,000으로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','20 2
','21
','MATH'),
                                                                                                                (303,'BAEKJOON','https://www.acmicpc.net/problem/2247',2247,'실질적 약수','2초','128 MB',11,'<p>두 자연수 A와 B가 있을 때, A = BC를 만족하는 자연수 C를 A의 약수라고 한다. 모든 자연수 N은 1과 자기 자신(N)을 약수로 갖게 된다.</p>

<p>실질적 약수(actual divisor)라는 것이 있다. 자연수 N의 약수들 중에서 1과 자기 자신(N)을 제외한 약수를 실질적 약수라고 한다. 따라서 6의 실질적 약수는 2, 3이며, 13의 실질적 약수는 없다.</p>

<p>SOD(Sum Of Divisor)라는 함수를 정의하자. SOD(n)은 정수 n의 모든 실질적 약수의 합을 가리킨다. 따라서 SOD(6) = 5이며, SOD(13) = 0이다. 한편, CSOD(Cumulative SOD)라는 함수도 정의해 볼 수 있다. CSOD(n)은 SOD(1) + SOD(2) + … + SOD(n)이라고 하자.</p>

<p>CSOD(n)을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 n이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 CSOD(n)을 1,000,000으로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','100
','3150
','MATH'),
                                                                                                                (304,'BAEKJOON','https://www.acmicpc.net/problem/2270',2270,'하노이 탑','2초','128 MB',14,'<p>하노이 탑 문제를 들어 보았을 것이다. 3개의 막대기 중 하나에 n개의 디스크가 꽂혀 있고, 이 디스크들을 다른 막대기로 옮기는 문제이다. 이 문제를 풀 때의 이동 횟수가 2ⁿ-1임은 잘 알려져 있다.</p>

<p>동혁이는 이 문제에 도전했는데, 대략 정신이 멍해진 사이에 그만 실수로 디스크들을 잘못 옮겨버렸다. 그래도 하노이 탑 문제의 기본적인 규칙은 어기지 않아서, n개의 디스크들을 한 막대기로 옮길 수는 있게 되었다.</p>

<p>디스크들이 놓여 있는 상태가 입력으로 주어졌을 때, 이 디스크들을 최소의 이동으로 한 막대기로 모으려고 한다. 어느 막대기로 모아야 하는지, 그리고 최소의 이동은 몇 번인지를 알아내는 프로그램을 작성하시오. 답은 매우 커질 수 있기 때문에, 1,000,000으로 나눈 나머지만을 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 n(1 ≤ n ≤ 100,000)이 주어진다. 둘째 줄에는 세 정수 a, b, c가 주어진다. 이는 차례로 1, 2, 3번 막대기에 꽂혀 있는 디스크의 개수이다. 이는 0이상 n이하이며, a + b + c = n이다. 다음 3개의 줄에는 차례로 1, 2, 3번 막대기에 꽂혀 있는 디스크들의 번호가 밑에서부터 주어진다. 각 디스크들의 번호는 1, 2, …, n이며, 잘못된 입력은 주어지지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 모아야 하는 막대기의 번호(1, 2, 3 중 하나)를 출력한다. 그 다음 줄에는 최소의 이동 횟수를 1,000,000으로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7
2 1 4
2 1
3
7 6 5 4
','3
4
','MATH'),
                                                                                                                (305,'BAEKJOON','https://www.acmicpc.net/problem/2272',2272,'램프','5초','128 MB',20,'<p>N개의 램프를 다음과 같은 규칙에 의해 켜고 끄려 한다.</p>

<p style="text-align: center;">0001 → 0011 →&nbsp;0101 → 1111 → 0000 →&nbsp;0000 → …</p>

<p>1은 램프가 켜져 있는 상태를 의미하고. 0은 꺼져 있는 상태를 의미한다. 매 초마다 램프들의 상태를 바꾸는데, 만약 전 시간에 자신의 오른 쪽 램프가 켜져 있었다면 다음 시간에 그 램프의 상태를 바꾸는 것이다. 1번 램프는 N번 램프의 오른쪽이라고 생각하자.</p>

<p>램프들의 모양이 주어졌을 때, M초 후의 램프들의 모양을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(1 ≤ N ≤ 1,000,000), M(0 ≤ M ≤ 1,000,000,000)이 주어진다. N개의 줄에는 0 또는 1이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>N개의 줄에 램프의 상태를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 1
0
0
1
','0
1
1
','MATH'),
                                                                                                                (308,'BAEKJOON','https://www.acmicpc.net/problem/2292',2292,'벌집','2초','128 MB',4,'<p style="text-align: center;"><img alt="" src="/JudgeOnline/upload/201009/3(2).png" style="height:397px; width:363px"></p>

<p>위의 그림과 같이 육각형으로 이루어진 벌집이 있다. 그림에서 보는 바와 같이 중앙의 방 1부터 시작해서 이웃하는 방에 돌아가면서 1씩 증가하는 번호를 주소로 매길 수 있다. 숫자 N이 주어졌을 때, 벌집의 중앙 1에서 N번 방까지 최소 개수의 방을 지나서 갈 때 몇 개의 방을 지나가는지(시작과 끝을 포함하여)를 계산하는 프로그램을 작성하시오. 예를 들면, 13까지는 3개, 58까지는 5개를 지난다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(1 ≤ N ≤ 1,000,000,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어진 방까지 최소 개수의 방을 지나서 갈 때 몇 개의 방을 지나는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','13
','3
','MATH'),
                                                                                                                (309,'BAEKJOON','https://www.acmicpc.net/problem/2301',2301,'마법 구슬','2초','128 MB',20,'<p>해리포터는 마법의 성의 방들에 있는 보물들을 최대한 많이 가져올 계획을 세우고 있다. 마법의 성에는 일렬로 되어있는 N = 2m개의 방이 있으며, 모든 방에는 보물이 하나씩 존재한다. 이 방들에는 문이 없고 출입하기 위해서는 마법 구슬을 이용하는 길밖에 없다.</p>

<p>해리포터에게는 N+1개의 마법 구슬이 있는데, IN으로 표시되는 마법 구슬과 A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>N-1</sub>으로 표시되는 N-1개의 마법 구슬과 OUT으로 표시되는 마법 구슬이 있다. 각 마법 구슬들은 다음과 같은 특징을 가진다.</p>

<ul>
	<li>마법 구슬 IN은 항상 제일 먼저 사용해야 하는 구슬이며, 해리포터를 N개의 방들 중 임의의 어느 한 방에 처음으로 들어가게 한다. (단, 어느 방에 들어가게 될지는 미리 알 수 없지만, 들어간 다음에는 그 방의 번호를 알 수 있다.)</li>
	<li>마법 구슬 A<sub>k</sub>(1 ≤ k ≤ N-1)는 임의의 방에 있는 해리포터를 왼쪽 또는 오른쪽으로 k 만큼 떨어진 방안으로 이동하게 한다. 왼쪽으로 이동할지 오른쪽으로 이동할지는 해리포터가 지정할 수 있다.</li>
	<li>마법 구슬 OUT은 제일 마지막에 사용해야 하는 구슬이며, 해리포터를 마법의 성에 있는 방으로부터 탈출하게 한다.</li>
	<li>모든 마법 구슬 IN, A<sub>k</sub>(1 ≤ k ≤ N-1), 및 OUT은 한 개씩만 주어져 있고, 한번 사용하고 나면 없어져서 다시 사용할 수 없다.</li>
</ul>

<p>예를 들어, N=4인 경우에 IN, A<sub>1</sub>, A<sub>2</sub>, A<sub>3</sub>, 및 OUT의 총 5개의 마법 구슬들이 해리포터에게 주어져 있고, IN을 사용했더니 3번방에 들어가게 되었다고 하자.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/2301/1.png" style="height:68px; width:178px"></p>

<p>이때, 그는 다음과 같은 방법으로 마법 구슬을 이용하여 방들에 있는 4개의&nbsp;보물을 찾아 가져올 수 있다.</p>

<ul>
	<li>A<sub>1</sub>을 사용하여 2번 방으로 간다.</li>
	<li>A<sub>2</sub>를 사용하여 4번 방으로 간다.</li>
	<li>A<sub>3</sub>를 사용하여 1번 방으로 간다.</li>
	<li>OUT을 사용하여 탈출한다.&nbsp;</li>
</ul>

<p>또 다른 예로, N=4인 경우에 IN을 이용했더니 1번방에 들어가게 되었다고 하자.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/2301/2.png" style="height:68px; width:170px"></p>

<p>이때는 다음의 방법으로 방들에 있는 4개의 보물을 찾아 가져올 수 있다.</p>

<ul>
	<li>A<sub>3</sub>를 사용하여 4번 방으로 간다.</li>
	<li>A<sub>2</sub>를 사용하여 2번 방으로 간다.</li>
	<li>A<sub>1</sub>을 사용하여 3번 방으로 간다.</li>
	<li>OUT을 사용하여 탈출한다.&nbsp;</li>
</ul>

<p>마법의 성에 있는 방들의 개수 N과 해리포터가 IN을 사용하여 들어간 방의 위치가 주어졌을 때, 그가 마법 구슬 A<sub>1</sub>, ?, A<sub>N-1</sub>및 OUT을 이용해서 방들에 있는 보물을 최대한 많이 찾아 가져오기 위하여 들어간 방의 순서를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 방의 개수를 나타내는 정수 N (단, 2<sup>1</sup> ≤&nbsp;N ≤ 2<sup>13</sup>=8192)이 주어진다. N은 2의 거듭제곱인 정수이다. 둘째 줄에는 해리 포터가&nbsp;IN을 사용해 들어간 방의 번호를 나타내는 정수 M이 주어진다. (단, 1 ≤ M ≤ N)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>해리 포터가 처음 들어간 방에서 시작하여, 방들에 있는 보물을 최대한 많이 찾아오기 위하여 들어간 방 번호들을 순서대로 한 줄에 출력한다. 각 방 번호사이에는 빈칸을 한개 둔다. 답이 여러 개인 경우에는 그 중 하나만 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
3
','3 2 4 1
','MATH'),
                                                                                                                (307,'BAEKJOON','https://www.acmicpc.net/problem/2312',2312,'수 복원하기','2초','128 MB',8,'<p>양의 정수 N이 주어졌을 때, 이 수를 소인수분해 한 결과를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 수가 주어진다. 각 테스트 케이스마다 양의 정수 N (2 ≤ N ≤ 100,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 각 인수와 그 인수가 곱해진 횟수를 한 줄씩 출력한다. 출력 순서는 인수가 증가하는 순으로 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
6
24
','2 1
3 1
2 3
3 1
','MATH'),
                                                                                                                (313,'BAEKJOON','https://www.acmicpc.net/problem/2328',2328,'그래프의 해시','2초','128 MB',16,'<p>해시(hash)란 주어진 데이터를 하나의 수로 표현하는 것을 말한다. 예를 들어서 "1024"와 같은 문자열을 1024 라는 수로 생각하는 방법은 해시의 한 예이다. 또, 영단어에서 a부터 z까지를 1에서 26까지의 수로 생각하여 그 수들을 합한 것도 해시의 한 예이다. 이런 해시를 적용하면 "ab"와 같은 영단어는 3이라는 수가 되고, "ace"와 같은 영단어는 9라는 수가 된다.</p>

<p>당신은 그래프에 대해서 해시 함수를 하나 설계하였다. 당신이 설계한 해시 값은 그래프의 1번 정점에서 2번 정점까지 가는 모든 경로들의 경로 값의 최소공배수로 정의한다. 경로 값은 경로 상에 있는 모든 간선의 가중치들의 최대공약수로 정의한다. 물론 경로에서는 같은 정점이 두 번 이상 나와서는 안 된다.</p>

<p style="text-align: center;"><img alt="" height="239" src="/JudgeOnline/upload/201011/ha.PNG" width="268"></p>

<p>예를 들어 위와 같은 그래프를 보자. 위의 그래프에서 1번 정점에서 2번 정점까지 가는 경로는 1-4-2, 1-3-2의 두 개가 있다. 각 경로의 경로 값은 2(16, 6의 최대공약수), 3(3, 9의 최대공약수)이 되고, 따라서 해시 값은 6(2, 3의 최소공배수)이 된다.</p>

<p>하나의 그래프가 주어졌을 때, 그 그래프의 해시 값(위에서 설계한 해시 함수를 이용하여 계산한)을 구해내는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 그래프의 정점의 개수 N(2 ≤ N ≤ 30)이 주어진다. 다음 N개의 줄에는 N개의 음 아닌 정수로 대칭적인 인접 행렬이 주어진다. 0인 경우는 간선이 없을 때를 나타내며, 그 외의 간선의 가중치는 1이상 5,000이하의 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 해시 값을 출력한다. 이 값은 10진수로 1000자리를 넘지 않는다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
0 0 3 16
0 0 9 6
3 9 0 0
16 6 0 0
','6','MATH'),
                                                                                                                (310,'BAEKJOON','https://www.acmicpc.net/problem/2331',2331,'반복수열','2초','256 MB',7,'<p>다음과 같이 정의된 수열이 있다.</p>

<ul>
	<li>D[1] = A</li>
	<li>D[n] = D[n-1]의 각 자리의 숫자를 P번 곱한 수들의 합</li>
</ul>

<p>예를 들어 A=57, P=2일 때, 수열 D는 [57, 74(=5<sup>2</sup>+7<sup>2</sup>=25+49), 65, 61, 37, 58, 89, 145, 42, 20, 4, 16, 37, …]이 된다. 그 뒤에는 앞서 나온 수들(57부터가 아니라 58부터)이 반복된다.</p>

<p>이와 같은 수열을 계속 구하다 보면 언젠가 이와 같은 반복수열이 된다. 이때, 반복되는 부분을 제외했을 때, 수열에 남게 되는 수들의 개수를 구하는 프로그램을 작성하시오. 위의 예에서는 [57, 74, 65, 61]의 네 개의 수가 남게 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 A(1 ≤ A ≤ 9999), P(1 ≤ P ≤ 5)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에&nbsp;반복되는 부분을 제외했을 때, 수열에 남게 되는 수들의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','57 2
','4
','MATH'),
                                                                                                                (311,'BAEKJOON','https://www.acmicpc.net/problem/2334',2334,'대칭 그림2','2초','128 MB',19,'<p>어떤 사람의 동생이 종이에 점을 찍어서 그림을 그렸다. 그림을 다 그려놓고 보니, 이 그림이 대칭인지 아닌지 궁금해졌다.</p>

<p>대칭이라는 말의 의미는, 종이를 한 번 접었을 때, 한 쪽 종이에 점이 찍힌 적이 있는 위치와 반대쪽 종이에 점이 찍힌 적이 있는 위치가 일치할 때를 의미한다. 종이에는 결이 없기 때문에, 종이를 접을 때에는 x축 또는 y축에 수직하게 접지 않아도 된다. 종이를 접는 위치가 반드시 종이의 정 가운데일 필요는 없다. 단, 접힌 선 위에는 어떤 점도 있어서는 안 된다.</p>

<p>점을 찍은 순서대로 점의 위치가 주어졌을 때, 이 그림이 대칭인지 판별하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 데이터 세트의 개수 T(1 ≤ T ≤ 4)가 주어진다. 둘째 줄에 점을 찍은 회수 N(1 ≤ N ≤ 700)이 주어진다. 다음 N개의 줄에는 순서대로 점을 찍은 x, y좌표가 주어진다. 각각의 좌표는 절댓값이 10,000을 넘지 않는 실수이다. 소수점은 최대 둘째자리까지 주어진다. 종이는 상하좌우 모든 방향으로 무한히 뻗어있다고 본다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 데이터 세트에 대해서 대칭이면 YES, 대칭이 아니면 NO를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
4
0 0
2 2
2 0
0 2
4
0 1
1 0
3 1
4 0
5
1 2
2.0 0
3 1.0
4 0.0
5.0 2
','YES
NO
NO
','MATH'),
                                                                                                                (312,'BAEKJOON','https://www.acmicpc.net/problem/2338',2338,'긴자리 계산','2초','128 MB',1,'<p>두 수 A, B를 입력받아, A+B, A-B, A×B를 구하는 프로그램을 작성하시오.</p>

					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 A가, 둘째 줄에 B가 주어진다. 각각의 수는 10진수로 1,000자리를 넘지 않으며 양수와 음수가 모두 주어질 수 있다.</p>
					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 A+B, 둘째 줄에 A-B, 셋째 줄에 A×B를 출력한다. 각각을 출력할 때, 답이 0인 경우를 제외하고는 0으로 시작하게 해서는 안 된다(1을 01로 출력하면 안 된다는 의미).</p>
					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
-1
','0
2
-1
','MATH'),
                                                                                                                (316,'BAEKJOON','https://www.acmicpc.net/problem/2351',2351,'미지의 다각형','2초','128 MB',20,'<p>정N각형의 각 꼭짓점에 1부터 N까지의 정수가 중복 없이, 그리고 임의의 순서로 붙어있다. 또 이 N각형의 내부에 M개의 대각선이 그려져 있다. 각각의 대각선은 교차하지 않는다고 하자(두 대각선의 한 끝점이 같은 경우는 교차하지 않는 것으로 간주한다).</p>

<p>이 다각형을 살펴보면서, N+M개의 선분들이 연결하는 두 꼭짓점에 붙어 있는 정수들의 목록을 나열하였다. 당신은 이 목록을 살펴보던 중, 다각형(과 대각선)이 있을 때 이와 같은 목록을 만드는 것도 쉬운 일이지만, 이와 같은 목록을 가지고 다각형(과 대각선)을 만드는 것도 그렇게 어렵지만은 않은 일임을 발견하였다.</p>

<p>예를 들어 이와 같은 목록이 (1, 3), (4, 2), (1, 2), (4, 1), (2, 3) 이었다고 했을 때, 다각형의 꼭짓점에 순서대로 1, 3, 2, 4의 정수를 붙이면 대각선도 교차하지 않고, 다각형의 모든 선분들이 목록에 있음을 알 수 있다.</p>

<p style="text-align: center;"><img alt="" height="190" src="/JudgeOnline/upload/201103/afaf.png" width="580" style="width: 335.833px; height: 110px;"></p>

<p>선분들의 목록이 주어졌을 때, 이를 이용하여 다각형에 붙어 있는 정수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 N(3 ≤ N ≤ 10,000), M(0 ≤ M ≤ N-3)이 주어진다. 다음 N+M 줄에는 각 선분의 두 끝점에 붙어 있는 정수가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 다각형에 붙어 있는 N개의 정수들을 출력한다. 1을 제일 먼저 출력하며, 두 번째 수가 더 작은 경우를 출력한다. (1 4 2 3 대신 1 3 2 4 를 출력)</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 1
1 3
4 2
1 2
4 1
2 3
','1 3 2 4
','MATH'),
                                                                                                                (314,'BAEKJOON','https://www.acmicpc.net/problem/2355',2355,'시그마','0.25초(추가시간없음)','128 MB',4,'<p>두 정수 A와&nbsp;B가 주어졌을 때, 두 정수 사이에 있는 수의 합을 구하는 프로그램을 작성하시오. 사이에 있는 수들은 A와 B도 포함한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 A, B가 주어진다. (-2,147,483,648 ≤ A, B&nbsp;≤ 2,147,483,647)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 답을 출력한다.&nbsp;(-2,147,483,648&nbsp;≤ 답&nbsp;≤ 2,147,483,647)</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 2
','3
','MATH'),
                                                                                                                (315,'BAEKJOON','https://www.acmicpc.net/problem/2356',2356,'제곱 ㄷㄷ 수','1초','1024 MB',14,'<p>어떠한 정수 $a$에 대해서도 $a^2$의 십진수 표현이 양의 정수 $N$의 십진수 표현의 부분문자열이 아닐 때 $N$을 <strong>제곱ㄷㄷ수</strong>라고 한다.</p>

<p>제곱ㄷㄷ수를 오름차순으로 나열하면 $2, 3, 5, 6, 7, 8, 22, 23, 26, ...$이 된다.</p>

<p>양의 정수 $N$이 주어질 때 $N$ 이상의 가장 작은 제곱ㄷㄷ수를 구하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>양의 정수 $N$($1 \le N \le 10^{18}$)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>$N$ 이상의 가장 작은 제곱ㄷㄷ수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','225
','226
','MATH'),
                                                                                                                (319,'BAEKJOON','https://www.acmicpc.net/problem/2378',2378,'불필요한 수','2초','128 MB',13,'<p>현재 사용되고 있는 폰노이만 컴퓨터에서는 난수(random number)를 만들어낼 수 없다. 따라서 난수를 얻고자 할 때는 수들을 규칙적으로, 하지만 뒤섞인 순서로 나열하는 방법을 사용한다. 실수 범위의 난수는 다루기가 복잡하므로, 이 문제에서는 음 아닌 정수만을 고려하자.</p>

<p>당신은 좀 더 난수에 가까운 수를 얻고자 다음과 같은 방법을 고안했다. 당신은 0이상 M이하의 난수를 얻고 싶은데, 이를 위해 0이상 M이하의 난수 N개 R[1], R[2], …, R[N]을 만든다. 다음으로 이 수열에서 인접한 두 수들의 합으로 된 합수열을 만든다. 위의 수열의 합수열은 R[1]+R[2], R[2]+R[3], …, R[N-1]+R[N]이 된다. 이와 같은 합수열을 만들면 수열의 길이가 N-1이 되는데, 합수열의 합수열을 구하는 과정을 반복하여 합수열의 길이가 1이 될 때까지, 즉 한 개의 수가 남을 때까지 반복한다. 이때 남은 수를 M으로 나눈 나머지를 구하면 우리가 만들고자 하는 난수가 된다.</p>

<p>하지만 이와 같은 방법에서, 어떤 N과 M에 대해서는 불필요한 수가 생기기도 한다. R[i] (1 ≤ i ≤ N)가 어떤 값이더라도 최종적으로 얻은 난수가 같다면 i번째 수는 불필요한 수가 된다. 예를 들어 N = 3, M = 2일 때는 R[2]의 값에 상관없는 난수가 만들어진다.</p>

<p>N과 M이 주어졌을 때 불필요한 수의 개수를 세고, 구체적으로 어떤 수들이 불필요한 수인지 알아내는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 N(1 ≤ N ≤ 100,000), M(2 ≤ M ≤ 1,000,000,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 불필요한 수의 개수 K를 출력한다. 다음 줄에는 불필요한 K개의 수들의 index(위에서의 i)를 출력한다. index는 순서대로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 2
','1
2
','MATH'),
                                                                                                                (318,'BAEKJOON','https://www.acmicpc.net/problem/2381',2381,'최대 거리','1초','128 MB',13,'<p>N(1 ≤ N ≤ 50,000)개의 점들이 있을 때, 최대 L1-metric 거리를 찾으시오.</p>

<p>두 점의 좌표가 (a, b), (c, d)일 때, 두 점의 L1-metric 거리는 |a-c|+|b-d|이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p><meta charset="utf-8">첫째 줄에 N이 주어진다. 다음 N개의 줄에는 각 점의 x, y좌표가 주어진다. 각 좌표의 범위는 -1,000,000이상 1,000,000이하이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 최대 거리를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1 1
3 5
2 7
8 1
4 4
','12
','MATH'),
                                                                                                                (320,'BAEKJOON','https://www.acmicpc.net/problem/2392',2392,'다각형의 분할','2초','128 MB',18,'<p>정 N각형의 꼭짓점에서 다른 꼭짓점을 잇는 선분을 그으면 주어진 다각형을 삼각형이나 사각형으로 나눌 수 있다. 이와 같은 선분들은 교차해서는 안 된다. N이 주어졌을 때, 가능한 삼각분할의 경우의 수와 사각분할의 경우의 수를 구하는 프로그램을 작성하시오. 회전, 또는 대칭을 이용한 경우에는 같은 것으로 세지 않고 다른 것으로 센다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p><meta charset="utf-8">첫째 줄에 N(3&nbsp;≤ N ≤ 1,000)이 주어진다. 답이 커질 수 있으므로 1,000,000,000으로 나눈 나머지를 출력한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 삼각 분할의 경우의 수를, 둘째 줄에 사각 분할의 경우의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
','14
3
','MATH'),
                                                                                                                (321,'BAEKJOON','https://www.acmicpc.net/problem/2399',2399,'거리의 합','1초','128 MB',4,'<p>수직선에 n개의 점이 찍혀 있다. 각각의 점의 x좌표가 주어졌을 때, n<sup>2</sup>개의 모든 쌍에 대해서 거리를 더한 값을 구하는 프로그램을 작성하시오.</p>

<p>즉, 모든 i, j에 대해서 |x[i] - x[j]|의 합을 구하는 것이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p style="text-align: justify;">첫째 줄에 n(1 ≤ n ≤ 10,000)이 주어진다. 다음 줄에는 x[1], x[2], x[3], …, x[n]이 주어진다. 각각은 0 이상 1,000,000,000 이하의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1 5 3 2 4
','40
','MATH'),
                                                                                                                (323,'BAEKJOON','https://www.acmicpc.net/problem/2404',2404,'단위 분수로 분할','2초','128 MB',10,'<p>분수 중에서 분자가 1이고 분모가 양수인 것을 단위분수라고 한다. 분수 p/q를 유한개의 단위분수의 합으로 나타내었을 때 p/q를 단위분수로 분할했다고 말한다. 예를 들면 2/3는 1/2 + 1/6으로 분할 할 수 있다. 분할에서 더하기의 순서만 바뀐 것은 고려하지 않는다. 예를 들면 1/6 + 1/2와 1/2 + 1/6은 같은 분할로 본다.</p>

<p>네 개의 양의정수 p, q, a, n이 주어졌을 때 다음 두 조건을 만족하는 p/q의 분할의 개수를 구하여라.</p>

<ol>
	<li>n개 이하의 단위분수의 합으로 나타내야 한다.</li>
	<li>분할을 이루는 단위분수의 분모의 크기의 곱은 a보다 작거나 같아야 한다.</li>
</ol>

<p>예를 들어 만약 (p, q, a, n)이 (2, 3, 120, 3)일 때 답은 4가 되어야 한다.</p>

<p>2/3 = 1/3 + 1/3 = 1/2 + 1/6 = 1/4 + 1/4 + 1/6 = 1/3 + 1/6 + 1/6</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 양의 정수 p, q, a, n이 입력된다.&nbsp;(1 ≤ p, q ≤ 800, 1 ≤ a ≤ 12000, 1 ≤ n ≤ 7)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제의 조건을 만족하는&nbsp;분할의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 3 120 3
','4
','MATH'),
                                                                                                                (324,'BAEKJOON','https://www.acmicpc.net/problem/2405',2405,'세 수, 두 M','2초','128 MB',12,'<p>n개의 정수 A[1], A[2], …, A[n]이 있다. 서로 다른 세 정수 i, j, k에 대해서 a = A[i], b = A[j], c = A[k]라 하자. 세 수의 중위(Median)값은 정렬했을 때 가운데에 오는 수가 된다. 세 수의 평균(Mean)값은 (a+b+c)÷3이 된다.</p>

<p>만약 세 수가 5, 2, 5라면 중위값은 5, 평균값은 4가 된다. 세 수가 2, 3, 1이라면 중위값은 2, 평균값도 2가 된다.</p>

<p>n개의 수들이 주어졌을 때, 위와 같이 세 수를 선택하여(i, j, k가 서로 다르도록) 중위값과 평균값의 차이가 최대가 되도록 해 보시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 n(3 ≤ n ≤ 100,000)이 주어진다. 다음 n개의 줄에는 n개의 정수들이 주어진다. 각 수들의 절댓값은 100,000,000을 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 중위값과 평균값의 차이를 세 배 한 값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
100
234
430
120
489
','349
','MATH'),
                                                                                                                (322,'BAEKJOON','https://www.acmicpc.net/problem/2407',2407,'조합','2초','128 MB',8,'<p><sub>n</sub>C<sub>m</sub>을 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>n과 m이 주어진다. (5 ≤&nbsp;n ≤&nbsp;100, 5 ≤&nbsp;m ≤&nbsp;100, m ≤&nbsp;n)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p><sub>n</sub>C<sub>m</sub>을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','100 6
','1192052400
','MATH'),
                                                                                                                (327,'BAEKJOON','https://www.acmicpc.net/problem/2408',2408,'큰 수 계산','2초','128 MB',4,'<p>어떤 임의의 수식이 입력으로 들어올때 수식을 계산하는 프로그램을 짜시오. 수의&nbsp;크기는 -10<sup>100</sup> 이상 10<sup>100</sup>이하이고, 수식에 괄호는 없다.</p>

<p>소수점이 나올 경우, 소수점은 내린다. 참고로, -5/2 = -3이고, 5/-2도 -3이다. -5/-2는 2이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>수의 개수 N(1 ≤ N ≤ 10) 이 주어지고 다음 2N-1 개의 줄에는 수와 연산자(+, -, *, /) 가 번갈아서 들어온다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 계산이 끝난 후 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
2
*
3
+
1
*
4
','10
','MATH'),
                                                                                                                (325,'BAEKJOON','https://www.acmicpc.net/problem/2417',2417,'정수 제곱근','0.4초(추가시간없음)','128 MB',7,'<p>정수가 주어지면, 그 수의 정수 제곱근을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 n이 주어진다. (0 ≤ n < 2<sup>63</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 q<sup>2</sup> ≥ n인 가장 작은 음이 아닌 정수 q를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','122333444455555
','11060446
','MATH'),
                                                                                                                (328,'BAEKJOON','https://www.acmicpc.net/problem/2420',2420,'사파리월드','1초','128 MB',1,'<p>사파리월드는 인터넷으로만 존재하는 미스테리한 나라이다. 사파리월드에는 2개의 서브도메인이 seunghwan.royal.gov.sw와 kyuhyun.royal.gov.sw 이 있는데, 이것이 couple.royal.gov.sw으로 합쳐질 것이다. 그러나 도메인 관리 센터 SWNIC(센터장: 김동규)에는 엄격한 룰이 있다. 두 서브도메인을 합칠 때, 유명도의 차이가 너무 차이나지 않을 경우에만 두 서브도메인을 결혼시키는 것이다. 서브도메인의 유명도는 정수이다. 두 서브도메인의 유명도가 주어졌을 때, 그 차이를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 도메인의 유명도 N과 M이 주어진다. (-2,000,000,000 ≤&nbsp;N, M ≤&nbsp;2,000,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 두 유명도의 차이 (|N-M|)을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','-2 5
','7
','MATH'),
                                                                                                                (329,'BAEKJOON','https://www.acmicpc.net/problem/2421',2421,'저금통','1초','128 MB',11,'<p>홍태석은 저금통 2개를 가지고 있다. 홍태석은 매일매일 하나의 저금통에 1원을 넣는다. 두 저금통에 모두 N원이 모이면 태석이는 새로운 장난감을 살 수 있기 때문에, 저금을 멈춘다.</p>

<p>홍태석은 소수를 좋아하는 것으로 서강대에서 유명하기 때문에, 첫째 저금통에 들어있는 돈의 양과 둘째 저금통의 돈의 양을 이어붙였을 때, 그것이 소수가 되는 것을 너무나도 좋아한다.</p>

<p>예를 들어, 첫째 저금통에 12원이 있고, 둘째 저금통에 7원이 있다고 하자. 그럼 그 두 수를 이은 127은 소수가 된다.</p>

<p>이제, 최대한 소수가 많이 나오도록, 홍태석이 돈을 넣는 최적의 순서를 찾아내면 된다. 가장 처음에 두 저금통에는 1원씩 들어있다.</p>

<p>예를 들어, &nbsp;N=4일 때를 보자.</p>

<p>1,1 → 2,1 → 2,2 → 3,2 → 3,3 → 4,3 → 4,4</p>

<p>위와같이 돈을 넣으면 소수는 오직 1번 등장한다. (43)</p>

<p>하지만, 다음과 같이 돈을 넣으면 소수는 3번 (31,41,43) 등장하게 된다.</p>

<p>1,1 → 2,1 → 3,1 → 4,1 → 4,2 → 4,3 → 4,4</p>

<p>위의 예가 N=4일 때 의 답이다. 가장 처음에 11은 세지 않는다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. (1<=N<=999)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 소수가 가장 많이 나오는 저금 방법에서 소수가 나오는 횟수를 출력한다.</p>


					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4','3','MATH'),
                                                                                                                (330,'BAEKJOON','https://www.acmicpc.net/problem/2427',2427,'2012 지구 멸망','1초','128 MB',22,'<p>2012년 지구는 멸망한다. 이러한 멸망하는 지구를 지키기 위해서, 초강대국 사파리 월드에는 긴급 의회를 소집했다. 이 의회에는 N명의 의원이 있다.&nbsp;</p>

<p>의회에는 회의를 통해서 하나의 의견을 결론으로 낸다. 회의에서, 결론에 도달하기 위해서는, 회의 참석자들이 다음과 같은 과정을 지켜야 한다.</p>

<ol>
	<li>모든 사람은 의견이 있고, P분동안 다른 사람들에게 설명할 수 있다.</li>
	<li>모든 참석자들이 발표를 한 후에, 가장 좋은 의견에 대해 투표를 한다. 이 투표는 V분 걸린다.</li>
</ol>

<p>예를 들어, P = 1이고, V = 1이라고 하면, 100명의 참가자가 참석한 회의라면 최종 결론이 나오기 까지 101분이 걸린다.</p>

<p>지금 지구가 멸망하고 있는데, 사파리 월드 의원들은 의외로 책임감이 넘쳐서, 이러한 의사 결정 절차를 빠르게 하기로 했다. 그러기 위해서 몇 개의 그룹으로 의원들을 나누고, 동시에 회의를 진행하기로 했다. 각 그룹은 각 그룹의 참석자들 사이에서 가장 좋은 의견을 뽑고, 각 그룹에서 가장 좋은 의견을 내놓은 사람들끼리 다시 회의를 한다.</p>

<p>예를 들어, P=1, V=1이고, 100명의 의원을 40, 60명의 그룹으로 나누면 다음과 같은 과정을 거친다.</p>

<ol>
	<li>60명의 그룹의 회의는 61분이 걸린다.</li>
	<li>40명의 그룹의 회의는 41분이 걸리고, 60명의&nbsp;그룹의 회의가 끝날 때 까지 기다린다.</li>
	<li>두 그룹의 가장 좋은 의견을 낸 사람들이 최종 회의에 참가하고, 발표하는데 2분, 투표하는데 1분이 걸린다.</li>
</ol>

<p>따라서 총 61+2+1 = 64분이 걸린다.</p>

<p>그룹을 만들었을 때, 거기서 또다른 소그룹을 만드는 것은 때때로 의사 결정 속도를 엄청나게 빠르게 하기도 한다. 특별한 예외 경우로 회의의 참석자가 1명인 결정하는데 시간이 걸리지 않고, 다른 사람에게 자신의 의견을 발표할 필요도 없다.</p>

<p>N과 P와 V가 주어졌을 때, 회의와 그룹을 최적의 상태로 나누었을 때, 마지막 의견 하나가 나오는데 걸리는 시간을 출력하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 P와 V가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 의회가 최종 의견을 내는 시간 M을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 예제의 경우 3명씩 3개의 그룹으로 나누면, 각 그룹은 회의가 4분씩 걸리고, 다시 마지막에 3명이 회의에 참석해서 회의를 하면 4분이 걸리므로, 8분이 걸린다.</p>

				</div>
				</div>','9 1 1
','8
','MATH'),
                                                                                                                (334,'BAEKJOON','https://www.acmicpc.net/problem/2431',2431,'신호 장애','1초','128 MB',20,'<p>스톡홀롬 지하철은 여러 개의 노선으로 이루어져 있다. 이 문제는 노선이 하나 있고, 자주 발생하는 문제인 신호 장애에 대해서 다룬다.</p>

<p>지하철 노선은 양 끝점을 연결하는 평행한 두 레일로 생각할 수 있다. 위쪽 레일에서 열차는 오른쪽에서 왼쪽으로 이동하며, 아래쪽 레일에서는 왼쪽에서 오른쪽으로 이동한다. 열차가 끝 점에 도착했을 때는, 반대편 레일로 이동한 다음, 방향을 바꿔서 다시 진행한다. 이렇게 방향을 바꾸고 반대편 레일로 이동하는데 걸리는 시간은 없다.</p>

<p>평소에 교통 흐름은 연속적이고, 열차는 항상 일정한 속도로 이동한다. (1분에 1칸) 열차는 균등하게&nbsp;분포되어 있다. 따라서, 레일의 한 점을 지나가는 열차는 주기적이다. 열차가 역에 정차하고, 승객을 태우는데 걸리는 시간은 무시한다.</p>

<p>신호 장애가 발생했을 때, 열차는 레일 위에 랜덤하게 분포된다. 이 경우에 지하철 관제 센터에서는 열차를 재빠르게 균등하게 분포해야 한다. 각 열차의 현재 위치가 주어졌을 때, 얼마나 빠르게 균등하게 분포할 수 있는 지 구하는 프로그램을 작성하시오. 관제 센터에서는 열차를 잠시 멈추게 할 수도 있고, 방향을 반대로 바꿀 수도 있다. 방향을 바꾸는 경우에 열차는 반대편 라인으로 이동하게 된다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/3c6fe59d-3337-4365-8787-843f9e4508fe/-/preview/" style="width: 335.833px; height: 123.333px;"></p>

<p>위의 그림은 길이가 100인 레일을 나타낸다. 위쪽 그림에 열차는 5(오른쪽), 35(왼쪽), 46(왼쪽), 75(왼쪽), 85(오른쪽)에 있다. 열차를 균등하게 배치하는 한 가지 방법은 46에 있는 열차를 한 칸 움직이게 하고, 방향을 반대로 바꾸는 것이다. 하지만, 이 방법은 가장 빠른 방법은 아니다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 레일의 길이 m, 열차의 수 n이 주어진다. 다음 n개 줄에는 열차의 현재 위치가 주어진다. 열차의 위치 x<sub>i</sub>와 함께 방향이 주어지며, L인 경우는 왼쪽, R인 경우는 오른쪽으로 열차가 향하는 것이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>열차를 균등하게 배치하는데 필요한 가장 빠른 시간을 출력한다. 소수점 오차는 10<sup>-6</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','100 5
5 R
35 L
46 L
75 L
85 R
','0.5
','MATH'),
                                                                                                                (341,'BAEKJOON','https://www.acmicpc.net/problem/2434',2434,'점 연결하기','1초','128 MB',19,'<p>3 × N개의 점이 찍혀있는 직사각형 그리드가 있다. 그리드 상의 모든 점은 최대 8개의 이웃한 점을 가지고 있다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/2463aeeb-ccc7-4bea-975c-6080bd85fafb/-/preview/" style="width: 106px; height: 105px;"></p>

<p>그리드 상의 점을 연결해서 만들 수 있는 다각형의 개수를 구하려고 한다. 다각형은 아래와 같은 조건을 만족해야 한다.</p>

<ol>
	<li>꼭짓점은 3 × N개 모두로 이루어져 있어야 한다.</li>
	<li>다각형에서 인접한 꼭짓점은 그리드상에서 이웃한 점이어야 한다.</li>
	<li>단순 다각형이어야 한다. 즉, 변이 교차하며 안 된다.</li>
</ol>

<p>아래 그림은 N=6인 경우에 가능한 두 가지 다각형이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/a7ee11de-3edc-4a6d-a6c3-db307d5c17c1/-/preview/" style="width: 378.333px; height: 73.3333px;"></p>

<p>N이 주어졌을 때, 만들 수 있는 다각형의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 양의 정수 N이 주어진다. (N ≤ 1,000,000,000).</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>다각형의 만드는 방법의 수를 &nbsp;1,000,000,000로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
','8
','MATH'),
                                                                                                                (332,'BAEKJOON','https://www.acmicpc.net/problem/2436',2436,'공약수','1초','128 MB',11,'<p>어떤 두 자연수에 공통인 약수들 중에서 가장 큰 수를 최대공약수라고 하고, 두 자연수의 공통인 배수들 중에서 가장 작은 수를 최소공배수라고 한다.&nbsp;</p>

<p>예를 들어, 두 자연수 12와 90의 최대공약수는 6이며, 최소공배수는 180이다.</p>

<p>이와 반대로 두 개의 자연수 A, B가 주어졌을 때, A를 최대공약수로, B를 최소공배수로 하는 두 개의 자연수를 구할 수 있다. 그러나, 이러한 두 개의 자연수 쌍은 여러 개 있을 수 있으며, 또한 없을 수도 있다.&nbsp;</p>

<p>예를 들어, 최대공약수가 6이며 최소공배수가 180인 두 정수는 위의 예에서와 같이 12와 90일 수도 있으며, 30과 36, 18과 60, 혹은 6과 180일 수도 있다. 그러나, 최대공약수가 6이며 최소공배수가 20인 두 자연수는 있을 수 없다.</p>

<p>두 개의 자연수가 주어졌을 때, 이 두 수를 최대공약수와 최소공배수로 하는 두 개의 자연수를 구하는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 개의 자연수가 빈칸을 사이에 두고 주어진다. 첫 번째 수는 어떤 두 개의 자연수의 최대공약수이고, 두 번째 수는 그 자연수들의 최소공배수이다. 입력되는 두 자연수는 2 이상 100,000,000 이하이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에는 입력되는 두 자연수를 최대공약수와 최소공배수로 하는 두 개의 자연수를 크기가 작은 수부터 하나의 공백을 사이에 두고 출력한다. 입력되는 두 자연수를 최대공약수와 최소공배수로 하는 두 개의 자연수 쌍이 여러 개 있는 경우에는 두 자연수의 합이 최소가 되는 두 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 180
','30 36
','MATH'),
                                                                                                                (336,'BAEKJOON','https://www.acmicpc.net/problem/2455',2455,'지능형 기차','1초','128 MB',3,'<p>최근에 개발된 지능형 기차가 1번역(출발역)부터 4번역(종착역)까지 4개의 정차역이 있는 노선에서 운행되고 있다. 이 기차에는 타거나 내리는 사람 수를 자동으로 인식할 수 있는 장치가 있다. 이 장치를 이용하여 출발역에서 종착역까지 가는 도중 기차 안에 사람이 가장 많을 때의 사람 수를 계산하려고 한다. 단, 이 기차를 이용하는 사람들은 질서 의식이 투철하여, 역에서 기차에 탈 때, 내릴 사람이 모두 내린 후에 기차에 탄다고 가정한다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/32c10113-d852-4d34-bf7d-b6190c49c783/-/preview/" style="width: 321px; height: 79px;"></p>

<table class="table table-bordered" style="width:30%">
	<thead>
		<tr>
			<th>&nbsp;</th>
			<th>내린 사람 수</th>
			<th>탄 사람 수</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<th>1번역(출발역)</th>
			<td>0</td>
			<td>32</td>
		</tr>
		<tr>
			<th>2번역</th>
			<td>3</td>
			<td>13</td>
		</tr>
		<tr>
			<th>3번역</th>
			<td>28</td>
			<td>25</td>
		</tr>
		<tr>
			<th>4번역(종착역)</th>
			<td>39</td>
			<td>0</td>
		</tr>
	</tbody>
</table>

<p>예를 들어, 위와 같은 경우를 살펴보자. 이 경우, 기차 안에 사람이 가장 많은 때는 2번역에서 3명의 사람이 기차에서 내리고, 13명의 사람이 기차에 탔을 때로, 총 42명의 사람이 기차 안에 있다.</p>

<p>이 기차는 다음 조건을 만족하면서 운행된다고 가정한다.</p>

<ol>
	<li>기차는 역 번호 순서대로 운행한다.</li>
	<li>출발역에서 내린 사람 수와 종착역에서 탄 사람 수는 0이다.</li>
	<li>각 역에서 현재 기차에 있는 사람보다 더 많은 사람이 내리는 경우는 없다.</li>
	<li>기차의 정원은 최대 10,000명이고, 정원을 초과하여 타는 경우는 없다.</li>
</ol>

<p>4개의 역에 대해 기차에서 내린 사람 수와 탄 사람 수가 주어졌을 때, 기차에 사람이 가장 많을 때의 사람 수를 계산하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>각 역에서 내린 사람 수와 탄 사람 수가 빈칸을 사이에 두고 첫째 줄부터 넷째 줄까지 역 순서대로 한 줄에 하나씩 주어진다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 최대 사람 수를 출력한다. &nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','0 32
3 13
28 25
39 0
','42
','MATH'),
                                                                                                                (331,'BAEKJOON','https://www.acmicpc.net/problem/2460',2460,'지능형 기차 2','1초','128 MB',3,'<p>최근에 개발된 지능형 기차가 1번역(출발역)부터 10번역(종착역)까지 10개의 정차역이 있는 노선에서 운행되고 있다. 이 기차에는 타거나 내리는 사람 수를 자동으로 인식할 수 있는 장치가 있다. 이 장치를 이용하여 출발역에서 종착역까지 가는 도중 기차 안에 사람이 가장 많을 때의 사람 수를 계산하려고 한다. 단, 이 기차를 이용하는 사람들은 질서 의식이 투철하여, 역에서 기차에 탈 때, 내릴 사람이 모두 내린 후에 기차에 탄다고 가정한다.</p>

<table class="table table-bordered" style="width:30%">
	<tbody>
		<tr>
			<th>&nbsp;</th>
			<th>내린 사람 수</th>
			<th>탄 사람 수</th>
		</tr>
		<tr>
			<th>1번역(출발역)</th>
			<td>0</td>
			<td>32</td>
		</tr>
		<tr>
			<th>2번역</th>
			<td>3</td>
			<td>13</td>
		</tr>
		<tr>
			<th>3번역</th>
			<td>28</td>
			<td>25</td>
		</tr>
		<tr>
			<th>4번역</th>
			<td>17</td>
			<td>5</td>
		</tr>
		<tr>
			<th>5번역</th>
			<td>21</td>
			<td>20</td>
		</tr>
		<tr>
			<th>6번역</th>
			<td>11</td>
			<td>0</td>
		</tr>
		<tr>
			<th>7번역</th>
			<td>12</td>
			<td>12</td>
		</tr>
		<tr>
			<th>8번역</th>
			<td>4</td>
			<td>2</td>
		</tr>
		<tr>
			<th>9번역</th>
			<td>0</td>
			<td>8</td>
		</tr>
		<tr>
			<th>10번역(종착역)</th>
			<td>21</td>
			<td>0</td>
		</tr>
	</tbody>
</table>

<p>예를 들어, 위와 같은 경우를 살펴보자. 이 경우, 기차 안에 사람이 가장 많은 때는 2번역에서 3명의 사람이 기차에서 내리고, 13명의 사람이 기차에 탔을 때로, 총 42명의 사람이 기차 안에 있다.</p>

<p>이 기차는 다음 조건을 만족하면서 운행된다고 가정한다.</p>

<ol>
	<li>기차는 역 번호 순서대로 운행한다.</li>
	<li>출발역에서 내린 사람 수와 종착역에서 탄 사람 수는 0이다.</li>
	<li>각 역에서 현재 기차에 있는 사람보다 더 많은 사람이 내리는 경우는 없다.</li>
	<li>기차의 정원은 최대 10,000명이고, 정원을 초과하여 타는 경우는 없다.</li>
</ol>

<p>10개의 역에 대해 기차에서 내린 사람 수와 탄 사람 수가 주어졌을 때, 기차에 사람이 가장 많을 때의 사람 수를 계산하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>각 역에서 내린 사람 수와 탄 사람 수가 빈칸을 사이에 두고 첫째 줄부터 열 번째 줄까지 역 순서대로 한 줄에 하나씩 주어진다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 최대 사람 수를 출력한다. &nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','0 32
3 13
28 25
17 5
21 20
11 0
12 12
4 2
0 8
21 0
','42
','MATH'),
                                                                                                                (337,'BAEKJOON','https://www.acmicpc.net/problem/2464',2464,'비밀번호','1초','128 MB',15,'<p>KOI 보안회사에서는 자동으로 비밀번호를 만드는 시스템을 연구하고 있다. 주어진 하나의 양의 정수에 대하여 다음의 원칙에 따라 두 수를 만들어 비밀번호를 정하려고 한다.</p>

<p>하나의 주어진 양의 정수 A에 대하여 비밀번호를 위한 두 수를 만드는 방법은 다음과 같다.</p>

<ol>
	<li>A의 이진수 표현에서 나오는 1의 개수 x를 찾는다.&nbsp;</li>
	<li>A보다 작은 수 중에서 그 수의 이진수 표현에서 1의 개수가 x와 같고 A에 가장 가까운 수를 하나 찾는다.&nbsp;</li>
	<li>A보다 큰 수 중에서 그 수의 이진수 표현에서 1의 개수가 x와 같고 A에 가장 가까운 수를 하나 찾는다.&nbsp;</li>
</ol>

<p>예를 들어, 주어진 수 A가&nbsp;43이면, 이 수의 이진수 표현은 101011<sub>(2)</sub>이다. 이 이진수는 1의 개수가 4이다. 그러므로 43보다 작고 43에 가장 가까우며 이진수 표현에서 1의 개수가 4인 수는 39=100111<sub>(2)</sub>이다. 또한 &nbsp;43보다 크고 43에 가장 가까우며 이진수 표현에서 1의 개수가 4인 수는 45=101101<sub>(2)</sub>이다.</p>

<p>이 두 수를 찾아 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 번째 줄에는 하나의 양의 정수 A가 주어진다. 단, 1 ≤ A ≤ 10<sup>18</sup>이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>주어진 수 보다 작은 수 중에서 이진수의 1의 개수가 같으며 가장 가까운 수와, 주어진 수 보다 큰 수 중에서 이진수의 1의 개수가 같으며 가장 가까운 수를 한 줄에 빈칸을 사이에 두고 출력한다. 만약 그러한 수가 존재하지 않으면 그 수에 대해서는 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','43
','39 45
','MATH'),
                                                                                                                (333,'BAEKJOON','https://www.acmicpc.net/problem/2475',2475,'검증수','1초','128 MB',1,'<p>컴퓨터를 제조하는 회사인 KOI 전자에서는 제조하는 컴퓨터마다 6자리의 고유번호를 매긴다. 고유번호의 처음 5자리에는 00000부터 99999까지의 수 중 하나가 주어지며 6번째 자리에는 검증수가 들어간다. 검증수는 고유번호의 처음 5자리에 들어가는 5개의 숫자를 각각 제곱한 수의 합을 10으로 나눈 나머지이다.</p>

<p>예를 들어 고유번호의 처음 5자리의 숫자들이 04256이면, 각 숫자를 제곱한 수들의 합 0+16+4+25+36 = 81 을 10으로 나눈 나머지인 1이 검증수이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 고유번호의 처음 5자리의 숫자들이 빈칸을 사이에 두고 하나씩 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 검증수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','0 4 2 5 6
','1
','MATH'),
                                                                                                                (338,'BAEKJOON','https://www.acmicpc.net/problem/2476',2476,'주사위 게임','1초','128 MB',3,'<p>1에서부터 6까지의 눈을 가진 3개의 주사위를 던져서 다음과 같은 규칙에 따라 상금을 받는 게임이 있다.</p>

<ol>
	<li>같은 눈이 3개가 나오면 10,000원+(같은 눈)×1,000원의 상금을 받게 된다.&nbsp;</li>
	<li>같은 눈이 2개만 나오는 경우에는 1,000원+(같은 눈)×100원의 상금을 받게 된다.&nbsp;</li>
	<li>모두 다른 눈이 나오는 경우에는 (그 중 가장 큰 눈)×100원의 상금을 받게 된다. &nbsp;</li>
</ol>

<p>예를 들어, 3개의 눈 3, 3, 6이 주어지면 상금은 1,000+3×100으로 계산되어 1,300원을 받게 된다. 또 3개의 눈이 2, 2, 2로 주어지면 10,000+2×1,000 으로 계산되어 12,000원을 받게 된다. 3개의 눈이 6, 2, 5로 주어지면 그 중 가장 큰 값이 6이므로 6×100으로 계산되어 600원을 상금으로 받게 된다.</p>

<p>N(2 ≤ N ≤ 1,000)명이 주사위 게임에 참여하였을 때, 가장 많은 상금을 받은 사람의 상금을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 참여하는 사람 수 N이&nbsp;주어지고 그 다음 줄부터 N개의 줄에 사람들이 주사위를 던진 3개의 눈이 빈칸을 사이에 두고 각각 주어진다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 가장 많은 상금을 받은 사람의 상금을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
3 3 6
2 2 2
6 2 5
','12000
','MATH'),
                                                                                                                (339,'BAEKJOON','https://www.acmicpc.net/problem/2477',2477,'참외밭','1초','128 MB',9,'<p>시골에 있는 태양이의 삼촌 댁에는 커다란 참외밭이 있다. 문득 태양이는 이 밭에서 자라는 참외가 도대체 몇 개나 되는지 궁금해졌다. 어떻게 알아낼 수 있는지 골똘히 생각하다가 드디어 좋은 아이디어가 떠올랐다. 유레카! 1m<sup>2</sup>의 넓이에 자라는 참외 개수를 헤아린 다음, 참외밭의 넓이를 구하면 비례식을 이용하여 참외의 총개수를 구할 수 있다.</p>

<p>1m<sup>2</sup>의 넓이에 자라는 참외의 개수는 헤아렸고, 이제 참외밭의 넓이만 구하면 된다. 참외밭은 ㄱ-자 모양이거나 ㄱ-자를 90도, 180도, 270도 회전한 모양(┏, ┗, ┛ 모양)의 육각형이다. 다행히도 밭의 경계(육각형의 변)는 모두 동서 방향이거나 남북 방향이었다. 밭의 한 모퉁이에서 출발하여 밭의 둘레를 돌면서 밭경계 길이를 모두 측정하였다.</p>

<p style="text-align: center;"><img alt="" src=https://www.acmicpc.net/upload/images/qqq.png" style="width: 193px; height: 93px; "></p>

<p>예를 들어 참외밭이 위 그림과 같은 모양이라고 하자. 그림에서 오른쪽은 동쪽, 왼쪽은 서쪽, 아래쪽은 남쪽, 위쪽은 북쪽이다. 이 그림의 왼쪽위 꼭짓점에서 출발하여, 반시계방향으로 남쪽으로 30m, 동쪽으로 60m, 남쪽으로 20m, 동쪽으로 100m, 북쪽으로 50m, 서쪽으로 160m 이동하면 다시 출발점으로 되돌아가게 된다.</p>

<p>위 그림의 참외밭 &nbsp;면적은 6800m<sup>2</sup>이다. 만약 1m<sup>2</sup>의 넓이에 자라는 참외의 개수가 7이라면, 이 밭에서 자라는 참외의 개수는 47600으로 계산된다.</p>

<p>1m<sup>2</sup>의 넓이에 자라는 참외의 개수와, 참외밭을 이루는 육각형의 임의의 한 꼭짓점에서 출발하여 반시계방향으로 둘레를 돌면서 지나는 변의 방향과 길이가 순서대로 주어진다. 이 참외밭에서 자라는 참외의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 1m<sup>2</sup>의 넓이에 자라는 참외의 개수를 나타내는 양의 정수 K (1 ≤ K ≤ 20)가 주어진다. 참외밭을 나타내는 육각형의 임의의 한 꼭짓점에서 출발하여 반시계방향으로 둘레를 돌면서 지나는 변의 방향과 길이 (1 이상 500 이하의 정수) 가 둘째 줄부터 일곱 번째 줄까지 한 줄에 하나씩 순서대로 주어진다. 변의 방향에서 동쪽은 1, 서쪽은 2, 남쪽은 3, 북쪽은 4로 나타낸다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 입력으로 주어진 밭에서 자라는 참외의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7
4 50
2 160
3 30
1 60
3 20
1 100
','47600
','MATH'),
                                                                                                                (335,'BAEKJOON','https://www.acmicpc.net/problem/2480',2480,'주사위 세개','1초','128 MB',2,'<p>1에서부터 6까지의 눈을 가진 3개의 주사위를 던져서 다음과 같은 규칙에 따라 상금을 받는 게임이 있다. </p>

<ol>
	<li>같은 눈이 3개가 나오면 10,000원+(같은 눈)×1,000원의 상금을 받게 된다. </li>
	<li>같은 눈이 2개만 나오는 경우에는 1,000원+(같은 눈)×100원의 상금을 받게 된다. </li>
	<li>모두 다른 눈이 나오는 경우에는 (그 중 가장 큰 눈)×100원의 상금을 받게 된다.  </li>
</ol>

<p>예를 들어, 3개의 눈 3, 3, 6이 주어지면 상금은 1,000+3×100으로 계산되어 1,300원을 받게 된다. 또 3개의 눈이 2, 2, 2로 주어지면 10,000+2×1,000 으로 계산되어 12,000원을 받게 된다. 3개의 눈이 6, 2, 5로 주어지면 그중 가장 큰 값이 6이므로 6×100으로 계산되어 600원을 상금으로 받게 된다.</p>

<p>3개 주사위의 나온 눈이 주어질 때, 상금을 계산하는 프로그램을 작성 하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 3개의 눈이 빈칸을 사이에 두고 각각 주어진다. </p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 게임의 상금을 출력 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 3 6
','1300
','MATH'),
                                                                                                                (350,'BAEKJOON','https://www.acmicpc.net/problem/2484',2484,'주사위 네개','1초','128 MB',4,'<p>1에서부터 6까지의 눈을 가진 4개의 주사위를 던져서 다음과 같은 규칙에 따라 상금을 받는 게임이 있다.&nbsp;</p>

<ol>
	<li>같은 눈이 4개가 나오면 50,000원+(같은 눈)×5,000원의 상금을 받게 된다.&nbsp;</li>
	<li>같은 눈이 3개만 나오면 10,000원+(3개가 나온 눈)×1,000원의 상금을 받게 된다.&nbsp;</li>
	<li>같은 눈이 2개씩 두 쌍이 나오는 경우에는 2,000원+(2개가 나온 눈)×500원+(또 다른 2개가 나온 눈)×500원의 상금을 받게 된다.</li>
	<li>같은 눈이 2개만 나오는 경우에는 1,000원+(같은 눈)×100원의 상금을 받게 된다.&nbsp;</li>
	<li>모두 다른 눈이 나오는 경우에는 (그 중 가장 큰 눈)×100원의 상금을 받게 된다. &nbsp;</li>
</ol>

<p>예를 들어, 4개의 눈이 3, 3, 3, 3으로 주어지면 50,000+3×5,000으로 계산되어 65,000원의 상금을 받게 된다. 4개의 눈이 3, 3, 6, 3으로 주어지면 상금은 10,000+3×1,000으로 계산되어 13,000원을 받게 된다. 또 4개의 눈이 2, 2, 6, 6으로 주어지면 2,000+2×500+6×500으로 계산되어 6,000원을 받게 된다. 4개의 눈이 6, 2, 1, 6으로 주어지면 1,000+6×100으로 계산되어 1,600원을 받게 된다. 4개의 눈이 6, 2, 1, 5로 주어지면 그 중 가장 큰 값이 6이므로 6×100으로 계산되어 600원을 상금으로 받게 된다.</p>

<p>N(1 ≤ N ≤ 1,000)명이 주사위 게임에 참여하였을 때, 가장 많은 상금을 받은 사람의 상금을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 참여하는 사람 수 N이 주어지고 그 다음 줄부터 N개의 줄에 사람들이 주사위를 던진 4개의 눈이 빈칸을 사이에 두고 각각 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 가장 많은 상금을 받은 사람의 상금을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
3 3 3 3
3 3 6 3
2 2 6 6
6 2 1 5
','65000
','MATH'),
                                                                                                                (342,'BAEKJOON','https://www.acmicpc.net/problem/2485',2485,'가로수','1초','128 MB',7,'<p>직선으로 되어있는 도로의 한 편에 가로수가 임의의 간격으로 심어져있다. KOI 시에서는 가로수들이 모두 같은 간격이 되도록 가로수를 추가로 심는 사업을 추진하고 있다. KOI 시에서는 예산문제로 가능한 한 가장 적은 수의 나무를 심고 싶다.</p>

<p>편의상 가로수의 위치는 기준점으로 부터 떨어져 있는 거리로 표현되며, 가로수의 위치는 모두 양의 정수이다.</p>

<p>예를 들어, 가로수가 (1, 3, 7, 13)의 위치에 있다면 (5, 9, 11)의 위치에 가로수를 더 심으면 모든 가로수들의 간격이 같게 된다. 또한, 가로수가 (2, 6, 12, 18)에 있다면 (4, 8, 10, 14, 16)에 가로수를 더 심어야 한다.</p>

<p>심어져 있는 가로수의 위치가 주어질 때, 모든 가로수가 같은 간격이 되도록 새로 심어야 하는 가로수의 최소수를 구하는 프로그램을 작성하라. 단, 추가되는 나무는 기존의 나무들 사이에만 심을 수 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 이미 심어져 있는 가로수의 수를 나타내는 하나의 정수 N이 주어진다(3 ≤ N ≤ 100,000). 둘째 줄부터 N개의 줄에는 각 줄마다 심어져 있는 가로수의 위치가 양의 정수로 주어지며, 가로수의 위치를 나타내는 정수는 1,000,000,000 이하이다. 가로수의 위치를 나타내는 정수는 모두 다르고, N개의 가로수는 기준점으로부터 떨어진 거리가 가까운 순서대로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>모든 가로수가 같은 간격이 되도록 새로 심어야 하는 가로수의 최소수를 첫 번째 줄에 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1
3
7
13
','3
','MATH'),
                                                                                                                (346,'BAEKJOON','https://www.acmicpc.net/problem/2487',2487,'섞기 수열','1초','128 MB',12,'<p>A<sub>1</sub>, A<sub>2</sub>, …, A<sub>N</sub>으로 표시된 N 개의 카드를 정해진 방법으로 섞고자 한다. 그 섞는 방법은 1에서 N까지의 숫자로 이루어진 수열로 표시된다. 이 수열을 <u>섞기 수열</u>이라 하자. <u>섞기</u>는 현재 가지고 있는 카드에서 섞기 수열의 각 숫자가 나타내는 위치에 있는 카드를 순서대로 뽑아서 나열하는 것이다. 예를 들어, N = 6이고 섞기 수열이 [3, 2, 5, 6, 1, 4]라고 하자. 카드의 처음 상태가 [A<sub>1</sub>, A<sub>2</sub>, A<sub>3</sub>, A<sub>4</sub>, A<sub>5</sub>, A<sub>6</sub>]일 때, 섞기를 한 번 실행하면 카드의 순서가 다음과 같이 된다.</p>

<p style="text-align: center;">[A<sub>3</sub>, A<sub>2</sub>, A<sub>5</sub>, A<sub>6</sub>, A<sub>1</sub>, A<sub>4</sub>]</p>

<p>이 상태에서 다시 한 번 섞기를 실행하면 카드의 순서가 [A<sub>5</sub>, A<sub>2</sub>, A<sub>1</sub>, A<sub>4</sub>, A<sub>3</sub>, A<sub>6</sub>]이 되고, 다시 한 번 더 섞기를 실행하면 카드의 순서가 [A<sub>1</sub>, A<sub>2</sub>, A<sub>3</sub>, A<sub>6</sub>, A<sub>5</sub>, A<sub>4</sub>]가 된다. 이렇게 섞기를 반복하면 카드의 순서가 처음 상태인 [A<sub>1</sub>, A<sub>2</sub>, A<sub>3</sub>, A<sub>4</sub>, A<sub>5</sub>, A<sub>6</sub>]이 된다. 처음 상태로 돌아 올 때까지 반복한 섞기의 최소 횟수를 주어진 섞기 수열의 <u>궤적</u>이라 한다. 임의의 섞기 수열이 주어졌을 때, 그 섞기 수열의 궤적을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 카드의 수 N이 주어진다. N은 1 이상 20,000 이하의 수이다. 두 번째 줄에 섞기 수열을 나타내는 N 개의 자연수가 빈칸을 사이에 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 입력으로 주어진 섞기 수열의 궤적을 출력한다. 단, 궤적이 1 이상 2,000,000,000 이하인 입력만 주어진다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
3 2 5 6 1 4
','6
','MATH'),
                                                                                                                (344,'BAEKJOON','https://www.acmicpc.net/problem/2500',2500,'복불복','1초','128 MB',19,'<p>1박2일 제작진은 다음과 같은 새로운 복불복 게임을 제안하였다. 먼저 게임을 하는 한 사람에게 K개의 조약돌을 주고, 숫자가 적혀있는 회전판을 N번 돌리게 한다. 게임을 하는 사람은 회전판을 돌려서 나오는 숫자만큼의 조약돌을 제작진에게 되돌려 주어야 한다. 회전판을 N번 돌리는 동안 제작진에게 줄 수 있는 조약돌이 있으면 게임을 하는 사람이 이기게 되고, 제작진에게 주어야 하는 조약돌이 모자라게 되면 게임에서 지게 된다.&nbsp;</p>
<p>회전판에는 T개의 숫자가 그려지고, 그려지는 숫자는 0 이상 T-1 이하의 정수 중 하나이다. 회전판에 사용되는 정수는 중복 사용이 가능하고, 0부터 T-1 사이의 정수 모두가 다 회전판에 나타나야 하는 것은 아니다.&nbsp;</p>

<p>N과 K, 그리고 T와 회전판에 그려진 모든 숫자가 주어질 때, 게임을 하는 사람이 이길 수 있는 경우의 수를 계산하는 프로그램을 작성하라.</p>
<p>
	단, 회전판에 같은 수가 여러 개 있을 때 이들 수는 값은 같지만 서로 다른 경우의 수들로 계산된다.</p>

<p>예를 들어, 6개의 숫자 0, 1, 1, 2, 4, 5가 그려진 회전판에서 가지고 있는 조약돌의 수가 6개이고, 회전판을 2번 돌린다면, 게임을 하는 사람이 이길 수 있는 경우의 수는 30이다. 즉, 처음 나온 정수가 0 혹은 1이면, 그 다음에 어떤 수가 나오더라도 게임을 이길 수 있으며, 2가 처음 나오는 경우에는 정수 5가 나오는 경우를 제외한 5가지 경우가 존재한다. 4가 처음 나오는 경우는 4가지 경우, 5가 처음 나오는 경우에는 3가지 경우가 존재하게 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 3개의 정수 N, K, T가 빈칸을 사이에 두고 주어진다. N은 회전판을 돌리는 횟수를 나타내고, K는 게임을 하는 사람에게 처음 주어지는 조약돌의 개수를 나타낸다. T는 회전판에 그려져 있는 정수들의 수이다. N은 1 이상 100,000 이하이고, K는 1 이상 1,000 이하, T는 2 이상 20,000 이하이다. 둘째 줄부터 T개의 줄에는 각 줄마다 회전판에 적혀져 있는 정수가 주어진다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 게임을 하는 사람이 이길 수 있는 경우의 수를 42,043으로 나눈 나머지 값으로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 6 6
0
1
1
2
4
5','30','MATH'),
                                                                                                                (343,'BAEKJOON','https://www.acmicpc.net/problem/2501',2501,'약수 구하기','1초','128 MB',3,'<p>어떤 자연수 p와 q가 있을 때, 만일 p를 q로 나누었을 때 나머지가 0이면 q는 p의 약수이다.&nbsp;</p>

<p>6을 예로 들면</p>

<ul>
	<li>6 ÷ 1 = 6 … 0</li>
	<li>6 ÷ 2 = 3 … 0</li>
	<li>6 ÷ 3 = 2 … 0</li>
	<li>6 ÷ 4 = 1 … 2</li>
	<li>6 ÷ 5 = 1 … 1</li>
	<li>6 ÷ 6 = 1 … 0</li>
</ul>

<p>그래서 6의 약수는 1, 2, 3, 6, 총 네 개이다.</p>

<p>두 개의 자연수 N과 K가 주어졌을 때, N의 약수들 중 K번째로 작은 수를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 K가 빈칸을 사이에 두고 주어진다. N은 1 이상 10,000 이하이다. K는 1 이상 N 이하이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 N의 약수들 중 K번째로 작은 수를 출력한다. 만일 N의 약수의 개수가 K개보다 적어서 K번째 약수가 존재하지 않을 경우에는 0을 출력하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 3
','3
','MATH'),
                                                                                                                (340,'BAEKJOON','https://www.acmicpc.net/problem/2502',2502,'떡 먹는 호랑이','1초','128 MB',10,'<p>하루에 한 번 산을 넘어가는 떡 장사 할머니는 호랑이에게 떡을 주어야 산을 넘어갈 수 있는데, 욕심 많은 호랑이는 어제 받은 떡의 개수와 그저께 받은 떡의 개수를 더한 만큼의 떡을 받아야만 할머니를 무사히 보내 준다고 한다.&nbsp;</p>

<p>예를 들어 첫째 날에 떡을 1개 주었고, 둘째 날에는 떡을 2개 주었다면 셋째 날에는 1+2=3개, 넷째 날에는 2+3=5개, 다섯째 날에는 3+5=8개, 여섯째 날에는 5+8=13개를 주어야만 무사히 산을 넘어갈 수 있다.&nbsp;</p>

<p>우리는 산을 무사히 넘어온 할머니에게 오늘 호랑이에게 몇 개의 떡을 주었는지, 그리고 오늘이 호랑이를 만나 떡을 준지 며칠이 되었는지를 알아내었다. 할머니가 호랑이를 만나서 무사히 넘어온 D째 날에 준 떡의 개수가 K개임을 알 때, 여러분은 할머니가 호랑이를 처음 만난 날에 준 떡의 개수 A, 그리고 그 다음 날에 호랑이에게 준 떡의 개수 B를 계산하는 프로그램을 작성하시오. 이 문제에서는 항상 1 ≤ A ≤ B 이다.</p>

<p>예를 들어 여섯 번째 날에 산을 무사히 넘어온 할머니가 호랑이에게 준 떡이 모두 41개라면, 호랑이를 만난 첫 날에 준 떡의 수는 2개, 둘째 날에 준 떡의 수는 7개이다. 즉 셋째 날에는 9개, 넷째 날에는 16개, 다섯째 날에는 25개, 여섯째 날에는 41개이다. 따라서 A=2, B=7 이 된다. 단 어떤 경우에는 답이 되는 A, B가 하나 이상일 때도 있는데 이 경우에는 그 중 하나만 구해서 출력하면 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 할머니가 넘어온 날 D (3&nbsp;≤ D ≤ 30)와 그 날 호랑이에게 준 떡의 개수 K (10 ≤ K ≤ 100,000)가 하나의 빈칸을 사이에 두고 주어진다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫줄에 첫 날에 준 떡의 개수 A를 출력하고 그 다음 둘째 줄에는 둘째 날에 준 떡의 개수 B를 출력한다. 이 문제에서 주어진 D, K에 대해서는 항상 정수 A, B (1≤ A ≤ B)가 존재한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 41
','2
7
','MATH'),
                                                                                                                (348,'BAEKJOON','https://www.acmicpc.net/problem/2506',2506,'점수계산','1초','128 MB',3,'<p>OX 문제는 맞거나 틀린 두 경우의 답을 가지는 문제를 말한다. 여러 개의 OX 문제로 만들어진 시험에서 연속적으로 답을 맞히는 경우에는 가산점을 주기 위해서 다음과 같이 점수 계산을 하기로 하였다. 1번 문제가 맞는 경우에는 1점으로 계산한다. 앞의 문제에 대해서는 답을 틀리다가 답이 맞는 처음 문제는 1점으로 계산한다. 또한, 연속으로 문제의 답이 맞는 경우에서 두 번째 문제는 2점, 세 번째 문제는 3점, ..., K번째 문제는 K점으로 계산한다. 틀린 문제는 0점으로 계산한다.</p>

<p>예를 들어, 아래와 같이 10 개의 OX 문제에서 답이 맞은 문제의 경우에는 1로 표시하고, 틀린 경우에는 0으로 표시하였을 때, 점수 계산은 아래 표와 같이 계산되어, 총 점수는 1+1+2+3+1+2=10 점이다.</p>

<table class="table table-bordered table-center-30 td-center th-center">
	<tbody>
		<tr>
			<th>채점</th>
			<td>1</td>
			<td>0</td>
			<td>1</td>
			<td>1</td>
			<td>1</td>
			<td>0</td>
			<td>0</td>
			<td>1</td>
			<td>1</td>
			<td>0</td>
		</tr>
		<tr>
			<th>점수</th>
			<td>1</td>
			<td>0</td>
			<td>1</td>
			<td>2</td>
			<td>3</td>
			<td>0</td>
			<td>0</td>
			<td>1</td>
			<td>2</td>
			<td>0</td>
		</tr>
	</tbody>
</table>

<p>시험문제의 채점 결과가 주어졌을 때, 총 점수를 계산하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 문제의 개수 N (1 ≤ N ≤ 100)이 주어진다. 둘째 줄에는 N개 문제의 채점 결과를 나타내는 0 혹은 1이 빈 칸을 사이에 두고 주어진다. 0은 문제의 답이 틀린 경우이고, 1은 문제의 답이 맞는 경우이다. </p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 입력에서 주어진 채점 결과에 대하여 가산점을 고려한 총 점수를 출력한다. </p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10
1 0 1 1 1 0 0 1 1 0
','10
','MATH'),
                                                                                                                (349,'BAEKJOON','https://www.acmicpc.net/problem/2514',2514,'자동분무기','1초','128 MB',17,'<p>어떤 농장은 다음 그림과 같이 가로 세로 8×8의 단위 구역으로 나누어져 있다. 이 농장에는 많은 곡식을 생산하기 위하여 비료액 또는 제초제를 뿌리는 자동분무기가 단위 구역에 설치되어 있다. 이 자동분무기는 놓인 위치에서 상하좌우 4방향으로 액체를 뿌린다. 예를 들어 X 구역에 자동분무기가 놓여있다면 그 장치로 부터 액체가 뿌려지는 단위 구역은 {X,a, b,c,d,e,f,g,h,i,j,k,l,m,n}이다. 만일 Y 구역에 자동분무기가 놓여있다면 액체가 뿌려지는 단위 구역은 {Y,A,B,c,C,D,E,F,G,H, I,J,k,K,L}이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/e39eeb7a-fb67-4e84-bb30-4c5dfa9230e8/-/preview/" style="width: 296px; height: 282px;"></p>

<p>자동분무기를 설치하지 않았을 때에는 각 단위 구역의 생산량은 모두 정확하게 같고, 이를 기본 생산량이라고 하자. 자동분무기를 설치한 후, 비료액이 뿌려진 단위 구역은 생산량이 1씩 증가하고, 제초제가 뿌려진 단위 구역은 잡초와 해충은 제거되지만 생산량이 1씩 감소한다. 기본 생산량이 30이라고 하자. X 구역에 비료액 자동분무기를, 그리고 Y 구역에 제초제 자동분무기를 설치하면 최종 생산량은 다음과 같다.&nbsp;</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/c4ee88bc-c002-4ade-a1d0-e2603b455538/-/preview/" style="width: 303px; height: 306px;"></p>

<p>단, 한 단위 구역에 배치될 수 있는 자동분무기는 최대 1대이다. 따라서 한 단위 구역에 제초제 자동분무기와 비료액 자동분무기가 동시에 배치되거나 같은 종류의 자동분무기가 2대 이상 설치될 수 없다.&nbsp;</p>

<p>기본 생산량이 M인 8×8 농장의 최종 생산량 자료가 주어졌을 때, 자동분무기가 놓인 위치와 종류를 찾아내는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에는 기본 생산량 M (30 ≤ M ≤ 40)이 주어진다. 두 번째 줄에는 이 농장에 놓인 자동분무기의 개수 K (1 ≤ K ≤ 63)가 주어진다. 그 다음에는 전체 8×8 농장의 최종 생산량이 위에서 아래로 한 줄씩 총 8줄에 걸쳐서 주어진다. 같은 줄에 있는 8개의 단위 구역의 생산량은 빈칸을 사이에 두고 구분된다. 모든 값은 양의 정수이다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>파일의 각 줄에는 입력에서 읽은 순서대로, 각 단위 구역마다 자동분무기의 유무와 종류 정보를 총 8줄에 출력한다. 비료액 자동분무기가 놓인 단위 구역은 ‘<code>+</code>’ 기호로, 제초제 자동분무기가 놓인 단위 구역은 ‘<code>-</code>’(마이너스) 기호로, &nbsp;자동분무기가 없는 단위 구역은 ‘<code>.</code>’ 기호로 표현한다. 같은 줄에 있는 단위 구역 정보는 하나의 빈칸을 사이에 두고 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','30
2
30 30 31 30 29 30 30 30
30 30 31 30 29 30 30 30
29 29 30 29 29 29 29 29
30 30 31 30 29 30 30 30
30 30 31 30 29 30 30 30
31 31 31 31 30 31 31 31
30 30 31 30 29 30 30 30
30 30 31 30 29 30 30 30
','. . . . . . . .
. . . . . . . .
. . . . - . . .
. . . . . . . .
. . . . . . . .
. . + . . . . .
. . . . . . . .
. . . . . . . .
','MATH'),
                                                                                                                (345,'BAEKJOON','https://www.acmicpc.net/problem/2520',2520,'팬케이크 사랑','1초','128 MB',4,'<p>오늘은 내가 팬케이크 요리사!</p>

<p>은주는 팬케이크를 만들기로 했다. 은주 앞에는 지금 재료들이 있다. 이 재료들을 보고 있자니, 팬케이크를 최대 몇 개나 만들 수 있을지 궁금해졌다.</p>

<p>팬케이크를 만들기 위해서는 먼저 반죽을 해야 한다. 우유 8컵, 계란 노른자 8개, 설탕 4스푼, 소금 1스푼, 밀가루 9컵이 있으면 팬케이크 반죽 16개를 만들 수 있다. 어떤 0 이상의 실수 x에 대해 모든 재료가 앞에 주어진 양의 x배 이상 있다면 은주는 ?16x?개의 반죽을 만들 수 있다.</p>

<p>그 다음 반죽에 토핑을 얹고 구우면 팬케이크가 만들어진다. 은주가 만들 수 있는 팬케이크의 종류와 각각에 필요한 토핑의 목록은 다음과 같다.</p>

<ul>
	<li>바나나 팬케이크: 바나나 1개</li>
	<li>딸기 팬케이크: 딸기잼 30그램</li>
	<li>초콜릿 팬케이크: 초콜릿 스프레드 25그램</li>
	<li>호두 팬케이크: 호두 10개</li>
</ul>

<p>바나나는 여러 조각으로 나누거나 여러 조각을 합쳐서 사용할 수 있다. 예를 들어 1/3 크기의 바나나 조각이 3개 있으면 하나로 합쳐서 바나나 팬케이크를 만들 수 있다.</p>

<p>은주가 가지고 있는 재료들의 양이 주어졌을 때, 만들 수 있는 팬케이크의 최대 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수가 주어진다. 각 테스트 케이스는 빈 줄로 구분되며, 두 줄로 이루어져 있다.</p>

<p>테스트케이스의 첫째 줄에는 5개의 정수가 있다. 처음부터 차례대로 c<sub>m</sub>, y, s<sub>su</sub>, s<sub>sa</sub>, f이다. 은주는 우유&nbsp;c<sub>m</sub>컵, 계란 노른자 y개, 설탕&nbsp;s<sub>su</sub>스푼, 소금&nbsp;s<sub>sa</sub>스푼, 밀가루 f컵을 가지고 있는 것이다.</p>

<p>두 번째 줄에는 4개의 정수가 있다. 이 수는 b, g<sub>s</sub>, g<sub>c</sub>, w이다. 은주는 바나나 b개, 딸기잼&nbsp;g<sub>s</sub>그램, 초콜릿&nbsp;g<sub>c</sub>그램, 호두 w개가 있다.</p>

<p>주어지는 모든 양은 0보다 크거나 같고, 10<sup>6</sup>보다 작거나 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 한 줄에 하나의 정수를 출력한다. 이 정수는 은주가 만들 수 있는 팬케이크의 최대 개수이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>&nbsp; 첫 번째 테스트 케이스에서 주어진 재료를 가지고 바나나 팬케익 10개, 딸기 팬케익 1개, 초콜릿 팬케익 4개, 호두 팬케익 1개를 만들 수 있다.</p>

<p>&nbsp; 두 번째 테스트 케이스에서 주어진 재료 중 밀가루가 팬케익 30개를 만들 수 있는 양이다.</p>

				</div>
				</div>','2

16 16 8 2 17
10 47 100 19

16 16 8 2 17
10 470 100 19
','16
30
','MATH'),
                                                                                                                (347,'BAEKJOON','https://www.acmicpc.net/problem/2525',2525,'오븐 시계','1초','128 MB',3,'<p>KOI 전자에서는 건강에 좋고 맛있는 훈제오리구이 요리를 간편하게 만드는 인공지능 오븐을 개발하려고 한다. 인공지능 오븐을 사용하는 방법은 적당한 양의 오리 훈제 재료를 인공지능 오븐에 넣으면 된다. 그러면 인공지능 오븐은 오븐구이가 끝나는 시간을 분 단위로 자동적으로 계산한다. </p>

<p>또한, KOI 전자의 인공지능 오븐 앞면에는 사용자에게 훈제오리구이 요리가 끝나는 시각을 알려 주는 디지털 시계가 있다. </p>

<p>훈제오리구이를 시작하는 시각과 오븐구이를 하는 데 필요한 시간이 분단위로 주어졌을 때, 오븐구이가 끝나는 시각을 계산하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 현재 시각이 나온다. 현재 시각은 시 A (0 ≤ A ≤ 23) 와 분 B (0 ≤ B ≤ 59)가 정수로 빈칸을 사이에 두고 순서대로 주어진다. 두 번째 줄에는 요리하는 데 필요한 시간 C (0 ≤ C ≤ 1,000)가 분 단위로 주어진다. </p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 종료되는 시각의 시와 분을 공백을 사이에 두고 출력한다. (단, 시는 0부터 23까지의 정수, 분은 0부터 59까지의 정수이다. 디지털 시계는 23시 59분에서 1분이 지나면 0시 0분이 된다.)</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','14 30
20
','14 50
','MATH'),
                                                                                                                (306,'BAEKJOON','https://www.acmicpc.net/problem/2528',2528,'사다리','1초','128 MB',13,'<p>여러 층으로 이루어진 직사각형 모양의 건물이 있다. 아래 그림 1은 5개의 층으로 이루어진 직사각형 건물의 예이다. 각 층에는 하나의 막대기가 있는데, 각 막대기의 길이는 서로 다를 수 있다. 그리고 막대기들은 시간 0에서 시작해서 동시에 왼쪽에서 오른쪽으로 혹은 오른쪽에서 왼쪽으로 움직인다. 시간은 정수시간 단위(0, 1, 2, ...)로 흐르고, 모든 막대기들은 단위시간당 길이 1만큼 움직인다. </p>

<p>아래 그림 1에서처럼 초기(시간 0)에 각 막대기는 직사각형의 왼쪽 변 또는 오른쪽 변에 닿아있다. 시간이 지남에 따라 각 막대기는 주어진 방향으로 움직이고 막대기의 양쪽 끝 중에 하나가 직사각형의 왼쪽 변 또는 오른쪽 변에 닿으면 진행하는 방향과 반대 방향으로 계속해서 움직인다. </p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/48ede751-92c8-4a2a-acfc-c79dc6160217/-/preview/" style="width: 230px; height: 162px;"></p>

<p style="text-align: center;">그림 1. 시간 0 (초기상태)</p>

<p>철수(그림 1의 검정색 원)는 초기에 가장 아래층막대기 위에 위치하고 있다. 그리고 아래<strong> 조건 1)</strong>을 만족하면서 현재 막대기 위에서 움직일 수 있고, <strong>조건 2)</strong>를 만족한다면, 하나 위층의 막대기로 올라 갈 수 있다. </p>

<p><strong>조건 1)</strong> 현재 위치하고 있는 막대기 위에서는 0시간에 움직일 수 있다. (즉, 막대기 위에서의 움직임은 시간이 걸리지 않는다.)</p>

<p><strong>조건 2)</strong> 철수가 현재 위치하고 있는 막대기의 임의의 위치에서 수직으로 이동 했을 때, 바로 위 층의 막대기 구간 안에 있으면(구간의 양쪽 끝 포함) 0시간에 바로 위 층의 막대기로 수직으로 올라갈 수 있다. (즉, 이 조건을 만족해서 하나 위층으로 올라 갈 수 있다면, 올라가는 움직임은 시간이 걸리지 않는다.)</p>

<p>예를 들어서, 아래 그림 2에서처럼 철수는 시간 2에 두 번째 층을 지나 세 번째 층의 막대기로 움직일 수 있다. 그리고 그림 3에서처럼 시간 4에 네 번째 층을 지나 다섯 번째 층의 막대기에 도달할 수 있다. </p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/d8cbf23a-14e6-433e-bef1-2252f62b46d6/-/preview/" style="width: 203px; height: 162px;"></p>

<p style="text-align: center;">그림 2. 시간 2</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/48f599dd-fa5b-40ea-8199-f9451509f4de/-/preview/" style="width: 203px; height: 160px;"></p>

<p style="text-align: center;">그림 3. 시간 4</p>

<p>시간 0의 초기 상태에서 출발해서 철수가 가장 아래층의 막대기에서 가장 위층의 막대기로 올라가는데 걸리는 최소 시간을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 층 수 N (1 ≤ N ≤ 3,000)과 층의 길이 L (1 ≤ L ≤ 3,000, L은 짝수)이 주어진다. 가장 아래층은 1층이고 가장 위층은 N층이다. 다음 N개의 줄 중 i번째 줄에는 i층의 막대기의 길이 l (1 ≤ l ≤ L, l은 짝수)과 초기에 막대기가 움직이는 방향 d (d = 0,1)가 주어진다. 여기서, d의 값 0은 왼쪽에서 오른쪽, 1은 오른쪽에서 왼쪽을 의미한다. 또한 초기에 막대기들은 방향이 0인 경우 층의 왼쪽 벽에, 1인 경우 층의 오른쪽 벽에 닿아 있다고 가정한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 철수가 가장 아래층 막대기에서 가장 위층 막대기로 올라가는데 걸리는 최소 시간을 하나의 정수로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 6
4 1
2 0
4 0
2 1
','0
','MATH'),
                                                                                                                (351,'BAEKJOON','https://www.acmicpc.net/problem/2530',2530,'인공지능 시계','1초','128 MB',2,'<p>KOI 전자에서는 건강에 좋고 맛있는 훈제오리구이 요리를 간편하게 만드는 인공지능 오븐을 개발하려고 한다. 인공지능 오븐을 사용하는 방법은 적당한 양의 오리 훈제 재료를 인공지능 오븐에 넣으면 된다. 그러면 인공지능 오븐은 오븐구이가 끝나는 시간을 초 단위로 자동적으로 계산한다.&nbsp;</p>

<p>또한, KOI 전자의 인공지능 오븐 앞면에는 사용자에게 훈제오리구이 요리가 끝나는 시각을 알려 주는 디지털 시계가 있다. &nbsp;</p>

<p>훈제오리구이를 시작하는 시각과 오븐구이를 하는 데 필요한 시간이 초 단위로 주어졌을 때, 오븐구이가 끝나는 시각을 계산하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 현재 시각이 나온다. 현재 시각은 시 A (0 ≤ A ≤ 23), 분 B (0 ≤ B ≤ 59)와 초 C (0 ≤ C ≤ 59)가 정수로 빈칸을 사이에 두고 순서대로 주어진다. 두 번째 줄에는 요리하는 데 필요한 시간 D (0 ≤ D ≤ 500,000)가 초 단위로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 종료되는 시각의 시, 분, 초을 공백을 사이에 두고 출력한다. (단, 시는 0부터 23까지의 정수이며, 분, 초는 0부터 59까지의 정수이다. 디지털 시계는 23시 59분 59초에서 1초가 지나면 0시 0분 0초가 된다.)</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','14 30 0
200
','14 33 20
','MATH'),
                                                                                                                (352,'BAEKJOON','https://www.acmicpc.net/problem/2541',2541,'점','1초','128 MB',14,'<p>좌표 평면에 자연수 좌표를 갖는 점 하나로 구성된 집합 S가 주어진다. S에 속하는 점으로부터 아래의 세 가지 생성규칙 중 하나를 적용하여 새로운 점을 만들고, 그 점을 집합 S에 추가한다. 이 과정을 반복적으로 수행하면, 매번 새로운 점을 집합 S에 계속 추가할 수 있다.&nbsp;</p>

<ul>
	<li>규칙 1: 점 (x, y)가 S에 속해 있다면, &nbsp;점 (x+1, y+1)을 S에 추가한다.&nbsp;</li>
	<li>규칙 2: 점 (x, y)가 S에 속해 있고, x와 y가 모두 짝수이면, 점 (x/2, y/2)를 S에 추가한다.</li>
	<li>규칙 3: 두 점 (x, y)와 (y, z)가 S에 속해 있다면, 점 (x, z)를 S에 추가한다.</li>
</ul>

<p>예를 들어, S = {(3, 5)}일 때, 규칙 1을 점 (3, 5)에 적용하여 만들어진 점 (4, 6)을 S에 추가하면, S = {(3, 5), (4, 6)}이 된다. 다시 점 (4, 6)에 규칙 1을 적용하면, S = {(3, 5), (4, 6), (5, 7)}이 된다. 다음에 점 (4, 6)에 규칙 2를 적용하면 &nbsp;S = {(3, 5), (4, 6), (5, 7), (2, 3)}이 된다. 또 두 점 (3, 5)와 (5, 7)에 규칙 3을 적용하면, S = {(3, 5), (4, 6), (5, 7), (2, 3), (3, 7)}이 된다.&nbsp;</p>

<p>문제는 집합 S를 구성하는 점 (a, b)가 주어질 때, 이 집합에 위의 세 가지 규칙을 임의의 순서로 반복 적용하여 새로운 점 (p, q)가 S에 추가될 수 있는지를 판명하는 것이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 처음에 S에 속하는 점 (a, b)의 좌표인 두 자연수 a와 b가 하나의 공백을 두고 순서대로 주어진다. 그리고 그 다음 다섯 줄에는 각 줄마다 한 개의 점 (p, q)의 두 자연수 p와 q가 하나의 공백을 두고 순서대로 주어진다. 입력되는 모든 점의 좌표는 1 이상 100,000 이하의 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에는 입력 파일에 제시된 다섯 개의 점에 대하여, 각 점이 세 개의 규칙을 반복 적용하여 만들어질 수 있는지의 여부를 출력한다. 가능하면 Y를, 불가능하면 N을 한 줄에 하나씩 순서대로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 5
4 6
2 3
1 1
2 5
4 7
','Y
Y
N
Y
Y
','MATH'),
                                                                                                                (353,'BAEKJOON','https://www.acmicpc.net/problem/2545',2545,'팬케익 먹기','1초','128 MB',6,'<p>오늘 아침 은주는 팬케익을 만들었다. 자 이제 신혜는 이 팬케익을 먹으려고 한다.</p>

<p>은주가 만든 팬케익은 박스 모양이고, 가로 Acm, 세로 Bcm, 높이 Ccm 크기이다.</p>

<p>신혜는 팬케익을 D번 먹으려고 한다. 매번 신혜가 팬케익을 먹으려고 할 때, 은주는 팬케익을 변에 평행하게 자른 후에 신혜에게 준다.</p>

<p>은주는 뛰어난 요리사이기 때문에, 자르는 케익은 모두 두께가 1cm이다.</p>

<p>원래 은주는 팬케익을 다 먹으려고 했으나, 어쩔수 없이 신혜에게 주는 것이다. 따라서, 최대한 많은 양을 남기려고 한다.</p>

<p>신혜가 팬케익을 D번 먹은 후에 남은 케익의 양은 은주가 케익을 자르는 방법에 따라서 달라지게 된다.</p>

<p>A, B, C, D가 주어졌을 때, 신헤가 팬케익을 D번 먹은 후에 남은 팬케익 부피의 가능한 최댓값을 구하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 빈 줄로 구분되며, 다음과 같이 구성되어 있다.</p>

<p>테스트 케이스의 첫째 줄에 A, B, C, D가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 은주가 남길 수 있는 팬케익의 최대 부피를 차례대로 한 줄에 하나씩 출력한다. 이 부피는 부호있는 64비트 정수 범위 안에 들어온다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>두 번째 테스트 케이스를 보자. 왜 정답이 64일까? 가장 먼저 4 * 5 변에 맞춰서 2번 팬케익을 자르면 남은 팬케익은 4*5*4가 된다. 그 다음에 4 * 4 변에 맞추어 팬케익을 자르면 4*4*4가 된다. 따라서 64이다.</p>

				</div>
				</div>','3

4 5 6 0

4 5 6 3

1 1 10 9','120
64
1
','MATH'),
                                                                                                                (354,'BAEKJOON','https://www.acmicpc.net/problem/2546',2546,'경제학과 정원영','1초','128 MB',5,'<p>
	C언어 성적이 나쁜 학생이 C언어를 드랍하고 경제학 원론을 듣는다면, 그 학생은 두 과목 수강생의 평균 IQ를 올려준다.</p>
<p>
	이 말은 어떤 학생이 직접 C언어를 드랍하고 경제학 원론을 수강하면서 증명하였다.</p>

<p>
	각 학생의 IQ가 주어진다. 이때, C언어 수강생 중에 C언어를 드랍하고 경제학 원론을 수강해서 두 과목의 평균 IQ를 모두 올려줄 수 있는 사람의 수를 구하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 빈 줄로 구분되며, 다음과 같이 구성되어 있다.&nbsp;</p>
<p>
	테스트 케이스의 첫째 줄에는 C언어 수강생의 수 N과 경제학 원론 수강생의 수 M이 주어진다. 둘째 줄에는 N+M 개의 숫자가 공백으로 구분되어 주어진다.&nbsp;</p>
<p>
	처음 N개의 숫자는 C언어 수강생의 IQ이며, 다음 M개의 숫자는 경제학 원론 수강생의 IQ이다.</p>

<p>
	N과 M은 200,000보다 작거나 같은 자연수이고, N은 2보다 크거나 같다. IQ는 100,000보다 작거나 같은 자연수이다.</p>


					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스의 정답을 한 줄에 하나씩 차례대로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>
	C언어 수강생의 IQ를 올릴 수 있는 학생은 1번 학생과, 2번 학생이다. 근데, 1번 학생은 너무 멍청해서 경제학 원론을 수강해도 평균 IQ를 올리지 못한다. 하지만, 2번 학생은 할 수 있다.</p>

				</div>
				</div>','1

5 5
100 101 102 103 104
98 100 102 99 101','1','MATH'),
                                                                                                                (355,'BAEKJOON','https://www.acmicpc.net/problem/2547',2547,'사탕 선생 고창영','1초','128 MB',3,'<p>사탕 박사 고창영은 사탕 공장을 그만 두고 초등학교 선생님으로 취직했다.</p>

<p>오늘은 창영이네 반 학생들과 소풍을 가는 날이다. N명의 학생은 모두 가방에 사탕을 가득 담아왔다.</p>

<p>그런데, 사탕을 많이 가져온 학생들이 사탕을 적게 가져온 학생들을 놀리기 시작했다.</p>

<p>창영이는 "얘들아~ 그러면 안되지ㅜㅜ 사탕을 모두 여기에 가져와보렴. 선생님이 공평하게 나눠줄게"</p>

<p>창영이는 모든 학생들이 같은 사탕을 가지게 하려고 한다.</p>

<p>이것이 가능한 일일까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 빈 줄로 구분되어 있고, 다음과 같이 구성되어 있다.</p>

<p>테스트 케이스의 첫째 줄에 학생의 수 N이 주어진다. 다음 N개의 줄에는 각 학생들이 가져온 사탕의 수가 주어진다.</p>

<p>N은 100,000보다 작거나 같은 자연수이고, 사탕의 개수는 0보다 크거나 같은 정수이다. 학생들이 가져온 사탕 개수는 10<sup>18</sup>보다 작거나 같다. (학생들이 가져온 사탕 개수의 합은 10<sup>18</sup>을 넘어갈 수 있다)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 모두에게 같은 사탕을 나눠줄 수 있으면 YES를, 없으면 NO를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2

5
5
2
7
3
8

6
7
11
2
7
3
4','YES
NO','MATH'),
                                                                                                                (356,'BAEKJOON','https://www.acmicpc.net/problem/2551',2551,'두 대표 자연수','2초','256 MB',12,'<p>한국정보중학교의 태환은 여러 개의 자연수가 주어졌을 때, 이를 대표할 수 있는 대표 자연수에 대하여 연구하였다. 태환은 다음과 같은 두 가지 아이디어를 제시하였다.</p>

<p>① 주어진 자연수들과의 차이의 합을 가장 작게 하는 자연수를 대표 자연수라고 하자.</p>

<p>예를 들어, 주어진 자연수들 [4, 3, 2, 2, 10, 10]에 대한 대표 자연수는 3 또는 4이다. 왜냐하면 ｜4-3｜+｜3-3｜+ ｜2-3｜+｜2-3｜+｜10-3｜+｜10-3｜= 1 + 0 + 1 + 1 + 7 + 7 = 17이고, ｜4-4｜+｜3-4｜+｜2-4｜+｜2-4｜+｜10-4｜+｜10-4｜ = 0 + 1 + 2 + 2 + 6 + 6 = 17로 같고, 차이의 합을 최소로 하기 때문이다.</p>

<p>비교를 위하여 5를 생각하여 보면, ｜4-5｜+｜3-5｜+｜2-5｜+｜2-5｜+｜10-5｜+｜10-5｜ = 1 + 2 + 3 + 3 + 5 + 5 = 19로 3 또는 4에 대한 차이의 합보다 더 커짐을 알 수 있다.</p>

<p>② 주어진 자연수들과의 차이의 제곱의 합을 가장 작게 하는 자연수를 대표 자연수라고 하자.</p>

<p>이 경우 위에서 주어진 자연수들에 대한 대표 자연수는 5 이다. 왜냐하면 (4-5)<sup>2</sup> + (3-5)<sup>2</sup> + (2-5)<sup>2</sup> + (2-5)<sup>2</sup> + (10-5)<sup>2</sup> + (10-5)<sup>2</sup> = 73이고, 이 값은 차이의 제곱의 합을 최소로 하기 때문이다.</p>

<p>자연수들이 입력되면 아이디어 ①과 ② 각각에 대한 대표 자연수를 구하는 프로그램을 작성하시오. 대표 자연수는 원래 주어진 자연수들에 반드시 포함되어야 하는 것은 아니라는 것에 유의하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수의 개수 N이 입력된다. N은 1 이상 5,000,000 이하의 수이다. 둘째 줄에 N개의 자연수들이 빈칸을 사이에 두고 입력되며, 이 수들은 모두 1 이상 10,000 이하이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 아이디어 ①에 의한 대표 자연수와 아이디어 ②에 의한 대표 자연수를 빈칸을 사이에 두고 출력한다. 각 아이디어로 구한 대표 자연수가 두 개 이상일 경우 그 중 제일 작은 것을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
4 3 2 2 10 10
','3 5
','MATH'),
                                                                                                                (357,'BAEKJOON','https://www.acmicpc.net/problem/2553',2553,'마지막 팩토리얼 수','0.3초(추가시간없음)','128 MB',9,'<p>N!의 값을 계산한 후에, 0이 아닌 가장 낮은 자리 수를 구하시오.</p>

<p>예를 들어, 4! = 24 이기 때문에, 0이 아닌 가장 낮은 자리 수는 4이다. 또, 5! = 120이기 때문에, 0이 아닌 가장 낮은 자리 수는 2 이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. N은 20,000보다 작거나 같은 자연수 이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 N!의 0이 아닌 마지막 자리수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
','2
','MATH'),
                                                                                                                (359,'BAEKJOON','https://www.acmicpc.net/problem/2554',2554,'마지막 팩토리얼 수2','1초','128 MB',19,'<p>N!의 값을 계산한 후에, 0이 아닌 가장 낮은 자리 수를 구하시오.</p>

<p>예를 들어, 4! = 24 이기 때문에, 0이 아닌 가장 낮은 자리 수는 4이다. 또, 5! = 120이기 때문에, 0이 아닌 가장 낮은 자리 수는 2 이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p class="p1">첫째<span class="s1"> </span>줄에<span class="s1"> N</span>이<span class="s1"> </span>주어진다<span class="s1">. N</span>은<span class="s1">&nbsp;최대 100자리인 자연수이다.</span></p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 N!의 0이 아닌 마지막 자리수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5','2','MATH'),
                                                                                                                (361,'BAEKJOON','https://www.acmicpc.net/problem/2575',2575,'수열','1초','128 MB',12,'<p>우리는 양의 정수들이 나열된 수열 을 구하는 다음과 같은 두 문제를 풀려고 한다. 수열의 길이는 수열에 포함된 정수들의 개수 n이라고 정의한다.&nbsp;</p>

<p>문제 A: 양의 정수 M이 주어질 때, a<sub>1</sub>+a<sub>2</sub>+...+a<sub>n</sub>=M을 만족하면서 a<sub>1</sub>×a<sub>2</sub>×...×a<sub>n</sub>의 값이 가장 크게 되는 수열 을 구하시오. 단, a<sub>1</sub>×a<sub>2</sub>×...×a<sub>n</sub>의 값이 가장 크게 되는 서로 다른 길이의 수열이 두 개 이상 존재할 경우, 수열의 길이 n이 최대인 수열을 구하시오.&nbsp;</p>

<p>문제 B: 양의 정수 M이 주어질 때, a<sub>1</sub>×a<sub>2</sub>×...×a<sub>m</sub>=M을 만족하면서 a<sub>1</sub>+a<sub>2</sub>+...+a<sub>m</sub>의 값이 가장 작게 되는 수열 을 구하시오. 단, a<sub>1</sub>+a<sub>2</sub>+...+a<sub>m</sub>의 값이 가장 작게 되는 서로 다른 길이의 수열이 두 개 이상 존재할 경우, 수열의 길이 m이 최소인 수열을 구한다.</p>

<p>문제 A에서 구한 수열의 길이 n과 문제 B에서 구한 수열의 길이 m을 출력하는 프로그램을 작성하시오.</p>

<p>예를 들어, M=6이면, 문제 A에서 구한 수열은 <3,3>이므로 이 수열의 길이는 2이고, 문제 B에서 구한 수열은 <2,3>이므로 이 수열의 길이는 2이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 M이 주어진다. 1 ≤ M ≤ 1,000,000 이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제 A에서 구한 수열의 길이 n과 문제 B에서 구한 수열의 길이 m을 한 개의 빈칸을 사이에 두고 차례대로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
','2 2
','MATH'),
                                                                                                                (362,'BAEKJOON','https://www.acmicpc.net/problem/2576',2576,'홀수','1초','128 MB',3,'<p>7개의 자연수가 주어질 때, 이들 중 홀수인 자연수들을 모두 골라 그 합을 구하고, 고른 홀수들 중 최솟값을 찾는 프로그램을 작성하시오.</p>

<p>예를 들어, 7개의 자연수 12, 77, 38, 41, 53, 92, 85가 주어지면 이들 중 홀수는 77, 41, 53, 85이므로 그 합은</p>

<p>77 + 41 + 53 + 85 = 256</p>

<p>이 되고,</p>

<p>41 < 53 < 77 < 85</p>

<p>이므로 홀수들 중 최솟값은 41이 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫째 줄부터 일곱 번째 줄까지 한 줄에 하나의 자연수가 주어진다. 주어지는 자연수는 100보다 작다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>홀수가 존재하지 않는 경우에는 첫째 줄에 -1을 출력한다. 홀수가 존재하는 경우 첫째 줄에 홀수들의 합을 출력하고, 둘째 줄에 홀수들 중 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','12
77
38
41
53
92
85
','256
41','MATH'),
                                                                                                                (363,'BAEKJOON','https://www.acmicpc.net/problem/2577',2577,'숫자의 개수','1초','128 MB',4,'<p>세 개의 자연수 A, B, C가 주어질 때 A × B × C를 계산한 결과에 0부터 9까지 각각의 숫자가 몇 번씩 쓰였는지를 구하는 프로그램을 작성하시오.</p>

<p>예를 들어 A = 150, B = 266, C = 427 이라면&nbsp;A × B × C = 150 × 266 × 427 = 17037300 이 되고,&nbsp;계산한 결과 17037300 에는 0이 3번, 1이 1번, 3이 2번, 7이 2번 쓰였다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 A, 둘째 줄에 B, 셋째 줄에 C가 주어진다. A, B, C는 모두 100보다 크거나&nbsp;같고, 1,000보다 작은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에는 A × B × C의 결과에 0 이 몇 번 쓰였는지 출력한다. 마찬가지로 둘째 줄부터 열 번째 줄까지 A × B × C의 결과에 1부터 9까지의 숫자가 각각 몇 번 쓰였는지 차례로 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','150
266
427
','3
1
0
2
0
0
0
2
0
0
','MATH'),
                                                                                                                (364,'BAEKJOON','https://www.acmicpc.net/problem/2581',2581,'소수','1초','128 MB',4,'<p>자연수 M과 N이 주어질 때 M이상 N이하의 자연수 중 소수인 것을 모두 골라 이들 소수의 합과 최솟값을 찾는 프로그램을 작성하시오.</p>

<p>예를 들어 M=60, N=100인 경우 60이상 100이하의 자연수 중 소수는 61, 67, 71, 73, 79, 83, 89, 97 총 8개가 있으므로, 이들 소수의 합은 620이고, 최솟값은 61이 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫째 줄에 M이, 둘째 줄에 N이 주어진다.</p>

<p>M과 N은 10,000이하의 자연수이며, M은 N보다 작거나 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>M이상 N이하의 자연수 중 소수인 것을 모두 찾아 첫째 줄에 그 합을, 둘째 줄에 그 중 최솟값을 출력한다.&nbsp;</p>

<p>단, M이상 N이하의 자연수 중 소수가 없을 경우는 첫째 줄에 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','60
100
','620
61
','MATH'),
                                                                                                                (365,'BAEKJOON','https://www.acmicpc.net/problem/2587',2587,'대표값2','1초','128 MB',4,'<p>어떤 수들이 있을 때, 그 수들을 대표하는 값으로 가장 흔하게 쓰이는 것은 평균이다. 평균은 주어진 모든 수의 합을 수의 개수로 나눈 것이다. 예를 들어 10, 40, 30, 60, 30의 평균은 (10 + 40 + 30 + 60 + 30) / 5 = 170 / 5 = 34가 된다.</p>

<p>평균 이외의 또 다른 대표값으로 중앙값이라는 것이 있다. 중앙값은 주어진 수를 크기 순서대로 늘어 놓았을 때 가장 중앙에 놓인 값이다. 예를 들어 10, 40, 30, 60, 30의 경우, 크기 순서대로 늘어 놓으면</p>

<p style="text-align: center;">10 30 30 40 60</p>

<p>이 되고 따라서 중앙값은 30이 된다.</p>

<p>다섯 개의 자연수가 주어질 때 이들의 평균과 중앙값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄부터 다섯 번째 줄까지 한 줄에 하나씩 자연수가 주어진다. 주어지는 자연수는 100 보다 작은 10의 배수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에는 평균을 출력하고, 둘째 줄에는 중앙값을 출력한다. 평균과 중앙값은 모두 자연수이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10
40
30
60
30
','34
30
','MATH'),
                                                                                                                (368,'BAEKJOON','https://www.acmicpc.net/problem/2588',2588,'곱셈','1초','128 MB',3,'<p>(세 자리 수) × (세 자리 수)는 다음과 같은 과정을 통하여 이루어진다.</p>

<p style="text-align: center;"><img alt="" src=https://www.acmicpc.net/upload/images/f5NhGHVLM4Ix74DtJrwfC97KepPl27s%20(1).png" style="width: 306px; height: 183px; "></p>

<p>(1)과 (2)위치에 들어갈 세 자리 자연수가 주어질 때 (3), (4), (5), (6)위치에 들어갈 값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 (1)의 위치에 들어갈 세 자리 자연수가, 둘째 줄에 (2)의 위치에 들어갈 세자리 자연수가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄부터 넷째 줄까지 차례대로 (3), (4), (5), (6)에 들어갈 값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','472
385
','2360
3776
1416
181720
','MATH'),
                                                                                                                (367,'BAEKJOON','https://www.acmicpc.net/problem/2592',2592,'대표값','1초','128 MB',4,'<p>어떤 수들이 있을 때, 그 수들을 대표하는 값으로 가장 흔하게 쓰이는 것은 평균이다. 평균은 주어진 모든 수의 합을 수의 개수로 나눈 것이다. 예를 들어 10, 40, 30, 60, 30, 20, 60, 30, 40, 50의 평균은 (10 + 40 + 30 + 60 + 30 + 20 + 60 + 30 + 40 + 50) / 10 = 370 / 10 = 37이 된다.</p>

<p>평균 이외의 또 다른 대표값으로 최빈값이라는 것이 있다. 최빈값은 주어진 수들 가운데 가장 많이 나타나는 수이다. 예를 들어 10, 40, 30, 60, 30, 20, 60, 30, 40, 50이 주어질 경우, 30이 세 번, 40과 60이 각각 두 번, 10, 20, 50이 각각 한 번씩 나오므로, 최빈값은 30이 된다.</p>

<p>열 개의 자연수가 주어질 때 이들의 평균과 최빈값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄부터 열 번째 줄까지 한 줄에 하나씩 자연수가 주어진다. 주어지는 자연수는 1,000 보다 작은 10의 배수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에는 평균을 출력하고, 둘째 줄에는 최빈값을 출력한다. 최빈값이 둘 이상일 경우 그 중 하나만 출력한다. 평균과 최빈값은 모두 자연수이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10
40
30
60
30
20
60
30
40
50
','37
30
','MATH'),
                                                                                                                (366,'BAEKJOON','https://www.acmicpc.net/problem/2595',2595,'배수','1초','128 MB',20,'<p>자연수 N의 양의 배수 중 각 자릿수를 이루는 숫자의 종류가 가장 적은 수를 찾으려고 한다.</p>

<p>예를 들어 N이 125인 경우, 125의 배수인 250은 2, 5, 0 세 개의 서로 다른 숫자로 이루어져 있다. 125의 또 다른 배수인 500은 5, 0 두 개의 서로 다른 숫자로 이루어져 있다. 125의 배수 중 각 자릿수를 이루는 숫자의 종류가 가장 적은 수 중 하나는 500이다.</p>

<p>N이 주어질 때 위의 조건을 만족하는 N의 가장 작은 양의 배수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>N은 30,000이하의 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>주어진 N에 대하여 위의 조건을 만족하는 N의 가장 작은 양의 배수를 첫째 줄에 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','125
','500
','MATH'),
                                                                                                                (369,'BAEKJOON','https://www.acmicpc.net/problem/2608',2608,'로마 숫자','1초','128 MB',11,'<p>로마 시대 때는 현재 사용하는 아라비아 숫자가 아닌 다른 방법으로 수를 표현하였다.</p>

<p>로마 숫자는 다음과 같은 7개의 기호로 이루어진다.</p>

<table class="table table-bordered" style="width:48%">
	<thead>
		<tr>
			<th style="width:6%">기호</th>
			<th style="width:6%">I</th>
			<th style="width:6%">V</th>
			<th style="width:6%">X</th>
			<th style="width:6%">L</th>
			<th style="width:6%">C</th>
			<th style="width:6%">D</th>
			<th style="width:6%">M</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>값</td>
			<td>1</td>
			<td>5</td>
			<td>10</td>
			<td>50</td>
			<td>100</td>
			<td>500</td>
			<td>1000</td>
		</tr>
	</tbody>
</table>

<p>수를 만드는 규칙은 다음과 같다.</p>

<ol>
	<li>보통 큰 숫자를 왼쪽에 작은 숫자를 오른쪽에 쓴다. 그리고 그 값은 모든 숫자의 값을 더한 값이 된다. 예를 들어 LX = 50 + 10 = 60 이 되고, MLI = 1000 + 50 + 1 = 1051 이 된다.</li>
	<li>V, L, D는 한 번만 사용할 수 있고 I, X, C, M은 연속해서 세 번까지만 사용할 수 있다. 예를 들어 VV나 LXIIII 와 같은 수는 없다. 그리고 같은 숫자가 반복되면 그 값은 모든 숫자의 값을 더한 값이 된다. 예를 들어 XXX = 10 + 10 + 10 = 30 이 되고, CCLIII = 100 + 100 + 50 + 1 + 1 + 1 = 253 이 된다.</li>
	<li>작은 숫자가 큰 숫자의 왼쪽에 오는 경우는 다음과 같다. IV = 4, IX = 9, XL = 40, XC = 90, CD = 400, CM = 900 을 나타낸다. 이들 각각은 한 번씩만 사용할 수 있다. 그런데 IV 와 IX 는 같이 쓸 수 없으며 XL 과 XC, CD 와 CM 또한 같이 쓸 수 없다. 이들 외에는 작은 숫자가 큰 숫자 왼쪽 어디에도 나올 수 없다. 예를 들어 XCXC 나 CMCD, VX 나 IIX 와 같은 수는 없다. 참고로 LIX = 50 + 9 = 59, CXC = 100 + 90 = 190 이 된다.</li>
	<li>모든 수는 가능한 가장 적은 개수의 로마 숫자들로 표현해야 한다. 예를 들어 60 은 LX 이지 XLXX 가 아니고, 5 는 V 이지 IVI 가 아니다.</li>
</ol>

<p>아래의 예를 참고 하시오.</p>

<ul>
	<li>DLIII = 500 + 50 + 3 = 553</li>
	<li>MCMXL = 1000 + 900 + 40 = 1940</li>
	<li>235 = CCXXXV</li>
	<li>2493 = MMCDXCIII</li>
</ul>

<p>로마 숫자로 이루어진 두 수를 입력받아 그 둘을 더한 값을 아라비아 숫자와 로마 숫자로 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄과 둘째 줄에 하나씩 로마 숫자로 표현된 수가 주어진다. 입력된 각 수는 2000 보다 작거나 같고, 두 수의 합은 4000보다 작다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어진 두 수를 더한 값을 첫째 줄에 아라비아숫자로 출력하고 둘째 줄에는 로마 숫자로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','DLIII
MCMXL
','2493
MMCDXCIII','MATH'),
                                                                                                                (370,'BAEKJOON','https://www.acmicpc.net/problem/2609',2609,'최대공약수와 최소공배수','1초','128 MB',5,'<p>두 개의 자연수를 입력받아 최대 공약수와 최소 공배수를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 두 개의 자연수가 주어진다. 이 둘은 10,000이하의 자연수이며 사이에 한 칸의 공백이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에는 입력으로 주어진 두 수의 최대공약수를, 둘째 줄에는 입력으로 주어진 두 수의 최소 공배수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','24 18
','6
72','MATH'),
                                                                                                                (374,'BAEKJOON','https://www.acmicpc.net/problem/2614',2614,'청개구리','1초','128 MB',25,'<p>항상 말썽을 일으키는 청개구리는 밤새 논으로 뛰어 들어 벼를 밟곤 한다. 농부는 아침에 벼가 쓰러진 상태를 보고 밤새 몇 마리의 청개구리가 논을 지나갔는지 알아내려고 한다.</p>

<p>논에는 벼가 일직선으로 심어져 있다. 각각의 벼가 심어진 지점에 남겨진 흔적을 살피면 그 지점을 몇 마리의 청개구리가 밟고 지나갔는지를 알 수 있다. 예를 들어 벼가 심어진 지점과 각 지점을 밟고 지나간 청개구리의 수가 <그림 1>과 같다고 하자.(원은 벼가 심어진 지점, 원 안의 숫자는 밟고 지나간 청개구리의 수이다.)</p>

<p style="text-align: center;"><img alt="" src=https://www.acmicpc.net/upload/images/Hc7QaflQ.jpg" style="width: 290px; height: 74px; "></p>

<p>모든 청개구리는 논의 왼쪽에서 들어와 일정한 간격으로 뛰어 벼를 밟고 오른쪽으로 나간다. 가장 왼쪽 지점부터 청개구리가 처음 밟는 지점까지의 간격은 청개구리의 뛰는 간격보다 작다. 중간에 방향을 바꾸는 경우는 없으며 벼가 심어진 지점 이외에 다른 지점을 밟는 경우도 없다. 청개구리의 뛰는 간격은 한계가 있어 6이하이고, 또한 논에 들어오면 적어도 두 곳을 밟아야 밖으로 나갈 수 있다.&nbsp;</p>

<p><그림 1>과 같은 모습은 네 마리의 청개구리가 들어와 <그림 2>와 같이 논을 밟고 나가면 생길 수 있다.</p>

<p style="text-align: center;"><img alt="" src=https://www.acmicpc.net/upload/images/Z3QO5SqxY.jpg" style="width: 296px; height: 181px; "></p>

<p>다섯 마리의 청개구리가 들어와 < 그림3> 과 같이 논을 밟고 나가도 <그림 1>과 같은 모습이 가능하다.</p>

<p style="text-align: center;"><img alt="" src=https://www.acmicpc.net/upload/images/ejWQFlbaEMpgdZiAABlMIBKVDmmzwdw.jpg" style="width: 300px; height: 213px; "></p>

<p>벼가 심어진 각 지점마다 지나간 청개구리의 수가 주어질 때, 밤새 지나간 최소 청개구리 수와 이들 각각이 어떻게 지나갔는지 그 경로를 구하여 출력하는 프로그램을 작성 하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 벼가 심어진 지점의 개수 N(2 ≤ N ≤ 200)이 주어진다. 둘째 줄에는 몇 마리의 청개구리가 각각의 지점을 밟고 지나갔는지가 가장 왼쪽 지점부터 차례대로 주어진다. 청개구리가 각 지점을 밟고 지나간 수 사이에는 한 칸의 공백이 있다. 지나간 청개구리의 수가 100 이하인 답이 존재하는 입력만 주어짐이 보장된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에는 밤새 지나간 최소 청개구리 수 M를 출력한다. 둘째 줄부터 M+1줄까지 M개의 줄에는 각각의 청개구리가 처음 밟고 지난간 지점이 왼쪽에서 몇 번째 지점인지와 청개구리의 뛴 간격이 얼마인지를 한 간의 공백을 사이에 두고 차례로 출력한다. 청개구리가 뛴 방법을 출력할 때 출력하는 순서는 상관이 없고 최소 청개구리 수가 되는 방법이 둘 이상일 경우 그중 하나만 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8
2 1 2 1 2 0 3 1','4
1 2
1 3
2 3
3 4','MATH'),
                                                                                                                (378,'BAEKJOON','https://www.acmicpc.net/problem/2622',2622,'삼각형만들기','1초','128 MB',6,'<p>같은 길이의 성냥개비가 여러 개 주어져 있다. 이것들을 평면에 늘어놓아서 삼각형을 만들려고 한다. 삼각형의 한 변은 여러 개의 성냥개비를 직선으로 이어서 만들 수 있지만, 성냥개비를 꺾거나 잘라서 변의 한 부분을 만들 수는 없다. 성냥개비의 개수가 주어졌을 때, 이들 성냥개비를 사용하여 만들 수 있는 서로 다른 삼각형의 개수를 구하는 프로그램을 작성하시오.</p>

<p>예를 들어서 9개의 성냥개비로 만들 수 있는 서로 다른 삼각형은 그림 1과 같이 3가지이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/715ddccd-76f7-4eb5-9153-1eb1b300f64e/-/crop/349x135/0,0/-/preview/"></p>

<p style="text-align: center;">그림 1</p>

<p><주의사항></p>

<ol>
	<li>주어진 성냥개비는 모두 사용하여 하나의 삼각형을 만들어야 한다.</li>
	<li>삼각형을 한 개도 만들 수 없으면 0을 출력한다. 예를 들어서, 주어진 성냥개비의 수가 1, 2, 또는 4인 경우에는 삼각형을 한 개도 만들 수 없다.</li>
	<li>합동인 삼각형들은 같은 삼각형으로 본다. 예를 들어서 성냥개비 5개를 사용하여 만들수 있는 그림 2의 삼각형들은 같은 삼각형으로 본다.</li>
</ol>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/530d48e0-300c-4cd1-a0ba-5f69f0d3aefd/-/crop/335x100/0,0/-/preview/"></p>

<p style="text-align: center;">그림 2</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 성냥개비의 개수가 주어진다. 성냥개비의 개수는 1 이상 50,000 이하이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 만들 수 있는 삼각형의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','9
','3
','MATH'),
                                                                                                                (371,'BAEKJOON','https://www.acmicpc.net/problem/2635',2635,'수 이어가기','1초','128 MB',6,'<p>다음과 같은 규칙에 따라 수들을 만들려고 한다.</p>

<ol>
	<li>첫 번째 수로 양의 정수가 주어진다.</li>
	<li>두 번째 수는 양의 정수 중에서 하나를 선택한다.</li>
	<li>세 번째부터 이후에 나오는 모든 수는 앞의 앞의 수에서 앞의 수를 빼서 만든다. 예를 들어, 세 번째 수는 첫 번째 수에서 두 번째 수를 뺀 것이고, 네 번째 수는 두 번째 수에서 세 번째 수를 뺀 것이다.</li>
	<li>음의 정수가 만들어지면, 이 음의 정수를 버리고 더 이상 수를 만들지 않는다.</li>
</ol>

<p>첫 번째 수로 100이 주어질 때, 두 번째 수로 60을 선택하여 위의 규칙으로 수들을 만들면 7개의 수들 100, 60, 40, 20, 20 , 0, 20이 만들어진다. 그리고 두 번째 수로 62를 선택하여 위의 규칙으로 수들을 만들면 8개의 수들 100, 62, 38, 24, 14, 10, 4, 6이 만들어진다. 위의 예에서 알 수 있듯이, 첫 번째 수가 같더라도 두 번째 수에 따라서 만들어지는 수들의 개수가 다를 수 있다.</p>

<p>입력으로 첫 번째 수가 주어질 때, 이 수에서 시작하여 위의 규칙으로 만들어지는 최대 개수의 수들을 구하는 프로그램을 작성하시오. 최대 개수의 수들이 여러 개일 때, 그중 하나의 수들만 출력하면 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 수가 주어진다. 이 수는 30,000 보다 같거나 작은 양의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에는 입력된 첫 번째 수로 시작하여 위의 규칙에 따라 만들 수 있는 수들의 최대 개수를 출력한다.</p>

<p>둘째 줄에 그 최대 개수의 수들을 차례대로 출력한다. 이들 수 사이에는 빈칸을 하나씩 둔다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','100
','8
100 62 38 24 14 10 4 6
','MATH'),
                                                                                                                (381,'BAEKJOON','https://www.acmicpc.net/problem/2676',2676,'라스칼 삼각형','1초','128 MB',9,'<p>라스칼의 삼각형은 파스칼의 삼각형과 비슷하다.</p>

<p>라스칼의 삼각형에서 가장 윗 줄은 0번 줄이다. i번째 줄에는 i+1개의 숫자가 들어있고, 차례대로 0번부터 i번이다. R(i,j)는 i번 줄의 j번째 숫자이다.</p>

<p>R(n,m) = 0 (n<0 or m<0 or m>n)</p>

<p>각 줄의 첫 번째와 마지막 숫자는 1이다.</p>

<p>R(n,0) = R(n,n) = 1</p>

<p>나머지 값을 채우는 방법은 (서쪽값 * 동쪽값 + 1) / 북쪽값 이다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/p1(1).png" style="height:327px; width:327px"></p>

<p>이것을 수식으로 표현해보면 R(n+1,m+1) = (R(n,m) * R(n,m+1) + 1) / R(n-1,m) 이다.</p>

<p>라스칼의 삼각형에서 R(n,m)을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T(1 <= T <= 1,000)이 주어진다. 각 테스트 케이스는 2개의 숫자 n과 m으로 이루어져 있다. (0 <= m <= n <= 50,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서 한 줄에 하나씩 R(n,m)을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p><img alt="" src=https://www.acmicpc.net/upload/images/rascal_triangle.jpg" style="height:279px; width:500px"></p>

				</div>
				</div>','5
4 0
4 2
45678 12345
12345 9876
34567 11398','1
5
411495886
24383845
264080263','MATH'),
                                                                                                                (372,'BAEKJOON','https://www.acmicpc.net/problem/2678',2678,'에드삭 데이터 디코딩하기','1초','128 MB',7,'<p>EDSAC (ElectronicDelay Storage Automatic Calculator)은 프로그램을 주기억장치에 두고 실행할 수 있는 최초의 디지털 컴퓨터이다. EDSAC에는 가산기를 사용하는 명령어가 내장되어 있으며, 17비트 word 타입과 35비트 double word 타입을 기반으로 계산한다. 또한 입출력을 위해 5비트 텔레타이프 코드를 사용한다.</p>

<p>EDSAC 프로그램은 매우 간단한 어셈블리어로 만들 수 있다. 이 어셈블리어의 각 명령어는 문자 하나와 음이 아닌 십진수 주소값, 그리고 F나 D로 이뤄져 있다. F는 full word타입, D는 double word타입을 의미한다. 예를 들어 명령어 "A 128 F"는 가산기에 메모리 상에서 128 주소에 있는 full word 타입 변수값을 더하라는 의미이다. 이 연산은 이진수로 11100000100000000으로 표현된다. 앞의 11100은 "add"를 의미하는 5비트의 opcode이고, 다음 11비트 00010000000(=128)은 피연산자를 나타내며, 마지막의 0은 full word타입을 연산한다는 것을 의미한다. (double word 타입이라면 마지막 자리는 1이 된다.)</p>

<p>EDSAC 연산은 고정소수점 2의 보수 연산이지만, 단순한 정수 사칙연산이 아닌 현대 컴퓨터와 비슷한 방법으로 수를 연산한다. EDSAC의 연산 장치는 소수점이 가장 높은 자릿수(가장 왼쪽에 있는 자릿수)와 그 다음 자릿수(바로 오른쪽에 있는 자릿수) 사이에 있다고 가정한다. 따라서 17비트 word 타입 x의 표현 범위는 -1.0 ≤ x < 1.0이다.</p>

<table class="table table-bordered" style="width:30%">
	<thead>
		<tr>
			<th>값</th>
			<th>이진수 표현</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>-1.0</td>
			<td>10000000000000000</td>
		</tr>
		<tr>
			<td>1/2</td>
			<td>01000000000000000</td>
		</tr>
		<tr>
			<td>3/4</td>
			<td>01100000000000000</td>
		</tr>
		<tr>
			<td>-1/2</td>
			<td>11000000000000000</td>
		</tr>
	</tbody>
</table>

<p>따라서 가능한 가장 큰 양의 실수는 01111111111111111 = 0.9999847412109375이고, 가장 작은 양의 실수는 00000000000000001 = 2^(-16) = 0.0000152587890625이다.</p>

<p>우연의 일치인지 의도적인 설계인지, opcode add 연산과 텔레타이프 코드 A는 11100으로 일치하며, subtract 연산과 S 역시 01100으로 일치한다. 또한 텔레타이프 코드로 표현할 수 있는 알파벳은 "PQWERTYUIOJ#SZK*?F@D!HNM&amp;LXGABCV"로 모두 32자인데, 5비트 opcode로 표현할 수 있는 수의 개수도 32개이다. (텔레타이프 코드로 P는 00000, Q는 00001로 위 순서대로 증가하여 V는 11111으로 표현된다.) 이 특성 덕분에 EDSAC 어셈블러를 만들기가 쉬워졌다.</p>

<p>그러나 EDSAC 어셈블러에는 특별히 데이터 값을 표현하는 특별한 코드가 없다. 그래서 한 EDSAC 프로그래머는 일반 명령어를 데이터 값 표현에 쓰기로 했다. 예를 들어 상수 3/4(01100000000000000)는 “S 0 F로 표현되며, 1/3(약 00101010101010101)은 “T 682 D”로 표현된다. (T=00101, 682=010101010101)</p>

<p>EDSAC 명령어가 주어졌을 때 이를 해당하는 십진수로 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에 테스트 케이스의 수 P(1 ≤ P ≤ 1000)가 주어진다. 각 테스트 케이스는 "c d s" 형태의 EDSAC 명령어가 한 줄에 주어진다.&nbsp;c는&nbsp;EDSAC 알파벳&nbsp;문자 한 개이며, d는 부호 없는 십진수(0 <= d < 2^11), s는 D 또는 F이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 입력으로 주어진 EDSAC 명령어에 해당하는&nbsp;하나의 십진수를 sb.ddd...의 형태로 출력한다. s는 마이너스 부호이며 음수일 경우에만 쓴다. b는 1 또는 0이며, d는 십진수 자리(0-9)이다. 소수점 아래 자리는 최소 1자리 이상, 최대 16자리 이하이다. 끝의 필요없는 0(Trailing zeros)은 출력하지 않는다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','13
P 0 F
I 0 F
&amp; 0 F
? 0 F
Q 1228 D
P 0 D
V 2047 D
* 2047 D
? 0 D
P 256 F
V 1536 F
T 682 D
T 54 F
','0.0
0.5
-0.5
-1.0
0.0999908447265625
0.0000152587890625
-0.0000152587890625
0.9999847412109375
-0.9999847412109375
0.0078125
-0.015625
0.3333282470703125
0.31414794921875
','MATH'),
                                                                                                                (380,'BAEKJOON','https://www.acmicpc.net/problem/2681',2681,'목장 주인 백승환의 선물','1초','128 MB',15,'<p>
	목장 주인 백승환은 볼록 사변형 모양의 땅을 가지고 있다. 승환이는 이 땅을 자신의 아들 백원, 백조, 백수, 백숙와 딸 백미에게 물려주려고 한다. 아들들은 이 땅을 물려받은 후에 가업을 이어 목장으로 운영하려고 하고, 딸 백미는 물려받은 땅에서 채소를 재배하려고 한다.</p>

<p>
	승환이는 누구에게 어디를 물려줄까 고민하면서 땅을 둘러본 후에, 가운데가 채소를 재배하기에 가장 적합하다고 판단했다. 따라서 다음과 같이 땅을 나누려고 한다.</p>

<p>
	사변형의 꼭짓점 (반시계 방향으로 A, B, C, D)에서 반대쪽 변의 중심 (A, B, C, D)으로 선을 긋는다. 모든 아들은 삼각형 땅을 받게 되고, 딸은 가운데 사변형 땅을 받게 된다.</p>

<p>
	아래 그림을 보면, 백원은 변AB, 변AA, 변BB로 나눠진 땅을 받게 되고, 백조는 변BC, 변BB, 변CC로 나눠진 땅을 받게 된다. 나머지 아들도 이와 같은 방법으로 땅을 받게 된다.</p>

<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/shsh.png" style="width: 384.167px; height: 258.333px;"></p>

<p>
	자 이제 승환이는 자신의 자식들이 받게될 땅의 넓이와 백미의 채소밭 둘레를 구하려고 한다. 백미의 채소밭 둘레를 구하는 이유는 채소밭에 울타리를 만들어, 아들들의 소가 채소밭을 망가뜨리는 것을 막기 위해서이다.</p>

<p>
	이 문제에서 &nbsp;A는 항상 (0, 0)이고, B는 항상 (x, 0)이다.</p>



					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	첫째 줄에 테스트 케이스의 개수 T (1 <= T <= 1,000)이 주어진다. 각 테스트 케이스는 5개의 수로 이루어져있으며, 소수점일수도 있다. 이 값은 순서대로 B의 x좌표, C의 x좌표, C의 y좌표, D의 x좌표, D의 y좌표이다. 입력되는 사변형은 항상 볼록 사변형이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대해 백원, 백조, 백수, 백숙, 백미가 물려받는 땅의 넓이와 백미의 울타리 길이를 출력한다. 땅의 넓이는 소수점 셋째자리까지 출력하고, 울타리 길이는 올림해서 정수로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
200 250 150 -50 200
200 200 100 0 100
201.5 157.3 115.71 -44.2 115.71','5600.000 8661.765 12075.000 8666.667 8746.569 387
4000.000 4000.000 4000.000 4000.000 4000.000 279
4663.113 4663.113 4663.113 4663.113 4663.113 300','MATH'),
                                                                                                                (375,'BAEKJOON','https://www.acmicpc.net/problem/2682',2682,'최대 사이클 1','1초','128 MB',14,'<p>
	P는 1부터 n까지 수로 이루어진 순열이다. 최대 사이클 1은 P(1), P(P(1)), P(P(P(1))), ... 중 최댓값이다.</p>

<p>
	예를 들어 수열 P가 (3, 2, 5, 4, 1, 7, 8, 6) 이라면</p>
<p>
	P(1) = 3</p>
<p>
	P(P(1)) = P(3) = 5</p>
<p>
	P(P(P(1))) = P(5) = 1</p>

<p>
	따라서 3, 5, 1이 반복되며, 최댓값은 5가 된다.</p>

<p>
	정수 n(n > 0)과 k(1 <= k <= n)이 주어졌을 때, 최대 사이클 1의 값이 k인 순열의 개수를 구하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	첫째 줄에 테스트 케이스의 개수 T(1 <= T <= 1,000)가 주어진다. 각 테스트 케이스는 두 개의 정수 n과 k로 이루어져 있다. (1 <= k <= n <= 20)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대해서 1, ... n으로 이루어진 순열 중에 최대 사이클 1의 값이 k인 순열의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
4 1
7 3
10 5
20 7','6
168
86400
11585247657984000','MATH'),
                                                                                                                (376,'BAEKJOON','https://www.acmicpc.net/problem/2685',2685,'님비합','1초','128 MB',8,'<p>
	Nim 게임은 몇 개의 돌무더기를 놓고 매 차례마다 각 플레이어가 한 무더기에서 적게는 1개에서부터 많게는 무더기 전체를 가져가는 게임이다. 일반적인 Nim 게임의 승자는 마지막으로 돌을 가져가는 사람이다. 이 게임에서 가장 널리 알려진 전략은 Nim-2-sum을 이용하는 전략이다.</p>

<p>
	FoodVictory에 신제품 algo90을 납품하던 용태는 FoodVictory의 물류 관리자인 영우의 계속되는 횡포에 견디지 못하고 대결을 신청했다. 영우는 가장 자신있어하는 Nim 게임을 종목으로 선정했고, 용태는 Nim 게임의 전략을 인터넷에 검색했다.</p>

<p>
	Nim 게임의 전략은 다음과 같다.</p>

<p>
	두 개의 음이 아닌 정수 X와 Y의 Nim-B-sum (B진법 nim sum)을 NimSum (B, X, Y)라고 하자. 이 값은 다음과 같이 계산할 수 있다.</p>

<p>
	1) X와 Y를 B진법으로 나타낸다.</p>
<p>
	2) Nim-B sum의 각 자리 수는 X와 Y의 B진법 표기에서의 각 자리의 합을 B로 나눈 나머지이다.</p>

<p>
	예를 들면,</p>
<p>
	NimSum (2, 123, 456) = 1111011 ¤ 111001000 = 110110011 = 435</p>
<p>
	NimSum (3, 123, 456) = 11120 ¤ 121220 = 102010 = 300</p>
<p>
	NumSum (4, 123, 456) = 1323 ¤ 13020 = 10303 = 307</p>

<p>
	일반적인 Nim 게임의 전략은 모든 크기의 돌무더기에 대해 Nim-2 Sum T를 계산하는 것이다. 언제든 용태가 T=0이 되게 차례를 끝낸다면, 용태가 반드시 승리하게 된다. 그리고 영우가 아무리 T를 0이 되지 않게 남긴다고 해도 항상 T를 다시 0으로 만들 수 있는 방법이 존재한다. 이것은 각 무더기마다 NimSum (2, T, PS)로 계산하면 되는데 (PS = 무더기에 있는 돌의 수), 이 값이 PS보다 작다면, PS와 Nim-2 sum의 차이를 구하고, 이 값만큼 돌을 가져가면 된다.</p>

<p>
	NimSum을 손으로 계산하는 것은 힘들기 때문에 곤란해진 용태를 위해 NimSum (B, X, Y)를 계산하는 프로그램을 짜주자.</p>



					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">

<p>
	입력의 첫 번째 줄에는 테스트 케이스의 수를 나타내는 T가 주어진다. (1 ≤ T ≤ 1000), 그리고 각 테스트 케이스의 첫 줄에는 B, X, Y를 나타내는 정수가 공백을 사이에 두고 주어진다. (2 ≤ B ≤ 2000000, 0 ≤ X ≤ 2000000, 0 ≤ Y ≤ 2000000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스마다 NimSum (B, X, Y)의 10진수 표현을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
2 123 456
3 123 456
4 123 456
5 123 456
','435
300
307
429
','MATH'),
                                                                                                                (373,'BAEKJOON','https://www.acmicpc.net/problem/2694',2694,'합이 같은 구간','1초','128 MB',13,'<p>어떤 수열이 있을 때, 순서를 유지하면서 적절히 그룹으로 나누면서, 각 그룹에 들어있는 수의 합을 같게 만들 수 있다.</p>

<p>예를 들어, 2, 5, 1, 3, 3, 7은 (2, 5), (1, 3, 3), (7)와 같이 나누면 각 그룹에 들어있는 수의 합이 7로 모두 같아진다.</p>

<p>양의 정수로 이루어진 수열이 주어졌을 때, 이를 합이 같은 구간으로 나누는 방법은&nbsp;여러 가지가 있다. 이때, 합의 최솟값을 구하시오.</p>

<p>참고로 수열을 통째로 그룹 1개에 넣을 수 있다. 그럼 이때, 수의 합은 수열의 합이 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T(1 ≤&nbsp;T ≤ 50)가 주어진다. 각 테스트 케이스는 첫째 줄에 수열의 크기 M이 주어진다. (1 ≤&nbsp;M ≤&nbsp;10,000) 그 다음 줄부터는 그 수열에 들어있는 수가 주어지고, 한 줄에 10개씩 나누어서 주어진다. 따라서 마지막 줄은 수가 10개가 아닐 수도 있다. 수는 10,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 한 줄에 하나씩 문제에서 설명한 가장 작은 합을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
6
2 5 1 3 3 7
6
1 2 3 4 5 6
20
1 1 2 1 1 2 1 1 2 1
1 2 1 1 2 1 1 2 1 1','7
21
2
','MATH'),
                                                                                                                (377,'BAEKJOON','https://www.acmicpc.net/problem/2702',2702,'초6 수학','1초','128 MB',4,'<p>
	두 정수 a와 b 최소공배수는 두 수의 공통된 배수 중 가장 작은 수이고, 최대공약수는 두 수의 공통된 약수중 가장 큰 수이다.</p>

<p>
	a와 b가 주어졌을 때, 최소공배수와 최대공약수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	첫째 줄에 테스트 케이스의 개수 T(1<=T<=1,000)가 주어진다. 각 테스트 케이스는 두 정수 a와 b로 이루어져 있고, 공백으로 구분되어 있다. (1 <= a,b <= 1,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대해 최소공배수와 최대공약수를 차례대로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
5 10
7 23
42 56','10 5
161 1
168 14','MATH'),
                                                                                                                (379,'BAEKJOON','https://www.acmicpc.net/problem/2709',2709,'가장 작은 K','1초','128 MB',18,'<p>R이 주어졌을 때, 마지막 R자리가 1과 2로만 이루어진 가장 작은 2<sup>k</sup>를 구하는 프로그램을 작성하시오.</p>

<p>예를 들어, 2<sup>9</sup> = 512이고, 2<sup>89</sup> = 618970019642690137449562112 이다. 2<sup>9</sup>는 마지막 2자리가 1과 2로 이루어져 있고, 2<sup>89</sup>는 마지막 4자리가 1과 2로만 이루어져 있다.</p>

<p>R이 6일때까지 답을 구해보면 다음과 같다.</p>

<table class="table table-bordered" style="width:30%;">
	<thead>
		<tr>
			<th style="width:10%;">R</th>
			<th style="width:10%;">가장 작은 k</th>
			<th style="width:10%;">2<sup>k</sup></th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>1</td>
			<td>1</td>
			<td>2</td>
		</tr>
		<tr>
			<td>2</td>
			<td>9</td>
			<td>512</td>
		</tr>
		<tr>
			<td>3</td>
			<td>89</td>
			<td>...112</td>
		</tr>
		<tr>
			<td>4</td>
			<td>89</td>
			<td>...2112</td>
		</tr>
		<tr>
			<td>5</td>
			<td>589</td>
			<td>...22112</td>
		</tr>
		<tr>
			<td>6</td>
			<td>3089</td>
			<td>...122112</td>
		</tr>
	</tbody>
</table>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T(1 ≤ T ≤ 50)가 주어진다. 각 테스트 케이스는 정수 1개로 이루어져 있고, 이 수는 R(1 ≤ R ≤ 20)이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 한 줄에 하나씩 마지막 R자리가 1과 2로만 이루어진 가장 2<sup>k</sup>의 k를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
1
2
4
5
7
15
','1
9
89
589
3089
11687815589','MATH'),
                                                                                                                (385,'BAEKJOON','https://www.acmicpc.net/problem/2710',2710,'삼각형 정원','1초','128 MB',17,'<p>
	선영이의 조경회사는 컴퓨터 geek을 위한 정원 관리로 유명하다. 그 중 가장 유명한 것은 정삼각형 모양의 테라스에 원형 풀장이 내접하고 있는 형태이다.</p>

<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/sy1.png" style="width: 238px; height: 198px;"></p>

<p>
	그러나 선영이의 일부 고객은 정원 가운데 정삼각형 모양을 만드는 대신, 정원의 구석이나 비스듬한 면에 테라스를 만들기를 원한다. 선영이는 임의의 삼각형 모양에 대해 아래 그림과 같이 타원형의 풀장이 삼각형 변의 중점에 접하는 형태를 제안했다.</p>

<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/sy2.png" style="width: 374.167px; height: 193.333px;"></p>

<p>
	타원의 두 초점에 막대를 꽂으면, 막대에 줄을 연결해 타원을 그릴 수 있다. 삼각형의 세 꼭짓점의 좌표가 주어졌을 때, 두 초점의 좌표와 필요한 줄의 길이를 출력하는 프로그램을 작성하라. (줄의 길이는 두 초점에서 타원 위의 임의의 점까지의 길이의 합이다.)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력의 첫 줄에는 테스트의 개수인 정수 N(1 ≤ N ≤ 1000)이 주어진다.</p>

<p>
	각각의 테스트에는 세 점의 좌표인 실수 x1, y1, x2, y2, x3, y3가 공백으로 구분되어 한 줄에 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각각의 테스트에 대해 한 줄에 fx1, fy1, fx2, fy2, rl(fx1<=fx2, fx1=fx2이면 fy1<=fy2)을 공백으로 구분하여 소수 둘째 자리까지 반올림하여 출력한다. (fx1, fy1)과 (fx2, fy2)는 각각 타원의 초점이며, rl은 줄의 길이이다. 타원이 원일 경우 두 초점은 같다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
100 100 200 273.2051 300 100
100 100 100 300 300 100
100 200 100 300 300 100
','200.00 157.71 200.00 157.76 115.47
119.53 213.81 213.81 119.53 163.30
103.94 253.14 229.40 146.86 170.51
','MATH'),
                                                                                                                (382,'BAEKJOON','https://www.acmicpc.net/problem/2712',2712,'미국 스타일','1초','128 MB',3,'<p style="text-align: center;"><iframe allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/9bZkp7q19f0" width="560"></iframe></p>

<p>싸이가 강남 스타일로 2012년 10월 4일 현재 빌보드 핫100 차트 2위에 2주 연속 랭크되고 있다. 싸이는 곧 다시 미국으로 가서 해외 활동할 예정이라고 한다.</p>

<p>하지만 미국은 한국과 사용하는 단위 체계가 다르다. 한국은 미터법을 사용하지만, 미국은 미국 단위계를 사용한다. 싸이를 위해 단위를 바꾸어 주는 프로그램을 작성하시오.</p>

<p>아래 표를 참고해서 계산하면 되고, 킬로그램 <-> 파운드, 리터 <-> 갤런만 변환하면 된다.</p>

<table class="table table-bordered" style="width:100%">
	<thead>
		<tr>
			<th style="width:34%">종류</th>
			<th style="width:33%">미터법</th>
			<th style="width:33%">미국 단위계</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>무게</td>
			<td>1.000 킬로그램</td>
			<td>2.2046 파운드</td>
		</tr>
		<tr>
			<td> </td>
			<td>0.4536 킬로그램</td>
			<td>1.0000 파운드</td>
		</tr>
		<tr>
			<td>부피</td>
			<td>1.0000 리터</td>
			<td>0.2642 갤런</td>
		</tr>
		<tr>
			<td> </td>
			<td>3.7854 리터</td>
			<td>1.0000 갤런</td>
		</tr>
	</tbody>
</table>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T(1<=T<=1,000)가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있다. 첫 번째 숫자는 값이고, 두 번째 등장하는 문자는 단위이다. 값은 소수일 수도 있고, 이 경우 소수점 아래 최대 넷째 자리까지 주어진다. 단위는 kg, lb, l, g 중 하나이며, 순서대로 킬로그램, 파운드, 리터, 갤런이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서 바꾼 값과 단위를 출력한다. 값은 반올림해서 소수점 4째자리까지 출력한다. 단위는 kg, lb, l, g중 하나이며, 설명은 입력 설명에 있다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1 kg
2 l
7 lb
3.5 g
0 l
','2.2046 lb
0.5284 g
3.1752 kg
13.2489 l
0.0000 g
','MATH'),
                                                                                                                (384,'BAEKJOON','https://www.acmicpc.net/problem/2720',2720,'세탁소 사장 동혁','1초','128 MB',3,'<p>미국으로 유학간 동혁이는 세탁소를 운영하고 있다. 동혁이는 최근에 아르바이트로 고등학생 리암을 채용했다.</p>

<p>동혁이는 리암에게 실망했다.</p>

<p>리암은 거스름돈을 주는 것을 자꾸 실수한다.</p>

<p>심지어 \$0.5달러를 줘야하는 경우에 거스름돈으로 \$5달러를 주는것이다!</p>

<p>어쩔수 없이 뛰어난 코딩 실력을 발휘해 리암을 도와주는 프로그램을 작성하려고 하지만, 디아블로를 하느라 코딩할 시간이 없어서 이 문제를 읽고 있는 여러분이 대신 해주어야 한다.</p>

<p>거스름돈의 액수가 주어지면 리암이 줘야할 쿼터(Quarter, \$0.25)의 개수, 다임(Dime, \$0.10)의 개수, 니켈(Nickel, \$0.05)의 개수, 페니(Penny, \$0.01)의 개수를 구하는 프로그램을 작성하시오. 거스름돈은 항상 \$5.00 이하이고, 손님이 받는 동전의 개수를 최소로 하려고 한다. 예를 들어, \$1.24를 거슬러 주어야 한다면, 손님은 4쿼터, 2다임, 0니켈, 4페니를 받게 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 거스름돈 C를 나타내는 정수 하나로 이루어져 있다. C의 단위는 센트이다. (1달러 = 100센트) (1<=C<=500)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트케이스에 대해 필요한 쿼터의 개수, 다임의 개수, 니켈의 개수, 페니의 개수를 공백으로 구분하여 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p><iframe frameborder="0" height="480" src="https://www.youtube.com/embed/5K_cfrX1lrs" width="853"></iframe></p>

				</div>
				</div>','3
124
25
194','4 2 0 4
1 0 0 0
7 1 1 4','MATH'),
                                                                                                                (386,'BAEKJOON','https://www.acmicpc.net/problem/2721',2721,'삼각수의 합','1초','128 MB',3,'<p>n번째 삼각수, T(n)은 1부터 n까지의 합이다. T(n) = 1 + ... + n. 이것은 삼각형 모양으로 표현할 수 있다. 아래 그림은 T(4)를 나타낸 것이다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/tsum.png" style="height:90px; width:87px"></p>

<p>다음과 같은 식을 통해 가중치를 부여한 삼각수의 합을 구할 수 있다.</p>

<p>W(n) = Sum[k=1..n; k*T(k+1)]</p>

<p>n이 주어졌을 때, W(n)을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 정수 n 하나로 이루어져 있다. (1<=n<=300)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 W(n)을 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
3
4
5
10','45
105
210
2145','MATH'),
                                                                                                                (383,'BAEKJOON','https://www.acmicpc.net/problem/2723',2723,'눌러서 잠금 해제','1초','128 MB',13,'<p>
	한국 최고의 자물쇠 회사 마선영은 도어락을 생산한다. 이 도어락은 B(1 ≤ B ≤ 11)개의 버튼으로 이루어졌으며 각 버튼은 1부터 B까지 이름 붙여 있다. 도어락은 버튼 조합으로 이뤄진 비밀번호를 올바른 순서로 누른 후 손잡이를 돌리면 마법처럼-_- 열린다</p>

<p>
	버튼 조합은 한 개 이상의 버튼을 동시에 누르는 것이다. 비밀번호는 최소 한 개 이상의 이러한 버튼 조합들로 이뤄져 있다. 어떤 버튼을 한 조합에서 사용하면, 다른 조합에서는 사용할 수 없다. 아래는 B=8인 예이다.</p>

<p>
	(1-2-3)(4)(7-8)</p>

<p>
	위는 (1-2-3), (4), (7-8)의 조합 세 개로 이뤄진 올바른 비밀번호이다. 버튼 5와 6은 이 비밀번호에 사용하지 않았다.</p>

<p>
	(1-2-3)(2-4)(5-6)</p>

<p>
	위는 버튼 2가 조합 (1-2-3)과 (2-4)에 두 번 나왔기 때문에 올바른 비밀번호가 아니다.</p>

<p>
	마선영의 CEO인 김선영은 정선영에게 B개의 버튼이 있을 때, 가능한 비밀번호의 수를 구하는 프로그램을 작성해 달라고 부탁했다. 프로그램은 고객의 도어락 리스트를 받아 주문 번호와 B값, 가능한 비밀번호 수를 출력해야 한다. 도어락 리스트는 최소 한 개, 최대 백 개의 도어락을 포함하고 있다.</p>

<p>
	정선영이 만들어야 하는 프로그램을 우리가 대신 만들어보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	첫 줄은 도어락 개수인 정수 N(1 ≤ N ≤ 100)이 주어진다. 다음 줄부터 N개의 도어락 버튼의 개수 B가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각각의 도어락마다 가능한 비밀번호의 개수를 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
3
4
3
','25
149
25
','MATH'),
                                                                                                                (389,'BAEKJOON','https://www.acmicpc.net/problem/2725',2725,'보이는 점의 개수','1초','128 MB',9,'<p>
	(0,0)에서 보이는 (x,y)의 개수를 구하려고 한다.(x,y >= 0, 정수)</p>

<p>
	(0,0)에서 (x,y)가 보이려면 (0,0)과 (x,y)를 연결하는 직선이 다른 점을 통과하지 않아야 한다. 예를 들어 (4,2)는 (0,0)에서 보이지 않는다. 그 이유는 (0,0)과 (4,2)를 연결하는 직선이 (2,1)을 통과하기 때문이다. 아래 그림은 0 <= x,y<=5인 경우에 (0,0)에서 보이는 점의 개수이다. 단, (0,0)은 계산하지 않는다.</p>

<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/qqwq.png" style="width: 221px; height: 208px; "></p>

<p>
	N이 주어졌을 때, 원점에서 보이는 (x,y) 좌표의 개수를 출력하시오. (0 <= x,y <= N)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	첫째 줄에 테스트 케이스의 개수 C(1<=C<=1,000)가 주어진다. 각 테스트 케이스는 자연수 N(1<=N<=1,000) 하나로 이루어져 있고, 한 줄에 하나씩 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대해 한 줄에 하나씩 (0,0)에서 보이는 점(x,y)의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
2
4
5
231','5
13
21
32549','MATH'),
                                                                                                                (396,'BAEKJOON','https://www.acmicpc.net/problem/2726',2726,'삼각 N-Queen','1초','128 MB',16,'<p>
	한 변에 N칸이 있는 삼각형 모양의 체스판이 있다. 이 체스판에서 퀸은 변과 평행하면서 퀸을 포함하는 줄의 모든 칸을 공격할 수 있다. 예를 들어, 아래 그림에서 검정색 칸이 퀸일때, 퀸이 공격할 수 있는 칸을 표시해 놓은 것이다.</p>

<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/nq1.png" style="width: 280px; height: 244px;"></p>

<p>
	삼각 N-Queen 문제는 한 변에 N칸이 있는 삼각형 체스판에서 퀸을 서로 공격할 수 없게 최대한 배치하는 것이다. 아래 그림은 N=6일때, 퀸을 서로 공격할 수 없게 최대한 배치한 것이다.</p>

<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/nq2.png" style="width: 277px; height: 245px;"></p>

<p>
	삼각형 한 변의 칸의 수가 N이면, 항상 floor((2*N+1)/3)개의 퀸을 서로 공격할 수 없게 배치할 수 있다.</p>

<p>
	N이 주어졌을 때, 삼각 N-Queen문제를 푸는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	첫째 줄에 테스트 케이스의 개수 C(1 ≤ C ≤ 1000)가 주어진다. 각 테스트 케이스는 N(1 ≤ N ≤ 1000)을 포함하고 있으며, 한 줄로 이루어져 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대해서, 첫 줄에 놓을 수 있는 퀸의 최대 개수를 출력한다. 둘째 줄부터 N개의 줄에는 퀸의 위치를 출력한다. 제일 윗 줄의 번호는 1이고, 그 줄의 가장 왼쪽 칸의 번호는 1이다. 위치는 줄 번호와 열 번호를 공백으로 구분해서 한 줄에 하나씩 출력하면 된다. 가능한 배치가 여러 가지인 경우에는 아무거나 출력하면 된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
3
6
9
10
14
18
','2
1 1
3 2
4
3 1
4 3
5 5
6 2
6
4 1
5 3
6 5
7 7
8 2
9 4
7
4 1
5 3
6 5
7 7
8 2
9 4
10 6
9
6 1
7 3
8 5
9 7
10 9
11 11
12 2
13 4
14 6
12
7 1
8 3
9 5
10 7
11 9
12 11
13 13
14 2
15 4
16 6
17 8
18 10
','MATH'),
                                                                                                                (387,'BAEKJOON','https://www.acmicpc.net/problem/2727',2727,'2,3 거듭제곱의 합','1초','128 MB',17,'<p>모든 자연수 N은 (2<sup>a</sup>)(3<sup>b</sup>)의 합으로 나타낼 수 있다. 이때, 서로 약수/배수 관계인 두 항이 있어서는 안 된다.</p>

<ul>
	<li>1 = (2<sup>0</sup>)(3<sup>0</sup>)</li>
	<li>7 = (2<sup>2</sup>)(3<sup>0</sup>) + (2<sup>0</sup>)(3<sup>1</sup>)</li>
	<li>31 = (2<sup>4</sup>)(3<sup>0</sup>) + (2<sup>0</sup>)(3<sup>2</sup>) + (2<sup>1</sup>)(3<sup>1</sup>) = (2<sup>2</sup>)(3<sup>0</sup>) + (2<sup>0</sup>)(3<sup>3</sup>)</li>
</ul>

<p>N이 주어졌을 때, 이를 (2<sup>a</sup>)(3<sup>b</sup>)의 합으로 나타내는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T(1 ≤ T ≤ 1,000)가 주어진다. 각 테스트 케이스는 한줄로 이루어져 있고, 정수 N이 주어진다. (1 ≤&nbsp;N < 2<sup>31</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 첫째 줄에는 항의 개수 M을 출력한다. 그다음 M개의 줄에 걸쳐 합을 구성하는 항을 출력한다. 어떤 항이 (2<sup>a</sup>)(3<sup>b</sup>)일때, a b를 공백으로 구분하여 출력하면 된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
1
7
31
7776
531441
123456789
','1
0 0
2
2 0
0 1
3
4 0
0 2
1 1
1
5 5
1
0 12
8
3 13
4 12
2 15
7 8
9 6
0 16
10 5
15 2
','MATH'),
                                                                                                                (388,'BAEKJOON','https://www.acmicpc.net/problem/2729',2729,'이진수 덧셈','1초','128 MB',5,'<p>이진수 덧셈은 매우 간단하고, 십진수 덧셈과 비슷하게 하면 된다. 십진수 덧셈을 할 때는, 오른쪽부터 왼쪽으로 차례대로 숫자 하나씩 더하면 된다. 이진수 덧셈도 이와 비슷하게 하면 된다. 십진수 덧셈은 외워야 할 덧셈이 많지만, 이진수 덧셈은 아래와 같이 5가지만 기억하면 된다.</p>

<ul>
	<li>0 + 0 = 0</li>
	<li>1 + 0 = 1</li>
	<li>0 + 1 = 1</li>
	<li>1 + 1 = 10</li>
	<li>1 + 1 + 1 = 11</li>
</ul>

<p>두 이진수가 주어졌을 때, 그 합을 이진수로 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 수 T(1<=T<=1,000)가 주어진다. 각 테스트 케이스는 숫자 2개로 이루어져있다. 이 숫자는 0과 1로만 이루어진 이진수이며, 길이는 최대 80자리이다. (덧셈 결과는 81자리가 될 수도 있다) 이진수는 0으로 시작할 수도 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 입력으로 주어진 두 이진수의 합을 구해 이진수로 출력한다. 숫자의 앞에 불필요한 0이 붙으면 안 된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1001101 10010
1001001 11001
1000111 1010110
','1011111
1100010
10011101
','MATH'),
                                                                                                                (390,'BAEKJOON','https://www.acmicpc.net/problem/2731',2731,'1379와 세제곱','1초','128 MB',16,'<p>1, 3, 7, 9로 끝나는 숫자 S가 주어진다. 이때, 세제곱했을 때, S로 끝나는 수가 반드시 존재한다.</p>

<p>예를들어, S가 123이면, 947을 세제곱하면 849278123이 되고, 이 수는 123으로 끝난다.</p>

<p>S가 주어졌을 때, 세제곱했을 때 S로 끝나는 숫자를 찾아 출력하는 프로그램을 작성하시오. 이때 x의 길이는 S의 길이보다 작거나 같아야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 둘째 줄 부터 T개 줄에는 테스트 케이스의 정보가 주어진다. 각 테스트 케이스는 숫자 하나로 이루어져 있고, 이 수는 문제에서 설명한 S이다. S는 1, 3, 7, 9로 끝나며, 최대 10자리이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 한 줄에 하나씩 세제곱했을 때 S가 되는 수 x를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
123
1234567
435621
9876543213','947
2835223
786941
2916344917','MATH'),
                                                                                                                (395,'BAEKJOON','https://www.acmicpc.net/problem/2734',2734,'드럼통 쌓기','1초','128 MB',12,'<p>드럼통을 직사각형 쓰레기통에 예쁘게 쌓아보려고 한다. 아랫줄을 제외한 모든 실린더는 항상 자기 바로 아랫줄의 실린더 2개와 닿아있다. 가장 밑 줄의 실린더는 쓰레기통 벽에 닿아있기 때문에, 더이상 굴러가지 않는다. 마지막줄을 제외한 모든 줄은 자기 아랫줄의 드럼통 개수보다 하나 적은 드럼통이 있다.</p>

<p>드럼통의 반지름은 항상 1이다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/Screen%20Shot%202012-10-11%20at%20%EC%98%A4%ED%9B%84%2010_22_56.png" style="height: 214.167px; width: 333.333px;"></p>

<p>가장 위에 있는 실린더의 중심 좌표를 구하는 프로그램을 작성하시오. 값을 계산할 때, double을 사용하면 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T(T<=1,000)가 주어진다. 각 테스트 케이스는 한 줄로 구성되어 있다. 첫 번째 숫자는 드럼통의 개수 N이 주어진다. 이어서 들어오는 N개의 숫자는 각 드럼통의 중심 x좌표이다. (드럼통의 바닥과 접하므로 y좌표는 항상 1이다). N은 1보다 크거나 같고, 10보다 작거나 같다.&nbsp;</p>

<p>인접한 두 드럼통의 중심거리는 적어도 2.0이고, 많아야 3.4이다. (2.0인 이유는 드럼통이 겹치지 않기 위해서, 3.4인 이유는 k줄에 있는 드럼통과 k-2줄에 있는 드럼통이 서로 접하지 않게 하기 위해서)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 한 줄에 하나씩 가장 위에 있는 드럼통의 중심좌표를 공백으로 구분하여 x좌표와 y좌표 순서대로 소수점 4자리까지 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
4 1.0 4.4 7.8 11.2
1 1.0
6 1.0 3.0 5.0 7.0 9.0 11.0
10 1.0 3.0 5.0 7.0 9.0 11.0 13.0 15.0 17.0 20.4
5 1.0 4.4 7.8 11.2 14.6
','6.1000 4.1607
1.0000 1.0000
6.0000 9.6603
10.7000 15.9100
7.8000 5.2143
','MATH'),
                                                                                                                (391,'BAEKJOON','https://www.acmicpc.net/problem/2737',2737,'연속 합','1초','128 MB',12,'<p>대부분의 양의 정수는 적어도 2개 이상의 연속된 자연수의 합으로 나타낼 수 있다.</p>

<p>예를 들면 다음과 같다.</p>

<p>6 = 1 + 2 + 3</p>

<p>9 = 5 + 4 = 4 + 3 + 2</p>

<p>하지만, 8은 연속된 자연수 합으로 나타낼 수가 없다.</p>

<p>자연수 N이 주어졌을 때, 이 수를 적어도 2개 이상의 연속된 자연수의 합으로 나타낼 수 있는 경우의 수를 출력하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 정수 하나로 이루어져 있다. 이 정수는 문제에서 설명한 N이며, 2<sup>31</sup>보다 작다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서 N을 적어도 2개 이상의 연속된 자연수의 합으로 나타내는 경우의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7
6
9
8
1800
987654321
987654323
987654325
','1
2
0
8
17
1
23
','MATH'),
                                                                                                                (392,'BAEKJOON','https://www.acmicpc.net/problem/2738',2738,'행렬 덧셈','1초','128 MB',1,'<p>N*M크기의 두 행렬 A와 B가 주어졌을 때, 두 행렬을 더하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 행렬의 크기 N 과 M이 주어진다. 둘째 줄부터 N개의 줄에 행렬 A의 원소 M개가 차례대로 주어진다. 이어서 N개의 줄에 행렬 B의 원소 M개가 차례대로 주어진다. N과 M은 100보다 작거나 같고, 행렬의 원소는 절댓값이 100보다 작거나 같은 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄부터 N개의 줄에 행렬 A와 B를 더한 행렬을 출력한다. 행렬의 각 원소는 공백으로 구분한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 3
1 1 1
2 2 2
0 1 0
3 3 3
4 4 4
5 5 100
','4 4 4
6 6 6
5 6 100
','MATH'),
                                                                                                                (393,'BAEKJOON','https://www.acmicpc.net/problem/2739',2739,'구구단','1초','128 MB',1,'<p>N을 입력받은 뒤, 구구단 N단을 출력하는 프로그램을 작성하시오. 출력 형식에 맞춰서 출력하면 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. N은 1보다 크거나 같고, 9보다 작거나 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력형식과 같게 N*1부터 N*9까지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
','2 * 1 = 2
2 * 2 = 4
2 * 3 = 6
2 * 4 = 8
2 * 5 = 10
2 * 6 = 12
2 * 7 = 14
2 * 8 = 16
2 * 9 = 18
','MATH'),
                                                                                                                (394,'BAEKJOON','https://www.acmicpc.net/problem/2740',2740,'행렬 곱셈','1초','128 MB',6,'<p>N*M크기의 행렬 A와 M*K크기의 행렬 B가 주어졌을 때, 두 행렬을 곱하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 행렬 A의 크기 N 과 M이 주어진다. 둘째 줄부터 N개의 줄에 행렬 A의 원소 M개가 순서대로 주어진다. 그 다음 줄에는 행렬 B의 크기 M과 K가 주어진다. 이어서 M개의 줄에 행렬 B의 원소 K개가 차례대로 주어진다. N과 M, 그리고 K는 100보다 작거나 같고, 행렬의 원소는 절댓값이 100보다 작거나 같은 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄부터 N개의 줄에 행렬 A와 B를 곱한 행렬을 출력한다. 행렬의 각 원소는 공백으로 구분한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 2
1 2
3 4
5 6
2 3
-1 -2 0
0 0 3
','-1 -2 6
-3 -6 12
-5 -10 18
','MATH'),
                                                                                                                (397,'BAEKJOON','https://www.acmicpc.net/problem/2745',2745,'진법 변환','1초','128 MB',4,'<p>B진법 수&nbsp;N이 주어진다. 이 수를 10진법으로 바꿔 출력하는 프로그램을 작성하시오.</p>

<p>10진법을 넘어가는 진법은 숫자로 표시할 수 없는 자리가 있다. 이런 경우에는 다음과 같이 알파벳 대문자를&nbsp;사용한다.</p>

<p>A: 10, B: 11, ..., F: 15, ..., Y: 34, Z: 35</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 B가 주어진다. (2 ≤ B ≤ 36)</p>

<p>B진법 수 N을 10진법으로 바꾸면, 항상 10억보다 작거나 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 B진법 수&nbsp;N을 10진법으로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','ZZZZZ 36
','60466175
','MATH'),
                                                                                                                (398,'BAEKJOON','https://www.acmicpc.net/problem/2747',2747,'피보나치 수','1초(추가시간없음)','128 MB',4,'<p>피보나치 수는 0과 1로 시작한다. 0번째 피보나치 수는 0이고, 1번째 피보나치 수는 1이다. 그 다음 2번째 부터는 바로 앞 두 피보나치 수의 합이 된다.</p>

<p>이를 식으로 써보면 F<sub>n</sub> = F<sub>n-1</sub> + F<sub>n-2</sub> (n ≥ 2)가 된다.</p>

<p>n=17일때 까지 피보나치 수를 써보면 다음과 같다.</p>

<p>0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597</p>

<p>n이 주어졌을 때, n번째 피보나치 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n이 주어진다. n은 45보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 n번째 피보나치 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10
','55
','MATH'),
                                                                                                                (399,'BAEKJOON','https://www.acmicpc.net/problem/2748',2748,'피보나치 수 2','1초','128 MB',5,'<p>피보나치 수는 0과 1로 시작한다. 0번째 피보나치 수는 0이고, 1번째 피보나치 수는 1이다. 그 다음 2번째 부터는 바로 앞 두 피보나치 수의 합이 된다.</p>

<p>이를 식으로 써보면 F<sub>n</sub> = F<sub>n-1</sub> + F<sub>n-2</sub> (n ≥ 2)가 된다.</p>

<p>n=17일때 까지 피보나치 수를 써보면 다음과 같다.</p>

<p>0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597</p>

<p>n이 주어졌을 때, n번째 피보나치 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n이 주어진다. n은 90보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 n번째 피보나치 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10
','55
','MATH'),
                                                                                                                (400,'BAEKJOON','https://www.acmicpc.net/problem/2749',2749,'피보나치 수 3','1초','128 MB',14,'<p>피보나치 수는 0과 1로 시작한다. 0번째 피보나치 수는 0이고, 1번째 피보나치 수는 1이다. 그 다음 2번째 부터는 바로 앞 두 피보나치 수의 합이 된다.</p>

<p>이를 식으로 써보면 F<sub>n</sub> = F<sub>n-1</sub> + F<sub>n-2</sub> (n ≥ 2)가 된다.</p>

<p>n=17일때 까지 피보나치 수를 써보면 다음과 같다.</p>

<p>0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597</p>

<p>n이 주어졌을 때, n번째 피보나치 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n이 주어진다. n은 1,000,000,000,000,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 n번째 피보나치 수를 1,000,000으로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1000
','228875
','MATH'),
                                                                                                                (358,'BAEKJOON','https://www.acmicpc.net/problem/2753',2753,'윤년','1초','128 MB',1,'<p>연도가 주어졌을 때, 윤년이면 1, 아니면 0을 출력하는 프로그램을 작성하시오.</p>

<p>윤년은 연도가 4의 배수이면서, 100의 배수가 아닐 때 또는 400의 배수일 때이다.</p>

<p>예를 들어, 2012년은 4의 배수이면서 100의 배수가 아니라서 윤년이다. 1900년은 100의 배수이고 400의 배수는 아니기 때문에 윤년이 아니다.&nbsp;하지만, 2000년은 400의 배수이기 때문에 윤년이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 연도가 주어진다. 연도는 1보다 크거나 같고, 4000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 윤년이면 1, 아니면 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2000
','1
','MATH'),
                                                                                                                (401,'BAEKJOON','https://www.acmicpc.net/problem/2755',2755,'이번학기 평점은 몇점?','1초','128 MB',5,'<p>최백준이 이번 학기에 들은 과목과 학점 그리고 성적이 주어졌을 때, 평균 평점을 계산하는 프로그램을 작성하시오.</p>

<p>성적은 A+~F까지 총 13개가 있다.</p>

<p>A+: 4.3, A0: 4.0, A-: 3.7</p>

<p>B+: 3.3, B0: 3.0, B-: 2.7</p>

<p>C+: 2.3, C0: 2.0, C-: 1.7</p>

<p>D+: 1.3, D0: 1.0, D-: 0.7</p>

<p>F: 0.0</p>

<p>평균 평점은 각 과목의 학점*성적을 모두 더한 뒤에, 총 학점으로 나누면 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에, 백준이가 이번 학기에 들은 과목 수가 주어진다. 둘째 줄부터 N개의 줄에 각 과목의 과목명, 학점, 성적이 주어진다. 과목명은 알파벳 소문자와 숫자, 그리고 밑줄 (_)로만 이루어져 있으며, 최대 100글자이고, 학점은 1보다 크거나 같고, 3보다 작거나 같은 자연수이다. 성적은 문제에 설명한 13가지 중 하나이다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 평균 평점을 소수점 셋째 자리에서 반올림해서 둘째 자리까지 출력한다. (평균 평점이 1.5이면 1.50을 출력한다.)</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7
General_Physics_1 3 A+
Introduction_to_Computer_Science_and_Eng 3 B0
Reading_And_Writing 2 C0
English_1 3 C+
Analytic_Geometry_and_Calculus_1 3 B+
Fortran_Programming 3 B+
C_Language_Programming 3 A+','3.28','MATH'),
                                                                                                                (406,'BAEKJOON','https://www.acmicpc.net/problem/2756',2756,'다트','1초','128 MB',4,'<p>다트판은 평평한 판과 동심원이 그려진 원형 코르크로 만든다. 사람들은 다트를 다트판에서 가장 중심에 있는 원(불스아이)을 향해 던진다.</p>

<p>다트판의 각 고리에는 점수가 적혀있고, 중심에 가까울수록 점수가 높다.</p>

<p style="text-align: center;"><img alt="" src=https://www.acmicpc.net/upload/images/dart.png" style="height:216px; width:249px"></p>

<p>각 고리의 반지름은 3cm, 6cm, 9cm, 12cm, 15cm이다. (따라서, 불스아이의 지름은 6cm) 간단한 다트게임은 두 플레이어가 게임을 하며, 다음과 같이 플레이한다.</p>

<p>첫 번째 플레이어가 다트 3개를 다트판에 던진다. 다트가 맞춘 영역의 점수의 합이 그 플레이어의 점수가 된다. 첫 번째 플레이어가 던진 다트를 다트판에서 모두 제거한다. 두 번째 플레이어가 다트 3개를 다트판에 던진 뒤, 점수를 계산한다. 높은 점수를 얻은 플레이어가 이긴다.</p>

<p>두 플레이어의 점수를 계산한 뒤, 누가 이기는지를 구하는 프로그램을 작성하시오. 만약 다트가 경계에 걸쳐있다면, 높은 점수를 얻은 것이다. 다트가 다트판 밖을 맞춘다면, 점수를 얻지 못한다. Double precision floating point 연산을 사용하면 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수가 주어진다.&nbsp;각 테스트 케이스는 한 줄에 12개의 실수(double-precision 값)가 있다. 각 쌍은 중심과 다트의 거리이고, x, y거리 순서이고 단위는 cm이다. &nbsp;처음 3개의 수는 첫 번째 플레이어가 던진 다트이고, 다음 3개는 두 번째 플레이어가 던진 것이다. (-20.0 ≤ X,Y ≤ 20.0)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 게임을 이긴 사람이 있다면 다음과 같은 형식으로 출력한다.</p>

<p>SCORE: N to M, PLAYER P WINS.</p>

<p>만약, 비겼다면</p>

<p>SCORE: N to M, TIE.</p>

<p>를 출력한다.</p>

<p>N은 첫 번째 플레이어의 점수, M은 두 번째 플레이어의 점수이고, P는 게임을 승리한 사람의 번호 1 또는 2이다. 모든 값은 음이 아닌 정수이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
-9 0 0 -4.5 -2 2 9 0 0 4.5 2 -2
-19.0 19.0 0 0 0 0 3 3 6 6 12 12
','SCORE: 240 to 240, TIE.
SCORE: 200 to 140, PLAYER 1 WINS.','MATH'),
                                                                                                                (402,'BAEKJOON','https://www.acmicpc.net/problem/2757',2757,'엑셀','1초','128 MB',8,'<p>
	엑셀의 첫 번째 열은 A이고, 두 번째 열은 B이고, 26번째 열은 Z이다. 26번째 열 다음 열부터는 2글자를 이용한다.&nbsp;</p>
<p>
	예를 들어, 27번째 열은 AA이고, 28번째 열은 AB, 52번째 열은 AZ이다. 그 다음 53번째 열은 BA이며, 이와 같이 계속 열의 이름을 붙인다.</p>
<p>
	ZZ열 다음 열은 AAA가 되고, 그 다음은 AAB가 된다.</p>

<p>
	엑셀에서 행은 그냥 행 번호를 사용하면 된다.</p>

<p>
	엑셀 스프레드시트에서 각 칸은 위에서 설명한 열과 행을 합쳐서 이름을 만들 수 있다. 가장 왼쪽 위에 있는 칸은 A1이 되고, 55열 23행에 있는 칸은 BC23이 된다.</p>

<p>
	열과 행이 주어졌을 때, 그 칸의 엑셀 스프레드시트 상에서 이름을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력은 여러 줄이며, RnCm형태이다. n은 행 번호 (1<=n<=300000000), m은 열 번호 (1<=m<=300000000) 이다. 입력의 마지막은 n과 m이 모두 0이며, 이때는 출력하지 않고 프로그램을 종료하면 된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 입력을 순서대로 한 줄에 하나씩 엑셀 스프레드시트 상에서의 이름을 출력하면 된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','R1C1
R3C1
R1C3
R299999999C26
R52C52
R53C17576
R53C17602
R0C0','A1
A3
C1
Z299999999
AZ52
YYZ53
YZZ53','MATH'),
                                                                                                                (403,'BAEKJOON','https://www.acmicpc.net/problem/2761',2761,'모형 로켓의 높이','1초','128 MB',15,'<p>
	모형 로켓이 얼마나 높이 올라갔는지 측정하는 방법은 여러 가지가 있는데, 그 중 하나는 다음과 같다.</p>

<p>
	관측하는 사람 A,B,C가 D 만큼 떨어져서 경위계를 가지고, 수평선에서 떨어진 각도를 측정한다. 각 측정 장비는 지면에서 H만큼 떨어져 있다. 로켓이 발사된 후 가장 높은 지점 근처에서, 낙하산을 펼친 후, 먼지 더미를 분출한다. 각각의 관측자는 먼지 더미와 수평선과의 각도를 측정한다.</p>
<p>
	A,B,C가 측정한 각을 각각 a,b,c라 하면 이 값을 이용하여 높이를 측정할 수 있다.</p>

<p>
	D,H,a,b,c가 주어졌을 때, 로켓이 올라간 높이(반올림)를 계산하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	첫 줄은 10진수 D,H가 들어온다. (정수가 아닐 수 있다) 이 값들은 모든 로켓에 대해 같다. 다음 줄부터 각 줄에는 a,b,c(각도)가 들어오며, 마지막 줄에는 0보다 작거나 같은 값이 들어온다. 입력의 마지막을 나타내는 마지막 줄을 제외하고는 모두 0도 초과부터 90도 미만 사이의 각이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각각의 3개의 각에 대해 높이를 반올림 하여 정수로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','50 4
43.88 46.85 40.70
34.52 39.50 35.43
27.05 29.22 26.14
0 0 0
','90
70
60
','MATH'),
                                                                                                                (405,'BAEKJOON','https://www.acmicpc.net/problem/2765',2765,'자전거 속도','1초','128 MB',3,'<p>대부분의 자전거 속도계는 앞 포크에 설치된 홀 효과 센서로 동작한다. 자석이 앞 바퀴의 포크중 하나에 부착되어, 홀 효과를 이용해 속도계가 바퀴의 회전수를 측정한다. 따라서 바퀴의 지름을 안다면 회전수를 통해 이동 거리를 측정할 수 있다. 또한 바퀴가 회전하는 동안 걸린 시간을 안다면 평균 속도 역시 알 수 있다.</p>

<p>바퀴의 지름, 회전수, 걸린 시간이 주어졌을 때, 총 이동 거리와 평균 속도를 계산하여라. 앞바퀴는 땅에서 떨어지거나 미끄러지거나 공전하지 않았다고 가정한다.</p>

<p>이동 거리의 단위는 miles이고, 평균 속도의 단위는 miles/hour 이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 줄의 데이터로 구성된다. 각 데이터는 지름, 회전수, 시간이 공백으로 구분되어 주어진다. 지름은 inch단위의 실수이며, 회전수는 정수이다. 시간은 초단위의 실수로 주어진다. 입력은 회전수가 0이면 끝난다. 실수는 소수점 셋째자리이하까지 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 데이터에 대해 다음을 출력한다</p>

<p>Trip #N: distance MPH</p>

<p>N은 각각의 데이터 번호를 출력해야 하며, distance는 총 거리(Miles)를 소수 둘째 자리까지 반올림하여 나타내며, MPH는 평균 속도(miles per hour)를 소수 둘째 자리까지 반올림하여 나타낸다. 회전수가 0인 데이터에 대해서는 출력하지 않는다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<ul>
	<li>π의 값은 3.1415927을 사용하면 된다.</li>
	<li>1마일은 5280피트이다.</li>
	<li>1피트는 12인치이다.</li>
	<li>1시간은 60분이다.</li>
	<li>1분은 60초이다.</li>
	<li>1펄롱은 201.168미터이다.</li>
</ul>

				</div>
				</div>','26 1000 5
27.25 873234 3000
26 0 1000
','Trip #1: 1.29 928.20
Trip #2: 1179.86 1415.84','MATH'),
                                                                                                                (404,'BAEKJOON','https://www.acmicpc.net/problem/2775',2775,'부녀회장이 될테야','0.5초(추가시간없음)','128 MB',5,'<p>평소 반상회에 참석하는 것을 좋아하는 주희는 이번 기회에 부녀회장이 되고 싶어 각 층의 사람들을 불러 모아 반상회를 주최하려고 한다.</p>

<p>이 아파트에 거주를 하려면 조건이 있는데, “a층의 b호에 살려면 자신의 아래(a-1)층의 1호부터 b호까지 사람들의 수의 합만큼 사람들을 데려와 살아야 한다” 는 계약 조항을 꼭 지키고 들어와야 한다.</p>

<p>아파트에 비어있는 집은 없고 모든 거주민들이 이 계약 조건을 지키고 왔다고 가정했을 때, 주어지는 양의 정수 k와 n에 대해 k층에 n호에는 몇 명이 살고 있는지 출력하라. 단, 아파트에는 0층부터 있고 각층에는 1호부터 있으며, 0층의 i호에는 i명이 산다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 Test case의 수 T가 주어진다. 그리고 각각의 케이스마다 입력으로 첫 번째 줄에 정수 k, 두 번째 줄에 정수 n이 주어진다</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 Test case에 대해서 해당 집에 거주민 수를 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1
3
2
3
','6
10
','MATH'),
                                                                                                                (407,'BAEKJOON','https://www.acmicpc.net/problem/2777',2777,'숫자 놀이','1초','128 MB',9,'<p>학교에서 공부를 하고 있던 승환이는 갑자기 숫자 하나를 보고 그 숫자의 특징에 대해 생각했다. 승환이가 본 숫자는 10이다. 10은 2*5로 나타낼 수 있고 이를 조금 더 생각해서 25라는 수의 각 자릿수를 곱하면 10이 된다는 것을 알아냈다. 이를 일반적인 문제로 바꾸면 다음과 같다.&nbsp;</p>
<p>“양의 정수 N( 1 <= N <= 1,000,000,000 )이 있을 때 모든 자릿수의 곱이 정확히 N이 되는 가장 작은 양의 정수 X를 찾아라. ”</p>
<p>모든 자릿수의 곱이 20인 수들을 예를 들면, 522 보다는 225가 작고 225 보다는 45가 작다.</p>
<p>승환이는 자신이 만든 문제를 수업 시간 전에 칠판에 써 놓았다. 그것을 본 당신은 호기심이 생겨서 그 문제를 풀어보고 싶어한다. N이 주어졌을 때 위 조건을 만족하는 가장 작은 양의 정수 X가 몇 자리 수인지 구하여라.</p>



					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 Test case의 수 T가 주어진다. 그리고 각각의 케이스마다 입력으로 첫 번째 줄에 양의 정수 N이 주어진다. (1 <= N <= 1,000,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 Test case에 대해서 조건을 만족하는 가장 작은 X가 몇 자리 수인지 출력하라. 만약 그러한 X가 존재하지 않는다면 -1을 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
10
26
','2
-1
','MATH'),
                                                                                                                (409,'BAEKJOON','https://www.acmicpc.net/problem/2778',2778,'측량사 지윤','1초','128 MB',13,'<p>측량사 지윤이는 삼각형을 너무 좋아해서 하루에 하나씩 삼각형을 그린다. 그런데 어느 날 밤에 삼각형을 그리려고 하는데, 작업실이 정전 되고 말았다. 그래도 지윤이는 감으로 직선 3개를 그리고 그 직선으로 만들어지는 삼각형의 넓이를 구해 보려 한다. 보이지 않는 상태로 그렸지만, 지윤이는 자신이 그린 직선 3개의 방정식은 알고 있다. 하지만 넓이를 계산하기에는 머리가 너무 아픈 지윤이는, 당신에게 넓이 계산을 부탁했다. 직선의 방정식은 3개 주어지고, 각각 ax + by + c = 0와 같이 표현될 때( a,b,c는 정수), &nbsp;만들어지는 삼각형의 넓이를 구해보자. 만약 삼각형이 만들어지지 않는다면 0 을 출력하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 Test case의 수 T가 주어진다. 그리고 각각의 케이스마다 입력으로 첫 번째 줄부터 연속해서 3개의 줄에 각각 직선을 뜻하는 정수 a, b, c가 차례대로 주어진다. (-1,000 <= a, b, c <= 1,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 Test case에 대해서 한 줄씩, 3개의 직선으로 만들어지는 삼각형의 넓이를 소수점 아래 5자리에서 반올림 하여 출력하라. 만약 삼각형을 만들 수 없다면 0.0000을 출력해주면 된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
-2 -4 5
2 0 0
0 -4 -1
1 1 0
0 1 0
1 0 0
','2.2500
0.0000
','MATH'),
                                                                                                                (410,'BAEKJOON','https://www.acmicpc.net/problem/2783',2783,'삼각 김밥','1초','128 MB',3,'<p>유명 편의점 체인점 세븐25는 삼각 김밥을 전국에서 가장 싸게 판매하고 있다.&nbsp;</p>

<p>이 회사의 직원들은 삼각 김밥의 가격을 전국 최저가를 유지하기 위해 매일 근처의 편의점을 방문한다. 그리고 나서 세븐25의 삼각 김밥보다 싼 가격을 발견하면, 삼각 김밥의 가격을 그 가격으로 바꿔 최저가를 유지한다.</p>

<p>매일 아침, 점심, 저녁으로 삼각 김밥을 먹는 상근이와 정인이는 정말 세븐25가 제일 싼지 궁금해졌다.&nbsp;</p>

<p>이들은 학교 근처에 있는 세븐 25와 세븐 25를 제외한 서로 다른 N개의 편의점 체인을 방문 할 것이다. 이 편의점을 방문하면서 세븐25보다 싼 삼각김밥을 찾을 것이다. 또, 전체 편의점에서 가장 싼 삼각 김밥은 어디인지 찾을 것이다.</p>

<p>어느 편의점의 삼각 김밥이 제일 싼지 고객들이 쉽게 알지 못하기 하기 위해서, 모든 편의점은 삼각 김밥의 가격을 다음과 같이 표시한다. "삼각 김밥 Y그램 당 X원"</p>

<p>상근이와 정인이는 삼각 김밥을 1,000그램 살 것이다.</p>

<p>세븐 25의 삼각 김밥 가격과, 다른 N개 편의점의 삼각 김밥 가격이 주어졌을 때, 1,000그램의 삼각 김밥을 가장 싸게 사려면 얼마면 되는지 구하는 프로그램을 작성하시오.</p>

<p>삼각 김밥은 여러 군데에서 돌아가면서 사도 되고, 세븐 25와 N개 편의점 이외의 다른 곳에서는 살 수 없다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 세븐25의 삼각 김밥 가격 정보 X와 Y가 주어진다. (Y그램 당 X원) (1 ≤ X ≤ 100, 1 ≤ Y ≤ 1,000)</p>

<p>둘째 줄에는 세븐25를 제외한 편의점의 개수 N이 주어진다. (1 ≤ N ≤ 100)</p>

<p>다음 N개의 줄에는 i번째 편의점의 삼각 김밥 가격 정보 X<sub>i</sub>와 Y<sub>i</sub>가 주어진다. (Y<sub>i</sub>그램 당 X<sub>i</sub>원) (1 ≤ X<sub>i</sub> ≤ 100, 1 ≤ Y<sub>i</sub> ≤ 1,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 삼각 김밥 1,000그램 가격의 최저가를 출력한다. 정답과의 오차는&nbsp;0.01까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 100
3
4 100
3 100
7 100
','30.00
','MATH'),
                                                                                                                (411,'BAEKJOON','https://www.acmicpc.net/problem/2793',2793,'숫자의 힘','1초','128 MB',17,'<p>양의 정수 N이 있을 때, N을 나눌 수 없는 가장 작은 수 A를 찾을 수 있다. 예를 들어, 6은 4로 나누어 떨어지지 않으므로, A는 4가 된다.</p>

<p>이렇게 A를 찾은 다음, 그 수를 다시 N이라고 하고, 나눌 수 없는 가장 작은 수 A를 찾는 것을 계속해서 한다면, 결국에는 A는 2가 된다.</p>

<p>N이 2가 된다면, 더이상 찾지 않고 여기서 그만한다.</p>

<p>우리는 이런 성질을 이용해서 strength(N)을 위의 방법에서 나온 N의 수열의 길이로 정의할 수 있다.</p>

<p>예를 들어, N=6이라면 6, 4, 3, 2를 얻을 수 있으므로, strength(6) = 4가 된다.</p>

<p>두 양의 정수 A < B가 주어졌을 때, A와 B를 포함하여 그 사이에 있는 숫자의 힘의 합을 구하는 프로그램을 작성하시오.</p>

<p>strength(A) + strength(A+1) + ... + strength(B)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 A와 B가 주어진다. (3 <= A < B < 10<sup>17</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 A와 B를 포함하여 그 사이에 있는 숫자의 합을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 6
','11
','MATH'),
                                                                                                                (413,'BAEKJOON','https://www.acmicpc.net/problem/2807',2807,'정사각형 크로스워드','1초','128 MB',18,'<p>상근이는 전 세계에 존재하는 모든 크로스워드 퍼즐을 풀었다. 더 이상 풀 퍼즐이 없기 때문에, 새로운 퍼즐을 만들려고 한다.</p>

<p>단어의 길이가 같은 네 단어를 이용해서 정사각형 모양의 크로스워드 퍼즐을 만들 수 있다. 가로로 놓인 단어는 왼쪽부터 오른쪽으로 읽고, 세로로 놓은 단어는 위에서 아래로 읽는다. 아래 그림은 "HLAD", "NIVA", "HSIN", "DEDA"를 이용해서 만든 크로스워드 퍼즐의 한 예이다.</p>

<table class="table table-bordered table-center-20 td-center">
	<tbody>
		<tr>
			<td>H</td>
			<td>L</td>
			<td>A</td>
			<td>D</td>
		</tr>
		<tr>
			<td>S</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>E</td>
		</tr>
		<tr>
			<td>I</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>D</td>
		</tr>
		<tr>
			<td>N</td>
			<td>I</td>
			<td>V</td>
			<td>A</td>
		</tr>
	</tbody>
</table>

<p>길이가 모두 같은 단어가 여러개 주어졌을 때, 서로 다른 정사각형 모양의 크로스워드 퍼즐을 몇 개나 만들 수 있는지 구하는 프로그램을 작성하시오. 한 단어는 꼭 한 번만 사용해야 한다. 두 정사각형이 적어도 한 위치에서 문자가 다르다면, 두 크로스워드퍼즐은 다른 퍼즐이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 단어의 개수 N이 주어진다. (4 ≤ N ≤ 100,000) 다음 N개 줄에는 알파벳 대문자로만 이루어진 단어가 주어진다. 단어의 길이는 모두 같으며, 10글자 이내이다.&nbsp;입력 되는 모든 단어들은 서로 다르다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 입력으로 주어진 단어를 이용해서 서로 다른 크로스워드 퍼즐을 몇 개나 만들 수 있는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
NIVA
HLAD
HSIN
DEDA
','2
','MATH'),
                                                                                                                (414,'BAEKJOON','https://www.acmicpc.net/problem/2814',2814,'최소인수','1초','128 MB',21,'<p>가장 작은 소인수가 P인 숫자 중에서 N번째 작은 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 P가 주어진다. (1 ≤ N, P ≤ 10<sup>9</sup>) P는 항상 소수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 가장 작은 소인수가 P인 숫자 중 N번째로 작은 수를 출력한다. 만약, 그러한 수가 10<sup>9</sup>를 넘을 경우에는 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 2
','2
','MATH'),
                                                                                                                (419,'BAEKJOON','https://www.acmicpc.net/problem/2818',2818,'숙제하기 싫을 때','1초','128 MB',12,'<p>상근이는 숙제가 너무 하기 싫어서, 숙제 한 달치를 걸고 창영이와 게임을 하기로 했다. 진 사람은 한 달동안 숙제 두 명분을 해야 한다. 상근이는 영리하게 자신이 어렸을 때, 하던 게임을 하자고 했다. 창영이는 흔쾌히 수락했다.</p>

<p><img alt="" src="https://upload.acmicpc.net/358e7e2d-67c1-420e-8eae-3c2721b0899c/-/preview/" style="width: 80px; height: 92px; float: left;">이 게임을 하기 위해서는 주사위가 필요하다. 주사위는 왼쪽 그림과 같이 생겼다. 마주보는 면에 쓰여 있는 숫자의 합은 항상 7이다. 즉, 6은 1, 5는 2, 4는 3은 마주보는 면이다.</p>

<p>그 다음, 한 칸의 크기가 주사위의 한 면과 같은 표를 그린다. 이 표의 크기는 R행 C열이다. 주사위는 가장 처음에 왼쪽 위 칸에 있다. 윗 면에는 숫자 1이 있고, 오른쪽 면에는 숫자 3이 있다. 이제 다음과 같이 주사위를 굴린다.</p>

<p>1. 주사위를 마지막 열에 도착하기 전까지 오른쪽으로 굴린다.</p>

<p>2. 주사위를 아래줄로 한 칸 굴린다.</p>

<p>3. 주사위를 첫 번째 열에 도착하기 전까지 왼쪽으로 굴린다.</p>

<p>4. 2단계와 비슷하게 주사위를 한 칸 아래로 굴린다.</p>

<p>상근이는 위와 같은 단계를 할 수 있을 때 까지, 즉, 마지막 줄까지 반복한다. 주사위가 어떤 칸에 도착하면, 창영이는 주사위 윗 면의 숫자를 적는다. 마지막에, 지금까지 적은 숫자를 모두 더한 다음, 상근이에게 물어본다.</p>

<p>상근이는 정답을 말할 것이고, 이 숫자가 창영이가 더한 합과 같다면 상근이가 이긴다. 상근이는 잠시 머뭇거리다가 정답을 말했다. 이제 창영이는 이 정답이 맞는지 확인해야 한다. R과 C가 주어졌을 때, 윗 면의 합을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 R과 C가 주어진다. (1 ≤ R, C ≤ 100,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 2
','19
','MATH'),
                                                                                                                (417,'BAEKJOON','https://www.acmicpc.net/problem/2824',2824,'최대공약수','1초','192 MB',10,'<p>상근이는 학생들에게 두 양의 정수 A와 B의 최대공약수를 계산하는 문제를 내주었다. 그런데, 상근이는 학생들을 골탕먹이기 위해 매우 큰 A와 B를 주었다.</p>

<p>상근이는 N개의 수와 M개의 수를 주었고, N개의 수를 모두 곱하면 A, M개의 수를 모두 곱하면 B가 된다.</p>

<p>이 수가 주어졌을 때, 최대공약수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(1 ≤ N ≤ 1000)이 주어진다. 둘째 줄에는 N개의 양의 정수가 공백으로 구분되어 주어진다. 이 수는 모두 1,000,000,000보다 작고, N개의 수를 곱하면 A가 된다.</p>

<p>셋째 줄에 M(1 ≤ M ≤ 1000)이 주어진다. 넷째 줄에는 M개의 양의 정수가 공백으로 구분되어 주어진다. 이 수는 모두 1,000,000,000보다 작고, M개의 수를 곱하면 B가 된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>두 수의 최대공약수를 출력한다. 만약, 9자리보다 길다면, 마지막 9자리만 출력한다. (최대 공약수가 1000012028인 경우에는 000012028을 출력해야 한다)</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
2 3 5
2
4 5
','10
','MATH'),
                                                                                                                (416,'BAEKJOON','https://www.acmicpc.net/problem/2825',2825,'수업시간에 교수님 몰래 교실을 나간 상근이','1초','128 MB',14,'<p>상근이는 데이터베이스 수업 시간에 교수님 몰래 교실을 나갔다. 결국 교수님에게 불려가게 되었고, 교수님은 다음과 같은 수학 숙제를 내주었다.</p>

<p>정수 N개가 주어진다. 이때, 친구의 개수를 구하라.</p>

<p>상근이는 이 문제를 받고 친구가&nbsp;무엇인지 궁금해졌다. 데이터베이스 조교 동규는 두 수를 이루는 숫자가 적어도 하나 겹치는 쌍을 친구라고 한다고 했다. (겹치는 위치는 달라도 된다)</p>

<p>상근이의 숙제를 하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 수의 개수 N이 주어진다. (1 ≤ N ≤ 1,000,000)</p>

<p>다음 N개 줄에는 [1, 10<sup>18</sup>] 범위 안에 있는 양의 정수가 주어진다. 이 수가 교수님이 상근이에게 숙제로 전달한 수이다. 같은 수가 두 번 이상 주어지지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 친구의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
4
20
44
','1
','MATH'),
                                                                                                                (418,'BAEKJOON','https://www.acmicpc.net/problem/2830',2830,'행성 X3','1초','192 MB',13,'<p>상근이는 초등학교 졸업 여행으로 외계 행성 X3에 방문했었다. 이 행성에 사는 사람들의 이름은 모두 자연수이다. 행성의 거주민은 모두 서로를 알고 있다. 두 X3인은 그들의 친밀도를 자신의 이름을 이진수로 바꾸어서 계산한다. 두 이름을 이진수로 바꾸고, 자리수가 짧은 쪽을 기준으로 정렬한다. 이때, 두 이진수의 각 자리 아래에 두 자리가 같으면 0을, 다르면 1을 적는다. 이 결과 이진수를 다시 10진수로 바꾸면 그들의 친밀도가 된다.</p>

<p>예를 들어, 10과 19의 친밀도는 25이다.</p>

<pre style="text-align: center;">1 0 0 1 1 = 19
0 1 0 1 0 = 10
--------------
1 1 0 0 1 = 25
</pre>

<p>행성의 가치는 이 섬에 있는 모든 친밀도의 합이다. 행성 거주민들의 이름이 주어졌을 때, 행성의 가치를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 X3 거주민의 수 N이 주어진다. (1 ≤ N ≤ 1,000,000) 다음 N개의 줄에는 거주민의 이름이 주어진다. 이름은 1,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 행성 X3의 가치를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
19
10
','25
','MATH'),
                                                                                                                (420,'BAEKJOON','https://www.acmicpc.net/problem/2833',2833,'나이트','1초','128 MB',22,'<p>"나이트"는 한국에서 엄청나게 유행하는 새 게임이다. 강산이와 창영이는 대세에 뒤쳐지지 않기 위해서 이 게임을 플레이하려고 한다. 강산이는 체스에서 사용하는 나이트 말을 N*N 체스판 위에 놓는다. 그 다음에, 창영이는 눈가리개를 하고, 강산이는 1초에 한 번씩 나이트를 T번 움직인다. 이렇게 움직인 이후에, 창영이가 나이트의 최종 위치를 맞추면 이기는 게임이다.</p>

<p>이 게임에서 사용하는 체스판은 보통 체스판이 아니다. 각 칸에는 숫자가 하나씩 쓰여 있다. 어떤 칸에 쓰여 있는 수를 K라고 한다면, 시작한지 0, K, 2K, 3k, ...초 이었을 때만 나이트가 이동할 수 있는 칸이다.&nbsp;</p>

<p>게임은 0초일 때 시작된다. 강산이는 나이트를 움직일 수 있는 8개 칸 중 한 칸으로 반드시 이동시켜야 한다. 나이트가 그 자리에 있는 시간 동안 (i초 일 때, 나이트를&nbsp;움직였다면 i+1초) 그 칸은 나이트가 이동할 수 있는 칸이어야 한다.</p>

<p>창영이를 도와서 T번 움직인 이후에 나이트가 있을 수 있는 곳의 위치를 모두 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 체스판의 크기 N과 강산이가 나이트를 움직이는 횟수 T가 주어진다. (3 ≤ N ≤ 30, 1 ≤ T ≤ 1,000,000)</p>

<p>둘째 줄에는 나이트의 시작 위치 X와 Y가 주어진다. (1 ≤ X, Y ≤ N)</p>

<p>다음 N개 줄에는 체스판에 쓰여 있는 숫자가 주어진다. 이 값은 10<sup>9</sup>보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 T번 움직인 이후에 나이트가 있을 수 있는 곳의 위치의 수 M을 출력한다.</p>

<p>다음 M개 줄에는 그 위치를 한 줄에 하나씩 행이 증가하는 순서로, 행이 같다면 열이 증가하는 순서로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 2
1 1
1 3 2
2 3 2
3 1 1
','2
1 1
1 3
','MATH'),
                                                                                                                (421,'BAEKJOON','https://www.acmicpc.net/problem/2839',2839,'설탕 배달','1초','128 MB',7,'<p>상근이는 요즘 설탕공장에서 설탕을 배달하고 있다. 상근이는 지금 사탕가게에 설탕을 정확하게 N킬로그램을 배달해야 한다. 설탕공장에서 만드는 설탕은 봉지에 담겨져 있다. 봉지는 3킬로그램 봉지와 5킬로그램 봉지가 있다.</p>

<p>상근이는 귀찮기 때문에, 최대한 적은 봉지를 들고 가려고 한다. 예를 들어, 18킬로그램 설탕을 배달해야 할 때, 3킬로그램 봉지 6개를 가져가도 되지만, 5킬로그램 3개와 3킬로그램 1개를 배달하면, 더 적은 개수의 봉지를 배달할 수 있다.</p>

<p>상근이가 설탕을 정확하게 N킬로그램 배달해야 할 때, 봉지 몇 개를 가져가면 되는지 그 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. (3 ≤ N ≤ 5000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>상근이가 배달하는 봉지의 최소 개수를 출력한다. 만약, 정확하게 N킬로그램을 만들 수 없다면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','18
','4
','MATH'),
                                                                                                                (422,'BAEKJOON','https://www.acmicpc.net/problem/2845',2845,'파티가 끝나고 난 뒤','1초','128 MB',2,'<p>파티가 끝나고 나면, 사람들은 누가 파티에 왔는지와 얼마나 많은 사람들이 왔는지를 궁금해한다. 보통 파티는 매우 크게 열리기 때문에, 정확하게 몇 명이 참가했는지 알 수가 없다.</p>

<p>지난주 토요일에 상근이는 자신의 3학년 진학을 기념하면서 매우 성대한 파티를 열었다. 그리고, 상근이는 1m<sup>2</sup>당 몇 명의 사람이 있었는지 알고있다.</p>

<p>상근이의 파티는 정말 엄청난 규모였기 때문에, 대부분의 신문에도 기사가 실렸다. 상근이는 서로 다른 5개의 신문을 보면서 그 기사에 적혀져있는 참가자의 수를 적었다.</p>

<p>상근이는 자신이 알고있는 참가자의 수가 정확하다고 생각한다. 각 신문 기사에 실려있는 참가자의 수가 몇 명 만큼 잘못되어있는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 1m<sup>2</sup>당 사람의 수 L (1 ≤ L ≤ 10)과 파티가 열렸던 곳의 넓이 P (1 ≤ P ≤ 1000)가 주어진다.</p>

<p>둘째 줄에는 각 기사에 실려있는 참가자의 수가 주어진다. 10<sup>6</sup>보다 작은 양의 정수 5개가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 첫째 줄에 다섯 개의 숫자를 출력해야 한다. 이 숫자는 상근이가 계산한 참가자의 수와 &nbsp;각 기사에 적혀있는 참가자의 수의 차이이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 10
10 10 10 10 10
','0 0 0 0 0
','MATH'),
                                                                                                                (423,'BAEKJOON','https://www.acmicpc.net/problem/2853',2853,'배','1초','128 MB',10,'<p>해빈이는 배가 한 척이라도 올까 말까 한 작은 항구 마을에 산다. 그런데 어느 날, 마을을 방문한 적이 있는 모든 배가 한꺼번에 마을을 방문한 날이 있었다. 해빈이는 이 날을 기념해&nbsp;1일로 센다. 그리고 배가 한 척이라도 마을에 온 날을 신나는 날이라고 하고 특별히 리스트에 기록해두었다.</p>

<p>해빈이는 마을에 방문하는 배들을 관찰한 결과, 이들이 일정한 날자 간격을 두고 주기적으로 항구를 방문한다는 사실을 알아차렸다. 예를 들어, 간격이 3인 배는 1일, 4일, 7일, 10일 등에 해빈이의 마을에 온다.</p>

<p>오늘은 신나는 날이다. 오늘을 포함해서&nbsp;해빈이의 신나는 날 리스트가 주어질 때, 방문한 배의 최소 수를 구하라. (해빈이는 모든 신나는 날을 리스트에 정확히 적어두었다. 따라서 항상 답이 존재한다.)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에 정수 신나는 날의 개수 N&nbsp;(2 ≤ N ≤ 5000)이 주어진다.</p>

<p>다음 N줄에는 신나는 날의 번호가 오름차순으로 한 줄에 하나 씩 주어진다. 첫 번째 수와 마지막 수는 각각 해빈이가 관찰을 시작한 날, 그리고 해빈이가 매긴 오늘의 번호이다. 즉, 첫 번째 줄은 항상 1이다. 마지막 수(오늘의 번호)는&nbsp;10^9보다 작다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>가능한 배의 최소 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1
3
4
','2
','MATH'),
                                                                                                                (426,'BAEKJOON','https://www.acmicpc.net/problem/2858',2858,'기숙사 바닥','1초','128 MB',4,'<p>상근이는 기숙사 생활을 한다. 상근이의 방의 크기는 L×W 이다.</p>

<p>수업시간에 타일 채우기 경우의 수를 계산하던 상근이는 자신의 방도 1×1크기 타일로 채우려고 한다. 이때, 가장자리는 빨간색으로, 나머지는 갈색으로 채우려고 한다.</p>

<p>아래 그림은 상근이의 방의 크기가 4×3일 때 이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/4600f2e6-6349-4c85-b3c9-e6f3a8e3f79a/-/preview/" style="width: 122px; height: 94px;"></p>

<p>어느 날 상근이네 방에 하근이가 놀러왔다. 하근이는 아름다운 타일 배치에 감동받았다. 다시 방으로 돌아온 하근이는 빨간색과 갈색 타일의 개수는 기억했지만, 방의 크기는 기억해내지 못했다.</p>

<p>빨간색과 갈색 타일의 개수가 주어졌을 때, 상근이 방의 크기를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 빨간색 타일의 수 R과 갈색 타일의 수 B가 주어진다. (8 ≤ R ≤ 5000, 1 ≤ B ≤ 2,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 상근이네 방의 크기 L과 W을 공백으로 구분하여 출력한다. 만약, 두 수가 다르다면, 큰 수가 L이 되고 작은 수가 W이 된다. 항상 정답이 유일한 경우만 입력으로 주어진다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8 1
','3 3
','MATH'),
                                                                                                                (424,'BAEKJOON','https://www.acmicpc.net/problem/2859',2859,'별 관찰','1초','128 MB',8,'<p>상근이와 중근이는 천문학 수업을 듣고 있다. 이번 주 과제는 흔치 않은 별 두 개를 관찰하는 것이다. 두 사람은 별을 관찰하면서 반짝이는 시간을 적어놓았다. 관찰한 결과를 살펴보니 두 별은 주기적으로 반짝인다는 사실을 알게되었다. 어느 날 두 별이 처음으로 반짝인 시간과 반짝이는 주기가 주어졌을 때, 언제 동시에 반짝이는지 구하는 프로그램을 작성하시오.</p>

<p>예를 들어, 첫 번째 별이 오늘(토요일) 02:20, 두 번째 별이 13:00에 반짝였고, 첫 번째 별이 반짝이는 주기는 05:50 (5시간 50분), 두 번째 별은 01:00 (1시간) 이라고 하자. 그러면, 첫 번째 별은 08:10, 14:00에 반짝일 것이고, 두 번째 별은 14:00에 반짝일 것이다. 따라서, 두 별은 오늘 14:00에 동시에 반짝인다.</p>

<p>00:00 (자정)은 그 날의 첫 시간이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>네 줄 걸쳐에 HH:MM (시:분) 형식의 시간이 주어진다. (00 ≤ HH ≤ 23, 00 ≤ MM ≤ 59)</p>

<p>첫째 줄의 시간은 첫 번째 별이 반짝인 시간, 둘째 줄은 두 번째 별이 반짝인 시간, 세 번째 줄은 첫 번째 별이 반짝이는 주기, 네 번째 줄은 두 번째 별이 반짝이는 주기이다.</p>

<p>처음 두 시간은 항상 다르며, 오늘은 토요일(Saturday)이다. 반짝이는 주기는 00:00이 아니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>만약, 두 별이 동시에 반짝이지 않는다면 "Never"를 출력한다.</p>

<p>첫째 줄에 두 별이 동시에 반짝이는 날의 요일을 출력한다. (Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday)</p>

<p>둘째 줄에는 동시에 반짝인 시간을 HH:MM형식으로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','02:20
13:00
05:50
01:00
','Saturday
14:00
','MATH'),
                                                                                                                (425,'BAEKJOON','https://www.acmicpc.net/problem/2860',2860,'종이에 숫자 쓰기','1초','128 MB',12,'<p>상근이는 종이에 숫자를 쓰려고 한다. 종이에는 1~5 사이의 숫자를 1개만 쓸 수 있고, 상근이는 종이를 무한개 가지고 있다.</p>

<p>열심히 종이에 숫자를 쓴 다음에, 종이에 쓴 숫자의 평균을 P와 같게 만들려고 한다.</p>

<p>이때, 사용한 종이의 개수를 최소로 하려고 한다. P가 주어졌을 때, 각 숫자를 총 몇 번 쓰는지 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 P가 주어진다. P는 1보다 크거나 같고, 5보다 작거나 같으며 소수점 1자리 ~ 9자리이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 5개의 음이 아닌 정수를 출력한다. 첫 번째 숫자는 1의 개수, 두 번째 숫자는 2의 개수, ..., 마지막 숫자는 5의 개수이다. 가능한 방법이 여러개라면 아무거나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5.0
','0 0 0 0 1
','MATH'),
                                                                                                                (427,'BAEKJOON','https://www.acmicpc.net/problem/2862',2862,'수학 게임','1초','128 MB',20,'<p>상덕이와 희원이는 동전 게임을 하면서 시간을 보낸다. 동전 게임은 동전 N개를 가지고 하는 게임이고, 규칙은 다음과 같다.</p>

<ol>
	<li>상덕이가 먼저 게임을 하고, 그 다음엔 희원이, 그 다음에 상덕이, 희원이 순서대로 게임을 한다. 순서대로 첫 번째 턴, 두 번째 턴, 세 번째 턴, ...</li>
	<li>상덕이는 첫 번째 턴에서 가져갈 수 있는 동전의 개수는 1보다 크거나 같고, N보다 작거나 같다.</li>
	<li>그 다음 턴부터는 동전을&nbsp;이전 턴에서 그 사람이 가져간 동전 개수의 최대 2배만큼 가져갈 수 있다. (동전을 적어도 1개는 가져가야 한다)</li>
	<li>이렇게 플레이를 하다가 마지막 동전을 가져가는 사람이 이긴다.</li>
</ol>

<p>상덕이와 희원이가 항상 최적의 방법으로 게임을 한다. 이 말은 어떤 상황에서 플레이어 A가 B를 항상 이길 수 있다면, A가 항상 이긴다는 것이다.)</p>

<p>이때, 상덕이가 이기기 위해서는 첫 번째 턴에서 동전을 몇 개 가져가야 하는지를 구하는 프로그램을 작성하면 된다. 이러한 동전의 개수가 여러 개 나올 수 있는데, 그 때는 가장 적은 개수를 출력하면 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 동전의 개수 N이 주어진다. (2 ≤ N ≤ 10<sup>15</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 상덕이가 이기기 위해서 가져가야 하는 동전 개수의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>동전의 개수가 4개일 때, 상덕이가 첫 번째 턴에서 가져갈 수 있는 동전의 경우의 수는 1, 2, 3, 4개이다. 만약 4개를 가져가게 된다면 상덕이는 항상 이기게 된다. 하지만, 이것은 최솟값이 아니다. 상덕이가 첫 번째 턴에서 동전을 1개 가져갔다고 생각해보자. 그럼 이제 동전은 3개가 남고, 희원이는 동전을 많아야 2개만 가져갈 수 있기 때문에 절대 이길 수 없게 된다. (문제의 3번 조건 때문에 희원이는 동전을 1*2개까지 가져갈 수 있다) 희원이가 동전을 1개를 가져가던, 2개를 가져가던 상덕이는 다음 턴에서 남은 동전을 모두 가져갈 수 있기 때문에 상덕이가 첫 번째 턴에서 동전을 1개 가져가면 항상 이기게 된다. 따라서 정답은 1이다.</p>

				</div>
				</div>','4
','1
','MATH'),
                                                                                                                (428,'BAEKJOON','https://www.acmicpc.net/problem/2863',2863,'이게 분수?','1초','128 MB',3,'<p>상근이는 덧셈과 나눗셈을 엄청나게 못한다. 이런 상근이를 위해 정인이는 상근이에게 다음과 같은 문제를 냈다.</p>

<p>정인이는 양의 정수 A,B,C,D로 이루어진 2*2 표를 그렸다.</p>

<table class="table table-bordered" style="width:50px;">
	<tbody>
		<tr>
			<td>A</td>
			<td>B</td>
		</tr>
		<tr>
			<td>C</td>
			<td>D</td>
		</tr>
	</tbody>
</table>

<p>위와 같은 표가 있을 때, 표의 값은 A/C + B/D 이다.</p>

<p>상근이는 표를 몇 번 돌리면 표의 값이 최대가 되는지 궁금해졌다.</p>

<p>표는 90도 시계방향으로 돌릴 수 있다.</p>

<p>문제 상단의 표를 1번 회전 시키면 다음과 같다.</p>

<table class="table table-bordered" style="width:50px;">
	<tbody>
		<tr>
			<td>C</td>
			<td>A</td>
		</tr>
		<tr>
			<td>D</td>
			<td>B</td>
		</tr>
	</tbody>
</table>

<p>2번 회전 시키면 다음과 같이 된다.</p>

<table class="table table-bordered" style="width:50px;">
	<tbody>
		<tr>
			<td>D</td>
			<td>C</td>
		</tr>
		<tr>
			<td>B</td>
			<td>A</td>
		</tr>
	</tbody>
</table>

<p>표에 쓰여 있는 A,B,C,D가 주어졌을 때, 표를 몇 번 회전시켜야 표의 값이 최대가 되는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 A와 B가 공백으로 구분되어 주어진다. 둘째 줄에 C와 D가 공백으로 구분되어 주어진다. 모든 수는 100보다 작거나 같은 양의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 표를 몇 번 돌려야 표의 값이 최대가 되는지 출력한다. 만약, 그러한 값이 여러개라면 가장 작은 값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 2
3 4
','2
','MATH'),
                                                                                                                (429,'BAEKJOON','https://www.acmicpc.net/problem/2864',2864,'5와 6의 차이','1초','128 MB',4,'<p>상근이는 2863번에서 표를 너무 열심히 돌린 나머지 5와 6을 헷갈리기 시작했다.</p>

<p>상근이가 숫자 5를 볼 때, 5로 볼 때도 있지만, 6으로 잘못 볼 수도 있고, 6을 볼 때는, 6으로 볼 때도 있지만, 5로 잘못 볼 수도 있다.</p>

<p>두 수 A와 B가 주어졌을 때, 상근이는 이 두 수를 더하려고 한다. 이때, 상근이가 구할 수 있는 두 수의 가능한 합 중, 최솟값과 최댓값을 구해 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 A와 B가 주어진다. (1 <= A,B <= 1,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 상근이가 구할 수 있는 두 수의 합 중 최솟값과 최댓값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','11 25
','36 37
','MATH'),
                                                                                                                (430,'BAEKJOON','https://www.acmicpc.net/problem/2869',2869,'달팽이는 올라가고 싶다','0.25초(추가시간없음)','128 MB',5,'<p>땅 위에 달팽이가 있다. 이 달팽이는 높이가 V미터인 나무 막대를 올라갈 것이다.</p>

<p>달팽이는 낮에 A미터 올라갈 수 있다. 하지만, 밤에 잠을 자는 동안 B미터 미끄러진다. 또, 정상에 올라간 후에는 미끄러지지 않는다.</p>

<p>달팽이가 나무 막대를 모두 올라가려면, 며칠이 걸리는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 세 정수 A, B, V가 공백으로 구분되어서 주어진다. (1 ≤ B < A ≤ V ≤ 1,000,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 달팽이가 나무 막대를 모두 올라가는데 며칠이 걸리는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 1 5
','4
','MATH'),
                                                                                                                (431,'BAEKJOON','https://www.acmicpc.net/problem/2875',2875,'대회 or 인턴','1초','128 MB',3,'<p>백준대학교에서는 대회에 나갈 때 2명의 여학생과 1명의 남학생이 팀을 결성해서 나가는 것이 원칙이다. (왜인지는 총장님께 여쭈어보는 것이 좋겠다.)</p>

<p>백준대학교는 뛰어난 인재들이 많아 올해에도 N명의 여학생과 M명의 남학생이 팀원을 찾고 있다. 대회에 참여하려는 학생들 중 K명은 반드시 인턴쉽 프로그램에 참여해야 한다. 인턴쉽에 참여하는 학생은 대회에 참여하지 못한다.</p>

<p>백준대학교에서는 뛰어난 인재들이 많기 때문에, 많은 팀을 만드는 것이 최선이다.</p>

<p>여러분은 여학생의 수 N,&nbsp;남학생의 수 M, 인턴쉽에 참여해야하는 인원 K가 주어질 때 만들 수 있는 최대의 팀 수를 구하면 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, M, K가 순서대로 주어진다.&nbsp;(0 ≤ M ≤ 100, 0 ≤ N ≤ 100, 0 ≤ K ≤ M+N),</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>만들 수 있는 팀의 최대 개수을 출력하면 된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 3 2
','2
','MATH'),
                                                                                                                (432,'BAEKJOON','https://www.acmicpc.net/problem/2877',2877,'4와 7','1초','128 MB',11,'<p>창영이는 4와 7로 이루어진 수를 좋아한다. 창영이가 좋아하는 수 중에 K번째 작은 수를 구해 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 K(1 ≤ K ≤ 10<sup>9</sup>)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 창영이가 좋아하는 숫자 중 K번째 작은 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','4
','MATH'),
                                                                                                                (440,'BAEKJOON','https://www.acmicpc.net/problem/2882',2882,'소수 사이클','1초','128 MB',18,'<p>상근이와 친구들이 술자리에서 하는 게임은 소수 사이클 게임이다. 각 사람은 1번부터 N번으로 나타낸다.</p>

<p>게임을 시작하기에 앞서 동그란 의자 N-1개와 네모난 의자 1개를 준비한다. 의자는 원을 이루어서 배치한다. 먼저, 1번이 네모난 의자에 앉고, 다음 2번부터는 반시계방향으로 차례대로 의자에 앉는다. 모든 사람은 원의 중심을 바라보고 있다.</p>

<p>게임은 총 K개 라운드로 이루어져 있다. i번째 라운드 시작되면 네모에 앉은 사람이 자리에서 일어나서 "내가 네모야!"라고 외친다. 그 다음, 오른쪽에 있는 사람과 자리를 총 P<sub>i</sub>번 바꾸게 된다. P<sub>i</sub>는 i번째 작은 소수이다.</p>

<p>아래는 N=5, K=3인 예이다.</p>

<ol>
	<li>라운드:&nbsp;<img alt="" src="https://upload.acmicpc.net/e8e9aa2f-c2fa-4fff-ac80-81b5127a29a4/-/preview/" style="width: 321px; height: 86px;"></li>
	<li>라운드:&nbsp;<img alt="" src="https://upload.acmicpc.net/36fcc774-3c14-4540-af54-5e4a1427e785/-/preview/" style="width: 436px; height: 85px;"></li>
	<li>라운드:&nbsp;<img alt="" src="https://upload.acmicpc.net/c2340c41-e4e0-4b9b-be61-538fbc567fb1/-/preview/" style="width: 642px; height: 85px;"></li>
</ol>

<p>N, K, A가 주어졌을 때, 게임이 끝난 후에 A의 이웃을 구하는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, K, A가 주어진다. (3 ≤ N ≤ 5,000,000, 1 ≤ K ≤ 500,000, 1 ≤ A ≤ N)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>게임이 끝난 후에 A의 오른쪽에 있는 사람과 왼쪽에 있는 사람을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 3 1
','3 5
','MATH'),
                                                                                                                (434,'BAEKJOON','https://www.acmicpc.net/problem/2884',2884,'알람 시계','1초','128 MB',3,'<p>상근이는 매일 아침 알람을 듣고 일어난다. 알람을 듣고 바로 일어나면 다행이겠지만, 항상 조금만 더 자려는 마음 때문에 매일 학교를 지각하고 있다.</p>

<p>상근이는 모든 방법을 동원해보았지만, 조금만 더 자려는 마음은 그 어떤 것도 없앨 수가 없었다.</p>

<p>이런 상근이를 불쌍하게 보던 창영이는 자신이 사용하는 방법을 추천해 주었다.</p>

<p>바로 "45분 일찍 알람 설정하기"이다.</p>

<p>이 방법은 단순하다. 원래 설정되어 있는 알람을 45분 앞서는 시간으로 바꾸는 것이다. 어차피 알람 소리를 들으면, 알람을 끄고 조금 더 잘 것이기 때문이다. 이 방법을 사용하면, 매일 아침 더 잤다는 기분을 느낄 수 있고, 학교도 지각하지 않게 된다.</p>

<p>현재 상근이가 설정한 알람 시각이 주어졌을 때, 창영이의 방법을 사용한다면, 이를 언제로 고쳐야 하는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 H와 M이 주어진다. (0 ≤ H ≤ 23, 0 ≤ M ≤ 59) 그리고 이것은 현재 상근이가 설정한 알람 시간 H시 M분을 의미한다.</p>

<p>입력 시간은 24시간 표현을 사용한다. 24시간 표현에서 하루의 시작은 0:0(자정)이고, 끝은 23:59(다음날 자정 1분 전)이다. 시간을 나타낼 때, 불필요한 0은 사용하지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 상근이가 창영이의 방법을 사용할 때, 설정해야 하는 알람 시간을 출력한다. (입력과 같은 형태로 출력하면 된다.)</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10 10
','9 25
','MATH'),
                                                                                                                (436,'BAEKJOON','https://www.acmicpc.net/problem/2885',2885,'초콜릿 식사','1초','128 MB',9,'<p>학교 근처 편의점에 새 초콜릿이 들어왔다. 이 초콜릿은 막대 모양이고, 각 막대는 정사각형 N개로 이루어져 있다. 초콜릿의 크기(정사각형의 개수)는 항상 2의 제곱 형태이다. 즉, 1, 2, 4, 8, 16, ...개의 정사각형으로 이루어져 있다.</p>

<p>상근이는 점심식사로 초콜릿을 먹는다. 이때, 적어도 K개 정사각형을 먹어야 남은 수업을 졸지 않고 버틸 수 있다. 상근이의 친구 선영이도 초콜릿을 좋아한다. 선영이는 초콜릿은 돈을 주고 사기 아깝다고 생각하기 때문에, 상근이가 주는 초콜릿만 먹는다.</p>

<p>상근이는 막대 초콜릿를 하나 산 다음에, 정확하게 K개 정사각형이 되도록 초콜릿을 쪼갠다. K개는 자신이 먹고 남는 것은 선영이에게 준다.</p>

<p>막대 초콜릿은 나누기 조금 어렵게 되어 있어서, 항상 가운데로만 쪼개진다. 즉, 정사각형이 D개 있는 막대는 D/2개 막대 두 조각으로 쪼개진다.</p>

<p>K개 정사각형을 만들기 위해서, 최소 몇 번 초콜릿을 쪼개야 하는지와 사야하는 가장 작은 초콜릿의 크기를 구하는 프로그램을 작성하시오. 상근이는 초콜릿을 하나만 살 수 있다. 꼭 한 조각이 K개일 필요는 없고, 여러 조각에 있는 정사각형을 합쳤을 때 K개이면 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 K가 주어진다. (1 ≤ K ≤ 1,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에는 상근이가 구매해야하는 가장 작은 초콜릿의 크기와 최소 몇 번 쪼개야 하는지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
','8 2
','MATH'),
                                                                                                                (437,'BAEKJOON','https://www.acmicpc.net/problem/2888',2888,'상범 게임','1초','128 MB',18,'<p>상범이와 영훈이는 체스를 변형한 새롭고 참신하며 혁신적인 게임을 개발했다. 이 게임은 R행 C열의 체스판에서 플레이되는 게임이다. 각 플레이어는 몇개의 체스 킹 말을 가지고 시작한다. 체스 킹은 상하좌우&nbsp;대각선 총&nbsp;8방향으로 한 칸씩 이동할 수 있다.</p>

<p>이 게임의 가장 독특한 점은 점수 계산 방법이다.&nbsp;상범이가 만든 게임인지라 역시 기괴함을 자랑하는데, 각 플레이어의 모든 두&nbsp;킹&nbsp;간의 최단 거리의 합이 점수가 된다. 이때 두 말 사이의 최단 거리는 한 킹이 다른 킹의 위치까지&nbsp;이동하기 위해 필요한 이동의 횟수이다. 이때,&nbsp;이러한 이동 경로 위에 다른 말이 있어도 무시하고 최단 거리를 계산해야 한다.</p>

<p>현재 게임 판의 상태가 주어졌을 때, 상범이와 영훈이의 점수를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 행의 수 R과 열의 수 C가 주어진다(1 ≤ R, C ≤ 1,000).</p>

<p>다음&nbsp;R개의 줄에는 C개의 문자가 주어지는데, M은 상범이의 킹, S는 영훈이의 킹, 그리고 .은 빈 칸을 이야기한다.</p>

<p>체스판에는 상범이와 영훈이의 말이 최소한 하나씩은 존재한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 상범이와 영훈이의 점수를 공백으로 구분하여 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 3
SMS
MMS
','3 5
','MATH'),
                                                                                                                (435,'BAEKJOON','https://www.acmicpc.net/problem/2896',2896,'무알콜 칵테일','1초','128 MB',5,'<p>상근이와 지수는 마트에서 오렌지 주스, 사과 주스, 파인애플 주스를 구매했다. 그들은 인터넷에서 찾은 방법으로 무알콜 칵테일을 만들어 학교에서 팔려고 한다. 하지만, 칵테일을 만드는 방법을 찾기 전에 주스를 구매했기 때문에, 주스가 남을 수도 있다.</p>

<p>무알콜 칵테일을 만드는데 필요한 오렌지, 사과, 파인애플 주스의 비율과 구매한 주스의 양이 주어진다. 칵테일을 최대한 많이 만들었을 때, 각 주스가 얼만큼 남는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 구매한 오렌지, 사과, 파인애플 주스의 양 A, B, C가 주어진다. (1 ≤ A, B, C ≤ 500)</p>

<p>둘째 줄에 칵테일을 만드는데 필요한 각 주스의 비율 I, J, K가 주어진다. (1 ≤ I, J, K ≤ 50)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 칵테일을 최대한 많이 만들었을 때, 각 주스가 얼만큼 남는지를 공백으로 구분하여 출력한다. 정답과의 오차는 10<sup>-4</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','9 9 9
3 2 1
','0 3 6
','MATH'),
                                                                                                                (438,'BAEKJOON','https://www.acmicpc.net/problem/2900',2900,'프로그램','2초','256 MB',13,'<p>창영이가&nbsp;에러를 찾기 위해서 디버깅을 하고 있다. 이 프로그램은 크기가 N이고 0으로 채워져있는 배열을 a를 만들고, 아래 something 함수를 호출한다.</p>

<pre>void something(int jump) {
    int i = 0;
    while (i < N) {
        a[i] = a[i] + 1;
        i = i + jump;
    }
}</pre>

<p>창영이는 함수를 K번 호출하려고 한다. 각각 호출할 때, 인자로 넘기는 jump의 값은 X<sub>1</sub>, X<sub>2</sub>, X<sub>3</sub>, ... X<sub>k</sub> 순서이다.</p>

<p>이렇게 호출한 뒤에는 배열의 값이 정상적으로 들어갔는지를 확인하려고 한다. 확인은 총 Q번 하고, 매번 확인을 할 때마다 L과 R(L ≤ R)을 정한뒤, 그 구간의 배열의 합을 구한다. 즉, a[L] + a[L+1] + ... + a[R]을 구한다.</p>

<p>함수를 호출할 때 필요한 X의 값과 창영이가 확인한 횟수 Q가 주어졌을 때, 확인한 결과(배열의 합)을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 배열의 크기 N과 함수의 호출 횟수 K가 주어진다. (1 ≤ N, K ≤ 10<sup>6</sup>)</p>

<p>둘째 줄에 함수를 호출할 때 사용하는 인자의 값 X<sub>1</sub>, X<sub>2</sub>..., X<sub>k</sub>가 공백으로 구분되어 주어진다. (1 ≤ X<sub>i</sub> < N)</p>

<p>셋째 줄에는 확인하는 횟수 Q가 주어진다. (1 ≤ Q ≤ 10<sup>6</sup>)</p>

<p>넷째 줄부터 Q개 줄에는 각 확인에 사용하는 L과 R이 주어진다. (0 ≤ L ≤ R < N)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 총 Q줄이다. 창영이가 확인하는데 사용한 L과 R이 주어졌을 때, a[L] + a[L+1] + a[L+2] ... + a[R]을 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10 4
1 1 2 1
3
0 9
2 6
7 7
','35
18
3
','MATH'),
                                                                                                                (446,'BAEKJOON','https://www.acmicpc.net/problem/2903',2903,'중앙 이동 알고리즘','1초','128 MB',3,'<p>상근이는 친구들과 함께 SF영화를 찍으려고 한다. 이 영화는 외계 지형이 필요하다. 실제로 우주선을 타고 외계 행성에 가서 촬영을 할 수 없기 때문에, 컴퓨터 그래픽으로 CG처리를 하려고 한다.</p>

<p>외계 지형은 중앙 이동 알고리즘을 이용해서 만들려고 한다.</p>

<p>알고리즘을 시작하면서 상근이는 정사각형을 이루는 점 4개를 고른다. 그 후에는 다음과 같은 과정을 거쳐서 지형을 만든다.</p>

<ol>
	<li>정사각형의 각 변의 중앙에 점을 하나 추가한다.</li>
	<li>정사각형의 중심에 점을 하나 추가한다.</li>
</ol>

<p>초기 상태에서 위와 같은 과정을 한 번 거치면 총 4개의 정사각형이 새로 생긴다. 이와 같은 과정을 상근이가 만족할 때 까지 계속한다.</p>

<p>아래 그림은 과정을 총 2번 거쳤을 때까지의 모습이다.</p>

<table class="table table-bordered td-center">
	<tbody>
		<tr>
			<td><img alt="" src="https://upload.acmicpc.net/5e446f0f-613c-4ce0-a626-6b0c2729ed1e/-/preview/" style="width: 214px; height: 213px;"></td>
			<td><img alt="" src="https://upload.acmicpc.net/65c1bcf1-7d8a-463b-91df-d6cabcc2ceae/-/preview/" style="width: 212px; height: 213px;"></td>
			<td><img alt="" src="https://upload.acmicpc.net/27b99467-cfdf-4ce3-a0b0-2897747edcf9/-/preview/" style="width: 212px; height: 213px;"></td>
		</tr>
		<tr>
			<td>초기 상태 - 점 4개</td>
			<td>1번 - 점 9개</td>
			<td>2번 - 25개</td>
		</tr>
	</tbody>
</table>

<p>상근이는 어떤 점은 한 개 보다 많은 정사각형에 포함될 수 있다는 사실을 알았다. 메모리 소모량을 줄이기 위해서 중복하는 점을 한 번만 저장하려고 한다. 과정을 N번 거친 후 점 몇 개를 저장해야 하는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. (1 ≤ N ≤ 15)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 과정을 N번 거친 후&nbsp;점의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','9
','MATH'),
                                                                                                                (439,'BAEKJOON','https://www.acmicpc.net/problem/2904',2904,'수학은 너무 쉬워','1초','128 MB',13,'<p>상근이의 할머니는 매우 유명한 수학자이다.<span class="Apple-tab-span" style="white-space:pre"> </span>할머니는 매일 수학 문제로 상근이를 힘들게 한다. 할머니는 종이 N장에 숫자를 하나씩 쓴 다음 상근이에게 준다. 그 다음 상근이는 다음과 같이 문제를 풀어야 한다.</p>

<p>두 수 A와 B를 고르고, A를 나눌 수 있는 소수 X를 고른다. 그 다음, A를 지우고 A/X를 쓰고, B를 지우고 B×X를 쓴다.</p>

<p>상근이는 위의 행동을 무한히 반복할 수 있다. 할머니는 상근이가 만든 수를 보고 점수를 계산한다. 점수가 높을수록 할머니는 상근이에게 사탕을 많이 준다. 점수는 종이에 적혀있는 모든 수의 최대공약수이다.</p>

<p>상근이가 얻을 수 있는 가장 높은 점수를 구하는 프로그램을 작성하시오. 또, 그 점수를 얻으려면 최소 몇 번 해야 하는지도 구한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. (1 ≤ N ≤ 100) 둘째 줄에는 종이에 적혀있는 수 N개가 주어진다. 수는 모두 1,000,000보다 작거나 같은 양의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 상근이가 얻을 수 있는 가장 큰 점수와 최소 몇 번 만에 그 점수를 얻을 수 있는지를 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
4 4 1
','2 1
','MATH'),
                                                                                                                (444,'BAEKJOON','https://www.acmicpc.net/problem/2907',2907,'재료 사러 가는 길','1초','128 MB',21,'<p>세상에서 제일 바쁜 동혁이는 팬케익을 좋아한다. 오늘은 집에서 팬케익을 만들어 먹기로 결심했다. 주방을 뒤져 열심히 팬케익을 만들 재료 4가지 밀가루, 우유, 계란, 잼을 찾았지만, 집에는 재료가 하나도 없었다. 그는 주변의 상점을 돌아다니면서 재료를 사오려고 한다.</p>

<p>동혁이네 동네에는 교차로가 N개 있고, 1번부터 N번까지 번호가 매겨져 있다. 그리고 도로는 총 R개가 있고, 교차로와 교차로를 잇는다.</p>

<p>동혁이는 지금 1번 교차로에 있다. 각 도로에는 상점이 항상 1개가 있고, 상점에서는 4개 재료 중 일부만 팔 수도 있고, 모두 팔 수도 있다. 상점을 방문하지 않고 도로를 지나는데 걸리는 시간은 1분이고, 상점을 방문해 재료를 구매하고 지나면 2분이 걸린다.</p>

<p>동혁이는 모든 재료를 구한 뒤, 1번 교차로로 다시 돌아오려고 한다. 그는 재료를 모두 구했다고 하더라도 상점간의 가격 비교를 위해서 상점을 방문할 수 있다.</p>

<p>아래와 같이 교차로 5개, 도로 7개인 경우를 살펴보자. (밀가루: B, 계란: J, 우유: M, 잼: P)</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/a2042c10-d620-4c95-a2be-2c8b0c9bb0ec/-/preview/" style="width: 184px; height: 175px;"></p>

<p>위와 같은 경우라면, 7분안에 모든 재료를 구하는 서로 다른 방법은 아래와 같이 5가지가 있다.</p>

<table class="table table-bordered" style="width:100%">
	<thead>
		<tr>
			<td style="width:14%">1분</td>
			<td style="width:14%">2분</td>
			<td style="width:14%">3분</td>
			<td style="width:14%">4분</td>
			<td style="width:14%">5분</td>
			<td style="width:15%">6분</td>
			<td style="width:15%">7분</td>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>1→3</td>
			<td colspan="2">3->상점->4</td>
			<td colspan="2">4→상점→1</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2">1→상점→2</td>
			<td colspan="2">2→상점→4</td>
			<td colspan="2">4→상점→1</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2">1→상점→3</td>
			<td colspan="2">3→상점→4</td>
			<td colspan="2">4→상점→1</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td colspan="2">1→상점→3</td>
			<td colspan="2">3→상점→4</td>
			<td>4→5</td>
			<td colspan="2">4→상점→1</td>
		</tr>
		<tr>
			<td>1→3</td>
			<td colspan="2">3→상점→4</td>
			<td colspan="2">4→상점→5</td>
			<td colspan="2">5→상점→1</td>
		</tr>
	</tbody>
</table>

<p>동혁이가 1번 교차로에서 출발서 모든 재료를 구한 뒤 다시 1번 교차로로 K분안에 돌아오는 서로 다른 방법의 수를 구하는 프로그램을 작성하시오.</p>

<p>이 숫자는 매우 커질 수 있으므로 5557로 나눈 나머지를 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 R이 주어진다. (1<=N<=25, 1<=R<=500)</p>

<p>둘째 줄부터 R개의 줄에는 도로의 정보가 주어진다. 도로의 정보는 서로 다른 정수 u, v와 문자열 s가 공백으로 구분되어 있다. u와 v를 잇는 도로가 있고, 여기에 있는 상점에서 파는 재료는 s라는 의미이며, s는 1글자~4글자 알파벳 대문자이며, 밀가루는 B, 달걀은 J, 우유는 M, 잼은 P이다. 두 교차로 사이에는 도로가 최대 2개까지 있을 수 있으며, 2개인 경우에는 방향이 서로 달라야 한다. (u->v와 v->u)</p>

<p>마지막 줄에는 동혁이가 모든 재료를 구하고 다시 돌아 와야 하는 시간 제한 K(1<=K<=1,000,000,000)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 동혁이가 K분 안에 모든 재료를 구하고 다시 1번 교차로로 돌아오는 서로 다른 방법의 수를 5557로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 3
1 2 BMJ
2 3 MJP
3 1 JPB
5
','3
','MATH'),
                                                                                                                (441,'BAEKJOON','https://www.acmicpc.net/problem/2908',2908,'상수','1초','128 MB',4,'<p>상근이의 동생 상수는 수학을 정말 못한다. 상수는 숫자를 읽는데 문제가 있다. 이렇게 수학을 못하는 상수를 위해서 상근이는 수의 크기를 비교하는 문제를 내주었다. 상근이는 세 자리 수 두 개를 칠판에 써주었다. 그 다음에 크기가 큰 수를 말해보라고 했다.</p>

<p>상수는 수를 다른 사람과 다르게 거꾸로 읽는다. 예를 들어, 734와 893을 칠판에 적었다면, 상수는 이 수를 437과 398로 읽는다. 따라서, 상수는 두 수중 큰 수인 437을 큰 수라고 말할 것이다.</p>

<p>두 수가 주어졌을 때, 상수의 대답을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 상근이가 칠판에 적은 두 수 A와 B가 주어진다. 두 수는 같지 않은 세 자리 수이며, 0이 포함되어 있지 않다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 상수의 대답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','734 893
','437
','MATH'),
                                                                                                                (442,'BAEKJOON','https://www.acmicpc.net/problem/2909',2909,'캔디 구매','1초','128 MB',4,'<p>오늘은 화이트데이이다. 상근이는 여자친구를 위해서 사탕을 사려고 한다. 하지만, 상근이는 독특한 성격을 가지고 있어서, 특정 액면가의 지폐만 가지고 있는다. 또, 거스름돈은 받지 않는다. 따라서, 사탕 가게의 사장과 상근이는 다음과 같은 합의를 했다. 상근이는 사장에게 자신이 가지고 있는 지폐의 액면가를 말해준다. 그럼 사장은 상근이가 지불할 수 있는 가장 가까운 금액으로 사탕의 가격을 반올림해준다.</p>

<p>예를 들어, 상근이가 가지고 있는 지폐의 액면가가 100원이라고 하자. 만약 상근이가 고른 사탕의 가격이 150원이라면, 사장은 가격을 200원으로 반올림해서 상근이가 낼 수 있도록 해준다. 또, 가격이 149원이라면, 사장은 가격을 100원으로 반올림해서 상근이가 지불할 수 있도록 해준다.</p>

<p>상근이가&nbsp;가지고 있는 지폐의 액면가는 항상 1, 10, 100, 1000, ..., 1,000,000,000 중 하나이다. 또, 지폐를 무한개 가지고 있다.</p>

<p>사탕 가격과 상근이가 가지고 있는 지폐의 액면가가 주어졌을 때, 사장은 가격을 얼마로 바꿔줄 것인지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 사탕의 가격 C와 상근이가 가지고 있는 지폐의 액면가에 적혀있는 0의 개수 K가 주어진다. (0 ≤ C ≤ 1,000,000,000, 0 ≤ K ≤ 9)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 상근이가 내야하는 가격을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','184 1
','180
','MATH'),
                                                                                                                (443,'BAEKJOON','https://www.acmicpc.net/problem/2913',2913,'동혁 천문 관측소','1초','128 MB',19,'<p>동혁 천문 관측소에서는 망원경 N개로 서로 다른 행성을 관측하고 있다. 관측소에서는 행성에서 발생하는 사건을 M가지 종류로 구분해 놓았다. 모든 행성에서 하루에 발생하는 사건은 한 종류이다. 모든 사건은 적어도 하루동안 지속되며, 많아야 365일동안 지속된다. 사건은 발생했다면, 항상 하루 종일 발생한다. 즉, 첫 날 지속되고, 둘째 날의 중간에 사건이 그만 발생하는 경우는 없다. 둘째 날에도 사건이 발생했다면, 둘째 날이 끝날 때 까지 사건이 발생한다. 각 사건은 항상 같은 기간 동안 발생한다. 즉, 어떤 행성이서 발생하느냐에 상관 없이 사건의 종류가 같다면 일어나는 기간도 같다.</p>

<p>이제 몇 년 동안 관측한 데이터를 분석하려고 한다. 망원경은 모든 관측을 기록해두었다. 하지만, 기록한 연도를 적지 않았다. 각 망원경이 기록한 내용은 기록을 시작한 날짜와, 끝낸 날짜, 그리고 각 사건이 몇 종류 발생했는지 기록되어 있다. 이때, 각 사건이 발생하는 기간을 구하는 프로그램을 작성하시오.</p>

<p>일년은 365일이고, 윤년은 없다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 망원경의 수 N과 종류의 수 M이 주어진다. (1 ≤ N, M ≤ 200)</p>

<p>다음 N개 줄에는 아래 형식과 같은 M+4개의 숫자가 주어진다.</p>

<p>D<sub>1</sub>D<sub>1</sub> M<sub>1</sub>M<sub>1</sub> D<sub>2</sub>D<sub>2</sub> M<sub>2</sub>M<sub>2</sub> F<sub>1</sub> F<sub>2</sub> ... F<sub>M</sub></p>

<p>여기서 D<sub>1</sub>D<sub>1</sub> M<sub>1</sub>M<sub>1</sub> (01 ≤ DD ≤ 31, 01 ≤ MM ≤ 12)은 관측을 시작한 날짜이고, D<sub>2</sub>D<sub>2</sub> M<sub>2</sub>M<sub>2</sub>는 끝난 날짜이다. 그리고, F<sub>i</sub> (0 ≤ F<sub>i</sub> ≤ 200)는 사건 i가 발생한 횟수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 총 M개 숫자이고, 각 사건이 발생한 기간이다. 만약, 가능한 정답이 여러 가지라면 아무거나 출력한다. 또, 정답이 없는 경우에는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1
26 02 03 03 1
','5
','MATH'),
                                                                                                                (445,'BAEKJOON','https://www.acmicpc.net/problem/2914',2914,'저작권','1초','128 MB',3,'<p>창영이는 노래 여러 개를 이어서 부르는 가수이다. 유명한 노래의 비슷한 멜로디를 이어서 부르면서 언제 곡이 넘어갔는지 모르게 만드는 것이 창영이 노래의 특징이다. 이런 노래로 상업적으로 엄청난 성공을 거둔 창영이에게 큰 시련이 찾아왔다. 그것은 바로 저작권이었다.</p>

<p>창영이의 노래에 포함되어 있는 멜로디는 모두 저작권이 다른 사람에게 있는 노래이다. 따라서, 이 음악으로 상업적인 활동을 했기 때문에, 저작권 협회에 저작권료를 내야한다.</p>

<p>창영이는 자신의 앨범에 포함되어있는 저작권이 있는 멜로디의 평균값을 구해보기로 했다. 이 값은 아래와 같이 구할 수 있다.</p>

<p>(창영이 앨범에 수록된 곡에 포함되어 있는 저작권이 있는 멜로디의 개수) / (앨범에 수록된 곡의 개수)</p>

<p>이때, 평균값은 항상 올림을 해서 정수로 만들어야 한다. 예를 들어, 창영이의 1집 앨범 "영창에서 영원히 영창피아노를 친다"에 총 38개 곡이 수록되어 있고, 이 앨범에 저작권이 있는 멜로디가 894개가 있다면, 평균값은 23.53이 되고 올림해서 24가 된다.</p>

<p>매니저 강산이는 얼마나 많은 사람에게 저작권료를 주어야 하는지 궁금해졌다. 강산이가 알고 있는 정보는 앨범에 수록되어 있는 곡의 개수와 위에서 구한 평균값이다. 이때, 적어도 몇 곡이 저작권이 있는 멜로디인지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 앨범에 수록된 곡의 개수 A와 평균값 I가 주어진다. (1 ≤ A, I ≤ 100)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 적어도 몇 곡이 저작권이 있는 멜로디인지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','38 24
','875
','MATH'),
                                                                                                                (447,'BAEKJOON','https://www.acmicpc.net/problem/2916',2916,'자와 각도기','1초','128 MB',12,'<p>창영이는 방 청소를 하다가 자와 각도기를 발견했다. 다음날 창영이는 학교에 자와 각도기를 들고 갔고, 현우와 "작도 대결"을 하려고 한다.</p>

<p>창영이는 각도기와 자를 이용해서 만들 수 있는 각을 알고 있고, 두 각을 합하거나 빼서 새로운 각을 만드는 방법을 알고 있다. 현우가 어떤 각도를 외치면, 창영이는 자와 각도기를 이용해서 현우가 외친 각도를 작도해야 한다. 작도할 때는 새로운 각을 이용해서 또다른 새로운 각을 만드는 것도 가능하다.</p>

<p>현우가 외치는 각도를 창영이가 만들 수 있는지 없는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 창영이가 만드는 방법을 알고 있는 각의 수 N과 현우가 외친 각의 개수 K가 주어진다. (1 ≤ N, K ≤ 10)</p>

<p>둘째 줄에는 창영이가 만들 수 있는 각이 주어진다. 모든 각도는 360보다 작다.</p>

<p>셋째 줄에는 현우가 외친 각이 주어진다. 이 각도 360보다 작다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>현우가 외친 각도를 창영이가 만들 수 있다면 YES를, 없다면 NO를 입력으로 주어진 순서대로 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 1
30 70
40
','YES
','MATH'),
                                                                                                                (448,'BAEKJOON','https://www.acmicpc.net/problem/2921',2921,'도미노','1초','128 MB',3,'<p>도미노는 여러 종류의 타일 게임에서 사용하는 조각이다. 도미노 조각은&nbsp;두 칸으로 이루어져 있다. 각 칸에는 점이 찍혀있는데, 점이 안 찍혀져 있을 수도 있다. 점의 개수는 세트의 크기에 의해서 결정된다. 세트의 크기가 N인 도미노 세트에서 점의 개수는 0보다 크거나 같고, N보다 작거나 같다. 두 도미노에 찍혀잇는 점의 개수가 같다면, 두 도미노는 동일한 것이다. 예를 들어, 점이 2개와 8개 찍혀있는 도미노는 8개와 2개 찍혀있는 도미노와 같은 도미노이다.</p>

<p>크기가 N인 도미노 세트는 N 또는 그보다 작거나 같은 점을 포함하는 가능한 도미노를 모두 포함하고 있고, 각 도미노는 중복되지 않는다. 다음은 크기가 2인 도미노 세트이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/28c6158c-74d6-4bf5-88c7-fa1c8de9dd88/-/preview/" style="width: 325px; height: 67px;"></p>

<p>N을 입력받은 뒤, 크기가 N인 도미노 세트에는 점이 몇 개 찍혀 있는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 도미노 세트의 크기 N (1 ≤ N ≤ 1000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>크기가 N인 도미노 세트에 찍혀 있는 점의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
','12
','MATH'),
                                                                                                                (450,'BAEKJOON','https://www.acmicpc.net/problem/2924',2924,'천재','5초','128 MB',16,'<p>준규는 천재다. 하지만 준규의 발명품은 용도가 좀 애매하다. 준규의 최신 발명품인&nbsp;Shuffle-o-matic 3175 역시 좀 애매하다.&nbsp;Shuffle-o-matic은 아주 특별한 방식으로 사용된다. 먼저 1부터 N까지의 수가 적힌 N개의 카드를 이 기계에 위에 놓는다. 그 다음 셔플 수열을 입력하고 작동 버튼을 누르면, 기계가 자동으로 카드의 숫자를 읽어서 그 수열을 테입에 출력한다. 그 후 기계는 셔플 수열대로 카드를 섞은 후 카드의 숫자를 읽어 테입의 다음 줄에 출력한다. 같은 방식으로 한 번 더 셔플 수열대로 카드를 섞고 다시 카드의 수를 테입의 다음 줄에 출력한다. 테입이 다 떨어질 때 까지 이 과정을 반복한다.</p>

<p>준규는 자신의 발명품을 테스트 해 본 후 좀 쉬기로 했다. 그러다 출력 테입의 한 조각을 발견했다. 그리고 모든 줄은 앞에서부터 C개의 수와 뒤에서부터 D개의 수가 지워져 있었다.</p>

<p>준규는 섞기 전의 수열을 1번째 수열이라고 했을때, A번째 수열에서 B번째 수열까지의 수열 중 맨 처음 섞기 전의 순서와 적힌 부분이 모두 일치하는 수열이 몇 개인지 궁금해졌다.&nbsp;이를 계산하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫째 줄에는 정수&nbsp;N, A, B, C, D (1 ≤ N ≤ 500 000, A ≤ B ≤ 10^12, 0 ≤ C, D ≤ N, C + D < N)가 차례로 주어진다.</p>

<p>둘째 줄에는 셔플 수열이 주어진다. 이 수열에는 1부터 N까지의 수가 한 번씩 등장한다. 만약 수열의 k번째 숫자가 x라면, 이는 카드를 섞을 때 k번째 수를 x번째로 옮긴다는 의미이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>준규가 찾는 수열의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 1 5 0 1
1 3 4 2
','2
','MATH'),
                                                                                                                (449,'BAEKJOON','https://www.acmicpc.net/problem/2925',2925,'신기한 물체','8초','128 MB',24,'<p>어느 날, 상근이는 길을 걷던 중에 신기한 물체를 발견했다. 외계의 것으로 추정되는 이 물체의 왼편에는 빈 박스가 N개 있었다. 기계의 사용방법을 알아내기 위해서 하루종일 기계를 더듬거렸고, 마침내 상근이는 이 기계를 어떻게 사용하는지를 알게되었다.</p>

<p>기계는 정수 4개 L, R, A, B를 입력으로 받는다. 크고 빨갛게 빛나는 실행버튼을 누르면 기계는 다음과 같은 움직인다.</p>

<p>먼저, L번 박스에 들어 있는 돌의 개수를 A mod B개로 만든다. 그 다음 L+1번 박스에 들어 있는 돌을 (2*A) mod B개로 만든다. 마찬가지로, L+2번 박스에 들어 있는 돌을 (3*A ) mod B개로 만든다. 즉, L번과 R번 사이의 X번 박스에 들어 있는 돌의 개수를 ((X-L+1)*A) mod B개로 만드는 것이다. R번 박스까지 돌을 채우고나면, 기계는 다음 명령을 기다린다.</p>

<p>기계에 여러 가지 명령을 내리던 중에, 상근이는 어떤 박스의 구간에 들어있는 돌의 개수가 궁금해졌다.</p>

<p>상근이가 기계에 입력한 명령이 주어졌을 때, 이 기계를 시뮬레이팅 하면서, 상근이의 궁금증도 해결해주는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 박스의 수 N과 쿼리의 수 Q가 주어진다. (1 ≤ N ≤ 1,000,000,000, 1 ≤ Q ≤ 50,000)</p>

<p>다음 Q개 줄에는 시뮬레이션에 관한 정보가 주어진다.</p>

<p>만약, 정보가 1로 시작한다면, 형식은 "1 L R A B" (1 ≤ L ≤ R ≤ N, 1 ≤ A, B ≤ 1,000,000)가 된다. 이 뜻은 상근이가 기계에 L, R, A, B를 입력했다는 뜻이다.</p>

<p>정보가 2로 시작한다면, 형식은 "2 L R"이 된다. (1 ≤ L ≤ R ≤ N) 이 뜻은 상근이가 L과 R번 박스 사이에 들어있는 돌의 개수를 궁금했다는 뜻이고, 개수를 구한뒤, 출력해야 한다. L과 R도 범위에 포함된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>2로 시작하는 명령이 들어올 때 마다, 그 구간에 들어있는 돌의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 3
2 1 6
1 1 5 1 2
2 1 6
','0
3
','MATH'),
                                                                                                                (408,'BAEKJOON','https://www.acmicpc.net/problem/2928',2928,'빨랫줄','2초','128 MB',22,'<p>일요일을 맞이해 창영이는 집안의 모든 침대 시트를 빨고, 집 앞 잔디밭에서 말리고 있다. 갑자기, 엄청난 강풍이 몰아쳤고 모든 침대 시트는 땅바닥에 떨어지게 되었다.</p>

<p>잔디밭은 크기가 무한대인 정사각형 격자로 나타낼 수 있고, 각 단위 정사각형은 좌표 쌍으로 나타낼 수 있다. 침대 시트는 직사각형이며, 축에 평행하다. 시트는 서로 겹칠 수도 있다.</p>

<p>다시 빨래줄에 시트를 걸어놓기 위해 창영이는 막대를 (0,0)에 꽂았다. 그런데 갑자기 땅에서 기름이 나오기 시작했다. 창영이는 이런 예상하지 못한 상황에 당황하였고 결국 기절했다. 창영이가 기절한 사이에 기름은 퍼져나갔다.</p>

<p>시간은 기름이 퍼지기 시작한 순간부터 측정하기 시작한다. 가장 처음에는 단위 정사각형 (0,0)만 기름이 있다. 기름은 아래 그림에 나와있는 것 같이 1초에 한 정사각형씩 여덟 방향으로 이동한다. 기름이 단위 정사각형에 들어가게 되면, 즉시 그 정사각형을 가득 채우게 되고, 그 부분에 속해있는 시트에도 기름이 스며들게 된다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/48f58269-f39d-4b69-837d-a83f446ec265/-/preview/" style="width: 349.167px; height: 100.833px;"></p>

<p>시간 0, 1, 2초의 모습이다.</p>

<p>입력으로 주어지는 시간이 지난 후에 기름이 물들은 시트의 면적을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 침대 시트의 수 N (1 ≤ N ≤ 100,000)이 주어진다.</p>

<p>다음 N개 줄에는 침대 시트를 나타내는 좌표 x1, y1, x2, y2 (?1,000,000 ≤ x1 ≤ x2 ≤ 1,000,000, ?1,000,000 ≤ y1 ≤ y2 ≤ 1,000,000)가 주어진다. (x1, y1), (x2, y2)는 침대 시트의 양 끝 대각선 좌표이다. 이 좌표는 좌표평면 위의 점이 아닌 각 단위 정사각형을 나타낸다. (0, 0)을 포함하는 침대 시트는 없다.</p>

<p>다음 줄에는 시간의 개수 M (1 ≤ M ≤ 100,000)이 주어진다.</p>

<p>다음 M개 줄에는 시간이 주어진다. 이 정수는 0과 1,000,000 사이의 정수이다. 오름차순으로 주어지며, 중복된 시간은 주어지지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 시간에 대해서, 기름에 물들은 침대 시트 영역의 크기를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
-2 1 1 2
1 0 2 1
-3 -3 -2 0
2
1 2
','5
15
','MATH'),
                                                                                                                (458,'BAEKJOON','https://www.acmicpc.net/problem/2932',2932,'표 회전','1초','128 MB',9,'<p>상근이는 N×N 표를 만들었다. 표에는 1부터 N<sup>2</sup>까지의 수가 행 우선 순서(row-major order)에 따라 쓰여져 있다. 표가 수행할 수 있는 연산은 아래와 같이 두 가지이다.</p>

<ol>
	<li>행을 회전시킨다 - 한 행을 골라 오른쪽으로 한 칸 회전시킨다. 마지막 열에 있던 수가 가장 첫 열에 오게 된다.</li>
	<li>열을 회전시킨다 - 한 열을 골라 아래로 한 칸 회전시킨다. 마지막 행에 있던 수가 갖아 첫 행에 오게 된다.</li>
</ol>

<p>상근이는 수 X를 (R,C)로 이동시키려고 한다. 이때, 상근이는 다음과 같은 과정을 거쳐서 수를 찾는다.</p>

<ul>
	<li>X의 위치가 C열이 될 때 까지, X가 있는 행을 회전 시킨다.</li>
	<li>X의 위치가 R행이 될 때 까지, X가 있는 열을 회전시킨다.</li>
</ul>

<p>아래 그림은 6을 (3,4)에 이동시키는 방법이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/614feed6-dbb8-4d85-978a-dab02f69b961/-/preview/" style="width: 376.667px; height: 71.6667px;"></p>

<p>상근이는 숫자 K개를 이동시키려고 한다. 한 숫자를 이동시키고 난 후에, 바로 그 다음 숫자를 이동시키며, 다음 숫자를 이동시킬 때, 표에 들어있는 수를 처음 상태로 되돌리지 않는다. 숫자 K개를 이동시키는데 필요한 회전의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 표의 크기 N(2 ≤ N ≤ 10000)과 이동시키려고 하는 숫자의 수 K(1 ≤ K ≤ 1000)이 주어진다.</p>

<p>다음 K개 줄에는 이동시키려고 하는 숫자 X와 위치 R, C가 주어진다. (1 ≤ X ≤ N<sup>2</sup>, 1 ≤ R,C ≤ N)</p>

<p>항상 입력으로 주어진 순서대로 하나씩 이동시켜야 한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>총 K개 줄에 각각의 숫자를 이동시키는데 필요한 회전의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 1
6 3 4
','3
','MATH'),
                                                                                                                (451,'BAEKJOON','https://www.acmicpc.net/problem/2935',2935,'소음','1초','128 MB',3,'<p>수업 시간에 떠드는 두 학생이 있다. 두 학생은 수업에 집중하는 대신에 글로벌 경제 위기에 대해서 토론하고 있었다. 토론이 점점 과열되면서 두 학생은 목소리를 높였고, 결국 선생님은 크게 분노하였다.</p>

<p>이렇게 학생들이 수업 시간에 떠드는 문제는 어떻게 해결해야 할까?</p>

<p>얼마전에 초등학교 선생님으로 취직한 상근이는 이 문제를 수학 문제로 해결한다. 학생들을 진정시키기 위해 칠판에 수학 문제를 써주고, 아이들에게 조용히 이 문제를 풀게 한다. 학생들이 문제를 금방 풀고 다시 떠드는 것을 방지하기 위해서, 숫자를 매우 크게 한다.</p>

<p>아직 초등학교이기 때문에, 학생들은 덧셈과 곱셈만 배웠다. 또, 아직 10의 제곱꼴을 제외한 다른 수는 학교에서 배우지 않았기 때문에, 선생님이 써주는 수는 모두 10의 제곱 형태이다.</p>

<p>쉬는 시간까지 문제를 푸는 것을 막기 위해서, 선생님이 써주는 숫자는 최대 100자리이다.</p>

<p>칠판에 쓰여 있는 문제가 주어졌을 때, 결과를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 양의 정수 A가 주어진다.</p>

<p>둘째 줄에 연산자 + 또는 *가 주어진다.</p>

<p>셋째 줄에 양의 정수 B가 주어진다.</p>

<p>A와 B는 모두 10의 제곱 형태이고, 길이는 최대 100자리이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 결과를 출력한다. 결과는 A+B 또는 A*B이며, 입력에서 주어지는 연산자에 의해 결정된다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1000
*
100
','100000
','MATH'),
                                                                                                                (454,'BAEKJOON','https://www.acmicpc.net/problem/2936',2936,'채식주의자','1초','128 MB',8,'<p>상범이는 저번 주말에 수영장을 만들었다.</p>

<p>수영장은 직각 이등변 삼각형이고, 두 변의 길이가 250이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/6346bc36-3ded-41b6-9a1f-2395fe8db516/-/preview/" style="width: 301px; height: 293px;"></p>

<p>사실 상범이가 수영장을 만든 이유는 파티였다. 파티에는 많은 여학생들이 왔고, DJ도 왔다. 또, 고기는 매우 맛있게 구워지고 있었다.</p>

<p>하지만, 그들이 예상하지 못한 문제가 생겼다. 이 파티에 놀러왔던 친구들 중에 준민이는 채식주의자였기 때문에 고기를 먹지 않는다. 반면에, 고기가 없는 파티는 파티라고 생각하지 않는다. 따라서, 상범이는 수영장을 두 부분으로 나누기로 했다.</p>

<p>수영장은 위에 그림에서 보이듯이 좌표 평면 위에 있다. 그리고, 두 끝점이 삼각형의 변 위에 있는 선분을 이용해서 두 구역으로 나눌 것이다. 두 구역은 넓이가 같아야 한다.</p>

<p>삼각형을 이등분하는 선분의 한 끝점이 주어진다. 이때, 다른 한 끝점을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 선분의 한 끝점이 주어진다. 이 점은 항상 삼각형의 변 위에 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 다른 끝점을 소수점 둘째 자리까지 출력한다. 이때, 셋째 자리에서 반올림하면 된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','0 0
','125.00 125.00
','MATH'),
                                                                                                                (452,'BAEKJOON','https://www.acmicpc.net/problem/2942',2942,'퍼거슨과 사과','1초','128 MB',9,'<p>맨체스터 유나이티드의 감독 퍼거슨은 빨간 사과를 R개, 초록 사과를 G개 가지고 있다. 훈련장에 있는 선수들 중 몇 명에게 나누어 주려고 한다. 단, 선수들이 서로 같은 개수의 사과를 받지 못하면 경기력 저하가 나타날 수 있으므로 모든 선수에게 같은 개수를 주려고 한다. 퍼거슨 감독은 사과를 싫어한다. 따라서 사과가 남으면 안 된다.</p>

<p>예를 들어, 퍼거슨이 빨간 사과를 4개, 초록 사과를 8개 가지고 있다면, 다음과 같이 세가지 방법으로 나누어 줄 수 있다.</p>

<ol>
	<li>선수 1명에게 빨간 사과 4개와 초록 사과 8개를 줄 수 있다.</li>
	<li>선수 2명에게 빨간 사과 2개와 초록 사과 4개를 각각 줄 수 있다.</li>
	<li>선수 4명에게 빨간 사과 1개와 초록 사과 2개를 각각 줄 수 있다.</li>
</ol>

<p>퍼거슨이 사과를 나누어 주는 방법을 구하는 프로그램을 작성하시오. 훈련장에 선수는 무한히 많다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 R과 G가 주어진다. (1 ≤ R, G ≤ 1,000,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>퍼거슨이 사과를 나누어 주는 방법을 출력한다. 방법을 출력할 때는 사과를 받게되는 선수의 수 N과 나누어 주는 빨간 사과의 수 X와 초록 사과의 수 Y를 출력한다.</p>

<p>각 방법은 한 번만 출력해야 한다. 나누어 주는 방법은 아무 순서로 출력해도 된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 8
','1 4 8
2 2 4
4 1 2
','MATH'),
                                                                                                                (453,'BAEKJOON','https://www.acmicpc.net/problem/2953',2953,'나는 요리사다','1초','128 MB',3,'<p>"나는 요리사다"는 다섯 참가자들이 서로의 요리 실력을 뽐내는 티비 프로이다. 각 참가자는 자신있는 음식을 하나씩 만들어오고, 서로 다른 사람의 음식을 점수로 평가해준다. 점수는 1점부터 5점까지 있다.</p>

<p>각 참가자가 얻은 점수는 다른 사람이 평가해 준 점수의 합이다. 이 쇼의 우승자는 가장 많은 점수를 얻은 사람이 된다.</p>

<p>각 참가자가 얻은 평가 점수가 주어졌을 때, 우승자와 그의 점수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>총 다섯 개 줄에 각 참가자가 얻은 네 개의 평가 점수가 공백으로 구분되어 주어진다. 첫 번째 참가자부터 다섯 번째 참가자까지 순서대로 주어진다. 항상 우승자가 유일한 경우만 입력으로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 우승자의 번호와 그가 얻은 점수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 4 4 5
5 4 4 4
5 5 4 4
5 5 5 4
4 4 4 5
','4 19
','MATH'),
                                                                                                                (455,'BAEKJOON','https://www.acmicpc.net/problem/2959',2959,'거북이','1초','128 MB',3,'<p>거북이는 이제 어떤 것에도 흥미를 느끼지 않는다. 그 이유는 거북이가 300년동안 살았고, 그 동안 모든 것들을 다 해보았기 때문이다. 거북이는 시간을 떼우는 무엇인가를 하려고 한다. 이번 주말에 거북이는 거북이 세계에서 매우 유명한 게임인 "가장 큰 직사각형 만들기"를 해보려고 한다.</p>

<p>이 게임을 시작하기 전에 거북이는 양의 정수 네 개를 머릿 속에 생각해야 한다. 한 방향으로 움직이기 시작하고 90도 회전한 뒤에 새로운 방향으로 움직인다. 이런 식으로 세 번 90도 회전을 하고, 네 번 앞으로 움직여서 선분 네 개를 만들어야 한다.</p>

<p>거북이가 선분을 그릴 때 움직여야 하는 걸음의 수는 생각해 놓은 네 정수중 하나이다. 이때, 한 정수를 각각 한 번씩 사용해야 한다. 거북이가 정수를 사용하는 순서에 따라서 다양한 모양이 만들어진다. 어떤 모양은 직사각형을 만들 수 없기도 한다.</p>

<p>거북이가 만들 수 있는 가장 큰 직사각형을 계산하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 거북이가 생각한 네 양의 정수 A, B, C, D가 주어진다. (0 < A, B, C, D < 100)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 거북이가 만들 수 있는 가장 큰 직사각형의 면적을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 2 3 4
','3
','MATH'),
                                                                                                                (456,'BAEKJOON','https://www.acmicpc.net/problem/2960',2960,'에라토스테네스의 체','1초','128 MB',7,'<p>에라토스테네스의 체는 N보다 작거나 같은 모든 소수를 찾는 유명한 알고리즘이다.</p>

<p>이 알고리즘은 다음과 같다.</p>

<ol>
	<li>2부터 N까지 모든 정수를 적는다.</li>
	<li>아직 지우지 않은 수 중 가장 작은 수를 찾는다. 이것을 P라고 하고, 이 수는 소수이다.</li>
	<li>P를 지우고, 아직 지우지 않은 P의 배수를 크기 순서대로 지운다.</li>
	<li>아직 모든 수를 지우지 않았다면, 다시 2번 단계로 간다.</li>
</ol>

<p>N, K가 주어졌을 때, K번째 지우는 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 K가 주어진다. (1 ≤ K < N, max(1, K)&nbsp;< N ≤ 1000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 K번째 지워진 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7 3
','6
','MATH'),
                                                                                                                (457,'BAEKJOON','https://www.acmicpc.net/problem/2963',2963,'무한 이진 트리 탐색','1초','128 MB',13,'<p>다음과 같은 세가지 성질을 갖는 트리를 무한 이진 트리라고 한다.</p>

<ol>
	<li>모든 노드는 두 개의 자식 노드를 가지고 있다. 왼쪽 노드, 오른쪽 노드</li>
	<li>어떤 노드의 번호가 X라면, 왼쪽 자식 노드의 번호는 2*X, 오른쪽 자식 노드의 번호는 2*X+1이다.</li>
	<li>루트의 번호는 1이다.</li>
</ol>

<p>무한 이진 트리를 탐색할 때는, 루트에서 시작한다. 그리고, 왼쪽 자식 또는 오른쪽 자식으로 이동하거나, 현재 노드에서 그대로 있을 수 있다.</p>

<p>탐색은 L,R,P로 이루어진 문자열로 표현할 수 있다.</p>

<ul>
	<li>L: 왼쪽 자식으로 이동</li>
	<li>R: 오른쪽 자식으로 이동</li>
	<li>P: 현재 노드에 그대로 있음</li>
</ul>

<p>탐색의 값은 마지막으로 방문한 노드의 번호이다. 예를 들어, LR의 값은 5이고, RPP의 값은 3이다.</p>

<p>탐색의 집합은 L,R,P,*로 이루어진 문자열로 표현할 수 있다. *는 3개중 그 어떤 것이 될 수 있다.</p>

<p>탐색의 집합은 문자열과 일치하는 모든 패턴을 포함한다.</p>

<p>예를 들어, L*R은 LLR, LRR, LPR이며, **은 LL,LR,LP,RL,RR,RP,PL,PR,PP이다.</p>

<p>마지막으로, 탐색의 집합의 값은 탐색의 집합에 포함되어 있는 모든 탐색의 값의 합이다.</p>

<p>탐색의 집합의 문자열이 주어졌을 때, 탐색의 집합의 합을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 탐색의 집합의 문자열이 주어진다. 이 문자열은 L,R,P,*로만 이루어져 있으며, 길이가 최대 10,000이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 탐색의 집합의 합을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','P*P
','6
','MATH'),
                                                                                                                (459,'BAEKJOON','https://www.acmicpc.net/problem/2965',2965,'캥거루 세마리','1초','128 MB',3,'<p>캥거루 세 마리가 사막에서 놀고 있다. 사막에는 수직선이 하나 있고, 캥거루는 서로 다른 한 좌표 위에 있다.</p>

<p>한 번 움직일 때, 바깥쪽의 두 캥거루 중 한 마리가 다른 두 캥거루 사이의 정수 좌표로 점프한다. 한 좌표 위에 있는 캥거루가 두 마리 이상일 수는 없다.</p>

<p>캥거루는 최대 몇 번 움직일 수 있을까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 세 캥거루의 초기 위치 A, B, C가 주어진다. (0 < A < B < C < 100)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>캥거루가 최대 몇 번 움직일 수 있는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 3 5
','1
','MATH'),
                                                                                                                (461,'BAEKJOON','https://www.acmicpc.net/problem/2968',2968,'보드 게임의 왕 김동혁','1초','128 MB',18,'<p>동혁이는 창고에서 매우 재미있어 보이는 보드 게임을 발견했다. 이 게임의 보드는 R×C개의 정사각형 칸으로 이루어져 있다. 제일 위부터 0번부터 R-1까지 번호가 매겨져 있고, 제일 왼쪽부터 0번부터 C-1까지 번호가 매겨져 있다.</p>

<p>이 보드게임의 칸은 색다른 방법으로 색칠되어 있고, 각 칸은 회색 또는 흰색으로 색칠되어 있다.</p>

<p>행의 번호와 열의 번호를 이진수로 나타냈을 때, 적어도 한 위치에서 1이 겹치면 흰색이다. 예를 들어, (4, 5)는 흰색이다. 이러한 경우가 아니면 회색이다. 예를 들어, (2, 5)는 회색이다.</p>

<p>10×10크기의 보드판은 다음과 같이 생겼다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/5b18d519-414b-4a16-aceb-fd9959bc70dd/-/preview/" style="width: 359.167px; height: 162.5px;"></p>

<p>동혁이는 자신의 말을 위쪽 오른쪽 그림과 같은 순서로 방문하려고 한다. 말은 (0, 0)에서 시작한다. 이때, 말이 회색 칸을 몇 번 방문하는지 구하려고 한다.</p>

<p>동혁이의 말이 칸을 K번 방문하게 되면, 피곤하기 때문에 더이상 방문하지 않는다.</p>

<p>N, M, K가 주어졌을 때, 회색칸을 몇 번 방문하는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 R과 C가 주어진다. (1 ≤ R,C ≤ 1,000,000)</p>

<p>둘째 줄에는 K가 주어진다. (1 ≤ K ≤ R×C)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 동혁이의 말이 방문한 회색 칸의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10 10
6
','5
','MATH'),
                                                                                                                (460,'BAEKJOON','https://www.acmicpc.net/problem/2974',2974,'자기곱','3초','256 MB',21,'<p>양의 정수 N의 자리곱은 N의 모든 자리를 곱한 것이다. 예를 들어, 2612의 자리곱은 2×6×1×2 = 24 이다.</p>

<p>어떤 수 N의 자기곱은 N과&nbsp;N의 자리곱을 곱한 수이다. 예를 들어, 2612의 자기곱은 2612×24 = 62688이다.</p>

<p>두 양의 정수 A와 B가 주어졌을 때, 자기곱이 A보다 크거나 같고, B보다 작거나 같은 양의 정수의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 A와 B가 주어진다. (1 ≤ A ≤ B < 10<sup>18</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>자기곱이 A보다 크거나 같고, B보다 작거나 같은 양의 정수의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','20 30
','2
','MATH'),
                                                                                                                (462,'BAEKJOON','https://www.acmicpc.net/problem/2980',2980,'도로와 신호등','1초','128 MB',7,'<p>상근이는 트럭을 가지고 긴 일직선 도로를 운전하고 있다. 도로에는 신호등이 설치되어 있다. 상근이는 각 신호등에 대해서 빨간 불이 지속되는 시간과 초록 불이 지속되는 시간을 미리 구해왔다. (빨강색과 초록색 불빛은 무한히 반복된다)</p>

<p>상근이의 트럭이 도로에 진입했을 때, 모든 신호등의 색상은 빨간색이고, 사이클이 막 시작한 상태이다. 상근이는 1초에 1미터를 움직인다. 신호등의 색상이 빨간색인 경우에는 그 자리에서 멈추고 초록색으로 바뀔때 까지 기다린다.</p>

<p>상근이가 도로의 끝까지 이동하는데 걸리는 시간을 구하는 프로그램을 작성하시오. 도로의 시작은 0미터이고, 끝은 L미터인 지점이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 신호등의 개수 N과 도로의 길이 L이 주어진다. (1 ≤ N ≤ 100, 1 ≤ L ≤ 1000)</p>

<p>다음 N개 줄에는 각 신호등의 정보 D, R, G가 주어진다. (1 ≤ D < L, 1 ≤ R ≤ 100, 1 ≤ G ≤ 100) D는 신호등의&nbsp;위치이며, R과 G는 빨간색, 초록색이 지속되는 시간이다.</p>

<p>신호등은 D가 증가하는 순서로 주어지며, 같은 위치에 있는 신호등이 두 개 이상 있는 경우는 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 상근이가 도로의 끝까지 이동하는데 걸리는 시간을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 10
3 5 5
5 2 2
','12
','MATH'),
                                                                                                                (464,'BAEKJOON','https://www.acmicpc.net/problem/2981',2981,'검문','1초','128 MB',12,'<p>트럭을 타고 이동하던 상근이는 경찰의 검문을 받게 되었다. 경찰은 상근이가 운반하던 화물을 하나하나 모두 확인할 것이기 때문에, 검문하는데 엄청나게 오랜 시간이 걸린다.</p>

<p>상근이는 시간을 때우기 위해서 수학 게임을 하기로 했다.</p>

<p>먼저 근처에 보이는 숫자 N개를 종이에 적는다. 그 다음, 종이에 적은 수를 M으로 나누었을 때, 나머지가 모두 같게 되는 M을 모두 찾으려고 한다. M은 1보다 커야 한다.</p>

<p>N개의 수가 주어졌을 때, 가능한 M을 모두 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 종이에 적은 수의 개수 N이 주어진다. (2 ≤ N ≤ 100)</p>

<p>다음 줄부터 N개 줄에는 종이에 적은 수가 하나씩 주어진다. 이 수는 모두 1보다 크거나 같고, 1,000,000,000보다 작거나 같은 자연수이다. 같은 수가 두 번 이상 주어지지 않는다.</p>

<p>항상 M이 하나 이상 존재하는 경우만 입력으로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 가능한 M을 공백으로 구분하여 모두 출력한다. 이때, M은 증가하는 순서이어야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
6
34
38
','2 4
','MATH'),
                                                                                                                (465,'BAEKJOON','https://www.acmicpc.net/problem/2985',2985,'세 수','1초','128 MB',3,'<p>수학을 못해도 너무 못하는 상근이는 정인이에게 과외를 받고 있다. 오늘은 상근이가 사칙연산을 배우는 날이다.</p>

<p>정인이는 공책에 숫자 세개로 이루어진 등식을 적어주었다. (식은 자연수와 등호(=), 그리고 더하기, 빼기, 곱하기, 나누기 기호(+-*/)로 이루어져 있다)</p>

<p>상근이는 이런 등식을 사칙연산을 모르는 창영이게 자랑하다가 그만... 창영이는 숫자를 제외한 기호를 모두 지워버리고 말았다.</p>

<p>세 정수가 주어졌을 때, 원래 정인이가 적어준 등식을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정인이가 적어준 세 정수가 주어진다. 이 수는 100보다 작거나 같은 자연수이다. 항상 정답이 존재하는 경우만 입력으로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 정인이가 원래 적어준 등식을 출력한다. 입력으로 주어진 숫자의 순서는 유지해야 하고, 등호 하나와 더하기, 빼기, 곱하기, 나누기 기호 중 하나로 이루어져 있어야 한다. 만약 등식이 여러 가지가 나올 수 있다면, 그 중 하나만 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 3 8
','5+3=8
','MATH'),
                                                                                                                (466,'BAEKJOON','https://www.acmicpc.net/problem/2986',2986,'파스칼','1초','128 MB',8,'<p>이 이야기는 고창영이 10살 때 있었던 실화이다.</p>

<p>창영이는 10살 때 파스칼을 독학했다. 창영이가 공부하던 책에는 다음과 같은 프로그램이 있었다.</p>

<pre>readln(N);
counter := 0;
for i := N-1 downto 1 do begin
    counter := counter + 1;
    if N mod i = 0 then break;
end;
writeln(counter);
</pre>

<p>창영이는 N을 입력했을 때, 무엇이 출력될지 궁금해졌다.</p>

<p>창영이가 입력한 N이 주어졌을 때, 무엇이 출력되는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 창영이가 입력한 N이 주어진다. N은 1보다 크거나 같고, 10^9보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 결과를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','0
','MATH'),
                                                                                                                (468,'BAEKJOON','https://www.acmicpc.net/problem/2987',2987,'사과나무','1초','128 MB',12,'<p>백준이는 사과나무가 N개 심어져있는 땅의 일부를 구매했다. 백준이가 구매한 땅은 삼각형이다. 따라서, 어떤 사과나무가 백준이의 것인지 알기가 힘들었다.</p>

<p>백준이 땅의 꼭짓점 좌표와 사과나무의 좌표가 주어졌을 때, 백준이 땅의 넓이와 백준이의 사과나무의 개수를 구하는 프로그램을 작성하시오.</p>

<p>만약, 어떤 사과나무가 땅의 경계선에 걸쳐있다면, 이것은 백준이 사과나무이다.</p>

<p>(x<sub>A</sub>,y<sub>A</sub>), (x<sub>B</sub>,y<sub>B</sub>), (x<sub>C</sub>,y<sub>C</sub>) 로 이루어진 삼각형의 넓이는 다음과 같이 구할 수 있다.</p>

<p>|x<sub>A</sub>(y<sub>B</sub>-y<sub>C</sub>)+x<sub>B</sub>(y<sub>C</sub>-y<sub>A</sub>)+x<sub>C</sub>(y<sub>A</sub>-y<sub>B</sub>)| / 2</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>처음 세 개의 줄은 삼각형의 꼭짓점 좌표이다. 다음 줄에는 사과나무의 개수 N이 주어진다. (1 ≤ N ≤ 100). 다음 N개의 줄에는 사과나무의 좌표가 주어진다.</p>

<p>모든 좌표는 1,000보다 작거나 같은 양의 정수이고, 공백으로 구분되어져 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에는 백준이 땅의 넓이를 소수점 첫째자리까지 출력하고, 둘째 줄에는 백준이의 사과나무 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1
5 1
3 3
4
3 1
3 2
3 3
3 4
','4.0
3
','MATH'),
                                                                                                                (467,'BAEKJOON','https://www.acmicpc.net/problem/2991',2991,'사나운 개','1초','128 MB',3,'<p>창영 마을의 우체부, 우유배달원,&nbsp;신문배달원은 상근이네 집에 가는 것을 매우 싫어한다. 그 이유는 상근이네 집에는 사나운 개 두 마리가 지키고 있기 때문이다. 하지만, 그들은 이 개의 행동이 예측 가능하다는 것을 모르고 있다.</p>

<p>매일 아침, 개 한마리는 A분동안 공격적이고, B분동안 조용히 쉬고 있다. 또다른 개는 C분동안 공격적이고, D분동안 조용히 쉰다. 두 개는 이 행동을 계속해서 연속적으로 반복한다.</p>

<p>우체부, 신문배달원, 우유배달원의 도착 시간이 주어졌을 때, 개 몇 마리에게 공격을 받는지 알아내는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 A, B, C, D가 주어진다.&nbsp;</p>

<p>둘째 줄에는 P, M, N가 주어진다. P는 우체부의 도착 시간, M은 우유배달원의 도착 시간, N은 신문배달원의 도착 시간이다. 매일 아침이 시작하는 시간을 0이라고 한다. 도착 시간은 아침이 시작한 후 지난 시간이다. 예를 들어, P가 3이면, 우체부는 아침이 시작하고 세 번째 분이 진행되는 중에 도착했다는 뜻이다.</p>

<p>모든 수는 1보다 크거나 같고, 999보다 작거나 같은 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에는 우체부, 둘째 줄에는 우유배달원, 셋째 줄에는 신문배달원이 개 몇 마리에게 공격 받는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 2 3 3
1 3 4
','2
1
0
','MATH'),
                                                                                                                (471,'BAEKJOON','https://www.acmicpc.net/problem/2997',2997,'네 번째 수','1초','128 MB',3,'<p>상근이는 등차수열을 이루는 정수 4개를 골랐다. 이것은 상근이가 고른 수 4개를 정렬했을 때, 인접한 쌍의 차이가 일정하다는 것을 의미한다. 그 다음 이렇게 고른 수&nbsp;4개를 노래로 만들어서 외우고 다닌다.</p>

<p>어느 날, 상근이는 자신이 고른 4개 수 중 1개를 까먹었다.&nbsp;상근이가 기억하고 있는 수 세 개가 주어졌을 때, 까먹은 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 상근이가 고른 4개의 수 중 3개가 주어진다. 이 수는 크기 순이 아닐 수도 있고, -100보다 크거나 같고, 100보다 작거나 같은 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 까먹은 수를 출력한다. 정답이 여러 개일 경우에는 아무거나 출력하면 된다. 또한 정답이 존재하지 않는 경우는 입력으로 주어지지 않는다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 6 8
','10
','MATH'),
                                                                                                                (470,'BAEKJOON','https://www.acmicpc.net/problem/2998',2998,'8진수','1초','128 MB',4,'<p>창영이는 여러 가지 진법을 공부하고 있다. 창영이는 어제 2진법을 배웠고, 오늘은 8진법을 배웠다. 이제, 2진법 수를 8진법 수로 변환하려고 한다.</p>

<p>창영이가 사용한 방법은 다음과 같다.</p>

<ol>
	<li>2진수의 길이가 3으로 나누어 떨어질 때 까지 수의 앞에 0을 붙인다.</li>
	<li>그 다음, 3자리씩 그룹을 나눈다.</li>
	<li>아래의 표를 참고해 8진수로 바꾼다.</li>
</ol>

<p>2진수가 주어졌을 때, 창영이가 사용한 방법을 이용해 8진수로 바꾸는 프로그램을 작성하시오.</p>

<table class="table table-bordered table-center-20 td-center">
	<tbody>
		<tr>
			<td>000</td>
			<td>0</td>
		</tr>
		<tr>
			<td>001</td>
			<td>1</td>
		</tr>
		<tr>
			<td>010</td>
			<td>2</td>
		</tr>
		<tr>
			<td>011</td>
			<td>3</td>
		</tr>
		<tr>
			<td>100</td>
			<td>4</td>
		</tr>
		<tr>
			<td>101</td>
			<td>5</td>
		</tr>
		<tr>
			<td>110</td>
			<td>6</td>
		</tr>
		<tr>
			<td>111</td>
			<td>7</td>
		</tr>
	</tbody>
</table>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 2진수가 주어진다. 이 수는 100자리 이내이고, 첫 번째 자리는 1이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 8진수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1010
','12
','MATH'),
                                                                                                                (469,'BAEKJOON','https://www.acmicpc.net/problem/3000',3000,'직각 삼각형','1초','128 MB',10,'<p>좌표 평면에 점 N개가 있다.</p>

<p>이때, 빗변을 제외한 나머지 두 변이 좌표축에 평행한 직각삼각형을 이루는 점 3개를 고르는 방법을 수를 구하는 프로그램을 작성하시오.</p>

<p>직각삼각형은 한각이 직각인 삼각형이며, 직각의 대변을 빗변이라고 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 점의 개수 N(3 ≤ N ≤ 100,000)이 주어진다. 둘째 줄부터 N개의 줄에는 점의 좌표가 X Y 순서대로 주어진다. (1 ≤ X,Y ≤ 100,000) 겹치는 점은 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 직각삼각형의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
4 2
2 1
1 3
','0
','MATH'),
                                                                                                                (472,'BAEKJOON','https://www.acmicpc.net/problem/3003',3003,'킹, 퀸, 룩, 비숍, 나이트, 폰','1초','128 MB',1,'<p>동혁이는 오래된 창고를 뒤지다가 낡은 체스판과 피스를 발견했다.</p>

<p>체스판의 먼지를 털어내고 걸레로 닦으니 그럭저럭 쓸만한 체스판이 되었다. 하지만, 검정색 피스는 모두 있었으나, 흰색 피스는 개수가 올바르지 않았다.</p>

<p>체스는 총 16개의 피스를 사용하며, 킹 1개, 퀸 1개, 룩 2개, 비숍 2개, 나이트 2개, 폰 8개로 구성되어 있다.</p>

<p>동혁이가 발견한 흰색 피스의 개수가 주어졌을 때, 몇 개를 더하거나 빼야 올바른 세트가 되는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 동혁이가 찾은 흰색 킹, 퀸, 룩, 비숍, 나이트, 폰의 개수가 주어진다. 이 값은 0보다 크거나 같고 10보다 작거나 같은 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 입력에서 주어진 순서대로 몇 개의 피스를 더하거나 빼야 되는지를 출력한다. 만약 수가 양수라면 동혁이는 그 개수 만큼 피스를 더해야 하는 것이고, 음수라면 제거해야 하는 것이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','0 1 2 2 2 7
','1 0 0 0 0 1
','MATH'),
                                                                                                                (473,'BAEKJOON','https://www.acmicpc.net/problem/3004',3004,'체스판 조각','1초','128 MB',3,'<p>상근이는 3003번에서 동혁이가 발견한 체스판을 톱으로 자르려고 한다.</p>

<p>상근이는 체스판을 최대 N번 자를 수 있으며, 변에 평행하게만 자를 수 있다. 또, 자를 때는 체스판의 그 변의 한쪽 끝에서 다른쪽 끝까지 잘라야 한다. 자른 후에는 조각을 이동할 수 없다.</p>

<p>이때, 최대 몇 조각을 낼 수 있는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. (1 ≤ N ≤ 100)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 상근이가 얻을 수 있는 조각의 최댓값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','2
','MATH'),
                                                                                                                (474,'BAEKJOON','https://www.acmicpc.net/problem/3007',3007,'숫자 원','1초','128 MB',18,'<p>상근이는 공부를 못하는 학생이다. 왜 공부를 못할까? 상근이의 옆에서 수업을 같이 듣는 선영이는 다음과 같이 말했다.</p>

<p>"상근이는 수업시간에 수업을 듣지 않아요. 수업시간 내내 종이에 숫자로 원을 만들고 있지요."</p>

<p>왜 이런 짓을 하고 있는 것일까? 상근이는 생각나는 대로 숫자를 쓰는 것이 아니다. 자신만의 규칙이 있다.</p>

<p>먼저 양의 정수 N개를 머리 속에 생각한다. 그 다음 공책을 한 장 찢고 거기에 생각한 숫자를 원 모양으로 적는다. 상근이는 이 원을 숫자 원이라고 부른다.</p>

<p>여기까지는 연습에 불과하다. 이제 공책을 한 장 더 찢는다. 그 다음, 각 숫자에 양 옆의 숫자를 더해서 새로운 원을 만든다.</p>

<p>상근이는 원을 만드는데 너무 집중을 했고, 교수님은 상근이의 종이를 뺏아가 버렸다. 영리한 상근이는 두 장 중에서 한 장을 숨겼고, 첫 번째 종이만 뺏겼다.&nbsp;</p>

<p>상근이는 두 번째 종이를 이용해서 첫 번째 종이의 숫자를 다시 만들려고 한다. 두 번째 종이에 쓰여 있는 수가 주어졌을 때, 첫 번째 종이에 쓰여 있는 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 번째 숫자 원에 쓰여 있는 수의 개수 N이 주어진다. (3 ≤ N ≤ 10,000)</p>

<p>다음 N개 줄에는 원에 쓰여 있는 수가 원을 이루는 순서대로 주어진다. 숫자는 10<sup>9</sup>보다 작은 자연수이다.</p>

<p>입력으로 주어지는 숫자 원을 만드는 첫 번째 숫자 원은 유일하지 않을 수 있다. 하지만, 항상 답이 존재하는 경우만 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>상근이가 만든 첫 번째 원에 쓰여 있는 수를 N줄에 걸쳐 출력한다. 수는 항상 양의 정수이어야 한다.</p>

<p>원을 회전시킬 수는 없다. 따라서, 처음 세 숫자의 합은 입력으로 주어지는 숫자 중 두 번째 숫자와&nbsp;같아야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
5
5
5
','2
1
2
','MATH'),
                                                                                                                (476,'BAEKJOON','https://www.acmicpc.net/problem/3029',3029,'경고','1초','128 MB',3,'<p>창영마을에서 정인이의 반란은 실패로 끝났다. (<a href="https://www.acmicpc.net/problem/3028">3028번</a>)</p>

<p>테러리스트로 변신한 정인이는 창영마을에 경고를 하려고 한다.</p>

<p>사실 정인이는 창영마을에서 제일 착한사람이다. 따라서, 사람들을 다치지 않게하려고 한다.</p>

<p>유튜브에서 폭발에 대한 동영상을 찾아보다가, 그는 나트륨을 물에 던지면 폭발한다는 사실을 알게 되었다.</p>

<p><iframe frameborder="0" height="480" src="https://www.youtube.com/embed/9sFyfF34iPw" width="640"></iframe></p>

<p>정인이는 창영마을의 중심을 지나는 "강산강" 근처에 숨어있다가, 나트륨을 위의 동영상처럼 물에 던질 것이다.</p>

<p>현재 시간과 정인이가 나트륨을 던질 시간이 주어졌을 때, 정인이가 얼마나 숨어있어야 하는지 구하는 프로그램을 작성하시오. (정인이는 적어도 1초를 기다리며, 많아야 24시간을 기다린다.)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 현재 시간이 hh:mm:ss 형식으로 주어진다. (시, 분, 초) hh는 0보다 크거나 같고, 23보다 작거나 같으며, 분과 초는 0보다 크거나 같고, 59보다 작거나 같다.</p>

<p>둘째 줄에는 나트륨을 던질 시간이 위와 같은 형식으로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 정인이가 기다려야 하는 시간을 입력과 같은 형식으로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','20:00:00
04:00:00
','08:00:00
','MATH'),
                                                                                                                (477,'BAEKJOON','https://www.acmicpc.net/problem/3034',3034,'앵그리 창영','1초','128 MB',3,'<p>창영이는 화가나서 성냥을 바닥에 던졌다.</p>

<p>상근이는 바닥이 더러워진 것을 보고 창영이를 매우 혼냈다.</p>

<p>강산이는 근처에서 박스를&nbsp;발견했다.</p>

<p>상덕이는 강산이가 발견한 박스를 상근이에게 주었다.</p>

<p>상근이는 박스에 던진 성냥을 모두 담아오라고 시켰다.</p>

<p>하지만, 박스에 들어가지 않는 성냥도 있다.</p>

<p>이런&nbsp;성냥은 박스에 담지 않고 희원이에게 줄 것이다.</p>

<p>성냥이 박스에 들어가려면, 박스의 밑면에 성냥이 모두 닿아야 한다.</p>

<p>박스의 크기와 성냥의 길이가 주어졌을 때, 성냥이 박스에 들어갈 수 있는지 없는지를 구하는 프로그램을 작성하시오. 창영이는 성냥을 하나씩 검사한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 던진 성냥의 개수 N과 박스의 가로 크기 W와 세로 크기 H가 주어진다. (1 ≤ N ≤ 50, 1 ≤ W, H ≤ 100)</p>

<p>다음 N개 줄에는 성냥의 길이가 주어진다. 길이는 1보다 크거나 같고 1000보다 작거나 같은 자연수이다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어지는 각각의 성냥에 대해서, 박스안에 들어갈 수 있으면 "DA" 없으면 "NE"를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p><iframe frameborder="0" height="480" src="https://www.youtube.com/embed/bNNzRyd1xz0" width="640"></iframe></p>

				</div>
				</div>','5 3 4
3
4
5
6
7
','DA
DA
DA
NE
NE
','MATH'),
                                                                                                                (481,'BAEKJOON','https://www.acmicpc.net/problem/3036',3036,'링','1초','128 MB',7,'<p>상근이는 창고에서 링 N개를 발견했다. 상근이는 각각의 링이 앞에 있는 링과 뒤에 있는 링과 접하도록 바닥에 내려놓았다.&nbsp;</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/44a0e81a-3870-4e94-8db0-73543fca3aa6/-/preview/" style="width: 259px; height: 127px;"></p>

<p>상근이는 첫 번째 링을 돌리기 시작했고, 나머지 링도 같이 돌아간다는 사실을 발견했다. 나머지 링은 첫 번째 링 보다 빠르게 돌아가기도 했고, 느리게 돌아가기도 했다. 이렇게 링을 돌리다 보니 첫 번째 링을 한 바퀴 돌리면, 나머지 링은 몇 바퀴 도는지 궁금해졌다.</p>

<p>링의 반지름이 주어진다. 이때, 첫 번째 링을 한 바퀴 돌리면, 나머지 링은 몇 바퀴 돌아가는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 링의 개수 N이 주어진다. (3 ≤ N ≤ 100)</p>

<p>다음 줄에는 링의 반지름이 상근이가 바닥에 놓은 순서대로 주어진다. 반지름은 1과 1000를 포함하는 사이의 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 총 N-1줄을 해야 한다. 첫 번째 링을 제외한 각각의 링에 대해서, 첫 번째 링을 한 바퀴 돌리면 그 링은 몇 바퀴 도는지 기약 분수 형태 A/B로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
8 4 2
','2/1
4/1
','MATH'),
                                                                                                                (483,'BAEKJOON','https://www.acmicpc.net/problem/3049',3049,'다각형의 대각선','1초','128 MB',6,'<p>세 대각선이 한 점에서 만나지 않는 볼록 N각형이 주어졌을 때, 대각선의 교차점의 개수를 세는 프로그램을 작성하시오.</p>

<p>아래 그림은 위의 조건을 만족하는 한 육각형의 교차점 그림이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/2afc17c7-9814-4678-b876-b082ea89b995/-/preview/" style="width: 244px; height: 234px;"></p>

<p>모든 내부각이 180도보다 작은 다각형을 볼록 다각형이라고 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. (3 ≤ N ≤ 100)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 교차점의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
','0
','MATH'),
                                                                                                                (478,'BAEKJOON','https://www.acmicpc.net/problem/3052',3052,'나머지','1초','128 MB',4,'<p>두 자연수 A와 B가 있을 때, A%B는 A를 B로 나눈 나머지 이다. 예를 들어, 7, 14, 27, 38을 3으로 나눈 나머지는 1, 2, 0, 2이다.&nbsp;</p>

<p>수 10개를 입력받은 뒤, 이를 42로 나눈 나머지를 구한다. 그 다음 서로 다른 값이 몇 개 있는지 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄부터 열번째 줄 까지 숫자가 한 줄에 하나씩 주어진다. 이 숫자는 1,000보다 작거나 같고, 음이 아닌 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에, 42로 나누었을 때, 서로 다른 나머지가 몇 개 있는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
2
3
4
5
6
7
8
9
10
','10
','MATH'),
                                                                                                                (482,'BAEKJOON','https://www.acmicpc.net/problem/3053',3053,'택시 기하학','1초','128 MB',3,'<p>19세기 독일 수학자 헤르만 민코프스키는 비유클리드 기하학 중 택시 기하학을 고안했다.</p>

<p>택시 기하학에서 두 점 T1(x1,y1), T2(x2,y2) 사이의 거리는 다음과 같이 구할 수 있다.</p>

<p>D(T1,T2) = |x1-x2| + |y1-y2|</p>

<p>두 점 사이의 거리를 제외한 나머지 정의는 유클리드 기하학에서의 정의와 같다.</p>

<p>따라서 택시 기하학에서 원의 정의는 유클리드 기하학에서 원의 정의와 같다.</p>

<p>원: 평면 상의 어떤 점에서 거리가 일정한 점들의 집합</p>

<p>반지름 R이 주어졌을 때, 유클리드 기하학에서 원의 넓이와, 택시 기하학에서 원의 넓이를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 반지름 R이 주어진다. R은 10,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에는 유클리드 기하학에서 반지름이 R인 원의 넓이를, 둘째 줄에는 택시 기하학에서 반지름이 R인 원의 넓이를 출력한다. 정답과의 오차는&nbsp;0.0001까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>유클리드 기하학: <a href="http://ko.wikipedia.org/wiki/%EC%9C%A0%ED%81%B4%EB%A6%AC%EB%93%9C_%EA%B8%B0%ED%95%98%ED%95%99" target="_blank">한국어 위키</a>&nbsp;<a href="http://en.wikipedia.org/wiki/Euclidean_geometry" target="_blank">영문 위키</a>&nbsp;<a href="http://mathworld.wolfram.com/EuclideanGeometry.html" target="_blank">Wolfram Mathworld</a></p>

<p>비유클리드 기하학: <a href="http://ko.wikipedia.org/wiki/%EB%B9%84%EC%9C%A0%ED%81%B4%EB%A6%AC%EB%93%9C_%EA%B8%B0%ED%95%98%ED%95%99" target="_blank">한국어 위키</a>&nbsp;<a href="http://en.wikipedia.org/wiki/Non-Euclidean_geometry" target="_blank">영문 위키</a>&nbsp;<a href="http://mathworld.wolfram.com/Non-EuclideanGeometry.html" target="_blank">Wolfram Mathworld</a></p>

<p>택시 기하학: <a href="http://ko.wikipedia.org/wiki/%ED%83%9D%EC%8B%9C%EA%B8%B0%ED%95%98%ED%95%99" target="_blank">한국어 위키</a>&nbsp;<a href="http://en.wikipedia.org/wiki/Taxicab_geometry" target="_blank">영문 위키</a>&nbsp;<a href="http://mathworld.wolfram.com/TaxicabMetric.html" target="_blank">Wolfram Mathworld</a></p>

				</div>
				</div>','1
','3.141593
2.000000
','MATH'),
                                                                                                                (484,'BAEKJOON','https://www.acmicpc.net/problem/3058',3058,'짝수를 찾아라','1초','128 MB',3,'<p>
	7개의 자연수가 주어질 때, 이들 중 짝수인 자연수들을 모두 골라 그 합을 구하고, 고른 짝수들 중 최솟값을 찾는 프로그램을 작성하시오.</p>

<p>
	예를 들어, 7개의 자연수 13, 78, 39, 42, 54, 93, 86가 주어지면 이들 중 짝수는 78, 42, 54, 86이므로 그 합은 78 + 42 + 54 + 86 = 260 이 되고, 42 < 54 < 78 < 86 이므로 짝수들 중 최솟값은 42가 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력은 T개의 테스트 데이터로 구성된다. 입력의 첫 번째 줄에는 입력 데이터의 수를 나타내는 정수 T가 주어진다. 각 테스트 데이터는 한 줄로 구성되어 있고, 7개의 자연수가 공백으로 구분되어 있다. 입력으로 주어지는 자연수는 1보다 크거나 같고, 100보다 작거나 같다. 7개의 자연수 중 적어도 하나는 짝수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 데이터에 대해, 7개 자연수 중 짝수의 합과 최솟값을 공백으로 구분하여 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1 2 3 4 5 6 7
13 78 39 42 54 93 86
','12 2
260 42
','MATH'),
                                                                                                                (489,'BAEKJOON','https://www.acmicpc.net/problem/3060',3060,'욕심쟁이 돼지','1초','128 MB',6,'<p>
	유명한 농부 박현수는 돼지 6마리를 키우고 있다. 그는 하루에 한 번씩 돼지에게 맛있는 밥을 준다.</p>
<p>
	돼지는 원형 식탁에 앉아서 식사를 한다. 현수의 돼지들은 기억력이 뛰어나기 때문에 전 날 자신의 양쪽과 맞은편에 앉았던 돼지가 먹었던 양을 기억하고 있다. 또, 욕심도 많기 때문에, 그 만큼의 양을 추가하여 식사를 하기를 원한다.</p>
<p>
	예를 들어, 현수가 1번부터 6번까지 돼지에게 각각 3, 2, 7, 1, 5, 4만큼 밥을 주었다면, 2번 돼지는 첫 날 받은 양 2에다 양쪽과 맞은편 돼지가 받은 양 15(3+7+5)만큼을 더해 17만큼 받기를 원한다.</p>
<p>
	마음씩 좋은 농부 박현수는 이런 돼지의 요구를 모두 들어주려고 한다. 매일 현수의 집에 신선한 사료가 N만큼 배달된다. 사료의 유통기한은 하루이기 때문에, 남은 사료는 모두 폐기한다.</p>
<p>
	첫 날 돼지들이 먹었던 양이 주어졌을 때, 현수가 6마리의 돼지들의 요구를 들어줄 수 없게 되는 날이 몇 번째 날인지 구하는 프로그램을 작성하시오.</p>
<p style="text-align: center;">
	<img alt="" src=https://www.acmicpc.net/upload/images/pig.png" style="width: 200px; height: 194px;"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력은 T개의 테스트 데이터로 구성된다. 입력의 첫 번째 줄에는 입력 데이터의 수를 나타내는 정수 T가 주어진다. 각 테스트 데이터는 두 줄로 구성되어 있고, 첫째 줄에는 하루에 배달되는 사료의 양 N (1<=N<=500,000,000)이 주어진다. 그 다음 줄에는 1, 2, 3, 4, 5, 6번 돼지가 첫 날 먹었던 식사의 양이 빈 칸을 사이에 두고 차례대로 주어진다. 첫째 날에 각 돼지가 먹는 사료의 양은 100이하의 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">

<p>
	각 테스트 데이터에 대해, 6마리 돼지의 요구를 모두 들어줄 수 없게 되는 날이 몇 번째 날인지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
21
1 2 3 4 5 6
21
1 2 3 4 5 7
','2
1
','MATH'),
                                                                                                                (485,'BAEKJOON','https://www.acmicpc.net/problem/3062',3062,'수 뒤집기','1초','128 MB',4,'<p>수 124를 뒤집으면 421이 되고 이 두 수를 합하면 545가 된다. 124와 같이 원래 수와 뒤집은 수를 합한 수가 좌우 대칭이 되는지 테스트 하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에는 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 줄에 하나의 정수 N(10 ≤ N ≤ 100000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서 원래 수와 뒤집은 수를 합한 수가 좌우 대칭이 되면 YES를 아니면 NO를 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
13
58
120
5056
','YES
NO
YES
NO
','MATH'),
                                                                                                                (490,'BAEKJOON','https://www.acmicpc.net/problem/3063',3063,'게시판','1초','128 MB',6,'<p>가을 축제를 맞아 영화 동아리의 상원은 과 게시판에 동아리 상영회 포스터를 붙였다. 잠시 후에 와 보니 다른 동아리 사람이 그 위에 다른 행사 포스터를 붙여 일부분이 가려서 보이지 않는 것이다. 동아리 간에는 다른 포스터를 절반 이상은 가릴 수 없도록 되어 있기에 보이는 부분의 넓이를 계산해보고 따지러 가기로 하였다. 포스터는 둘 다 직사각형이며, 게시판 벽에 평행하게 붙어있다고 하자. 각 포스터의 위치는 왼쪽 아래와 오른쪽 위 두 꼭짓점의 좌표로 주어진다.</p>

<p style="text-align:center"><img alt="" src=https://www.acmicpc.net/upload/images/board(1).png" style="height:165px; width:290px"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에는 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 줄에 8개의 정수 x1, y1, x2, y2, x3, y3, x4, y4가 주어진다. 상원이 처음 붙인 포스터의 두 꼭짓점의 좌표 (x1, y1), (x2, y2)와 그 위에 덧붙은 포스터의 꼭짓점의 좌표 (x3, y3), (x4, y4) 이다. 1 ≤ x1 < x2 ≤ 10,000; 1 ≤ y1 < y2 ≤ 10,000; 1 ≤ x3 < x4 ≤ 10,000; 1 ≤ y3 < y4 ≤ 10,000의 범위를 가진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서 보이는 부분의 넓이를 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
2 3 5 8 4 7 6 10
1 1 5 5 2 2 4 4
2 2 4 4 1 1 5 5
','14
12
0
','MATH'),
                                                                                                                (488,'BAEKJOON','https://www.acmicpc.net/problem/3071',3071,'The ♡ System','1초','128 MB',8,'<p>우현이는 수학을 세상에서 제일 좋아한다. 어느 날 우현이는 서든어택을 하던 중에 Yes!!!를 외치면서 새로운 수 체계가 생각해냈다. 우현이는 자신이 사랑하는 사람의 이름을 따서 그 수 체계의 이름을 지었으나, 프라이버시 문제로 ♡진법이라고 이름 붙였다.</p>

<p>♡진법은 3진법과 비슷하게 나타낸다. 제일 마지막 자리부터 3<sup>0</sup>의 자리, 3<sup>1</sup>의 자리, 3<sup>2</sup>의 자리… 로 나타낸다. 그리고 자리수로는 3개의 숫자 -1, 0, 1을 쓴다. 그런데 우현이는 -1이라고 쓰기가 너무 귀찮았으므로, -으로 간단하게 나타내기로 했다.</p>

<p>예를 들면</p>

<ul>
	<li>1 = 1&nbsp;&nbsp;&nbsp;&nbsp; (1×3<sup>0</sup>)</li>
	<li>2 = 1-&nbsp;&nbsp;&nbsp; (1×3<sup>1</sup> + (-1)×3<sup>0</sup>)</li>
	<li>3 = 10&nbsp;&nbsp;&nbsp; (1×3<sup>1</sup> + 0×3<sup>0</sup>)</li>
	<li>4 = 11&nbsp;&nbsp;&nbsp; (1×3<sup>1</sup> + 1×3<sup>0</sup>)</li>
	<li>5 = 1--&nbsp;&nbsp; (1×3<sup>1</sup> + (-1)×3<sup>1</sup> + (-1)×3<sup>0</sup>)</li>
	<li>6 = 1-0&nbsp;&nbsp; (1×3<sup>1</sup>&nbsp;+ (-1)×3<sup>1</sup>&nbsp;+ 0×3<sup>0</sup>)</li>
	<li>2048 = 10-110--</li>
</ul>

<p>이다.</p>

<p>10진법의 수 n이 주어지면, ♡진법으로 변환해 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 총 T개의 테스트 케이스로 이루어져 있다. 첫째 줄에 테스트 케이스의 개수 T가 주어지고, 다음 T개의 줄에 10진법의 수 n (-2<sup>30</sup>&nbsp;≤&nbsp;n ≤&nbsp;2<sup>30</sup>) 이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스에 대해 한 줄에 하나씩 10진법의 수 n을 ♡진법으로 바꾼 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
7
2048
1000
200
-1
-2
','1-1
10-110--
1101001
1-111-
-
-1
','MATH'),
                                                                                                                (491,'BAEKJOON','https://www.acmicpc.net/problem/3087',3087,'상근일','1초','128 MB',12,'<p>상근이는 다음 학기에 먹을 술 값을 벌기 위해서 방학동안 일을 하고 있다. 상근이가 하는 일은 N×N크기의 행렬로 나타낼 수 있으며, 행렬의 각 칸은 작업 하나를 나타낸다. (x, y)에 있는 작업을 하려면, (x, y-1)과 (x-1, y)에 있는 작업을 모두 끝내야 할 수 있다. (그 칸이 존재하는 경우)</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/10af0a03-ab27-4dbf-acd3-ca9c0e800778/-/preview/" style="width: 112px; height: 113px;"></p>

<p>위의 그림은 회색 칸에 해당하는 작업을 하기 위해서 먼저 해야하는 작업을 나타낸 것이다.</p>

<p>상근이는 위에서 설명한 일을 수행할 수 있는 컴퓨터 K개를 가지고 있다. 한 컴퓨터는 한 번에 한 작업을 수행할 수 있으며, 일을 끝내는데 1초가 걸린다. 또, 모든 컴퓨터를 동시에 사용하지 않아도 된다. 상근이가 일을 모두 끝내는데 필요한 최소 시간을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 K가 주어진다. (1 ≤ N, K ≤ 10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 일을 끝내는데 필요한 시간의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 2
','6
','MATH'),
                                                                                                                (486,'BAEKJOON','https://www.acmicpc.net/problem/3096',3096,'영화제','1초','128 MB',11,'<p>넓은 강이 있는 나라가 있다. 강의 왼쪽에는 마을이 N개, 오른쪽에도 N개가 있으며, 각 마을은 1번부터 N번까지 번호가 매겨져 있다. 왼쪽 마을 중 하나와 오른쪽 마을 중 하나를 연결하는 배는 총 M개가 있고, 양방향으로 연결한다.</p>

<p>상근이는 총 4개 마을에서 영화제를 개최하려고 한다. 왼쪽 마을에서 2개, 오른쪽 마을에서 2개를 고르며, 왼쪽 마을은 모두 오른쪽 마을과 배로 직접 연결되어 있어야 한다.</p>

<p>영화제를 개최할 마을을 고르는 방법의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 마을의 수 N (2 ≤ N ≤ 1000)과 배의 수 M (4 ≤ M ≤ N<sup>2</sup>)이 주어진다.</p>

<p>다음 M개 줄에는 배가 연결하는 두 마을의 번호가 왼쪽, 오른쪽 순서대로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>영화제를 개최할 마을을 고르는 방법의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 4
1 2
1 3
2 2
2 3
','1
','MATH'),
                                                                                                                (487,'BAEKJOON','https://www.acmicpc.net/problem/3101',3101,'토끼의 이동','1초','128 MB',13,'<p>1부터 N<sup>2</sup>까지 수가 지그재그 대각선 순서로 N*N 행렬에 채워져 있다. 아래 그림은 N=6일 때, 행렬의 모습이다.</p>

<table class="table table-bordered" style="width:18%;">
	<tbody>
		<tr>
			<td style="width:3%; text-align:center;">1</td>
			<td style="width:3%; text-align:center;">2</td>
			<td style="width:3%; text-align:center;">6</td>
			<td style="width:3%; text-align:center;">7</td>
			<td style="width:3%; text-align:center;">15</td>
			<td style="width:3%; text-align:center;">16</td>
		</tr>
		<tr>
			<td style="text-align:center;">3</td>
			<td style="text-align:center;">5</td>
			<td style="text-align:center;">8</td>
			<td style="text-align:center;">14</td>
			<td style="text-align:center;">17</td>
			<td style="text-align:center;">26</td>
		</tr>
		<tr>
			<td style="text-align:center;">4</td>
			<td style="text-align:center;">9</td>
			<td style="text-align:center;">13</td>
			<td style="text-align:center;">18</td>
			<td style="text-align:center;">25</td>
			<td style="text-align:center;">27</td>
		</tr>
		<tr>
			<td style="text-align:center;">10</td>
			<td style="text-align:center;">12</td>
			<td style="text-align:center;">19</td>
			<td style="text-align:center;">24</td>
			<td style="text-align:center;">28</td>
			<td style="text-align:center;">33</td>
		</tr>
		<tr>
			<td style="text-align:center;">11</td>
			<td style="text-align:center;">20</td>
			<td style="text-align:center;">23</td>
			<td style="text-align:center;">29</td>
			<td style="text-align:center;">32</td>
			<td style="text-align:center;">34</td>
		</tr>
		<tr>
			<td style="text-align:center;">21</td>
			<td style="text-align:center;">22</td>
			<td style="text-align:center;">30</td>
			<td style="text-align:center;">31</td>
			<td style="text-align:center;">35</td>
			<td style="text-align:center;">36</td>
		</tr>
	</tbody>
</table>

<p>토끼는 지금 1이 있는 칸에 있다. 토끼는 인접한 칸으로 점프할 수 있다. (위, 아래, 오른쪽, 왼쪽)</p>

<p>토끼가 점프한 방법이 주어졌을 때, 토끼가 방문한 칸에 있는 수의 합을 구하는 프로그램을 작성하시오. 같은 칸을 여러 번 방문할 경우에도, 방문할 때 마다 더해야 한다. 토끼가 행렬을 벗어나는 경우는 없다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, K가 주어진다. (1 ≤ N ≤ 100,000, 1 ≤ K ≤ 300,000) N은 행렬의 크기, K는 토끼가 점프한 횟수이다.</p>

<p>둘째 줄에는 U,D,L,R로 이루어진 문자열이 주어진다. 이 문자열의 길이는 K이며, 토끼가 점프한 방향이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에, 방문한 칸의 수의 합을 출력한다. 이 값은 32비트 정수를 넘을 수도 있다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 8
DDRRUULL
','47
','MATH'),
                                                                                                                (492,'BAEKJOON','https://www.acmicpc.net/problem/3110',3110,'부등식','1초','128 MB',13,'<p>아래와 같이 물음표를 포함한 부등식이 있다.</p>

<p>\[\frac{A_1}{A_2} < \frac{?}{B} < \frac{?}{C} < \frac{?}{D} < \frac{E_1}{E_2}\]</p>

<p>이때, 부등식이 성립하게 물음표를 양의 정수로 바꾸는 경우의 수는 모두 몇 개가 있을까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 B, C, D가 주어진다. (1 ≤ B, C, D ≤ 1000)</p>

<p>둘째 줄에 A<sub>1</sub>, A<sub>2</sub>가 주어진다. (1 ≤ A<sub>1</sub>, A<sub>2</sub> ≤ 1000)</p>

<p>셋째 줄에 E<sub>1</sub>, E<sub>2</sub>가 주어진다. (1 ≤ E<sub>1,</sub> E<sub>2</sub> ≤ 1000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 부등식을 만족하게 물음표를 양의 정수로 바꾸는 방법의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>세 번째 예제의 경우 다음과 같이 3가지 방법이 있다.</p>

<p>\[\frac{14}{5} < \frac{3}{1} < \frac{28}{9} < \frac{22}{7} < \frac{10}{3}\]\[\frac{14}{5} < \frac{3}{1} < \frac{28}{9} < \frac{23}{7} < \frac{10}{3}\]\[\frac{14}{5} < \frac{3}{1} < \frac{29}{9} < \frac{23}{7} < \frac{10}{3}\]</p>

				</div>
				</div>','3 2 4
2 7
4 5
','1
','MATH'),
                                                                                                                (494,'BAEKJOON','https://www.acmicpc.net/problem/3113',3113,'양','1초','128 MB',16,'<p>상근이는 양을 복제하려고 한다. 따라서 복제 기계 N개를 구매했다.</p>

<p>복제 기계에는 키보드가 하나씩 달려있고, 양의 정수를 입력할 수 있다. 기계 안에 양이 K마리 있고, 키보드로 p를 입력했다고 하자. 이 상태에서 복제 버튼을 누르면 기계 안에 있는 양은 총 p*K마리가 된다.</p>

<p>기계에 입력하는 p는 항상 소수이어야 한다. 또, 복제 기계에는 최대 용량이 정해져있고, 이 수만큼 양이 들어있을 수 있다.</p>

<p>상근이는 복제를 하기 위해서 기계로 이동하고 버튼을 누르는 것이 매우 귀찮았다. 결국 상근이는 조수 N명을 고용했고, 각 기계 앞에 한 명씩 배정했다. 그 다음, 각 조수에게 다음과 같은 명령을 외칠 것이다.</p>

<ul>
	<li>ENTER p - 이 명령은 모든 조수에게 기계에 p를 입력하라는 명령이다. p는 항상 소수이다.</li>
	<li>CLONE a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>k</sub> - 기계 a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>k</sub>의 앞에 서 있는 조수에게 복제 버튼을 누르라는 명령이다. 조수가 혼란에 빠지지 않게 하기 위해, 각 숫자는 모두 서로 다르다. 하지만, 상근이는 집중력이 매우 부족하기 때문에 한 번에 최대 M개의 숫자만 말할 수 있다.</li>
</ul>

<p>상근이는 각 기계에 양을 한 마리씩 넣어 놓았다. 기계를 최대한 효율적으로 이용하기 위해서 각 기계의 최대 용량만큼 양을 복제하려고 한다. 양은 복제를 하는 중간에 뺄 수 없다. 또, 목이 아프기 때문에 명령을 최대한 조금 외치려고 한다.</p>

<p>각 기계의 최대 용량과 M이 주어졌을 때, 양을 최대한 많이 만들기 위해서 필요한 명령의 순서를 구하는 프로그램을 작성하시오. 명령의 수는 최소이어야 하며, 가능한 명령의 순서가 여러 가지인 경우에는 아무거나 출려가면 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 복제 기계의 수 N이 주어진다. (1 ≤ N ≤ 50)</p>

<p>둘째 줄에는 각 기계의 최대 용량이 주어진다. 이 값은 1,000,000,000보다 작은 자연수이다.</p>

<p>셋째 줄에는 상근이가 한 번의 CLONE 명령에서 외칠 수 있는 최대 수의 개수 M이 주어진다. (1 ≤ M ≤ N)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>한 줄에 하나씩 상근이가 외치는 명령을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
2 3 6
2
','ENTER 2
CLONE 1 3
ENTER 3
CLONE 2 3
','MATH'),
                                                                                                                (495,'BAEKJOON','https://www.acmicpc.net/problem/3116',3116,'생물학자','1초','128 MB',14,'<p>생물학자를 꿈꾸는 강산이는 새해 선물로 현미경을 받았다.&nbsp;</p>

<p>어느 날, 물 속에 있는 박테리아의 움직임을 관찰하고 있었다. 관찰을 한 시간 정도 하다보니, 일정한 규칙대로 움직인다는 것을 알 수 있었다.</p>

<p>물방울은 크기가 무한대인 정사각형 격자로 모델링 할 수 있다. 박테리아는 한 정사각형에 있다. 박테리아가 움직이는 방향은 다음과 같이 숫자로 표현할 수 있다.</p>

<table class="table table-bordered" style="width: 12%;">
	<tbody>
		<tr>
			<td style="width: 4%; text-align:center;">1</td>
			<td style="width: 4%; text-align:center;">2</td>
			<td style="width: 4%; text-align:center;">3</td>
		</tr>
		<tr>
			<td style="text-align:center;">8</td>
			<td style="text-align:center;">B</td>
			<td style="text-align:center;">4</td>
		</tr>
		<tr>
			<td style="text-align:center;">7</td>
			<td style="text-align:center;">6</td>
			<td style="text-align:center;">5</td>
		</tr>
	</tbody>
</table>

<p>모든 박테리아는 동시에 움직이고, 1초 단위로 움직이고, 한 방향으로만 움직인다. 박테리아 여러 마리가 같은 칸에 있을 수도 있다.</p>

<p>박테리아의 위치와 움직이는 방향이 주어졌을 때, 박테리아 여러 마리가 같은 칸에 제일 많이 있을 때가 언제인지, 그리고 그 때 몇 마리가 같은 칸에 있었는지 구하는 프로그램을 작성하시오. 만약 이러한 최댓값이 여러개라면, 가장 빠른 시간을 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 박테리아의 수 N(1 ≤ N ≤ 5,000)이 주어진다.다음 N개의 줄에는 세 개의 정수 X, Y, D (-1,000,000 ≤ X,Y ≤ 1,000,000), (1 ≤ D ≤ 8) 가 주어진다.&nbsp;</p>

<p>X와 Y는 박테리아의 시작 좌표이며, D는 방향이다. X값은 왼쪽에서 오른쪽으로 갈 수록 증가하며, Y값은 위로 갈수록 증가한다.</p>

<p>박테리아의 시작 위치가 겹치는 경우는 없으며, 적어도 한 번은 박테리아가 만난다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 박테리아가 같은 칸에 가장 많이 있었을 때, 몇 마리나 있었는지 출력한다. 둘째 줄에는 그 때의 시간을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
2 2 2
2 3 6
5 1 2
5 9 6
','2
4
','MATH'),
                                                                                                                (497,'BAEKJOON','https://www.acmicpc.net/problem/3124',3124,'공원 산책','1초','128 MB',14,'<p>이비카는 근처 공원에서 산책을 하기로 마음먹었다. 그 공원은 N+1개의 분수가 있는데, 가장 큰 것은 공원의 중심에, 나머지 N개는 가장 큰 분수를 원 모양으로 둘러싸고 있다. 둘러싸고 있는 분수들은 1부터 N까지의 번호로, 가운데의 분수는 N+1으로 표기되어 있다.</p>

<p>가장자리를 둘러싸는 분수는 원을 이루는 길로 서로 연결되어 있고, 그 분수들은 가운데의 분수와도 연결되어 있어 길들의 개수를 모두 합치면 2*N이다.</p>

<p>어떤 길들은 자원봉사들에 의해 청소되는데, 보통 쓸 수 없다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/14a64f97-6bbd-41ff-912c-4593c3cc8872/-/preview/" style="width: 127px; height: 117px;"></p>

<p>그림은 N=6인 공원을 나타낸 것이다. 이 그림에서 모든 길들은 사용 가능하다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/ae8cd9ec-0f9b-4a9c-bece-f6c0fe09c5b0/-/preview/" style="width: 124px; height: 117px;"></p>

<p>첫 번째 그림과 같은 공원이지만, 몇몇 길들을 사용할 수 없다.</p>

<p>이비카는 그의 산책을 어떤 분수 근처에서 시작한다. 그는 같은 분수에 두번 가거나 같은 길을 두번 사용하고 싶어 하지 않는다. 산책은 이비카가 시작한 분수에 다시 도착했을 때 끝난다.</p>

<p>이비카가 할 수 있는 산책의 경로의 개수를 계산하는 프로그램을 작성하라. 두 경로는 같은 경로를 포함하지 않을 때 다르다. (따라서 시작 분수와 길의 순서는 상관이 없다.) 위에 있는 두 번째 그림의 경우, 1-2-3-7-6-1, 1-2-3-7-4-5-6-1, 4-5-6-7-4 의 세 가지 산책 경로가 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 가장자리를 둘러싼 분수의 개수인 정수 N(2 ≤ N ≤ 100000)이 입력으로 주어진다.</p>

<p>두 번째와 세 번째 줄에는 0과 1로 이루어진 배열이 주어진다. 0은 사용 불가능한 경로를, 1은 사용 가능한 경로를 의미한다.</p>

<p>두 번째 줄의 배열은 가장자리를 둘러싼 분수끼리를 연결하는 바깥의 길의 사용 가능 여부를 나타낸다. 길의 사용 가능 여부는 시계 반대 방향으로 주어지며, 분수 N과 1을 연결하는 길의 사용 가능 여부로 시작한다.</p>

<p>세 번째 줄의 배열은 가장자리의 분수와 가운데 분수를 연결하는 안의 길의 사용 가능 여부를 나타낸다. 길의 사용 가능 여부는 시계 반대 방향으로 주어지며, 분수 1과 가운데 분수를 연결하는 길의 사용 가능 여부로 시작한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>가능한 산책 경로의 경우의 수를 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
111
111
','7
','MATH'),
                                                                                                                (496,'BAEKJOON','https://www.acmicpc.net/problem/3130',3130,'붙인드롬','1초','128 MB',12,'<p>상근이와 정인이는 수학을 사랑한다. 상근이는 매우 창의적이어서 새로운 아이디어를 잘 낸다. 정인이는 며칠 동안 상근이의 아이디어를 이해한다.</p>

<p>어느 날 상근이와 정인이는 팰린드롬을 배웠다. 팰린드롬은 앞에서 읽을 때와, 뒤에서 읽을 때 같은 문자열이다. 예를 들면, "ANA", "1991", "RADAR"는 팰린드롬이다.</p>

<p>며칠 뒤, 상근이는 팰린드롬에 대한 새로운 개념을 생각해냈다. 바로 "붙인드롬"이다.</p>

<p>붙인드롬은 숫자이고, 같은 길이의 팰린드롬 2개를 붙인 것이다. 이 두 팰린드롬은 모두 숫자로 이루어져 있고, 첫 팰린드롬의 첫 번째 자리는 0이 아니다.&nbsp;</p>

<p>예를 들어, 393020은 붙인드롬이다. (두 팰린드롬 393, 020을 여서 만들 수 있다) 하지만, 222와 010202는 붙인드롬이 아니다.</p>

<p>정인이는 이 붙인드롬에 대해서 30분정도 고민하다 보니, 6자리 붙인드롬 중에서 12345로 나누어 떨어지는 것은 555525 하나라는 것을 알게 되었다.</p>

<p>정인이는 상근이보다 뛰어나다는 점을 강조하기 위해서, N자리 붙인드롬 중에서 M으로 나누어 떨어지는 것의 개수를 구하려고 한다.</p>

<p>N과 M이 주어졌을 때, N자리 붙인드롬 중, M으로 나누어 떨어지는 것의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 M이 주어진다. (2 ≤ N ≤ 20, 1 ≤ M ≤ 1,000,000) N은 짝수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에, N자리 붙인드롬 중에서 M으로 나누어 떨어지는 것의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 12345
','1
','MATH'),
                                                                                                                (493,'BAEKJOON','https://www.acmicpc.net/problem/3135',3135,'라디오','1초','128 MB',6,'<p>준하는 라디오 수집광으로 신제품의 라디오가 나올때마다 흥분을 금치&nbsp;못한다고 한다.</p>

<p>최근 준하가 구입한 라디오는 매우 하이테크 한데, 그 라디오에는 다음과 같은 버튼이 있다.</p>

<ul>
	<li>첫 번째 버튼은 주파수를 1MHz 증가시킨다.</li>
	<li>두 번째 버튼은 주파수를 1MHz 감소시킨다.</li>
	<li>나머지 N개의 버튼은 즐겨찾기 기능으로, 미리 지정된 주파수로 이동한다.</li>
</ul>

<p>준하는 몸이 안좋아&nbsp;하루에 손가락을 몇&nbsp;번 움직이지 못하기 때문에 우리의 도움이 필요하다.</p>

<p>현재&nbsp;주파수 A와 듣고싶은 주파수 B가 주어질 때,&nbsp;</p>

<p>주파수 A에서 B로 갈 때 눌러야 하는 가장 적은 버튼수를&nbsp;구해주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫&nbsp;줄엔 정수&nbsp;A와 B가 주어진다 (1 ≤ A, B < 1000, A ≠ B).</p>

<p>다음&nbsp;줄엔 정수&nbsp;N이 주어진다 (1 ≤ N ≤ 5).</p>

<p>다음 N개의 줄엔 미리 지정되어 있는 주파수가 주어진다&nbsp;(주파수는&nbsp;1000 보다 작다).</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>주파수 A에서 B로 갈 때 눌러야 하는 버튼수의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','100 15
1
15
','1
','MATH'),
                                                                                                                (498,'BAEKJOON','https://www.acmicpc.net/problem/3142',3142,'즐거운 삶을 위한 노력','1초','128 MB',14,'<p>더 나은 삶을 위해 사람들은 특이한 장치 하나를 공공장소에 놓기로 결정했다. 이 장치는 키보드와 화면을 통해 입출력을 주고받으며, 내부에 정수 하나를 저장한다. 초기에 저장되어있는 정수는 1이다.</p>

<p>이 장치는 아래와 같은 과정으로 작동한다.</p>

<ul>
	<li>사용자는 키보드를 통해 정수 하나를 입력한다.</li>
	<li>이 장치는 원래의 수에 입력된 수를 곱해 저장한다.</li>
	<li>그러고 나면 결과가 완전제곱수인지를 화면에 출력한다. 만약 완전제곱수가 맞을 경우 사용자는 기쁘게 춤을 추고 뛰며 다른 사람들에게 걸리지 않도록 조심스럽게 장치로부터 다른 곳으로 간다.</li>
</ul>

<p>사람들이 입력하는 수가 순서대로 주어졌을 때, 누가 기쁘게 되는지를 알아내시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 이 장치를 이용하는 사람의 수 N(1 ≤ N ≤ 500 000)이 들어온다.</p>

<p>다음 N개의 줄에는 사람들이 입력한 정수 a<sub>i</sub>(1 ≤ a<sub>i</sub> ≤ 1 000 000)가 사용하는 순서대로 한 줄에 하나씩 들어온다.</p>

<p>장치에 저장되는 수의 범위가 64비트 int형의 범위를 벗어날 수도 있음에 유의하라.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>장치에 저장된 수가 완전제곱수이면 "DA"를, 그렇지 않다면 "NE"를 각각의 사용자가 얻는 순서대로 출력하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
2
2
2
2
2
','NE
DA
NE
DA
NE
','MATH'),
                                                                                                                (499,'BAEKJOON','https://www.acmicpc.net/problem/3152',3152,'예쁜 숫자','1초','128 MB',9,'<p>p는 2보다 큰 정수이다. 다음과 같은 규칙으로&nbsp;무한 이진 트리의&nbsp;각 노드에 정수인 숫자가 매겨진다.</p>

<ul>
	<li>루트 노드에는 1을 매긴다.</li>
	<li>노드에 x가 매겨져 있다면 해당 노드의 왼쪽 자식 노드에는 p *&nbsp;x, 오른쪽 자식 노드에는 p *&nbsp;x&nbsp;+&nbsp;1이 매겨진다.</li>
</ul>

<p>예를 들어 p = 3 일때 트리의 시작 부분은 다음과 같을 것이다.</p>

<p style="text-align:center"><img src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/userupload/insu_nym/20160121/20ac1a532aec950c639dcc70a7a6366e.png" style="height: 176.667px; width: 340px;"></p>

<p>어떤 숫자는 무한 이진 트리 내의 서로 다른 두 노드에 매겨진 두 숫자의 합으로 표현 할&nbsp;수 있는 방법이 한&nbsp;가지면&nbsp;"예쁜 숫자"로 분류된다. 주어진 p로 만든&nbsp;무한 이진 트리 내에서&nbsp; n<sub>1</sub>, n<sub>2</sub>, n<sub>3</sub>,&nbsp;n<sub>4</sub>가 "예쁜"지&nbsp;출력하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>한 줄에 정수&nbsp;p,&nbsp;n<sub>1</sub>, n<sub>2</sub>, n<sub>3</sub>,&nbsp;n<sub>4</sub>가 차례로 주어진다. (2 < p < 50, 0 < n<sub>1</sub>&nbsp;< 10<sup>18</sup>, 0 < n<sub>2</sub>&nbsp;< 10<sup>18</sup>, 0 < n<sub>3</sub>&nbsp;< 10<sup>18</sup>, 0 < n<sub>4</sub>&nbsp;< 10<sup>18</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>한 줄에 차례로 n<sub>1</sub>, n<sub>2</sub>, n<sub>3</sub>, n<sub>4</sub>가 예쁘면 1을, 아니면 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 7 28 13 9
','1 1 0 0
','MATH'),
                                                                                                                (479,'BAEKJOON','https://www.acmicpc.net/problem/3164',3164,'패턴','1초','128 MB',12,'<p>상근이는 제1사분면에 아래와 같은 패턴을 그리고 있다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/3946d285-aeb7-4188-8701-7f2532fcc37b/-/preview/" style="width: 273px; height: 272px;"></p>

<p>직사각형이 주어졌을 때, 직사각형에 포함되는 어두운&nbsp;정사각형의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 직사각형의 왼쪽 아래 꼭짓점 좌표(X1, Y1)와 오른쪽 위 좌표(X2, Y2)가 주어진다. (0 &nbsp;≤ X1 < X2 ≤ 1,000,000, 0 ≤ Y1 < Y2 ≤ 1,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어진 직사각형에 포함된 어두운 정사각형의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 3 7 6
','8
','MATH'),
                                                                                                                (501,'BAEKJOON','https://www.acmicpc.net/problem/3177',3177,'크로아티아 수 읽기','1초','128 MB',16,'<p>아래 표는 크로아티아어에서 숫자를 읽는 발음을 정리한 것이다. 크로아티아 숫자는&nbsp;1,000 단위로 끊어서 읽는다.&nbsp;가장 큰 자리수의 숫자가 1 이 아닐 경우 해당 숫자를 읽는다.&nbsp;가장 큰 자리수의 숫자가 1일 경우, 1을 생략하고 자리수를 나타내는 숫자부터 읽는다. 예외적으로 1은 jedan 그대로 발음하며, &nbsp;1,000 단위로 끊은 결과가 11과 19 사이의 값일 경우, 아래 표에 나와있는 값을 읽는다.&nbsp;예를 들어 40 은 <strong>?</strong>etiri 로 시작하고, 705 는 <strong>s</strong>edam으로, 150 은 <strong>s</strong>to로, 1 500 은 <strong>t</strong>isu?u로, 15 000 은 <strong>p</strong>etnaest로 시작한다.</p>

<table class="table table-bordered" style="width:60%">
	<tbody>
		<tr>
			<th>1</th>
			<td><strong>j</strong>edan</td>
			<th>10</th>
			<td><strong>d</strong>eset</td>
			<th>1xx</th>
			<td><strong>s</strong>to</td>
		</tr>
		<tr>
			<th>2</th>
			<td><strong>d</strong>va</td>
			<th>11</th>
			<td><strong>j</strong>edanaest</td>
			<th>1xxx</th>
			<td><strong>t</strong>isu?u</td>
		</tr>
		<tr>
			<th>3</th>
			<td><strong>t</strong>ri</td>
			<th>12</th>
			<td><strong>d</strong>vanaest</td>
			<th>1xxxx</th>
			<td><strong>d</strong>eset tisu?a</td>
		</tr>
		<tr>
			<th>4</th>
			<td><strong>?</strong>etiri</td>
			<th>13</th>
			<td><strong>t</strong>rinaest</td>
			<th>1xxxxx</th>
			<td><strong>s</strong>to tisu?a</td>
		</tr>
		<tr>
			<th>5</th>
			<td><strong>p</strong>et</td>
			<th>14</th>
			<td><strong>?</strong>etrnaest</td>
			<th>1xxxxxx</th>
			<td><strong>m</strong>ilijun</td>
		</tr>
		<tr>
			<th>6</th>
			<td><strong>?</strong>est</td>
			<th>15</th>
			<td><strong>p</strong>etnaest</td>
			<th>1xxxxxxx</th>
			<td><strong>d</strong>eset milijuna</td>
		</tr>
		<tr>
			<th>7</th>
			<td><strong>s</strong>edam</td>
			<th>16</th>
			<td><strong>?</strong>esnaest</td>
			<th>1xxxxxxxx</th>
			<td><strong>s</strong>to milijuna</td>
		</tr>
		<tr>
			<th>8</th>
			<td><strong>o</strong>sam</td>
			<th>17</th>
			<td><strong>s</strong>edamnaest</td>
			<th>1xxxxxxxxx</th>
			<td><strong>m</strong>ilijarda</td>
		</tr>
		<tr>
			<th>9</th>
			<td><strong>d</strong>evet</td>
			<th>18</th>
			<td><strong>o</strong>samnaest</td>
			<th>1xxxxxxxxxx</th>
			<td><strong>d</strong>eset milijardi</td>
		</tr>
		<tr>
			<th>&nbsp;</th>
			<td>&nbsp;</td>
			<th>19</th>
			<td><strong>d</strong>evetnaest</td>
			<th>1xxxxxxxxxxx</th>
			<td><strong>s</strong>to milijardi</td>
		</tr>
	</tbody>
</table>

<p>주어진 알파벳으로 시작하는 양수의 수열을 생각해보자. 예를 들어 P로 시작하는 수들의 수열은 5, 15, 50, 51, 52, ..., 59, 500, 501, ... 이다.</p>

<p>주어진 알파벳으로 시작하는 양수의 수열에서 N번째 수를 찾는 프로그램을 작성하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력으로는 D, J, M, O, P, S, T 중 하나와 정수 N이 입력된다.</p>

<p>단, 출력은 10<sup>12</sup>을 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>수열의 N번째 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','S 1
','7
','MATH'),
                                                                                                                (505,'BAEKJOON','https://www.acmicpc.net/problem/3203',3203,'프로그래밍 언어 Z','2초','128 MB',22,'<p>프로그래밍 언어 Z에는 변수를 26가지 사용할 수 있다. 이 변수는 모두 알파벳 소문자 (a-z)이고, 초기값은 0이다.</p>

<p>프로그램이 수행되는 동안 각 변수에는 0보다 크거나 같고, 9999보다 작거나 같은 정수만 저장할 &nbsp;수 있다. 만약, 범위를 넘어가는 값을 변수에 저장하려 한다면, 10,000으로 나눈 나머지를 저장한다.</p>

<p>프로그램의 각 줄에는 명령어가 하나만 등장하며, 아래 5가지 중 하나이다.</p>

<table class="table table-bordered" style="width:100%">
	<tbody>
		<tr>
			<th style="width:20%">BEGIN</th>
			<td style="width:60%">프로그램의 가장 첫 줄에 나온다.</td>
		</tr>
		<tr>
			<th>=</th>
			<td>연산자의 왼쪽에 있는 변수에, 오른쪽에 있는 식의 결과를 저장한다. 식은 하나 또는 그 이상의 덧셈, 뺄셈으로 이루어져 있고, 각 항은 상수 또는 변수이다. 이때, 변수의 앞에 상수가 붙어있을 수도 있고 이때는 그 변수를 상수만큼 곱하면 된다. (a = 2b + 4 - c) 모든 연산자의 앞, 뒤는 공백이다. 상수는 0보다 크거나 같고, 999보다 작거나 같은 정수이다.</td>
		</tr>
		<tr>
			<th>REPEAT n</th>
			<td>블록의 시작을 나타내며, 그 블록을 n번 반복한다. (1 <= n <= 100,000)</td>
		</tr>
		<tr>
			<th>STOP</th>
			<td>블록의 끝을 나타낸다.</td>
		</tr>
		<tr>
			<th>PRINT var</th>
			<td>변수 var에 저장되어 있는 값을 var = value와 같은 형태로 출력한다.</td>
		</tr>
	</tbody>
</table>

<p>프로그래밍 언어 Z로 된 프로그램이 주어졌을 때, 화면에 출력되는 내용을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 프로그래밍 언어 Z로 되어있는 프로그램이 주어진다. 이 프로그램은 최대 50줄이다. 각 줄에는 명령어가 하나씩 있고, 이 명령은 100자 이내이다. BEGIN…STOP, REPEAT…STOP은 공백 3칸씩 인덴트 되어 있다.&nbsp;PRINT는 최대 20번 실행&nbsp;된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>프로그램을 수행하면서 PRINT가 나올 때 마다, 그 결과를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','BEGIN
   n = 10
   k = 1
   REPEAT 3
      REPEAT 2
         n = n + k
         PRINT n
      STOP
      k = 3 - k
   STOP
STOP
','n = 11
n = 12
n = 14
n = 16
n = 17
n = 18
','MATH'),
                                                                                                                (509,'BAEKJOON','https://www.acmicpc.net/problem/3213',3213,'피자','1초','128 MB',7,'<p>오늘은 상근이의 생일이다. 상근이는 친구들과 피자를 먹으러 갔다.</p>

<p>상근이의 친구들은 매우 어려서 피자 한 판을 먹을 수 없다. 하지만, 각 친구들은 자신이 먹을 수 있는 피자의 양을 알고 있다.</p>

<p>친구들이 먹을 수 있는 피자의 양은 항상 1/4, 1/2, 3/4 중 하나이다.</p>

<p>상근이는 피자 최소 몇 판을 시키면 친구들이 모두 피자를 자신이 먹을 수 있는 양만큼 먹을 수 있는지 구하는 프로그램을 작성하시오. 상근이는 피자를 먹지 않으며, 모든 친구들이 정확히 한 조각씩 피자를 가져야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 친구의 수 N이 주어진다. (1 ≤ N ≤ 10,000)</p>

<p>다음 N개 줄에는 각 친구가 먹을 수 있는 피자의 양이 주어진다. 이 값은 항상 분수이며, 1/4, 1/2, 3/4중 하나이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>피자를 최소 몇 판 시키면 모든 친구들이 자신이 먹을 수 있는 양만큼 먹는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1/2
3/4
3/4
','3
','MATH'),
                                                                                                                (507,'BAEKJOON','https://www.acmicpc.net/problem/3226',3226,'전화 요금','1초','128 MB',5,'<p>7:00부터 19:00까지 전화 요금은 1분에 10원이다.</p>

<p>19:00부터 7:00까지 전화 요금은 1분에 5원이다.</p>

<p>상근이가 전화를 건 시간과 통화 시간이 모두 주어졌을 때, 전화 요금을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 상근이가 건 전화의 수 N이 주어진다. (1&nbsp;≤ N&nbsp;≤ 100)</p>

<p>다음 N개 줄에는 상근이가 건 전화에 대한 정보가 HH:MM DD와 같은 형식으로 주어진다.</p>

<p>HH:MM은 전화를 건 시간이며, DD는 통화 시간이다. DD는 최대 60이며, MM과 DD사이에는 공백이 하나 주어진다.</p>

<p>만약 시나 분이 한자리 숫자라면, 앞에 0이 하나 주어진다.</p>

<p>시간은 00:00부터 23:59까지이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>총 전화 요금을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
11:02 11
15:30 01
','120
','MATH'),
                                                                                                                (511,'BAEKJOON','https://www.acmicpc.net/problem/3307',3307,'대회가 끝나고 난 뒤 빰빠빰','1초','128 MB',16,'<p>CEOI 2011 준비를 끝내니&nbsp;파티를 열고 싶어졌다. 사실 파티보다는 풍선이 불고 싶다. n개의 풍선이 있고, 모두 완전한 공모양&nbsp;풍선이며 바닥에 놓여져&nbsp;있다.</p>

<p>풍선에는 아직 바람을 넣지 않아서, 각 풍선의 반지름은 0에서 시작한다. 덧붙여, i번째 풍선은&nbsp;x<sub>i</sub>좌표에&nbsp;착 붙어 있어&nbsp;움직이지도 공중에 떠오르지도 않는다. 각 풍선은&nbsp;왼쪽에서 오른쪽 순서대로 바람을 넣는다. 그 풍선은 반지름의&nbsp;한계까지 (r<sub>i</sub>에 다다를 때까지) 점점 늘어나거나, 혹은 이전에 부풀린 다른 풍선과 맞닿을 때까지 늘어난다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/3307/1.png" style="height:231px; opacity:0.9; text-align:center; width:384px"></p>

<p style="text-align: center;">그림 1 : 예제의 풍선을 모두 부풀린 모습이다.</p>

<p>풍선을 모두 부풀리기 위해서&nbsp;공기가 얼마나 필요한지 알고 싶다. 각 풍선들의 최종 반지름을 구하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 풍선의 개수&nbsp;n이 주어진다 (1 ≤ n ≤ 200 000). &nbsp;이어지는 n개의 줄에는 풍선에 대한 정보가 주어진다.&nbsp;</p>

<p>각 i번째 줄에는&nbsp;x<sub>i</sub>와&nbsp;&nbsp;r<sub>i</sub> 두 개의 정수가 주어진다.&nbsp;(풍선이 놓여 있는 x축 좌표&nbsp;0 ≤ x<sub>i&nbsp;</sub>≤ 10<sup>9</sup>, &nbsp;풍선의 반지름의 최댓값&nbsp;1 ≤ r<sub>i</sub>&nbsp;≤ 10<sup>9</sup>). 각 풍선들의 위치인 x좌표는 반드시 오른쪽으로만 나아간다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>결과값은 반드시 n개의 줄로 출력되어야 하며, i번째 줄에는 정확히 i번째 풍선의 최종 반지름만 출력되어야 한다.&nbsp;0.001 이하의 오차는 허용된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
0 9
8 1
13 7
','9.000
1.000
4.694
','MATH'),
                                                                                                                (522,'BAEKJOON','https://www.acmicpc.net/problem/3343',3343,'장미','1초','128 MB',12,'<p>상근이는 발렌타인 데이를 기념해 여자친구에게 노란 장미 N개를 선물하려고 한다. 상근이네 집 근처에 꽃집의 수는 두 개이다. 두 꽃 집은 발렌타인 대이를 대비해 많은 꽃을 준비했기 때문에, 꽃이 부족한 일은 없다. 하지만, 두 곳 모두 장미를 다발로 묶어서 판다.</p>

<p>첫 번째 꽃집은 장미 A개를 B원에 팔고, 두 번째 꽃집은 C개를 D원에 판다. A, B, C, D는 모두 양의 정수이다. 만약, 장미 N개를 보다 많이 구매하는 것이 정확하게 N개를 구매하는 것 보다 가격이 저렴하면, N개 보다 많이 구매한 다음 남은 장미는 꽃집 점원에게 줄 것이다.</p>

<p>상근이가 장미를 적어도 N개 구매하는데 필요한 최소 금액을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, A, B, C, D가 주어진다. N은 10<sup>15</sup>를 넘지 않으며, A, B, C, D는 10<sup>5</sup>를 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 장미를 적어도 N개 사는데 필요한 돈의 최솟값을 출력한다. 정답은 항상 10<sup>18</sup>을 넘지 않는다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 꽃 집에서 꽃 다발 1개, 두 번째 꽃 집에서 2개를 구매한다.</p>

				</div>
				</div>','22 2 3 10 14
','31
','MATH'),
                                                                                                                (525,'BAEKJOON','https://www.acmicpc.net/problem/3360',3360,'깡총깡총','1초','128 MB',10,'<p>CTP마을에 사는 토끼&nbsp;아람이는 3,2,1미터씩 뛰어서 n미터를 지난다. 람토끼가 지나야하야 하는 길이가 주어졌을 때 점프 길이가 증가하지 않는&nbsp;순서로&nbsp;지나가는 방법은&nbsp;총 몇 가지가 있을까?</p>

<p>찾을 수 있는 모든 경우의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>n이 표준입력으로 들어온다. (1 ≤ n ≤ 10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>프로그램의 결과값을 표준출력으로 나타내시오. 값은 1000000으로 나눈 나머지를 출력하시오</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>1,2,3을 더해서 6이 되면서 증가하지 않는 수열로 이루어진 경우는 다음 7가지 이다. 7을&nbsp;1000000으로 나눈 나머지인 7이 출력이 된다.</p>

<ol>
	<li>3+3</li>
	<li>3+2+1</li>
	<li>3+1+1+1</li>
	<li>2+2+2</li>
	<li>2+2+1+1</li>
	<li>2+1+1+1+1</li>
	<li>1+1+1+1+1+1</li>
</ol>

				</div>
				</div>','6
','7
','MATH'),
                                                                                                                (535,'BAEKJOON','https://www.acmicpc.net/problem/3456',3456,'축구공','1초','128 MB',21,'<p>
	1974년 FIFA 월드컵 공인구 텔스타는 12개의 검은 오각형과 20개의 흰 육각형 가죽 조각으로 이루어져 있다. 각각의 오각형은 육각형 다섯 개와과 접하고, 육각형은 오각형 3개와 육각형 3개와 접한다.</p>

<p>
	원섭이는 조각의 변을 따라 선을 교차하지 않게 그려서 다각형을 만들었다. 원섭이는 자신이 그린 다각형 안에 있는 가죽을 초록색으로 색칠했다.</p>

<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/fb.png" style="width: 340.833px; height: 224.167px;"></p>

<p>
	원섭이가 그린 다각형의 정보가 주어졌을 때, 검정색, 흰색, 초록색 가죽 조각의 수를 계산하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	첫째 줄에는 다각형 꼭짓점의 개수 n이 주어진다. 둘째 줄에는 n개의 정수 a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>이 공백으로 구분되어 주어진다. a<sup>i</sup>(1 또는 2)는 다각형의 i번째 꼭짓점과 인접한 초록 가죽의 개수이다. 첫 번째 꼭짓점과 n번째 꼭짓점을 잇는 변 항상 두 육각형 위에 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	첫째 줄에 검정 가죽의 개수, 흰 가죽의 개수, 초록 가죽의 개수를 공백으로 구분해 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','21
1 2 1 2 1 2 1 1 1 2 2 1 1 1 1 2 2 2 1 1 1
','11 15 6
','MATH'),
                                                                                                                (536,'BAEKJOON','https://www.acmicpc.net/problem/3460',3460,'이진수','1초','128 MB',3,'<p>양의 정수 n이 주어졌을 때, 이를 이진수로 나타냈을 때 1의 위치를 모두 찾는 프로그램을 작성하시오. 최하위 비트(least significant bit, lsb)의 위치는 0이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, n이 주어진다. (1 ≤ T&nbsp;≤ 10, 1 ≤ n ≤ 10<sup>6</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 1의 위치를 공백으로 구분해서 줄 하나에 출력한다. 위치가 낮은 것부터 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
13
','0 2 3
','MATH'),
                                                                                                                (537,'BAEKJOON','https://www.acmicpc.net/problem/3462',3462,'이진 스털링 수','1초','128 MB',15,'<p>n명을 m개의 그룹으로 나누는 방법의 수를 제 2종 스털링 수(Stirling numbers of the second kind)라고 하고, S(n,m)으로 표현한다. S(n,k)는 크기가 n인 집합을 k개의 공집합이 아닌 부분집합으로 나누는 방법의 수와 같다. 예를 들어, n=4, k=2일 때 다음과 같이 나눌 수 있다.</p>

<ul>
	<li>{1,2,3} ∪ {4}, {1,2,4} ∪ {3}, {1,3,4} ∪ {2}, {2,3,4} ∪ {1}</li>
	<li>{1,2} ∪ {3,4}, {1,3} ∪ {2,4}, {1,4} ∪ {2,3}</li>
</ul>

<p>S(n,m)은 다음과 같이 계산할 수 있다.</p>

<ul>
	<li>S(0,0) = 1</li>
	<li>S(n,0) = 0 (n>0)</li>
	<li>S(0,m) = 0 (m>0)</li>
	<li>S(n,m) = mS(n-1,m) + S(n-1,m-1) (n,m > 0)</li>
</ul>

<p>1 ≤ m ≤ n을 만족하는 n과 m이 주어졌을 때, S(n,m)가 짝수이면 0, 홀수이면 1을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 D가 주어진다. (1 ≤ D ≤ 200) 각 테스트 케이스는 한 줄로 이루어져 있고, n과 m이 공백으로 구분되져 있다. (1 ≤ m ≤ n ≤ 10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, S(n,m)이 짝수이면 0, 홀수이면 1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
4 2
','1
','MATH'),
                                                                                                                (539,'BAEKJOON','https://www.acmicpc.net/problem/3474',3474,'교수가 된 현우','1초','128 MB',8,'<p>알고리즘의 킹갓제너럴엠퍼러마제스티충무공알고리즘마스터 현우가 교수로 취임하였다!</p>

<p>그러나 학생들에게 크나큰 기대를 품고 첫 수업에 들어갔던 현우는 아무도 외판원 순회 문제(Traveling Salesman Problem, TSP)를 풀지 못하는 것을 보고 낙심하였다.</p>

<p>그 와중에 학생 남규는 TSP를 완전탐색으로 풀려고 하였고, 현우는 그걸 보고 경악을 금치 못한다. 왜냐면 TSP를 완전탐색으로 풀려면 O(N!)의 시간이 소모되는데, 이는 경악을 금치 못할 시간이기 때문이다.</p>

<p>그러나 남규는 O(N!)이 왜 큰지도 잘 모른다. 그래서 현우는 더더욱 경악을 금치 못하고, N!이 얼마나 큰지 대략적으로나마 알려주기 위해, 자연수 N이 주어지면 N!의 오른쪽 끝에 있는 0의 개수를 알려주기로 하였다.</p>

<p>그러나 현우는 경악을 금치 못하여 지금 코딩을 할 수 없는 상황이다. 여러분이 현우를 대신하여 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어지고, 이어서 T개의 줄에 정수 N이 주어진다(1 <= N <= 1000000000).</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 줄마다 N!의 오른쪽 끝에 있는 0의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
3
60
100
1024
23456
8735373
','0
14
24
253
5861
2183837
','MATH'),
                                                                                                                (543,'BAEKJOON','https://www.acmicpc.net/problem/3501',3501,'최대공약수 맞추기 게임','1초','128 MB',19,'<p>상근이와 정인이는 숫자 맞추기 게임을 하고 있다.</p>

<p>먼저, 정인이는 1보다 크거나 같고, n보다 작거나 같은 자연수 하나를 생각한다.</p>

<p>상근이는 1보다 크거나 같고, n보다 작거나 같은 자연수 x를 정해 정인이에게 생각한 숫자가 x인지 물어볼 수 있다. 이때 정인이는 자신이 생각한 숫자와 x의 최대공약수가 몇 인지 말해준다.</p>

<p>다음은 n=6일 때 가능한 상근이와 정인이의 대화이다.</p>

<ul>
	<li>상근: 3이야?</li>
	<li>정인: 3이랑 내가 생각한 숫자의 최대공약수는 1이야.</li>
	<li>상근: (음... 그럼 3이랑 6은 아니네? 근데 1,2,4,5는 될 수 있어!) 그럼 2야?</li>
	<li>정인: 2랑 내가 생각한 숫자의 최대공약수는 2야.</li>
	<li>상근: (오!? 그럼 1, 5는 아니겠네?) 너가 생각한 숫자는 4야 맞지?</li>
	<li>정인: 4랑 내가 생각한 숫자의 최대공약수는 2야.</li>
	<li>상근: 그럼 니가 생각한 숫자는 2네 ㅋㅋㅋ</li>
</ul>

<p>위의 예에서 상근이는 정인이가 생각한 숫자를 맞추기 위해서 질문을 총 3번 했다. 하지만, n=6인 경우에 항상 2번의 질문으로 정인이가 생각한 숫자를 맞출 수 있다.</p>

<p>제일 먼저 상근이는 6을 물어보면 된다. 만약 정인이가 1이라고 대답했다면, 정인이가 생각한 숫자는 1과 5중 하나이기 때문에, 2번 질문으로 맞출 수 있다. 정인이의 대답이 2라면, 정인이가 생각한 숫자는 2와 4중 하나이다. 만약, 정인이가 3이라고 대답했다면, 정답은 3이고, 6이라고 대답했다면 6이다.</p>

<p>따라서, 상근이는 최대 2번의 질문으로 정인이가 생각한 숫자를 맞출 수 있다.</p>

<p>n이 주어졌을 때, 상근이가 최적의 방법으로 질문했을 때, 최대 몇 번 만에 정인이가 생각한 숫자를 맞출 수 있는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n이 주어진다. 2 ≤ n ≤ 10,000</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 상근이가 최적의 방법으로 질문했을 때, 최대 몇 번의 질문으로 정인이가 생각한 숫자를 맞출 수 있는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
','2
','MATH'),
                                                                                                                (526,'BAEKJOON','https://www.acmicpc.net/problem/3541',3541,'상근타워','1초','128 MB',9,'<p>상근이는 남는 돈으로 매우 높은 빌딩 "상근타워"를 지었다.</p>

<p>상근타워에는 엘리베이터가 m개가 있다. 각 엘리베이터에는 두 버튼이 있다. i번째 엘리베이터의 한 버튼은 u<sub>i</sub> 층을 올라가는 버튼이고, 다른 버튼은 d<sub>i</sub>층 내려가는 버튼이다.</p>

<p>상근타워의 가장 아래층(로비)은 0층이고, 그 다음 층부터는 증가하는 자연수이다. 엘리베이터를 타고 지하로 내려갈 수 없으며, 건물은 매우 높아&nbsp;끝이&nbsp;없다고 가정한다.</p>

<p>상근이는 상근타워의 로비에 서있다. 이제, 엘리베이터중 하나를 골라서 타려고 한다. 엘리베이터를 탄 이후에는 다른 엘리베이터로 바꿔탈 수 없다. 이때, 엘리베이터 버튼을 정확하게 n번 눌러서 갈 수 있는 가장 낮은 층(로비는 제외)을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n과 m이 주어진다. (1 ≤ n ≤ 1,000,000, 1 ≤ m ≤ 2,000) 다음 m개 줄에는 각 엘리베이터의 버튼 u<sub>i</sub>와 d<sub>i</sub>가 주어진다. (1 ≤ u<sub>i</sub>, d<sub>i</sub> ≤ 1000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>엘리베이터를 타고 버튼을 n번 눌러서 갈 수 있는 가장 낮은 층을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10 3
15 12
15 4
7 12
','13
','MATH'),
                                                                                                                (551,'BAEKJOON','https://www.acmicpc.net/problem/3553',3553,'Dragon’s Question','3초','256 MB',6,'<p>In a land far-away there lives a noble man, and he has three sons. The elder of them is very clever, his especial strength is calculation: he can easily count a determinant of fifth degree in his mind without paper and pencil. The middle brother is also very talented, he is particularly strong in theoretic questions. But the younger brother has absolutely no talent in mathematics.</p>

<p>One day they went for a walk. Suddenly a wind started to blow and something closed the sun from them: it was a hungry dragon, returning to his lair from unsuccessful hunt.</p>

<p>"Hey, boys. I will give you a problem, and if you do not solve it, nothing will save you!" --- said the dragon.</p>

<p>The elder brothers smiled ironically. Of course, they were so clever that no dragon could ask them a question they were not able to answer.</p>

<p>"Give me a positive integer number which is divisible by $d$ and has exactly $n$ digits in it, assuming that $d$ is equal to forty-five and $n$ is equal to three!" --- was the dragons question.</p>

<p>"One hundred and thirty-five." --- answered the elder brother.</p>

<p>"Good, go where you want. But I will return and ask you a similar question in a year." --- said the upset hungry dragon and flew away.</p>

<p>A year passed, and the elder brother got married and left his parents home. Two younger brothers went for a walk discussing this event, and met the dragon again.&nbsp;</p>

<p>"Hey boys, give me a positive integer number which is divisible by twenty three and has exactly one digit in it" --- asked the dragon.</p>

<p>"No solution" --- answered the middle brother.</p>

<p>"You are still too clever, go where you want. But I will return and ask you a similar question." --- said the dragon and flew away.</p>

<p>Another year passed and the middle brother got married and left his parents home. The younger brother now does not go outside, because he does not have enough knowledge to answer the dragons questions. Please, help him and write a program --- the boy is very afraid.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>The input file contains the only line with numbers $n$ and $d$ ($1 \le n \le 1000$; $1 \le d \le 1\,000\,000$).</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>The first and only line of the output file must contain the answer to be given to the dragon --- either a $n$-digit number (without leading zeroes) divisible by $d$ or a string <code>No solution</code>.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','20 1
','10000000000000000000
','MATH'),
                                                                                                                (554,'BAEKJOON','https://www.acmicpc.net/problem/3565',3565,'피보나치 진법','1초','128 MB',18,'<p>피보나치 진법이란 0과 1만을 이용해 자연수를 유일하게 표현하는 방법이다.</p>

<p>자연수 \(N\)을 피보나치 진법 \(N=\overline { a_{n}a_{n-1}\cdots a_{1} } _{F} \) 으로 나타냈을 때, \(N\)의 값은 \(N=a_{ n }\cdot F_{ n }+a_{ n-1 }\cdot F_{ n-1}+ \cdots + a_1 \cdot F_1\)이 된다. \(F_k\)는 피보나치 수열로 \(F_0 = F_1 = 1, F_i = F_{i-1} + F_{i-2}\)이다. 각 자연수를 유일하게 표현하기 위해서 피보나치 진법에서는 1이 인접할 수 없다.</p>

<p>다음은 자연수 일부를 피보나치 진법으로 나타낸 것이다.</p>

<p>\[ 1 = 1_F\] \[2 = 10_F\] \[3 = 100_F\] \[4 = 101_F\] \[5 = 1000_F\] \[6 = 1001_F\] \[7 = 1010_F \]</p>

<p>상근이는 자연수를 피보나치 진법으로 순서대로 나타낸 뒤, 그 수를 모두 붙였다. 즉, 이 문열의 첫 부분은 110100101100010011010... 이 된다.</p>

<p>상근이는 이 문자열의 처음 N글자 중에 1의 개수가 몇 개나 있는지 궁금해졌다.</p>

<p>N이 주어졌을 때, 상근이가 만든 문자의 처음 N글자 중 1의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. (0 ≤ N ≤ 10<sup>15</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 상근이의 문자열의 처음 N글자 중 1의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','21
','10
','MATH'),
                                                                                                                (559,'BAEKJOON','https://www.acmicpc.net/problem/3566',3566,'대형 스크린','1초','128 MB',5,'<p>상근이는 모니터를 여러개 붙여서 대형 모니터를 만드는 일을 하고 있다.&nbsp;</p>

<p>고객은 대형 모니터의 가로, 세로 해상도(픽셀)과 가로 세로 크기(밀리미터)를 상근이에게 주문한다. 상근이는 고객의 주문 값보다 크거나 같은 해상도, 크거나 같은 크기의 대형 모니터를 만들어야 한다. 이때, 제조비가 최소가 되어야 한다.</p>

<p>대형 모니터는 항상 같은 종류의 모니터로 만들어야 한다. 대형 모니터의 해상도, 크기는 모니터를 붙인 형태로 각각을 더하면 되고, 가격은 사용한 모니터의 가격의 합이다.</p>

<p>상근이의 창고에는 모니터가 여러 종류가 있고, 각각의 해상도와 크기, 가격은 모두 알고 있다. 모니터를 회전 시켜서 대형 모니터를 만들 수 있다. 하지만, 대형 모니터에 포함된 모니터는 모두 같은 방향이어야 한다. 상근이는 모니터를 매우 많이 가지고 있어, 필요한 만큼 사용할 수 있다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/monitor.png" style="height:150px; width:281px"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 대형 모니터의 가로 세로 해상도, 가로 세로 크기 r<sub>h</sub>, r<sub>v</sub>, s<sub>h</sub>, s<sub>v</sub>가 주어진다. 각 값은 100보다 크거나 같고, 10,000보다 작거나 같은 정수이다.</p>

<p>다음 줄에는 상근이가 가지고 있는 모니터 종류의 개수 n이 주어진다. (1 ≤ n ≤ 100)</p>

<p>다음 n개 줄에는 각 모니터의 가로 세로 해상도, 가로 세로 크기, 가격 r<sub>h,i</sub>, r<sub>v,i</sub>, s<sub>h,i</sub>, s<sub>v,i</sub>, p<sub>i</sub> 가 주어진다. 이 값도 모두 100보다 크거나 같고, 10,000보다 작거나 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 대형 모니터를 만드는 가격 중 가장 저렴한 가격을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1024 1024 300 300
3
1024 768 295 270 200
1280 1024 365 301 250
1280 800 350 270 210
','250
','MATH'),
                                                                                                                (558,'BAEKJOON','https://www.acmicpc.net/problem/3586',3586,'방정식','1초','128 MB',17,'<p>방정식 f(x) = 0을 푸는 프로그램을 작성하시오. f(x)는 후위표기법으로 쓰여져 있으며, 숫자와 연산자 +, -, *, /, 그리고 변수 x로 이루어져 있다. x는 방정식에서 최대 한 번 등장한다.</p>

<p>예를 들어, 방정식 (4x + 2)/2 = 0에 대한 f(x)는 아래와 같이 쓰여져 있다.</p>

<p>4 X * 2 + 2 /</p>

<p>방정식 f(x) = 0의 해는 x = -1/2 이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 방정식 f(x)가 주어진다. 변수 x는 X로 주어지며, 연산자 +,-,*,/ 와 숫자 0-9로 이루어져 있다. X는 최대 한 번 등장한다. 최대 30개의 토큰이 주어진다.</p>

<p>0으로 나누지 않고 해를 구할 수 있는 경우만 입력으로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>f(x) = 0의 해가 하나인 경우에는 X = p/q를 출력한다. 이때, p와 q는 서로소이어야 하고, q는 양수이어야 한다.&nbsp;해가 0인 경우에는 X = 0/1을 출력한다.</p>

<p>f(x) = 0의 해가 없는 경우에는 NONE을 출력한다.</p>

<p>f(x) = 0의 해가 한 개 보다 많은 경우에는 MULTIPLE을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 X * 2 + 2 /
','X = -1/2
','MATH'),
                                                                                                                (560,'BAEKJOON','https://www.acmicpc.net/problem/3595',3595,'맥주 냉장고','1초','128 MB',4,'<p>맥주를 좋아하는 창영이는 냉장고에 맥주를 보관한다. 일반 냉장고에 음식과 맥주를 함께 보관하다보니 창영이의 냉장고에는 맥주를 넣을 곳이 점점 없어지고 있었다. 창영이는 맥주 전용 냉장고를 만들기로 결심했다.</p>

<p>창영이가 만들 냉장고는 a × b × c 크기의 직육면체이고, n개의 맥주 박스를 보관할 수 있다. 맥주 박스는 크기가 1 × 1 × 1인 정육면체이다. 창영이는 맥주를 신선하게 보관하기 위해서, 냉장고의 겉넓이를 가능한 작게 만들려고 한다.</p>

<p>예를 들어, 냉장고의 용량이 12라면, 다음과 같은 네가지 냉장고를 만들 수 있다.</p>

<table class="table table-bordered" style="width:20%;">
	<thead>
		<tr>
			<th style="width:10%;">크기</th>
			<th style="width:10%;">겉넓이</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>3 × 2 × 2</td>
			<td>32</td>
		</tr>
		<tr>
			<td>4 × 3 × 1</td>
			<td>38</td>
		</tr>
		<tr>
			<td>6 × 2 × 1</td>
			<td>40</td>
		</tr>
		<tr>
			<td>12 × 1 × 1</td>
			<td>50</td>
		</tr>
	</tbody>
</table>

<p>이 경우에 가장 좋은 냉장고는 3 × 2 × 2이다.</p>

<p>n이 주어졌을 때, 창영이가 만들 가장 좋은 냉장고(겉넓이가 가장 작은 냉장고)의 크기를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n이 주어진다. (1 ≤ n ≤ 10<sup>6</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 a b c를 출력한다. 만약 겉넓이가&nbsp;가장 작은 냉장고가 여러 가지인 경우, 아무거나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','12
','3 2 2
','MATH'),
                                                                                                                (565,'BAEKJOON','https://www.acmicpc.net/problem/3614',3614,'정사각형','1초','128 MB',13,'<p>R은 변의 길이가 정수인 직사각형이다. 직사각형은 단위 정사각형으로 나눌 수 있다.</p>

<p>f(R)은 직사각형의 한 대각선이 지나는 정사각형의 개수라고 정의한다. 변의 길이가 2와 4인 직사각형 R의 f(R) = 4이다.</p>

<p>N이 주어졌을 때, f(R) = N을 만족하는 직사각형의 개수를 구하는 프로그램을 작성하시오. 변의 길이가 a×b인 직사각형과 b×a인 직사각형은 같은 직사각형이다.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수 N (0 < N < 10<sup>6</sup>)이 주어진다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 f(R) = N인 R의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p><img alt="" src=https://www.acmicpc.net/upload/images/squ.png" style="height:128px; width:341px"></p>

				</div>
				</div>','4
','4
','MATH'),
                                                                                                                (568,'BAEKJOON','https://www.acmicpc.net/problem/3621',3621,'족보','2초','64 MB',10,'<p>외계인 피터는 그의 족보를 추적하려고 한다. 피터는 몇 주동안 열심히 작업해 족보의 베타 버젼을 만들었다.</p>

<p>족보를 살펴보니 선조 중 일부가 너무 많은 부모를 가졌다는 사실을 알게되었다. (외계인 d명의 부모를 가진다) 그래서 피터는 몇몇&nbsp;부모-자식 관계는 선조-자손 관계일 것이라고 생각했다.</p>

<p>피터가&nbsp;족보를 만족스러운 형태로 바꾸려면 최소 몇 명을 추가해야 하는지 구하는 프로그램을 작성하시오.</p>

<p>각각의 외계인의 부모의 수가 d명을 넘지 않고, 각 외계인이 족보에 한 번만 노출된 경우에 만족스러운 형태라고 한다.</p>

<p>예를 들어, d가 2이고 피터가 만든 족보의 베타 버젼이 아래와 같다면,</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/16ddd152-b824-45e9-ae72-b37668387821/-/preview/" style="width: 379px; height: 97px;"></p>

<p>아래와 같이 선조 두 명을 추가하면 만족스러운 형태가 된다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/a632898a-57c0-4e41-953a-d7ac152ae85a/-/preview/" style="width: 379px; height: 139px;"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 n과 d가 주어진다. (2 ≤ n ≤ 100,000, 2 ≤ d ≤ n) 다음 줄에는 총 n개의 정수가 주어지며, i번째 정수는 i번째 자식의 번호이다.</p>

<p>피터의 족보에 등장하는 선조는 모두 1번부터 n번까지 번호로 나타낸다. 피터의 번호는 0번이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>족보를 만족스러운 형태로 바꾸기 위해서 최소 몇 명을 추가하면 되는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 2
5 5 0 5 0 5
','2
','MATH'),
                                                                                                                (570,'BAEKJOON','https://www.acmicpc.net/problem/3641',3641,'호프집 선택','1초','128 MB',18,'<p>20세기 중반에 사회학자들은 맥주에 관련된 학생들의 행동에 대한 연구를 시작했다. 연구의 가장 큰 성과는 학생들의 수업이 끝나고 난 이후에 호프집을 선택하는 복잡한 과정을 매우 정확하게 묘사하는 방법을 개발한 것이다.</p>

<p>학생들은 호프집을 투표를 통해서 결정한다. 사회학자들은 일부의 주도하는 학생들이 다른 학생들에게 눈치를 주는 점에 주목했다.&nbsp;</p>

<p>호프집을 선택하는 과정은 다음과 같이 나타낼 수 있다.</p>

<ul>
	<li>주도하는 학생들은 각자 선호하는 호프집을 가지고 있다. 이 학생들은 항상 그 호프집에 표를 던진다. 주도적인 학생 여러 명이 같은 호프집에 표를 던질 수도 있다.</li>
	<li>그 다음, 남은 학생들은 모두 주도적인 학생이 아니다. 이 학생들은 주도적인 학생들의 눈치를 보면서 확률적으로 투표를 하며. 그들이 어떤 특정 호프집에 투표를 할 확률은, 그 호프집이 그 때까지 받은 표의 수를 그 때 까지 투표한 사람의 수로 나눈 값이다.</li>
	<li>모든 사람이 투표를 하게 되면, 가장 높은 표를 얻은 호프집이 선택된다. 만약, 가장 높은 표를 받은 호프집이 여러 개인 경우에는, 임의로 선택한다. (이때, 각 호프집을 선택할 확률은 모두 같다)</li>
</ul>

<p>예를 들어, 학생이 일곱 명, 호프집이 세 개가 있고, 그 중 다섯 명이 주도적인 학생인 경우를 생각해보자. 세 학생이 1번 호프집에 표를 던지고, 나머지 학생이 각각 2번과 3번 호프집에 표를 던졌다고 하자. 이제 각 호프집이 받은 표의 수는 (3, 1, 1)이 된다.</p>

<p>이제 주도적이지 않은 학생 두 명이 투표를 해야 한다. 각 학생은 차례대로 투표를 한다. 먼저, 첫 번째 학생이 1번 호프집을 선택할 확률은 3/5, 2번과 3번을 선택할 확률은 1/5이다. 이 학생이 3번 호프집을 선택하면, 각 호프집이 받은 표의 수는 (3, 1, 2)가 된다.</p>

<p>두 번째 학생이 1번 호프집을 선택할 확률은 1/2, 2번 호프집은 1/6, 3번 호프집은 1/3이 된다. 이 학생은 3번 호프집을 선택했다고 하면, 각 호프집이 받은 표의 수는 (3, 1, 3)이 된다. 1번 호프집과 3번 호프집의 표가 같기 때문에, 두 호프집은 1/2의 확률로 선택을 받게 된다.</p>

<p>학생의 수와, 호프집의 수, 그리고 모든 주도적인 학생들이 선택한 호프집이 주어진다. 이때, 각 호프집을 갈 확률을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다.</p>

<p>각 테스트 케이스의 첫째 줄에는 맥주집의 수 n (n ≤ 5)과 학생의 수 k가 주어진다. (k ≤ 50) 둘째 줄에는 주도적인 학생의 투표가 끝난 후의 결과 a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>이 주어진다. 항상 \( k \ge \sum_{i=1}^{n}{a_i}\)를 만족한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 각 맥주집이 선택받을 확률을 출력한다. pub i: percentage %와 같이 출력하며, i는 맥주집의 번호, percentage는 그 맥주집을 선택할 확률을 반올림해서 소수점 둘째 자리까지 나타낸 값이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 7
3 1 1
','pub 1: 93.33 %
pub 2: 3.33 %
pub 3: 3.33 %
','MATH'),
                                                                                                                (569,'BAEKJOON','https://www.acmicpc.net/problem/3647',3647,'흥미로운 집합','1초','128 MB',23,'<p>
	6, 10, 15는 제곱수가 아니다. 하지만, 세 수를 곱한 수 900은 제곱수이다.</p>

<p>
	이러한 원소의 곱이 제곱수가 되는 양의 정수로 이루어진 집합을 "흥미로운 집합"이라고 한다. {6, 10, 15}와 {25}는 흥미로운 집합이다.</p>

<p>
	또, 흥미로운 집합에서 원소의 곱을 흥미로운 집합의 값이라고 한다.</p>

<p>
	집합 S가 주어졌을 때, S의 공집합이 아닌 부분집합 중에서 가장 작은 흥미로운 집합의 값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 되어 있고, 두 정수 a와 b를 포함하고 있다. (1 < a < b ≤ 4900) 두 수는 집합 S를 나타낸다. S = {x ∈ N | a ≤ x ≤ b} (N은 자연수 집합)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대해서, S의 공집합이 아닌 부분집합 중 흥미로운 집합의 값이 가장 작은 집합의 값을 k<sup>2</sup>라고 했을 때, k를 출력한다. 만약, 흥미로운 집합이 없다면 none을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','20 30
101 110
2337 2392
','5
none
3580746020392020480
','MATH'),
                                                                                                                (577,'BAEKJOON','https://www.acmicpc.net/problem/3651',3651,'이항계수','1초','128 MB',16,'<p>창영이와 강산이는 이항계수를 좋아한다. 창영이와 강산이는 집 방향이 같기 때문에, 같이 지하철을 타고 이항계수 맞추기 게임을 하면서 등하교를 한다.</p>



<p>이항계수는 n개의 서로 다른 물건 중에서 순서 없이 k개를 뽑는 조합의 가짓수이고, 다음과 같이 정의된다.</p>



<p><img alt="" src=https://www.acmicpc.net/upload/images/daum_equation_1358305217093.png" style="height:60px; width:177px"></p>



<p>이항계수 게임은 창영이가 어떤 정수 m을 말하면, 강산이는 결과가 m인 n과 k를 생각한 뒤, 그것을 말하는 방식으로 이루어진다. 예를 들어, 창영이가 15라고 말했다면, 강산이는 (6,2), (6,4), (15,1), (15,14)를 말하면 된다.</p>



<p>창영이는 집에서 미리 이항계수를 계산해보고 나오기 때문에, 결과가 m인 이항계수는 적어도 하나 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">


<p>첫째 줄에 m이 주어진다. (2 ≤ m ≤ 10<sup>15</sup>)</p>



					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 결과가 m인 이항 계수의 개수를 출력한다. 다음줄부터 한 줄에 하나씩 n,k 쌍을 출력한다. 출력하는 순서는 n이 증가하는 순서, 같을 경우에는 k가 증가하는 순서대로 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','15
','4
6 2
6 4
15 1
15 14
','MATH'),
                                                                                                                (581,'BAEKJOON','https://www.acmicpc.net/problem/3652',3652,'새트리','1초','128 MB',11,'<p>새트리는 무한 이진 트리이고, 첫 5레벨은 다음과 같이 생겼다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/bt.png" style="height: 166.667px; width: 391.667px;"></p>

<p>새트리의 각 노드는 다음과 같이 재귀적으로 정의할 수 있다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/bd.png" style="height:85px; width:247px"></p>

<p>여기서 bird는 완전 트리를 의미하고, bird+1은 트리의 모든 분수에 1를 더하는 것을 의미하고, 1/bird는 트리의 모든 분수를 뒤집는 것을 의미한다.</p>

<p>놀랍게도 트리에는 모든 유리수가 딱 한 번씩 등장한다. 따라서, 모든 기약분수는 유일한 경로가 있다. 경로는 왼쪽 자식노드로 갈 때는 L, 오른쪽으로 갈 때는 R로 표현한다. 예를 들어, 2/5는 LRR로 표현할 수 있다.</p>

<p>기약분수가 주어졌을 때, 루트에서 그 노드까지의 경로를 L과 R로 표현하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 a와 b가 /로 구분되어 주어진다. a는 기약분수의 분자, b는 분모이며, a와 b가 동시에 1인 경우는 없다. 또한, gcd(a,b) = 1을 만족한다. (1 ≤ a,b ≤ 10<sup>9</sup>)&nbsp;경로의 길이는 10,000을 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 루트에서 입력으로 주어진 기약분수까지 가는 경로를 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2/5
','LRR
','MATH'),
                                                                                                                (576,'BAEKJOON','https://www.acmicpc.net/problem/3664',3664,'언덕','1초','128 MB',14,'<p>상근이는 근처 산에 차를 타고 올라왔다.&nbsp;상근이는 다가올 ICPC를 준비해야 하기 때문에, 최대한 빨리 집으로 가려고 한다. 하지만, 차에 기름이 얼마 남지 않았기 때문에, 최대한 효율적으로 운전해야 한다.</p>

<p>길의 일부는 오르막길이고, 일부는 내리막길이다. 각 길은 모두 서로 다른 길이와 경사를 가지고 있다. 상근이의 차에 남은 기름의 양이 주어졌을 때, 얼마나 빨리 집으로 돌아올 수 있는지 구하는 프로그램을 작성하시오.</p>

<p>상근이의 차의 기름 소비량은 단순하게 모델링할 수 있다. 연료 소비량 (단위 거리당 연료 소비) 은 자동차의 속도 \(v\)에 비례해서 증가한다. 또, 언덕의 기울기 \(s\)에 의해 오프셋이 결정된다.</p>

<p>예를 들어, 연료를 사용하지 않고 10km/h로 내려갈 수 있는 언덕이 있다고 하자. 이 도로를 올라갈 때는 사용하는 연료의 양은 평지에서 10km/h 빠르게 이동할 때 사용하는 양과 같다. 연료 소비량 \(c\)(리터/km)는 아래와 같은 식으로 나타낼 수 있다.</p>

<p>\[c=max(0,\alpha v + \beta s)\]</p>

<p>\(\alpha\)는 평지에서 연료 소비량, \(v\)는 자동차의 속도(km/h), \(s\)는 언덕의 기울기, \(\beta\)는 양수 상수이다. 가속과 감속은 연료를 사용하지 않으며, 즉시 이루어진다.</p>

<p>자동차는 최고 속도가 있어서, 이 속도를 넘을 수 없다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 테스트 케이스의 개수는 100개를 넘지 않는다.</p>

<p>첫째 줄에 네 정수 \(\alpha\) (1 ≤ \(\alpha\) ≤ 100), \(\beta\) (0.1 ≤ \(\beta\) ≤ 100), \(v_{max}\) (10 ≤ \(v_{max}\) ≤ 200), \(f\) (0 ≤ \(f\) ≤ 50) 가 주어진다. \(v_{max}\)는 자동차의 최고 속도이고, \(f\)는 자동차에 남은 기름의 양(리터) 이다.</p>

<p>다음 줄에는 도로의 수 r (1 ≤ r ≤ 10,000)이 주어진다.</p>

<p>다음 r개 줄에는 두 실수 x<sub>i</sub>와 y<sub>i</sub>가 주어진다. (1 ≤ x<sub>i</sub> ≤ 1000, -1000 ≤ y<sub>i</sub> ≤ 1000) x<sub>i</sub>는 i번째 도로의 길이, y<sub>i</sub>는 높이의 변화를 나타낸다. 각 도로의 기울기는 일정하다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 집으로 돌아오는 가장 빠른 시간을 출력한다. 집으로 돌아올 수 있는 경우에는 항상 걸리는 시간이 24 시간보다 작다. 만약, 집으로 돌아올 수 없으면 "IMPOSSIBLE"을 출력한다. 정답의 상대/절대 오차는 최대 10<sup>-6</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
10.0 1.0 150 0.0
1
100.0 -100.0
10.0 100.0 150 1.0
2
100 0
100 100
0.5 0.1 100 10
3
1000 0
100 10
100 -10
','1.414214
IMPOSSIBLE
0.072120
','MATH'),
                                                                                                                (572,'BAEKJOON','https://www.acmicpc.net/problem/3671',3671,'산업 스파이의 편지','1.5초','128 MB',12,'<p>안녕하세요. 저는 산업 스파이입니다. 저의 정체를 절대 다른 사람에게 말하지 말아주세요.</p>

<p>저의 가장 최근 일은 유명한 수학 연구소의 최신 연구 결과를 훔쳐오는 것이었습니다. 저는 매우 유능한 산업 스파이이기 때문에, 연구 결과를 어렵지 않게 얻을 수 있었습니다. 하지만, 제가 올 것을 미리 알았는지 연구소에서는 연구 결과를 모두 서류 절단기에 넣어버렸습니다. 어쩔수 없이 저는 눈물을 머금고 종이 조각을 모두 훔쳐왔습니다.</p>

<p>저를 고용한 사람은 매우 무서운 사람입니다. 또, 저는 프로이기 때문에 실수를 용납하지 않습니다. 어떻게든 이 종이를 모두 복구해가야합니다. 이 연구소의 연구 주제는 빠른 소인수 분해입니다. 제가 가진 종이 조각에는 숫자가 한 자리씩만 적혀져 있습니다. 원래 숫자가 뭐였는지를 잘 모르겠습니다. 종이 조각에 쓰여 있는 숫자를 보내드릴테니, 종이 조각을 적절히 배치해서 소수가 되는 경우가 몇 개이지 알려주실 수 있나요?</p>

<p>감사합니다.</p>

<p>스파이 드림.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 c가 주어진다. (1 ≤ c ≤ 200) 각 테스트 케이스는 한 줄로 이루어져 있고, 종이조각에 쓰여 있는 수가 공백없이 주어진다. 종이조각의 수는 적어도 1개, 많아야 7개이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 종이조각을 적절히 배치해서 만들 수 있는 서로 다른 소수의 개수를 출력한다. 이때, 모든 종이 조각을 사용하지 않아도 된다. (7과 1이 있을 때, 만들 수 있는 소수는 7, 17, 71이다) 종이 조각을 적절히 배치해서 만든 숫자가 0으로 시작할 때, 앞에있는 0을 지운 수가 같으면 같은 숫자이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
17
1276543
9999999
011
','3
1336
0
2
','MATH'),
                                                                                                                (573,'BAEKJOON','https://www.acmicpc.net/problem/3673',3673,'나눌 수 있는 부분 수열','1초','128 MB',13,'<p>
	양의 정수로 이루어진 수열이 주어졌을 때, 연속하는 부분 수열의 합이 d로 나누어 떨어지는 것의 개수를 구하는 프로그램을 작성하시오.</p>

<p>
	예를 들어, 아래와 같은 수열의 부분 수열 중 4로 나누어 떨어지는 것의 개수는 6개이다.</p>

<p>
	2, 1, 2, 1, 1, 2, 1, 2</p>

<p>
	다음과 같은 부분 수열은 합이 4로 나누어 떨어진다. 1~8, 2~4, 2~7, 3~5, 4~6, 5~7번째</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">

<p>
	첫째 줄에 테스트 케이스의 개수 c가 주어진다. (1 ≤ c ≤ 200) 각 테스트 케이스는 두 줄로 이루어져 있다.</p>

<p>
	테스트 케이스의 첫째 줄에는 d(1 ≤ d ≤ 1,000,000)와 수열의 크기 n(1 ≤ n ≤ 50,000)이 주어진다. 다음 줄에는 수열의 원소가 주어진다. 각 숫자는 1보다 크거나 같고, 1,000,000,000보다 작거나 같은 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대해서, 주어진 수열의 연속하는 부분 수열의 합이 d로 나누어 떨어지는 것의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
7 3
1 2 3
4 8
2 1 2 1 1 2 1 2
','0
6
','MATH'),
                                                                                                                (580,'BAEKJOON','https://www.acmicpc.net/problem/3693',3693,'컨테이너','1초','128 MB',11,'<p>항구를 운영하는 상근이는 컨테이너 박스를 보관할 주차장을 건설하려고 한다.</p>

<p>상근이의 항구가 있는 지역은 진흙진 땅이기 때문에, 단단한 땅을 만드는 비용이 매우 비싸다. 따라서, 상근이는 필요 이상으로 주차장을 크게 만들지 않으려고 한다.</p>

<p>컨테이너의 크기는 길이 40미터 너비 8미터이다. 한 컨테이너를 다른 컨테이너 위에 쌓을 수 있고, 최대 5개까지 쌓을 수 있다. 한 행에 있는 컨테이너 사이에는 공간이 4미터 필요하다. 또, 행과 행 사이에는 공간이 2미터가 필요하다. 모든 컨테이너는 같은 방향으로 놓여져야 한다.</p>

<p>주차장의 크기는 직사각형이어야 한다. 상근이가 원하는 수용 가능 컨테이너의 수가 주어졌을 때, 가장 좋은 주차장의 크기를 구하는 프로그램을 작성하시오. 먼저, 주차장의 면적이 작아야 하며, 되도록 정사각형과 가까워야 한다.</p>

<p>예를 들어, 아래와 같이 총 컨테이너 박스가 쌓인 것이 8개 있는 형태를 보관하는 가장 좋은 주차장의 크기는 92 × 42 = 3864이다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/container.png" style="height: 190.833px; opacity: 0.9; width: 390px;"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수가 주어진다. 테스트 케이스의 개수는 최대 100개이다. 각각의 테스트 케이스는 한 줄로 이루어져 있으며, 상근이가 원하는 주차장의 수용 가능 컨테이너 수 n이 주어진다. n은 양의 정수이며, 10<sup>12</sup>보다 작거나 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 가장 좋은 주차장의 길이와 너비를 (길이 ≥ 너비)와 면적을 출력한다. 가능한 정답이 여러 가지인 경우에는 넓이가 가장 작은 것을 출력하며, 넓이가 같은 것도 여러 가지인 경우에는 길이 - 너비가 가장 작은 것을 출력한다.</p>

<p>예제 출력 형식을 참고한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
1
15
22
29
36
43
','48 X 12 = 576
48 X 32 = 1536
52 X 48 = 2496
92 X 32 = 2944
92 X 42 = 3864
136 X 32 = 4352
','MATH'),
                                                                                                                (575,'BAEKJOON','https://www.acmicpc.net/problem/3699',3699,'주차 빌딩','1초','128 MB',6,'<p>주차 빌딩의 원리는 간단하다. 차를 주차 타워의 입구에 있는 엘리베이터에 주차시키고 차에서 내린다. 엘리베이터와 컨베이어 벨트는 빈 주차 공간을 찾아 그곳으로 이동시킨다. 차를 찾으러 오기 전까지 차는 계속 그곳에 있는다. 차를 찾으러 오면, 엘리베이터와 컨베이어 벨트는 해당하는 차를 찾아 다시 입구로 가져온다.</p>

<p>주차 빌딩의 레이아웃은 간단하다. 빌딩에는 중앙 엘리베이터가 있고, 차는 엘리베이터를 이용해서 층 사이를 이동할 수 있다. 각 층에는 거대한 원형 컨베이어 벨트가 있으며, 이 컨베이어 벨트 위에 차가 있다. 벨트는 시계방향, 반시계방향으로 움직일 수 있다. 엘리베이터가 어떤 층에 도착했을 때, 컨베이어 벨트의 일부가 되며, 차는 엘리베이터를 통과해서 이동할 수 있다.</p>

<p>하루 일과가 끝날 때 쯤이면, 많은 사람들이 차를 다시 찾으러 주차 빌딩으로 온다. 사람들은 온 순서대로 차를 찾을 수 있다. 엘리베이터는 차가 있는 곳으로 이동하고, 컨베이어 벨트는 차를 엘리베이터에 싣고, 다시 아래로 내려가 고객에게 차를 전달해준다. 모든 손님이 차를 찾는데 걸리는 시간을 구하는 프로그램을 작성하시오. 엘리베이터가 층을 이동하는데 걸리는 시간은 10초이고, 컨베이어 벨트가 차 한 대 만큼 시게방향 또는 반시계방향으로 이동하는데 걸리는 시간은 5초이다.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수가 주어진다. 테스트 케이스는 최대 100개이다. 각 테스트 케이스의 첫째 줄에는 주차 빌딩의 높이 h와 컨베이어 벨트의 길이 l이 주어진다. (1 ≤ h ≤ 50, 2 ≤ l ≤ 50) 다음 h개 줄에는 l개의 정수가 주어지며, 이 정수는 주차 빌딩에 들어있는 차의 정보이다. i번째 줄의 j번째 숫자는 i번 층의 j번 위치에 있는 차의 정보를 나타낸다. 정수가 -1인 경우에는 그 칸이 비어있는 곳이고, 다른 값인 r인 경우에는 r번째 손님이 찾아가는 차라는 의미이다. 손님이 차를 1층에서 찾아가고, 엘리베이터는 첫 번째 위치에 있다. 엘리베이터는 처음에 항상 비어있다. 주차 빌딩에 차가 항상 존재하는 경우만 입력으로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 모든 손님이 차를 찾는데 걸리는 시간을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1 5
-1 2 1 -1 3
3 6
-1 5 6 -1 -1 3
-1 -1 7 -1 2 9
-1 10 4 1 8 -1
','25
320
','MATH'),
                                                                                                                (578,'BAEKJOON','https://www.acmicpc.net/problem/3711',3711,'학번','1초','128 MB',6,'<p>Z 대학교 학생은 입학할 때 학번을 받게 된다. 학번은 0보다 크거나 같고, 10<sup>6</sup>-1보다 작거나 같은 정수이다. Z 대학의 김상근 교수는 학번으로 학생들을 구분한다. 상근이는 학생들을 조금 더 쉽게 기억하기 위해서 자신이 가르치는 학생들의 학번을 m으로 나누었을 때, 나머지가 모두 다른 가장 작은 양의 정수를 찾으려고 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 N이 주어진다. 각 테스트 케이스의 첫째 줄에는 상근이가 가르치는 학생의 수 G가 (1 ≤ G ≤ 300) 주어진다. 다음 G개 줄에는 학생의 학번이 한 줄에 하나씩 주어진다. 학번이 같은 경우는 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다, 학번을 m으로 나눈 나머지가 모두 다른 가장 작은 정수 m을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1
124866
3
124866
111111
987651
','1
8
','MATH'),
                                                                                                                (585,'BAEKJOON','https://www.acmicpc.net/problem/3734',3734,'RSA 인수 분해','1초','128 MB',16,'<p>
	양의 정수 n과 k가 주어졌을 때, n = p * q이고, p ≤ q, |q-kp| ≤&nbsp;10<sup>5</sup>를 만족하는 소수 p와 q를 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	첫째 줄에 n과 k가 주어진다. (1 < n < 10<sup>120</sup>, 1 < k < 10<sup>8</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	첫째 줄에 문제의 조건을 만족하는 소수 p와 q를 "p * q"형태로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','35 1
','5 * 7
','MATH'),
                                                                                                                (583,'BAEKJOON','https://www.acmicpc.net/problem/3752',3752,'최대공약수 행렬식','1초','128 MB',22,'<p>집합 S = {x<sub>1</sub>, x<sub>2</sub>, ..., x<sub>n</sub>}가 인수에 대해서 닫혀있으려면, 모든 x<sub>i</sub> ∈ S에 대해서, x<sub>i</sub>의 모든 약수 d는 d ∈ S를 만족해야 한다.</p>

<p>인수에 대해 닫힌 집합 S를 최대공약수 행렬 (S) = (s<sub>ij</sub>), s<sub>ij</sub> = GCD(x<sub>i</sub>,x<sub>j</sub>)로 만든 뒤, 이 행렬의 행렬식 (determinant)를 구하는 프로그램을 작성하시오.</p>

<p>\(D_n = \begin{vmatrix} &nbsp;\text{gcd}\left(x_1,x_1\right) &amp; \text{gcd}\left(x_1,x_2\right) &amp; \text{gcd}\left(x_1,x_3\right) &amp; \dots &amp; \text{gcd}\left(x_1,x_n\right) \\ \text{gcd}\left(x_2,x_1\right) &amp; \text{gcd}\left(x_2,x_2\right) &amp; \text{gcd}\left(x_2,x_3\right) &amp; \dots &amp; \text{gcd}\left(x_2,x_n\right) \\ \text{gcd}\left(x_3,x_1\right) &amp; \text{gcd}\left(x_3,x_2\right) &amp; \text{gcd}\left(x_3,x_3\right) &amp; \dots &amp; \text{gcd}\left(x_3,x_n\right) \\ \dots &amp; \dots &amp; \dots &amp; \dots &amp; \dots \\ \text{gcd}\left(x_n,x_1\right) &amp; \text{gcd}\left(x_n,x_2\right) &amp; \text{gcd}\left(x_n,x_3\right) &amp; \dots &amp; \text{gcd}\left(x_n,x_n\right) \\ \end{vmatrix}\)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스의 첫째 줄에는 집합 S의 원소 개수 n(0 < n < 1,000)이 주어진다.&nbsp;</p>

<p>다음 줄에는 집합의 원소 x<sub>1</sub>, x<sub>2</sub>, ..., x<sub>n</sub>이 주어진다. (0 < x<sub>i</sub> < 2*10<sup>9</sup>, x<sub>i</sub>는 정수)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서 입력으로 주어진 집합 S의 최대공약수 행렬식을 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
2
1 2
3
1 3 9
4
1 2 3 6
','1
12
4
','MATH'),
                                                                                                                (588,'BAEKJOON','https://www.acmicpc.net/problem/3769',3769,'최댓값','5초','128 MB',20,'<p>\(x_1, x_2, \dots, x_m\)을&nbsp;어떤 정수 $a$와 $b$에 대해서 다음 조건을 만족하는 실수라고 하자. ($a>0$)</p>

<ol>
	<li>\(-\frac{1}{\sqrt{a}} \le x_i \le \sqrt{a}\);</li>
	<li>\(x_1 + x_2 + \dots + x_m = b\times \sqrt{a}\)</li>
</ol>

<p>이때, 짝수인 양의 정수 \(p\)가 주어졌을 때, \(x_1^p + x_2^p + \dots + x_m^p\)의 최댓값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 $T$가 주어진다. 각 테스트 케이스는 한 줄이고, $m,&nbsp;p, a, b$로 이루어져 있다. ($m \le 2000, p \le&nbsp;12, p$는 짝수)</p>

<p>항상 주어진 조건을 만족하는 \(x_1, x_2, \dots, x_m\)이 존재하는 경우만 입력으로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해, 한 줄에 하나씩 문제에 주어진 식의 최댓값을 소수점 첫째자리에서 반올림해서 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1997 12 3 -318
10 2 4 -1
','189548
6
','MATH'),
                                                                                                                (591,'BAEKJOON','https://www.acmicpc.net/problem/3783',3783,'세제곱근','1초','128 MB',15,'<p>
	어떤 양의 정수가 주어졌을 때, 이 수의 세제곱근을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	첫째 줄에 테스트 케이스의 개수 T가 주어진다. 테스트 케이스는 한 줄로 구성되어 있다. 세제곱근을 구하고자 하는 수가 한 줄에 하나씩 입력으로 주어지며, 이 수는 150자리 이하이다. 수는 0으로 시작할 수도 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대해서, 입력으로 주어진 수의 세제곱근을 소수점 10째짜리까지 출력한다. 이때, 반올림을 하는 것이 아니고, 버림을 해야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1
8
1000
2
33076161
','1.0000000000
2.0000000000
10.0000000000
1.2599210498
321.0000000000
','MATH'),
                                                                                                                (596,'BAEKJOON','https://www.acmicpc.net/problem/3807',3807,'고창영 비밀번호의 비밀','5초','128 MB',20,'<p>
	창영이는 비밀번호를 만드는 함수가 있다.</p>

<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/daum_equation_1357760328214.png"></p>

<p>
	이 함수의 뜻은 최소공배수가 n인 모든 쌍을 찾아, 그 합을 구하는 것이다.</p>

<p>
	예를 들어, 최소공배수가 6인 쌍은 5가지가 있다. (1, 6), (2, 6), (2, 3), (3, 6), (6, 6)</p>

<p>
	따라서 f(6)은 f(6) = (1+6) + (2+6) + (2+3) + (3+6) + (6+6) = 7+8+5+9+12 = 41 이 된다.</p>

<p>
	창영이의 온라인 저지 비밀번호를 만든 n이 주어졌을 때, 비밀번호를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	첫째 줄에 테스트 케이스의 개수 T가 주어진다. (T ≤ 500)</p>

<p>
	각 테스트 케이스의 첫째 줄에는 C가 주어진다. (C ≤ 15) C는 n의 소인수의 개수이다.</p>

<p>
	다음 C개 줄에는 소인수 P<sub>i</sub>와 그것의 개수 a<sub>i</sub>가 주어진다. (2 ≤ P<sub>i</sub> ≤ 1000, P<sub>i</sub>는 소수, 1 ≤ a<sub>i</sub> ≤ 50) 입력으로 주어지는 소수는 모두 서로 다르다.</p>


					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대해서, 한 줄에 하나씩 f(n)값을 1000000007으로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
2
2 1
3 1
2
2 2
3 1
1
5 1
','41
117
16
','MATH'),
                                                                                                                (589,'BAEKJOON','https://www.acmicpc.net/problem/3825',3825,'은행수','1초','128 MB',12,'<p>
	은행수란 정수 m과 n의 쌍 (m,n)이다. 예를 들어, (1,1), (-2,1), (-3,-1)은 은행수이다.</p>

<p>
	은행수의 곱셈 (m,n) · (x,y) = (mx - ny, my + nx) 이다. 예를 들어, (1,1)·(-2,1) = (-3,-1)이다.</p>

<p>
	이때, (m,n) · (x,y) = (p,q)를 만족하는 은행수 (x,y)가 존재한다면, (m,n)은 은행수 (p,q)의 약수라고 한다.</p>

<p>
	모든 (1,0), (0,1), (-1,0), (0,-1), (m,n), (-n,m), (-m,-n), (n,-m)은 임의의 은행수 (m,n)의 약수이다. 만약, m<sup>2</sup> + n<sup>2</sup> > 1이라면, 앞의 8개 수는 모두 다를 것이다. 즉, m<sup>2</sup> + n<sup>2</sup> > 1을 만족하는 은행수는 적어도 8개의 약수가 있다.</p>

<p>
	만약, m<sup>2</sup> + n<sup>2</sup> > 1을 만족하는 은행수 (m,n)의 약수가 8개라면, 이 수를 소수라고 한다.</p>

<p>
	은행수가 주어졌을 때, 소수인지 아닌지 알아내는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	첫째 줄에 테스트 케이스의 개수가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있으며, 은행수 (m,n)의 m과 n이 공백으로 구분되어 있다. (1 < m<sup>2</sup> + n<sup>2</sup> < 20000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대해서, 입력으로 주어진 은행수가 소수라면 P를, 아니라면 C를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>
	m<sup>2</sup> + n<sup>2</sup> > 0인 경우에 m<sup>2</sup> + n<sup>2</sup>이 mp + nq와 mq - np의 공약수라면, (m,n)은 (p,q)의 약수이고, 그 역도 성립한다.</p>
<p>
	만약, (m,n) · (x,y) = (p,q)라면, (m<sup>2</sup> + n<sup>2</sup>)(x<sup>2</sup> + y<sup>2</sup>) = p<sup>2</sup> + q<sup>2</sup>이다.</p>

				</div>
				</div>','8
10 0
0 2
-3 0
4 2
0 -13
-4 1
-2 -1
3 -1
','C
C
P
C
C
P
P
C
','MATH'),
                                                                                                                (593,'BAEKJOON','https://www.acmicpc.net/problem/3827',3827,'일차원 세포 자동자','2초','128 MB',16,'<p>N개의 세포로 이루어진 일차원 세포 자동자(Cellular Automaton)가 있다. 세포는 0번부터 N-1번가지 번호가 매겨져 있다.</p>

<p>각 세포는 상태를 가지고 있다. 상태는 M보다 작은 음이 아닌 정수이다. 세포의 상태는 시간이 1씩 지날때마다 진화한다. 시간 t에서 i번째 세포의 상태를 S(i,t)로 나타낸다. t+1일 때의 상태는 다음과 같은 방정식을 통해 구할 수 있다.</p>

<p>S(i,t+1) = (A × S(i-1,t) + B × S(i,t) + C × S(i+1,t)) mod M</p>

<p>위의 식에서 A, B, C는 음이 아닌 정수이다. i<0 또는 N ≤ i인 경우에 S(i,t) = 0이다.</p>

<p>일차원 세포 자동자의 초기 상태가 주어졌을 때, 시간이 T만큼 지난 뒤, 세포의 상태를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>각 테스트 케이스는 다음과 같은 형식으로 이루어져 있다.</p>

<pre>N M A B C T
S(0,0) S(1,0) ... S(N-1,0)</pre>

<p>0 < N ≤ 50, 0 < M ≤ 1000, 0 ≤ A,B,C < M, 0 ≤ T ≤ 10<sup>9</sup></p>

<p>입력의 마지막 줄에는 0이 여섯 개 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 시간 T에서 세포의 상태를 출력한다. 출력은 다음과 같은 형식이다.</p>

<pre>S(0,T) S(1,T) ... S(N-1,T)</pre>

<p>각 세포의 상태는 정수이고, 공백으로 구분되어야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 4 1 3 2 0
0 1 2 0 1
5 7 1 3 2 1
0 1 2 0 1
5 13 1 3 2 11
0 1 2 0 1
5 5 2 0 1 100
0 1 2 0 1
6 6 0 2 3 1000
0 1 2 0 1 4
20 1000 0 2 3 1000000000
0 1 2 0 1 0 1 2 0 1 0 1 2 0 1 0 1 2 0 1
30 2 1 0 1 1000000000
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0
30 2 1 1 1 1000000000
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
30 5 2 3 1 1000000000
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0
','0 1 2 0 1
2 0 0 4 3
2 12 10 9 11
3 0 4 2 1
0 4 2 0 4 4
0 376 752 0 376 0 376 752 0 376 0 376 752 0 376 0 376 752 0 376
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0
1 1 3 2 2 2 3 3 1 4 3 1 2 3 0 4 3 3 0 4 2 2 2 2 1 1 2 1 3 0
','MATH'),
                                                                                                                (595,'BAEKJOON','https://www.acmicpc.net/problem/3828',3828,'잘못된 계산','1초','128 MB',16,'<p>김상근 교수는 수치표를 만드는 새로운 컴퓨팅 엔진을 개발했다. 이 엔진은 단일 변수&nbsp;다항식 함수의 값을 계산하기 위해 만들어졌다.</p>

<p>다항식 함수가 f(x) = x<sup>2</sup> + 2x + 1인 경우에 결과로 나오는 값은 1 (=f(0)), 4 (=f(1)), 9 (=f(2)), 16 (=f(3)), 25 (=f(4))가 있다.</p>

<p>하지만, 상근이는 음주 코딩을 하다가 실수를 하였다. 따라서, 이 엔진은 항상 하나의 특정한 값에 대해서만 결과를 잘못 출력한다. 따라서, 위의 다항식 함수를 입력했을 때, 1, 4, 9, 16, 25 대신에 1, 4, 12, 16, 25가 나올 수 있다.</p>

<p>상근이의 엔진이 출력한 값이 주어졌을 때, 몇 번째 결과가 잘못 계산된 것인지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다.</p>

<p>각 테스트 케이스의 첫째 줄에는 다항식의 차수 d가 주어진다. 예를 들어, 4x<sup>5</sup> + 3x + 0.5인 경우에 다항식의 차수는 5이고, 2.4x + 3.8인 경우에는 1이다. d는 5보다 작거나 같다.</p>

<p>다음 d+3개 줄에는 f(0), f(1), ..., f(d+2)의 결과가 주어진다. f는 다항식 함수이고, 입력으로 주어지지 않는다. 모든 결과 값은 -100.0보다 크고, 100.0보다 작은 실수이다.</p>

<p>항상 잘못 계산된 값은 f(0), f(1), ..., f(d+2)중 하나이다. 올바른 값과의 오차는 1.0보다 크다. 컴퓨터로 소수점 계산을 했을 때, 오차는 피할 수 없다. 따라서, 다른 값에도 오차가 있을 수 있다. 하지만, 이 오차는 매우 작고, 10<sup>-6</sup>을 넘지 않는다.</p>

<p>입력의 마지막 줄에는 0이 하나 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 잘못 계산된 값이 몇 번째 값인지 출력한다. f(i)의 결과가 잘못되었다면, i를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1.0
4.0
12.0
16.0
25.0
1
-30.5893962764
5.76397083962
39.3853798058
74.3727663177
4
42.4715310246
79.5420238202
28.0282396675
-30.3627807522
-49.8363481393
-25.5101480106
7.58575761381
5
-21.9161699038
-48.469304271
-24.3188578417
-2.35085940324
-9.70239202086
-47.2709510623
-93.5066246072
-82.5073836498
0
','2
1
1
6
','MATH'),
                                                                                                                (594,'BAEKJOON','https://www.acmicpc.net/problem/3843',3843,'볼록 정다각형','1초','128 MB',16,'<p>볼록 정다각형은 변의 길이가 모두 같으면서 내부각의 크기도 같고 그 크기는 180도보다 작다. 정사각형은 볼록 정다각형이다.</p>

<p>볼록 정다각형 R의 세 점이 주어진다. 이때, R의 점의 개수의 최솟값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>각 테스트 케이스는 세 줄로 이루어져 있다. 한 줄에 하나씩 볼록 정다각형 R의 한 점 (x<sub>i</sub>, y<sub>i</sub>)가 주어진다. (-10<sup>4</sup> ≤ x<sub>i</sub>, y<sub>i</sub> ≤ 10<sup>4</sup>) 좌표의 오차는 10<sup>-6</sup>이다. (정확한 좌표와의 차이가 최대 10<sup>-6</sup>) 두 점의 거리는 항상 최소 1이며, R은 최대 1000개의 점으로 이루어져 있다.</p>

<p>입력의 마지막 줄에는 END가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서 R의 점의 개수의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','-1385.736326 -146.954822
430.000292 -2041.361203
1162.736034 478.316025
0.000000 4147.000000
-4147.000000 0.000000
0.000000 -4147.000000
END
','3
4
','MATH'),
                                                                                                                (599,'BAEKJOON','https://www.acmicpc.net/problem/3844',3844,'백준 공화국','5초','128 MB',15,'<p>백준 공화국 사람들은 매년&nbsp;독립일을 기념한다. 그러나 독립이&nbsp;아주 오래 전의 일이었으므로, 이젠&nbsp;독립일을 정확하게 기억하는 사람은 아무도 없다. 사람들의 기억속에 남아있는 것은&nbsp;독립일로부터 오늘까지의 날 수 (D) 가 완전제곱수라는 사실, 그리고 그 수가 n이하의 서로 다른 자연수의 곱으로 이루어졌고,&nbsp;가능한&nbsp;가장 큰 수라는 사실이다.</p>

<p>백준 공화국은 1년이&nbsp;1,000,000,007일 이므로 사람들은 D를&nbsp;1,000,000,007로 나눈 나머지가 필요하다. 다만, D를&nbsp;1,000,000,007로 나눈 나머지가 가장 큰 것이 아니라 D가 가장 큰 것을 원한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>각 테스트케이스마다 한 줄 씩 n이 주어진다(1 ≤ n ≤ 10, 000, 000). 입력으로&nbsp;0이 들어오면 종료한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트케이스마다 한 줄 씩&nbsp;D를 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
9348095
6297540
0
','4
177582252
644064736
','MATH'),
                                                                                                                (637,'BAEKJOON','https://www.acmicpc.net/problem/3857',3857,'전구 게임','1초','128 MB',19,'<p>상근이는 n개의 전구와 스위치 n개를 가지고 있다. 각 전구는 켜져있거나 꺼져있고, 스위치는 각 전구에 연결되어 있다. 스위치는 전구의 상태를 반대로 바꾼다. 즉, 켜져있는 전구의 스위치를 누르면 전구를 끄고, 반대의 경우에는 반대로 행동한다. 상근이는 이 전구를 가지고 하는 게임을 만들었다.</p>

<p>전구는 스위치의 조합을 선택하고, 그 스위치를 누르는 것이 한 턴이다. 스위치를 전혀 선택하지 않는 경우도 가능한 스위치의 조합이다. m턴이 지난 후에 처음 v개 전구는 켜져있는 상태, 나머지는 꺼져있는 상태가 되어야 한다. 이 게임에는 제약이 하나 있는데, 한 조합을 두 번 이상 사용할 수 없다.</p>

<p>이 게임은 매우 쉬운 게임이기 때문에 이기는 방법이 매우 많다. 상근이는 이기는 방법을 모두 찾으려고 한다. 총 몇 가지 경우가 있는지 구하는 프로그램을 작성하시오.</p>

<p>게임을 이기는 두 방법 A와 B가 있을 때, 방법 A의 순서를 적절히 바꿔서 다른 방법 B를 만들 수 있다면, 같은 방법이다.</p>

<p>예를 들어, n=4, m=3, v=2인 경우에, 첫 턴에 1, 2, 4를, 둘째 턴에 1, 3을 셋째 턴에 1, 3, 4를 누르면 게임을 이길 수 있다. 이 방법은 첫 턴에 1, 3을 누르고, 둘째 턴에 1, 2, 4, 셋째 턴에 1, 3, 4를 누르는 방법과 동일하다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있고, 500개를 넘지 않는다. 각 테스트 케이스는 한 줄로 이루어져 있고, n (1 ≤ n ≤ 1,000), m (1 ≤ m ≤ 1,000), v (0 ≤ v ≤ n)이 주어진다. 마지막 줄에는 0 0 0이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서 게임을 이기는 방법의 수를 10567201로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 3 1
6 4 0
6 4 3
0 0 0
','7
10416
9920
','MATH'),
                                                                                                                (605,'BAEKJOON','https://www.acmicpc.net/problem/3881',3881,'말파티 원','1초','128 MB',17,'<p>삼각형 안에 세 개의 원을 각각의 원이 다른 두 원과 삼각형의 두 변에 접하게 그릴 수 있다. 이러한 원을 말파티 원(Malfatti Circles)이라고 한다. 많은 수학자들이 말파티 원을 두 세기 이상 연구하였다. 임의의 삼각형에 대해서 말파티 원은 항상 존재하고 유일하다는 것이 증명되어 있다.</p>

<p>삼각형의 꼭짓점이 (20, 80), (-40, -20), (120,-20)일 때, 삼각형의 말파티 원은 다음과 같다.</p>

<ul>
	<li>원의 중심이 (24.281677, 45.219486), 반지름이 21.565935</li>
	<li>원의 중심이 (3.110950, 4.409005), 반지름이 24.409005</li>
	<li>원의 중심이 (54.556724, 7.107493), 반지름이 27.107493</li>
</ul>

<p>또, 삼각형의 꼭짓점이 (20, -20), (120, -20), (-40, 80)일 때, 삼각형의 말파티 원은 다음과 같다.</p>

<ul>
	<li>원의 중심이 (25.629089, -10.057956), 반지름이 9.942044</li>
	<li>원의 중심이 (53.225883, -0.849435), 반지름이 19.150565</li>
	<li>원의 중심이 19.701191, 19.203466), 반지름이 19.913790</li>
</ul>

<p><img alt="" src=https://www.acmicpc.net/upload/images/malfatti.png" style="height: 100px; width: 356.667px;"></p>

<p>삼각형이 주어졌을 때, 말파티 원을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 여섯 정수 x1, y1, x2, y2, x3, y3이 공백으로 구분되어져 있다. 이 좌표는 삼각형의 각 꼭짓점이고 (x1, y1), (x2, y2), (x3, y3)이다. 입력으로 주어지는 삼각형의 꼭짓점은 반시계방향 순서이고 다음과 같은 조건을 만족한다.</p>

<ol>
	<li>모든 꼭짓점의 좌표는 -1000보다 크고 1000보다 작다.</li>
	<li>반지름이 0.1보다 작은 말파티 원은 없다.</li>
</ol>

<p>입력의 마지막 줄에는 0이 여섯 개 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서 말파티 원의 반지름 r1, r2, r3를 소수점 여섯째 자리까지 출력한다. ri는 꼭짓점 (xi, yi)와 가장 가까운 원의 반지름이다.</p>

<p>출력하는 반지름의 오차는 0.0001보다 크면 안 된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','20 80 -40 -20 120 -20
20 -20 120 -20 -40 80
0 0 1 0 0 1
0 0 999 1 -999 1
897 -916 847 -972 890 -925
999 999 -999 -998 -998 -999
-999 -999 999 -999 0 731
-999 -999 999 -464 -464 999
979 -436 -955 -337 157 -439
0 0 0 0 0 0
','21.565935 24.409005 27.107493
9.942044 19.150565 19.913790
0.148847 0.207107 0.207107
0.125125 0.499750 0.499750
0.373458 0.383897 0.100456
0.706768 0.353509 0.353509
365.638023 365.638023 365.601038
378.524085 378.605339 378.605339
21.895803 22.052921 5.895714
','MATH'),
                                                                                                                (610,'BAEKJOON','https://www.acmicpc.net/problem/3895',3895,'그리고 하나가 남았다','1초','128 MB',16,'<p dir="ltr">돌 치우기 게임을 해보자.</p>

<p dir="ltr">처음에는 그림 1과 같이 1~n까지의 번호가 매겨진 n개의 돌이 시계방향으로 늘어서 있다. 그리고 두 개의 숫자 k와 m이 주어진다. 이 상태에서, 돌이 하나만 남을 때 까지 아래의 규칙대로 돌을 하나씩 치운다.</p>

<ul dir="ltr">
	<li>스텝1: 돌 m을 치운다.</li>
	<li>스텝i: 스텝 (i-1)에서 치운 돌의 위치에서 시작하여 남은 돌 중 시계 방향으로 k번째에 위치한 돌을 치운다. 즉, k-1개의 돌을 건너뛴 후 있는 돌을 치우며, 이미 치운 돌은 건너뛰는 회수로 세지 않는다. (i ≥ 2)</li>
</ul>

<p dir="ltr">스텝1, 스텝2, 스텝3, ... 을 순차적으로 실행하여 돌이 하나만 남을 때까지 반복할 때 남은 돌이 게임의 답이 된다.</p>

<p dir="ltr">예를 들어, 그림1에서와 같이 n = 8, k = 5, m = 3 인 경우 답은 1이다.</p>

<p style="text-align:center"><img alt="" src=https://www.acmicpc.net/upload/imagesa/figureA1.png" style="height: 177.5px; width: 384.167px;"></p>

<p style="text-align:center">그림1: 게임 예제</p>

<ul dir="ltr">
	<li>초기 상태: 8개의 돌이 시계방향으로 있다.</li>
	<li>스텝1: m=3이므로 돌 3이 제거된다.</li>
	<li>스텝2: 3에서 시작해서 k=5이므로 돌 4, 5, 6, 7 (총 4개)를 스킵하고 8을 제거한다.</li>
	<li>스텝3: 8에서 시작해서 돌 1, 2, 4, 5를 스킵하고 6을 제거한다. 돌 3은 무시되었음 (즉, 스킵 회수에 포함되지 않았음) 을 주목할 것.</li>
	<li>스텝4-7: 하나의 돌만 남을 때까지 계속한다.</li>
	<li>마지막 스텝: 남은 돌이 1이므로 답은 1이다.</li>
</ul>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p dir="ltr">입력은 여러개의 데이터 행이며, 각 데이터는 다음과 같은 3개의 숫자로 이루어진다.</p>

<p dir="ltr">n k m</p>

<p dir="ltr">마지막 데이터 행 다음은 3개의 0으로 이루어진 행이다. 각 수는 다음 범위를 만족한다.</p>

<p dir="ltr">2 ≤ n ≤ 10000, 1 ≤ k ≤ 10000, 1 ≤ m ≤ n</p>

<p dir="ltr">데이터 행의 수는 100보다 작다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 데이터 행에 대해서 마지막 남은 돌의 번호를 각각 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8 5 3
100 9999 98
10000 10000 10000
0 0 0
','1
93
2019
','MATH'),
                                                                                                                (649,'BAEKJOON','https://www.acmicpc.net/problem/3896',3896,'소수 사이 수열','1초','128 MB',10,'<p>연속한 소수 p와 p+n이 있을 때, 그 사이에 있는 n-1개의 합성수(소수나 1이 아닌 양의 정수)는 길이가 n인 소수 사이 수열라고 부른다.</p>

<p>양의 정수 k가 주어졌을 때, k를 포함하는 소수 사이 수열의 길이를 구하는 프로그램을 작성하시오. k를 포함하는 소수 사이 수열이 없을 때는 길이가 0이다.</p>

<p>예를 들어, 소수 23과 29의 소수 사이 수열은 {24, 25, 26, 27, 28}이고, 길이는 6이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 테스트 케이스는 한 줄로 이루어져 있고, 한 줄에 정수 k가 주어진다. 각각의 정수는 1보다 크고, 100000번째 소수(1299709)와 작거나 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스에 대해서 k가 합성수라면 k를 포함하는 소수 사이 수열의 길이를 출력한다. 그렇지 않으면 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
10
11
27
2
492170
','4
0
6
0
114
','MATH'),
                                                                                                                (631,'BAEKJOON','https://www.acmicpc.net/problem/3908',3908,'서로 다른 소수의 합','1초','128 MB',13,'<p>
	양의 정수는 서로 다른 소수의 합으로 나타낼 수 있다. 두 정수 n과 k가 주어졌을 때, n을 서로 다른 k개의 소수의 합으로 나타내는 방법의 수를 구하는 프로그램을 작성하시오. 여기서 덧셈의 순서만 다른 경우(3+5, 5+3)는 모두 1가지로 센다.</p>

<p>
	예를 들어, n=24, k=3일 때, 2가지로 나타낼 수 있다. {2, 3, 19}, {2, 5, 17} 합이 24가 되는 서로 다른 소수 3개는 이 2가지를 제외하고는 없다. 또, n=24, k=2일 때 답은 {5, 19}, {7, 17}, {11, 13} 3가지이며, n=2, k=1일 때 답은 {2} 1가지이다. n=1, k=1일 경우에는 1은 소수가 아니기 때문에 답은 0이다. 마지막으로 서로 다른 2개 소수의 합이 4가 되는 경우도 없기 때문에, n=4, k=2도 답이 0이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각각의 테스트 케이스는 한 줄에 n과 k가 공백으로 구분되어 있다. (n ≤ 1120, k ≤ 14)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 해당하는 경우의 수를 한 줄에 하나씩 출력한다. 정답은 항상 2<sup>31</sup>보다 작다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','12
24 3
24 2
2 1
1 1
4 2
18 3
17 1
17 3
17 4
100 5
1000 10
1120 14
','2
3
1
0
0
2
1
0
1
55
200102899
2079324314
','MATH'),
                                                                                                                (640,'BAEKJOON','https://www.acmicpc.net/problem/3923',3923,'저울','1초','128 MB',9,'<p>
	원웅이는 두 종류의 추와 저울을 이용해서 아스피린의 양을 재려고 한다. 원웅이는 추를 무수히 많이 가지고 있고, 약은 가루로 가지고 있다.</p>

<p>
	예를 들어, 300mg 추와 700mg 추가 있을 때, 200mg의 아스피린을 재려면, 300mg 추 3개를 왼편에 놓고, 700mg의 추 1개를 반대편에 놓은 뒤, 평형을 이루도록 약을 놓으면 된다.&nbsp;</p>
<p>
	또는, 왼쪽에 700mg 추 2개를 놓고, 오른쪽에 300mg추 4개를 놓으면, 오른쪽에 약을 저울이 평형을 이루도록 놓으면 된다.</p>

<p>
	원웅이가 가지고 있는 추의 종류와 재려고 하는 아스피린의 양이 주어졌을 때, 각각 추를 몇 개 사용하면 아스피린의 양을 잴 수 있는지 구하는 프로그램을 작성하시오.</p>

<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/b1.png" style="width: 355.833px; height: 99.1667px;"><img alt="" src=https://www.acmicpc.net/upload/images/b2.png" style="width: 355px; height: 111.667px;"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, a, b, d가 공백으로 구분되어 주어진다.</p>

<p>
	a와 b는 원웅이가 가지고 있는 추의 무게이고, d는 재려고 하는 약의 양이다. a와 b는 같지 않고, 두 수 모두 10,00보다 작거나 같은 자연수이다. d는 50,000보다 작거나 같은 자연수이다.</p>

<p>
	정답이 존재하지 않는 경우는 없다.</p>

<p>
	테스트 케이스는 a, b, d가 0일 때 끝난다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">

<p>
	각 테스트 케이스에 대해서, x와 y를 출력한다. x와 y는 다음 세가지 조건을 만족해야 한다.</p>

<p>
	1. amg추 x개와 bmg추 y개를 이용해서 dmg의 약을 저울로 잴 수 있어야 한다.</p>

<p>
	2. 1번 조건을 만족하는 경우가 여러 가지라면, 사용한 추의 개수(x+y)가 가장 작은 것을 출력한다.</p>

<p>
	3. 2번 조건을 만족하는 경우도 여러 가지라면, 추의 총 질량(ax+by)이 가장 작은 것을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','700 300 200
500 200 300
500 200 500
275 110 330
275 110 385
648 375 4002
3 1 10000
0 0 0
','1 3
1 1
1 0
0 3
1 1
49 74
3333 1
','MATH'),
                                                                                                                (644,'BAEKJOON','https://www.acmicpc.net/problem/3925',3925,'암호화의 취약점 찾기','1초','128 MB',8,'<p>여기 암호화해서 전송하고싶은 데이터가 32bit unsigned int 8개 형태로 주어져있다.</p>

<p>N1 N2 N3 ... N8</p>

<p>우선 이 데이터가 올바른 데이터인지 확인해주는 checksum을 구해서 9번째 데이터로 추가해줬다. (checksum은 데이터의 무결성을 확인하는데 자주 사용되는 방식이다.)</p>

<p>N9 = sigma(Ni) mod 2^32</p>

<p>그다음 특정 32bit 키값 K를 이용해서 이 9개의 숫자를 암호화하려고 한다. 암호화는 XOR 연산을 통해 이루어진다고 보자. (XOR은 데이터의 암호화를 위해 자주 사용되는 연산자다.)</p>

<p>M1 = N1 ^K, M2 = N2 ^ K ... M9 = N9 ^ K</p>

<p>이렇게 해서 만들어진 M1 ~ M9 9개의 데이터를 전송하면 K값을 알고있는 사람은 원래 데이터 N1 ~ N8을 알아낼 수 있다. 그리고 K값을 모르는 사람은 원래 데이터 N1 ~ N8을 알아낼 수.....있다!</p>

<p>놀랍게도 위의 방식에는 취약점이 존재한다. 취약점을 발견해서 9개의 정수 M1 ~ M9 가 16진수 형태로 주어졌을 때, 키값 K를 구하는 프로그램을 작성해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫째 줄에는 테스트데이터의 개수 T가 주어진다. T는 1000을 넘지 않는다.</p>

<p>그 다음 각 테스트데이터마다 9개의 정수 M1 ~ M9 가 16진수 형태로 주어진다. 16진수는 0 ~ 9 그리고 소문자로만 이루어져 있고, 불필요한 0은 들어오지 않는다. 9개의 숫자가 한 줄에 모두 입력되지 않을 수도 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트데이터마다 한줄에 하나씩 키값 K를 소문자 16진수 형태로 출력한다. 불필요한 0은 출력하지 않는다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>원문으로 볼 시 스포일러 주의</p>

				</div>
				</div>','8
1 1 1 1 1 1 1 1 8
3 2 3 2 3 2 3 2 6
3 4 4 7 7 b a 2 2e
e1 13 ce 28 ca 6 ab 46 a6d
b08 49e2 6128 f27 8cf2 bc50 7380 7fe1 723b
4eba eb4 a352 fd14 6ac1 eed1 dd06 bb83 392bc
ef593c08 847e522f 74c02b9c 26f3a4e1 e2720a01 6fe66007
7a4e96ad 6ee5cef6 3853cd88
60202fb8 757d6d66 9c3a9525 fbcd7983 82b9571c ddc54bab 853e52da
22047c88 e5524401
','0
2
6
1c6
4924afc7
ffff95c5
546991d
901c4a16
','MATH'),
                                                                                                                (647,'BAEKJOON','https://www.acmicpc.net/problem/3944',3944,'나머지 계산','1초','256 MB',10,'<p>b진법 수가 주어졌을 때, 이를 b-1로 나눈&nbsp;나머지를 출력하는 프로그램을 작성하시오.</p>

<p>예를 들어,</p>

<ul>
	<li>7829<sub>10</sub> mod 9 = 8</li>
	<li>37777777777777773<sub>8</sub> mod 7 = 6</li>
	<li>123456<sub>7</sub> mod 6 = 3</li>
	<li>(37777777777777773<sub>8</sub> = 1125899906842619<sub>10</sub>, 123456<sub>7</sub> = 22875<sub>10</sub>)</li>
</ul>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T(1 ≤ T ≤ 1000)가 주어진다. 둘째 줄부터 T개의 줄에는 진법을 나타내는 B와 음이 아닌 수 B진법 수 D가 공백으로 구분되어 주어진다. (2 ≤ B ≤ 10) D는 최대 10,000,000자리이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스에 대해서, B진법 수 D를 B-1로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
10 7829
7 123456
6 432504023545112
8 37777777777777773
2 10110100010101010101101110001010001010101010101010111
','8
3
1
6
0
','MATH'),
                                                                                                                (620,'BAEKJOON','https://www.acmicpc.net/problem/3946',3946,'랜덤 걷기','10초','128 MB',18,'<p>걷기 전에 동전을 던진 다음, 앞 면이면 왼쪽으로 한 칸, 뒷 면이면 오른쪽으로 한 칸 이동하는 방법을 랜덤 걷기라고 한다. 이 랜덤 걷기의 위치의 기댓값은 항상 0이 된다. 즉, 랜덤 걷기를 아무리 많이 한다고 해도, 평균 위치는 처음 시작한 지점과 같다.</p>

<p>랜덤 걷기에서 왼쪽으로 갈 확률과 오른쪽으로 갈 확률, 그리고 동전을 던지는 횟수가 주어졌을 때, 가장 오른쪽 위치의 기댓값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 테스트 케이스의 P가 주어진다. 각 테스트 케이스는 모두 독립적이다.</p>

<p>각 테스트 케이스는 한 줄로 이루어져 있다. 이 줄에는 총 세 개의 숫자가 주어지는데, 왼쪽부터 순서대로 n, L, R이다. n(1 ≤ n ≤ 1000)은 동전을 던지는 횟수이다. L과 R은 각각 왼쪽으로 갈 확률과 오른쪽으로 갈 확률이다. ( 0 ≤ L ≤ 1, 0 ≤ R ≤ 1, 0 ≤ L+R ≤ 1) 이 문제에서 사용하는 동전은 조금 독특해서, 앞 면과 뒷 면이 나올 확률이 서로 다를 수도 있다. 또, 1-L-R은 동전의 옆 면이 나올 확률로, 옆 면이 나온 경우에는 그 자리에 그대로 있는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 가장 오른쪽 위치의 기댓값(평균)을 소수점 넷째 자리 까지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 0.5 0.5
4 0.5 0.5
10 0.5 0.4
1000 0.5 0.4
','0.5000
1.1875
1.4965
3.9995
','MATH'),
                                                                                                                (622,'BAEKJOON','https://www.acmicpc.net/problem/3948',3948,'홍준이의 친위대','1초','128 MB',16,'<p>홍준 왕국의 국왕 홍준이는 자신을 호위하는 N명의 친위대 병사가 있다. 병사들의 키는 모두 다르다. 홍준이는 그들을 일렬로 세울 때, 키 순서대로 세우는 것보다 맨 끝 두 병사를 제외한 나머지 병사들의 양 옆 두&nbsp;병사의&nbsp;키가 자신 보다 크거나 모두 자신보다 작을 때 보기 좋다고 생각한다. 예를 들어, 홍준이에게 7명의 친위대 병사가 있고, 그 들의 키가 160, 162, 164, 166, 168, 170, 그리고 172cm 라고 하자. 아래와 같이 병사가 일렬로 서있으면 홍준이는 보기 좋다고 생각한다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/kud1.png" style="height:123px; width:358px"></p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/kud2.png" style="height:139px; width:366px"></p>

<p>만약 홍준이가 매일 같은 병사&nbsp;배치를 본다면 매우 지루해할 것이다. 때문에 매일 병사들의 배치를 새롭게 하고 싶다. 즉,&nbsp;병사 N명이 있을 때 서로 다른 배치가 몇 가지 있는지 알고 싶어한다.</p>

<p>예를 들어, 병사가 4명이 있고 편의상 그들의 키를 1, 2, 3, 4라고 나타내자. 그러면 아래와 같이 10가지 배치가 가능하다.</p>

<p>1324, 2143, 3142, 2314, 3412, 4231, 4132, 2413, 3241, 1423</p>

<p>병사의 수 N이 주어졌을 때, 가능한 배치의 수를 구하는 프로그램을 작성하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트케이스 수 T가 주어진다. (1&nbsp;≤ T&nbsp;≤ 1,000)</p>

<p>각 테스트케이스마다 병사의 수를 나타내는 자연수 N이 주어진다. (1&nbsp;≤ N&nbsp;≤ 20)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트케이스 마다 가능한 배치의 수를 줄로 구분하여 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1
3
4
20
','1
4
10
740742376475050
','MATH'),
                                                                                                                (619,'BAEKJOON','https://www.acmicpc.net/problem/3955',3955,'캔디 분배','1초','128 MB',16,'<p>창영이는 선영이가 사탕을 공평하게 나누어주지 않으면 친구들을 때릴정도로 사탕을 좋아한다.</p>

<p>따라서, 선영이는 다음 파티에 사용할 사탕을 구매하기 전에 고민을 하기 시작했다.</p>

<p>만약 파티에 K명이 참가한다면, 공정하게 나누어주려면 K×X개를 사야 한다. (X는 자연수)&nbsp;</p>

<p>선영이는 항상 적어도 한 아이는 사탕을 잃어버린다는 사실을 알고 있다. 그래서 캔디를 하나 더 구매해 총 (K×X+1)개를 구매하려고 한다.</p>

<p>사탕은 봉지 단위로 판매한다. 한 봉지에는 사탕이 총 C개 들어있다. 문제의 조건을 만족하면서 구매할 수 있는 사탕 봉지의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 t가 주어진다. (0 < t < 100) 각 테스트 케이스는 한 줄로 이루어져 있고, K와 C가 공백으로 구분되어져서 주어진다. (1 ≤ K, C ≤ 10<sup>9</sup>) 선영이는 부자가 아니기 때문에 10<sup>9</sup>개를 넘는 사탕 봉지를 구매하지 못한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서 문제의 조건을 만족시키면서 구매할 수 있는 사탕 봉지가 없다면, "IMPOSSIBLE"을 출력한다. 이 경우가 아닌 경우에는 선영이가 구매해야 하는 사탕 봉지의 수를 출력한다. 만약, 가능한 봉지의 수가 여러개라면 아무거나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
10 5
10 7
1337 23
123454321 42
999999937 142857133
','IMPOSSIBLE
3
872
14696943
166666655
','MATH'),
                                                                                                                (604,'BAEKJOON','https://www.acmicpc.net/problem/3958',3958,'롤러코스터 타기','1초','128 MB',14,'<p>상근이와 친구들은 놀이 공원에 놀러갔다. 이 놀이 공원에는 많은 종류의 롤러코스터가 있고, 상근이는 각 롤러코스터를 미리 분석해 왔다. 상근이는 각 롤러코스터를 탔을 때 느낄 수 있는 재미를 숫자로 적어왔다. 하지만, 롤러코스터를 탈 때 마다 느끼는 재미는 점점 떨어진다.</p>

<p>상근이는 i번 롤러코스터를 k번째로 탔을 때 느끼는 재미를 함수로 정의해 왔다. f(i, k) = a<sub>i</sub> - (k-1)<sup>2</sup>*b<sub>i</sub>. 만약 f(i,k)값이 양수가 아니라면, 그 롤러코스터를 타면, 더이상 재미를 느끼지 않는 것이다.</p>

<p>상근이는 재미의 합이 최대가 되게 롤러코스터를 타려고 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. N은 놀이 공원에 있는 롤러코스터의 개수이다. (0 < N ≤ 100)</p>

<p>다음 N개의 줄에는 a<sub>i</sub>, b<sub>i</sub>, t<sub>i</sub>가 있다. a<sub>i</sub>와 b<sub>i</sub>는 상근이가 정의한 함수의 계수이고, t<sub>i</sub>는 i번째 롤러코스터를 타는데 걸리는 시간이다. (0 ≤ a<sub>i</sub>, b<sub>i</sub> ≤ 1,000, 0 < t<sub>i</sub> ≤ 25,000)</p>

<p>다음 줄에는 놀이 공원을 방문하는 시간의 개수 Q가 주어진다. (0 ≤ Q ≤ 1,000) 다음 Q개 줄에는 상근이가 놀이 공원에 방문하는 시간 T<sub>i</sub>가 주어진다. (0 ≤ T<sub>i</sub> ≤ 25,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 Q개의 줄을 출력한다. 각각의 시간 T<sub>i</sub>에 대해서, 상근이가 느낄 수 있는 최대 재미 점수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
5 0 5
7 0 7
4
88
5
6
7
','88
5
5
7
','MATH'),
                                                                                                                (641,'BAEKJOON','https://www.acmicpc.net/problem/3959',3959,'스키 점프','2초','128 MB',16,'<p>스키 점프는 가장 인기있는 겨울 스포츠 대회 중 하나이다. 스키 점프 언덕은 기록을 높이기 위해 점점 커졌다. 선수들의 안전을 위해서 국제 스키 연맹은 착륙 속도와 각도의 최댓값을 정해두었다. 새로 만들어진 스키 점프 경기장이 주어진다. 출발대의 가장 높은 곳에서 출발했을 때, 착륙 속도와 각도를 구하는 프로그램을 작성하시오.</p>



<p><img alt="" src=https://www.acmicpc.net/upload/images/sj1.png" style="height: 210.833px; width: 343.333px;"></p>



<p>이 문제를 풀기 위해서는 아래와 같은 간단한 물리 지식이 필요하다.&nbsp;</p>



<p>언덕은 다음과 같은 모양이다.</p>



<p><img alt="" src=https://www.acmicpc.net/upload/images/sj2.png" style="height: 86.6667px; width: 357.5px;"></p>



<p>l은 언덕이 시작하는 곳을 원점으로 했을 때, x축 상의 위치이다. H는 언덕의 높이, L은 언덕의 너비이다. j는 스키 점프를 시작할 수 있는 최대 높이이고, p는 점프대와 언덕 꼭대기와의 높이 차이이다. 마찰력과 공기저항은 무시한다면, 선수는 다음과 같은 곡선을 그리며 날아가게 된다.</p>



<p><img alt="" src=https://www.acmicpc.net/upload/images/sj3.png" style="height: 44.1667px; width: 340px;"></p>



<p>여기서 v0은 점프할 때의 속도이다. 이 속도는 에너지 보존의 법칙을 이용해서 계산할 수 있다. 포텐셜 에너지와 운동 에너지의 정의는 다음과 같다.</p>



<p><img alt="" src=https://www.acmicpc.net/upload/images/sj4.png" style="height: 35.8333px; width: 344.167px;"></p>



<p>모든 식에서 g는 중력 상수이며, 9.81ms<sup>-2</sup>로 계산한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 t가 주어진다. (0 < t < 160,000)</p>



<p>각 테스트 케이스는 한 줄로 이루어져 있고, j, p, H, L이 주어진다. (0 < j, p, H, L ≤ 500) 모든 값의 단위는 미터이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 다음과 같은 세 가지 값을 출력한다.</p>



<p>1. x축 상에서 착륙 위치 l</p>



<p>2. 착륙 속도 |vl| (m/s)</p>



<p>3. 언덕에 대한 각도 α (degree)</p>



<p>오차는 10<sup>-4</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>두 벡터 a와 b의 내적은 다음과 같이 구할 수 있다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/sj5.png" style="height:37px; width:388px"></p>

				</div>
				</div>','3
50 5 10 100
50 5 30 100
50 5 50 100
','40.82482905 33.83045965 12.93315449
81.04978134 40.31656580 26.21334827
104.8808848 45.38832449 46.36470132
','MATH'),
                                                                                                                (614,'BAEKJOON','https://www.acmicpc.net/problem/3964',3964,'팩토리얼과 거듭제곱','1초','128 MB',14,'<p>
	수학 나라에 전쟁이 일어났다. 팩토리얼 진영과 거듭제곱 진영은 누가 수학 나라를 지배할 것인지 결정하기 위해 싸우고 있다.</p>

<p>
	팩토리얼 진영의 유명한 장군 n은 자기 자신을 팩토리얼 계산을 하면서 훈련을 하고 있고, 거듭제곱진영의 제독 k는 자기 자신에 i제곱을 하기 위해 i를 만들고 있었다.</p>

<p>
	드디어 오늘은 n과 k가 싸우는 날이다. k는 n을 나누어서 작은 수로 만들어 버리기 위해서 몇 년동안 훈련을 진행하고 있었다.</p>

<p>
	이제 k는 n을 나누려고 한다. 훈련을 통해서 모두 성장했으므로, n!와 k<sup>i</sup>와 싸우는 것이다.</p>

<p>
	이때, n!을 k<sup>i</sup>로 나눌 수 있는 가장 큰 i를 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	첫째 줄에 테스트 케이스의 개수 T가 주어진다. (1 ≤ T ≤ 100) 다음 T개의 줄에는 n과 k가 공백으로 구분되어 주어진다. (2 ≤ n ≤ 10<sup>18</sup>, 2 ≤ &nbsp;k ≤ 10<sup>12</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각각의 테스트 케이스에 대해서, 가장 큰 i를 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
5 2
10 10
','3
2
','MATH'),
                                                                                                                (636,'BAEKJOON','https://www.acmicpc.net/problem/3981',3981,'큐브러버','1초','128 MB',13,'<p>지학이는 3차 다항식(cubic polynomial)을 좋아하는 잘 알려진 cubelover 이다.</p>

<p>어느 화창한 봄날, 지학이는 아파트 놀이터에서 승현이가 길이 n의 정수 수열 x<sub>1</sub>, x<sub>2</sub>, ..., x<sub>n</sub> 을 가지고 노는 것을 보았다. 지학이는 그 아파트의 짱이었고, 승현이보다 45일이나 먼저 태어난 형이었다. 지학이는 승현이를 보자 마자 갖고 놀던 수열을 빼앗아 갔다.</p>

<p>승현이는 그 자리에서 엉엉 울기 시작했고, 마음이 약해진 지학이는 승현이가 1 ≤ i ≤ n인 모든 정수 i에 대해 x<sub>i</sub> = ai<sup>3</sup>+bi<sup>2</sup>+ci+d를 만족하는 실수 a, b, c, d 를 찾으면 수열을 돌려주겠다고 약속했다. (사실 3차 다항식이라 a ≠ 0이어야 하긴 하는데, 지학이는 그 정도로 엄밀하게 굴고 싶진 않은 모양이다.)</p>

<p>간만에 학교를 나와 외출을 즐기고 있는 당신은, 울고 있는 승현이와 눈을 마주쳤다. 승현이는 여러분에게 곧장 달려와서, 빨리 그러한 실수 a, b, c, d 를 찾아달라고 졸랐다. 당신은 과연 승현이의 눈물을 닦아 줄 수 있는가?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>이 문제는 한 입력에 여러 개의 테스트 케이스가 주어진다. 첫 번째 줄에 그러한 테스트 케이스의 개수 T (1 ≤ T ≤ 1000) 가 주어진다.</p>

<p>이후 T개의 줄이 주어진다. 첫 번째로 수열의 길이인 정수 n (1 ≤ n ≤ 500) 이 주어진다. 이후 n 개의 정수가 주어진다. 이 중 i번째 정수는 x<sub>i</sub> (0 ≤ x<sub>i</sub> ≤ 50, 000, 000) 를 뜻한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>T개의 줄에 걸쳐, 만약에 승현이가 원하는 실수 a, b, c, d가 존재한다면 YES, 존재하지 않는다면 NO를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 테스트 케이스에서, 가능한 답 중 하나는 a = 0, b = 0, c = 0, d = 3 이다.</p>

				</div>
				</div>','3
1 3
5 0 1 2 3 4
5 0 1 2 4 5
','YES
YES
NO
','MATH'),
                                                                                                                (615,'BAEKJOON','https://www.acmicpc.net/problem/3989',3989,'유행성 독감','1초','128 MB',16,'<p>상근이가 살고 있는 마을에 유행성 독감이 전염되기 시작했다. 마을에는 총 M명이 살고 있고, 각 사람은 0번부터 M-1번까지 번호가 매겨져 있다. 독감은 딱 하루 동안만 걸린다. 따라서, 한 사람이 여러 번 독감에 걸릴 수 있다.</p>

<p>독감은 다른 마을에 놀러갔다가 돌아온 사람들이 전염시켰다. 이 사람들의 번호는 모두 알려져 있다. 첫째 날에 독감에 걸린 사람은 이 사람들 뿐이다. 독감은 이 사람들에 근거해서 전염이 된다.</p>

<p>둘째 날부터 각각의 날에 독감에 걸린 사람은 다음과 같은 규칙을 갖는다.</p>

<p>이전 날에 독감에 걸린 사람 a와 첫째 날에 걸린 사람 b를 곱한 뒤 M으로 나눈 나머지 번호를 갖는 p는 모두 독감에 걸린다.</p>

<p>즉, (a * b) mod M = p 에 해당하는 p는 모두 독감에 걸린다.</p>

<p>a와 b는 같아도 된다. 예를 들어, 마을에 101명이 살고 있고, 첫째 날에 독감에 걸린 사람이 5와 50이라고 하자. 둘째 날에 독감에 걸린 사람은 25, 48 (250 mod 101), 76 (2500 mod 101)이 된다. 또, 셋째 날에 독감에 걸린 사람 중 한 명은 77 이다. ((48 * 50) mod 101)</p>

<p>K일에 독감에 걸려 있는 사람을 모두 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 날에 K, M, N이 주어진다. (1 ≤ K ≤ 10<sup>18</sup>, 3 ≤ M ≤ 1500, N < M) N은 첫째 날 독감에 걸린 사람의 수이다.</p>

<p>둘째 줄에는 첫째 날 독감에 걸린 사람이 공백으로 구분되어 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 K일에 독감에 걸려있는 사람의 번호를 공백으로 구분하여 오름차순으로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 100 3
1 2 3
','1 2 3
','MATH'),
                                                                                                                (621,'BAEKJOON','https://www.acmicpc.net/problem/3990',3990,'화면 보호기','2초','128 MB',22,'<p>상근이는 새 화면 보호기를 설치했다. 컴퓨터를 5분동안 사용하지 않으면 화면 보호기가 실행된다. 이 화면 보호기는 수족관 그림과 움직이는 물고기를 보여준다. 화면 보호기 설정 화면에서는 바닥의 모양과 수면의 높이를 설정할 수 있다.</p>

<p>수족관은 너비가 N-1인 2차원 평면으로 나타낼 수 있다. 이때, N은 양의 정수이다. 수족관의 가장 왼쪽 x좌표는 0이고, 가장 오른쪽 x좌표는 N-1이다. 각 정수 x좌표 i는 바닥의 높이 H<sub>i</sub>를 갖는다. 이 높이는 설정에서 바꿀 수 있다. 바닥은 인접한 두 x좌표 i와 i+1를 이용해서 (i, H<sub>i</sub>)와 (i+1, H<sub>i+1</sub>)을 연결하는 선분으로 나타낼 수 있다.</p>

<p>수면의 높이가 h라면, 수족관의 바닥과 y=h 사이의 모든 공간이 물로 채워지게 된다. 만약, h보다 높은 바닥이 있다면, 그 곳은 섬이다.</p>

<p>상근이는 설정에서 수족관 바닥 좌표와 수면의 높이를 바꿀 때 마다 물로 채워지는 곳의 넓이를 구하려고 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 양의 정수 N과 상근이가 설정을 바꾼 횟수 M이 주어진다. (3 ≤ N ≤ 100,000, 1 ≤ M ≤ 100,000)</p>

<p>둘째 줄에는 N개의 정수 바닥의 초기 높이 Hi가 공백으로 구분되어 주어진다. (0 ≤ Hi ≤ 1000)</p>

<p>다음 M개 줄에는 상근이가 설정에서 무엇을 바꾸었는 지가 주어진다.</p>

<p>Q h는 수면의 높이를 h로 바꾸었다는 뜻이다. (0 ≤ h ≤ 1000)</p>

<p>U i h는 x좌표가 i인 곳의 바닥의 높이를 h로 바꾸었다는 뜻이다. (0 ≤ i ≤ N-1, 0 ≤ h ≤ 1000) 즉, Hi = h</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>Q로 시작하는 변경이 주어질 때 마다, 물로 채워지는 곳의 넓이를 소수점 셋째 자리까지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 2
20 20 20
Q 20
Q 30
','0.000
20.000
','MATH'),
                                                                                                                (630,'BAEKJOON','https://www.acmicpc.net/problem/4005',4005,'테이블 색칠하기','2초','256 MB',21,'<p>
	Sam과 여동생 Sara는 n × m 테이블의 모든 셀을 빨간색과 파란색으로 색칠하고자 한다. 이들은 개인적인 믿음 때문에, 테이블의 모든 2 × 2 격자에는 빨간색 셀의 개수가 홀수(즉, 1 혹은 3)가 되기를 원한다. 예를 들어, 3 × 5 테이블에 이 조건을 만족하는 색칠의 예가 다음 그림에 있다.</p>

<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/tbl.png" style="width: 110px; height: 69px; float: right;">불행히도, 지난 저녁에 누군가가 테이블의 어떤 셀들을 빨간색으로, 또 다른 어떤 셀들은 파란색으로 칠해놓았다. Sam과 Sara는 모든 2 × 2 격자에 빨간색 셀의 개수가 홀수가 되도록 테이블의 나머지를 색칠할 수 있는지를 알려고 한다. 만약 가능하다면, 모든 2 × 2 격자에 빨간색 셀의 개수가 홀수가 되도록 색칠할 수 있는 방법이 몇 개가 있는지를 알려고 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력의 첫 번째 줄에 세 정수 n,m,k가 주어진다. 이들은 각각 테이블의 행의 수, 열의 수, 초기에 색칠되어진 셀의 수이다. 다음의 k 개 줄에 색칠된 셀들의 정보가 주어진다. 이들 k개 줄의 각 i번째 줄에는 세 정수 x<sub>i</sub>, y<sub>i</sub>, c<sub>i</sub>를 포함한다. x<sub>i</sub>, y<sub>i</sub>는 각각 초기에 i-번째 색칠된 셀의 행 번호, 열 번호이고, c<sub>i</sub>는 이 셀의 색이다. 이 셀이 빨간색으로 칠해져 있으면 c<sub>i</sub>는 1이고 파란색으로 칠해져 있으면 c<sub>i</sub>는 0이다. k개의 셀들의 위치는 모두 다르다.</p>
<p>
	2 ≤ n,m ≤ 10<sup>5</sup><br>
	0 ≤ k ≤ 10<sup>5</sup><br>
	1 ≤ x<sub>i</sub> ≤ n<br>
	1 ≤ y<sub>i</sub> ≤ m</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	테이블을 색칠할 수 있는 방법의 수를 W라 할 때, W modulo 10<sup>9</sup>를 한 줄에 출력한다. (즉, W가 10<sup>9</sup>보다 같거나 클 경우에는 W를 10<sup>9</sup>으로 나눈 나머지를 출력한다.)</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 4 3
2 2 1
1 2 0
2 3 1
','8
','MATH'),
                                                                                                                (629,'BAEKJOON','https://www.acmicpc.net/problem/4010',4010,'신호','2초','128 MB',23,'<p>
	어느 통신회사가 베이징에서 GSM(이동전화) 통신망을 개발하고 있다. 이 통신망은 도시에 있는 n개의 집에서 사용이 가능하도록 하려고 한다. 그러나 제한된 예산 때문에 이 회사는 단 하나의 안테나만 세울 수 있다.</p>

<p>
	안테나는 n개의 집들 중 3개를 선택하여, 이 집들로 만들어지는 원의 중심에 세운다. 이 경우, 이 원의 내부와 경계에 있는 모든 집들은 이 안테나로부터 신호를 받을 수 있다. 이 회사는 무작위로 세 곳의 집을 선택하려고 계획하고 있고 이때 신호를 받을 수 있는 집들의 수를 알기 위하여, 가능한 모든 세 집들에 대한 안테나 위치에 대해서 신호를 받을 수 있는 집들의 수의 평균을 구하고자 한다.&nbsp;</p>

<p>
	예를 들어, 아래의 그림과 같이 A,B,C,D 네 개의 집들이 있다고 하자.</p>

<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/gsm.png" style="width: 367px; height: 305px;"></p>

<p>
	위 그림에서 ABC 혹은 BCD의 집들을 선택하면, 이 경우의 안테나는 모든 집들에게 신호를 보낼 수 있다. 그러나 ACD 혹은 ABD를 선택하는 경우에는 하나의 집에서는 신호를 받지 못한다. 그러므로 신호를 받을 수 있는 집들의 수의 평균은 (4+4+3+3)/4 = 3.5이다.</p>

<p>
	여러분이 할 일은 집들의 위치가 주어질 때, 신호를 받을 수 있는 집들의 수의 평균을 구하는 것이다. 집들의 위치는 2차원 좌표계에서 정수좌표로 주어진다. 어떠한 세 집도 하나의 직선상에 존재하지 않으며, 어떠한 네 집도 하나의 원의 경계(원주)위에 존재하지 않는다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	첫 번째 줄에 전체 집들의 수를 나타내는 하나의 양의 정수 n(3 ≤ n&nbsp;≤ 1,500)이 주어진다. 그 다음의 n개의 각 줄에 집들의 위치가 주어진다. 1 ≤ i ≤ n에 대하여, 집 i의 위치 좌표를 나타내는 두 개의 정수 x<sub>i</sub>와 y<sub>i</sub>는 i+1번째 줄에 공백을 사이에 두고 주어진다</p>
<p>
	집 i의 좌표 (x<sub>i</sub>, y<sub>i</sub>)는 모두 정수로서 -1,000,000 ≤ x<sub>i</sub>,y<sub>i</sub> ≤ 1,000,000이다. 어떠한 세 집도 하나의 직선상에 존재하지 않으며, 어떠한 네 집도 하나의 원의 경계(원주)위에 존재하지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	안테나의 신호가 도달 가능한 집들의 수의 평균을 하나의 실수로 출력한다. 출력결과의 오차 절댓값은 0.01보다 작거나 같아야한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
0 2
4 4
0 0
2 0
','3.500
','MATH'),
                                                                                                                (645,'BAEKJOON','https://www.acmicpc.net/problem/4030',4030,'포켓볼','1초','128 MB',9,'<p>선영이는 당구대를 상근이에게 빌렸다. 상근이는 선영이에게 공 16개가 들어갈 수 있는 4×4 크기의 트레이도 같이 주었다. 이 트레이는 그림 (a)와 같이 생겼다. 흰색 공은 큐 볼이고, 나머지 15개 공은 1부터 15까지 숫자가 적혀져 있다.</p>

<p>포켓볼을 시작하기 전에 숫자가 적혀져 있는 공은 삼각형 모양으로 빠짐없이 배치해야 한다. 이 배치는 그림 b에 나와있다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/pocketball.png" style="height: 165.833px; width: 335.833px;"></p>

<p>선영이는 포켓볼과 비슷하지만, 큐 볼과 숫자가 적혀져 있는 x개 공을 가지고 하는 새로운 게임을 하나 창안했다. 이때, 공 x개를 삼각형 모양으로, x+1개를 m×m크기의 트레이에 넣을 수 있어야 한다. a와 b가 주어졌을 때, a보다 크고 b보다 작은 x+1 중에서 선영이가 만든 게임을 즐길 수 있는 x+1의 개수를 구하는 프로그램을 작성하시오. 공을 삼각형 모양을 만들고 ,트레이에 넣을 때, 모든 공을 사용해야 하고, 빈 칸 (삼각형, 사각형을 이루지 못하는 칸) 이 있으면 안 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, a와 b가 주어진다. (0 < a < b ≤ 10<sup>9</sup>)</p>

<p>입력의 마지막 줄에는 0 0이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 다음을 출력한다.</p>

<pre>case n: k</pre>

<p>k는 a < x+1 < b인 x중에서 공 x개를 삼각형 모양으로 만들 수 있고, x+1개를 정사각형 트레이에 넣을 수 있는 x의 개수이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','15 17
14 16
1 20
0 0
','Case 1: 1
Case 2: 0
Case 3: 2
','MATH'),
                                                                                                                (612,'BAEKJOON','https://www.acmicpc.net/problem/4049',4049,'행렬의 텐서곱','3초','128 MB',16,'<p>
	두 행렬을 곱하는 또다른 방법이 있다. 이 방법은 텐서 곱이라고 한다.</p>

<p>
	A를 p × q 행렬, B를 n × m 행렬이라고 하자. 이때, A와 B는 1 × 1 행렬이 아니다.</p>

<p>
	A와 B의 텐서 곱 A ? B는 pn × qm 행렬이 되고, A의 모든 원소 a<sub>ij</sub>를 행렬 (a<sub>ij</sub>) · B로 바꾼다.</p>

<p>
	아래는 행렬의 텐서 곱의 예시이다.&nbsp;</p>

<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/tensor.png" style="width: 382.5px; height: 70.8333px;"></p>

<p>
	일반적인 행렬 곱과는 다르게, q와 n이 같아야 한다는 조건이 없다. 어떤 행렬이 주어졌을 때, 텐서 곱으로 이 행렬을 만들 수 있는 행렬의 가짓수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스의 첫째 줄에는 행렬의 크기 r과 c가 주어진다. 다음 r개의 줄에는 행렬의 각 원소가 주어진다. r과 c는 500보다 작거나 같다. 또, 행렬의 각 원소는 65536보다 작거나 같다. 입력의 마지막 줄에는 0이 두 개 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대해서, 텐서 곱으로&nbsp;입력으로 주어진 행렬을 만들 수 있는 두 행렬의 서로 다른 방법의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 6
1 1 1 2 2 2
1 1 1 2 2 2
1 1 2 2 2 4
3 3 3 4 4 4
3 3 3 4 4 4
3 3 6 4 4 8
2 2
3 6
4 9
2 4
15 18 30 36
20 24 40 48
0 0
','1
0
4
','MATH'),
                                                                                                                (601,'BAEKJOON','https://www.acmicpc.net/problem/4083',4083,'직사각형 만들기','1초','128 MB',16,'<p><span style="line-height:1.6em">강산이는 단위 정사각형 타일(가로 세로 길이가 1인 정사각형 타일)을 좋아한다. 하지만, 좋아하는 도형은 직사각형이다. 강산이는 모든 타일을 남김없이 배치해서 직사각형을 만들고 한다. 이때, 서로 다른 직사각형 종류를 몇 가지나 만들 수 있을까?</span></p>


<p>예를 들어, 단위 정사각형 타일을 6개 가지고 있을 때, 두 종류의 직사각형 1x6 직사각형과 2x3 직사각형(6x1은 1x6과 같고, 2x3은 3x2와 같은 것으로 친다)을 만들 수 잇다. 또한, 4개 가지고 있을 때는 1x4와 2x2, 총 두 종류를 만들 수 있다. (정사각형도 직사각형에 포함되기 때문)</p>


<p>N이 주어졌을 때, 서로 다른 직사각형 정확히 N종류를 만들기 위해 필요한 단위 정사각형 타일의 개수의 최솟값을 구하는 프로그램을 작성하시오. 만약 N=2인 경우 답은 4이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄에 하나씩 N(1 ≤ N ≤ 75)이 주어진다. 입력의 마지막 줄에는 0이 하나 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 정확히 N종류의 서로 다른 직사각형을 만들기 위해서 필요한 단위 정사각형 타일의 개수를 출력한다. 반드시 모든 정사각형 타일을 이용해야 하고, N개보다 더 만들 수 있으면 안 된다. 답은 항상 10<sup>18</sup>을 넘지 않는다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
16
19
0
','4
840
786432
','MATH'),
                                                                                                                (603,'BAEKJOON','https://www.acmicpc.net/problem/4090',4090,'뱀파이어 숫자','10초','128 MB',12,'<p>
	1827은 흥미로운 수이다. 그 이유는 1827=21*87이고, 좌변과 우변에 나온 숫자가 모두 같기 때문이다. 또, 136948도 비슷한 성질을 가지고 있다. 136948=146*938</p>

<p>
	위에서 설명한 숫자를 뱀파이어 숫자라고 한다. 즉, v가 뱀파이어 숫자가 되려면, 두 수 a와 b의 곱(v=a*b)으로 나타낼 수 있어야 하고, a와 b에 등장하는 숫자와 v와 같아야 한다. 또, a와 b의 자리수도 같아야 한다. v, a, b는 0으로 시작할 수 없다.</p>

<p>
	a와 b의 길이가 같아야 하기 때문에, v는 짝수 자리이어야 하지만, 이 문제에서는 a와 b의 길이가 다른 것도 뱀파이어 숫자라고 한다.</p>

<p>
	아래는 뱀파이어 숫자의 예이다.</p>

<p>
	126 = 6*21</p>
<p>
	10251 = 51*201</p>
<p>
	702189 = 9*78021</p>
<p>
	29632 = 32*926</p>

<p>
	숫자 X가 주어졌을 때, X보다 크거나 같은 뱀파이어 숫자 중 가장 작은 수를 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력은 여러개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 정수 X(10 ≤ X ≤ 1,000,000)를 포함하는 한 줄로 이루어져 있다. 입력은 0이 있는 줄에서 끝난다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각각의 테스트 케이스에 대해서, X보다 크거나 같은 뱀파이어 숫자 중 가장 작은 작은 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>
	뱀파이어 숫자는 실제로 있는 수이다. (<a href="http://en.wikipedia.org/wiki/Vampire_number">위키</a>)</p>

				</div>
				</div>','10
126
127
5000
0
','126
126
153
6880
','MATH'),
                                                                                                                (609,'BAEKJOON','https://www.acmicpc.net/problem/4092',4092,'비트 개수 세기','1초','128 MB',18,'<p>
	0보다 큰 정수 N<sub>0</sub>이 주어졌을 때, N<sub>1</sub>을 N<sub>0</sub>을 이진수로 나타냈을 때, 1의 개수라고 하자. N<sub>0</sub> = 27인 경우, N<sub>1</sub> = 4가 된다.</p>

<p>
	0보다 큰 모든 i에 대해서, N<sub>i</sub>를 N<sub>i-1</sub>을 이진수로 나타냈을 때, 1의 개수라고 하자. 이 수열은 항상 1으로 수렴한다.</p>

<p>
	N<sub>0</sub>이 주어졌을 때, K를 N<sub>i</sub>=1을 만족하는 i의 최솟값이라고 하자. 예를 들면, N<sub>0</sub>=31인 경우, N<sub>1</sub>=5, N<sub>2</sub>=2, N<sub>3</sub>=1이기 때문에 K=3이다.</p>

<p>
	연속된 범위와 어떤 수 X가 주어졌을 때, 범위 안의 숫자를 각각 N<sub>0</sub>으로 했을 때, K값이 X가 되는 경우는 몇 가지가 있는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력은 여러 개의 테스트 케이스로 이루어져 있고, 각 케이스는 한 줄로 이루어져 있다. 범위를 나타내는 LO와 HI 그리고 X가 주어진다. (1 ≤ LO ≤ HI ≤ 10<sup>18</sup>, 0 ≤ X ≤ 10) 입력의 마지막 줄에는 0이 3개 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대해서, LO부터 HI를 포함하는 범위 내의 정수를 N<sub>0</sub>으로 했을 때, K값이 X가 되는 것의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','31 31 3
31 31 1
27 31 1
27 31 2
1023 1025 1
1023 1025 2
0 0 0
','1
0
0
3
1
1
','MATH'),
                                                                                                                (617,'BAEKJOON','https://www.acmicpc.net/problem/4105',4105,'유클리드','1초','128 MB',10,'<p>
	유클리드는 자신의 공책에 다음과 같은 문제를 풀기 위한 복잡한 과정을 적어놓았다. 하지만, 컴퓨터를 이용하면 쉽게 구할 수 있다.</p>

<p>
	이차원 평면 위에 선분 AB와 점 C, 삼각형 DEF가 있다. 점 C는 선분 AB위에 있지 않다. 이때, 다음과 같은 점 G와 H를 찾아야 한다.</p>

<p>
	1. H는 점A에서 C로 뻗어가는 반직선 위에 있다.&nbsp;</p>

<p>
	2. ABGH는 평행사변형이다.</p>

<p>
	3. 평행사변형 ABGH의 넓이는 삼각형 DEF의 넓이와 같다.</p>

<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/euclid.png" style="width: 373.333px; height: 193.333px;"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">

<p>
	입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 12개의 실수로 이루어져 있다. 이 실수는 모두 소수점 3자리를 넘지 않는다.</p>

<p>
	AX AY BX BY CX CY DX DY EX EY FX FY</p>

<p>
	A의 좌표는 (AX,AY), B의 좌표는 (BX,BY)이고 나머지 점도 이와 같은 식이다. 점 A,B,C는 모두 겹치지 않으며, D,E,F도 마찬가지다. 모든 숫자는 -1000.0와 1000.0을 포함하는 구간에 있다. 입력의 마지막은 12개의 0.0으로 이루어져 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">

<p>
	각각의 테스트 케이스에 대해서 4개의 실수를 출력한다. 점 G와 H의 좌표를 다음과 같은 형식으로 출력한다.</p>

<p>
	GX GY HX HY</p>

<p>
	G의 좌표는 (GX,GY), H의 좌표는 (HX,HY)이고, 모두 소수점 넷째자리에서 반올림해서 셋째자리까지 출력해야 한다. 각각의 숫자 사이에는 빈 칸을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','0 0 5 0 0 5 3 2 7 2 0 4
1.3 2.6 12.1 4.5 8.1 13.7 2.2 0.1 9.8 6.6 1.9 6.7
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
','5.000 0.800 0.000 0.800
13.756 7.204 2.956 5.304
','MATH'),
                                                                                                                (618,'BAEKJOON','https://www.acmicpc.net/problem/4134',4134,'다음 소수','1초','128 MB',7,'<p>
	정수 n(0 ≤ n ≤ 4*10<sup>9</sup>)가 주어졌을 때, n보다 크거나 같은 소수 중 가장 작은 소수 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	첫째 줄에 테스트 케이스의 개수가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, 정수 n이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각각의 테스트 케이스에 대해서 n보다 크거나 같은 소수 중 가장 작은 소수를 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
6
20
100
','7
23
101
','MATH'),
                                                                                                                (608,'BAEKJOON','https://www.acmicpc.net/problem/4149',4149,'큰 수 소인수분해','1초','128 MB',20,'<p>큰 수를 소인수분해 해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 한 줄로 이루어져 있고, 소인수분해 해야 하는 수가 주어진다. 이 수는 1보다 크고, 2<sup>62</sup>보다 작다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어진 양의 정수를 소인수분해 한 뒤, 모든 인수를 한 줄에 하나씩 증가하는 순서로 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','18991325453139
','3
3
13
179
271
1381
2423
','MATH'),
                                                                                                                (651,'BAEKJOON','https://www.acmicpc.net/problem/4153',4153,'직각삼각형','1초','128 MB',3,'<p><img alt="" src=https://www.acmicpc.net/upload/images3/rope-triangle.gif" style="float:right; height:229px; width:252px"> 과거 이집트인들은 각 변들의 길이가 3, 4, 5인 삼각형이 직각 삼각형인것을 알아냈다. 주어진 세변의 길이로 삼각형이 직각인지 아닌지 구분하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력은 여러개의 테스트케이스로 주어지며 마지막줄에는 0 0 0이 입력된다. 각 테스트케이스는 모두 30,000보다 작은 양의 정수로 주어지며, 각 입력은 변의 길이를 의미한다.
</p>
					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 입력에 대해 직각 삼각형이 맞다면 "right", 아니라면 "wrong"을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 8 10
25 52 60
5 12 13
0 0 0
','right
wrong
right
','MATH'),
                                                                                                                (656,'BAEKJOON','https://www.acmicpc.net/problem/4161',4161,'나이트의 여행','1초','128 MB',15,'<p><img alt="" src=https://www.acmicpc.net/upload/images/chess(1).png" style="float:right; height:281px; width:283px">체스에서 나이트는 가로로 두 칸, 세로로 한 칸 이동하고, 가로로 한 칸, 세로로 두 칸 이동할 수 있다.</p>

<p>크기가 무한대인 체스판 (0, 0) 위에 나이트가 하나 놓여져 있다면, 나이트는 (1,2), (-1,2), (1,-2), (-1,-2), (2,1), (-2,1), (2,-1), (-2,-1)로 이동할 수 있다.</p>

<p>두 정수 x와 y가 주어졌을 때, 크기가 무한대인 체스판의 (0, 0)에서 (x, y)까지 최소 몇 번 만에 이동할 수 있는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 테스트 케이스 여러 개로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있으며, 두 정수 x와 y가 주어진다. 두 값의 절댓값은 십억을 넘지 않는다.</p>

<p>입력의 마지막 줄에는 END가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다, 나이트가 (0, 0)에서 (x, y)로 이동하려면 최소 몇 번이 필요한지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 2
2 4
END
','1
2
','MATH'),
                                                                                                                (661,'BAEKJOON','https://www.acmicpc.net/problem/4215',4215,'비밀 프로젝트','1초','128 MB',21,'<p>사성 전자는 매우 빠른 특수 목적용 맞춤형 프로세서를 만든다. 프로세서는 a-C-M(예를 들면, 1-C-2, 5-C-3)와 같은 이름이 붙어있고, 아래 2가지 연산만 사용할 수 있다.</p>

<ul>
	<li>A: a를 더한다.</li>
	<li>M: m을 곱한다.</li>
</ul>

<p>프로세서는 정수와 A와 M으로만 되어있는 프로그램을 입력으로 받은 뒤, 프로그램에 따라 입력받은 정수를 변경하고, 결과를 출력한다. 예를 들어, 1-C-2 프로세서에 2를 입력으로 넣고, AAAM 프로그램을 실행시킨다면, 출력은 10이 된다. (2->3->4->5->10) 같은 입력을 5-C-3프로세서에 넣는다면 51을 출력한다. (2->7->12->17->51)</p>

<p>재헌이는 회사에서 비밀 프로젝트를 담당하는 a-C-m 프로그래머이다. 즉, 비밀 프로젝트이기 때문에, 재헌이도 자신이 정확히 무슨 프로그램을 만들어야 하는지를 모른다. 하지만, 회사의 사장은 재헌이에게 p, q, r, s가 주어졌을 때, 다음과 같은 조건을 만족시키는 프로그램을 만드는 것이라고 했다.</p>

<ol>
	<li>입력은 p와 q 사이의 숫자이다. (p, q 포함)</li>
	<li>출력은 항상 r과 s사이이어야 한다. (r, s 포함)</li>
</ol>

<p>a-C-M 프로세서와 p, q, r, s가 주어졌을 때, p≤x≤q를 만족하는 모든 x에 대해서, r≤y≤s를 만족하는 y를 출력하는 가장 길이가 짧은 프로그램을 작성하시오. 이때, 조건을 지키는 프로그램이 여러개일 경우, 사전순으로 앞서는 것을 출력한다. (프로그램을 A와 M으로 이루어진 문자열로 생각하고 사전순 비교하면 된다)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 6개의 정수 a, m, p, q, r, s로 이루어져 있다. (1 ≤ a,m,p,q,r,s ≤ 10<sup>9</sup>, p ≤ q, r ≤ s)</p>

<p>마지막 테스트 케이스의 다음 줄에는 0 여섯개가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 케이스 번호를 출력하고, 문제 설명에 해당하는 프로그램을 출력한다. 만약, 연산을 수행하지 않아도 될 때는 "empty"를 출력하고, 그러한 프로그램을 만드는 것이 불가능할 때에는 "impossible"을 출력한다.</p>

<p>프로그램을 공백으로 구분된 문자열을 출력하면 되고, "nA" 형식과 "nM"형식을 서로 번갈아가면서 출력하면 된다. (n > 0) n은 연속된 A 연산의 개수, 또는 M 연산의 개수이다.</p>

<p>예제 출력의 형식을 참고한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 2 2 3 10 20
1 3 2 3 22 33
3 2 2 3 4 5
5 3 2 3 2 3
0 0 0 0 0 0
','Case 1: 1A 2M
Case 2: 1M 2A 1M
Case 3: impossible
Case 4: empty
','MATH'),
                                                                                                                (666,'BAEKJOON','https://www.acmicpc.net/problem/4233',4233,'가짜소수','1초','128 MB',11,'<p>
	페르마의 소정리 (Fermats little theorem)의 내용은 다음과 같다.</p>

<p>
	p가 소수일 때, 임의의 정수 a>1에 대해서, a<sup>p</sup> == a (mod p)가 성립한다.</p>

<p>
	즉, a를 p제곱한 뒤, p로 나눴을 때, 나머지는 a가 되는 것이다.</p>

<p>
	하지만, p가 소수가 아닌 경우에 어떤 정수 a에 대해서 위의 식을 만족하는 경우가 있다. 이때, p를 밑이 a인 가짜소수라고 한다. (모든 a에 대해서 식을 만족하는 수를 카마이클 수라고 한다)</p>

<p>
	p와 a가 주어졌을 때, p가 밑이 a인 가짜소수인지 아닌지 알아내는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, p와 a를 포함하고 있다. 입력의 마지막 줄에는 "0 0"이 주어진다. (2 < p ≤ 1,000,000,000, 1 < a < p)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대해서, p가 밑이 a인 가짜소수라면 yes를, 아니라면 no를 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 2
10 3
341 2
341 3
1105 2
1105 3
0 0
','no
no
yes
no
yes
yes
','MATH'),
                                                                                                                (669,'BAEKJOON','https://www.acmicpc.net/problem/4241',4241,'소수 없는 수열','1초','128 MB',14,'<p>
	n부터 m까지 숫자가 연속되어 있는 수열 n,n+1,n+2,...,m이 주어졌을 때, 이 수열의 수의 위치를 적절히 바꿔서 인접한 수의 합이 모두 소수가 아닌 수열을 소수 없는 수열이라고 한다. 예를 들어, n=1, m=10일 때, 1,3,5,4,2,6,9,7,8,10은 소수 없는 수열 중 하나이고, 그러한 수열 중 사전순으로 가장 앞서는 수열이다.</p>

<p>
	여기서 d차 소수 없는 수열은, 연속된 2,3,...,d개의 합이 모두 소수가 아닌 수열이다. 위에서 예로 든 수열은 2차 소수 없는 수열이다. 하지만, 5, 4, 2의 합이 11이 되고, 이 수는 소수이므로 3차 소수 없는 수열은 아니다. 3차 소수 없는 수열 중 사전순으로 가장 앞서는 것은 1,3,5,4,6,2,10,8,7,9이다.</p>

<p>
	n, m, d가 주어졌을 때, 사전순으로 가장 앞서는 d차 소수 없는 수열을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, n, m, d가 공백으로 구분되어져 있다. n, m, d는 1 ≤ n < m ≤ 1000, 2 ≤ d ≤ 10을 만족한다. 입력의 마지막 줄에는 0 0 0이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대해서, d차 소수 없는 수열을 콤마(,)로 구분해서 출력한다. 만약 그러한 수열이 여러개일 경우에는 사전순으로 가장 앞서는 것을 출력한다. (즉, 첫째 수가 가장 작은 수열, 같을 때는 두 번째 수가 작은 수열, ....) 만약, d차 소수 없는 수열이 없는 경우에는 "No anti-prime sequence exists."을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 10 2
1 10 3
1 10 5
40 60 7
0 0 0
','1,3,5,4,2,6,9,7,8,10
1,3,5,4,6,2,10,8,7,9
No anti-prime sequence exists.
40,41,43,42,44,46,45,47,48,50,55,53,52,60,56,49,51,59,58,57,54
','MATH'),
                                                                                                                (674,'BAEKJOON','https://www.acmicpc.net/problem/4257',4257,'프리오더 포스트오더','1초','128 MB',13,'<p>
	이진 트리를 인오더(in-order)와 포스트오더(post-order)로 순회한 결과가 주어졌을 때, 프리오더(pre-order)로 순회한 결과를 찾을 수 있다. 또, 인오더와 포리오더로 순회한 결과가 주어졌을 때, 포스트오더로 순회한 결과도 쉽게 찾을 수 있다. 하지만, 프리오더와 포스트오더로 순회한 결과가 주어졌을 때는, 인오더로 순회한 결과를 구할 수 없다.</p>

<p>
	아래 이진 트리 4개를 보자.</p>

<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/prepost.png" style="width: 230px; height: 116px;"></p>

<p>
	위의 트리는 같은 프리오더와 포스트오더를 갖는 트리이다. 이러한 현상은 이진 트리에서만 나타나는 것이 아니고, 모든 m진 트리(자식이 최대 m개인 트리)에서 나타난다.</p>

<p>
	m진 트리를 프리오더와 포스트오더로 순회한 결과가 주어졌을 때, 이러한 순회 결과를 갖는 트리의 개수를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 다음과 같은 형식이다.</p>
<p>
	m s1 s2</p>
<p>
	이 뜻은 m진트리를 프리오더 순회한 결과가 s1, 포스트오더로 순회한 결과가 s2라는 뜻이다. (1 ≤ m ≤ 20, 1 ≤ s1,s2의 길이 ≤ 26, s1의 길이 = s2의 길이) s1의 길이가 k일 때, 알파벳 첫 k개 문자가 사용된다. 마지막 줄은 0이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대해서, 입력으로 주어진 프리오더와 포스트오더 순회 결과를 갖는 m진트리의 개수를 출력한다. 이 결과는 항상 부호있는 32비트 정수 범위이다. 입력으로 주어진 결과를 이용해서 트리를 적어도 하나는 만들 수 있다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 abc cba
2 abc bca
10 abc bca
13 abejkcfghid jkebfghicda
0
','4
1
45
207352860
','MATH'),
                                                                                                                (675,'BAEKJOON','https://www.acmicpc.net/problem/4276',4276,'0이 몇 개?','1초','128 MB',13,'<p>
	n부터 m까지 숫자를 하나씩 종이에 작성할 때, 숫자 0을 몇 번 쓰는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력은 여러개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 두 정수 n과 m이 공백으로 되어있으며, 한 줄로 이루어져 있다. 입력의 마지막 줄은 n값이 음수이고, 이 경우는 계산할 필요 없이 프로그램을 종료하면 된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대해서, 0을 몇 번 쓰는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10 11
100 200
0 500
1234567890 2345678901
0 4294967295
-1 -1
','1
22
92
987654304
3825876150
','MATH'),
                                                                                                                (685,'BAEKJOON','https://www.acmicpc.net/problem/4299',4299,'AFC 윔블던','1초','128 MB',2,'<p>원섭이는 잉글랜드 4부리그 풋볼 리그 2에서 활약하는 AFC 윔블던을 좋아한다. 이 팀은 2002년 윔블던 FC가 밀턴 킨스로 연고 이전을 감행하자 윔블던의 서포터들이 스스로 나서 창단한 팀이다. 윔블던 FC는 1988년에 당시 최고의 팀인 리버풀을 꺾고 FA컵을 우승하면서 엄청난 활약을 했었다. 하지만 1989년 4월 15일 축구역사상 최대 비극적인 사건 중 하나인 힐스보로 참사가 발생하였고, 1990년 1월 테일러 리포트가 발표되었다. 1991년, 상위권 리그 팀은 반드시 홈 경기장을 좌석제로 바꿔야 한다는 테일러 리포트의 내용에 따라 윔블던은 홈 구장이었던 플로 레인을 떠나게 되었다. 이때부터 10년동안 임시로 근처 클럽이었던 크리스털 팰리스와 경기장을 공유하기 시작했고 점점 재정적인 어려움을 겪었다. 결국 2002년 윔블던에서 약 90km정도 떨어진 밀턴 킨스로 연고지를 이전하는 초유의 사태가 벌어졌으며, 2004년 윔블던 FC는 파산하게 된다. 윙클만은 클럽을 산 뒤, 7월 클럽의 이름을 밀턴 킨스 돈스 FC(이하 MK 돈스)로 바꾼다.</p>

<p>한국에서 이 소식을 들은 원섭이는 엄청난 분노했고, 어서 빨리 MK 돈스를 경기장에서 이기는 모습을 보고싶어했다.</p>

<p>하지만, MK 돈스는 2004년 3부리그에 참가했지만, 그 때 AFC 윔블던은 8부리그에 참가하고 있었다. 두 팀이 공식 경기에서 만나려면 FA Cup밖에 기회가 없었다. 하지만, FA Cup은 하부 리그 팀은 낮은 라운드부터 대회에 참가하고, 대진은 추첨이므로 두 팀이 만나는 것은 불가능하다 생각했다.</p>

<p>AFC 윔블던은 2002년 클럽의 역사를 9부리그에서 시작했지만, 2004년 8부리그, 2005년 7부리그, 2008년 6부리그, 2009년 5부리그로 점점 승격하였다. 그리고 2011년, 창단 9년만에 AFC 윔블던은 4부리그(리그2)에 승격하였다.</p>

<p>MK 돈스는 2004년부터 2시즌(06-07, 07-08)을 제외하고는 항상 3부리그에서 활동했다. 이제 MK 돈스가 강등당하거나 AFC 윔블던이 승격을 하면 리그에서 두 팀간의 경기를 볼 수 있다.</p>

<p>2012년 12월 2일. 불가능할 것 같았던 사건이 일어났다. 2012-13 FA Cup 2라운드 에서 두 팀이 맞붙게 된 것이었다. 어서 빨리 이 경기를 보고 싶었던 원섭이는 FA Cup을 중계해주는 SBS ESPN의 편성표를 검색해보았다. 하지만, 두 팀간의 경기는 한국인에게 별로 관심을 끌지 못하는 경기였기 때문에, 중계가 예정되어 있지 않았다.</p>

<p>원섭이는 잉글랜드에 거주하는 지수에게 경기 결과를 물어봤다. 지수는 축구에는 큰 관심이 없지만 원섭이를 괴롭히는 것을 좋아하는 친구다. 지수는 두 팀의 최종 점수를 알려주는 대신, 두 팀이 득점한 점수의 합과 차를 알려주었다.</p>

<p>MK 돈스와 AFC 윔블던의 점수의 합과 차가 주어졌을 때, 최종 점수를 구하는 프로그램을 작성하시오.</p>

<p>참고로 우리나라도 비슷한 경우가 있다. 2007년 부천 SK의 제주 연고지 이전을 반대하던 서포터들은 부천FC 1995를 창단했다. 이 팀은 2013년부터 K리그에 참가한다. 또, AFC 윔블던과 자매 결연 관계를 맺고 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 팀&nbsp;점수의 합과 차가 빈 칸으로 구분되어 주어진다. 축구 점수는 항상 음이 아닌 정수이고, 합과 차는 1000보다 작거나 같은 음이 아닌 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 두 팀의 경기 결과를 출력한다. 득점을 많이 한 쪽을 먼저 출력한다. 만약, 그러한 합과 차를 갖는 경기 결과가 없다면, -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>MK 돈스 vs AFC 윔블던 FA Cup 2라운드 하이라이트 영상</p>

<p><iframe allowfullscreen="" frameborder="0" height="480" src="https://www.youtube.com/embed/QW6ZM3lMBF8" width="853"></iframe></p>

				</div>
				</div>','3 1
','2 1
','MATH'),
                                                                                                                (686,'BAEKJOON','https://www.acmicpc.net/problem/4312',4312,'3의 제곱','1초','128 MB',8,'<p>
	다음과 같이 모든 음이 아닌 3의 제곱수가 들어있는 집합이 있다.</p>

<p>
	S = {1, 3, 9, 27, 81, ...}</p>

<p>
	S의 모든 부분집합을 구한 뒤, 이 집합을 가지고 있는 원소값의 합으로 오름차순 정렬했을 때, n번째 집합을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력을 여러 개의 줄로 이루어져 있고, 각 줄에는 n이 주어진다. n은 19자리를 넘지 않는 양의 정수이다. 입력의 마지막 줄에는 0이 있다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 입력에 대해서, n번째 집합을 예제 출력 형식과 같게 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
7
14
783
1125900981634049
0
','{ }
{ 3, 9 }
{ 1, 9, 27 }
{ 3, 9, 27, 6561, 19683 }
{ 59049, 3486784401, 205891132094649, 717897987691852588770249 }
','MATH'),
                                                                                                                (687,'BAEKJOON','https://www.acmicpc.net/problem/4320',4320,'완전 P제곱수','1초','128 MB',10,'<p>
	x가 정수 b의 제곱(x = b<sup>2</sup>)으로 나타낼 수 있으면 x를 완전 제곱수라고 한다. 또, x를 정수 b의 세제곱(x = b<sup>3</sup>)으로 나타낼 수 있으면 x를 완전 세제곱수라고 한다. 즉, x를 b의 p제곱(x = b<sup>p</sup>)으로 나타낼 수 있으면, x를 완전 p제곱수라고 한다.</p>

<p>
	x가 주어졌을 때, 가장 큰 p를 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	테스트 케이스는 정수 x를 포함하는 한 줄로 이루어져 있다. x는 절댓값이 2보다 크거나 같고, C,C++,Java에서 32비트 int 범위 안에 있다. 마지막 테스트 케이스 다음 줄에는 0이 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각각의 테스트 케이스에 대해서, x가 완전 p제곱수 일 때, 가장 큰 정수 p를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','17
1073741824
25
0
','1
30
2
','MATH'),
                                                                                                                (691,'BAEKJOON','https://www.acmicpc.net/problem/4328',4328,'기초 나머지 계산','1초','128 MB',5,'<p>음이 아닌 b진법 정수 p와 m이 주어졌을 때, p를 m으로 나눈 나머지를 b진법으로 구하는 프로그램을 작성하시오.</p>

<p>p를 m으로 나눈 나머지란 임의의 정수 a에 대해서 p = a*m + k를 만족하는 가장 작은 k를 말한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 3개의 정수가 한 줄로 이루어져 있다. 첫 번째 숫자는 b이고, 2보다 크거나 같고, 10보다 작거나 같은 값을 가진다. 두 번째 숫자는 p이고, 세 번째 숫자는 m이다. p와 m은 0과 b-1사이의 수로만 이루어져 있고, p의 최대 길이는 1000, m의 최대 길이는 9이다.</p>

<p>마지막 줄에는 0이 하나 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, p를 m으로 나눈 나머지를 b진법으로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 1100 101
10 123456789123456789123456789 1000
0
','10
789
','MATH'),

                                                                                                                (694,'BAEKJOON','https://www.acmicpc.net/problem/4342',4342,'유클리드 게임','1초','128 MB',14,'<p>유클리드 게임은 두 명이서 하는 게임이고, 자연수 2개로 시작한다. 동혁이와 동규는 유클리드 게임을 하려고 한다. 동혁이가 먼저 시작한다. 동혁이는 큰 수를 작은 수의 배수만큼 뺀다. 이때, 큰 수는 음이 아닌 정수가 되어야 하며&nbsp;전보다 작아져야 한다.&nbsp;그런 다음 동규는 동혁이가 한 것과 똑같이 큰 수를 작은 수의 배수만큼 뺀다. 이런식으로 두 플레이어는 서로 번갈아가면서 게임을 한다. 이때, 큰 수를 0으로 만든 사람이 게임을 승리하게 된다.</p>

<p>예를 들어, 다음과 같이 (25, 7)로 시작한 게임을 생각해보자.</p>

<ul>
	<li>25 7</li>
	<li>11 7</li>
	<li>4 7</li>
	<li>4 3</li>
	<li>1 3</li>
	<li>1 0</li>
</ul>

<p>위와 같이 게임을 하게 되면, 동혁이가 이기게 된다. (큰 수와 작은 수는 각 턴에서 큰 수와 작은 수이다.)</p>

<p>시작하는 두 자연수가 주어졌을 때, 두 플레이어가 최적의 방법으로 게임을 할 때, 누가 이기는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 줄로 이루어져 있다. 각 줄은 게임을 시작하는 두 숫자이다. 항상 동혁이가 먼저 게임을 시작한다. 두 자연수는 2<sup>31</sup>-1보다 작거나 같다. 입력의 마지막 줄에는 0 두 개가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 입력에 대해서 동혁이가 이기면 A wins를, 동규가 이기면 B wins를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','34 12
15 24
0 0
','A wins
B wins
','MATH'),
                                                                                                                (695,'BAEKJOON','https://www.acmicpc.net/problem/4344',4344,'평균은 넘겠지','1초','256 MB',5,'<p>대학생 새내기들의 90%는 자신이 반에서 평균은 넘는다고 생각한다. 당신은 그들에게 슬픈 진실을 알려줘야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 테스트 케이스의 개수 C가 주어진다.</p>

<p>둘째 줄부터 각 테스트 케이스마다 학생의 수 N(1 ≤ N ≤ 1000, N은 정수)이 첫 수로 주어지고, 이어서 N명의 점수가 주어진다. 점수는 0보다 크거나 같고, 100보다 작거나 같은 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 케이스마다 한 줄씩 평균을 넘는 학생들의 비율을 반올림하여 소수점 셋째 자리까지 출력한다. 정답과 출력값의 절대/상대 오차는 10<sup>-3</sup>이하이면 정답이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
5 50 50 70 80 100
7 100 95 90 80 70 60 50
3 70 90 80
3 70 90 81
9 100 99 98 97 96 95 94 93 91
','40.000%
57.143%
33.333%
66.667%
55.556%
','MATH'),
                                                                                                                (699,'BAEKJOON','https://www.acmicpc.net/problem/4355',4355,'서로소','1초','128 MB',15,'<p>양의 정수 n이 주어졌을 때, n보다 작은 양의 정수 중에서 n과 서로소인 수 개수를 구하는 프로그램을 작성하시오.</p>

<p>두 정수 a와 b가 서로소가 되려면 x > 1, y > 0, z > 0이면서, a = xy, b= xz를 만족하는 정수가 없어야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있으며, 각 테스트 케이스는 n ≤ 1,000,000,000으로 이루어져 있다.</p>

<p>입력의 마지막 줄에는 0이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어진 n마다 n보다 작으면서 서로소인 양의 정수의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7
12
0
','6
4
','MATH'),
                                                                                                                (662,'BAEKJOON','https://www.acmicpc.net/problem/4357',4357,'이산 로그','1초','128 MB',20,'<p>소수 P(2 ≤ P < 2<sup>31</sup>), 정수 B(2 ≤ B < P), 정수 N(1&nbsp;≤ N < P)가 주어졌을 때, 밑을 B, 나머지를 P로 하는 N의 이산 로그를 구하는 프로그램을 작성하시오.</p>

<p>즉, 다음과 같은 조건을 만족하는 정수 L을 찾으면 된다.</p>

<p>B<sup>L</sup> == N (mod P)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있고, 각 테스트 케이스는 한 줄로 되어져 있고, P, B, N이 공백으로 구분되어져 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스에 대해서, N의 이산 로그를 출력한다. 만약, 해당하는 L이 여러개라면 가장 작은 값을 출력한다. 또, 그러한 L이 없을 때는 "no solution"을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>이 문제를 풀기 위해선 ACM-ICPC대회에서 잘 사용하지 않는 Fermats little theorem을 이용해야 한다. (<a href="http://en.wikipedia.org/wiki/Fermats_little_theorem">링크</a>)&nbsp;</p>

				</div>
				</div>','5 2 1
5 2 2
5 2 3
5 2 4
5 3 1
5 3 2
5 3 3
5 3 4
5 4 1
5 4 2
5 4 3
5 4 4
12345701 2 1111111
1111111121 65537 1111111111
','0
1
3
2
0
3
1
2
0
no solution
no solution
1
9584351
462803587
','MATH'),
                                                                                                                (709,'BAEKJOON','https://www.acmicpc.net/problem/4379',4379,'나누기','1초','128 MB',12,'<p>2147483647보다 작거나 같은 양의 정수 t, a, b가 주어졌을 때, (t<sup>a</sup> - 1)/(t<sup>b</sup> - 1)이 100자리보다 작은 정수인지 아닌지&nbsp;판별하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, t, a, b가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스 마다, 입력으로 주어진 t, a, b를 이용하여 문제의 식을 계산한 결과가 100자리보다 작은 정수라면 그 값을 출력하고, 아닌 경우에는 "is not an integer with less than 100 digits."을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 9 3
2 3 2
21 42 7
123 911 1
','(2^9-1)/(2^3-1) 73
(2^3-1)/(2^2-1) is not an integer with less than 100 digits.
(21^42-1)/(21^7-1) 18952884496956715554550978627384117011154680106
(123^911-1)/(123^1-1) is not an integer with less than 100 digits.
','MATH'),
                                                                                                                (708,'BAEKJOON','https://www.acmicpc.net/problem/4388',4388,'받아올림','1초','128 MB',3,'<p>어린이에게 여러자리 숫자의 덧셈을 가르칠 때는 오른쪽 자리부터 왼쪽으로 하나씩 계산하는 방법을 가르쳐준다. 이때, 받아올림이 발생하게 되며 아이들은 여기서 혼란에 빠진다.</p>

<p>받아올림이란 영어로는 carry라고 하며, 한 자리를 더했을 때, 두 자리라면, 1을 왼쪽 자리로 올려주는 것을 뜻한다.</p>

<p>두 수가 주어졌을 때, 이러한 받아올림이 몇 번 발생하는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 10자리 이내의 양의 정수 또는 0이 주어진다. 입력의 마지막 줄에는 0 0이 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 입력으로 주어진 두 수를 더할때 나오는 받아올림의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','123 456
555 555
123 594
0 0
','0
3
1
','MATH'),
                                                                                                                (722,'BAEKJOON','https://www.acmicpc.net/problem/4435',4435,'중간계 전쟁','1초','128 MB',3,'<p>중간계에 전쟁이 일어나려고 한다. 간달프는 사우론에 대항하기 위한 군대를 소집했고, 여러 종족이 이 군대에 가담했다. 전쟁을 시작하기 전에 간달프는 각 종족에 점수를 매겼다.</p>

<p>간달프의 군대의 각 종족의 점수는 다음과 같다.</p>

<ul>
	<li>호빗 - 1</li>
	<li>인간 - 2</li>
	<li>엘프 - 3</li>
	<li>드워프 - 3</li>
	<li>독수리 - 4</li>
	<li>마법사 - 10</li>
</ul>

<p>사우론의 군대의 점수는 다음과 같다.</p>

<ul>
	<li>오크 - 1</li>
	<li>인간 - 2</li>
	<li>워그(늑대) - 2</li>
	<li>고블린 - 2</li>
	<li>우럭하이 - 3</li>
	<li>트롤 - 5</li>
	<li>마법사 - 10</li>
</ul>

<p>중간계는 매우 신비한 곳이어서 각 전투의 승리는 날씨, 장소, 용맹에 영향을 받지 않는다. 전투에 참여한 각 종족의 점수를 합한 뒤, 큰 쪽이 이긴다.</p>

<p>전투에 참여한 종족의 수가 주어졌을 때, 어느 쪽이 이기는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 전투의 개수 T가 주어진다. 각 전투는 두 줄로 이루어져 있다. 첫째 줄에 간달프 군대에 참여한 종족의 수가 주어진다. 이 값은 공백으로 구분되어 있으며, 호빗, 인간, 엘프, 드워프, 독수리, 마법사 순서이다. 둘째 줄에는 사우론 군대에 참여한 종족의 수가 주어진다. 이 값 역시 공백으로 구분되어 있으며, 오크, 인간, 워그, 고블린, 우럭하이, 트롤, 마법사 순서이다. 모든 값은 음이 아닌 정수이고, 각 군대의 점수의 합은 32비트 정수 제한을 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 전투에 대해서, "Battle"과 전투 번호를 출력한다. 그 다음에 간달프의 군대가 이긴다면 "Good triumphs over Evil"를, 사우론의 군대가 이긴다면 "Evil eradicates all trace of Good", 점수의 합이 같아 이기는 쪽이 없다면 "No victor on this battle field"를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 1 1 1 1 1
1 1 1 1 1 1 1
0 0 0 0 0 10
0 1 1 1 1 0 0
1 0 0 0 0 0
1 0 0 0 0 0 0
','Battle 1: Evil eradicates all trace of Good
Battle 2: Good triumphs over Evil
Battle 3: No victor on this battle field
','MATH'),
                                                                                                                (719,'BAEKJOON','https://www.acmicpc.net/problem/4436',4436,'엘프의 검','1초','128 MB',4,'<p>중간계에 살고있는 엘프 종족은 특정 숫자를&nbsp;다른 숫자보다 중요하다고 믿는다. 따라서, 그들은 금속 n만큼을 이용해서 칼을 만들 때, 두께를 다음과 같은 규칙을 지키는 k로 한다면, 엄청나게 강력한 칼을 만들 수 있다고 믿는다.</p>

<p>음이 아닌 정수 n이 주어졌을 때, 다음과 같은 수열을 만들 수 있다.</p>

<p>n, 2n, 3n, 4n, ..., kn</p>

<p>이때의 수열에서, 0~9까지의 숫자가 한 번 이상 나타나는 가장 작은 k를 찾아야 한다.</p>

<p>리븐델의 영주 엘론드는 이 일을 대신해주는 프로그램을 만들려고 한다. 금속의 양 n이 주어졌을 때, 위의 규칙을 지키는 이상적인 두께 k를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>한 줄에 하나씩 n이 주어진다. n은 1보다 크거나 같고, 200,000,000보다 작거나 같은 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 입력에 대해, 0~9까지 숫자가 모두 등장하는 가장 작은 값 k를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
10
123456789
3141592
','10
9
3
5
','MATH'),
                                                                                                                (721,'BAEKJOON','https://www.acmicpc.net/problem/4461',4461,'뱀파이어 김상근 백작','2초','128 MB',12,'<p>김상근 백작은 한국의 대표적인 뱀파이어이다. 김상근 백작의 공격을 방어하려면 아래와 같은 식을 암기해야 한다.</p>

<pre>(a/b)^3 + (c/b)^3 = n</pre>

<p>여기서 a, b, c, n은 자연수이다. 예를 들면, 아래와 같은 식이다.</p>

<pre>(415280564497/348671682660)^3 + (676702467503/348671682660)^3 = 9&nbsp;</pre>

<p>그런데, 위와 같은 식은 너무 길다. 이렇게 긴 식을 외우면, 외우는 도중에 김상근 백작이 공격을 할 것이고, 이 문제를 읽는 당신은 뱀파이어로 변한다. 따라서, 아래와 같은 짧은 식을 외우는 것이 좋다.</p>

<pre>(2/1)^3 + (1/1)^3 = 9</pre>

<p>n이 주어졌을 때, 암기하기 쉬운 식을&nbsp;찾는 프로그램을 작성하시오. 암기하기 쉬운 식이란, a+b+c+b가 가장 작은 식이고, a/b가 c/b보다 크거나 같아야 한다. 이 조건을 만족하는 식은 항상 유일하다. 만약, 4000보다 작은 a+b+c+b가 없다면 "No value."를 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있으며, 각 테스트 케이스는 10,000보다 작은 자연수 n이 하나 주어진다. 입력의 마지막 줄에는 0이 하나 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>암기하기 쉬운 식을 찾아 출력한다. +와 =의 앞과 뒤에는 공백을 하나 출력해야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
9
7
6000
0
','No value.
(2/1)^3 + (1/1)^3 = 9
(5/3)^3 + (4/3)^3 = 7
(370/21)^3 + (170/21)^3 = 6000
','MATH'),
                                                                                                                (727,'BAEKJOON','https://www.acmicpc.net/problem/4463',4463,'피보나치 수 분석','1초','128 MB',18,'<p>어떤 피보나치 수는 좀비의 공격에 면역성이 있다. 그 이유는 소수는 분해할 수 없기 때문이다.</p>

<p>피보나치 수는 아래와 같이 재귀적으로 정의할 수 있다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/fibonacci.png" style="height:94px; width:280px"></p>

<p>64비트 부호있는 정수로 표현할 수 있는 정수 범위가 주어진다. 이때, 그 구간에 포함되는 피보나치 수를 찾은 다음, 그 수의 밑이 2인 로그를 취한 값과 소인수 분해를 하는 프로그램을 작성하시오. 소인수는 오름 차순이며, 여러 번 등장하는 수는 그만큼 출력해야 한다. 만약, 그 구간에 해당하는 피보나치 수가 없는 경우에는 없다고 출력하면 된다.</p>

<p>0은 첫 번째 피보나치 수이지만, 0의 로그는 정의되지 않는다. 또, 0과 1은 소인수가 없다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 구간을 나타내는&nbsp;음이 아닌 두 정수 lo와 hi가 주어진다. 두 수는 16진수 표현 (0x1a는 26)으로 주어진다. 각 정수는 모두 64비트 부호있는 정수 범위이며, 파일의 끝(EOF)이나 lo ≥ hi인 경우에 종료한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어지는 각 구간에 대해서, 구간을 출력한 다음 예제 출력과 같이 피보나치 수에 대한 정보를 출력한다. 각 구간은 빈 줄로 나누어져 있어야 한다.</p>

<p>밑이 2인 로그(lg)는 소수점 여섯째 자리 까지 출력하며, 소인수는 공백으로 구분한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','0x0 0x8
0x9 0xc
0x9 0x40
0x0 0x0
','Range 0 to 8:
Fib(0) = 0, lg does not exist
No prime factors
Fib(1) = 1, lg is 0.000000
No prime factors
Fib(2) = 1, lg is 0.000000
No prime factors
Fib(3) = 2, lg is 1.000000
Prime factors: 2
Fib(4) = 3, lg is 1.584963
Prime factors: 3
Fib(5) = 5, lg is 2.321928
Prime factors: 5
Fib(6) = 8, lg is 3.000000
Prime factors: 2 2 2

Range 9 to 12:
No Fibonacci numbers in the range

Range 9 to 64:
Fib(7) = 13, lg is 3.700440
Prime factors: 13
Fib(8) = 21, lg is 4.392317
Prime factors: 3 7
Fib(9) = 34, lg is 5.087463
Prime factors: 2 17
Fib(10) = 55, lg is 5.781360
Prime factors: 5 11','MATH'),
                                                                                                                (728,'BAEKJOON','https://www.acmicpc.net/problem/4504',4504,'배수 찾기','1초','128 MB',3,'<p>정수 n(0 < n < 1000)과 수의 목록이 주어졌을 때, 목록에 들어있는 수가 n의 배수인지 아닌지를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n이 주어진다. 다음 줄부터 한 줄에 한 개씩 목록에 들어있는 수가 주어진다. 이 수는 0보다 크고, 10,000보다 작다. 목록은 0으로 끝난다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>목록에 있는 수가 n의 배수인지 아닌지를 구한 뒤 예제 출력처럼 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1
7
99
321
777
0
','1 is NOT a multiple of 3.
7 is NOT a multiple of 3.
99 is a multiple of 3.
321 is a multiple of 3.
777 is a multiple of 3.
','MATH'),
                                                                                                                (739,'BAEKJOON','https://www.acmicpc.net/problem/4530',4530,'1은 흥미로운 숫자','1초','128 MB',10,'<p>물론 모든 숫자들은 흥미롭지만, 기준에 따라 어떠한 숫자들은 다른 숫자들보다 더 흥미롭기도 하다. 숫자 X가 숫자 Y보다 더 많은 "특징"을 가진다면 우리는 이를 "흥미롭다" 고 한다.</p>

<p>우리는 수 집합이 주어졌을 때 가장 흥미로운 수를 찾아야 한다.</p>

<p>다음은 "흥미로운 숫자" 들의 특징이다 -</p>

<ul>
	<li>1. 소수 : 1과 자기 자신이 아닌 수들에게 나누어지지 않는 수. (ex : 2, 113)</li>
	<li>2. 제곱수 : 어떠한 정수의 제곱수. (ex : 4, 225, 1089)</li>
	<li>3. 세제곱수 : 어떠한 정수의 세제곱수. (ex : 8, 3375, 35937)</li>
	<li>4. 네제곱수 : 어떠한 정수의 네제곱수. (ex : 16, 50625, 1185921)</li>
	<li>5. 합배수 : 각 자리수들의 합의 배수 (ex : 1, 24, 100)</li>
	<li>6. 곱배수 : 각 자리수들의 곱의 배수 (ex : 1, 24, 315)</li>
</ul>

<p>1은 소수가 아니며, 0의 배수는 0 뿐임을 유념하여라.</p>

<p>또한, 주어지는 집합의 따라 수의 흥미로움을 결정하는 특징도 있다. 다음은 그러한 "흥미로운 숫자" 들의 특징이다.</p>

<ul>
	<li>7. 약수 : 주어지는 집합에 있는 어떠한 수의 약수.</li>
	<li>8. 배수 : 주어지는 집합에 있는 어떠한 수의 배수.</li>
	<li>9. 사과제곱수 : 주어지는 집합에 있는 어떠한 수의 제곱수.</li>
	<li>10. 사과세제곱수 : 주어지는 집합에 있는 어떠한 수의 세제곱수.</li>
	<li>11. 사과네제곱수 : 주어지는 집합에 있는 어떠한 수의 네제곱수.</li>
	<li>12. 사과합배수 : 주어지는 집합에 있는 어떠한 수의 자리수들의 합의 배수.</li>
	<li>13. 사과곱배수 : 주어지는 집합에 있는 어떠한 수의 자리수들의 곱의 배수.</li>
</ul>

<p>"어떠한 수"는 자기 자신이 아님에 유의하라. 즉, 1은 자기 자신의 사과네제곱수지만, 이는 특징으로 세지 않는다.</p>

<p>이러한 13개의 특징이 주어졌을 때, 만족하는 특징의 개수가 가장 큰 것들을 "가장 흥미로운 수"라고 한다. 집합에서 "가장 흥미로운 수" 들을 출력하고, 만약 그러한 수가 여러개라면 오름차순으로 모두 출력하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 테스트 케이스의 수 T (1 ≤ T ≤ 100) 가 주어진다.</p>

<p>이후 T개의 줄에 다음 수들이 주어진다 :</p>

<ul>
	<li>먼저 집합의 크기 N이 주어진다. (1 ≤ N ≤ 100)</li>
	<li>이후 N개의 줄에 숫자 X가 주어진다. (1 ≤ X ≤ 1000000) 집합에 있는 수들은 모두 다르다.</li>
</ul>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스에 대해 먼저 첫 줄에 "DATA SET #k"를 출력하라. k는 테스트 케이스의 번호다.</p>

<p>이후 흥미로운 숫자들을 여러 줄에 걸쳐&nbsp;오름차순으로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
2
1
100
3
2
3
4
','DATA SET #1
1
DATA SET #2
4
','MATH'),
                                                                                                                (742,'BAEKJOON','https://www.acmicpc.net/problem/4539',4539,'반올림','1초','128 MB',5,'<p>정수 x가 주어졌을 때, 10보다 크다면, 1의 자리에서 반올림하고, 결과가 100보다 크면, 10의 자리에서 반올림하고, 1000보다 크면, 100의 자리에서 반올림하고... 이와 같이 계속 반올림하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 n이 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있으며, 정수 x가 주어진다. (0 ≤ x ≤ 99999999)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 입력으로 주어지는 정수를 문제 설명에 나온 것처럼 반올림한 결과를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','9
15
14
4
5
99
12345678
44444445
1445
446
','20
10
4
5
100
10000000
50000000
2000
500
','MATH'),
                                                                                                                (749,'BAEKJOON','https://www.acmicpc.net/problem/4563',4563,'리벤지 오브 피타고라스','1초','128 MB',11,'<p>피타고라스의 정리는 직각삼각형의 세 변의 관계를 나타내는 정리이다. 빗변의 길이를 C, 다른 두 변의 길이를 A, B라고 한다면 다음과 같은 식으로 쓸 수 있다.</p>



<p>A<sup>2</sup> + B<sup>2</sup> = C<sup>2</sup></p>



<p>세 변의 길이가 모두 자연수인 직각삼각형 중에 가장 유명한 삼각형은 아래와 같다.</p>



<p><img alt="" src=https://www.acmicpc.net/upload/images/pyta1.png" style="height:128px; width:164px"></p>



<p>A = 12인 경우에는 다음과 같이 두 개의 직사각형을 찾을 수 있다.</p>



<p><img alt="" src=https://www.acmicpc.net/upload/images/pyta2.png" style="height: 89.1667px; width: 398.333px;"></p>



<p>A가 주어졌을 때, 빗변의 길이 C가 자연수인 직각삼각형을 만드는 자연수 B (B > A)는 몇 개가 있을까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, 자연수 A (2 ≤ A < 2<sup>20</sup>)이 주어진다. 입력의 마지막 줄에는 0이 하나 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어진 A에 대해서, 빗변의 길이가 자연수인 직각삼각형을 만드는 B(B>A)의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
12
2
1048574
1048575
0
','1
2
0
1
175
','MATH'),
                                                                                                                (744,'BAEKJOON','https://www.acmicpc.net/problem/4564',4564,'숫자 카드놀이','1초','128 MB',4,'<p>
	맨 앞자리에 앉은 상근이는 수업시간이 아무리 지루해도 딴짓을 할 수가 없다. 그런데 오늘은 너무 딴짓이 하고 싶다.</p>

<p>
	공책에 정인이에게 배운 숫자 카드놀이를 하려고 한다.</p>

<p>
	숫자 카드놀이를 하려면 먼저 자연수 S를 골라야 한다. 그 다음, 각 자리를 모두 곱하면서 한 자리 수가 나오기 전까지 계속해서 새로운 수를 만드는 게임이다.</p>

<p>
	예를 들어, 95로 시작한다면, 9 × 5 = 45를 얻게 된다. 45도 두 자리 이상이기 때문에, 4 × 5 = 20를 얻게 된다. 그 다음 2 × 0 = 0 이 되고, 0은 한 자리 숫자이기 때문에 게임은 끝나게 된다.</p>

<p>
	또, 396에서 시작한다면, 아래와 같은 과정을 거쳐 2로 끝나게 된다.</p>

<p>
	3 × 9 × 6 = 162&nbsp;</p>
<p>
	1 × 6 × 2 = 12&nbsp;</p>
<p>
	1 × 2 = 2&nbsp;</p>

<p>
	자연수 S가 주어졌을 때, 숫자 카드놀이를 하는 과정을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력은 여러 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 숫자 카드놀이의 시작값 S로 이루어져 있다. (1 ≤ S ≤ 100000) S는 0으로 시작하지 않으며, 입력의 마지막 줄에는 0이 하나 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	0이 아닌 입력에 대해서, 숫자 카드놀이가 끝나기 전 까지 나온 수를 공백으로 구분하여 출력한다. 첫 값은 입력으로 주어진 값이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','95
396
28
4
40
0
','95 45 20 0
396 162 12 2
28 16 6
4
40 0
','MATH'),
                                                                                                                (750,'BAEKJOON','https://www.acmicpc.net/problem/4587',4587,'이집트 분수','1초','128 MB',10,'<p>
	이집트 왕국(기원전 2000년)의 이집트인은 분수를 쓰는 새로운 방법을 개발했다. 단위분수를 나타내는 상형문자를 만든 뒤, 그 상형문자로 분수를 나타냈다.</p>

<p>
	하지만, 이 방법을 이용한다면 분자가 1보다 큰 분수를 나타낼 수가 없었다. 따라서, 이집트 인은 단위분수를 더하는 방식으로 분수를 나타냈다. 예를 들어, 3/4는 다음과 같이 나타낼 수 있다.</p>

<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/34.png" style="width: 183px; height: 60px;"></p>

<p>
	어떤 분수를 나타내는 방법이 여러 가지일수도 있다. 3/4는 다음과 같이 나타낼 수 있다.</p>

<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/342.png" style="width: 253px; height: 60px;"></p>

<p>
	분수 M/N이 주어졌을 때, 이 분수를 그리디 방법을 이용해서 단위분수의 합으로 나타내려고 한다. 그리디 방법은 그 분수에서 뺄 수 있는 가장 큰 단위 분수를 0이 될 때 까지 계속해서 빼는 방법이다. 예를 들어, 9/20을 그리디 방법을 이용한다면 1/3 + 1/9 + 1/180으로 나타낼 수 있다.</p>

<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/9201.png" style="width: 198px; height: 60px;"></p>
<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/9202.png" style="width: 211px; height: 60px;"></p>
<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/9203.png" style="width: 202px; height: 60px;"></p>

<p>
	이 방법을 이용해서 나온 단위분수가 너무 커지는 것을 막기위해, 다음과 같은 제한을 추가한다. 단위분수를 빼고난 후에 나온 분수의 분모는 1,000,000보다 작아야 한다.</p>

<p>
	예를 들어, 17/69에서 시작했을 때, 처음 두 단위분수는 1/5와 1/22가 되고 7/7590이 남게 된다. 이 상태에서 뺄 수 있는 가장 큰 분수는 1/1085가 된다.</p>

<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/77590.png" style="width: 336.667px; height: 35px;"></p>

<p>
	위에서 볼 수 있듯이 가장 큰 분수로 빼게되면 남은 분수의 분모는 백만보다 크게 된다. 따라서, 1/1085를 사용할 수 없게 된다. 다음으로 큰 단위분수인 1/1086을 빼면 다음과 같게 된다.</p>

<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/775902.png" style="width: 341.667px; height: 29.1667px;"></p>

<p>
	항상 분모의 크기는 1,000,000보다 작아야 하기 때문에, 위와 같이 단위분수로 나눠야 한다. 따라서, 정답은 1/5 + 1/22 + 1/1086 + 1/686895가 된다.</p>

<p>
	모든 분수는 항상 분모가 같은 단위분수의 합으로 나타낼 수 잇기 때문에, 정답이 존재하지 않는 경우는 없다. 예를 들면 3/999983과 같은 경우다.</p>

<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/3999983.png" style="width: 395.833px; height: 50px;"></p>



					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, M과 N이 주어진다. (1 < M < N < 100) M과 N은 분수 M/N을 나타내며, 두 수의 최대공약수는 항상 1이다. 마지막 줄에는 0 0이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	입력으로 주어진 분수 M/N이 다음과 같이 나타낼 수 있다면, D<sub>1</sub>, D<sub>2</sub>, D<sub>3</sub>, ...를 공백으로 구분해 출력한다. (D<sub>1</sub> ≤ D<sub>2</sub> ≤ D<sub>3</sub> ≤ ....)</p>
<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/output.png" style="width: 354px; height: 63px;"></p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 4
2 7
9 20
17 69
0 0
','2 4
4 28
3 9 180
5 22 1086 686895
','MATH'),
                                                                                                                (747,'BAEKJOON','https://www.acmicpc.net/problem/4619',4619,'루트','1초','128 MB',3,'<p>
	양의 정수 B와 N이 주어졌을 때, B에 가장 가까운 A<sup>N</sup>의 정수 A를 찾는 프로그램을 작성하시오. A<sup>N</sup>은 B보다 작거나, 크거나, 같다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력은 여러 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, B와 N이 주어진다. (1 ≤ B ≤ 1,000,000, 1 ≤ N ≤ 9) 입력의 마지막 줄에는 0이 2개 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 해당하는 A를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 3
5 3
27 3
750 5
1000 5
2000 5
3000 5
1000000 5
0 0
','1
2
3
4
4
4
5
16
','MATH'),
                                                                                                                (701,'BAEKJOON','https://www.acmicpc.net/problem/4626',4626,'가글','1초','128 MB',8,'<p>구글은 실리콘밸리 중심가 101번 고속도로가 통과하는 곳에 다음과 같은 광고판을 달았다.</p>

<blockquote>"{first 10-digit prime found in consecutive digits of e}.com"</blockquote>

<p>구글의 채용 방법에 크게 감동한 구강 청정제 회사 가글에서는 다음과 같은 문제로 사람을 뽑으려고 한다.</p>

<blockquote>{어떤 유리수를 7진법으로 나타낸 뒤, 소수점 B번째 자리부터 E번째 자리까지}.com</blockquote>

<p>예를 들어, 1/5<sub>10</sub>를 7진법으로 나타내면 0.12541...<sub>7</sub>, 33/4<sub>10</sub>는 11.15151...<sub>7</sub>, 6/49<sub>10</sub>은 0.06000...<sub>7</sub>이다.</p>

<p>유리수가 주어졌을 때, 이 유리수의 소수점 B번째 자리부터 E번째 자리까지를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 N, D, B, E가 10진수로 한 줄에 하나씩 주어진다. N과 D는 유리수의 분자와 분모이고, 0 ≤ N ≤ 5,000, 1 ≤ D ≤ 5,000을 만족한다. B와 E는 구해야 하는 수의 범위이다. 0 ≤ B,E ≤ 250, 0 ≤ (E-B) ≤ 20을 만족한다. 소수점 0번째 자리는 소수점 바로 오른쪽에 있는 수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 다음과 같이 출력한다.</p>

<pre>Problem set k: N / D, base 7 digits B through E: result</pre>

<p>k는 테스트 케이스 번호, result는 계산한 값, 다른 값은 입력에 주어진 값이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 5 0 0
6 49 1 3
33 4 2 7
511 977 122 126
','Problem set 1: 1 / 5, base 7 digits 0 through 0: 1
Problem set 2: 6 / 49, base 7 digits 1 through 3: 600
Problem set 3: 33 / 4, base 7 digits 2 through 7: 151515
Problem set 4: 511 / 977, base 7 digits 122 through 126: 12425
','MATH'),
                                                                                                                (758,'BAEKJOON','https://www.acmicpc.net/problem/4673',4673,'셀프 넘버','1초','256 MB',6,'<p>셀프 넘버는 1949년 인도 수학자 D.R. Kaprekar가 이름 붙였다. 양의 정수 n에 대해서 d(n)을 n과 n의 각 자리수를 더하는 함수라고 정의하자. 예를 들어, d(75) = 75+7+5 = 87이다.</p>

<p>양의 정수 n이 주어졌을 때, 이 수를 시작해서 n, d(n), d(d(n)), d(d(d(n))), ...과 같은 무한 수열을 만들 수 있다.&nbsp;</p>

<p>예를 들어, 33으로 시작한다면 다음 수는 33 + 3 + 3 = 39이고, 그 다음 수는 39 + 3 + 9 = 51, 다음 수는 51 + 5 + 1 = 57이다. 이런식으로 다음과 같은 수열을 만들 수 있다.</p>

<p>33, 39, 51, 57, 69, 84, 96, 111, 114, 120, 123, 129, 141, ...</p>

<p>n을 d(n)의 생성자라고 한다. 위의 수열에서 33은 39의 생성자이고, 39는 51의 생성자, 51은 57의 생성자이다. 생성자가 한 개보다 많은 경우도 있다. 예를 들어, 101은 생성자가 2개(91과 100) 있다.&nbsp;</p>

<p>생성자가 없는 숫자를 셀프 넘버라고 한다. 100보다 작은 셀프 넘버는 총 13개가 있다. 1, 3, 5, 7, 9, 20, 31, 42, 53, 64, 75, 86, 97</p>

<p>10000보다 작거나 같은 셀프 넘버를 한 줄에 하나씩 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>10,000보다 작거나 같은 셀프 넘버를 한 줄에 하나씩 증가하는 순서로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','','1
3
5
7
9
20
31
42
53
64
 |
 |       <-- a lot more numbers
 |
9903
9914
9925
9927
9938
9949
9960
9971
9982
9993
','MATH'),
                                                                                                                (766,'BAEKJOON','https://www.acmicpc.net/problem/4690',4690,'완전 세제곱','1초','128 MB',3,'<p>페르마의 마지막 정리는, a, b, c가 0이 아닌 정수이고, n이 2보다 큰 자연수 일 때, a<sup>n</sup> = b<sup>n</sup> + c<sup>n</sup>을 만족하는 자연수 a, b, c가 존재하지 않는다는 정리이다. 이 정리는 아직 증명되지 않았다.</p>

<p>하지만, 완전 세제곱 방정식 a<sup>3</sup> = b<sup>3</sup> + c<sup>3</sup> + d<sup>3</sup>을 만족하는 1보다 큰 자연수를 찾는 것은 어렵지 않다. (12<sup>3</sup> = 6<sup>3</sup> + 8<sup>3</sup> + 10<sup>3</sup>)</p>

<p>이러한 완전 세제곱 방정식과 a ≤ 100을 만족하는 {a, b, c, d}쌍을 모두 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>이 문제는 입력이 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>a값이 증가하는 순서대로 아래 출력 형식과 같이 출력한다. b, c, d도 증가하는 순서로 이루어져야 한다. a값에 해당하는 b, c, d쌍이 여러 개 존재할 수 있다. 이때는 b 값이 작은 것부터 먼저 출력한다.</p>

<p>아래 출력 예제는 일부분만 나와있다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>페르마의 마지막 정리는 1995년에 앤드루 와일스에 의해 증명되었다.</p>

				</div>
				</div>','','Cube = 6, Triple = (3,4,5)
Cube = 12, Triple = (6,8,10)
Cube = 18, Triple = (2,12,16)
Cube = 18, Triple = (9,12,15)
Cube = 19, Triple = (3,10,18)
Cube = 20, Triple = (7,14,17)
Cube = 24, Triple = (12,16,20)
','MATH'),
                                                                                                                (771,'BAEKJOON','https://www.acmicpc.net/problem/4703',4703,'그림의 추측','2초','128 MB',17,'<p>그림의 추측이란, 연속된 합성수의 집합이 있을 때, 각각의 수를 나눌 수 있는 서로 다른 소수를 하나씩 배정할 수 있다는 내용이다.</p>

<p>즉, n+1, n+2, ..., n+k가 모두 합성수일 때, (n+i)를 나눌 수 있는 서로 다른 k개의 소수 pi가 존재한다는 내용이다. (1 ≤ i ≤ k)</p>

<p>예를 들어, 242부터 250까지 합성수는 다음과 같이 소수를 배정할 수 있다.</p>

<table class="table table-bordered" style="width:36%">
	<thead>
		<tr>
			<th style="width:4%">242</th>
			<th style="width:4%">243</th>
			<th style="width:4%">244</th>
			<th style="width:4%">245</th>
			<th style="width:4%">246</th>
			<th style="width:4%">247</th>
			<th style="width:4%">248</th>
			<th style="width:4%">249</th>
			<th style="width:4%">250</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>2</td>
			<td>3</td>
			<td>61</td>
			<td>7</td>
			<td>41</td>
			<td>13</td>
			<td>31</td>
			<td>83</td>
			<td>5</td>
		</tr>
	</tbody>
</table>

<p>연속된 합성수의 구간이 주어졌을 때, 각각의 합성수를 나눌 수 있는 서로 다른 소수를 찾는 프로그램을 작성하시오. 소수를 배치할 수 있는 방법이 여러 가지라면, 첫 번째 소수가 가장 작은 것을 출력한다. 그러한 것이 여러 가지라면, 두 번째 소수가 작은것, 세 번째,... 와 같은 식으로 가장 작은 방법을 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, L과 H가 주어진다. (4 ≤ L < H ≤ 10<sup>10</sup>)</p>

<p>항상 L... H구간의 수는 합성수이다.</p>

<p>마지막 줄에는 0이 두 개 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 소수를 공백으로 구분해서 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','242 250
8 10
0 0
','2 3 61 7 41 13 31 83 5
2 3 5
','MATH'),
                                                                                                                (777,'BAEKJOON','https://www.acmicpc.net/problem/4766',4766,'일반 화학 실험','1초','128 MB',3,'<p>동혁이는 졸업을 하기 위해 일반 화학 실험을 들어야 한다. 마지막 실험은 어떤 혼합물을 만든 뒤 온도를 1분에 한 번씩 잰 후, 1분동안 변화한 온도를 표로 만들어야 한다.</p>

<p>뛰어난 프로그래머인 동혁이는 혼합물의 온도를 자동으로 측정해주는 프로그램을 만들었다. 하지만, 깜빡하고 변화한 온도를 자동으로 계산해주는 프로그램을 만들지 않았다.</p>

<p>동혁이가 측정한 온도가 주어졌을 때, 변화한 온도를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 동혁이가 측정한 혼합물의 온도가 순서대로 주어진다. 온도는 -10도와 200도 사이이고, 소수점 둘째자리까지 적혀져 있을 수도 있다. 마지막 측정 후에는 999가 주어진다. 동혁이는 온도를 적어도 2번 측정했다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어진 각 온도와 이전 온도와의 차이를 출력한다. 첫 번째 측정할 온도는 이전 온도가 없으니 출력할 필요가 없다. 차이는 항상 소수점 둘째자리까지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10.0
12.05
30.25
20
999
','2.05
18.20
-10.25
','MATH'),
                                                                                                                (781,'BAEKJOON','https://www.acmicpc.net/problem/4782',4782,'분수 뺄셈','1초','128 MB',15,'<p>초등학교에서 학생들은 분수 뺄셈을 하는 법을 배운다. 하지만, 상근이는 분수 뺄셈을 아직도 제대로 하는 법을 모른다.</p>

<p>예를 들어, 아래와 같은 분수 뺄셈이 있다.</p>

<p>\[\frac{5}{4} - \frac{9}{12}\]</p>

<p>상근이는 분모 끼리 빼고, 분자 끼리 빼는 방법으로 뺄셈을 한다. 아래 그림을 보자.</p>

<p>\[\frac{5}{4} - \frac{9}{12} = \frac{-4}{-8} = \frac{4}{8} = \frac{1}{2}\]</p>

<p>그런데, 신기하게도 이 방법이 실제 결과와 같은 경우가 있다.</p>

<p>분수 b/n이 주어진다. 이때, 아래 식을 만족하는 모든 a와 m을 찾는 프로그램을 작성하시오. (a ≥ 0, m > 0)</p>

<p>\[\frac{a}{m} - \frac{b}{n} = \frac{a-b}{m-n}\]</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, b와 n이 주어진다. (1 ≤ b, n ≤ 10<sup>6</sup>) 입력의 마지막 줄에는 0이 두 개 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 문제의 조건을 만족하는 분수를 작은 것부터 크기 순서대로 모두 출력한다. 출력하고자 하는 분수의 크기가 같은 경우에는 분자의 크기가 작은 것 부터 출력한다. 분수는 항상 a/m 형태로 출력해야 하며, /의 앞과 뒤에 공백을 출력하면&nbsp;안 된다. 분수와 분수 사이에는 공백을 하나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','9 12
12 14
4 12
0 0
','0/24 5/20 8/16 8/8 5/4
0/28 9/21 9/7
0/24 3/18 3/6
','MATH'),
                                                                                                                (784,'BAEKJOON','https://www.acmicpc.net/problem/4796',4796,'캠핑','1초','128 MB',5,'<p>등산가 김강산은 가족들과 함께 캠핑을 떠났다. 하지만, 캠핑장에는 다음과 같은 경고문이 쓰여 있었다.</p>

<p>캠핑장은 연속하는 20일 중 10일동안만 사용할 수 있습니다.</p>

<p>강산이는 이제 막 28일 휴가를 시작했다. 이번 휴가 기간 동안 강산이는 캠핑장을 며칠동안 사용할 수 있을까?</p>

<p>강산이는 조금 더 일반화해서 문제를 풀려고 한다.&nbsp;</p>

<p>캠핑장을 연속하는 P일 중, L일동안만 사용할 수 있다. 강산이는 이제 막 V일짜리 휴가를 시작했다. 강산이가 캠핑장을 최대 며칠동안 사용할 수 있을까? (1 < L < P < V)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, L, P, V를 순서대로 포함하고 있다. 모든 입력 정수는 int범위이다. 마지막 줄에는 0이 3개 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 강산이가 캠핑장을 최대 며칠동안 사용할 수 있는지 예제 출력처럼 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 8 20
5 8 17
0 0 0
','Case 1: 14
Case 2: 11
','MATH'),
                                                                                                                (785,'BAEKJOON','https://www.acmicpc.net/problem/4798',4798,'등차수열에 관한 디리클레의 정리','1초','128 MB',20,'<p>등차수열에 관한 디리클레의 정리는 서로소인 두 양의 정수 a와 b가 있을 때, 등차수열 t(n) = a*n + b (n ≥ 0)은 무한히 많은 소수를 포함한다는 내용이다. 소수는 2보다 큰 양의 정수로, 약수가 1과 자기자신 밖에 없는 수이다.</p>

<p>예를 들어, a=4, b=3인 경우 등차수열은 다음과 같다.</p>

<p>3, 7, 11, 15, 19, 23, 27, 31, 35, ...,</p>

<p>여기서 이 등차수열의 첫 부분에 많은 소수가 있음을 눈으로 볼 수 있다.</p>

<p>a > 0과 b ≥ 0, 그리고 U ≥ L ≥ 0이 주어졌을 때, t(n) = a*n+b에 소수가 몇 개 있는지 구하는 프로그램을 작성하시오. (L ≤ n ≤ U)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 a, b, L, U를 포함하며, 한 줄로 이루어져 있다. a*U+b ≤ 10<sup>12</sup>이고, U - L ≤ 10<sup>6</sup>이다. 마지막 줄에는 0이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 테스트 케이스 번호와 L ≤ n ≤ U에서 t(n)이 소수인 것의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 3 0 8
1 0 2 100
2 7 0 1000
0
','Case 1: 6
Case 2: 25
Case 3: 301
','MATH'),
                                                                                                                (786,'BAEKJOON','https://www.acmicpc.net/problem/4811',4811,'알약','1초','256 MB',11,'<p>70세 박종수 할아버지는 매일 매일 약 반알을 먹는다. 손녀 선영이는 종수 할아버지에게 약이 N개 담긴 병을 선물로 주었다.</p>

<p>첫째 날에 종수는 병에서 약 하나를 꺼낸다. 그 다음, 그 약을 반으로 쪼개서 한 조각은 먹고, 다른 조각은 다시 병에 넣는다.</p>

<p>다음 날부터 종수는 병에서 약을 하나 꺼낸다. (약은 한 조각 전체 일 수도 있고, 쪼갠 반 조각 일 수도 있다) 반 조각이라면 그 약을 먹고, 아니라면 반을 쪼개서 한 조각을 먹고, 다른 조각은 다시 병에 넣는다.</p>

<p>종수는 손녀에게 한 조각을 꺼낸 날에는 W를, 반 조각을 꺼낸 날에는 H 보낸다. 손녀는 할아버지에게 받은 문자를 종이에 기록해 놓는다. 총 2N일이 지나면 길이가 2N인 문자열이 만들어지게 된다. 이때, 가능한 서로 다른 문자열의 개수는 총 몇 개일까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 최대 1000개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄이며, 병에 들어있는 약의 개수 N ≤ 30 가 주어진다.</p>

<p>입력의 마지막 줄에는 0이 하나 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서 가능한 문자열의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
1
4
2
3
30
0
','132
1
14
2
5
3814986502092304
','MATH'),
                                                                                                                (791,'BAEKJOON','https://www.acmicpc.net/problem/4839',4839,'소진법','1초','128 MB',7,'<p>2보다 크거나 같은 자연수 b가 주어졌을 때, 모든 양의 정수 n을 b진법으로 표현하는 방법은 유일하다.</p>

<p>n = a<sub>0</sub> + a<sub>1</sub>*b + a<sub>2</sub>*b*b + a<sub>3</sub>*b*b*b + ...</p>

<p>여기서 a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub>, a<sub>3</sub>, ...은 0보다 크거나 같고, b-1보다 작거나 같은 값을 가진다.</p>

<p>p<sub>0</sub>=2, p<sub>1</sub>=3, p<sub>2</sub>=5, ... 과 같이 p<sub>i</sub>를 i번째 소수라고 했을 때, 모든 양의 정수 n도 소수를 이용한 진법으로 유일하게 표현할 수 있다. 이를 소진법이라고 한다.</p>

<p>n = a<sub>0</sub> + a<sub>1</sub>*p<sub>0</sub> + a<sub>2</sub>*p<sub>0*</sub>p<sub>1</sub> + a<sub>3</sub>*p<sub>0</sub>*p<sub>1</sub>*p<sub>2</sub> + ...</p>

<p>여기서&nbsp;a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub>, a<sub>3</sub>, ...은 0보다 크거나 같고, p<sub>i</sub>-1보다 작거나 같은 값을 가진다. 예를 들면, a<sub>3</sub>은 0보다 크거나 같고, p<sub>3</sub>-1보다 작거나 같다.</p>

<p>양의 정수 n이 주어졌을 때, 이를 소진법으로 나타내는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, n을 포함하고 있다. n은 양의 정수로 2<sup>31</sup>-1보다 작거나 같다. 마지막 줄에는 0이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 입력으로 주어진 수, 공백, 등호, 공백을 출력하고 문제 설명에 나온 것 같이 소진법으로 나타내 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','123
456
123456
0
','123 = 1 + 1*2 + 4*2*3*5
456 = 1*2*3 + 1*2*3*5 + 2*2*3*5*7
123456 = 1*2*3 + 6*2*3*5 + 4*2*3*5*7 + 1*2*3*5*7*11 + 4*2*3*5*7*11*13
','MATH'),
                                                                                                                (798,'BAEKJOON','https://www.acmicpc.net/problem/4862',4862,'마지막 자리','2초','128 MB',18,'<p>
	어떤수를 거듭제곱하면 매우 큰 숫자를 얻을 수 있다.</p>

<p>
	b, n, i가 주어진다. f(x)는 f(x) = b<sup>f(x-1)</sup> (x>0), f(0) = 1로 정의되어 있다. 이때, f(i)의 마지막 n자리를 구하는 프로그램을 작성하시오.</p>



					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 세 줄로 이루어져 있다. 첫째 줄에는 b(1 ≤ b ≤ 100), 둘째 줄에는 i(1 ≤ i ≤ 100), 셋째 줄에는 n(1 ≤ n ≤ 7)이 주어진다. 마지막 줄에는 0이 하나 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대해서, f(i)의 마지막 n자리를 출력한다. 만약 결과가 n자리보다 작을 때는, 앞에 0을 채워 n자리를 맞춘 뒤 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
4
7
10
10
6
3
10
7
0
','0065536
000000
4195387
','MATH'),
                                                                                                                (802,'BAEKJOON','https://www.acmicpc.net/problem/4880',4880,'다음수','1초','128 MB',3,'<p>등차수열(AP)은 인접한 두 수의 차이(공차)가 일정한 수열이다. 예를 들어, 3, 5, 7, 9, 11, 13, ...은 차이가 2로 일정한 등차수열이다. 이 문제에서 등차수열의 공차는 항상 0이 아닌 정수이다.</p>

<p>등비수열(GP)는 각 항이 그 앞과 일정한 비(공비)를 가지는 수열이다. 예를 들어, 2, 6, 18, 54, ...은 공비가 3인 등비수열이다. 이 문제에서 등비수열의 공비는 항상 0이 아닌 정수이다.</p>

<p>어떤 수열의 연속한 세개의 숫자가 주어졌을 때, 이 수열이 등차수열인지 등비수열인지를 알아낸 뒤, 다음 항을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 수열의 연속하는 세 정수 a1, a2, a3이 한 줄에 주어진다. (-10,000 < a1, a2, a3 < 10,000) a1, a2, a3은 서로 같지 않다.</p>

<p>입력의 마지막 줄에는 0이 세 개 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 등차수열이면 AP를, 등비수열이면 GP를 출력한 뒤, 다음 항을 출력한다. 모든 입력은 항상 등차수열이나 등비수열이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 7 10
2 6 18
0 0 0
','AP 13
GP 54
','MATH'),
                                                                                                                (803,'BAEKJOON','https://www.acmicpc.net/problem/4884',4884,'FIFA 월드컵','1초','128 MB',6,'<p>FIFA는 월드컵의 대회 형식을 약간 수정하려고 한다. 현재, 월드컵은 32개팀이 참가하며, 2개의 라운드로 이루어져 있다. 첫 번째 라운드는 조별 리그이고, 32개팀은 8개의 조에 배정된다. 각 팀은 조에 속하는 다른 팀과 한 경기씩 치뤄 총 세 경기를 치룬다. 조별 리그가 완료된 후에, 각 조의 상위 두 팀은 다음 라운드 토너먼트로 진출하게 된다. &nbsp;토너먼트의 첫 번째 라운드는 16개팀이 참가하며, 총 8경기가 열린다. 각 경기의 승자는 다음 라운드에 진출하게 된다. 토너먼트의 두 번째 라운드에서는 총 4경기가 열리며, 각 경기의 승자는 준결승전에 진출한다. 마지막으로 준결승전의 승자 두 팀은 결승전에 진출하게 되고, 결승전의 승자는 월드컵을 우승하게 된다.</p>

<p>토너먼트 전을 공정하게 진행하려면 토너먼트에 참가하는 팀의 수는 항상 2의 제곱꼴이 되어야 한다.</p>

<p>FIFA는 조별 리그에 참가하는 팀의 수를 추가하고, 조의 개수도 추가하려고 한다. 이 결과로 토너먼트에 참가하는 팀의 수가 변경될 수도 있다. 또한, FIFA는 일부 팀(이전 대회 우승, 개최국, 등등...)은 조별 리그를 거치지 않고 바로 토너먼트에 진출하게 규정을 바꾸려고 한다. 월드컵을 어떻게 바꿀지 주어졌을 때, 그렇게 월드컵이 바뀐다면 총 몇 경기가 열리게 되는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있고, 각 테스트 케이스는 자연수 4개 G T A D가 주어진다.</p>

<p>G > 0는 그룹의 수, T는 각 그룹을 구성하는 팀의 수, A는 각 조에서 토너먼트로 진출하는 팀의 수, D는 조별 리그를 거치지 않고 바로 토너먼트로 진출하는 팀의 수이다. 항상 0 < A ≤ T이고, 네 숫자는 2<sup>16</sup>을 넘지 않는다.</p>

<p>만약, 토너먼트에 참가하는 팀의 수가 2의 제곱꼴이 아닐 때는, 가까운 2의 제곱으로 진출하는 팀의 수를 추가시켜야 한다.</p>

<p>입력의 마지막 줄에는 -1이 네 개 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 다음을 출력한다.</p>

<pre>G*A/T+D=X+Y</pre>

<p>G, A, T, D는 입력으로 주어지는 수, X는 총 열리는 경기의 수, Y는 추가해야하는 팀의 수이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8 4 2 0
8 4 2 1
-1 -1 -1 -1
','8*2/4+0=63+0
8*2/4+1=79+15
','MATH'),
                                                                                                                (804,'BAEKJOON','https://www.acmicpc.net/problem/4892',4892,'숫자 맞추기 게임','1초','128 MB',3,'<p>숫자 맞추기 게임은 초등학교 학생들 사이에서 유행하는 게임이다. 선생님은 학생들의 연산 실력과 논리적인 사고력을 기르기위해 학생들에게 이 게임을 권유하고 있다.</p>

<p>이 게임을 시작할 때는 친구가 숫자 하나를 머리속에 생각해야 한다. 이 숫자를 n<sub>0</sub>이라고 하자. 그러고 나서 다음과 같이 게임을 진행한다.</p>

<ol>
	<li>친구에게 n<sub>1</sub> = 3*n<sub>0</sub> 계산을 하라고 한 뒤, n<sub>1</sub>이 짝수인지 홀수인지를 말해달라고 한다.</li>
	<li>n<sub>1</sub>이 짝수라면, n<sub>2</sub> = n<sub>1</sub>/2를, 홀수라면 n<sub>2</sub> = (n<sub>1</sub>+1)/2를 계산해달라고 한다.</li>
	<li>n<sub>3</sub> = 3*n<sub>2</sub>의 계산을 부탁한다.</li>
	<li>친구에게 n<sub>4</sub> = n<sub>3</sub>/9를 계산한 뒤, 그 값을 말해달라고 한다. (n<sub>4</sub>는 나눗셈의 몫이다)</li>
	<li>자 이제, n<sub>1</sub>이 짝수였다면, n<sub>0</sub> = 2*n<sub>4</sub>로, 홀수였다면, n<sub>0</sub> = 2*n<sub>4</sub>+1로 처음 친구가 생각한 숫자를 맞출 수 있다.</li>
</ol>

<p>예를 들어, &nbsp;친구가 생각한 수가 n<sub>0</sub>=37이었다면, n<sub>1</sub> = 111이 되고 홀수이다. 그 다음 n<sub>2</sub> = 56, n<sub>3</sub> = 168, n<sub>4</sub> = 18이 된다. 친구는 n<sub>4</sub>를 알려주게 된다.&nbsp;</p>

<p>그럼 2*n<sub>4</sub>+1 = 37이기 때문에, 친구가 제일 처음 생각한 숫자를 맞출 수 있다.</p>

<p>n<sub>0</sub>이 주어졌을 때, n<sub>1</sub>이 홀수인지 짝수인지와 n<sub>4</sub>를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, n<sub>0</sub>으로 이루어져 있다. (0 < n<sub>0</sub> < 1,000,000) 입력의 마지막 줄에는 0이 하나 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 케이스 번호를 출력하고 n<sub>1</sub>이 짝수라면 even, 홀수라면 odd를 출력하고, n<sub>4</sub>를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','37
38
0
','1. odd 18
2. even 19
','MATH'),
                                                                                                                (813,'BAEKJOON','https://www.acmicpc.net/problem/4907',4907,'월쉬 행렬','1초','128 MB',13,'<p>
	월쉬 행렬이란&nbsp;행렬의 크기가 2의 제곱이며, 행렬의 원소가 +1 또는 -1인 정사각형 행렬이다.</p>

<p>
	이 행렬의 가장 큰 특징은 임의의 두 행(또는 열)의 스카라 곱이 0인 것이다.</p>

<p>
	아래는 처음 셋 월쉬 행렬이다. (회색 선은 보기 편하게 하기 위해 그은 것)</p>

<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/wal.png" style="width: 370.833px; height: 63.3333px;"></p>

<p>
	크기가 2<sup>N+1</sup>인 월쉬 행렬은 크기가 2<sup>N</sup>인 4개의 월쉬 행렬을 합쳐서 만들 수 있다. 오른쪽 아래 행렬은 다른 세 행렬과 다르게 모든 원소를 반전시켜서 넣어야 한다.</p>

<p>
	<img alt="" src=https://www.acmicpc.net/upload/images/wal2.png" style="width: 229px; height: 61px;"></p>

<p>
	월쉬 행렬의 행의 번호를 위에서 부터 0번이라고 하고, 열의 번호는 왼쪽에서 부터 0이라고 하자. 이때 N, R, S, E가 주어졌을 때, 크기가 2<sup>N</sup>인 월쉬 행렬에서 R행 S열부터 R행 E열까지 합을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 네 정수 N, R, S, E로 이루어져 있다. (0 ≤ N ≤ 60, 0 ≤ R < 2<sup>N</sup>, 0 ≤ S ≤ E < 2<sup>N</sup>, E ? S ≤ 10,000)</p>
<p>
	마지막 줄에는 -1이 4개 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대해서 정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 1 0 1
48 0 0 47
-1 -1 -1 -1
','0
48
','MATH'),
                                                                                                                (812,'BAEKJOON','https://www.acmicpc.net/problem/4913',4913,'페르마의 크리스마스 정리','1초','128 MB',12,'<p>1640년 12월 25일, 위대한 수학자 피에르 드 페르마는 마랭 메르센에게 다음과 같은 내용의 편지를 썼다.</p>

<blockquote>I just proved that an odd prime p is expressible as p = a<sup>2</sup> + b<sup>2</sup> if and only if p is expressible as p = 4c + 1.</blockquote>

<p>편지에는 증명은 포함되어 있지 않았고, 100년후에 오일러가 증명했다. 5, 13, 17, 41은 두 제곱수의 합으로 나타낼 수 있다.</p>

<p>5=2<sup>2</sup>+1<sup>1</sup> 13=3<sup>2</sup>+2<sup>2</sup> 17=4<sup>2</sup>+1<sup>2</sup> 41=5<sup>2</sup>+4<sup>2</sup></p>

<p>하지만, 11, 19, 23, 31은 제곱수의 합으로 나타낼 수 없다.</p>

<p>어떤 구간이 주어졌을 때, 이 구간에 포함되어 있는 소수를 제곱수의 합으로 나타낼 수 있는 경우의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, L과 U가 공백으로 구분되어 주어진다. (-1,000,000 < L ≤ U < 1,000,000)</p>

<p>입력의 마지막 줄은 L과 U가 -1이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 한 줄에 L U x y를 출력한다. 여기서 L과 U는 입력으로 주어진 값이고, x는 구간 [L,U]에 포함된 소수의 개수, y는 [L,U]에 포함된&nbsp;소수중 제곱수의 합으로 나타낼 수 있는 것의 개수이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10 20
11 19
100 1000
-1 -1
','10 20 4 2
11 19 4 2
100 1000 143 69
','MATH'),
                                                                                                                (817,'BAEKJOON','https://www.acmicpc.net/problem/4924',4924,'정수론 싫어','1초','128 MB',16,'<p>정수론 중간고사를 마치고 집으로 돌아온 상근이는 패닉에 빠졌다. 유일하게 공부를 하지 않은 것이 오일러 피 함수(Eulers totient function, \(\varphi \))였는데, 그 함수에 관한 문제만 나왔기 때문이다. 상근이는 너무 억울했고, 직접 Totient 함수를 만들기로 했다.</p>

<p>정수론에서 양의 정수의 소인수는 그 정수를 나머지 없이 나눌 수 있는 소수이다. 상근이는 $n \ge 2$에서 함수 $F(n)$을 곱이 $n$이 되는 감소하지 않는 소수의 리스트로 정의했다. 예를 들어, $F(8) = \ll 2,2,2 \gg$, $F(60) = \ll 2,2,3,5 \gg$, $F(71) = \ll 71 \gg$ 이다. $O(n)$은 $F(n)$의 길이이다. 예를 들어, $O(8) = 3$, $O(60) = 4$, $O(71) = 1$ 이 된다. 마지막으로, 양의 정수에 대해서 \(p(n)\)을 다음과 같이 정의했다.</p>

<p>\(p(n) = \begin{cases} 0 &amp; \text{if } n = 1 \\ -1 &amp; \text{if } n \text{ is a prime number} \\ O(n) &amp; \text {otherwise} \end{cases}\)</p>

<p>아래 표에는 \(p(n)\)의 첫 20개 값이 나와있다.</p>

<table class="table table-bordered td-center th-center">
	<thead>
		<tr>
			<th>$n$</th>
			<th>$1$</th>
			<th>$2$</th>
			<th>$3$</th>
			<th>$4$</th>
			<th>$5$</th>
			<th>$6$</th>
			<th>$7$</th>
			<th>$8$</th>
			<th>$9$</th>
			<th>$10$</th>
			<th>$11$</th>
			<th>$12$</th>
			<th>$13$</th>
			<th>$14$</th>
			<th>$15$</th>
			<th>$16$</th>
			<th>$17$</th>
			<th>$18$</th>
			<th>$19$</th>
			<th>$20$</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<th>$p(n)$</th>
			<td>$0$</td>
			<td>$-1$</td>
			<td>$-1$</td>
			<td>$2$</td>
			<td>$-1$</td>
			<td>$2$</td>
			<td>$-1$</td>
			<td>$3$</td>
			<td>$2$</td>
			<td>$2$</td>
			<td>$-1$</td>
			<td>$3$</td>
			<td>$-1$</td>
			<td>$2$</td>
			<td>$2$</td>
			<td>$4$</td>
			<td>$-1$</td>
			<td>$3$</td>
			<td>$-1$</td>
			<td>$3$</td>
		</tr>
	</tbody>
</table>

<p>$a \le b$를 만족하는 두 양의 정수 $a$와 $b$에 대해서, 상근이는 자신의 Totient 함수인 \(\varphi(a,b)\)를 다음과 같이 정의했다.</p>

<p>\(\varphi (a,b)= ( \sum _{ k=a }^{ b }{ p(k) }  )  - (b-a+1)\)</p>

<p>예를 들어, \(\varphi(1,4) = -4\), \(\varphi(16,16) = 3\), \(\varphi(8,12) = 4\) 이다.</p>

<p>구간 $[L, U]$가 주어졌을 때, 가장 큰 값을 갖는 \(\varphi\)를 찾는 프로그램을 작성하시오.</p>

<p>즉, $L \le U$를 만족하는 두 양의 정수 $L$과 $U$가 주어졌을 때, 가장 큰 \(\varphi(a,b)\) ($L \le a \le b \le U$) 를 찾는 프로그램을 작성하시오. 예를 들어, 구간 $[1,20]$에서 가장 큰 \(\varphi\)는 7이다. (\(\varphi(8,16)\))</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 7,000개 이하의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, $L$과 $U$가 주어진다. ($1 \le L \le U < 1,000,000$)</p>

<p>입력의 마지막 줄에는 $-1$이 두 개 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 주어진 구간 $[L, U]$에서 찾을 수 있는 가장 큰 \(\varphi\) 값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 5
1 20
10 20
900000 901000
-1 -1
','1. 1
2. 7
3. 5
4. 2551
','MATH'),
                                                                                                                (821,'BAEKJOON','https://www.acmicpc.net/problem/4948',4948,'베르트랑 공준','1초','256 MB',9,'<p>베르트랑 공준은 임의의 자연수 n에 대하여, n보다 크고, 2n보다 작거나 같은 소수는 적어도 하나 존재한다는 내용을 담고 있다.</p>

<p>이 명제는 조제프 베르트랑이 1845년에 추측했고, 파프누티 체비쇼프가 1850년에 증명했다.</p>

<p>예를 들어, 10보다 크고, 20보다 작거나 같은 소수는 4개가 있다. (11, 13, 17, 19) 또, 14보다 크고, 28보다 작거나 같은 소수는 3개가 있다. (17,19, 23)</p>

<p>자연수 n이 주어졌을 때, n보다 크고, 2n보다 작거나 같은 소수의 개수를 구하는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 케이스는 n을 포함하는 한 줄로 이루어져 있다.</p>

<p>입력의 마지막에는 0이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, n보다 크고, 2n보다 작거나 같은 소수의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
10
13
100
1000
10000
100000
0
','1
4
3
21
135
1033
8392
','MATH'),
                                                                                                                (822,'BAEKJOON','https://www.acmicpc.net/problem/4964',4964,'단어 덧셈','40초','128 MB',12,'<p>단어 덧셈이란 905 + 125 = 1030과 같은 덧셈의 각 숫자를 알파벳으로 바꾼 것이다.</p>

<p>9를 A로, 0을 C로, 5를 M으로, 1을 I로, 2를 B로, 0을 C로, 3을 P로 바꾸면 다음과 같이 된다.</p>

<p>ACM + IBM = ICPC</p>

<p>이렇게 905 + 125 = 1030의 경우에는 바꾸는 방법이 총 4가지가 있다.</p>

<table class="table table-bordered" style="width:28%">
	<thead>
		<tr>
			<th style="width:10%">방법</th>
			<th style="width:3%">A</th>
			<th style="width:3%">B</th>
			<th style="width:3%">C</th>
			<th style="width:3%">I</th>
			<th style="width:3%">M</th>
			<th style="width:3%">P</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>방법 1</td>
			<td>9</td>
			<td>2</td>
			<td>0</td>
			<td>1</td>
			<td>5</td>
			<td>3</td>
		</tr>
		<tr>
			<td>방법 2</td>
			<td>9</td>
			<td>3</td>
			<td>0</td>
			<td>1</td>
			<td>5</td>
			<td>4</td>
		</tr>
		<tr>
			<td>방법 2</td>
			<td>9</td>
			<td>6</td>
			<td>0</td>
			<td>1</td>
			<td>5</td>
			<td>7</td>
		</tr>
		<tr>
			<td>방법 2</td>
			<td>9</td>
			<td>7</td>
			<td>0</td>
			<td>1</td>
			<td>5</td>
			<td>8</td>
		</tr>
	</tbody>
</table>

<p>&nbsp;</p>

<p>단어 덧셈이 주어졌을 때, 이 단어 덧셈을 푸는 방법의 수를 구하는 프로그램을 작성하시오. 단, 다음 조건을 만족해야 한다.</p>

<p>1. 덧셈의 각 항은 숫자 0-9로 이루어져 있다. 모든 숫자는 알파벳 A-Z로 바뀌어져 있다.</p>

<p>2. 한 알파벳은 하나의 숫자만을 나타낼 수 있다. 또, 어떤 숫자에 해당하는 알파벳은 반드시 하나 이어야 한다.</p>

<p>3. 0을 제외한 숫자는 0으로 시작할 수 없다. 즉, 00이나 0123과 같은 경우는 허용하지 않는다.</p>

<p>&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 테스트 케이스의 마지막 줄에는 0이 주어진다.</p>

<p>각 테스트 케이스는 첫째 줄에 단어의 개수 N이 주어지고, 그 다음 줄에는 단어 N개가 주어진다. 단어는 알파벳 A-Z로만 이루어져 있다.</p>

<p>각 단어는 다음과 같은 방정식을 나타낸다.</p>

<p>단어<sub>1</sub>+단어<sub>2</sub>+...+단어<sub>N-1</sub> = 단어<sub>N</sub></p>

<p>N은 2보다 크고, 13보다 작다. 단어의 길이는 0보다 크고, 9보다 작다. 단어에 등장하는 서로 다른 알파벳의 개수는 0보다 크고, 11보다 작다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 단어 덧셈을 풀 수 있는 방법의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
ACM
IBM
ICPC
3
GAME
BEST
GAMER
4
A
B
C
AB
3
A
B
CD
3
ONE
TWO
THREE
3
TWO
THREE
FIVE
3
MOV
POP
DIV
9
A
B
C
D
E
F
G
H
IJ
0
','4
1
8
30
0
0
0
40320
','MATH'),
                                                                                                                (826,'BAEKJOON','https://www.acmicpc.net/problem/4969',4969,'월요일-토요일','2초','128 MB',10,'<p>
	7로 나누었을 때, 나머지가 1 또는 6인 숫자를 7N+{1,6} 숫자라고 한다. 하지만, 발음하기 어려우므로 이러한 숫자를 월요일-토요일 숫자라고 하자.</p>

<p>
	월요일-토요일 숫자 a와 b가 있을 때, ax = b를 만족하는 월요일-토요일 숫자 x가 있다면, a를 b의 월요일-토요일 약수라고 한다. 사실, 월요일-토요일 숫자 a가 b의 약수(일반적인 약수)라면, a는 b의 월요일-토요일 약수이다. 또, 역도 성립한다.</p>

<p>
	월요일-토요일 소수란 1보다 큰 월요일-토요일 숫자가 1과 자기 자신을 제외하고 월요일-토요일 약수가 없는 수이다. 월요일-토요일 숫자가 소수일 때, 이 수는 월요일-토요일 소수이다. 하지만, 그 역은 성립하지 않는다. 예를 들어, 27은 월요일-토요일 소수이지만, 소수는 아니다.</p>

<p>
	어떤 월요일-토요일 숫자의 월요일-토요일 약수 중에서 월요일-토요일 소수인 것을 월요일-토요일 소인수라고 한다. 예를 들어, 27은 216의 월요일-토요일 소인수이다. (216 = 27 * 8)</p>

<p>
	1보다 큰 월요일-토요일 솟자는 하나 또는 그 이상의 월요일-토요일 소수의 곱으로 나타낼 수 있다. 이러한 표현은 유일하지 않다. 예를 들어, 216 = 6 * 6 * 6 = 8 * 27이다.</p>

<p>
	월요일-토요일 숫자가 주어졌을 때, 월요일-토요일 소인수를 모두 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, 월요일-토요일 수가 주어진다. 이 수는 1보다 크고, 300000보다 작다. 입력의 마지막 줄에는 1이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	입력으로 주어진 월요일-토요일 숫자에 대해서, 그 숫자를 출력하고, ":"을 출력한 다음에 월요일-토요일 소인수를 오름차순으로 출력한다. 모든 월요일-토요일 소인수 앞에는 공백을 한 칸 출력해야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','205920
262144
262200
279936
299998
1
','205920: 6 8 13 15 20 22 55 99
262144: 8
262200: 6 8 15 20 50 57 69 76 92 190 230 475 575 874 2185
279936: 6 8 27
299998: 299998
','MATH'),
                                                                                                                (832,'BAEKJOON','https://www.acmicpc.net/problem/4994',4994,'배수 찾기','1초','128 MB',13,'<p>양의 정수 n이 주어졌을 때, n의 배수 중에서 0과 1로만 이루어진 m을 찾는 프로그램을 작성하시오. n은 200을 넘지 않고, m은 0보다 큰 양의 정수이며, 100자리를 넘지 않아야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 줄에는 n (1 ≤ n ≤ 200)이 주어진다. 입력의 마지막 줄에는 0이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어지는 각각의 n마다 m을 출력한다. m의 길이는 100을 넘지 않으며, 가능한 경우가 여러 가지라면 아무거나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
6
19
0
','10
100100100100100100
111111111111111111
','MATH'),
                                                                                                                (829,'BAEKJOON','https://www.acmicpc.net/problem/4998',4998,'저금','1초','128 MB',4,'<p>상근이는 은행에 가서 통장을 만들고 N원을 저금했다. 상근이는 이 통장에 입금이나 출금을 하지 않았다.</p>

<p>은행은 통장을 만든지 1년이 지날때마다 상근이의 통장에 저금되어 있는 돈의 B%만큼을 이자로 적립해준다.</p>

<p>상근이는 몇 년이 지나면 통장에 저금되어 있는 돈이 M원을 넘을지 궁금해졌다.&nbsp;</p>

<p>N,M,B가 주어졌을 때, 몇 년이 지나야 하는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트는 한 줄로 이루어져 있고, N, B, M이 주어진다. M은 항상 N보다 크다. N과 M은 항상 백만보다 작거나 같은 수이고, 음수 또는 0이 아니다. B는 50보다 작거나 같으며, 양수이다. 모든 수는 소수점 둘째자리까지 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, M원을 넘게 만들려면 몇 년이 걸리는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','200.00 6.5 300
500 4 1000.00
','7
18
','MATH'),
                                                                                                                (838,'BAEKJOON','https://www.acmicpc.net/problem/5000',5000,'빵 정렬','1초','128 MB',18,'<p>상근이는 빵집에서 일한다. 상근이의 퇴근하기 전에 하는 마지막 업무는 빵을 사장이 원하는 순서대로 정렬하는 것이다.</p>

<p>최근에 상근이는 선영이에게 신기한 기술을 하나 배웠다. 이제 상근이는 기술을 이용해 서로 인접해 있는 빵 세 개를 동시에 주걱으로 던질 수 있다. 놀라운 점은 빵이 땅으로 내려올 때는 가장 오른쪽에 있던 빵이 가장 왼쪽으로 가고, 나머지 빵은 한 칸씩 오른쪽으로 이동하게 된다는 점이다. 즉, 빵의 순서가 [1,2,3,4]일 때, [2,3,4]를 주걱을 이용해서 던지면, 빵이 땅에 내려온 후의 순서는 [1,4,2,3]이 되는 것이다.</p>

<p>이제 상근이가 퇴근할 시간이다. 상근이의 앞에는 지금 빵이 놓여져 있다. 지금 놓여져있는 빵의 순서와 사장이 원하는 순서가 주어졌을 때, 선영이에게 배운 기술만을 사용해서 빵을 정렬할 수 있는지 없는지를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 빵의 개수 n (3 ≤ n ≤ 100,000)이 주어진다. 둘째 줄에는 빵의 현재 순서가 주어지고, 셋째 줄에는 사장이 원하는 빵의 순서가 주어진다. 빵은 1부터 n까지 숫자로 나타낼 수 있다. 두 빵의 번호가 같은 경우는 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>만약, 상근이가 선영이에게 배운 기술만을 사용해서 사장이 원하는 순서를 만들 수 있으면 "Possible"을, 불가능하면 "Impossible"을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 3 4 2
4 3 2 1
','Possible
','MATH'),
                                                                                                                (839,'BAEKJOON','https://www.acmicpc.net/problem/5010',5010,'수화물','1초','128 MB',18,'<p>상근이는 공항에서 수화물 찾는 곳의 원형 컨베이어 벨트에 짐이 충돌하지 짐을 놓는 일을 하고 있다. 모든 짐은 직선 컨베이어 벨트를 이용해서 운반되어 원형 컨베이어 벨트로 떨어지게 된다. 상근이는 직선 컨베이어 벨트의 속도를 조절해서 짐이 서로 충돌하지 않게 조절한다.&nbsp;</p>

<p>상근이는 직선 컨베이어 벨트의 속도를 고정해놓은 다음 화장실을 다녀오려고 한다. 직선 컨베이어 벨트에는 센서가 있어, 상근이는 모든 짐의 위치를 알고 있다. 짐이 충돌하지 않는 직선 컨베이어 벨트의 최대 속도를 구하는 프로그램을 작성하시오.</p>

<p>원형 컨베이어 벨트는 1m/s 속도로 이동한다. 짐이 원형 컨베이어 벨트에 떨어졌을 때, 1m 내에 짐이 있다면, 그 짐과 충돌한다. 중간에 사람들이 짐을 집어갈 수 있지만, 어떤 짐을 집어가는지는 알 수 없기 때문에, 짐을 가져가는 경우는 없다고 가정한다. 직선 컨베이어 벨트는 0.1m/s와 10m/s 사이의 속도로 움직일 수 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 짐의 수 N과 원형 컨베이어 벨트의 길이 L (1 ≤ N ≤ L ≤ 1000)이 주어진다. 둘째 줄에는 짐의 위치 (단위: 미터) x<sub>i</sub>가 주어진다. (0 ≤ x<sub>i</sub> ≤ 1000) x<sub>i</sub>는 소수점 둘째자리 까지 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>모든 짐이 충돌하지 않는 최대 속도 v (단위: m/s)를 출력한다. 그러한 속도가 없는 경우에는 "no fika"를 출력한다. 정답과 절대 오차가 최대 10<sup>-9</sup>인 경우에 정답이다.</p>

<p>v가 정답인 경우에, 구간 [v-10<sup>-9</sup>, v]에 해당하는 속도도 올바른 정답이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 3
0.00 2.00
','2
','MATH'),
                                                                                                                (833,'BAEKJOON','https://www.acmicpc.net/problem/5019',5019,'홀수, 짝수, 그리고 창영','1초','128 MB',18,'<p>홀수와 짝수는 오래된 소수 게임을 하면서 즐거운 시간을 보내고 있었어요.</p>

<p>이 게임은 임의의 자연수로 시작해요. 그 다음, 턴을 번갈아 가면서 1을 더하거나 소수로 나눌 수 있어요. 이때, 결과는 항상 자연수이어야 해요. 1을&nbsp;만드는 사람이 게임을 이기게 되요.</p>

<p>어느 화창한 날이었어요. 홀수와 짝수에게 새 친구 창영이가 생겼어요. 이제, 셋이서 게임을 하기 위해 게임의 규칙을 확장하려고 해요.</p>

<p>이제 게임을 이기면 점수를 얻어요. 각 사람이 얻는 점수는 게임을 하는 도중에 자신이 만든 가장 작은 숫자에요. 만약 자신의 턴이 돌아오지 않았는데 게임이 끝났다면, 시작한 숫자가 자신의 점수가 되요.</p>

<p>게임의 최종 승자는 각 게임에서 얻은 점수의 합이 가장 작은 사람이에요. 홀수와 짝수, 그리고 창영이는 싸우기 싫어요. 그래서 그들은 자신의 점수를 작게 만드는 것에만 초점을 맞추기로 했어요. 또, 같은 점수를 만들 수 있게 하는 수가 여러 개일 때, 그러한 숫자 중 가장 작은 수를 골라요.</p>

<p>턴은 항상 홀수 -> 짝수 -> 창영 -> ... 와 같은 식으로 진행되요. 하지만, 시작하는 사람은 바뀔 수도 있어요.</p>

<p>각 게임을 시작하는 사람과 그 사람이 가장 처음 고른 숫자가 입력으로 주어져요. 홀수, 짝수, 그리고 창영이가 게임을 항상 최적의 방법(optimal)로 진행할 때, 최종 점수를 구하는 프로그램을 작성해 보세요.</p>

<p>예를 들어, 짝수가 먼저 시작하고, 시작하는 숫자가 15라고 해요. 그럼 짝수는 16, 창영이는 8, 홀수는 4, 짝수는 2, 창영이는 1을 만들어요. 그럼 최종 점수는 홀수 4점, 짝수 2점, 창영 1점이 되요.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 홀수, 짝수, 그리고 창영이가 그날 밤에 진행한 게임의 수 n이 주어진다. (1 ≤ n ≤ 1000)</p>

<p>다음 n개 줄에는 각 게임을 시작한 사람과 시작한 숫자가 주어진다. 홀수가 먼저 시작한 경우에는 O, 짝수는 E, 창영이는 I로 주어지며, 시작한 숫자는 [1, 10000]에 포함된다. (시작 숫자가 1인 경우에는 모두 1점을 받게 된다)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 모든 게임을 하고 난 이후에 홀수, 짝수, 창영이의 최종 점수를 순서대로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
O 13
I 14
E 15
','6 29 16
','MATH'),
                                                                                                                (841,'BAEKJOON','https://www.acmicpc.net/problem/5025',5025,'낙서','1초','128 MB',18,'<p><img alt="" src=https://www.acmicpc.net/upload/images/doodle.png" style="float:right; height:220px; width:279px">상근이의 취미는 두들이다. 두들을 하려면 모눈종이가 필요하다. 두들은 가장 왼쪽 위 칸 (0,0)에서 시작한다. 매번 칸에 방문할 때 마다 상근이는 칸에 X를 채운다. (0,0)을 채운 다음에는 한 칸 오른쪽, 아래 (1,1)로 이동해서 X를 채운다. 이렇게 채워나가다가 종이의 모서리를 만나면, 반대방향으로 진행하고, 시작점으로 돌아올때까지 계속해서 X를 표시한다.</p>

<p>종이의 크기가 주어졌을 때, X를 표시한 서로 다른 칸의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 n(1 ≤ n ≤ 4000)이 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, 모눈종이의 높이와 너비(칸의 수)가 주어진다. 두 숫자는 모두 2보다 크거나 같고, 20000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스 마다, X를 채운 서로 다른 칸의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
11 3
5 7
5 8
','11
12
20
','MATH'),
                                                                                                                (835,'BAEKJOON','https://www.acmicpc.net/problem/5026',5026,'박사 과정','1초','128 MB',4,'<p>동혁이는 박사 학위 논문을 쓰던 중 두 수를 더하는 방법을 까먹었다. 동혁이는 덧셈 문제와 컴퓨터 과학 문제로 이루어진 문제지를 풀어야 군면제를 받을 수 있다.</p>

<p>문제지의 덧셈 문제는 "a+b"와 같은 형식이고, 컴퓨터 과학 문제는 "P=NP" 하나이다. 동혁이의 문제지가 주어졌을 때, 답을 모두 구하는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 문제의 개수 N이 주어진다. (1 ≤ N ≤ 1000) 다음 N개 줄에는 "a+b"형식의 덧셈 문제나 "P=NP"가 주어진다. a,b ∈ [0,1000]이며 a와 b는 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>P=NP가 문제인 경우에는 skipped를, 덧셈 문제인 경우에는 덧셈한 결과를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
2+2
1+2
P=NP
0+0
','4
3
skipped
0
','MATH'),
                                                                                                                (836,'BAEKJOON','https://www.acmicpc.net/problem/5032',5032,'탄산 음료','1초','128 MB',4,'<p>준민이는 탄산 음료를 좋아한다. 탄산 음료를 사느라 돈을 다 써버렸기 때문에, 이제 준민이는 가진 돈이 없어 탄산 음료를 사먹을 수 없다.</p>

<p>준민이는 항상 법을 지키며 사는 사람이기 때문에, 아무리 탄산 음료가 먹고 싶어도 훔치지 않는다. 따라서, 법적으로 문제가 없는 방법으로 탄산 음료를 구매할 것이다.</p>

<p>마침 빈 병을 특정 개수만큼 가져가면, 새 병으로 바꾸어주는 이벤트가 진행중이다. 준민이는 길에서 빈 병을 열심히 찾은 뒤, 탄산 음료를 먹으려고 한다.</p>

<p>준민이가 현재 가지고 있는 빈 병의 수와 길에서 발견한 빈 병의 수, 새 병으로 바꾸는데 필요한 빈 병의 수가 주어졌을 때, 준민이가 탄산 음료를 몇 개 먹을 수 있는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 준민이가 가지고 있는 빈 병의 수 e, 그날 발견한 빈 병의 수 f, 새 병으로 바꾸는데 필요한 빈 병의 개수 c가 주어진다. (e < 1000, f < 1000, 1 < c < 2000) e, f, c는 모두 음이 아닌 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 준민이가 탄산 음료를 몇 개나 먹을 수 있는지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','9 0 3
','4
','MATH'),
                                                                                                                (843,'BAEKJOON','https://www.acmicpc.net/problem/5043',5043,'정말 좋은 압축','1초','128 MB',5,'<p>시험기간이 되면, 평소에 하지 않는 일을 하는 사람들이 많이 생긴다. 상근이는 이번 시험기간에 환상적인 압축 알고리즘을 만들었다.&nbsp;</p>

<p>상근이의 알고리즘을 이용해서 파일 N개를 압축하면, 압축 후의 비트가 최대 b가 된다. 이런 압축 알고리즘이 존재한다는 것이 믿기 힘들지만, 이론적으로 이러한 알고리즘이 가능한지 알아내는 프로그램을 작성하시오.</p>

<p>압축하려고 하는 파일은 N개이며, 각 파일은 1000 비트로 이루어져 있다. 두 파일이 같은 경우는 없다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 b가 주어진다. (1 ≤ N ≤ 10<sup>15</sup>, 0 ≤ b ≤ 50)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>파일 N개를 압축해서 각 파일의 비트길이를 최대 b로 만들 수 있으면 "yes", 없으면 "no"를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','13 3
','yes
','MATH'),
                                                                                                                (837,'BAEKJOON','https://www.acmicpc.net/problem/5051',5051,'피타고라스의 정리','1초','128 MB',21,'<p>상근이는 삼각형을 지나칠 정도로 좋아한다. 삼각형 중에서도 직각삼각형을 좋아한다.</p>

<p>직각삼각형은 세 변의 길이가 양의 정수 a, b, c일 때, a ≤ b와 a<sup>2</sup>+b<sup>2</sup> = c<sup>2</sup>을 만족하는 삼각형을 말했다.</p>

<p>학교에서 나머지 연산을 배운 상근이는 직각삼각형의 세 변의 관계를 나타내는 피타고라스의 정리에 나머지 연산을 적용해보기로 했다.</p>

<p>1보다 크거나 같고, n-1보다 작거나 같은 양의 정수 a, b, c가 있을 때, a ≤ b와 a<sup>2</sup>+b<sup>2</sup> ≡ c<sup>2</sup> (mod n) 을 만족하는 것의 개수를 세려고 한다.</p>

<p>n이 주어졌을 때, 나머지 연산을 적용한 피타고라스의 정리를 만족하는 a, b, c가 몇 개 있는지 구하는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n이 주어진다. (2 ≤ n ≤ 500,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 입력으로 주어진 n으로 나머지 연산을 했을 때, 피타고라스의 정리를 만족하는 a, b, c의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7
','18
','MATH'),
                                                                                                                (850,'BAEKJOON','https://www.acmicpc.net/problem/5054',5054,'주차의 신','1초','128 MB',4,'<p><img alt="" src=https://www.acmicpc.net/upload/images/parking.png" style="float:right; height:149px; width:147px">선영이는 쇼핑하러 긴 도로에 자주 간다. 선영이는 주차를 세상에서 가장&nbsp;귀찮아 하기 때문에, 아무데나 주차를 한다. 주차를 한 후에는 가려고 했던 상점으로 걸어 간다.</p>

<p>어느 날, 선영이는 다리가 너무 아파서 병원에 갔다. 의사는 선영이에게 되도록 조금 걷거나, 쇼핑을 하지 말라고 했다. 선영이는 쇼핑을 버릴 수 없다. 그녀의 특기를 발휘해서 가장 좋은 주차 자리를 찾으려고 한다.</p>

<p>긴 도로는 일직선이다. 또, 모든 상점의 위치는 정수 좌표를 가지고 있다. 주차장은 모든 정수 좌표마다 하나씩 있으며, 선영이를 위해 항상 비어있다. 선영이는 주차비를 아끼기 위해서 쇼핑을 마치기 전 까지는 주차한 차를 이동시키지 않을 것이다. 선영이는 힘이 매우 세기 때문에, 자신이 쇼핑한 물건을 모두 들지 못하는 경우는 없다. 가려고 계획한 상점은 모두 방문해야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 t가 주어진다. (1 ≤ t ≤ 100) 모든 테스트 케이스는 두 줄로 이루어져 있다. 첫째 줄에는 선영이가 방문할 상점의 수 n이 주어지며 (1 ≤ n ≤ 20), 둘째 줄에는 상점의 위치가 주어진다. (0 ≤ xi ≤ 99)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>선영이가 가려고 했던 모든 상점을 방문하고 차로 돌아오기 위해 걸어야 하는 거리의 최솟값을 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
4
24 13 89 37
6
7 30 41 14 39 42
','152
70
','MATH'),
                                                                                                                (848,'BAEKJOON','https://www.acmicpc.net/problem/5073',5073,'삼각형과 세 변','1초','128 MB',3,'<p>삼각형의 세 변의 길이가 주어질 때 변의 길이에 따라 다음과 같이 정의한다.</p>

<ul>
	<li>Equilateral : &nbsp;세 변의 길이가 모두 같은 경우</li>
	<li>Isosceles : 두 변의 길이만 같은 경우</li>
	<li>Scalene : 세 변의 길이가 모두 다른 경우</li>
</ul>

<p>단 주어진 세 변의 길이가 삼각형의 조건을 만족하지 못하는 경우에는 "Invalid" 를 출력한다. 예를 들어 6, 3, 2가 이 경우에 해당한다. 가장 긴 변의 길이보다 나머지 두 변의 길이의 합이 길지 않으면 삼각형의 조건을 만족하지 못한다.</p>

<p>세 변의 길이가 주어질 때 위 정의에 따른 결과를 출력하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>각 줄에는 1,000을 넘지 않는 양의 정수 3개가 입력된다. 마지막 줄은 0 0 0이며 이 줄은 계산하지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 입력에 맞는 결과&nbsp;(Equilateral, Isosceles, Scalene, Invalid) 를 출력하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7 7 7
6 5 4
3 2 5
6 2 6
0 0 0
','Equilateral
Scalene
Invalid
Isosceles
','MATH'),
                                                                                                                (824,'BAEKJOON','https://www.acmicpc.net/problem/5086',5086,'배수와 약수','1초','128 MB',3,'<p>4 × 3 = 12이다.</p>

<p>이 식을 통해 다음과 같은 사실을 알 수 있다.</p>

<p>3은 12의 약수이고, 12는 3의 배수이다.</p>

<p>4도 12의 약수이고, 12는 4의 배수이다.</p>

<p>두 수가 주어졌을 때, 다음 3가지 중 어떤 관계인지 구하는 프로그램을 작성하시오.</p>

<ol>
	<li>첫 번째 숫자가 두 번째 숫자의 약수이다.</li>
	<li>첫 번째&nbsp;숫자가 두 번째 숫자의 배수이다.</li>
	<li>첫 번째 숫자가 두 번째 숫자의 약수와 배수 모두 아니다.</li>
</ol>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 10,000이 넘지않는 두 자연수로 이루어져 있다. 마지막 줄에는 0이 2개 주어진다. 두 수가 같은 경우는 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 첫 번째 숫자가 두 번째 숫자의 약수라면 factor를, 배수라면 multiple을, 둘 다 아니라면 neither를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8 16
32 4
17 5
0 0
','factor
multiple
neither
','MATH'),
                                                                                                                (862,'BAEKJOON','https://www.acmicpc.net/problem/5178',5178,'시간 초과','1초','128 MB',18,'<p>지금껏 문제를 풀면서 시간 초과 메시지를 본 적이 있을 것이다.</p>

<p>시간 초과의 이유엔 여러 가지가 있지만, 주로 제출한 코드의 시간복잡도가 문제에서 요구하는 최대 한도의 시간복잡도를 상회했을 때 발생한다.</p>

<p>이번 문제를 풀면서 시간복잡도에 대한 이해도를 높이고 시간 초과 메시지를 덜 받도록 해보자.</p>

<p>어떤 소스 코드가 주어지면 이 소스 코드의 시간복잡도를 계산하면 된다.</p>

<p>물론 그냥 계산하기엔 너무 어려우므로, 다음과 같은 간소화된 방식으로 계산해보도록 하자.</p>

<p>프로그램은 단 네 개의 명령어만을 가진다고 가정한다. 목록은 아래와 같다.</p>

<ul>
	<li>basic : 사칙연산 혹은 값 할당 등의 기초적인 코드</li>
	<li>loop : 반복문의 시작</li>
	<li>endloop : 반복문의 끝</li>
	<li>endprogram : 프로그램의 종료</li>
</ul>

<p>프로그램 분석은 아래의 규칙에 따라 시행한다.</p>

<ul>
	<li>위에 주어진 네가지 명령어만이 프로그램에 존재한다.</li>
	<li>loop문은 항상 하나의 전달 인자를 가지며, 대응되는 하나의 endloop문(loop의 시작 이후로 만나는 첫 endloop문)과 묶여 하나의 반복문이 된다.</li>
	<li>loop의 전달 인자는 x, y, 또는 양의 정수가 될 수 있으며, x, y는 상수이다. 프로그램 실행 도중 재할당되지 않는다. 이 전달인자만큼 루프를 반복하게 된다.</li>
	<li>만일 어떤 loop문 내에 basic 코드가 하나도 존재하지 않는다면 의미없는 루프이므로 전달인자의 값에 관계없이 그 loop를 즉시 종료하게 된다.</li>
	<li>만일 어떤 loop문 내에 basic 코드가 여러 개 존재하더라도 한 개의 basic 코드가 있는 것과 같이 생각해도 된다.</li>
	<li>basic 코드는 실행에 상수 시간이 걸린다.</li>
</ul>

<p>시간복잡도는 basic 구문의 실행 횟수를 함수로 나타낸 뒤 빅오 표기법을 사용하여 분석한다.</p>

<p>빅오 표기법의 정의는 다음과 같다.</p>

<p>어떤 임의의 양의 상수 c와 d를 잘 골라, 1 이상인 모든 x에 대하여 c*g(x) ≤ f(x) ≤ d*g(x)를 만족하게 할 수 있다면 f(x)의 빅오 표기는 O(g)이다.</p>

<p>좀 더 쉽게 설명하면, 모든 상수부는 떼어내버릴 수 있다는 의미이다.</p>

<p>예를 들면 4x <sup>3</sup>의 빅오 표기는 x<sup>3</sup>가 된다.</p>

<p>또한, 어떤 항보다 낮은 차수를 가지는 항들은 통째로 제거하는 것이 가능하다.</p>

<p>예를 들어, x <sup>3</sup> + x<sup>2</sup>의 빅오 표기는 x<sup>3</sup>이 되며, x<sup>2</sup> + 7의 빅오 표기는 x<sup>2</sup>가 된다.</p>

<p>하지만 여러 서로 다른 변수가 섞여있다면 다른 항보다 작다고 확신할 수 없는 항들은 모두 표기해야 한다.</p>

<p>예를 들어, x <sup>2</sup>y + y<sup>2</sup>x + xy + x<sup>2</sup> 의 빅오 표기는 x<sup>2</sup>y + y<sup>2</sup>x가 되며, x<sup>2</sup> + 17xy + y<sup>2</sup> 의 빅오 표기는 x<sup>2</sup> + y<sup>2</sup>이 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 수 K가 주어진다.</p>

<p>각 테스트 케이스는 빈 줄로 구분한다.</p>

<p>프로그램은 문제에서 설명한 네 가지의 명령어로만 구성되어 있으며, endprogram은 항상 가장 바깥의 loop문보다 더 아래에 단 하나 존재한다.</p>

<p>loop와 전달인자 x 사이에는 단 한개의 공백이 있으며, 이 경우를 제외하고는 프로그램 내에 어떤 공백이나 이상한 문자가 주어지는 경우는 없다.</p>

<p>loop문의 최대 중첩 횟수는 50회이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 Data Set K: 를 출력한 뒤, 입력으로 주어진 프로그램의 시간복잡도를 출력한다.</p>

<p>각 항은 x의 차수가 높은 것부터, x의 차수가 같다면 y의 차수가 높은 것부터 차례대로 출력한다.</p>

<p>각 항을 출력할 땐 최대한 축약해야 한다. 예를 들어, x^1y^1을 출력하는 대신에 xy를 출력해야 하며, x^1y^0을 출력하는 대신에 x를 출력해야 한다.</p>

<p>그 외의 출력 형식에 대한 내용은 예제 출력을 보면 된다.</p>

<p>각 테스트 케이스의 사이엔 빈 줄을 하나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
loop x
endloop
endprogram

basic
basic
endprogram

loop y
basic
loop y
basic
basic
endloop
endloop
loop x
loop y
basic
endloop
loop x
basic
endloop
endloop
endprogram
','Data Set 1:
0

Data Set 2:
1

Data Set 3:
x^2 + y^2
','MATH'),
                                                                                                                (868,'BAEKJOON','https://www.acmicpc.net/problem/5218',5218,'알파벳 거리','1초','128 MB',4,'<p>길이가 같은 두 단어가 주어졌을 때, 각 단어에 포함된 모든 글자의 알파벳 거리를 구하는 프로그램을 작성하시오.</p>

<p>두 글자 x와 y 사이의 알파벳 거리를 구하려면, 먼저 각 알파벳에 숫자를 할당해야 한다. A=1, B = 2, ..., Z = 26. 그 다음 y ≥ x인 경우에는 y-x, y < x인 경우에는 (y+26) - x가 알파벳 거리가 된다.</p>

<p>예를 들어, B와 D 사이의 거리는 4 - 2 = 2이고, D와 B 사이의&nbsp;거리는 (2+26) - 4 = 24이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 수 (< 100)가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, 두 단어가 공백으로 구분되어져 있다. 단어의 길이는 4보다 크거나 같고, 20보다 작거나 같으며, 알파벳 대문자로만 이루어져 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스 마다 각 글자의 알파벳 거리를 공백으로 구분해 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
AAAA ABCD
ABCD AAAA
DARK LOKI
STRONG THANOS
DEADLY ULTIMO
','Distances: 0 1 2 3
Distances: 0 25 24 23
Distances: 8 14 19 24
Distances: 1 14 9 25 1 12
Distances: 17 7 19 5 1 16
','MATH'),
                                                                                                                (881,'BAEKJOON','https://www.acmicpc.net/problem/5355',5355,'화성 수학','1초','128 MB',4,'<p>겨울 방학에 달에 다녀온 상근이는 여름 방학 때는 화성에 갔다 올 예정이다. (<a href="http://www.acmicpc.net/problem/3996">3996번</a>) 화성에서는 지구와는 조금 다른 연산자 @, %, #을 사용한다. @는 3을 곱하고, %는 5를 더하며, #는 7을 빼는 연산자이다. 따라서, 화성에서는 수학 식의 가장 앞에 수가 하나 있고, 그 다음에는 연산자가 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 다음 줄에는 화성 수학식이 한 줄에 하나씩 주어진다. 입력으로 주어지는 수는 정수이거나 소수 첫째 자리까지 주어지며, 0 이상 100 이하이다. 연산자는 최대 3개 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 화성 수학식의 결과를 계산한 다음에, 소수점 둘째 자리까지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
3 @ %
10.4 # % @
8 #
','14.00
25.20
1.00
','MATH'),
                                                                                                                (882,'BAEKJOON','https://www.acmicpc.net/problem/5361',5361,'전투 드로이드 가격','1초','128 MB',3,'<p>상근이는 망가진 전투 드로이드를 고치려고 하고 있다. 전투 드로이드의 각 부품의 가격은 다음과 같다.</p>

<table class="table table-bordered" style="width:40%">
	<tbody>
		<tr>
			<th style="width:20%">블래스터 라이플</th>
			<td style="width:20%">\$350.34</td>
		</tr>
		<tr>
			<th>시각 센서</th>
			<td>\$230.90</td>
		</tr>
		<tr>
			<th>청각 센서</th>
			<td>\$190.55</td>
		</tr>
		<tr>
			<th>팔</th>
			<td>\$125.30</td>
		</tr>
		<tr>
			<th>다리</th>
			<td>\$180.90</td>
		</tr>
	</tbody>
</table>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수가 주어진다. 각 테스트 케이스는 음이 아닌 정수 다섯 개(A B C D E)로 이루어져 있다.</p>

<ul>
	<li>A: 필요한 블래스터 라이플의 개수</li>
	<li>B: 필요한 시각 센서의 개수</li>
	<li>C: 필요한 청각 센서의 개수</li>
	<li>D: 필요한 팔의 수</li>
	<li>E: 필요한 다리의 수</li>
</ul>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스 마다, 입력으로 주어진 부품을 모두 구매하는데 필요한 비용을 소수점 둘째 자리까지 출력한다. 달러 표시도 출력해야 한다. 정답은 1억보다 작거나 같다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
20 10 14 3 9
19 17 12 8 10
11 9 8 22 33
','$13987.50
$15679.76
$16182.54
','MATH'),
                                                                                                                (888,'BAEKJOON','https://www.acmicpc.net/problem/5376',5376,'소수를 분수로','1초','128 MB',10,'<p>
	유리수 분수를 소수로 나타내면, 소수점 아래 자리가 유한 개인 경우(1/8 = 0.125)와 어떤 자리에서부터 일정한 숫자가 한없이 되풀이 되는 경우(1/11 = 0.090909...)가 있다.</p>

<p>
	소수를 입력받은 뒤, 분수로 나타내는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">

<p>
	첫째 줄에 테스트 케이스의 개수가 주어진다. 테스트 케이스의 개수는 100개를 넘지 않는다. 각 테스트 케이스는 한 줄에 소수가 하나씩 주어진다.</p>

<p>
	소수의 첫 두 자리는 "0."이다. 그 다음에는 숫자 0개~6개가 주어진다. 그 다음, 길이가 1과 9사이면서 괄호로 감싸져있는 수가 주어질 수도 있다. 이 수는 무한히 반복되는 자리를 의미한다.</p>

<p>
	항상 0이 아닌 자리가 하나는 주어지며, 괄호 안에 주어지는 수는 0이나 9로만 이루어져 있지 않다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대해서, 입력으로 주어진 소수의 분수 표현을 출력한다. (분모와 분자는 서로소이어야 한다)</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
0.5
0.(3)
0.6(142857)
','1/2
1/3
43/70
','MATH'),
                                                                                                                (889,'BAEKJOON','https://www.acmicpc.net/problem/5389',5389,'제곱근 작도','1초','128 MB',10,'<p>보통 작도는 눈금없는 자와 컴퍼스를 사용한다.</p>

<p>컴퍼스가 있기 때문에 기준 길이(길이 1)의 임의의 정수배는 손쉽게 작도할 수 있다.</p>

<p>그리고 더 나아가 자연수의 제곱근을 작도할 수 있다. 예를 들어 √33의 길이를 가지는 선분을 작도한다고 해보자. 먼저 수평선 위에 한 점 X를 잡고 X를 끝으로 하는 길이 4의 수평선과 수직한 선분을 작도한다. 이 선분의 끝 점을 H라고 하자. H를 중심으로 하는 길이 7의 원을 작도 한 뒤 수평선과 만나 생기는 교점 중 하나를 Y라고 하면 피타고라스 정리에 의해 선분 XY의 길이는 √33이 된다.</p>

<p><img src="/userupload/ZZangZZang/201501/f79fe83d3dd1dca642b247bfdc94cdb6.png" style="width: 387.5px; height: 285.833px;"></p>

<p>&nbsp;</p>

<p>예시로 든 방법을 사용해서 √N을 작도하려고 한다. 필요한 원의 반지름과 선분의 길이를 구하자. 쓸 수 있는 길이가 여러 가지가 있다면 그들 중 최솟값을 사용한다.</p>

<p>(길이는 0이 되어도 된다.)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 테스트 케이스의 개수가 주어진다. 다음 줄부터 각각의 테스트 케이스에 대해 정수 1 ≤ N ≤ 10<sup>9</sup>&nbsp;이 한 줄마다 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스에 대해 한 줄에 두 개의 음이 아닌 정수를 출력해야 한다.</p>

<p>두 정수는 각각&nbsp;선분의 길이와 원의 반지름을 나타낸다. 답이 여러 가지면 최솟값을 출력한다. 답이 존재하지 않는 경우 "IMPOSSIBLE"을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
33
16
50
101
','4 7
0 4
IMPOSSIBLE
50 51
','MATH'),
                                                                                                                (887,'BAEKJOON','https://www.acmicpc.net/problem/5393',5393,'콜라츠','1초','128 MB',8,'<p>
	상근이는 3n+1으로 유명한 문제인 콜라츠 추측을 풀기 위해 나무판와 밧줄을 구매했다. 나무판의 길이는 무한히 크고, 왼쪽에서 오른쪽으로 1m 간격으로 구멍이 뚤려져 있다. i번째 구멍은 자연수 i를 의미한다. 모든 짝수번째 구멍 m에는 m번째와 m/2번째 구멍을 연결하는 밧줄이 연결되어 있다. 또, 모든 홀수번째 구멍 n에는 n번째와 3n+1번째 구멍을 연결하는 밧줄이 연결되어 있다.</p>

<p>
	상근이는 자신의 작품을 들고 신입생 환영회에 가서 홍보를 하려고 한다. 하지만, 나무판의 길이가 무한대이기 때문에, 들고갈 방법이 도저히 생각나지 않았다. 따라서, 상근이는 밧줄을 적절히 잘라서 처음 N개 구멍만 들고가려고 한다. 이때, 밧줄을 최소 몇 개만 자르면 처음 N개 구멍만 있는 나무판을 들고 갈 수 있을까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	첫째 줄에 테스트 케이스의 개수가 주어진다. 각 테스트 케이스는 문제에서 설명한 N이 포함된 한 줄로 이루어져 있다. (0 ≤ N ≤ 10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대해서, 밧줄을 최소 몇 개 자르면 되는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
12
240
3600
','10
200
3000
','MATH'),
                                                                                                                (896,'BAEKJOON','https://www.acmicpc.net/problem/5425',5425,'자리합','1초','128 MB',15,'<p>구간 [a,b]의 자리 합이란 그 구간에 포함되는 모든 숫자의 각 자리를 합한 것이다. 예를 들어, [28,31]의 자리합은 아래와 같다.</p>

<p>2+8 + 2+9 + 3+0 + 3+1 = 28</p>

<p>두 수 a와 b가 주어졌을 때, [a,b]의 자리 합을 구하는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. T는 최대 100이다. 각 테스트 케이스는 한 줄로 이루어져 있고, a와 b가 주어진다. (0 ≤ a ≤ b ≤10<sup>15</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, [a,b]의 자리 합을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
0 10
28 31
1234 56789
','46
28
1128600
','MATH'),
                                                                                                                (897,'BAEKJOON','https://www.acmicpc.net/problem/5426',5426,'비밀 편지','1초','128 MB',6,'<p>선영이는 남자친구를 위해 연애 편지를 썼다. 선영이는 편지가 남들에게 읽히는 것을 막기 위해서 편지를 암호화하려고 한다.</p>

<p>먼저, 편지의 내용을 정사각형에 작성한다. 그 다음, 시계방향으로 90도 회전시킨다. 그 다음, 첫 행부터 마지막 행까지 순서대로 다시 편지를 작성한다. 선영이는 싸이월드 세대이기 때문에, 편지에 띄어쓰기를 쓰지 않는다.</p>

<p>예를 들어, 편지의 내용이 "RosesAreRedVioletsAreBlue"인 경우에, 암호화한 편지는 "eedARBtVrolsiesuAoReerles" 이 된다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/encode.png" style="height:117px; width:324px"></p>

<p>선영이가 암호화한 편지가 주어졌을 때, 원래 내용을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수가 주어진다. 테스트 케이스의 수는 최대 100개이다.</p>

<p>각 테스트 케이스는 한 줄로 이루어져 있으며, 암호화된 편지가 주어진다. 편지는 알파벳 소문자와 대문자로만 이루어져 있으며, 길이는 1보다 크거나 같고, 10,000보다 작거나 같으며, 항상 제곱수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 원래 메시지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
RSTEEOTCP
eedARBtVrolsiesuAoReerles
EarSvyeqeBsuneMa
','TOPSECRET
RosesAreRedVioletsAreBlue
SquaresMayBeEven
','MATH'),
                                                                                                                (900,'BAEKJOON','https://www.acmicpc.net/problem/5431',5431,'책 쌓기','1초','128 MB',14,'<p>선영이는 다양한 크기의 책을 쌓아서 스택 형태로 보관한다. 이런 스택의 가장 위에서부터 크기가 감소하지 않는 순서로 책이 쌓여져 있다면, 스택이 안정된 상태라고 한다. 그렇지 않은 경우에는 스택이 무너질 수도 있다.</p>

<p>선영이는 책이 무너지는 것을 막기 위해서 크기 순으로 스택을 정렬하려고 한다. 선영이는 스택의 중간 (또는 바닥)에서 책을 하나 뺀 다음, 가장 위에 놓는다. 하지만, 빼려고 하는 책의 위에 있는 스택이 안정된 상태이어야 한다.</p>

<p>아래 그림은 3, 4, 1, 2로 쌓여진 책을 크기 순으로 정렬하는 방법이다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/stackbook.png" style="height: 106.667px; width: 397.5px;"></p>

<p>현재 책이 쌓여져 있는 상태가 입력으로 주어졌을 때, 안정된 상태로 책을 쌓기 위해 최소&nbsp;몇 단계가 필요한지 구하는 프로그램을 작성하시오. 위의 그림의 경우에 답은 3이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수가 주어진다. 테스트 케이스의 수는 100보다 작거나 같다.</p>

<p>각 테스트 케이스의 첫째 줄에는 책의 수 n이 주어진다. (1 ≤ n ≤ 50) 다음 줄에는 책의 크기 s<sub>i</sub>가 스택의 맨 위에서부터 순서대로 주어진다. (1 ≤ s<sub>i</sub> ≤ 1000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 필요한 단계의 수의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
4
3 4 1 2
8
3 1 4 1 5 9 2 6
5
1 42 42 42 1000
22
4 1 2 5 6 7 9 10 3 13 17 11 12 14 19 20 22 8 15 16 18 21
','3
53
0
1234567
','MATH'),
                                                                                                                (901,'BAEKJOON','https://www.acmicpc.net/problem/5485',5485,'평균값 수열','5초','256 MB',14,'<p>길이 n+1의 비감소 수열 s<sub>1</sub>,...,s<sub>n+1</sub> (s<sub>i</sub> ≤ s<sub>i+1</sub> for 1 ≤ i ≤ n) 을 생각해보자.</p>

<p>이러한 수열의 "평균값 수열"을 다음과 같이 정의한다 : 1 ≤ i ≤ n에서 m<sub>i</sub> = (s<sub>i</sub> + s<sub>i+1</sub>)/2.</p>

<p>예를 들어, S = {1,2,2,4} 일 때 M = {3/2,2,3}이다. 이렇듯 평균값 수열은 정수가 아닌 수가 나올 수도 있지만, 이 문제에서는 평균값 수열의 원소가 정수인 경우만 고려하기로 한다.</p>

<p>길이 n의 감소하지 않는 평균값 수열 m<sub>1</sub>,...,m<sub>n</sub>이 주어질때, 해당 수열을 평균값 수열로 가지는 수열 s<sub>1</sub>,...,s<sub>n+1</sub>의 개수를 세어라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 평균값 수열의 길이 n이 주어진다. (2 ≤ n ≤ 5,000,000)</p>

<p>이후 n개의 줄에 평균값 수열 m<sub>i</sub>가 순서대로 주어진다. (0 ≤ m<sub>i</sub> ≤ 1,000,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>주어진 수열을 평균값 수열로 가지는 수열의 개수를 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>다음과 같은 4가지 경우만이 존재한다 : {2,2,8,10} / {1,3,7,11} / {0,4,6,12} / {-1,5,5,13}</p>

				</div>
				</div>','3
2
5
9
','4
','MATH'),
                                                                                                                (902,'BAEKJOON','https://www.acmicpc.net/problem/5522',5522,'카드 게임','1초','256 MB',1,'<p>JOI군은 카드 게임을 하고 있다. 이 카드 게임은 5회의 게임으로 진행되며, 그 총점으로 승부를 하는 게임이다.</p>

<p>JOI군의 각 게임의 득점을 나타내는 정수가 주어졌을 때, JOI군의 총점을 구하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>표준 입력에서 다음과 같은 데이터를 읽어온다.</p>

<ul>
	<li>i 번째 줄(1 ≤ i ≤ 5)에는 정수 A<sub>i</sub>가 적혀있다. 이것은 i번째 게임에서의 JOI군의 점수를 나타낸다.</li>
</ul>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>표준 출력에 JOI군의 총점을 한 줄로 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
2
3
4
5
','15
','MATH'),
                                                                                                                (903,'BAEKJOON','https://www.acmicpc.net/problem/5532',5532,'방학 숙제','1초','128 MB',2,'<p>상근이는 초등학교에 다닐 때, 방학 숙제를 남들보다 먼저 미리 하고 남은 기간을 놀았다. 방학 숙제는 수학과 국어 문제 풀기이다.</p>

<p>방학은 총 L일이다. 수학은 총 B페이지, 국어는 총 A페이지를 풀어야 한다. 상근이는 하루에 국어를 최대 C페이지, 수학을 최대 D페이지 풀 수 있다.</p>

<p>상근이가 겨울 방학동안 숙제를 하지 않고 놀 수 있는 최대 날의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>한 줄에 하나씩 총 다섯 줄에 걸쳐 L, A, B, C, D가 주어진다. (2 ≤ L ≤ 40, 1 ≤ A, B ≤ 1000, 1 ≤ C, D ≤ 100)</p>

<p>항상 방학 숙제를 방학 기간내에 다 할 수 있는 경우만 입력으로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 상근이가 놀 수 있는 날의 최댓값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','20
25
30
6
8
','15
','MATH'),
                                                                                                                (904,'BAEKJOON','https://www.acmicpc.net/problem/5533',5533,'유니크','1초','128 MB',5,'<p>상근이와 친구들은 MT에 가서 아래 설명과 같이 재미있는 게임을 할 것이다.</p>

<p>각 플레이어는 1이상 100 이하의 정수를 카드에 적어 제출한다. 각 플레이어는 자신과 같은 수를 쓴 사람이 없다면, 자신이 쓴 수와 같은 점수를 얻는다. 만약, 같은 수를 쓴 다른 사람이 있는 경우에는 점수를 얻을 수 없다.</p>

<p>상근이와 친구들은 이 게임을 3번 했다. 각 플레이어가 각각 쓴 수가 주어졌을 때, 3번 게임에서 얻은 총 점수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 참가자의 수 N이 주어진다. (2 ≤ N ≤ 200) 둘째 줄부터 N개 줄에는 각 플레이어가 1번째, 2번째, 3번째 게임에서 쓴 수가 공백으로 구분되어 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 플레이어가 3번의 게임에서 얻은 총 점수를 입력으로 주어진 순서대로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<ul>
	<li>플레이어 1 : 0 + 0 + 0 = 0<span class="Apple-tab-span" style="white-space:pre"> </span></li>
	<li>플레이어 2 : 0 + 0 + 92 = 92<span class="Apple-tab-span" style="white-space:pre"> </span></li>
	<li>플레이어 3 : 63 + 89 + 63 = 215<span class="Apple-tab-span" style="white-space:pre"> </span></li>
	<li>플레이어 4 : 99 + 0 + 99 = 198<span class="Apple-tab-span" style="white-space:pre"> </span></li>
	<li>플레이어 5 : 89 + 0 + 0 = 89<span class="Apple-tab-span" style="white-space:pre"> </span></li>
</ul>

				</div>
				</div>','5
100 99 98
100 97 92
63 89 63
99 99 99
89 97 98
','0
92
215
198
89
','MATH'),
                                                                                                                (905,'BAEKJOON','https://www.acmicpc.net/problem/5543',5543,'상근날드','1초','128 MB',2,'<p>상근날드에서 가장 잘 팔리는 메뉴는 세트 메뉴이다. 주문할 때, 자신이 원하는 햄버거와 음료를 하나씩 골라, 세트로 구매하면, 가격의 합계에서 50원을 뺀 가격이 세트 메뉴의 가격이 된다.</p>

<p>햄버거는 총 3종류 상덕<span style="line-height:1.6em">버거, 중덕버거, 하덕버거가 있고, 음료는 콜라와 사이다 두 종류가 있다.</span></p>

<p>햄버거와 음료의 가격이 주어졌을 때, 가장 싼 세트 메뉴의 가격을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 총 다섯 줄이다. 첫째 줄에는 상덕버거, 둘째 줄에는 중덕버거, 셋째 줄에는 하덕버거의 가격이 주어진다. 넷째 줄에는 콜라의 가격, 다섯째 줄에는 사이다의 가격이 주어진다. 모든 가격은 100원 이상, 2000원 이하이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 가장 싼 세트 메뉴의 가격을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','800
700
900
198
330
','848
','MATH'),
                                                                                                                (907,'BAEKJOON','https://www.acmicpc.net/problem/5544',5544,'리그','1초','128 MB',5,'<p>축구 리그에 총 N개의 팀이 소속되어 있고, 1부터 N까지 번호가 매겨져 있다. 이 리그는 모든 조합의 경기가 한 번씩 열린다. 즉, N(N-1)/2 경기가 열리게 된다. 각 경기에서 많은 득점을 한 팀이 이기게 된다. 이긴 팀은 승점 3점을 가져가고, 지는 팀은 0점을 가져간다. 무승부의 경우에는 두 팀이 각각 1점씩 가져가게 된다. 리그 순위는 각 팀이 획득한 승점의 합계로 결정하고, 득실차는 생각하지 않는다. 승점의 합이 동일한 팀의 순위는 가능한 순위 중 가장 높은 것이다.</p>

<p>예를 들어, 4 팀이 리그에 참가한다고 하자. 그럼, 총 4(4-1)/2 = 6경기가 열린다. 결과는 다음과 같다고 하자. 하이픈의 왼쪽 점수는 왼쪽에 있는 팀의 점수이고, 오른쪽 점수는 위쪽에 있는 팀의 점수이다.</p>

<table class="table table-bordered" style="width:54%">
	<thead>
		<tr>
			<th style="width:6%">&nbsp;</th>
			<th style="width:6%">팀 1</th>
			<th style="width:6%">팀 2</th>
			<th style="width:6%">팀 3</th>
			<th style="width:6%">팀 4</th>
			<th style="width:6%">승</th>
			<th style="width:6%">무</th>
			<th style="width:6%">패</th>
			<th style="width:6%">승점</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<th>팀 1</th>
			<td>---</td>
			<td>0 - 1</td>
			<td>2 - 1</td>
			<td>2 - 2</td>
			<td>1</td>
			<td>1</td>
			<td>1</td>
			<td>4</td>
		</tr>
		<tr>
			<th>팀 2</th>
			<td>1 - 0</td>
			<td>---</td>
			<td>1 - 1</td>
			<td>3 - 0</td>
			<td>2</td>
			<td>1</td>
			<td>0</td>
			<td>7</td>
		</tr>
		<tr>
			<th>팀 3</th>
			<td>1 - 2</td>
			<td>1 - 1</td>
			<td>---</td>
			<td>1 - 3</td>
			<td>0</td>
			<td>1</td>
			<td>2</td>
			<td>1</td>
		</tr>
		<tr>
			<th>팀 4</th>
			<td>2 - 2</td>
			<td>0 - 3</td>
			<td>3 - 1</td>
			<td>---</td>
			<td>1</td>
			<td>1</td>
			<td>1</td>
			<td>4</td>
		</tr>
	</tbody>
</table>

<p>승점이 가장 높은 팀 2가 1위가 된다. 그 다음으로 승점이 높은 팀은 팀 1과 팀 4이며, 두 팀의 순위는 2위이다. 마지막으로 승점이 가장 낮은 팀 3은 4위가 된다.</p>

<p>모든 경기의 결과가 주어졌을 때, 각 팀의 순위를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 팀의 수 N (2 ≤ N ≤ 100)가 주어진다. 다음 N(N-1)/2개 줄에는 각 경기의 결과가 주어진다. 경기의 결과는 A B C D와 같이 네 개의 정수로 나타내며, A팀이 C점, B팀이 D점을 획득했음을 의미한다. A와 B는 항상 다르다. 한 경기의 결과가 여러 번 주어지는 경우는 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 총 N줄을 출력한다. i번째 줄에는 팀 i의 순위를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 2 0 1
1 3 2 1
1 4 2 2
2 3 1 1
2 4 3 0
3 4 1 3
','2
1
4
2
','MATH'),
                                                                                                                (906,'BAEKJOON','https://www.acmicpc.net/problem/5552',5552,'걷는 산타클로스','1초','128 MB',17,'<p>작년에 산타클로스는 노원구에 사는 아이들에게 크리스마스 선물을 전달해주는 것을 까먹었다. 큰 상처를 받은 아이들을 위해서 산타클로스는 아이들에게 초콜릿 케이크를 선물하기로 했다. 산타클로스는 다음 크리스마스 선물을 준비해야 하기 때문에, 이동 계획을 생각해야 한다.</p>

<p>노원구는 남북 방향으로 도로가 W개, 동서 방향으로 도로가 H개 있고, 도로는 바둑판 모양이다. 남북 방향 도로는 서쪽부터 1, 2, ..., W로, 동서 방향 도로는 남쪽부터 1, 2, ..., H로 번호가 매겨져 있다. 서쪽에서 x번째 남북 방향 도로와 남쪽에서 y번째 동서 방향 도로가 만나는 교차로는 (x,y)이다. 노원구에는 집이 N개가 있고, 모든 집은 교차로 위에 있다. 산타클로스는 도로만 이용할 수 있고, 인접한 교차로 사이를 이동하는데 걸리는 시간은 1이다.</p>

<p>모든 집에는 아이가 있다. 따라서, 산타클로스는 모든 집에 초콜릿 케이크를 선물해야 한다. 크리스마스가 아니기 때문에, 산타가 루돌프를 타고 집을 이동하는 것은 매우 위험하다. 따라서, 루돌프를 타고 한 교차로에 내린 뒤, 그 위치부터 걸어다니면서 케이크를 선물하기로 했다.</p>

<p>산타는 초콜릿 케이크를 하나만 들 수 있다. 따라서, 어떤 집에 케이크를 선물하면, 다시 루돌프가 있는 교차로로 돌아와야 한다.</p>

<p>산타는 모든 집에 케이크를 선물할 때 드는 시간을 최소로 하려면, 어디에서 내려야 하는지 궁금해졌다. 이때, 마지막 집에 케이크를 선물하고, 다시 루돌프에게 돌아오는 시간은 포함하지 않는다.</p>

<p>집의 위치 정보가 주어졌을 때, 어떤 교차로에 내려야 모든 집에 초콜릿 케이크를 선물하는데 드는 시간이 가장 작아지는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 각 방향 도로의 개수 W와 H가 주어진다. (1 ≤ W,H ≤ 10<sup>9</sup>)</p>

<p>둘째 줄에는 집의 개수 N이 주어진다. (1 ≤ N ≤ 10<sup>5</sup>)</p>

<p>셋째 줄부터 N개 줄에는 집의 위치가 주어진다. 한 교차로에 집이 두 개 이상 있는 경우는 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 모든 집에 케이크를 배달하는데 드는 최소 시간을 출력하고, 둘째 줄에 내려야하는 교차로의 위치를 출력한다. 만약, 그러한 교차로가 여러개라면, 가장 서쪽에 있는 교차로를 출력한다. 또, 그러한 교차로가 여러개라면 가장 남쪽에 있는 교차로를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 4
3
1 1
3 4
5 3
','10
3 3
','MATH'),
                                                                                                                (908,'BAEKJOON','https://www.acmicpc.net/problem/5554',5554,'심부름 가는 길','1초','128 MB',2,'<p>승균이는 매일 학교, PC방, 학원에&nbsp;다닌다. 반복되는&nbsp;일상에 익숙해진 승균이는 이동시간을 단축해서 PC방에 더 오래 머물고 싶었다. 그래서&nbsp;스톱워치를 들고 이동할 때마다&nbsp;기록을 잰 후&nbsp;집에&nbsp;가서&nbsp;분석해보기로 했다.</p>

<p>집에 도착한 승균이는&nbsp;측정한 결과를 보는 데, 전부 초 단위로 기록되어있다! 맨날 놀기만 해서 총 이동 시간이 몇 분 몇 초인지 계산을 못&nbsp;하는 승균이를 도와주자.</p>

<p>하루&nbsp;동안 측정한 결과가 주어지면, 이날의 총 이동 시간이&nbsp;몇 분 몇 초인지 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 총 4줄이며, 한 줄에 하나씩 양의 정수가 적혀있다.</p>

<ul>
	<li>첫 번째 줄에 집에서 학교까지의 이동 시간을 나타내는&nbsp;초가 주어진다.</li>
	<li>두 번째 줄에 학교에서&nbsp;PC방까지의&nbsp;이동 시간을 나타내는&nbsp;초가 주어진다.</li>
	<li>세 번째 줄에&nbsp;PC방에서&nbsp;학원까지의 이동 시간을 나타내는&nbsp;초가 주어진다.&nbsp;</li>
	<li>마지막 줄에 학원에서 집까지의 이동 시간을 나타내는&nbsp;초가 주어진다.</li>
</ul>

<p>집에 늦게 가면 혼나기 때문에, 총 이동시간은 항상&nbsp;1 분 0 초 이상 59 분 59 초 이하이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>총 이동시간 x 분 y 초를 출력한다.&nbsp;첫 번째 줄에 x를, 두 번째 줄에 y를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','31
34
7
151
','3
43
','MATH'),
                                                                                                                (912,'BAEKJOON','https://www.acmicpc.net/problem/5556',5556,'타일','1초','128 MB',5,'<p>상근이는 타일로 작품을 만드는 예술가이다. 크기가 N × N인 작품을 만들기 위해서 상근이는 1 × 1 타일을 사용한다. 색상은 빨강, 파랑, 노랑 중 하나이다. 작품은 가장 바깥쪽에 빨간색을 붙이고, 그 안쪽에 파란색을 붙이고, 그 안쪽에 노란색을 붙이는 방법으로 만든다. 이것을 N × N 정사각형이 가득 찰 때까지 반복한다. 타일 색은 바깥 쪽부터 순서대로 빨강, 파랑, 노랑, 빨강, 파랑, 노랑, ...이다.</p>

<p>상근이의 놀라운 미적 감각을 질투하는 창영이는 작품에 K개 타일을 제거했다. 상근이는 새로운 타일을 구입하여, 제거된 부분에 새로운 타일을 붙이려고 한다.</p>

<p>작품의 한 변의 크기 N, 창영이가 제거한 타일의 개수 K와 위치가 주어졌을 때, 제거된 타일의 색상을 구하는 프로그램을 작성하시오.</p>

<p>예를 들어, N = 11인 경우 상근이의 작품은 다음과 같다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/artist1.png" style="height:350px; width:350px"></p>

<p>또, N = 16인 경우에는 아래와 같다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/artist2.png" style="height: 354.167px; width: 354.167px;"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 한 변의 길이 N이 주어진다. (1 ≤ N ≤ 10<sup>9</sup>) 둘째 줄에는 창영이가 제거한 타일의 개수 K가 주어진다. (1 ≤ K ≤ 1000) 다음 줄부터 K개 줄에는 창영이가 제거한 타일의 위치 a<sub>i</sub> b<sub>i</sub>가 제거한 순서대로 주어진다. (1 ≤ a<sub>i</sub> ≤ N, 1 ≤ b<sub>i</sub> ≤ N) 타일은 왼쪽에서 a<sub>i</sub>번째, 위에서 b<sub>i</sub>번째에 있다. 같은 타일을 두 번 이상 제거하는 경우는 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>창영이가 제거한 순서대로 타일의 색상을 출력한다. 빨간색은 1, 파란색은 2, 노란색은 3을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p><img alt="" src=https://www.acmicpc.net/upload/images/artist3.png" style="height:350px; width:350px"></p>

				</div>
				</div>','11
4
5 2
9 7
4 4
3 9
','2
3
1
3
','MATH'),
                                                                                                                (909,'BAEKJOON','https://www.acmicpc.net/problem/5565',5565,'영수증','1초','128 MB',3,'<p>새 학기를 맞아 상근이는 책을 10권 구입했다. 상근이는 의욕이 너무 앞서서 가격을 조사하지 않고 책을 구입했다. 이제 각 책의 가격을 알아보려고 한다.</p>

<p>하지만, 영수증에는 얼룩이 묻어있었고, 상근이는 책 10권 중 9권의 가격만 읽을 수 있었다.</p>

<p>책 10권의 총 가격과 가격을 읽을 수 있는 9권 가격이 주어졌을 때, 가격을 읽을 수 없는 책의 가격을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 10권의 총 가격이 주어진다. 둘째 줄부터 9개 줄에는 가격을 읽을 수 있는 책 9권의 가격이 주어진다. 책의 가격은 10,000이하인 양의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 가격을 읽을 수 없는 책의 가격을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','9850
1050
800
420
380
600
820
2400
1800
980
','600
','MATH'),
                                                                                                                (910,'BAEKJOON','https://www.acmicpc.net/problem/5575',5575,'타임 카드','1초','128 MB',2,'<p>JOI 상사는 직원의 근무시간을 타임 카드로&nbsp;관리하고있다. 직원들은 전용 장비를 사용하여 타임 카드에 출근 시간을 기록한다. 근무를 마치고 퇴근할 때도 타임 카드에 퇴근 시간을 기록한다. 타임카드에서 사용하는&nbsp;시간단위는&nbsp;24 시간제를 사용한다.</p>

<p>보안상의 이유로 직원들의&nbsp;출근 시간은 7시 이후이다. 또한, 모든 직원은 23시 이전에 퇴근한다. 직원의 퇴근&nbsp;시간은 항상 출근 시간보다 늦다.</p>

<p>입력으로 JOI 상사의 3 명의 직원 A 씨, B 씨, C 씨의 출근 시간과 퇴근 시간이 주어 졌을 때 각 직원의 근무시간을 계산하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 3 행으로 구성된다.</p>

<p>첫 번째 줄에는 A 씨의 출근 시간과 퇴근 시간,</p>

<p>두 번째 줄에는 B 씨의 출근 시간과 퇴근 시간,</p>

<p>세 번째 줄에는 C 씨의 출근 시간과 퇴근 시간이 각각 공백으로 구분되어 있다.</p>

<p>시간은 각각 공백으로 구분된 3 개의 정수로 쓰여져있다.</p>

<p>3 개의 정수 h(7 ? h ? 22), m(0 ? m ? 59), s(0 ? s ? 59)는 h시 m 분 s 초를 나타낸다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 A 씨의 근무&nbsp;시간,</p>

<p>두 번째 줄에 B 씨의 근무&nbsp;시간,</p>

<p>세 번째 줄에 C 씨의 근무&nbsp;시간을 출력하라.</p>

<p>근무 시간이&nbsp;h 시간 m 분 s 초이면 h, m, s의 순으로 공백으로 분리하여 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','9 0 0 18 0 0
9 0 1 18 0 0
12 14 52 12 15 30
','9 0 0
8 59 59
0 0 38
','MATH'),
                                                                                                                (911,'BAEKJOON','https://www.acmicpc.net/problem/5596',5596,'시험 점수','1초','128 MB',2,'<p>대한고등학교에 재학 중인 민국이와 만세는 4과목(정보, 수학, 과학, 영어)에 대한 시험을 봤다. 민국이와 만세가 본&nbsp;4과목의 점수를 입력하면, 민국이의 총점 S와&nbsp;만세의 총점 T 중에서 큰 점수를 출력하는 프로그램을 작성하시오. 단, 서로 동점일 때는 민국이의 총점 S를 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 2줄로 이루어져 있다.</p>

<p>1번째 줄에는 순서대로 민국이의 정보, 수학, 과학, 영어 점수(정수형)가 있으며, 공백으로 구분되어 있다.</p>

<p>2번째 줄에는 1번째 줄과 마찬가지로 순서대로 만세의 정보, 수학, 과학, 영어 점수(정수형)가 있고, 공백으로 구분되어 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>문제에서 요구하는 정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','100 80 70 60
80 70 80 90
','320
','MATH'),
                                                                                                                (915,'BAEKJOON','https://www.acmicpc.net/problem/5613',5613,'계산기 프로그램','1초','128 MB',3,'<p>덧셈, 뺄셈, 곱셈, 나눗셈을 할 수 있는 계산기 프로그램을 만드시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 각 줄에는 숫자와 +, -, *, /, =중 하나가 교대로 주어진다. 첫 번째 줄은 수이다. 연산자의 우선 순위는 생각하지 않으며, 입력 순서대로 계산을 하고, =가 주어지면, 그때까지의 결과를 출력한다.&nbsp;주어지는 수는 10<sup>8</sup> 이하의 양의 정수이다. 계산 중 결과는 0 또는 음수가 될 수 있지만, -10<sup>8</sup> ~ 10<sup>8</sup> 범위를 넘지는 않는다. 또, 나눗셈에서 소수점은 버린다. 따라서, 100/3*3 = 99이다.</p>

<p>피제수가 음수일 때 나눗셈을 하는 경우는 입력으로 주어지지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 계산 결과를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
+
1
=
','2
','MATH'),
                                                                                                                (920,'BAEKJOON','https://www.acmicpc.net/problem/5615',5615,'아파트 임대','1초','256 MB',20,'<p>동규부동산에서 아파트를 임대하고 있다. 아파트의 방은 아래 그림과 같이 면적이 2xy + x + y이다. (x와 y는 양의 정수)</p>

<p style="text-align: center;"><img alt="" src=https://www.acmicpc.net/upload/images/apart.png" style="width: 180px; height: 130px;"></p>

<p>동규부동산의 카탈로그에는 아파트의 면적이 오름차순으로 적혀져 있지만, 이 중 일부는 있을 수 없는 크기의 아파트이다. 만약, 이런 크기의 아파트를 임대하겠다고 말하면, 동규는 꽝! 이라고 외치면서, 수수료만 떼어간다.</p>

<p>동규부동산의 카탈로그에 적힌 아파트의 면적이 주어졌을 때, 있을 수 없는 크기의 아파트의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 아파트의 면적의 수 N이 주어진다. 다음 줄부터 N개 줄에 카탈로그에 적혀있는 순서대로 면적이 주어진다. N은 100,000이하이고 면적은 2<sup>31</sup>-1이하인 양의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 있을 수 없는 아파트 면적의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10
4
7
9
10
12
13
16
17
19
20
','2
','MATH'),
                                                                                                                (914,'BAEKJOON','https://www.acmicpc.net/problem/5616',5616,'로드샵','1초','128 MB',10,'<p>컴퓨터 공학에 흥미를 잃은 상근이는 로드샵을 열었다. 로드샵의 주력상품은 구슬 목걸이다. 상근이네 집에는 구슬이 무한히 많다. 색상은 총 n가지이고, 이들을 각각 m개 이상씩 뽑아서 r개의 구슬로 된 목걸이를 만들려고 한다. 상근이는 여성들의 유니크함을 이해하는 남자이다. 따라서, 색 조합이 다른 목걸이를 하나씩 다 만들려고 한다. 상근이가 만들 수 있는 목걸이의 종류는 몇 가지 일까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n, m, r이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 만들 수 있는 목걸이가 총 몇 종류나 있는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 0 3
','4
','MATH'),
                                                                                                                (916,'BAEKJOON','https://www.acmicpc.net/problem/5618',5618,'공약수','1초','256 MB',4,'<p>자연수 n개가 주어진다. 이 자연수의 공약수를 모두 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n이 주어진다. n은 2 또는 3이다. 둘째 줄에는 공약수를 구해야 하는 자연수&nbsp;n개가 주어진다.&nbsp;모든 자연수는 10<sup>8</sup> 이하이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어진 n개 수의 공약수를 한 줄에 하나씩 증가하는 순서대로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
75 125
','1
5
25
','MATH'),
                                                                                                                (921,'BAEKJOON','https://www.acmicpc.net/problem/5619',5619,'세 번째','1초','128 MB',9,'<p>서로 다른 자연수 n개 a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>이 주어진다. 이때, a<sub>1</sub>, ... a<sub>n</sub>에서 2개를 선택해서 붙여서 새로운 수를 만들 수 있다. 이때, 세 번째로 작은 수를 구하는 프로그램을 작성하시오.</p>

<p>예를 들어, 3과 4를 합치면 34나 43이 된다. 또, a<sub>1</sub> = 1, a<sub>4</sub> = 11을 합쳐서 111을 만든 경우에, a<sub>1</sub>a<sub>4</sub>와 a<sub>4</sub>a<sub>1</sub>은 다른 수이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 수의 개수 n(3 ≤ n ≤ 10<sup>8</sup>)이 주어진다. 다음 줄부터 한 줄에 하나씩 a<sub>i</sub>가 주어진다. (1 ≤ a<sub>i</sub> ≤ 10000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>세 번째로 작은 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
2
7
5
','52
','MATH'),
                                                                                                                (923,'BAEKJOON','https://www.acmicpc.net/problem/5623',5623,'수열의 합','1초','256 MB',7,'<p>양의 정수 N개로 이루어진 수열 A가 있다. 상근이는 수열 A의 모든 두 수의 합을 알고 있다. 이때, 수열 A를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 수열의 크기 N이 주어진다. (2 ≤ N ≤ 1000)</p>

<p>다음 N개 줄에는 100,000보다 작거나 같은 양의 정수가 N개씩 주어진다. 이 숫자들은 S를 이루는 숫자이며, S(i,j) = A[i] + A[j] (i≠j), S(i,j) = 0 (i=j) 이다. S(i,j)는 i번째 줄, j번째 숫자를 의미하며, A[i]는 A의 i번째 수이다.</p>

<p>입력으로 주어지는 S에 해당하는 수열 A는 항상 유일하다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 수열 A를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
0 2
2 0
','1 1
','MATH'),
                                                                                                                (924,'BAEKJOON','https://www.acmicpc.net/problem/5627',5627,'박테리아','1초','128 MB',22,'<p>지금은 화학 시간이다. 이번 시간에는 지능이 있는 박테리아를 연구하는 실험을 하고 있다. 상근이는 지루한 실험 대신 독특한 자신만의 실험을 하기로 했다.</p>

<p>먼저, 실험판을 N행 M열로 나눈다. 제일 윗 행은 1번, 마지막 행은 N번이고, 가장 왼쪽 열은 1번, 오른쪽은 M번 행이다. 그 다음 박테리아를 K마리 준비한다.</p>

<p>각 박테리아는 상근이가 지정한 칸에서 모험을 시작하게 되며, 위, 아래, 오른쪽 왼쪽 중 한 방향을 바라보고 있다. 각 박테리아는 일초동안 아래와 같은 일을 수행한다.</p>

<ol>
	<li>박테리아가 현재 있는 칸에 쓰여 있는 숫자 X를 읽는다. 이 숫자는 박테리아마다 다르며, 지능이 있는 박테리아이기 때문에 자신에게 해당하는 숫자를 읽을 수 있다.</li>
	<li>시계방향으로 X번 90도 회전을 한다.</li>
	<li>만약 바라보고 있는 방향에 있는 칸이 실험판의 경계를 넘어간다면, 180도 회전을 한다.</li>
	<li>바라보고 있는 칸으로 한 칸 움직인다.</li>
</ol>

<p>상근이는 한 칸에 덫을 설치해 놓았다. 모든 박테리아가 덫이 있는 칸으로 동시에 이동하면, 즉시 덫에 걸려 죽게 된다.</p>

<p>모든 박테리아가 죽는데 몇 초가 걸리는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, M, K가 주어진다. (3 ≤ N, M ≤ 50, 1 ≤ K ≤ 5)</p>

<p>다음 줄에는 덫이 설치된 곳의 행 X와 열 Y가 주어진다.</p>

<p>나머지 줄은 박테리아에 대한 설명이며, 1번 박테리아부터 K번까지 순서대로 주어진다.</p>

<p>첫 줄에는 박테리아의 시작 위치 Xi Yi와 바라보고 있는 방향 Ci가 주어진다. (Ci = U(위), R(오른쪽), D(아래), L(왼쪽))</p>

<p>그 다음 줄에는 N × M 크기의 행렬이 주어진다. 행렬을 구성하는 원소는 0과 9를 포함하는 사이의 숫자이며, 박테리아 i아 (x,y)를 방문했을 때 해당하는 X이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 모든 박테리아가 죽는데 걸리는 시간을 출력한다. (단위: 초) 만약, 박테리아가 모두 죽지 않는다면, -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 3 1
2 2
1 1 R
010
000
000
','3
','MATH'),
                                                                                                                (925,'BAEKJOON','https://www.acmicpc.net/problem/5636',5636,'소수 부분 문자열','1초','128 MB',10,'<p>숫자로 이루어진 문자열이 주어진다. 이때, 부분 문자열 중에서 가장 큰 소수를 찾는 프로그램을 작성하시오.</p>

<p>이 문제에서는 2보다 크거나 같고, 100,000보다 작거나 같은 소수만 소수이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 테스트 케이스의 개수는 1,000개를 넘지 않는다.</p>

<p>각 테스트 케이스는 길이가 255를 넘지 않는 숫자 문자열로 이루어져 있다. 입력의 마지막 줄에는 0이 하나 주어진다.</p>

<p>소수 부분 문자열이 최소 하나 이상 존재하는 입력만 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 가장 큰 소수 부분 문자열을 출력한다. </p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','11245
91321150448
1226406
0
','11
1321
2
','MATH'),
                                                                                                                (922,'BAEKJOON','https://www.acmicpc.net/problem/5641',5641,'겉보기에 쌍둥이 소수','1초','128 MB',12,'<p>컴퓨터 과학에서 소수는 매우 다양한 분야에 응용된다. 이 문제를 풀기 위해서는 소수와 연관된 두 가지 정의를 알아야 한다.</p>

<ul>
	<li>겉보기에 소수: 1보다 크고, t보다 작거나 같은 수로 나누어 떨어지지 않는 양의 정수.</li>
	<li>겉보기에 쌍둥이 소수: 차이가 2인 겉보기에 소수 두 개.</li>
</ul>

<p>n과 t가 주어졌을 때, n자리 겉보기에 쌍둥이 소수 (p와 p+2)를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 최대 1001개의 줄로 이루어져 있다. 각 줄에는 두 양의 정수 n (3500 ≤ n ≤ 5000)과 t (t ≤ 8000)가 주어진다.</p>

<p>입력의 마지막 줄에는 0 0이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력의 각 줄마다 n자리 겉보기에 쌍둥이 소수가&nbsp;p와 (p+2) 일 때, p를 출력한다. 가능한 p가 여러 가지라면, 아무거나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>n ≥ 3500이지만&nbsp;3500자리는 한 화면에 보이지 않기 때문에 예제만 n = 2이다. 또, 예제는 채점하지 않는다.</p>

				</div>
				</div>','2 6
0 0
','17
','MATH'),
                                                                                                                (926,'BAEKJOON','https://www.acmicpc.net/problem/5647',5647,'연속 합','5초','256 MB',21,'<p>연속하는 p(p > 0)개의 정수의 합이 바로 다음에 연속하는 q개의 양의 정수의 합과 일치하는 경우가 있다.</p>

<p>예를 들어, 9+10+11+12 = 13+14+15이고, (p=4, q=3) 4+5+6+7+8 = 9+10+11이다. (p=5, q=3)</p>

<p>q가 주어졌을 때, 가능한 p의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 테스트 케이스 여러 개로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있으며, q값이 주어진다. q는 10<sup>14</sup>보다 작은 양의 정수이다.</p>

<p>입력의 마지막 줄에는 0이 하나 주어지고, 입력의 개수는 2,000개를 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 가능한 p값의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1
0
','6
2
','MATH'),
                                                                                                                (930,'BAEKJOON','https://www.acmicpc.net/problem/5671',5671,'호텔 방 번호','1초','128 MB',6,'<p>선영이는 집 호수에 반복되는 숫자가 있는 경우에는 그 집에 사는 사람에게 불운이 찾아온다고 믿는다. 따라서, 선영이는 838호나 1004호와 같이 한 숫자가 두 번 이상 들어있는 집에는 절대 살지 않을 것이다.</p>

<p>2050년, 선영이는 한국에서 가장 돈이 많은 사람이 되었다. 그녀는 해변가에 새로운 호텔을 하나 지으려고 한다. 하지만, 투숙객에게 불운이 찾아오는 것을 피하기 위해서 반복되는 숫자가 없게 방 번호를 만들려고 한다.</p>

<p>정부는 선영이의 호텔 방 번호는 N보다 크거나 같고, M보다 작거나 같아야 한다는 조건을 걸고 신축 허가를 내주었다. 선영이의 새 호텔에는 방이 최대 몇 개 있을 수 있을까? (두 방이 같은 방 번호를 사용할 수 없다)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있고, 한 줄이다. 각 줄에는 문제의 설명에 나와있는 N과 M이 주어진다. (1 ≤ N ≤ M ≤ 5000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스에 대해서 N보다 크거나 같고, M보다 작거나 같은 수 중에서 반복되는 숫자가 없는 것의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','87 104
989 1022
22 25
1234 1234
','14
0
3
1
','MATH'),
                                                                                                                (933,'BAEKJOON','https://www.acmicpc.net/problem/5675',5675,'시침과 분침','1초','128 MB',5,'<p><img alt="" src=https://www.acmicpc.net/upload/images/clock.png" style="float:right; height:158px; width:179px">상근이 방에 걸려있는 시계는 완벽한 원 모양이다. 시계에는 시침과 분침이 원의 중심을 기준으로 돌아가고 있다. 시침은 시를 나타내고, 분침은 분을 나타낸다. 시계에는 60개의 눈금이 지름을 따라서 표시되어 있다. 눈금과 눈금 사이의 거리는 모두 같다.</p>

<p>분침은 1분에 한 번씩 다음 눈금으로 이동한다. 시침은 12분에 한 번식 다음 눈금으로 이동한다. 즉, 1시간이 지나면 다섯 눈금을 이동하게 된다. 이 시계는 시나 분이 바뀌는 순간 즉시 다음 눈금으로 이동한다. 즉, 시침과 분침은 항상 눈금을 가리키고 있으며, 그 사이를 가리키는 경우는 없다.</p>

<p>자정은 시침과 분침이 동시에 가장 윗 눈금을 가리킬 때이다. 즉, 0시와 0분을 나타낸다. 12시간 또는 720분이 지나면, 시침과 분침은 다시 같은 위치로 오게 된다. 이러한 움직임은 계속해서 반복된다.&nbsp;</p>

<p>생각해보면, 분침이 움직였을 때 시침이 움직이지 않을 수 있다. 하지만, 시침이 움직였다면 항상 분침도 움직였을 것이다.</p>

<p>상근이는 기하를 매우 좋아한다. 따라서, 시계를 볼 때마다 시침과 분침이 이루는 각도를 계산해서 종이에 적어놓는다. 이렇게 몇 년이 지나다보니 종이에는 엄청나게 많은 각도가 적혀져 있었다. 종이를 살펴보던 상근이는 어떤 각도는 반복해서 나오는데, 어떤 각도는 절대 나오지 않는다는 사실을 알게 되었다. 예를 들면, 3시와 9시일 때 시침과 분침이 이루는 각도는 90도이다. 하지만, 65도를 이루는 시간은 없다.</p>

<p>상근이는 시침과 분침이 이루는 각도가 A가 되는 경우가 있는지 없는지를 검사해보려고 한다.</p>

<p>0보다 크거나 같고, 180보다 작거나 같은 정수 A가 주어졌을 때, 상근이의 시계가 각도 A를 이루는 시간이 있는지 없는지를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄이고, 정수 A가 입력으로 주어진다. (0 ≤ A ≤ 180)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 상근이의 시계의 시침과 분침이 이루는 각도가 A도가 되는 경우가 있다면 Y를, 아니면 N을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','90
65
66
67
128
0
180
','Y
N
Y
N
N
Y
Y
','MATH'),
                                                                                                                (932,'BAEKJOON','https://www.acmicpc.net/problem/5691',5691,'평균 중앙값 문제','1초','128 MB',3,'<p>
	세 정수 A, B, C의 평균은 (A+B+C)/3이다. 세 정수의 중앙값은 수의 크기가 증가하는 순서로 정렬했을 때, 가운데 있는 값이다.</p>

<p>
	두 정수 A와 B가 주어진다. 이때, A, B, C의 평균과 중앙값을 같게 만드는 가장 작은 정수 C를 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, A와 B가 주어진다. (1 ≤ A ≤ B ≤ 10<sup>9</sup>) 입력의 마지막 줄에는 0이 두 개 주어진다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대한 정답을 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 2
6 10
1 1000000000
0 0
','0
2
-999999998
','MATH'),
                                                                                                                (936,'BAEKJOON','https://www.acmicpc.net/problem/5692',5692,'팩토리얼 진법','1초','128 MB',3,'<p>상근이는 보통 사람들이 사는 것과는 조금 다른 삶을 사는 사람이다. 상근이는 이런 사람들의 시선이 부담스럽기 때문에, 자신만의 숫자를 개발하기로 했다. 바로 그 이름은 팩토리얼 진법이다. 팩토리얼 진법은 각 자리에 올 수 있는 숫자는 0부터 9까지로 10진법과 거의 비슷하다. 하지만, 읽는 법은 조금 다르다. 팩토리얼 진법에서는 i번 자리의 값을 a<sub>i</sub>×i!로 계산한다. 즉, 팩토리얼 진법에서 719는 10진법에서 53과 같다. 그 이유는 7×3! + 1×2! + 9×1! = 53이기 때문이다.</p>

<p>팩토리얼 진법으로 작성한 숫자가 주어졌을 때, 10진법으로 읽은 값을 구하는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, 길이가 최대 5자리인 팩토리얼 진법 숫자가 주어진다. 입력의 마지막 줄에는 0이 하나 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 입력으로 주어진 팩토리얼 진법 숫자를 10진법으로 읽은 값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','719
1
15
110
102
0
','53
1
7
8
8
','MATH'),
                                                                                                                (937,'BAEKJOON','https://www.acmicpc.net/problem/5695',5695,'공원점','5초','128 MB',18,'<p>공선점 (Collinear Points)은 한 직선 상에 있는 점의 집합을 말한다. 이와 비슷한게 공원점(Cocircular Points)을 한 원 위에 있는 점의 집합으로 정의할 수 있다.</p>

<p>점의 집합이 주어졌을 때, 이 집합의 부분 집합 중 크기가 가장 큰 공원점을 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스의 첫째 줄에는 점의 개수 N이 주어진다. (1 ≤ N ≤ 100) 다음 N개 줄에는 점의 좌표 X와 Y가 주어진다. (-10<sup>4</sup> ≤ X,Y ≤ 10<sup>4</sup>) 두 점의 좌표가 같은 경우는 없다.</p>

<p>입력의 마지막 줄에는 0이 하나 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해, 입력으로 주어진 집합의 부분 집합 중 크기가 가장 큰 공원점의 크기를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7
-10 0
0 -10
10 0
0 10
-20 10
-10 20
-2 4
4
-10000 10000
10000 10000
10000 -10000
-10000 -9999
3
-1 0
0 0
1 0
0
','5
3
2
','MATH'),
                                                                                                                (938,'BAEKJOON','https://www.acmicpc.net/problem/5696',5696,'숫자 세기','1초','128 MB',13,'<p>A보다 크거나 같고 B보다 작거나 같은 모든 수를 종이에 썼을 때, 각 숫자를 몇 번씩 쓰게 되는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력을 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, A와 B가 주어진다. (1 ≤ A ≤ B ≤ 10<sup>8</sup>)</p>

<p>입력의 마지막 줄에는 0이 두 개 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 10개의 정수를 출력한다. 이 정수는 A부터 B까지를 종이에 썼을 때, 각 숫자를 몇 번씩 쓰게 되는지이며, 0부터 9까지 순서대로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 9
12 321
5987 6123
12345678 12345679
0 0
','0 1 1 1 1 1 1 1 1 1
61 169 163 83 61 61 61 61 61 61
134 58 28 24 23 36 147 24 27 47
0 2 2 2 2 2 2 2 1 1
','MATH'),
                                                                                                                (939,'BAEKJOON','https://www.acmicpc.net/problem/5710',5710,'전기 요금','1초','128 MB',12,'<p>최근에 전기 회사는 전기 요금을 또 올렸다. 새로운 전기 요금은 아래 표에 나와있다. (사용량은 항상 양의 정수)</p>

<table class="table table-bordered" style="width:30%">
	<thead>
		<tr>
			<th>사용량 (Watt-hour)</th>
			<th>요금 (원)</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>1 ~ 100</td>
			<td>2</td>
		</tr>
		<tr>
			<td>101 ~ 10000</td>
			<td>3</td>
		</tr>
		<tr>
			<td>10001 ~ 1000000</td>
			<td>5</td>
		</tr>
		<tr>
			<td>> 1000000</td>
			<td>7</td>
		</tr>
	</tbody>
</table>

<p>위의 표를 읽는 방법은 다음과 같다.</p>

<p>사용량의 첫 100Wh의 가격은 1Wh당 2원이다. 다음 9900Wh (101 ~ 10000)의 가격은 1Wh당 3원이다. 이런식으로 계속 계산한다.</p>

<p>예를 들어, 10123Wh를 사용했을 때, 내야하는 요금은 2×100 + 3×9900 + 5×123 = 30515원이다.</p>

<p>전기 회사는 전기 요금을 인상하지 않고 돈을 더 버는 이상한 방법을 만들었다. 그 방법은 바로 사용한 전기의 양을 알려주지 않고, 얼마를 내야 하는지 알려주는 것이다. 전기 회사는 요금과 관련된 정보를 나타내는 두 숫자 A와 B를 알려준다. A와 B는 전기 회사에서 그 사람이 사는 건물에서 임의로 고른 이웃의 정보와 합친 요금이다.</p>

<ul>
	<li>A: 이웃의 사용량과 사용량을 합쳤을 때 내야하는 요금</li>
	<li>B: 이웃의 전기 요금과의 차이 (절댓값)</li>
</ul>

<p>위의 두 숫자를 이용해서 자신이 얼마를 내야 하는지를 계산할 수 없을 때는, 계산 요금을 100원을 더 내면 전기 회사에서 사용량을 알려준다.</p>

<p>상근이는 매우 전기를 아끼는 사람이다. 따라서, 항상 자신이 사는 건물에서 가장 전기를 적게 쓴다고 확신한다. 상근이는 돈도 전기만큼 아낀다. 따라서, 절대로 계산 요금을 지불하지 않고 자신이 직접 계산할 것이다.</p>

<p>예를 들어, A = 1100, B = 300이라고 하자. 이 정보를 이용하면, 상근이의 사용량은 150Wh, 이웃의 사용량은 250Wh임을 알 수 있다. 두 사람의 총 사용량은 400Wh이다. 따라서, A = 2×100 + 3×300 = 1100이 된다. 따라서, 상근이는 350원을 내면 된다. 상근이의 이웃은 2×100 + 3×150 = 650원을 내야 하고, B = |350 - 650| = 300이 된다.</p>

<p>A와 B가 주어졌을 때, 상근이가 내야하는 전기 요금을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, 두 정수 A와 B가 주어진다. (1 ≤ A, B ≤ 10<sup>9</sup>) 항상 정답이 유일한 경우만 주어지며, 입력으로 주어지는 두 숫자를 만들 수 있는 사용량은 딱 한 쌍 존재한다.</p>

<p>입력의 마지막 줄에는 0이 두 개 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 상근이가 내야 하는 요금을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1100 300
35515 27615
0 0
','350
2900
','MATH'),
                                                                                                                (941,'BAEKJOON','https://www.acmicpc.net/problem/5717',5717,'상근이의 친구들','1초','128 MB',2,'<p>상근이의 남자 친구의 수와 여자 친구의 수가 주어졌을 때, 친구는 총 몇 명인지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 두 정수 M과 F로 이루어져 있으며, 각각은 상근이의 남자 친구의 수와 여자 친구의 수이다. (1 ≤ M, F ≤ 5)</p>

<p>입력의 마지막 줄에는 0이 두 개 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 상근이의 친구의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 2
2 3
5 5
1 1
0 0
','4
5
10
2
','MATH'),
                                                                                                                (947,'BAEKJOON','https://www.acmicpc.net/problem/5724',5724,'파인만','1초','128 MB',3,'<p>리처드 필립스 파인만은 노벨 물리학상을 수상한 미국의 물리학자이다. 그는 이론물리학을 연구했고, 양자 컴퓨팅 분야를 개척했다. "Surely You’re Joking, Mr. Feynman!", "What Do You Care What Other People Think?"와 같은 그의 책은 많은 사람들의 사랑을 받았고, 한국에도 번역되어 출판되어져 있다. 그는 오랜 기간동안 퍼즐, 자물쇠, 암호를 만들고 푸는 일에 중독되어 있었다.&nbsp;</p>

<p>어느 날, 남아메리카의 한 농장에서 파인먼의 것으로 추정되는 한 메모가 발견되었다. 퍼즐은 이 메모에는 중간자와 전자기에 대한 내용이 적혀있었고, 가장 마지막 줄에는 다음과 같은 퀴즈가 적혀져 있었다. "N × N 정사각형으로 이루어진 그리드에는 서로 다른 정사각형이 몇 개나 있을까요?" 이 퀴즈의 정답을 구하는 프로그램을 작성하시오.</p>

<p>N = 2인 경우에 정답은 5이다.</p>

<p style="text-align:center"><img alt="" src=https://www.acmicpc.net/upload/images/howmanysq.png" style="height: 77.5px; width: 360px;"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, 그리드 한 변에 있는 정사각형의 개수 N이 주어진다. (1 ≤ N ≤ 100)</p>

<p>입력의 마지막 줄에는 0이 하나 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 한 줄에 하나씩 서로 다른 정사각형의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1
8
0
','5
1
204
','MATH'),
                                                                                                                (951,'BAEKJOON','https://www.acmicpc.net/problem/5874',5874,'소를 찾아라','1초','128 MB',8,'<p>천방지축&nbsp;베시(소, 1세)는 외양간을 탈출해서 풀로 뒤덮인 산등성이에 숨었다. 농부인 존씨는&nbsp;베시를 다시 잡기위해 온 풀숲을 샅샅히 뒤졌지만 찾지 못하였다. 안타깝게도 그는&nbsp;베시를 찾는데 어려워하고 있다. 존에게&nbsp;그&nbsp;풀밭은 N개의 소괄호로 이루어진&nbsp;문자열처럼 보였기 때문이다. 예를 들면, 아래와 같다.</p>

<p>)((()())())</p>

<p>존은 베시의 뒷다리가&nbsp;왼쪽 소괄호 두&nbsp;개가 붙어있는 것 ((&nbsp;과&nbsp;똑같이 생긴 것을 알고있다. 또한 베시의 앞다리는 오른쪽 소괄호 두 개가 붙어있는 것 ))&nbsp;과 똑같이 생겼다. 베시의 위치는 뒷다리의 위치가 x이고 앞다리의 위치가 y라고 할때 x&nbsp;<&nbsp;y가 되는 쌍으로 표현될 수 있다.</p>

<p>이때, 베시가 서있는 위치가 될 수 있는 서로 다른 순서쌍들의 개수를 구하여 존을 도와보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 째줄에 N개의 소괄호로 이루어진 문자열이 주어진다.&nbsp;(1 ≤ N ≤ 50,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 째줄에 베시가 서있을 수 있는 위치의 개수를 출력한다. (즉, &nbsp;가 나타나는 곳의 인덱스&nbsp;x와 가 나타나는 곳의 인덱스 y에서&nbsp;x<y가 되는 서로 다른 순서쌍들의 개수를 출력한다.)</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제에서 베시가 있을 수 있는 곳은 아래의 네가지이다.</p>

<ol>
	<li>)()(())</li>
	<li>)()(())</li>
	<li>)()())(</li>
	<li>)()())(</li>
</ol>

				</div>
				</div>',')((()())())
','4
','MATH'),
                                                                                                                (956,'BAEKJOON','https://www.acmicpc.net/problem/5893',5893,'17배','1초','128 MB',3,'<p>상근이는 이진수 곱셈에 어려움을 겪는 여자친구를 위한 프로그램을 만들려고 한다.</p>

<p>상근이의 여자친구는 항상 이진수에 17을 곱한다. 즉, 이진수 N이&nbsp;입력으로 들어오면 17을 곱한 다음 이진수로 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 이진수 N이 주어진다. N은 최대 1000자리인 이진수이며, 0이 들어오는 경우는 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어진 N을 17배한 다음, 이진수로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10110111
','110000100111
','MATH'),
                                                                                                                (968,'BAEKJOON','https://www.acmicpc.net/problem/5988',5988,'홀수일까 짝수일까','1초','128 MB',3,'<p>짝이 없는 경재는 매일 홀로 있다보니 홀수를 판별할 수 있는 능력이 생겼다.&nbsp;창식이는 경재의 말이 사실인지 그&nbsp;능력을 시험해보려 한다. 창식이의 의심이 끝이 없을 것 같아 N개만 확인하기로&nbsp;정했다.</p>

<p>N개의 정수가 주어지면 홀수인지 짝수인지를 출력하는 프로그램을 만들어 경재의 능력을 검증할 수 있게&nbsp;도와주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 숫자의 개수&nbsp;N(1 <= N <=&nbsp;100)이&nbsp;주어진다.</p>

<p>두 번째 줄부터 N+1번째 줄에 걸쳐 홀수인지 짝수인지&nbsp;확인할&nbsp;정수 K (1 <=&nbsp;K <= 10^60)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>N개의 줄에 걸쳐 한 줄씩 정수 K가&nbsp;홀수라면 odd를, 짝수라면 even을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>1024는 2로 나누어지므로 짝수이고, 5931은 그렇지 않으므로 홀수이다.</p>

				</div>
				</div>','2
1024
5931
','even
odd
','MATH'),
                                                                                                                (974,'BAEKJOON','https://www.acmicpc.net/problem/6064',6064,'카잉 달력','1초','256 MB',10,'<p>최근에 ICPC 탐사대는 남아메리카의 잉카 제국이 놀라운 문명을 지닌 카잉 제국을 토대로 하여 세워졌다는 사실을 발견했다. 카잉 제국의 백성들은 특이한 달력을 사용한 것으로 알려져 있다. 그들은 M과 N보다 작거나 같은 두 개의 자연수 x, y를 가지고 각 년도를 <x:y>와 같은 형식으로 표현하였다. 그들은 이 세상의 시초에 해당하는 첫 번째 해를 <1:1>로 표현하고, 두 번째 해를 <2:2>로 표현하였다. <x:y>의 다음 해를 표현한 것을 <x:y>이라고 하자. 만일 x < M 이면 x = x + 1이고, 그렇지 않으면 x = 1이다. 같은 방식으로 만일 y < N이면 y = y + 1이고, 그렇지 않으면 y = 1이다. <M:N>은 그들 달력의 마지막 해로서, 이 해에 세상의 종말이 도래한다는 예언이 전해 온다.</p>

<p>예를 들어, M = 10 이고 N = 12라고 하자. 첫 번째 해는 <1:1>로 표현되고, 11번째 해는 <1:11>로 표현된다. <3:1>은 13번째 해를 나타내고, <10:12>는 마지막인 60번째 해를 나타낸다.</p>

<p>네 개의 정수 M, N, x와 y가 주어질 때, <M:N>이 카잉 달력의 마지막 해라고 하면 <x:y>는 몇 번째 해를 나타내는지 구하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력 데이터는 표준 입력을 사용한다. 입력은 T개의 테스트 데이터로 구성된다. 입력의 첫 번째 줄에는 입력 데이터의 수를 나타내는 정수 T가 주어진다. 각 테스트 데이터는 한 줄로 구성된다. 각 줄에는 네 개의 정수 M, N, x와 y가 주어진다. (1 ≤ M, N ≤ 40,000, 1 ≤ x ≤ M, 1 ≤ y ≤ N) 여기서 <M:N>은 카잉 달력의 마지막 해를 나타낸다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 표준 출력을 사용한다. 각 테스트 데이터에 대해, 정수 k를 한 줄에 출력한다. 여기서 k는 <x:y>가 k번째 해를 나타내는 것을 의미한다. 만일 <x:y>에 의해 표현되는 해가 없다면, 즉, <x:y>가 유효하지 않은 표현이면, -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
10 12 3 9
10 12 7 2
13 11 5 6
','33
-1
83
','MATH'),
                                                                                                                (979,'BAEKJOON','https://www.acmicpc.net/problem/6131',6131,'완전 제곱수','1초','128 MB',3,'<p>상근이는 선영이와 함께 게임을 하고 있다. 먼저, 상근이는 두 양의 정수 A와 B를 고른다. (1 ≤ B ≤ A ≤ 500) 그 다음, 선영이는 상근이가 고른 수를 맞춰야 한다.</p>

<p>상근이는 선영이에게 다음과 같은 힌트를 주었다.</p>

<blockquote>
<p>A의 제곱은 B의 제곱보다 N만큼 커 (1 ≤ N ≤ 1,000)</p>
</blockquote>

<p>위의 힌트 조건을 만족하는 A와 B 쌍의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>상근이의 힌트 조건을 만족하는 (A,B) 쌍의 개수를 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','15
','2
','MATH'),
                                                                                                                (997,'BAEKJOON','https://www.acmicpc.net/problem/6219',6219,'소수의 자격','2초','128 MB',8,'<p>농부 존은 소들에게 소수로 차례차례 번호를 매기는 중이다. 베시는 이 번호에서 숫자 D가 몇 번이나 등장하는지 궁금해졌다.</p>

<p>베시를 도와 범위 A..B(A와 B 포함)내에서 숫자 D를 포함하는 소수의 개수를 구해보자.</p>

<p>소수는 두개의 자연수(1과 자기자신)로만 나누어 떨어지는 자연수를 말한다. 소수의 예로는 2,3,5,7,11,13,17,19,23,29.. 가 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>세 정수 A, B, D가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>주어진 범위 내에서 숫자 D를 포함하는 소수의 개수를 출력한다.<a id="comment-47207"></a></p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>이 범위 안에서의 소수중에 13만&nbsp;3을 포함한다.</p>

				</div>
				</div>','10 15 3
','1
','MATH'),
                                                                                                                (1000,'BAEKJOON','https://www.acmicpc.net/problem/6279',6279,'삼각형 피자','1초','128 MB',17,'<p>피자햇에서 각 조각이 삼각형 모양인 삼각형 피자를 출시했다.</p>

<p>삼각형 피자는 크기가 같은 정삼각형으로 이루어져 있고, 모든 삼각형은 연결되어져 있다. 두 삼각형이 변을 공유하는 경우에 직접 연결되어있다고 한다.</p>

<p>총 N조각으로 이루어진 삼각형 피자의 서로 다른 모양의 수를 구하는 프로그램을 작성하시오.</p>

<p>한 모양을 회전, 이동 시켜서 다른 모양과 완전히 겹칠 수 있다면, 두 모양은 같은 모양이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 삼각형 피자의 조각의 수 N으로 이루어져 있다. (1 ≤ N ≤ 16)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 가능한 피자 모양의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p><img alt="" src=https://www.acmicpc.net/upload/images/tripizza.png" style="height:87px; width:297px"></p>

				</div>
				</div>','3
2
4
10
','Case #1: 1
Case #2: 4
Case #3: 866
','MATH'),
                                                                                                                (985,'BAEKJOON','https://www.acmicpc.net/problem/6286',6286,'리벤지 오브 피보나치','5초','128 MB',19,'<p>피보나치 수열의 정의는 다음과 같다.</p>

<ul>
	<li>F(0) = F(1) = 1</li>
	<li>F(n) = F(n-1) + F(n-2) (n ≥ 2)</li>
</ul>

<p>n은 피보나치 숫자 F(n)의 인덱스라고 한다.</p>

<p>피보나치의 책 Liber Abaci가 출판된 이후에 많은 사람들은 피보나치 수열에 대해서 많은 연구를 했다. 현재, 많은 성질들이 알려져 있다.</p>

<p>선영이가 코딩보다 좋아하는 것이 바로 피보나치 수를 연구하는 것이다. 피보나치 수에 대한 많은 논문을 읽은 결과 이제 더 이상 밝혀지지 않은 성질은 없다고 생각했다.</p>

<p>그날 밤 이었다. 피보나치가 선영이의 꿈에 나타났다. "멍청하군... 아직 피보나치 수에 대해 중요한 성질이 밝혀지지 않았다고. 예를 들면, 피보나치 숫자 347746739..."</p>

<p>선영이는 잠에서 깨어나 나머지 숫자를 기억하려고 했지만, 기억하지 못했다. 선영이는 피보나치 수에 대한 연구를 계속 하기 위해서 이 숫자를 알아내는 프로그램을 작성하려고 한다.</p>

<p>한 피보나치 숫자의 앞 부분 일부가 주어졌을 때, 이 숫자로 시작하는 피보나치 숫자의 가장 작은 인덱스를 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. (T ≤ 50,000)</p>

<p>각 테스트 케이스는 한 줄로 이루어져 있고, 피보나치 수의 앞 부분 일부가 주어진다. 이 수는 40자리는 넘지 않으며, 불필요한 0이 숫자의 앞에 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 입력으로 주어진 숫자로 시작하는 피보나치 수의 가장 작은 인덱스를 출력한다. 만약, 인덱스가 100,000보다 작은 피보나치 숫자 중 그러한 숫자로 시작하는 피보나치 숫자가 없는 경우에는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','15
1
12
123
1234
12345
9
98
987
9876
98765
89
32
51075176167176176176
347746739
5610
','Case #1: 0
Case #2: 25
Case #3: 226
Case #4: 1628
Case #5: 49516
Case #6: 15
Case #7: 15
Case #8: 15
Case #9: 43764
Case #10: 49750
Case #11: 10
Case #12: 51
Case #13: -1
Case #14: 1233
Case #15: 22374
','MATH'),
                                                                                                                (1006,'BAEKJOON','https://www.acmicpc.net/problem/6322',6322,'직각 삼각형의 두 변','1초','128 MB',3,'<p>컴퓨터를 이용하면 수학 계산이 조금 쉬워진다. 다음과 같은 예를 살펴보자. 세 변의 길이가 a, b, c(c는 빗변)이면서 a<sup>2</sup>+b<sup>2</sup>=c<sup>2</sup>를 만족하는 삼각형을 직각삼각형이라고 한다. 이 공식은 피타고라스의 법칙이라고 한다.</p>

<p>직각 삼각형의 두 변의 길이가 주어졌을 때, 한 변의 길이를 구하는 프로그램을 작성하시오.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/righttriangle.png" style="height:250px; width:337px"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, 직각 삼각형의 세 변의 길이 a, b, c가 주어진다. a, b, c중 하나는 -1이며, -1은 알 수 없는 변의 길이이다. 다른 두 수는 10,000보다 작거나 같은 자연수이다.</p>

<p>입력의 마지막 줄에는 0이 세 개 주어진다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 입력으로 주어진 길이로 직각 삼각형을 만들 수 있다면, "s = l"을 출력한다. s는 길이가 주어지지 않은 변의 이름이고, l은 길이이다. l은 소수점 셋째 자리까지 출력한다. 삼각형을 만들 수 없는 경우에는 "Impossible."을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 4 -1
-1 2 7
5 -1 3
0 0 0
','Triangle #1
c = 5.000

Triangle #2
a = 6.708

Triangle #3
Impossible.
','MATH'),
                                                                                                                (1010,'BAEKJOON','https://www.acmicpc.net/problem/6359',6359,'만취한 상범','1초','128 MB',4,'<p>서강대학교 곤자가 기숙사의 지하에는 n개의 방이 일렬로 늘어선 감옥이 있다. 각 방에는 벌점을 많이 받은 학생이 구금되어있다.</p>

<p>그러던 어느 날, 감옥 간수인 상범이는 지루한 나머지 정신나간 게임을 하기로 결정했다. 게임의 첫 번째 라운드에서 상범이는 위스키를 한 잔 들이키고, 달려가며 감옥을 한 개씩 모두 연다. 그 다음 라운드에서는 2, 4, 6, ... 번 방을 다시 잠그고, 세 번째 라운드에서는 3, 6, 9, ... 번 방이 열려있으면 잠그고, 잠겨있다면 연다. k번째 라운드에서는 번호가 k의 배수인 방이 열려 있으면 잠그고, 잠겨 있다면 연다. 이렇게 n번째 라운드까지 진행한 이후, 상범이는 위스키의 마지막 병을 마시고 쓰러져 잠든다.</p>

<p>구금되어있는 몇 명(어쩌면 0명)의 학생들은 자신의 방을 잠그지 않은 채 상범이가 쓰러져버렸단 것을 깨닫고 즉시 도망친다.</p>

<p>방의 개수가 주어졌을 때, 몇 명의 학생들이 도주할 수 있는지 알아보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 번째 줄에는 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 줄에 한 개씩 방의 개수 n(5&nbsp;≤ n ≤ 100)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>한 줄에 한 개씩 각 테스트 케이스의 답, 즉 몇 명이 탈출할 수 있는지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
5
100
','2
10
','MATH'),
                                                                                                                (1015,'BAEKJOON','https://www.acmicpc.net/problem/6376',6376,'e 계산','1초','128 MB',4,'<p>e는</p>

<p>\[e=\sum_{i=0}^{n} {\frac{1}{i!}}\]</p>

<p>이다. 여기서 n은 무한대이다.</p>

<p>매우 작은 n에 대해서, e의 근사값을 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>아래 결과와 같은 형식으로 e의 근사값을 n = 0부터 9까지 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','','n e
- -----------
0 1
1 2
2 2.5
3 2.666666667
4 2.708333333
','MATH'),
                                                                                                                (1016,'BAEKJOON','https://www.acmicpc.net/problem/6378',6378,'디지털 루트','1초','128 MB',3,'<p>양의 정수 N의 디지털 루트를 구하려면 N을 이루고 있는 모든 자리수를 더해야 한다. 이때, 더한 값이 한 자리 숫자라면, 그 수가 N의 디지털 루트가 된다. 두 자리 이상 숫자인 경우에는 다시 그 수를 이루고 있는 모든 자리수를 더해야 하며, 한 자리 숫자가 될 때 까지 반복한다.</p>

<p>24의 디지털 루트를 구해보자. 2+4=6이다. 6은 한 자리 숫자이기 때문에, 24의 디지털 루트는 6이 된다. 39의 경우에는 3+9=12이기 때문에, 한 번 더 더해야 한다. 따라서, 1+2=3이 디지털 루트가 된다.</p>

<p>양의 정수 N이 주어졌을 때, 그 수의 디지털 루트를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>한 줄에 하나씩 양의 정수가 주어진다. 입력의 마지막 줄은 0으로 나타낸다. &nbsp;수는 최대 1000자리이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어진 양의 정수의 디지털 루트를 한 줄에 하나씩 주어진 순서대로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','24
39
0
','6
3
','MATH'),
                                                                                                                (1027,'BAEKJOON','https://www.acmicpc.net/problem/6463',6463,'팩트','1초','128 MB',6,'<p>N!은 "N 팩토리얼"로 읽으며, 처음 N개의 양의 정수를 곱한 값이다. 이때, N은 음이 아닌 정수이어야 한다. 예를 들면 다음과 같다.</p>

<pre>&nbsp;N &nbsp; &nbsp; &nbsp; N!&nbsp;
&nbsp;0 &nbsp; &nbsp; &nbsp; 1&nbsp;
&nbsp;1 &nbsp; &nbsp; &nbsp; 1&nbsp;
&nbsp;2 &nbsp; &nbsp; &nbsp; 2&nbsp;
&nbsp;3 &nbsp; &nbsp; &nbsp; 6&nbsp;
&nbsp;4 &nbsp; &nbsp; &nbsp;24&nbsp;
&nbsp;5 &nbsp; &nbsp; 120&nbsp;
10 3628800</pre>

<p>N을 입력 받아 0이 아닌 마지막 자리를 구하는 프로그램을 작성하시오. 예를 들어, 5!의 경우에 정답은 2이다. 5! = 120이고, 2는 0이 아닌 마지막 자리이기 때문이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 10000을 넘지 않는 음이 아닌 정수로 이루어져 있으며, 한 줄에 하나씩 주어진다. 각각의 정수는 N이며, 이를 입력받아 N!의 0이 아닌 마지막 자리를 출력해야 한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어진 각각의 N에 대해서, 1~5열에는 N을 오른쪽 정렬로 출력하고, 6~9열에는 " -> ", 10열에는 N!의 0이 아닌 마지막 자리를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
2
26
125
3125
9999
','1 -> 1
    2 -> 2
   26 -> 4
  125 -> 8
 3125 -> 2
 9999 -> 8
','MATH'),
                                                                                                                (1029,'BAEKJOON','https://www.acmicpc.net/problem/6487',6487,'두 직선의 교차 여부','1초','128 MB',10,'<p>두 개의 직선을 나타내는 4개의 점이 입력으로 주어질 때, 두 직선이 만나는지를 확인하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 번째 줄에는 테스트 케이스의 개수 N이 주어진다. (N <= 10)</p>

<p>다음 N개의 줄에는 각각 8개의 정수 x1, y1, x2, y2, x3, y3, x4, y4가 주어진다. 이는 두 직선 (x1, y1)-(x2, y2)와 (x3, y3)-(x4, y4)를 나타낸다.</p>

<p>(x1, y1)과 (x2, y2)는 서로 다른 점이며, (x3, y3)와 (x4, y4)는 서로 다른 점임이 보장된다.</p>

<p>모든 x와 y는 [-1000, 1000]&nbsp;범위 내의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스에 대해, 다음과 같이 출력한다.</p>

<ul>
	<li>두 직선이 정확히 한 점에서 만난다면, POINT x y의 꼴로 출력한다. 이는 두 직선이 (x,y)에서 교차함을 의미한다. x와 y는 정확히 소숫점 아래 둘째 자리까지 출력한다.</li>
	<li>두 직선이 만나지&nbsp;않는다면, NONE을 출력한다.</li>
	<li>두 직선이 무한히 많은 점에서 만난다면,&nbsp; LINE을 출력한다.</li>
</ul>

<p>원문에 있는&nbsp;INTERSECTING LINES OUTPUT/END OF OUTPUT 등은 출력하지 않는다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
0 0 4 4 0 4 4 0
5 0 7 6 1 0 2 3
5 0 7 6 3 -6 4 -3
2 0 2 27 1 5 18 5
0 3 4 0 1 2 2 5
','POINT 2.00 2.00
NONE
LINE
POINT 2.00 5.00
POINT 1.07 2.20
','MATH'),
                                                                                                                (1033,'BAEKJOON','https://www.acmicpc.net/problem/6500',6500,'랜덤 숫자 만들기','1초','256 MB',4,'<p>존 폰 노이만은 1946년에 유사난수(Pseudo-random Number) 수열을 만드는 방법을 제시했다. 이 방법은 "middle-square" 방법으로 알려져 있으며, 다음과 같이 동작한다.</p>

<p>먼저, 초기값 a<sub>0</sub>을 고른다. a<sub>0</sub>은 십진법으로 표기했을 때, 길이가 n을 넘지 않아야 한다. 그 다음, a<sub>0</sub>을 제곱한 다음에, 길이가 2*n이 될 때 까지 앞에 0을 붙인다. 이제, 가운데 n자리를 a<sub>i</sub>라고 한다. 이 방법을 사용해 각각의 i>0에 대해서, a<sub>i</sub>를 계산할 수 있다. 이 문제에서 n=4를 이용한다.</p>

<p>예 1: a<sub>0</sub> = 5555, a<sub>0</sub><sup>2</sup> = 30858025, a<sub>1</sub> = 8580</p>

<p>예 2: a<sub>0</sub> = 1111, a<sub>0</sub><sup>2</sup> = 01234321, a<sub>1</sub> = 2343</p>

<p>사실 이 방법은 난수를 만드는데 그렇게 좋은 방법은 아니다.&nbsp;</p>

<p>a<sub>0</sub>이 주어졌을 때, 서로 다른 난수를 몇 개 만드는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄이며, a<sub>0</sub>을 포함하고 있다. (0 < a<sub>0</sub> < 10000) 숫자가 네 자리가 아닌 경우에는, 앞에 0을 추가해 네 자리로 만들어져 있다. 입력의 마지막 줄에는 0이 하나 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 서로 다른 a<sub>i</sub>가 몇 개 나오는지 출력한다. a<sub>0</sub>도 포함해서 세야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5555
0815
6239
0
','32
17
111
','MATH'),
                                                                                                                (1034,'BAEKJOON','https://www.acmicpc.net/problem/6502',6502,'동혁 피자','1초','128 MB',4,'<p>대전 ACM-ICPC Regional가 끝나면, 대회 참가자들은 다같이 카이스트 근처의 동혁 피자에 간다. 대회는 5시간동안 진행되므로, 참가자는 모두 배가 매우 고프다. 피자를 최대한 빨리 먹기 위해서, 큰 피자를 하나 시키려고 한다. 생각해보니 피자가 너무 크면 식탁 위에 맞지 않을 수도 있다. 식탁은 원이고, 피자는 직사각형이다. 식탁의 반지름과 피자의 크기가 주어졌을 때, 피자가 식탁에 맞는 크기인지 아닌지를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는&nbsp;숫자 세 개로 이루어져 있고, 순서대로 r, w, l이다. r은 식탁의 반지름이고, w와 l은 피자의 너비와 높이이다. (1 ≤ r ≤ 1000, 1 ≤ w ≤ l ≤ 1000) r이 0이 들어오는 경우에는 프로그램을 종료한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 피자가 식탁 위에 놓여질 수 있는지 아닌지를 출력한다. 피자가 식탁의 경계와 접하는 경우는 식탁에 놓여질 수 있다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','38 40 60
35 20 70
50 60 80
0
','Pizza 1 fits on the table.
Pizza 2 does not fit on the table.
Pizza 3 fits on the table.
','MATH'),
                                                                                                                (1038,'BAEKJOON','https://www.acmicpc.net/problem/6504',6504,'킬로미터를 마일로','1초','128 MB',6,'<p>상근이는 하프 마라톤(21km 정도) 대회를 준비하러 동해안으로 떠났다. 상근이의 첫 번째 훈련은 21마일을 뛰는 것이었다.</p>

<p>21마일을 뛰어보니 21킬로미터를 뛴 것보다 더 지치는 것 같았다. 상근이의 친구 정인이는 마라톤은 21마일이 아니고 21킬로미터라고 알려주었다. 또, 21킬로미터는 13마일 같다는 사실도 알려주었다. 21, 13? 상근이는 깊은 깨달음을 얻었다. 두 숫자 모두 피보나치 숫자이다!</p>

<p>피보나치 숫자는 다음과 같이 정의한다.</p>

<ul>
	<li>F<sub>1</sub> = 1</li>
	<li>F<sub>2</sub> = 2</li>
	<li>F<sub>n+1</sub> = F<sub>n</sub> + F<sub>n-1</sub> (n > 1)</li>
</ul>

<p>마침 상근이는 훈련을 떠나기 전, 대학에서 피보나치 진법을 배웠다. 모든 양의 정수 X는 서로 다른 피보나치 수의 합으로 나타낼 수 있다. 즉, b<sub>k</sub> = 1과 b<sub>i</sub> (1 ≤ i < k) = 0 또는 1이면서 x = ∑i=<sub>1..k</sub> b<sub>i</sub> × F<sub>i</sub>을 만족하는 정수 k와 b<sub>1</sub>, b<sub>2</sub>, ..., b<sub>k</sub>가 항상 존재한다. 이러한 표현을 b(x) = (b<sub>k</sub>, b<sub>k-1</sub>, ..., b<sub>1</sub>)와 같이 간편하게 쓰기로 한다. 또, 여러 가지 표현이 생기는 것을 막기 위해 b<sub>i</sub> × b<sub>i-1</sub> = 0이어야 한다. (i > 1)</p>

<p>예를 들어, 21은 (1, 0, 0, 0, 0, 0, 0)로, 13은 (1, 0, 0, 0, 0, 0)으로 나타낼 수 있다. 상근이는 이런 피보나치 진법을 이용해서 x킬로미터를 y마일로 바꾸는 방법을 만들었다.</p>

<p>먼저, x를 피보나치 진법 b(x)로 나타낸다. 그 다음, b(x)를 오른쪽으로 한 비트씩 시프트 시킨다. (맨 마지막 비트는 버린다) 이것을 b(y)라고 한다. 이제 b(y)를 이용해서 y를 계산하면 된다.</p>

<p>예를 들어, 42는 피보나치 진법으로 (1, 0, 0, 1, 0, 0, 0, 0)이다. 이걸 오른쪽으로 한 비트씩 시프트 시키면 (1, 0, 0, 1, 0, 0, 0)이 되고, 0×1 + 0×2 + 0×3 + 1×5 + 0×8 + 0×13 + 1×21 = 26이 된다.</p>

<p>킬로미터 값이 주어졌을 때, 상근이의 알고리즘을 이용해서 마일로 바꾸는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 마일로 바꾸려고 하는 킬로미터 값의 수 t가 주어진다. (0 < t < 25000) 다음 t개 줄에는 마일로 바꿀 킬로미터 값 x가 주어진다. (2 <&nbsp;x < 25000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 킬로미터 거리 x에 대해서, 상근이의 알고리즘을 이용해 마일로 바꾼 값 y를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
42
100
180
300
360
','26
62
111
185
222
','MATH'),
                                                                                                                (1048,'BAEKJOON','https://www.acmicpc.net/problem/6571',6571,'피보나치 수의 개수','1초','256 MB',8,'<p>피보나치 수의 정의는 다음과 같다.</p>

<ul>
	<li>f<sub>1</sub> := 1</li>
	<li>f<sub>2</sub> := 2</li>
	<li>f<sub>n</sub> := f<sub>n-1</sub> + f<sub>n-2</sub> (n ≥ 3)</li>
</ul>

<p>두 수 a와 b가 주어졌을 때, 구간 [a, b]에 포함되는 피보나치 수의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 음이 아닌 두 정수 a와 b로 이루어져 있다. 입력의 마지막 줄에는 0이 두 개 주어진다. (a ≤ b ≤ 10<sup>100</sup>) 두 수 a와 b는 불필요한 0으로 시작하지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, a ≤ f<sub>i</sub> ≤ b 인 피보나치 수 f<sub>i</sub>의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10 100
1234567890 9876543210
0 0
','5
4
','MATH'),
                                                                                                                (1049,'BAEKJOON','https://www.acmicpc.net/problem/6588',6588,'골드바흐의 추측','0.5초','256 MB',10,'<p>1742년, 독일의 아마추어 수학가 크리스티안 골드바흐는 레온하르트 오일러에게 다음과 같은 추측을 제안하는 편지를 보냈다.</p>

<blockquote>4보다 큰 모든 짝수는 두 홀수 소수의 합으로 나타낼 수 있다.</blockquote>

<p>예를 들어 8은 3 + 5로 나타낼 수 있고, 3과 5는 모두 홀수인 소수이다. 또, 20 = 3 + 17 = 7 + 13, 42 = 5 + 37 = 11 + 31 = 13 + 29 = 19 + 23 이다.</p>

<p>이 추측은 아직도 해결되지 않은 문제이다.</p>

<p>백만 이하의 모든 짝수에 대해서, 이 추측을 검증하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 하나 또는 그 이상의 테스트 케이스로 이루어져 있다. 테스트 케이스의 개수는 100,000개를 넘지 않는다.</p>

<p>각 테스트 케이스는 짝수 정수 n 하나로 이루어져 있다. (6 ≤ n ≤ 1000000)</p>

<p>입력의 마지막 줄에는 0이 하나 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, n = a + b 형태로 출력한다. 이때, a와 b는 홀수 소수이다. 숫자와 연산자는 공백 하나로 구분되어져 있다. 만약, n을 만들 수 있는 방법이 여러 가지라면, b-a가 가장 큰 것을 출력한다. 또, 두 홀수 소수의 합으로 n을 나타낼 수 없는 경우에는 "Goldbachs conjecture is wrong."을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8
20
42
0
','8 = 3 + 5
20 = 3 + 17
42 = 5 + 37
','MATH'),
                                                                                                                (1009,'BAEKJOON','https://www.acmicpc.net/problem/6591',6591,'이항 쇼다운','1초','128 MB',8,'<p>n개의 원소 중에서 k개를 순서 없이 선택하는 방법의 수는 몇 가지 일까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 하나 또는 그 이상의 테스트 케이스로 이루어져 있다.</p>

<p>각 테스트 케이스는 한 줄로 이루어져 있으며, 2<sup>31</sup>-1 을 넘지 않는 두 자연수 n(n ≥ 1)과 k(0 ≤ k ≤n)로 이루어져 있다.</p>

<p>입력의 마지막 줄에는 0이 두 개 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 정답을 출력한다. 항상 정답이 2<sup>31</sup>보다 작은 경우만 입력으로 주어진다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 2
10 5
49 6
0 0
','6
252
13983816
','MATH'),
                                                                                                                (1051,'BAEKJOON','https://www.acmicpc.net/problem/6594',6594,'방정식 풀이','1초','128 MB',14,'<p>변수가 한 개인 일차 방정식이 주어졌을 때, 해를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력을 여러 개의 방정식으로 이루어져 있다. 방정식은 한 줄에 하나씩 주어진다.</p>

<p>방정식은 모두 100글자 이내이며, 아래와 같은 문법을 따른다. (EBNF 문법)</p>

<pre>Equation   := Expression = Expression
Expression := Term { (+ | -) Term }
Term       := Factor { * Factor }
Factor     := Number | x | ( Expression )
Number     := Digit | Digit Number
Digit      := 0 | 1 | ... | 9</pre>

<p>위의 문법에 따르면, x*x = 25와 같은 일차방정식이 아닌 식을 만들 수 있다. 하지만, 항상 x에 대해서 일차인 식만 주어진다. 또,&nbsp;방정식의 부분식도 항상 일차이다. 즉, x*x-x*x+x = 0과 같은 식은 주어지지 않는다. (x*x는 일차식이 아니다)</p>

<p>입력으로 주어지는 숫자는 모두 음이 아닌 정수이다. 또, x는 실수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, "Equation #i" (i는 테스트 케이스 번호)를 출력한 다음, 아래 세 가지 중 하나를 출력한다.</p>

<p>방정식이 해가 없다면, "No solution."을 출력한다.<br>
방정식의 해가 무수히 많다면, "Infinitely many solutions."을 출력한다.<br>
방정식의 해가 하나라면, "x = solution"을 출력하며, solution은 소수점 여섯째 자리까지 출력한다.</p>

<p>각 테스트 케이스 사이에는 빈 줄을 하나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','x+x+x=10
4*x+2=19
3*x=3*x+1+2+3
(42-6*7)*x=2*5-10
','Equation #1
x = 3.333333

Equation #2
x = 4.250000

Equation #3
No solution.

Equation #4
Infinitely many solutions.
','MATH'),
                                                                                                                (1052,'BAEKJOON','https://www.acmicpc.net/problem/6600',6600,'원의 둘레','1초','128 MB',9,'<p>일직선 상에 있지 않은 세 점이 주어진다. 이 세 점을 이용해서 만들 수 있는 원의 원주를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은&nbsp;여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, 실수 x1, y1, x2, y2, x3, y3이 주어진다. 세 점으로 만들 수 있는 원의 지름은 백만을 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 입력으로 주어진 원의 원주를 소수점 둘째 짜리까지 반올림해 출력한다. 파이의 근사값은 3.141592653589793이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','0.0 -0.5 0.5 0.0 0.0 0.5
0.0 0.0 0.0 1.0 1.0 1.0
5.0 5.0 5.0 7.0 4.0 6.0
0.0 0.0 -1.0 7.0 7.0 7.0
50.0 50.0 50.0 70.0 40.0 60.0
0.0 0.0 10.0 0.0 20.0 1.0
0.0 -500000.0 500000.0 0.0 0.0 500000.0
','3.14
4.44
6.28
31.42
62.83
632.24
3141592.65
','MATH'),
                                                                                                                (1054,'BAEKJOON','https://www.acmicpc.net/problem/6603',6603,'로또','1초','128 MB',9,'<p>독일 로또는 {1, 2, ..., 49}에서 수&nbsp;6개를 고른다.</p>

<p>로또 번호를 선택하는데 사용되는 가장 유명한 전략은 49가지 수 중 k(k>6)개의 수를 골라 집합 S를 만든 다음 그 수만 가지고 번호를 선택하는 것이다.</p>

<p>예를 들어, k=8, S={1,2,3,5,8,13,21,34}인 경우 이 집합 S에서 수를 고를 수 있는 경우의 수는 총 28가지이다. ([1,2,3,5,8,13], [1,2,3,5,8,21], [1,2,3,5,8,34], [1,2,3,5,13,21], ..., [3,5,8,13,21,34])</p>

<p>집합 S와 k가 주어졌을 때, 수를 고르는 모든 방법을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있다. 첫 번째 수는 k (6 < k < 13)이고, 다음 k개 수는 집합 S에 포함되는 수이다. S의 원소는 오름차순으로 주어진다.</p>

<p>입력의 마지막 줄에는 0이 하나 주어진다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 수를 고르는 모든 방법을 출력한다. 이때, 사전 순으로 출력한다.</p>

<p>각 테스트 케이스 사이에는 빈 줄을 하나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7 1 2 3 4 5 6 7
8 1 2 3 5 8 13 21 34
0
','1 2 3 4 5 6
1 2 3 4 5 7
1 2 3 4 6 7
1 2 3 5 6 7
1 2 4 5 6 7
1 3 4 5 6 7
2 3 4 5 6 7

1 2 3 5 8 13
1 2 3 5 8 21
1 2 3 5 8 34
1 2 3 5 13 21
1 2 3 5 13 34
1 2 3 5 21 34
1 2 3 8 13 21
1 2 3 8 13 34
1 2 3 8 21 34
1 2 3 13 21 34
1 2 5 8 13 21
1 2 5 8 13 34
1 2 5 8 21 34
1 2 5 13 21 34
1 2 8 13 21 34
1 3 5 8 13 21
1 3 5 8 13 34
1 3 5 8 21 34
1 3 5 13 21 34
1 3 8 13 21 34
1 5 8 13 21 34
2 3 5 8 13 21
2 3 5 8 13 34
2 3 5 8 21 34
2 3 5 13 21 34
2 3 8 13 21 34
2 5 8 13 21 34
3 5 8 13 21 34
','MATH'),
                                                                                                                (1053,'BAEKJOON','https://www.acmicpc.net/problem/6609',6609,'모기곱셈','1초','128 MB',4,'<p>왜 습한 환경에 모기가 그렇게 많은지 궁금해한 적이 있는가? 그건&nbsp;성체 암컷 모기가 가능한 많은 알을 낳을 수 있기 때문이다.&nbsp;그중 대부분이 (다행스럽게도) 살아남지 못하지만,&nbsp;모기 한 쌍이 단 몇주만에 수천마리의 모기가 될 수&nbsp;있다고 한다. 이 숫자에 대해 좀 더 자세히 알아보자.</p>

<p>모기의 일생은 4가지 단계로 이루어져 있다. 알, 유충, 번데기, 성충이다. 문제를 간단하게 하기 위해서 우리는 실제로는 아닐 수 있는 몇 가지 가정을 세울 것이다. 알 기간은 1일도 안 된다고 하고, 나머지 단계는 일주일이 걸린다고 하자. 각 모기는 유충으로 일주일을 살고, 번데기가 되어 일주일간 동면하고, 3째 주 성충&nbsp;모기가 된다. 이 3주 생애의 끝에 각 모기는 알을 낳고 죽는다.</p>

<p>좀 더 간단히 만들기 위해 한 단계에서 다음 단계로 가는 것은 항상 일요일이라고 하자. 매 일요일 다음과 같은 일들이 일어난다.</p>

<ul>
	<li>성충&nbsp;모기가 E개의 알을 낳고 죽는다. 하루만에 각 알당 1마리의 유충이 부화한다.</li>
	<li>저번 주 부화한 일부 유충은 죽거나 잡아먹힌다. R번째&nbsp;유충들만 일요일에 번데기가 된다.</li>
	<li>S번째의 번데기들만 성충이 되고, 나머지는 말라죽는다.</li>
</ul>

<p>예를 들어, 5개의 번데기가 있고 3번째가 살아남는다면, 1마리의 모기가 남게 된다. 6개의 번데기 중에서는 두마리의 성충 모기가 나올 것이다.</p>

<p>첫째주 M마리의 모기, P개의 번데기, L마리의 유충이 있다. N번의&nbsp;일요일을&nbsp;거치면 얼마나 많은 모기가 될지 계산하라. 물론 살아있는 성충 모기만 세어야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있으며 각 테스트 케이스당 한 줄로 주어진다. 각 줄은 7개의 변수인 M,&nbsp;P, L, E, R, S, N이 포함되어 있으며 공백문자로 나누어져 있다. M,P,L은 각각 첫째 주에 있는 모기, 번데기, 유충의 숫자이다.</p>

<p>E는 한 모기가 낳는 알의 수이며, R과 S는 살아남는 유충과 번데기의 비율, N은 우리가 모기 수를&nbsp;구하려는 시점(N주 후)이다.</p>

<p>입력값의 제한은 다음과 같다.</p>

<p>0 ≤ M, P,L ≤ 100 000, 0 ≤ E ≤ 100, 1 ≤ R, S ≤ 10, and 1 ≤ N ≤ 1000</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다, 한 줄로 C를 출력한다. C는 N번째 일요일 후의 모기의 숫자이다.</p>

<p>첫 N주 안의 모기 수는 1 000 000을 넘지 않을 것이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10 20 40 4 2 2 10
144 55 8 0 1 9 4
10 10 10 2 3 2 6
10 20 40 86 9 9 999
','10
0
1
10
','MATH'),
                                                                                                                (1063,'BAEKJOON','https://www.acmicpc.net/problem/6679',6679,'싱기한 네자리 숫자','1초','128 MB',4,'<p>싱기한 네자리 숫자란, [1000,9999]인 10진수 숫자중에서,&nbsp; 다음의 조건을 만족하는 숫자를 말한다.</p>

<ul>
	<li>숫자를 10진수, 12진수, 16진수로 나타낸 다음, 각각의&nbsp;숫자에 대해, 각 숫자의&nbsp;자리수를 더했을 때, 세 값이 모두&nbsp;같아야 한다.</li>
</ul>

<p>여러분은&nbsp;싱기한 네자리 숫자를 모두 출력해야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 주어지지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>싱기한 네자리&nbsp;숫자를 오름차순으로&nbsp;한줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>싱기한 네자리 숫자의 첫&nbsp;번째 수는 2992이다.</p>

				</div>
				</div>','','2992
2993
2994
2995
2996
2997
2998
2999
','MATH'),
                                                                                                                (1098,'BAEKJOON','https://www.acmicpc.net/problem/6884',6884,'소수 부분 수열','5초','256 MB',9,'<p>양의 정수로 이루어진 길이가 n인 수열이 있다. 소수 부분 수열이란 길이가 적어도 2이면서, 합이 2보다 크거나 같은 소수가 되는 연속 부분 수열이다.</p>

<p>예를 들어, 수열이 [3, 5, 6, 3, 8] 일 때, 길이가 2인 소수 부분 수열이 두 개(5 + 6 = 11, 3 + 8 = 11)이 있고, 길이가 3인 소수 부분 수열은 1개 (6 + 3 + 8 = 17), 길이가 4인 소수 부분 수열은 1개 (3 + 5 + 6 + 3 = 17) 가 있다.</p>

<p>수열이 주어졌을 때, 길이가 가장 짧은 소수 부분 수열을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫째 줄에는 테스트 케이스의 개수 t (1 ≤ t ≤ 20) 가 주어진다.</p>

<p>각 테스트 케이스는 한 줄로 이루어져 있고, 줄의 첫 번째 정수 n은 (0 < n ≤ 10000) 수열의 길이이다. 다음에 주어지는 정수 n개는 수열의 원소이다. 수열의 원소는 10000보다 작거나 같은 음이 아닌 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 가장 짧은 소수 부분 수열의 길이가 x라면 "Shortest primed subsequence is length x:"를 출력하고, 그 수열 공백으로 구분해 출력한다. 가장 짧은 소수 부분 수열이 여러 가지면, 먼저 나오는 것을 출력한다.</p>

<p>소수 부분 수열이 없는 경우에는 "This sequence is anti-primed."를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
5 3 5 6 3 8
5 6 4 5 4 12
21 15 17 16 32 28 22 26 30 34 29 31 20 24 18 33 35 25 27 23 19 21
','Shortest primed subsequence is length 2: 5 6
Shortest primed subsequence is length 3: 4 5 4
This sequence is anti-primed.
','MATH'),
                                                                                                                (1116,'BAEKJOON','https://www.acmicpc.net/problem/7053',7053,'시프트 레지스터','1초','128 MB',18,'<p>레지스터는 계산을 하기 위해서 N비트를 저장한다. 시프트 레지스터는 레지스터의 특수한 형태로, 모든 비트를 한 자리씩 시프트 시킬 수 있다.</p>

<p>시프트 레지스터의 결과를 이용해 다음과 같이 바이너리 유사난수를 얻을 수 있다. 크기가 N인 시프트 레지스터에 a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>N</sub>이 저장되어 있다. 클럭틱마다 레지스터는 가장 오른쪽 비트 a<sub>N</sub>을 출력한다. 다른 비트는 모두 오른쪽으로 한 칸 이동하게 된다. 첫 번째 비트 a′<sub>1</sub>은 다음과 같은 방법으로 구할 수 있다.</p>

<p>레지스터의 모든 비트는 아래 그림과 같이 스위치를 통해 XOR 게이트와 연결되어 있다. 각각의 비트 i마다 스위치 s<sub>i</sub>(1 또는 0)가 존재하며, 스위치는 a<sub>i</sub>를 XOR 게이트로 보낼지 말지를 결정하게 된다. k<sub>i</sub> = s<sub>i</sub>·a<sub>i</sub>라고 했을 때, a′<sub>1</sub>은 XOR게이트의 출력값 XOR(k<sub>1</sub>, ..., k<sub>N</sub>)이 된다. (k<sub>1</sub>, ..., k<sub>N</sub>에서 1의 개수가 홀수개이면 XOR(k<sub>1</sub>, ..., k<sub>N</sub>) = 1이고, 아니면 0이다)</p>

<ul>
	<li>a′<sub>1</sub> = XOR(k<sub>1</sub>, ..., k<sub>N</sub>)</li>
	<li>a′<sub>i</sub> = a<sub>i-1</sub> for 2 ≤ i ≤ N</li>
	<li>output = a<sub>N</sub></li>
</ul>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/efcd80dd-e936-4087-899b-56b4b47a5525/-/preview/" style="width: 366.667px; height: 200px;"></p>

<p>위의 예제에서 틱 1에서 a1은 다음과 같이 XOR(1·1, 0·0, 1·1, 1·1, 0·0, 1·0, 1·1) = 0</p>

<p>시프트 레지스터의 결과 중 처음 2N개가 주어진다. 이때, 스위치 값 si를 결정하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 시프트 레지스터의 크기 N이 주어진다. (1 ≤ N ≤ 750) 둘째 줄에는 시프트 레지스터의 결과중 처음 2N개가 주어지며, 0 또는 1이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어진 레지스터 출력 결과를 갖는 스위치 세팅이 존재하는 경우에는 si를 공백으로 구분해서 출력하고, 존재하지 않는 경우에는 -1을 출력한다.</p>

<p>가능한 스위치 세팅이 여러 가지인 경우에는 아무거나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7
1 0 0 1 1 0 1 0 1 1 0 0 1 1
','1 0 1 1 0 1 1
','MATH'),
                                                                                                                (1142,'BAEKJOON','https://www.acmicpc.net/problem/7345',7345,'다항식의 나머지 연산','1초','128 MB',8,'<p>계수가 0 또는 1로만 이루어지는 특수한 다항식들의 집합에&nbsp;대해 생각해보자.</p>

<p>이 집합의 두 다항식을 더하는 방법은 다음과 같다.</p>

<ul>
	<li>우선, 두 다항식을 더한다.</li>
	<li>결과 다항식의&nbsp;각 계수를 2로 나눈 나머지를 각각의&nbsp;계수에 대입한다.</li>
</ul>

<p>이때,&nbsp;(0 + 0) mod 2 = 0, (0 + 1) mod 2 = 1, (1 + 0) mod 2 = 1, and (1 + 1) mod 2 = 0 이므로</p>

<p>결국 결과 다항식의 각 차수의 계수는 더하고자 했던 두 다항식의 계수에 대한 XOR 연산의 결과가 된다.</p>

<p>(x <sup>6</sup> + x<sup>4</sup> + x<sup>2</sup> + x + 1) + (x<sup>7</sup> + x + 1) = x<sup>7</sup> + x<sup>6</sup> + x<sup>4</sup> + x<sup>2</sup></p>

<p>이제 뺄셈을 정의하는데, 뺄셈의 경우에도 덧셈과 같이&nbsp;(0 - 0) mod 2 = 0, (0 -&nbsp;1) mod 2 = 1, (1 - 0) mod 2 = 1, and (1 - 1) mod 2 = 0 이므로<br>
덧셈과 뺄셈은 이 다항식들의&nbsp;집합에 대해 동일한 의미를 지닌다. (계수 간의 XOR 연산이 새 다항식의 계수가 됨)</p>

<p>예시는 다음과 같다.</p>

<p>(x <sup>6</sup> + x<sup>4</sup> + x<sup>2</sup> + x + 1) - (x<sup>7</sup> + x + 1) = x<sup>7</sup> + x<sup>6</sup> + x<sup>4</sup> + x<sup>2</sup></p>

<p>다음으로 곱셈을 정의하는데, 곱셈 또한 일반적인 다항식 간의 곱셈 연산을 한 뒤 각각의 계수를 2로 나눈 나머지를 취하면 된다.</p>

<p>(x <sup>6</sup> + x<sup>4</sup> + x<sup>2</sup> + x + 1) (x<sup>7</sup>+ x + 1) = x<sup>13</sup> + x<sup>11</sup> + x<sup>9</sup> + x<sup>8</sup> + x<sup>6</sup> + x<sup>5</sup> + x<sup>4</sup> + x<sup>3</sup> + 1</p>

<p>두 다항식 f(x)와 g(x)의 곱을 h(x)로 나눈 나머지는 f(x)와 g(x)를 위와 같은 방법으로 곱한 뒤, h(x)로 나눈 나머지가 된다.</p>

<p>(x <sup>6</sup> + x<sup>4</sup> + x<sup>2</sup> + x + 1) (x<sup>7</sup> + x + 1) modulo (x<sup>8</sup> + x<sup>4</sup> + x<sup>3</sup> + x + 1) = x<sup>7</sup> + x<sup>6</sup> + 1</p>

<p>어떤 다항식의 최고차항의 차수를 degree, 줄여서 d라 하면, f(x), g(x), h(x)의 계수가 0 또는 1이므로 각 다항식은&nbsp;정수 d+1과 길이 d+1인&nbsp;비트스트링의 쌍으로 유일하게&nbsp;표기할 수 있다. 다항식의 차수는 1000보다 작다.</p>

<p>예를 들어&nbsp;x <sup>7</sup> + x<sup>6</sup> + 1은 다음과 같이 표기된다.</p>

<p>8 1 1 0 0 0 0 0 1</p>

<p>이때, 8은 총 비트의 개수이며, 최고차항의 차수(7) + 1이다.</p>

<p>이제 위에서 설명한 성질을 만족하는&nbsp;세 다항식 f(x), g(x), h(x)가 설명한 형식대로&nbsp;주어지면 f(x)g(x) modulo h(x)를 계산하면 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 테스트 케이스로 이루어져 있다.</p>

<p>입력의 첫 줄에 테스트케이스의 수 T가 주어지며, 각 테스트 케이스마다 세 줄에 걸쳐&nbsp;문제에서 설명한 형식대로 표기한 f(x), g(x), h(x)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 한 줄에&nbsp;f(x)g(x)를 h(x)로 나눈 나머지를&nbsp;문제에서 설명한 형식대로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
7 1 0 1 0 1 1 1
8 1 0 0 0 0 0 1 1
9 1 0 0 0 1 1 0 1 1
10 1 1 0 1 0 0 1 0 0 1
12 1 1 0 1 0 0 1 1 0 0 1 0
15 1 0 1 0 1 1 0 1 1 1 1 1 0 0 1
','8 1 1 0 0 0 0 0 1
14 1 1 0 1 1 0 0 1 1 1 0 1 0 0
','MATH'),
                                                                                                                (1150,'BAEKJOON','https://www.acmicpc.net/problem/7347',7347,'플립과 시프트','1초','128 MB',9,'<p>이 퍼즐은 m개의 검은색 원판과, n개의 흰색 원판으로 이루어진 임의의 수열(sequence)이 타원형 모양의 트랙에 배치되어 있는 구조입니다. 또 이 게임에서는&nbsp;플립(flip)이라는 동작을 할 수 있는 디스크를 이용할 수 있습니다. 플립은 임의의 세 연속된 디스크를 골라 그림과 같이 회전시켜서, 가운데 디스크는 그대로고 양 끝 디스크들의 위치를 바꾸는 동작을 말합니다. (Figure 1 참고) 플립을 할 때에는&nbsp;트랙 위 어느 디스크를 중심으로도 회전시킬 수 있습니다.</p>

<p>&nbsp;</p>

<p><img alt="fns.png" src="https://upload.acmicpc.net/a2d73457-771b-4bb7-a157-8d7a4242ab4b/-/preview/" style="width: 340px; height: 172.5px;"></p>

<p><img alt="fns2.png" src="https://upload.acmicpc.net/cc4c59c2-8446-457c-9b95-704f1e026cba/-/preview/"></p>

<p>m개의 검은색 원판과 n개의 흰색 원판으로 이루어진 수열이 주어질 때, 플립을 유한 번 수행하여 (Figure 2처럼) 검은색 원판은 검은색 원판끼리, 흰색 원판은 흰색 원판끼리 한 곳에 연속적으로 모여 있는 상태를 만들 수 있을지 없을지 판단하는 프로그램을 작성하세요.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어집니다.</p>

<p>각 테스트 케이스는 한 줄로 이루어져 있습니다. 처음 주어진 수는 수열의 길이(10 ≤ m+n ≤ 30)이고, 그 다음 m개의 0(흰색 디스크)과 n개의 1(검은색 디스크)로 이루어진 수열이 주어집니다.&nbsp; m+n 은 10 이상 30 미만입니다. 또한 각각의 수는 공백으로 구분됩니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다, 흰색과 검은색 디스크들을 분리해 낼 수 있으면 YES를, 아니면 NO를 한 줄에 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
18 0 0 1 0 1 1 1 1 0 1 0 0 1 0 0 0 0 1
14 1 1 0 0 1 1 1 0 0 1 1 0 1 0
','YES
NO
','MATH'),
                                                                                                                (1144,'BAEKJOON','https://www.acmicpc.net/problem/7354',7354,'트리의 순서','1초','128 MB',16,'<p>다음과 과정을 거쳐서 바이너리 트리에 번호를 붙일 수 있다.</p>

<ul>
	<li>비어있는 트리의 번호는 0이다.</li>
	<li>노드가 1개인 트리는 1번이다.</li>
	<li>노드가 m개인 바이너리 트리의 번호는 m+1개인 트리의 번호보다 작다.</li>
	<li>노드가 m개이고, 왼쪽과 오른쪽 서브트리가 각각 L과 R인 바이너리 트리의 번호 n은 아래와 같은 두 조건 중 하나라도 만족하는 트리보다 번호가 작다.&nbsp;
	<ul>
		<li>왼쪽 서브 트리가 L보다 번호가 크다. 또는</li>
		<li>왼쪽 서브 트리가 L과 같고, 오른쪽 서브트리가 R보다 번호가 크다.</li>
	</ul>
	</li>
</ul>

<p>처음 10개 바이너리 트리와 20번째 바이너리 트리를 그림으로 그려보면 아래와 같다.</p>

<pre>        0  1  2      3  4      5      6      7      8  9        ...     20

           X  X      X  X      X      X      X      X  X                 X
               \    /    \      \    / \    /      /    \               /
                X  X      X      X  X   X  X      X      X             X
                           \    /           \    /        \           / \
                            X  X             X  X          X         X   X
                                                            \
                                                             X
</pre>

<p>n이 주어졌을 때, n번째 바이너리 트리를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있으며, n이 하나 주어진다. (1 ≤ n ≤ 500,000,000) n=0인 경우에 프로그램을 종료하면 된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 n에 대해서, 트리를 아래와 같이 출력한다.</p>

<ul>
	<li>자식이 없는 트리는 x로 출력한다.</li>
	<li>왼쪽, 오른쪽 서브트리가 L과 R이고, 각각을 출력한 결과가 L, R일 때, (L)x(R)을 출력한다.
	<ul>
		<li>L이 비어잇으면 X(R)을 출력한다.</li>
		<li>R이 비어있으면 (L)x를 출력한다.</li>
	</ul>
	</li>
</ul>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
20
31117532
0
','X
((X)X(X))X
(X(X(((X(X))X(X))X(X))))X(((X((X)X((X)X)))X)X)
','MATH'),
                                                                                                                (1165,'BAEKJOON','https://www.acmicpc.net/problem/7481',7481,'ATM놀이','1초','128 MB',9,'<p>ATM에는 다른 종류 두 가지의 지폐가 굉장히 많이 있다. ATM에서 돈을 찾을 때 ATM은 예금주의 잔액을 넘지 않는 범위에서 정확한 양의 돈을 지급한다. 꿍은 지폐를 많이 들고다니고 싶지 않기때문에 되도록이면 가장 적은 수의 지폐를 들고다니고 싶어한다.</p>

<p>여러분은 가장 적은 수의 지폐로 꿍이 인출하려는 금액을 정확히 지급해주는 ATM을 만들어야 한다. ATM을 만들 때, ATM안에는 무제한으로 지폐가 들어있다고 가정해도 좋다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한줄로 이루어져 있으며 각 줄에는 a, b(ATM에 있는 지폐의 종류)와 S(꿍이 인출하려는 금액) 세개의 정수로 이루어져 있으며 공백으로 구분되어 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트케이스에 대해 ATM에서 인출되는 두 가지 지폐의 장수를 각각 출력한다. 만약 가능한 경우가 없다면 "Impossible" (따옴표 제외)이라고 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 10 23
3 2 7
4 6 2
','3 2
1 2
Impossible
','MATH'),
                                                                                                                (1167,'BAEKJOON','https://www.acmicpc.net/problem/7482',7482,'상자 만들기','1초','128 MB',6,'<p>꿍은 미래의 여자친구에게 선물을 주기 위해&nbsp;a×a 사이즈의 판자를 이용해&nbsp;미리 선물상자를 만들려고 한다. 이 선물상자는 밑면이 정사각형이어야 하며 맨 위는 뚫려있어야 한다. 선물상자는 아래와 같이&nbsp;두 가지 단계를 거쳐 만들어진다. 먼저 각 꼭짓점에서 bxb 사이즈의 정사각형모양으로 판자를 잘라낸 후, 직사각형 모양의 판자를 수직으로 세워 붙인다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images2/box.png" style="height: 134.167px; width: 363.333px;"></p>

<p>꿍은 미래의 여자친구에게 최대한 큰 부피의 선물을 주고싶어한다. 따라서 여러분은 꿍이 가장 큰 부피의 선물상자를 만들 수 있도록 선물상자의 부피가 최대가 되게하는 높이 b를 찾아야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄은 테스트케이스의 개수인&nbsp;n (1≤n≤10)이 주어진다. 다음 n줄에는 각각 판자의 모서리 길이인 a(1≤a≤1024)가 실수형태로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 선물상자의 부피가 최대가 되게 하는 b의 값을 소수점 아래 10자리까지 나타내어라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>이 문제를 풀고 시간이 남는다면 꿍이 여자친구도 찾을 수 있도록 도와주어라.</p>

				</div>
				</div>','1
34.0
','5.6666666667
','MATH'),
                                                                                                                (1169,'BAEKJOON','https://www.acmicpc.net/problem/7489',7489,'팩토리얼','1초','128 MB',4,'<p>n!은 정수 n에 대한 팩토리얼 수를 나타내는데, 이는 1부터 n까지의 모든 정수의 곱을 의미한다. 팩토리얼은 굉장히 빨리 커지기 때문에 13!는 대부분의 컴퓨터에서 32비트 정수형을, 70!은 대부분의 부동 소수점 변수의 범위를 넘어선다. 우리는 n!에 대하여 0이 아닌 최우측 수(<strong>the rightmost non-zero digit</strong>)를 찾으려고 한다. 예를 들어, 5! = 1 * 2 * 3 * 4 * 5 = 120 이므로 5!의 최우측 0이 아닌 수는 2이다. 마찬가지로 7! = 1 * 2 * 3 * 4 * 5 * 6 * 7 = 5040이며 7!의 0이 아닌 최우측 수는 4가 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 수 <strong>t</strong> ( 0 < <strong>t</strong> < 15)가 주어진다. 연속하여 t개의 줄에는 정수 <strong>n</strong>이 하나씩 주어진다. ( 0 < <strong>n</strong> < 1001).</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>n!의 최우측 0이 아닌 수(<strong>the rightmost non-zero digit</strong>)를 출력하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>비슷한 문제로 <a href="https://www.acmicpc.net/problem/2553">https://www.acmicpc.net/problem/2553</a>가 있다.</p>

				</div>
				</div>','1
5
','2
','MATH'),
                                                                                                                (1170,'BAEKJOON','https://www.acmicpc.net/problem/7510',7510,'고급 수학','1초','128 MB',3,'<p>준규는 집을 짓고 있다. 준규는 모든 벽 모양을 직각 삼각형으로 만들려고 한다. 적절히 나무를 잘라 삼각형을 만들었지만, 준규는 각도를 측정할 수 있는 도구를 가지고 있지 않다. 어쩔 수 없이 줄자를 이용해 삼각형 세 변의 길이를 측정한 다음, 직각 삼각형인지 아닌지를 알아보려고 한다.</p>

<p>삼각형 세 변의 길이가 주어졌을 때, 직각 삼각형인지 아닌지를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫째 줄에는 테스트 케이스의 개수 n이 주어진다. 각 테스트 케이스는 세 정수 1 ≤ a, b, c ≤ 40000 으로 이루어져 있다. 세 정수는 삼각형 각 변의 길이를 나타낸다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 "Scenario #i:"를 출력한다. i는 테스트 케이스 번호이며, 1부터 시작한다. 그 다음 줄에는 입력으로 주어진 삼각형이 직각 삼각형인 경우에는 "yes", 아닌 경우에는 "no"를 출력한다. 각 테스트 케이스 사이에는 빈 줄을 하나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
36 77 85
40 55 69
','Scenario #1:
yes

Scenario #2:
no
','MATH'),
                                                                                                                (1171,'BAEKJOON','https://www.acmicpc.net/problem/7512',7512,'연속하는 소수의 합','2초','128 MB',13,'<p>숫자 m개가 주어지며, 각 숫자를 n<sub>i</sub>라고 한다. (1 ≤ i ≤ m)</p>

<p>이때, 모든 i에 대해서, 연속하는 소수 n<sub>i</sub>개의 합으로 나타낼 수 있는 가장 작은 소수를 찾는 프로그램을 작성하시오.</p>

<p>예를 들어, m = 2, n<sub>1</sub> = 3, n<sub>2</sub> = 5인 경우에 정답은 83이다. (83 = 23 + 29 + 31 = 11 + 13 + 17 + 19 + 23)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수가 주어진다. 각 테스트 케이스의 첫째 줄에는 1 ≤ m ≤ 10 이 주어진다. 둘째 줄에는 n<sub>i</sub>가 주어진다. (1 ≤ n<sub>i</sub> ≤ 10<sup>4</sup>)</p>

<p>항상 정답은 10<sup>7</sup>보다 작다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 "Scenario i:"를 출력하고, 둘째 줄에 정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
2
3 5
3
3 5 7
','Scenario 1:
83

Scenario 2:
311
','MATH'),
                                                                                                                (1172,'BAEKJOON','https://www.acmicpc.net/problem/7516',7516,'알렉산드리아의 디오판토스','1초','128 MB',16,'<p>알렉산드리아의 디오판토스는 알렉산드리아에 살던 이집트 수학자이다. 그는 정수로된 해 만을 가지는 다항 방정을 처음으로 연구한 수학자이다. 그를 기리기 위해서 후대에 이 방정식은 디오판토스 방정식이라고 이름이 붙었다.&nbsp;</p>

<p>가장 유명한 디오판토스 방정식은 \(x^n + y^n = z^n\)이다. 페르마는 \(n\) > 2인 경우에 정수해가 존재하지 않는다고 추론했고, 앤드루 와일스가 증명했다.&nbsp;</p>

<p>다음과 같은 디오판토스 방정식이 있다.</p>

<p>\(\frac{1}{x} + \frac{1}{y} = \frac{1}{n}\) where \(x,y,n \in \mathbb{N}^+\)</p>

<p>\(n\)이 주어졌을 때, 이 방정식의 해는 총 몇 개일까? (\(x\) ≤ \(y\)) \(n\) = 4인 경우에 아래와 같이 총 3가지 해가 존재한다.</p>

<p>\(\frac{1}{5} + \frac{1}{20} = \frac{1}{4}\) \(\frac{1}{6} + \frac{1}{12} = \frac{1}{4}\) \(\frac{1}{8} + \frac{1}{8} = \frac{1}{4}\)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있으며, \(n\)이 주어진다. (1 ≤ \(n\) ≤ 10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스마다 "Scenario #i:"를 출력하고, 주어진 n에 대한 방정식의 해의 개수를 출력한다. 각 테스트 케이스 사이에는 빈 줄을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
4
1260
','Scenario #1:
3

Scenario #2:
113
','MATH'),
                                                                                                                (1173,'BAEKJOON','https://www.acmicpc.net/problem/7523',7523,'Gauß','1초','128 MB',3,'<p>카를 프리드리히 가우스는 독일의 수학자이다.</p>

<p>가우스가 초등학교에 다닐 때, 선생님 J.G. Buttner는 1부터 100까지 수의 합을 계산하게 시켰다. 가우스는 몇 초만에 정확한 답 5050을 계산했다.</p>

<p>n과 m 이 주어졌을 때, n보다 크거나 같고, m보다 작거나 같은 모든 정수의 합을 구하는 프로그램을 작성하시오. 즉, 다음을 계산하라.</p>

<p>\[\sum_{i=n}^{m} {i} = n+(n+1)+(n+2)+ \dots + (m-1) + m\]</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있으며, n과 m이 주어진다. (-10<sup>9</sup> ≤ n ≤ m ≤ 10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 "Scenario #i:"를 출력한 다음, n부터 m까지 모든 정수의 합을 출력한다. 각 테스트 케이스 사이에는 빈 줄을 하나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 100
-11 10
-89173 938749341
','Scenario #1:
5050

Scenario #2:
-11

Scenario #3:
440625159107385260
','MATH'),
                                                                                                                (1175,'BAEKJOON','https://www.acmicpc.net/problem/7546',7546,'소수의 주기','1초','128 MB',8,'<p>선영이는 계산기가 없으면 두 수의 나눗셈을 계산할 수 없다. 선영이는 다가오는 시험을 대비하기 위해 나눗셈을 계산해보려고 한다. 이번 시험에는 \(b\)진법으로 나타낸 두 수를 나눴을 때, 주기의 길이를 구하는 문제가 나온다. 선영이는 자신이 손으로 계산한 결과가 정답과 맞는지를 확인하는 프로그램을 작성하려고 한다.</p>

<p>진법 \(b\), 분자 \(x\), 분모 \(y\)가 주어진다. \(x\)와 \(y\)는 모두 \(b\)진법으로 나타낸 수이다. \(b\)진법 수 \(q = \frac {x} {y}\)의 주기를 구하는 프로그램을 작성하시오. 유리수 \(q\)를 b진법으로 나타내는 방법은 다음과 같다.</p>

<p>\(q=q_{n}q_{n-1}\dots q_{0}.q_{-1}q_{-2} \dots = \sum _{i=-\infty } ^{n}{q_ib^i}\)</p>

<p>아래는 예이다.</p>

<p>\(\frac {1_{10}}{2_{10}} = 0.5_{10}\), \(\frac {1_3} {10_3} = 0.1_3\), \(\frac {2_{10}}{11_{10}} = 0.181818\dots_{10} = 0.\overline { 18 } &nbsp;_{10}\)</p>

<p>위의 처음 두 예제는 유한 소수이다. 따라서, 주기의 길이는 0이다. 첫 번째 예제의 경우에 주기의 길이가 1인 \(0.4\overline { 9 } _{ 10 }\)로 나타낼 수 있지만, 이 문제에서 그러한 경우는 신경쓰지 않는다.</p>

<p>세 번째 예제의 경우 주기의 길이는 2이다.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 수가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있으며, \(b\), \(x\), \(y\)가 주어진다. (2 ≤ \(b\) ≤ 36, 0 < \(y\) ≤ 100000<sub>10</sub>) 0부터 9까지 숫자로 나타낼 수 없는 자리는 a와 A로 시작하는 글자로 나타낸다. 이때, 대소문자는 구별하지 않는다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 "Scenario #i:"를 출력한 다음에, 주기의 길이를 출력한다. 각 테스트 케이스 사이에는 빈 칸을 하나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
10 1 2
3 1 10
10 2 11
36 HI ho
','Scenario #1:
0

Scenario #2:
0

Scenario #3:
2

Scenario #4:
13
','MATH'),
                                                                                                                (1178,'BAEKJOON','https://www.acmicpc.net/problem/7558',7558,'제곱잉여','1초','128 MB',13,'<p>1801년에 칼 프리드리히 가우스 (1777-1855)는 현대 정수론의 토대를 마련한 "Disquisitiones Arithmeticae"를 발표했고, 오늘날까지 팔리고 있다. 이 책에서 가장 많이 나온 주제 중 하나는 제곱잉여이다.</p>

<p>소수 \(p\)와 정수 \(a \not\equiv 0 \pmod{p}\) 가 있다. \(a\)가 \(p\)에 대한 제곱잉여가 되려면 다음과 같은 조건을 만족하는 정수 \(x\)가 존재해야 한다.</p>

<p>\[x^2 \equiv a \pmod{p}\]</p>

<p>라그랑주 (1752-1833)은 아래와 같은 르장드르 기호를 만들었다.</p>

<p>\[\left(\frac{a}{p}\right) =&nbsp;<br>
\begin{cases}<br>
&nbsp;1 &amp; a \text{ 가 } p \text{ 에 대한 제곱잉여인 경우} \\<br>
-1 &amp; a \text{ 가 } p \text{ 에 대한 제곱잉여가 아닌 경우} \\<br>
\end{cases}\]</p>

<p>르장드르 기호를 계산하려면 다음과 같은 성질을 이용하면 좋으며, 서로 다른 홀수 소수 \(p\), \(q\)와 \(p\)로 나누어 떨어지지 않는 \(a\), \(b\)에 대해서만 성립한다.</p>

<ol>
	<li>\(\left(\frac{ab}{p}\right) = \left(\frac{a}{p}\right)\left(\frac{b}{p}\right)\)</li>
	<li>\(\left(\frac{1}{p}\right) = 1\)</li>
	<li>\(a \equiv b \pmod{p} \Rightarrow \left(\frac{a}{p}\right) = \left(\frac{b}{p}\right)\)</li>
	<li>\(\left(\frac{-1}{p}\right) = (-1)^{(p-1)/2}, \left(\frac{2}{p}\right) = (-1)^{(p^2-1)/8}\)</li>
	<li>\(\left(\frac{p}{q}\right)\left(\frac{q}{p}\right) = (-1)^{(p-1)(q-1)/4}\)</li>
</ol>

<p>이제 다음과 같이 르장드르 기호를 쉽게 계산할 수 있다.</p>

<p>\[\left(\frac{29}{79}\right) = (-1)^{78\cdot28/4} \left(\frac{79}{29}\right) &nbsp;= \left(\frac{79}{29}\right) = \left(\frac{-8}{29}\right) = \left(\frac{-1}{29}\right) \left(\frac{2}{29}\right)^{3} = \left(\frac{-1}{29}\right) \left(\frac{2}{29}\right) \\ = (-1)^{28/2}(-1)^{(29^2-1)/8} = (-1)^{14}(-1)^{105} = -1\]</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있고,각 테스트 케이스는 두 정수 \(a\)와 \(p\)로 이루어져 있다. \(p\) (\(2 < p < 10^9\))는 홀수 소수이고, \(a\)는 \(a \not\equiv 0 \pmod{p}\)와 \(\left| a \right| \le 10^9\)를 만족한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 "Scenario #i:"를 출력한다. i는 테스트 케이스 번호이며 1부터 시작한다. 그 다음 줄에 \(\left(\frac{a}{p}\right)\)를 출력하고 빈 줄을 하나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
29 79
2 29
1 3
','Scenario #1:
-1

Scenario #2:
-1

Scenario #3:
1
','MATH'),
                                                                                                                (1180,'BAEKJOON','https://www.acmicpc.net/problem/7561',7561,'크래머의 공식','1초','128 MB',12,'<p>세 변수 \(x_1\), \(x_2\), \(x_3\)로 이루어진 일차 방정식 세 개가 있다. \(a_{ij}\)와 \(b_i\)가 주어졌을 때, 다음과 같이 표현할 수 있다.</p>

<p>\(\begin{vmatrix} a_{ 11 }x_{ 1 }+a_{ 12 }x_{ 2 }+a_{ 13 }x_{ 3 }=b_{ 1 } \\ a_{ 21 }x_{ 1 }+a_{ 22 }x_{ 2 }+a_{ 23 }x_{ 3 }=b_{ 2 } \\ a_{ 31 }x_{ 1 }+a_{ 32 }x_{ 2 }+a_{ 33 }x_{ 3 }=b_{ 3 } \end{vmatrix}\)</p>

<p>행렬과 벡터를 이용하면 다음과 같이 나타낼 수 있다.</p>

<p>\(A\cdot x=b\), where \(A=\begin{pmatrix} a_{11} &amp; a_{12} &amp; a_{13} \\ a_{21} &amp; a_{22} &amp; a_{23} \\ a_{31} &amp; a_{32} &amp; a_{33} \end{pmatrix}\), \(b=\begin{pmatrix} b_1 \\ b_2 \\ b_3 \end{pmatrix}\), x=\(\begin{pmatrix} x_1 \\ x_2 \\ x_3 \end{pmatrix}\)</p>

<p>크래머의 공식을 이용하면 방정식의 해는 행렬식(determinant)를 이용해 다음과 같이 구할 수 있다.</p>

<p>\(x_i = \frac {det~A_i}{det~A}\)</p>

<p>\(A_i\) 는 행렬 \(A\)의 \(i\)번째 열을 벡터 \(b\)로 대체한 것이다. 예를 들어, \(3 \times 3\) 행렬의 행렬식은 아래와 같이 구할 수 있다.</p>

<p>\(det\begin{pmatrix} a_{11} &amp; a_{12} &amp; a_{13} \\ a_{21} &amp; a_{22} &amp; a_{23} \\ a_{31} &amp; a_{32} &amp; a_{33} \end{pmatrix} = a_{11}(a_{22}a_{33} - a_{23}a_{32})&nbsp;- a_{12}(a_{21}a_{33} - a_{23}a_{31}) + a_{13}(a_{21}a_{32}-a_{22}a_{31})\)</p>

<p>크래머의 공식은 \(det~A \ne 0\)인 경우에만 해를 구할 수 있다. \(det~A \ne 0\)인 경우에 방정식의 해는 유일하고, 그렇지 않은 경우에는 해가 없거나 무수히 많은 해를 가진다.</p>

<p>방정식이 많은 경우에는 행렬식을 구하는데 시간이 너무 많이 걸린다. 따라서, 이런 경우에는 다른 방법을 사용하는 것이 더 효율적이다.</p>

<p>세 변수로 이루어진 일차 방정식 세 개가 주어진다. 크래머의 공식을 이용해서 해를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다.</p>

<p>각 테스트 케이스는 세 줄로 이루어져 있고, 아래와 같은 순서로 주어진다.</p>

<p>\(\begin{matrix} a_{11} &amp; a_{12} &amp; a_{13} &amp; b_1 \\ a_{21} &amp; a_{22} &nbsp;&amp; a_{23} &amp; b_{2} &nbsp;\\ a_{31} &nbsp;&amp; a_{32} &amp; a_{33} &amp; b_{3} &nbsp;\end{matrix}\)</p>

<p>모든 숫자는 -1000보다 크거나 같고, 1000보다 작거나 같은 정수이며, 공백 한 칸으로 구분되어져 있다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 두 줄을 출력한다.</p>

<p>첫째 줄에는 행렬 \(A_1\), \(A_2\), \(A_3\), \(A\)의 행렬식을 출력한다.&nbsp;</p>

<p>방정식의 해가 존재하지 않는 경우에는 둘째 줄에 "No unique solution"을 출력하고, 해가 존재하는 경우에는 "Unique solution: "와 \(x_1\), \(x_2\), \(x_3\) 값을 소수점 셋째자리까지 출력한다.</p>

<p>방정식의 해 \(x_i\)가 -0.0005 < \(x_i\) < 0.0005 인 경우에는 "-0.000" 대신에 "0.000"을 출력한다.</p>

<p>각 테스트 케이스 사이에는 빈 줄을 하나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
4 0 0 1
0 2 0 2
0 0 1 4
1 2 3 1
1 1 1 2
2 2 2 3
1 0 0 1
0 1 0 0
0 0 -1 0
','2 8 32 8
Unique solution: 0.250 1.000 4.000

1 -2 1 0
No unique solution

-1 0 0 -1
Unique solution: 1.000 0.000 0.000
','MATH'),
                                                                                                                (1184,'BAEKJOON','https://www.acmicpc.net/problem/7571',7571,'점 모으기','1초','256 MB',10,'<p>행의 크기와 열의 크기가 각각 N인 격자공간에 M개의 점이 있다. N = 4이고 M = 4인 경우의 예가 아래에 있다. 격자공간 왼쪽의 숫자는 행 번호이며, 위의 숫자는 열 번호를 나타낸다. 그리고 격자공간내의 각 사각형의 위치는 (행 번호, 열 번호)로 표시한다</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/6bcf9e42-6550-4fa6-bd0e-c18fc51637fd/-/preview/" style="width: 136px; height: 119px;"></p>

<p>이제 격자공간에 있는 모든 점들을 하나의 사각형 안으로 모으려고 한다. 어떤 점을 움직일 때는 그 점이 들어있는 사각형에서 상하좌우로 인접한 사각형으로만 움직일 수 있다.</p>

<p>여기에서는 격자공간내의 한 사각형으로 모든 점들을 모을 때 각 점이 움직인 거리의 합을 고려한다. 예를 들어, 위의 점들을 (3,2)에 있는 사각형으로 모을 때 최단거리로 점들을 이동시킨다면 (1,2)에 있는 점의 이동거리는 2이고, (3,1)과 (4,2)에 있는 점의 이동거리는 각각 1이며, (1,4) 에 있는 점의 이동거리는 4이므로 점들이 움직인 거리의 합은 8이다. 또, 위의 모든 점들을 (1,2)의 위치로 모을 때도 점들이 이동한 거리의 합이 8 임을 알 수 있다. 위의 예에서는 점들을 어떤 하나의 사각형으로 모을 때 이동거리의 합이 8보다 작게 되는 사각형은 없다.</p>

<p>이 문제는 주어진 격자공간에 있는 모든 점들을 하나의 사각형으로 모을 때 드는 이동거리의 합의 최솟값을 구하는 것이다. 주어진 격자공간에서는 하나의 사각형에 여러 개의 점들이 들어 있을 수도 있고, 점들을 모을 때는 어떤 점이 들어 있는 사각형으로도 모을 수 있다고 가정한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에는 격자공간의 크기와 점들의 개수를 나타내는 두 정수 N과 M이 하나의 공백을 사이에 두고 주어진다. 다음의 M줄에는 각 줄마다 격자공간내의 점의 위치를 나타내는 두 개의 정수가 하나의 공백을 사이에 두고 주어진다. 단, N의 크기는 1이상 10,000이하이고, M의 크기는 1이상 100,000이하이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>여러분은 모든 점들을 하나의 사각형으로 모을 때 드는 이동거리의 합의 최솟값을 출력해야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 4
1 2
1 4
3 1
4 2
','8
','MATH'),
                                                                                                                (1181,'BAEKJOON','https://www.acmicpc.net/problem/7572',7572,'간지(干支)','1초','128 MB',4,'<p>예로부터 동아시아에서는 십간(十干)과 십이지(十二支)를 사용하여 연도를 표시하였다. 십간은 "<strong>갑을병정무기경신임계</strong>"를 말하며 십이지는 "<strong>자축인묘진사오미신유술해</strong>"를 말한다. 십간과 십이지로 구성된 간지를 사용하여 60년을 주기로 각 연도에 다음과 같이 이름을 부여한다: 최초 1년째는 "갑자"이고, 2년째는 "을축", 3년째는 "병인" 과 같이 올해의 간지에서 십간과 십이지의 다음 문자를 이듬해의 간지로 사용한다. 십간은 10년을 주기로, 십이지는 12년을 주기로 순환된다. 이런 순서로 하여 마지막 "계해"는 60년째를 나타내고, 61년째는 다시 "갑자"가 된다.</p>

<p>60갑자를 서양식으로 나타내기 위해&nbsp;</p>

<ol>
	<li>십간을 0부터 9까지의 정수로 표현하고&nbsp;</li>
	<li>십이지를 "ABCDEFGHIJKL"로 표현하고</li>
	<li>십간과 십이지의 순서를 바꾼다고 하자.</li>
</ol>

<p>이를 서양식 간지 표현법이라고 부르자. 예를 들면, "갑자"는 "A0"로 "을축"은 "B1", "계해"는 "L9"으로 표현된다. 2013년은 계사년이므로 "F9"으로 표현되고, 2014년은 갑오년으로 "G0" 로 표현된다.</p>

<p>입력으로 주어진 연도를 서양식 간지 표현법으로 나타낸 것을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>한 줄에 연도를 나타내는 1개의 정수 N 이 주어진다. 단, 1 ≤ N ≤ 1,000,000 이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어진 연도 N을 서양식 간지 표현법으로 표현한 문자열을 한 줄에 출력한다. 2013년이 "F9"로 표현된다는 사실을 이용하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2060
','E6
','MATH'),
                                                                                                                (1185,'BAEKJOON','https://www.acmicpc.net/problem/7623',7623,'무한 게임','5초','128 MB',21,'<p>상근이는 지난 밤에 술을 많이 마셨고, 지금 학교 근처를 배회하고 있다. 상근이는 술에 취하면, 두 집합 A와 B를 이용해서 움직인다. A와 B는 크기가 유한인 양의 정수의 부분 집합이다.</p>

<p>상근이는 지금 0에 서있다. 이동할 때, A에서 수 하나를 골라서 그 숫자만큼 오른쪽으로 걷거나, B에서 수 하나를 골라서 그만큼 왼쪽으로 걸어간다. 홀수번째에는 수를 A에서 고르고, 짝수번째에는 B를 고른다음에 움직인다.</p>

<p>과연 상근이가 모든 정수 x(양수, 음수 모두)에 도달할 수 있는지 아닌지를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 수 t가 주어진다. (1 ≤ t ≤ 500) 다음 줄에는 각 테스트 케이스가 주어진다.</p>

<p>테스트 케이스의 첫째 줄에는 두 정수 n과 m이 공백으로 구분되어져 있다. (1 ≤ n, m ≤ 10,000) n은 집합 A의 크기, m은 집합 B의 크기이다. 다음 n개 줄에는 집합 A의 원소가, m개 줄에는 집합 B의 원소가 한 줄에 하나씩 순서대로 주어진다. 집합에 들어있는 수는 모두 1보다 크거나 같고, 10<sup>9</sup>보다 작거나 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 상근이가 모든 정수에 도달할 수 있으면 YES를, 아니면 NO를 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1 1
2
2
2 2
1
2
1
2
','NO
YES
','MATH'),
                                                                                                                (1197,'BAEKJOON','https://www.acmicpc.net/problem/7687',7687,'지구 직육면체설','1초','128 MB',20,'<p>재현이는 마인크래프트를 너무 많이 한 나머지, 우리가 사는 지구 또한 직육면체 모양이어야 한다고 생각하게 되었다. 재현이는 자신이 가진 군단을 동원하여, 지구를 각 변의&nbsp;길이가 ℓ<sub>x</sub>&nbsp;× ℓ<sub>y</sub>&nbsp;× ℓ<sub>z</sub>인&nbsp;직육면체로 만드는 대공사를 했다. 이 공사로 인해 새로운 모양의 지구 표면 위에서의 위치는 깔끔하게 3차원 데카르트 좌표계로 표현되게 되었고, 재현이는 크게 만족해했다.&nbsp;또한, 재현이는 그리니치 천문대를 없애고, 자신의 집을 지구의 꼭짓점 (0, 0, 0)에 지었다.</p>

<p>한편, 이번 공사로 인해 집이 강제로 (x, y, z)에 옮겨진 승원이는 물리를 공부하던 도중, 물리 책에서 재현이의 집이 지구 좌표계의 기준으로 소개되고 있는 것을 발견했다. 자신의 성스러운 물리 책에서는 재현이의 이름조차 보기 싫었던 승원이는 페이스북에서 지구가 다시 둥글어져야 한다고 주장하기 시작했다.</p>

<p>페이스북을 통해 이 사실을 알게 된 재현이는 승원이를 체포하기 위해, 승원이에게 가기 위한 최단경로의 길이가 얼마인지 궁금해하게 되었다. 재현이를 도와 승원이가 다시는 허튼 수작을 부리지 못하도록 만들자.</p>

<p>만약 ℓ<sub>x</sub>&nbsp;= 1, ℓ<sub>y&nbsp;</sub>= 2, ℓ<sub>z&nbsp;</sub>= 1, x = 1, y = 2, z = 1이라면, (0, 0, 0)에 있는 재현이가 (1, 2, 1)에 있는 승원이에게 가기 위한 최단경로는 (0, 0, 0)에서 (1, 1, 0)을 거쳐, (1, 2, 1)로 가는 경로이다. 이 최단경로의 길이는&nbsp;√8 이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>각 입력 파일은 여러 개의 테스트 케이스를 포함하며, 각각은 6개의 정수 ℓ<sub>x</sub>, ℓ<sub>y</sub>, ℓ<sub>z</sub>, x, y, z&nbsp;(단,&nbsp;1 ≤ ℓ<sub>x</sub>,&nbsp;ℓ<sub>y</sub>,&nbsp;ℓ<sub>z</sub>&nbsp;≤ 1000) 으로 이루어진다.&nbsp;승원이의 위치 (x,y,z)는 항상 직육면체 지구의 6개의 면들 중 하나 위에 있음이 보장된다. 또한, 파일의 마지막 줄은 ℓ<sub>x</sub>&nbsp;= ℓ<sub>y</sub>&nbsp;= ℓ<sub>z</sub>&nbsp;= x = y = z = 0 인 경우로 되어 있으며, 이에 대해서는 답을 출력하지 않아야 한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스에 대해, 한 줄에 최단경로의 길이의 제곱을 나타내는 양의 정수를 출력하시오. (주의 : 최단경로의 길이의 제곱은 항상 정수이므로, 답은 근사치가 아닌 정확한 값으로 출력되어야 한다.)</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1 2 1 1 2
1 1 1 1 1 1
0 0 0 0 0 0
','8
5
','MATH'),
                                                                                                                (1200,'BAEKJOON','https://www.acmicpc.net/problem/7737',7737,'삼각분할','1초','32 MB',20,'<p>삼각분할이란 볼록 다각형의 대각선을 이용해서 삼각형으로 분할하는 것이다. 두 대각선은 교차할 수 없다. 삼각분할을 이루는 대각선의 집합이 다르면 두 삼각분할은 서로 다른 삼각분할이다. (꼭짓점에 1번부터 N번까지 번호를 붙인다)</p>

<p>오각형을 삼각분할하는 방법은 총 다섯가지가 있으며, 아래 그림과 같다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/tri.png" style="height: 50px; width: 338.333px;"></p>

<p>T<sub>n</sub>을 n각형을 삼각분할하는 방법의 수라고 했을 때, T<sub>3</sub> + T<sub>4</sub> + ... + T<sub>n</sub>을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n과 m이 주어진다. (3 ≤ n ≤ 100,000, 2 ≤ m ≤ 10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>T<sub>3</sub> + ... + T<sub>n</sub>을 m으로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 1000
','8
','MATH'),
                                                                                                                (1203,'BAEKJOON','https://www.acmicpc.net/problem/7770',7770,'아즈텍 피라미드','1초','128 MB',4,'<p>아즈텍의 황제 쿠이틀라우악은 자신의 명예를 위해 피라미드를 만들려고 한다.</p>

<p>아즈텍 피라미드는 돌 블록을 이용해서 만든다. 블록은 1×1×1 크기의 정육면체이다. 쿠이틀라우악은 피라미드의 설립식 때, 블록 하나를 직접 땅에 놓았다. 그 다음 블록부터는 인부들이 설치하며, 이전에 놓여진 블록과 적어도 한 면 전체를&nbsp;공유해야 한다.</p>

<p>왼쪽 두 개는 가능한 블록의 배치, 오른쪽 세 개는 불가능한 배치이다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/pyra1.png" style="height: 52.5px; width: 356.667px;"></p>

<p>블록은 땅의 바로 위에 있거나, 블록의 아래에 있는 블록의 모든 면이 땅이나 다른 블록과 접할 때, 안정적이라고 한다. 피라미드의 모든 블록은 안정적이어야 한다.</p>

<p>아래 그림은 회색 블록을 놓았을 때이며, 그 블록이 안정적인 경우는 왼쪽 세 개, 아닌 경우는 오른쪽 두 개이다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/pyra2.png" style="height: 54.1667px; width: 370px;"></p>

<p>사용할 수 있는 블록의 개수가 주어졌을 때, 그 블록으로 만들 수 있는 가장 높은 안정적인 피라미드의 높이를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 사용할 수 있는 블록의 수 n이 주어진다. (1 ≤ n ≤ 10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 블록 n개로 만들 수 있는 가장 높은 안정적인 피라미드의 높이를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
','2
','MATH'),
                                                                                                                (1225,'BAEKJOON','https://www.acmicpc.net/problem/7772',7772,'구조 이성질체','1초','128 MB',22,'<p>창영이는 이번 학기에 유기 화학을 수강한다. 첫 시간에는 가장 간단한 유기 분자인 알칸에 대해서 배웠다.</p>

<p>알칸은 수소(H)와 탄소(C) 원자로만 이루어진 분자이다. 각각의 탄소 원자는 4개의 결합(C-H, C-C 결합) 을 가지고 있고, 각각의 수소 원자는 탄소와 결합되어져 있다. (H-C 결합)</p>

<p>알칸 분자는 단일 결합이며 사이클이 존재하지 않는다. 탄소 원자 n개로 이루어진 분자는 항상 수소 원자 2n + 2개를 가지고 있고, 분자식으로는 C<sub>n</sub>H<sub>2n+2</sub>로 나타낸다.</p>

<p>탄소 원자가 연결된 구조는 탄소 골격이라고 한다. 구조 이성질체는 분자식은 같지만, 탄소 골격이 다른 것을 말한다. 탄소 원자의 개수가 세 개 이상인 알칸은 여러 가지 방법으로 나타낼 수 있다. 가장 간단한 알칸의 탄소 골격은 가지 없이 일직선으로 연결된 구조이다. 아래 그림은 C6H14의 모든 구조 이성질체이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/41ddd269-b86d-4f6a-a01a-578c83dd9c84/-/preview/" style="width: 377.5px; height: 172.5px;"></p>

<p>유기 화학의 첫 숙제는 탄소 원자가 n개인 알칸의 구조 이성질체의 개수를 구하는 것이다.</p>

<p>알칸의 탄소 원자의 개수가 주어졌을 때, 구조 이성질체의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 알칸의 탄소 원자의 개수 n이 주어진다. (1 ≤ n ≤ 50)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 C<sub>n</sub>H<sub>2n+2</sub>의 구조 이성질체의 개수를 출력한다. 정답은 항상 64비트 정수 타입 범위이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
','5
','MATH'),
                                                                                                                (1204,'BAEKJOON','https://www.acmicpc.net/problem/7775',7775,'최종 순위','1초','128 MB',13,'<p>홍준이는 한 고등학교의 수학 선생님이다. 기말고사 시험은 총 n명이 응시했다. 더 높은 점수를 받은 학생의 등수가 더 높다.</p>

<p>모든 채점이 끝났지만, 선생님은 학생들에게 다음과 같은 정보를 알려주었다.</p>

<p>모든 학생의 점수의 합은 p점이고, 상위 k명의 점수 중 서로 다른 점수의 수는 d.</p>

<p>위의 정보를 가지고 모든 학생의 점수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n, p, k, d가 주어진다. (1 ≤ k ≤ n ≤ 1000, 0 ≤ p ≤ 1,000,000, 1 ≤ d ≤ k)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어진 n, p, k, d를 이용해서 만들 수 있는 점수를 등수가 높은 학생부터 순서대로 출력한다. 만약, 주어진 값을 이용해서 가능한 점수를 만들 수 없다면, "Wrong information"을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 4 2 2
','2
1
1
','MATH'),
                                                                                                                (1205,'BAEKJOON','https://www.acmicpc.net/problem/7784',7784,'서로 다른 숫자','1초','128 MB',20,'<p>양의 정수 n이 주어졌을 때, n의 배수 중에서 그 수를 구성하고 있는 서로 다른 숫자의 개수가 가장 작은 수 m을 구하는 프로그램을 작성하시오. 예를 들어 1334를 구성하는 서로 다른 숫자는 1, 3, 4 이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있고, 각 테스트 케이스는 n이 포함되어 있는 한 줄로 이루어져 있다. 테스트 케이스는 50개를 넘지 않고, n은 65536보다 작거나 같은 자연수이다. 입력의 마지막 줄에는 0이 하나 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 문제의 설명에 나와있는 m을 출력한다. 만약, 가능한 m이 여러 가지인 경우에는&nbsp;가장 작은 값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7
15
16
101
0
','7
555
16
1111
','MATH'),
                                                                                                                (1206,'BAEKJOON','https://www.acmicpc.net/problem/7786',7786,'합 찾기','1초','128 MB',15,'<p>두 자연수 l과 u가 주어졌을 때, l보다 크거나 같고, u보다 작거나 같은 모든 자연수의 자리수의 합을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 l과 u이 주어진다. (0 ≤ l ≤ u ≤ 2,000,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>l과 r을 포함하여 그 사이에 있는 모든 수의 자리수의 합을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','24660 308357171
','11379854844
','MATH'),
                                                                                                                (1208,'BAEKJOON','https://www.acmicpc.net/problem/7789',7789,'텔레프라임','1초','128 MB',4,'<p>소수를 매우 좋아하는 수학자가 있다. 이 수학자는 매번 전화번호를 받을 때 마다, 그 전화번호가 소수인지 아닌지를 검사한다. 수학자는 자신의 모든 친구의 전화번호가 소수인지 아닌지를 기억하고 있다.</p>

<p>계속해서 늘어나는 휴대전화 인구의 급증에 따라 정부는 한 자리를 기존 번호 앞에 붙이는 정책을 시행하기로 했다.</p>

<p>수학자는 큰 고민에 빠졌다. 소수 전화번호를 가지고 있는 친구의 전화번호가 이제 평범한 숫자가 될 수도 있기 때문이다.</p>

<p>수학자의 친구 중 한 사람의 원래 전화번호와 새로이 앞에 붙는 번호 한 자리가 주어졌을 때, 원래 전화번호와&nbsp;새로운 전화번호가 모두&nbsp;소수인지 아닌지를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 여섯 자리의 기존 전화번호와 새로 추가되는 한 자리 번호가 주어진다. 기존 전화번호는 0으로 시작하지 않으며, 새로 추가되는 한 자리 번호는 0이 아니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>원래 전화번호와 새로운 전화번호가 소수이면 Yes를, 아니면 No를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','946859 2
','Yes
','MATH'),
                                                                                                                (1215,'BAEKJOON','https://www.acmicpc.net/problem/7868',7868,'해밍 수열','1초','128 MB',11,'<p>세 소수 p<sub>1</sub>, p<sub>2</sub>, p<sub>3</sub>을 이용해서 해밍 수열 H(p<sub>1</sub>, p<sub>2</sub>, p<sub>3</sub>), i = 1... 을 정의할 수 있다.</p>

<p>해밍 수열 H(p<sub>1</sub>, p<sub>2</sub>, p<sub>3</sub>)은 소인수가 p<sub>1</sub>, p<sub>2</sub>, p<sub>3</sub>로만 이루어진 자연수의 오름 차순 목록이다.</p>

<p>예를 들어, H(2, 3, 5) = 2, 3, 4, 5, 6, 8, 9, 10, 12, 15, 16, 18, 20, 24, 25, 27, ... 이고, 5번째 수는 6이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 p<sub>1</sub>, p<sub>2</sub>, p<sub>3</sub>, i가 주어진다. 네 정수는 10<sup>18</sup>보다 작다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>H(p<sub>1</sub>, p<sub>2</sub>, p<sub>3</sub>)의 i번째 수를 출력한다. 출력하는 수는 10<sup>18</sup>보다 작다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7 13 19 100
','26590291
','MATH'),
                                                                                                                (1218,'BAEKJOON','https://www.acmicpc.net/problem/7869',7869,'두 원','1초','128 MB',14,'<p><img alt="" src=https://www.acmicpc.net/upload/images/one(1).png" style="float:right; height:120px; opacity:0.9; width:162px">두 원이 주어졌을 때, 교차하는 영역의 넓이를 소수점 셋째자리까지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 원의 중심과 반지름 x1, y1, r1, x2, y2, r2가 주어진다. 실수는 최대 소수점 둘째자리까지 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 교차하는 영역의 넓이를 반올림해 소수점 셋째자리까지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','20.0 30.0 15.0 40.0 30.0 30.0
','608.366
','MATH'),
                                                                                                                (1207,'BAEKJOON','https://www.acmicpc.net/problem/7894',7894,'큰 수','2초','128 MB',13,'<p>많은 어플리케이션은 매우 큰 수를 사용한다. 이러한 어플리케이션은 데이터를 안전하게 전송하고, 암호화하기 위해서 수를 키로 사용한다.</p>

<p>수가 주어지면, 그 수의 팩토리얼의 자리수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 수가 주어진다. 다음 줄부터 한 줄에 하나씩 정수 m이 주어진다. (1 ≤ m ≤ 10<sup>7</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어지는 수 m마다 m!의 길이를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
10
20
','7
19
','MATH'),
                                                                                                                (1242,'BAEKJOON','https://www.acmicpc.net/problem/7936',7936,'N의 존재','5초','128 MB',24,'<p>양의 정수 m과 소수 p, 그리고 p로 나누었을 때의 나머지 a가 주어진다.</p>

<p>이때, n<sup>n</sup> + n<sup>m</sup>을 p로 나눈 나머지가 a가 되는 양의 정수 n이&nbsp;존재하는지를 구하고, 존재하면 n을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 첫째 줄에는 테스트 케이스의 개수 d (1 ≤ d ≤ 300)가 주어진다.</p>

<p>각 테스트 케이스는 한 줄로 이루어져 있으며, 세 정수 p, a, m이 주어진다. (2 ≤ p ≤ 10<sup>9</sup>, 0 ≤ a < p, 1 ≤ m ≤ 20, m < p) p는 항상 소수이다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>문제의 조건에 해당하는 n < 10<sup>1000</sup>이 존재하면, "TAK n"을 출력하고, 존재하지 않는 경우에는 "NIE"를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
11 3 1
11 8 2
','TAK 567
TAK 2
','MATH'),
                                                                                                                (1251,'BAEKJOON','https://www.acmicpc.net/problem/8111',8111,'0과 1','1초','128 MB',16,'<p>폴란드 왕자 구사과는 다음과 같은 수를 좋아한다.</p>

<ul>
	<li>0과 1로만 이루어져 있어야 한다.</li>
	<li>1이 적어도 하나 있어야 한다.</li>
	<li>수의 길이가 100 이하이다.</li>
	<li>수가 0으로 시작하지 않는다.</li>
</ul>

<p>예를 들어, 101은 구사과가 좋아하는 수이다.</p>

<p>자연수 N이 주어졌을 때, N의 배수 중에서 구사과가 좋아하는 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T(T < 10)가 주어진다.</p>

<p>둘째 줄부터 T개의 줄에는 자연수 N이 한 줄에 하나씩 주어진다. N은 20,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스마다 N의 배수이면서, 구사과가 좋아하는 수를 아무거나 출력한다. 만약, 그러한 수가 없다면&nbsp;BRAK을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
17
11011
17
999
125
173
','11101
11011
11101
111111111111111111111111111
1000
1011001101
','MATH'),
                                                                                                                (1254,'BAEKJOON','https://www.acmicpc.net/problem/8112',8112,'0과 1 - 2','1초','256 MB',17,'<p>폴란드 왕자 구사과는 다음과 같은 수를 좋아한다.</p>

<ul>
	<li>0과 1로만 이루어져 있어야 한다.</li>
	<li>1이 적어도 하나 있어야 한다.</li>
	<li>수가 0으로 시작하지 않는다.</li>
</ul>

<p>예를 들어, 101은 구사과가 좋아하는 수이다.</p>

<p>자연수 N이 주어졌을 때, N의 배수이면서,&nbsp;구사과가 좋아하는 수 중에서 가장 작은 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T(T ≤ 10)가 주어진다.</p>

<p>둘째 줄부터 T개의 줄에는 자연수 N이 한 줄에 하나씩 주어진다. N은 1,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스마다 N의 배수이면서, 구사과가 좋아하는 수 중에서 가장 작은&nbsp;수를 출력한다. 만약, 그러한 수가 없다면&nbsp;BRAK을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
17
11011
17
999
125
173
','11101
11011
11101
111111111111111111111111111
1000
1011001101
','MATH'),
                                                                                                                (1286,'BAEKJOON','https://www.acmicpc.net/problem/8320',8320,'직사각형을 만드는 방법','1초','256 MB',4,'<p>상근이는 변의 길이가 1인 정사각형 n개를 가지고 있다. 이 정사각형을 이용해서 만들 수 있는 직사각형의 개수는 총 몇 개일까?</p>

<p>두 직사각형 A와 B가 있을 때, A를 이동, 회전시켜서 B를 만들 수 없으면, 두 직사각형은 다르다고 한다. 직사각형을 만들 때, 정사각형을 변형시키거나, 한 정사각형 위에 다른 정사각형을 놓을 수 없다. 또, 직사각형은 정사각형으로 꽉 차있어야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n (1 ≤ n ≤ 10,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>만들 수 있는 직사각형의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p><img alt="" src=https://www.acmicpc.net/upload/images/pro1.gif" style="height:122px; width:157px"></p>

				</div>
				</div>','6
','8
','MATH'),
                                                                                                                (1283,'BAEKJOON','https://www.acmicpc.net/problem/8322',8322,'(K,N)-나이트','1초','128 MB',16,'<p>크기가 무한대인 체스판 위에 두 칸 (x1,y1)와 (x2, y2)가 주어졌을 때, (K,N)-나이트가 (x1, y1)에서 (x2, y2)로 이동할 수 있는지를 구하는 프로그램을 작성하시오.</p>

<p>(K,N)-나이트는 원래 나이트가 움직이는 방식과 비슷하다. (K,N)-나이트는 가로로 K칸, 세로로 N칸 떨어진 곳이나, 가로로 N칸, 세로로 K칸 떨어진 곳으로 한 번에 이동할 수 있다. 체스에서 사용하는 나이트는 (2,1)-나이트나 (1,2)-나이트로 생각할 수 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T(1 ≤ T ≤ 20,000)가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있으며, K, N, x1, y1, x2, y2 (0 ≤ K, N ≤ 10<sup>9</sup>, K+N > 0, -10<sup>9</sup> ≤ x1,y1,x2,y2 ≤ 10<sup>9</sup>) 가 공백으로 구분되어져 있다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다, 주어진 (K,N)-나이트가 (x1, y1)에서 (x2, y2)로 이동할 수 있으면 "TAK", 없으면 "NIE"를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
2 1 0 0 3 3
1 1 1 1 1 2
1 0 2 3 4 6
','TAK
NIE
TAK
','MATH'),
                                                                                                                (1299,'BAEKJOON','https://www.acmicpc.net/problem/8393',8393,'합','1초','128 MB',1,'<p>n이 주어졌을 때, 1부터 n까지 합을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n (1 ≤ n ≤ 10,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>1부터 n까지 합을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
','6
','MATH'),
                                                                                                                (1300,'BAEKJOON','https://www.acmicpc.net/problem/8394',8394,'악수','1초','256 MB',8,'<p>회의가 끝났고, 이제 악수를 하는 시간이다. 모든 사람은 직사각형 탁자 하나의 한 면에 앉아있다.</p>

<p>자리를 벗어나지 않고 악수를 하는 방법의 수는 총 몇 가지일까?</p>

<p>각 사람들은 자신의 왼쪽이나 오른쪽에 있는 사람들과 악수를 할 수 있다. (안 할 수도 있다)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 회의에 참석한 사람의 수 n (1 ≤ n ≤ 10,000,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 악수를 하는 방법의 수를 출력한다. 수가 매우 커질 수 있기 때문에, 마지막 자리만 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p><img alt="" src=https://www.acmicpc.net/upload/images/kon.png" style="height:111px; width:102px"></p>

<p>n=4인 경우에는 5가지 방법이 있다.</p>

				</div>
				</div>','4
','5
','MATH'),
                                                                                                                (1307,'BAEKJOON','https://www.acmicpc.net/problem/8406',8406,'피보나치 단어','1초','128 MB',26,'<p>피보나치 단어의 수열은 다음과 같이 정의한다.</p>

<p>Fib<sub>0</sub> = b, Fib<sub>1</sub> = a, Fib<sub>n</sub> = Fib<sub>n-1</sub>Fib<sub>n-2</sub> (n ≥ 2)</p>

<p>Fib<sub>n</sub>은 Fib<sub>n-1</sub>과 Fib<sub>n-2</sub>를 이어 붙인 것이다.</p>

<p>피보나치 단어 수열의 첫 부분은 b,a,ab,aba,abaab,abaababa,abaababaabaab,... 이다.</p>

<p>단어 u가 단어 v의 부분 단어가 되려면, 임의의 단어 x와 y에 대해서 v = xuy로 쓸 수 있어야 한다. (x와 y는 빈 단어일 수도 있다)</p>

<p>a와 b로만 이루어진 단어 α와 피보나치 단어 Fib<sub>m</sub>을 나타내는 m이 주어진다. 이때, Fib<sub>m</sub>에 α가 부분 단어로 몇 번 등장하는지 구하고, Fib<sub>m</sub>의 부분 단어 중에서&nbsp;α가 적어도 등장하는 횟수만큼 등장하는 비어있지 않은 부분 단어의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 m (0 ≤ m ≤ 1,000,000,000)이 주어진다. 둘째 줄에는 단어 α가 주어진다. α는 a와 b로만 이루어져 있으며, 길이는 1,000,000을 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 두 숫자를 출력한다. 첫 번째 숫자는 Fib<sub>m</sub>에 α가 부분 단어로 총 몇 번 등장하는지를 나타내는 숫자이다. 두 번째 단어는 Fib<sub>m</sub>의 모든 부분 단어 중에서, 적어도 α가 등장하는 만큼 등장하는 비어있지 않은 부분 단어의 개수를 출력한다.</p>

<p>두 숫자는 매우 클 수 있기 때문에 20062006으로 나눈 나머지를 출력한다.&nbsp;</p>

<p>입력으로 주어지는 α는 항상 주어진 피보나치 단어의 부분 단어이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>Fib<sub>5</sub>에서 적어도 aba가 등장하는 만큼 등장하는 비어있지 않은 부분 단어는 a, b, ab, ba, aba이다.</p>

				</div>
				</div>','5
aba
','3 5
','MATH'),
                                                                                                                (1321,'BAEKJOON','https://www.acmicpc.net/problem/8536',8536,'땅콩의 개수','1초','128 MB',19,'<p>숲 속 한 가운데 커다란 고목나무가 한 그루 있다. 다람이는 그 고목의 나무 구멍 속에 살고 있는데, 다람이는 매일매일&nbsp;아주 독특한 방법으로 숲속을 산책한다. 다람이는 북쪽을 바라본채로 고목을 떠나서 걷기 시작하고, 매초마다 아래의 행동을 취한다:</p>

<ul>
	<li>만약 그녀 발 아래 땅콩이 있다면, 그 땅콩을 줍고 오른쪽으로 90도 돌아 다시 1m를 전진한다.</li>
	<li>만약 그녀 발 아래 땅콩이 없다면, 땅콩 1개를&nbsp;그 자리에 내려 놓고는, 왼쪽으로 90도 돌아 다시 1m 전진한다.</li>
</ul>

<p>다람이는 속도가 매우 빨라서 매초마다 1m씩 전진하고, 힘도 아주 세서 땅콩도 항상 모자르지 않게 들고다닌다. t초 뒤에 땅에 놓여있는 땅콩의 개수를 구하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 다람이가 고목을 떠난 순간에(0초) 땅에 놓인 땅콩의 개수 n(0 ≤ n ≤ 7)이 주어진다.</p>

<p>그 다음 n줄에는 각 줄마다 땅콩의 위치가 좌표로 주어진다. 좌표는 x, y(-2 ≤ x,y ≤ 2) 순으로 두개의 정수가 주어진다. (주어진 땅콩의 위치는 동쪽으로 x미터, 남쪽으로 y미터이다.) 각 좌표에는 한개의 땅콩만 놓여있다.</p>

<p>마지막 줄에는 다람이가 몇 초간 산책하는지인 정수 t(0 ≤ t ≤ 10<sup>9</sup>)가 주어진다. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 째줄에 t초 후 땅에 놓인 땅콩의 개수를 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
0 0
-2 1
8
','6
','MATH'),
                                                                                                                (1337,'BAEKJOON','https://www.acmicpc.net/problem/8611',8611,'팰린드롬 숫자','1초','128 MB',6,'<p>팰린드롬은 앞에서 부터 읽었을 때와 뒤에서 부터 읽었을 때가 같은 문자열을 말한다. 예를 들어, "ala"과 "aa"는 팰린드롬이고, "adam"은 팰린드롬이 아니다.</p>

<p>모든 정수는 \((a_na_{n-1}\dots a_1a_0)_k\)와 같이 k진법으로 나타낼 수 있다. 모든 \(a_i\)는 k보다 작은 음이 아닌 정수이어야 한다.</p>

<p>\((a_na_{n-1}\dots a_1a_0)_k\)가 나타내는 값은 \(a_n \cdot k^n + a_{n-1} \cdot k^{n-1} + \cdots + a_1 \cdot k + a_0\) 이다. 예를 들어, 10진법 숫자 \(123_{10}\)의 값은 \(1 \cdot 100 + 2 \cdot 10 + 3\)이고, 8진법 숫자 \(123_8\)의 값은 \(1 \cdot 64 + 2 \cdot 8 + 3\) 이다.</p>

<p>10진법 숫자 \(n\)이 주어졌을 때, \(\left\{ 2, 3, \dots, 10 \right\} \)진법으로 나타냈을 때, 팰린드롬인 것을 모두 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 \(n\)이 주어진다. (1 ≤ \(n\) ≤ 10<sup>1000</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>\(n\)을 \(2, 3, \dots, 10\) 진법으로 나타냈을 때, 팰린드롬인 경우가 없다면, "NIE"를 출력한다. 그 외의 경우에는 팰린드롬이 되는 진법 \(b\)와 \(n\)을 \(b\)진법으로 나타낸 수 \(m\)을 출력한다. 출력은 \(b\)가 증가하는 순서대로 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>\(1 \cdot 2^3 + 1 \cdot 2^2 + 1 \cdot 2 + 1 = 3 \cdot 4 + 3 = 15\)</p>

				</div>
				</div>','15
','2 1111
4 33
','MATH'),
                                                                                                                (1351,'BAEKJOON','https://www.acmicpc.net/problem/8741',8741,'이진수 합','1초','128 MB',4,'<p>세계적인 이진수 매니아 현수는 오늘도 이진수를 연구하고 있다.</p>

<p>오늘은 이진수로 나타냈을 때, k자리 이하인 모든 자연수의 합을 구해보려고 한다.</p>

<p>k가 주어졌을 때, 이진수로 나타냈을 때, k자리 이하인 모든 자연수의 합을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 k가 주어진다. (1 ≤ k ≤ 10<sup>6</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째&nbsp;줄에 이진수로 나타냈을 때, k자리 이하인 모든 자연수의 합을 이진수로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>1 + 2 + 3 + 4 + 5 + 6 + 7 = 28 = 11100<sub>2</sub></p>

				</div>
				</div>','3
','11100
','MATH'),
                                                                                                                (1399,'BAEKJOON','https://www.acmicpc.net/problem/8880',8880,'인수','3초','256 MB',19,'<p>1보다 큰 모든 자연수는 하나 또는 그 이상의 소수의 곱으로 유일하게 나타낼 수 있다. 하지만, 이러한 소인수들을 배열하는 방법은 여러 가지가 있을 수 있다.</p>

<p>10 = 2×5 = 5×2</p>

<p>20 = 2×2×5 = 2×5×2 = 5×2×2</p>

<p>f(k)를 k의 소인수를 배열한 방법의 수라고 하면,&nbsp;f(10) = 2, f(20) = 3이 된다.</p>

<p>양의 정수 n이 주어진다. 이때, f(k) = n을 만족하는 k는 항상 적어도 하나 존재한다. 이때, 가장 작은 k를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 많아야 1,000개의 테스트 케이스로 이루어져 있고, 한 줄에 하나씩 주어진다. 각 테스트 케이스는 n < 2<sup>63</sup>인 양의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, n을 출력하고 f(k) = n 인 가장 작은 k > 1을 출력한다. k < 2<sup>63</sup>인 입력만 주어진다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
2
3
105
','1 2
2 6
3 12
105 720
','MATH'),
                                                                                                                (1398,'BAEKJOON','https://www.acmicpc.net/problem/8891',8891,'점 숫자','1초','256 MB',7,'<p><img alt="" src=https://www.acmicpc.net/upload/images/dnum(1).png" style="float:right; height:233px; width:239px">2차원 평면의 제 1사분면에 점이 무한개 찍혀있다. 점의 x, y좌표는 모두 양의 정수이다. 오른쪽 그림과 같이 대각선 순서로 점에 자연수를 할당할 수 있다.</p>

<p>각 점에 할당된 숫자는 점 숫자라고 부른다. (x,y)의 점 숫자는 #(x,y)로 나타낸다. 예를 들어, #(1,1) = 1, #(2,1) = 3, #(2,2) = 5, #(4,4) = 25 이다.</p>

<p>두 점을 더하면, 각 좌표를 더한 값이 좌표인 점이된다. 즉, (a,b) + (c,d) = (a+c,b+d)이다. 모든 점 숫자는 점을 유일하게 결정하기 때문에, 두 점 숫자의 덧셈으로도 점 덧셈을 나타낼 수 있다. 예를 들어, (1,1)과 (2,2)를 더하는 것은 1+5로 나타낼 수 있다. (#(1,1)=1, #(2,2) = 5) 또, 그 결과는 13 (#(3,3) = 13)이&nbsp;된다.</p>

<p>점 숫자로 나타낸 두 점이 입력으로 주어졌을 때, 두 점을 더해, 결과를 점 숫자로 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는&nbsp;한 줄로 이루어져 있고, 두 점 숫자가 주어진다. 점 숫자는 0보다 크고, 10,000보다 작다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 입력으로 주어진 두 점 숫자의 합을 출력한다. 결과는 10,000보다 클 수도 있다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1 5
3 9
','13
26
','MATH'),
                                                                                                                (1400,'BAEKJOON','https://www.acmicpc.net/problem/8895',8895,'막대 배치','1초','256 MB',16,'<p>높이가 1, 2, ..., n인 막대 n개가 일렬로 배치되어 있다. 막대를 왼쪽이나 오른쪽에서 보면, 큰 막대가 뒤에있는 작은 막대를 가리게 된다. 아래와 같이 4개의 막대로 이루어진 두 배치를 살펴보자.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/upload/images/polearr.png" style="height: 130.833px; width: 343.333px;"></p>

<p>위의 두 배치는 모두 왼쪽에서 봤을 때 막대가 한 개 보이고, 오른쪽에서 봤을 때는 막대가 두 개 보인다.</p>

<p>막대의 개수 n과 왼쪽에서 봤을 때 보이는 막대의 개수 l, 오른쪽에서 봤을 때 보이는 막대의 개수 r이 주어진다. 이때, 이러한 결과를 만드는 배치의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, n, l, r이 주어진다. (1 ≤ l, r ≤ n ≤ 20)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다, 입력으로 주어진 값에 해당하는 배치의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
4 1 2
4 1 1
5 2 4
20 2 1
','2
0
4
6402373705728000
','MATH'),
                                                                                                                (1376,'BAEKJOON','https://www.acmicpc.net/problem/8907',8907,'네온 사인','3초','256 MB',17,'<p>시흠이는 최근에 레스토랑 "삼각형"을 오픈했고, 시흠이는 레스토랑을 상징하는 네온 사인을 주문했다.</p>

<p>네온 사인은 총 N개의 꼭짓점이 원의 둘레를 따라 찍혀져 있다. 그리고, 총 N * (N-1) / 2개의 야광 튜브가 꼭짓점을 연결하고 있다. 야광 튜브는 두 가지 색(빨간색과 파란색)이 있다.</p>

<p>시흠이는 한 번에 한 삼각형만 불을 밝히려고 한다. 이때, 삼각형의 모든 변은 색상이 같아야 하고, 꼭짓점이 서로 이어져 있어야 한다. 그는 이러한 단색 삼각형의 개수를 알려고 한다.</p>

<p>예를 들어, 아래 네온 사인에는 단색 삼각형이 두 개 있다. (1, 3, 5)와 (2, 3, 4)</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/neonsign.png" style="height:312px; width:344px"></p>

<p>네온 사인의 꼭짓점의 수와 각 야광 튜브의 색상이 주어졌을 때, 단색 삼각형의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 테스트 케이스의 수 T가 주어진다. 각 테스트 케이스의 첫째 줄에는 꼭짓점의 개수 N(3 ≤ N ≤ 1,000)이 주어진다. 다음 N-1개의 각 야광 튜브의 색이 주어진다. 이 줄의 i번째 줄에는 꼭짓점 i와 연결된 튜브의 색상이 i+1번 꼭짓점과 연결된 튜브부터 N번까지 순서대로 주어진다. 빨간색은 1, 파란색은 0으로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서 단색 삼각형의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
5
1 1 0 1
0 0 0
0 1
1
5
1 1 1 1
0 0 1
0 1
1
','2
4
','MATH'),
                                                                                                                (1401,'BAEKJOON','https://www.acmicpc.net/problem/8916',8916,'이진 검색 트리','2초','256 MB',16,'<p>이진 검색 트리는 이진 트리이다. 트리는 비어있을 수도 있다. 비어있지 않은 경우에는 다음과 같은 특징을 가진다.</p>

<ol>
	<li>모든 노드는 키를 가지고 있다. 두 노드가 같은 키를 가질 수 없다.</li>
	<li>비어있지 않은 왼쪽 서브 트리에 있는 모든 키는 그 서브 트리의 루트의 키보다 작다.</li>
	<li>비어있지 않은 오른쪽 서브 트리에 있는 모든 키는 그 서브 트리의 루트에 있는 키보다 크다.</li>
	<li>왼쪽 서브 트리와 오른쪽 서브 트리도 이진 검색 트리이다.</li>
</ol>

<p>아래 그림은 이진 검색 트리의 예이다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/treeperm.png" style="height: 155.833px; width: 365px;"></p>

<p>이진 검색 트리 T에서 k가 키인 노드를 찾으려면, 먼저 루트에서 시작해야 한다. T가 비어있다면, T는 키를 가지고 있지 않기 때문에 검색은 실패한다. 비어있지 않은 경우에는 루트의 키와 k를 비교한다. 만약, k가 루트의 키와 같다면, 검색은 성공적으로 종료된다. k가 루트의 키보다 작은 경우에는 왼쪽 서브트리의 루트에서 검색을 시작한다. k가 루트의 키보드 큰 경우에는 오른쪽 서브 트리의 루트에서 검색을 시작한다. 같은 과정으로 T의 왼쪽 또는 오른쪽 서브 트리에서 검색을 수행한다.</p>

<p>이진 검색 트리 T에 T에 존재하지 않는 새로운 키 k를 삽입하려면, 먼저 T에서 k를 찾아야 한다. T에는 k가 없기 때문에, 검색은 실패로 끝날 것이고, 실패로 끝난 그 위치에 새로운 키 k를 삽입한다. 예를 들어, 위의 그림 (a)에 80을 삽입하는 경우를 살펴보자. 먼저, 트리에서 80을 찾아야 한다. 검색은 실패로 끝나고, 마지막으로 검사한 키는 40이다. 80을 그 노드의 오른쪽 자식으로 삽입하면, 이진 검색트리는 (b)와 같아진다.</p>

<p>이 문제에서는 1, 2, ..., N 총 N개의 키를 가지고 있는 이진 검색 트리를 이용한다. {1, 2, ..., N}의 순열 a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>N</sub>에 대해서, a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>N</sub>을 순서대로 비어있는 이진 검색 트리에 삽입한다면, 이진 검색 트리를 만들 수 있다. 예를 들어, 순열 2 1 4 3 5는 그림 (c)를 만들 수 있다. 또, 2 4 3 1 5도 같은 트리를 만든다. {1, 2, 3, 4, 5}의 순열 중에서 그림 (c)와 같은 이진 검색 트리를 만드는 순열의 개수는 8개이다.</p>

<p>N과 순열 P가 주어졌을 때, 그 순열과 같은 이진 검색 트리를 만드는 순열의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T (≤ 40,320)가 주어진다. 각 테스트 케이스의 첫째 줄에는 키의 수 N이 주어진다. (1 ≤ N ≤ 20) 다음 줄에는 길이가 N인 순열이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 입력으로 주어진 순열과 같은 트리를 만드는 순열의 개수를 9,999,991로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
5
2 1 4 3 5
4
2 4 1 3
12
1 2 3 4 5 6 7 8 9 10 11 12
','8
3
1
','MATH'),
                                                                                                                (1402,'BAEKJOON','https://www.acmicpc.net/problem/8932',8932,'7종 경기','1초','128 MB',3,'<p>민혁이는 한국에서 열리는 7종 경기 대회에 참가한다. 7종 경기는 육상의 필드 경기와 트랙 경기 7 종목으로 이루어져 있다. (100미터 허들, 높이뛰기, 포환던지기, 200미터 달리기, 멀리뛰기, 창던지기, 800미터 달리기) 민혁이의 각 종목의 기록이 주어졌을 때, 기록을 점수로 환산해서 총점을 구하는 프로그램을 작성하시오.</p>

<p>7종 경기의 총점은 각 종목의 점수의 합이다. 각 종목의 점수는 다음과 같은 식을 이용해서 구할 수 있다.</p>

<ul>
	<li>트랙 경기: \(Score=\left\lfloor A \times (B-P)^{C} \right\rfloor\)</li>
	<li>필드 경기: \(Score=\left\lfloor A \times (P-B)^{C} \right\rfloor\)</li>
</ul>

<p>A, B, C는 아래 표에 적혀져 있는 상수이다. P는 선수의 성적으로 단위는 아래에 나와있다.</p>

<p>모든 종목의 점수는 정수이다.</p>

<table class="table table-bordered" style="width:65%">
	<thead>
		<tr>
			<th style="width:15%">종목</th>
			<th style="width:10%">A</th>
			<th style="width:10%">B</th>
			<th style="width:10%">C</th>
			<th style="width:10%">P</th>
			<th style="width:10%">종류</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>100미터 허들</td>
			<td>9.23076</td>
			<td>26.7</td>
			<td>1.835</td>
			<td>sec</td>
			<td>트랙</td>
		</tr>
		<tr>
			<td>높이뛰기</td>
			<td>1.84523</td>
			<td>75</td>
			<td>1.348</td>
			<td>cm</td>
			<td>필드</td>
		</tr>
		<tr>
			<td>포환던지기</td>
			<td>56.0211</td>
			<td>1.5</td>
			<td>1.05</td>
			<td>m</td>
			<td>필드</td>
		</tr>
		<tr>
			<td>200미터 달리기</td>
			<td>4.99087</td>
			<td>42.5</td>
			<td>1.81</td>
			<td>sec</td>
			<td>트랙</td>
		</tr>
		<tr>
			<td>멀리뛰기</td>
			<td>0.188807</td>
			<td>210</td>
			<td>1.41</td>
			<td>cm</td>
			<td>필드</td>
		</tr>
		<tr>
			<td>창던지기</td>
			<td>15.9803</td>
			<td>3.8</td>
			<td>1.04</td>
			<td>m</td>
			<td>필드</td>
		</tr>
		<tr>
			<td>800미터 달리기</td>
			<td>0.11193</td>
			<td>254</td>
			<td>1.88</td>
			<td>sec</td>
			<td>트랙</td>
		</tr>
	</tbody>
</table>

<p>모든 필드 경기는 B ≤ P, 트랙 경기는 P ≤ B를 만족한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. (1 ≤ T ≤ 1000) 각 테스트 케이스는 일곱 개의 정수로 이루어져 있다. 이 정수는 민혁이의 종목별 기록이다. 순서는 100미터 허들, 높이뛰기, 포환던지기, 200미터 달리기, 멀리뛰기, 창던지기, 800미터 달리기이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 민혁이의 총점을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
19 90 11 29 264 20 131
12 95 21 37 224 35 221
17 168 15 23 275 22 241
','2901
3419
3772
','MATH'),
                                                                                                                (1403,'BAEKJOON','https://www.acmicpc.net/problem/8944',8944,'이진 검색 트리 2','1초','128 MB',16,'<p>이진 검색 트리는 이진 트리이다. 트리는 비어있을 수도 있다. 비어있지 않은 경우에는 다음과 같은 특징을 가진다.</p>

<ol>
	<li>모든 노드는 키를 가지고 있다. 두 노드가 같은 키를 가질 수 없다.</li>
	<li>비어있지 않은 왼쪽 서브 트리에 있는 모든 키는 그 서브 트리의 루트의 키보다 작다.</li>
	<li>비어있지 않은 오른쪽 서브 트리에 있는 모든 키는 그 서브 트리의 루트에 있는 키보다 크다.</li>
	<li>왼쪽 서브 트리와 오른쪽 서브 트리도 이진 검색 트리이다.</li>
</ol>

<p>아래 그림은 이진 검색 트리의 예이다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/treeperm.png" style="height: 155.833px; width: 365px;"></p>

<p>이진 검색 트리 T에서 k가 키인 노드를 찾으려면, 먼저 루트에서 시작해야 한다. T가 비어있다면, T는 키를 가지고 있지 않기 때문에 검색은 실패한다. 비어있지 않은 경우에는 루트의 키와 k를 비교한다. 만약, k가 루트의 키와 같다면, 검색은 성공적으로 종료된다. k가 루트의 키보다 작은 경우에는 왼쪽 서브트리의 루트에서 검색을 시작한다. k가 루트의 키보드 큰 경우에는 오른쪽 서브 트리의 루트에서 검색을 시작한다. 같은 과정으로 T의 왼쪽 또는 오른쪽 서브 트리에서 검색을 수행한다.</p>

<p>이진 검색 트리 T에 T에 존재하지 않는 새로운 키 k를 삽입하려면, 먼저 T에서 k를 찾아야 한다. T에는 k가 없기 때문에, 검색은 실패로 끝날 것이고, 실패로 끝난 그 위치에 새로운 키 k를 삽입한다. 예를 들어, 위의 그림 (a)에 80을 삽입하는 경우를 살펴보자. 먼저, 트리에서 80을 찾아야 한다. 검색은 실패로 끝나고, 마지막으로 검사한 키는 40이다. 80을 그 노드의 오른쪽 자식으로 삽입하면, 이진 검색트리는 (b)와 같아진다.</p>

<p>이 문제에서는 1, 2, ..., N 총 N개의 키를 가지고 있는 이진 검색 트리를 이용한다. {1, 2, ..., N}의 순열 a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>N</sub>에 대해서, a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>N</sub>을 순서대로 비어있는 이진 검색 트리에 삽입한다면, 이진 검색 트리를 만들 수 있다. 예를 들어, 순열 2 1 4 3 5는 그림 (c)를 만들 수 있다. 또, 2 4 3 1 5도 같은 트리를 만든다. {1, 2, 3, 4, 5}의 순열 중에서 그림 (c)와 같은 이진 검색 트리를 만드는 순열의 개수는 8개이다.</p>

<p>N과 순열 P가 주어졌을 때, 그 순열과 같은 이진 검색 트리를 만드는 순열의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T (≤ 100)가 주어진다. 각 테스트 케이스의 첫째 줄에는 키의 수 N이 주어진다. (1 ≤ N ≤ 20) 다음 줄에는 길이가 N인 순열이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 입력으로 주어진 순열과 같은 트리를 만드는 순열의 개수를 9,999,991로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
5
2 1 4 3 5
4
2 4 1 3
12
1 2 3 4 5 6 7 8 9 10 11 12
','8
3
1
','MATH'),
                                                                                                                (1404,'BAEKJOON','https://www.acmicpc.net/problem/8949',8949,'대충 더해','1초','128 MB',4,'<p>강민이는 동생 희주를 위해 수학 문제를 만들고 있다.&nbsp;희주는 매일 연습하고 열심히&nbsp;공부했지만, 아직도 더하기를 끝내지 못했다.</p>

<p>숫자를 더할 때,&nbsp;오른쪽부터&nbsp;왼쪽으로 가면서 숫자를 하나씩 더한다. 그런데 희주는&nbsp;귀찮아서 "받아 올림"을 하지 않고 그냥 두 숫자의&nbsp;합을 적어버린다.</p>

<p>예를 들면, 희주는 숫자 123과 2495를 아래와 같이 더한다.</p>

<pre>       1  2  3
 +  2  4  9  5
----------------
    2  5 11  8
</pre>

<p>그래서 답을 적을 때 25118을 적는 것이었다.</p>

<p>만약 모든 숫자를 다 이렇게 더한다면 결과가 어떻게 나오는 지 프로그램으로 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>두 정수 A, B가 공백을 두고 주어진다. A와 B는 1과 1,000,000 사이의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>희주 방식대로 더한 결과를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','512 444
','956
','MATH'),
                                                                                                                (1405,'BAEKJOON','https://www.acmicpc.net/problem/8974',8974,'희주의 수학시험','1초','128 MB',5,'<p>강민이&nbsp;동생 희주는 올해 초등학교에 입학했다.&nbsp;며칠 있으면, 생애&nbsp;첫 시험을 보게 될텐데, 수학시험도 같이 본다고 한다.</p>

<p>희주는 겁을 먹은 나머지,&nbsp;열심히&nbsp;준비해야겠다고 생각했다. 이를 본&nbsp;오빠 강민이는&nbsp;동생 희주를 위해 작은 도움을 주고자 한다.</p>

<p>연습문제 중에 하나가 정수를 적어나가는 것이였는데 수열은 1이 한 개, 2가 두 개, 3이 세 개..&nbsp;와 같이 만들어진다.</p>

<p>이제 강민이는&nbsp;희주에게 두 개의 정수 A, B를 부를텐데, 그럼 희주는 주어진 수열에서&nbsp;A번째와 B번째 사이에 있는 모든 수들의 합을 말해야한다.</p>

<p>예를&nbsp;들면, A가 1이고 B는 3이라면 답은 처음 세&nbsp;개의 정수를 더한&nbsp;1+2+2 = 5 가 된다.</p>

<p>희주에게 문제를 내기 위해 정답을 계산하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>한 줄에 양의 정수 A와 B가 주어진다. (1 ≤ A ≤ B ≤ 1000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>희주가 대답해야&nbsp;할&nbsp;정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 3
','5
','MATH'),
                                                                                                                (1407,'BAEKJOON','https://www.acmicpc.net/problem/8989',8989,'시계','1초','128 MB',9,'<p>기원이의 방에는 시침과 분침으로 이루어진 아날로그 시계가 있다. 기원이는 시침과 분침이 형성하는 각도 중 작은 각도를 측정하는 것이 취미이며, 이 각도는 0보다 크거나 같고 180보다 작거나 같다.</p>

<p>기원이는 서로 다른 5개의 시간이 hh:mm의 형태로 주어졌을 때, 중간값을 갖는 각도가 몇 시 인지 궁금해져서 이를 알아내는 프로그램을 만들고자 한다.</p>

<p>즉, 주어진 시간들이 이루는 각도를 기준으로 오름차순 정렬했을 때, 세 번째에 위치한 시간을 찾으면 되는 것이다.<span style="font-family:Arial,&quot;Helvetica Neue&quot;,Helvetica,Tahoma,sans-serif"> 만일 동일한 각도를 갖는 시간들이 있으면, 빠른 시간 순서대로 정렬한다.</span></p>

<p>예를들어&nbsp;06:05, 07:10, 03:00, 21:00, 12:55 가 주어졌으면, 정렬 결과는&nbsp;12:55, 03:00, 21:00, 06:05, 07:10 이 되고, 중간 값은 21:00 이 된다.</p>

<p>기원이를 도와 주어진 시간들의 각도 중 중간값을 갖는 시간이 언제인지 찾는 프로그램을 작성해보자</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에 테스트 케이스의 개수 T가 주어진다.</p>

<p>각 테스트 케이스는 5개의&nbsp;hh:mm의 형식으로 이루어진 시간 데이터로 구성되어 있으며, 띄어쓰기 한칸으로 구분되어 있다.</p>

<p>단, 00 ≤ hh ≤ 23이고,&nbsp;00 ≤ mm ≤ 59이다</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 주어진 시간 데이터들 중, 중간 각도 값을 갖는 시간을 hh:mm의 형태로&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
00:00 01:00 02:00 03:00 04:00
06:05 07:10 03:00 21:00 12:55
11:05 12:05 13:05 14:05 15:05
','02:00
21:00
14:05
','MATH'),
                                                                                                                (1408,'BAEKJOON','https://www.acmicpc.net/problem/9006',9006,'다리','3초','128 MB',17,'<p><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/9006/1.png" style="float:right; height:237px; width:178px"></p>

<p>도시의 북쪽에서 남쪽으로 흐르는 두 개의 강에 집이 그림처럼 각 강에 늘어서 있다. 여기에 양쪽의 각 집에 사는 사람들이 다른 곳으로 더 빨리 움직일 수 있게 하기 위해 다리를 놓을 생각이다.</p>

<p>왼쪽 강은 정확히 \(x = -1\)의 세로선이고, 오른쪽 강은 정확히 \(x=1\)의 세로선이다. 다리는 두 강의 각각의 지점을 연결하는 \(x\)-축에 평행한 선으로 표시되어 있다. 집의 위치가 세로선 위에 표시되어 있다.</p>

<p>다리의 최적 장소를 결정하기 위해&nbsp;각각의 집이 \((-1,&nbsp;a_{i})\) 혹은 \((1, b_{j})\)&nbsp;(\(i=1,\cdots,n\), \(j=1,\cdots,m\))에 위치할 때,\[\sum_{\forall i,j}d(a_{i}, b_{j}) = \sum_{\forall i, j}\left(|a_{i}-h| +&nbsp;2 +&nbsp;|h - b_{j}|\right)\]를 최소화하는 \(h\)에, 즉 (가능한)&nbsp;왼쪽 집에서 오른쪽&nbsp;집으로 가는 모든 거리의 합을 최소화하는 \(h\)에 다리를 놓는 것이 좋을 것이다. 이를 출력하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 T가 주어진다. 이는&nbsp;입력이&nbsp;T개의 테스트 케이스로 구성된다는 의미이다. 각각의 테스트 케이스의 첫째 줄에&nbsp;n과 m이 주어진다.&nbsp;(1 ≤ n, m ≤ 10<sup>6</sup>) n은 왼쪽 강의 집 수를, m은 오른쪽 강의 집 수를 의미한다. 다음 n개의 줄에는 n개의 왼쪽 강의 집 위치인 a<sub>i</sub>가 주어지고, 그 다음 m개의 줄에는 m개의 오른쪽 강의 집 위치 b<sub>j</sub>가 주어진다. (|a<sub>i</sub>|, |b<sub>j</sub>| ≤ 10<sup>7</sup>)&nbsp;이 (n+m)개의 줄에 주어지는 집의 위치는 모두 다른 정수값이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 줄에 대해 문제의 조건을 만족하는 h를 소수점 한 자리까지&nbsp;한 줄에&nbsp;출력하라. 그런 h가 여러 개 존재한다면, 가장 작은 값을 출력하면 된다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
3 4
30
-16
5
-5
25
-20
-10
4 7
18
-15
-3
2
8
20
12
-3
18
9
4
','-5.0
4.0
','MATH'),
                                                                                                                (1409,'BAEKJOON','https://www.acmicpc.net/problem/9009',9009,'피보나치','1초','128 MB',10,'<p>피보나치 수 ?<sub>K</sub>는 ?<sub>K</sub> = ?<sub>K-1</sub> + ?<sub>K-2</sub>로 정의되며 초기값은 ?<sub>0</sub> = 0과 ?<sub>1</sub> = 1 이다. 양의 정수는 하나 혹은 그 이상의 서로 다른 피보나치 수들의 합으로 나타낼 수 있다는 사실은 잘 알려져 있다.&nbsp;</p>

<p>하나의 양의 정수에 대한 피보나치 수들의 합은 여러 가지 형태가 있다. 예를 들어 정수 100은 ?<sub>4</sub> + ?<sub>6</sub> + ?<sub>11</sub> = 3 + 8 + 89 또는 ?<sub>1</sub> + ?<sub>3</sub> + ?<sub>6</sub> + ?<sub>11</sub> = 1 + 2 + 8 + 89, 또는 ?<sub>4</sub> + ?<sub>6</sub> + ?<sub>9</sub> + ?<sub>10</sub> = 3 + 8 + 34 + 55 등으로 나타낼 수 있다. 이 문제는 하나의 양의 정수를 최소 개수의 서로 다른 피보나치 수들의 합으로 나타내는 것이다.&nbsp;</p>

<p>하나의 양의 정수가 주어질 때, 피보나치 수들의 합이 주어진 정수와 같게 되는 최소 개수의 서로 다른 피보나치 수들을 구하라.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력 데이터는 표준입력을 사용한다. 입력은 T 개의 테스트 데이터로 구성된다. 입력의 첫 번째 줄에는 테스트 데이터의 수를 나타내는 정수 T 가 주어진다. 각 테스트 데이터에는 하나의 정수 n이 주어진다. 단, 1 ≤ n ≤ 1,000,000,000.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 표준출력을 사용한다. 하나의 테스트 데이터에 대한 해를 하나의 줄에 출력한다. 각 테스트 데이터에 대해, 피보나치 수들의 합이 주어진 정수에 대해 같게 되는 최소수의 피보나치 수들을 증가하는 순서로 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
100
200
12345
1003
','3 8 89
1 55 144
1 34 377 987 10946
3 13 987
','MATH'),
                                                                                                                (1410,'BAEKJOON','https://www.acmicpc.net/problem/9020',9020,'골드바흐의 추측','2초','256 MB',9,'<p>1보다 큰 자연수&nbsp;중에서 &nbsp;1과 자기 자신을 제외한 약수가 없는 자연수를 소수라고 한다. 예를 들어, 5는 1과 5를 제외한 약수가 없기 때문에 소수이다. 하지만, 6은 6 = 2 × 3 이기 때문에 소수가 아니다.</p>

<p>골드바흐의 추측은 유명한 정수론의 미해결 문제로, 2보다 큰 모든 짝수는 두 소수의 합으로 나타낼 수 있다는 것이다. 이러한 수를 골드바흐 수라고 한다. 또, 짝수를 두 소수의 합으로 나타내는 표현을 그 수의 골드바흐 파티션이라고 한다. 예를 들면, 4 = 2 + 2, 6 = 3 + 3, 8 = 3 + 5, 10 = 5 + 5, 12 = 5 + 7, 14 = 3 + 11, 14 = 7 + 7이다. 10000보다 작거나 같은&nbsp;모든 짝수 n에 대한 골드바흐 파티션은 존재한다.</p>

<p>2보다 큰 짝수 n이 주어졌을 때, n의 골드바흐 파티션을 출력하는 프로그램을 작성하시오. 만약 가능한 n의 골드바흐 파티션이 여러 가지인 경우에는 두 소수의 차이가 가장 작은 것을 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고 짝수 n이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서 주어진 n의 골드바흐 파티션을 출력한다. 출력하는 소수는 작은 것부터 먼저 출력하며, 공백으로 구분한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
8
10
16
','3 5
5 5
5 11
','MATH'),
                                                                                                                (1411,'BAEKJOON','https://www.acmicpc.net/problem/9021',9021,'숫자 퍼즐','5초','128 MB',24,'<p>숫자 퍼즐은 표시된 수들을 잇는 통로를 찾는 퍼즐이다. 참가자는 표의 모든 똑같은 숫자끼리 이을 수 있는, 끊기지 않는 선을 찾아야 한다. 선들은 여러 갈래로 나눠지거나 교차할 수 없다. 그리고 숫자는 각 선의 양 끝에 있어야 한다.</p>

<p>그리고 선들은 모든 칸을 정확히 한 번씩만 지나야 한다.</p>

<p style="text-align:center"><img src="/userupload/79brue/201502/fe591b75f79cb2aad212d44c6db37b20.png"></p>

<p>우리는 여기에서 한 숫자는 한 쌍만 있다는 것을 알 수 있다. 그리고 표의 크기가&nbsp;m x n 인 경우에, m과 n은 모두 짝수이다. 다음 그림을 보자.</p>

<p style="text-align:center"><img src="/userupload/79brue/201502/2f002a9f83527f3d071a534ba91dc9e3.png"></p>

<p>상근이는 이 1 두 개가 놓여져 있는 표에서 이 퍼즐을 완성하려고 한다. 상근이를 도와 문제의 조건을&nbsp;지키는 길을 찾는 프로그램을 만드시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄은 T (테스트 케이스의 수)로 이루어져 있다.</p>

<p>각 테스트 케이스는 표의 행의 개수 m, 열의 개수 n (2 ≤&nbsp;m, n ≤ 100)이 첫 줄에 주어진다. 두 번째 줄과&nbsp;세 번째 줄은 i와 j, a와 b(각 1의 위치를 나타내는 좌표)로 이루어져 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스별로 가는 길이 없으면 -1을 출력한다. 아니면, 1을 출력한 다음 m x n 줄마다 순서대로 길이 지나는 좌표를 출력한다. 양 끝 줄에는 각 1의 위치를 출력해야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
4 4
2 2
3 3
6 6
3 4
4 4
','-1
1
4 4
5 4
5 5
4 5
3 5
2 5
1 5
1 6
2 6
3 6
4 6
5 6
6 6
6 5
6 4
6 3
6 2
6 1
5 1
4 1
3 1
2 1
1 1
1 2
2 2
3 2
4 2
5 2
5 3
4 3
3 3
2 3
1 3
1 4
2 4<br','MATH'),
                                                                                                                (1412,'BAEKJOON','https://www.acmicpc.net/problem/9063',9063,'대지','1초','128 MB',3,'<p>&nbsp;임씨는 1950 년 한국전쟁으로 많은 손해를 본 사람들 중 하나다. 전쟁 통에 손해보지 않은 사람이 어디 있을까 만은 그는 6.25 가 일어나기 전만 해도 충청도 지방에 넓은 대지를 소유한 큰 부자였다. 전쟁이 나자 임씨는 땅문서와 값 나가는 것들만 챙겨서 일본으로 피난을 가지만 피난 중에 그만 땅문서를 잃어버리고 만다. 전쟁이 끝난 후에 임씨의 땅은 이미 다른 사람들의 논밭이 되어 있었고, 임씨는 땅을 되찾으려 했지만 문서가 없으니 생떼 쓰는 것과 다를 바 없었다. 이러다가 임씨는 길바닥에 나앉게 생겼다.</p>

<p>이때, 임씨에게 좋은 생각이 떠올랐으니 바로 자신이 습관처럼 땅 깊숙이 뭔가 표식을 해놓았던 사실이다. 임씨는 한적할 때마다 자신의 논밭을 거닐다가 땅속 깊은 곳에 자신의 이름이 씌어진 옥구슬을 묻어놓았던 것이다. 즉, 어떤 지점에서 그의 이름이 적힌 옥구슬이 나온다면 그 지점은 예전에 임씨의 땅이었다는 것을 증명하는 것이다.</p>

<p>임씨는 즉시 민사소송을 통해 자신의 땅을 찾고자 했고 논리적인 근거를 들어 옥구슬이 나오는 지점이 원래 자신의 땅의 한 지점이었다는 것을 주장하여 결국 담당판사를 설득하는 데에 성공하였다. 담당판사는 다음과 같은 판결을 내렸다. “ 6.25 이전의 개인소유 대지들은 99%가 남북, 동서 방향으로 평행한 직사각형 모양이었으므로, 임씨의 이름이 새겨진 옥구슬이 나오는 모든 지점을 포함하는 가장 작은 남북, 동서 방향으로 평행한 변을 갖는 직사각형의 대지를 임씨의 소유로 인정한다.” 임씨는 많은 손해를 보는 셈이지만 더 이상을 요구할 만한 근거가 없었기 때문에 이 판결을 따르기로 했다.</p>

<p>임씨의 이름이 새겨진 옥구슬의 위치 N 개가 주어질 때에, 임씨에게 돌아갈 대지의 넓이를 계산하는 프로그램을 작성하시오. 단, 옥구슬의 위치는 2 차원 정수 좌표로 주어지고 옥구슬은 같은 위치에 여러 개가 발견될 수도 있으며, x 축의 양의방향을 동쪽, y 축의 양의방향을 북쪽이라고 가정한다.&nbsp;</p>

<p><img alt="" src="https://onlinejudgeimages.s3.amazonaws.com/problem/9063/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202017-01-03%20%EC%98%A4%ED%9B%84%204.58.37.png" style="height: 126.667px; width: 347.5px;"></p>

<p>예를 들어 위와 같이 (2, 1), (3, 2), (5, 2), (3, 4) 네 점에서 옥구슬을 발견하였다면, 임씨에게 돌아갈 대지는 (2, 1), (5, 1), (2, 4), (5, 4)를 네 꼭짓점으로 하는 직사각형이며, 넓이는 (5 - 2) × (4 - 1) = 9 가 된다.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 점의 개수 N (1 ≤ N ≤ 100,000) 이 주어진다. 이어지는 N 줄에는 각 점의 좌표가 두 개의 정수로 한 줄에 하나씩 주어진다. 각각의 좌표는 -10,000 이상 10,000 이하의 정수이다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 N 개의 점을 둘러싸는 최소 크기의 직사각형의 넓이를 출력하시오.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
20 24
40 21
10 12
','360
','MATH'),
                                                                                                                (1414,'BAEKJOON','https://www.acmicpc.net/problem/9066',9066,'금고','1초','128 MB',16,'<p>어떤 금고가 N × N 개의 격자에 모두 한 개씩의 손잡이를 가지고 있다. 모든 손잡이는 수직(|), 또는 수평(-), 이 두 가지 상태밖에 없으며 이 손잡이를 돌려서 수직, 수평으로 만들 수 있다.</p>

<p>각 손잡이의 번호는 왼쪽에서 오른쪽으로, 위에서부터 아래로 내려가면서 1 번부터 N<sup>2</sup>번까지 아래 왼쪽그림과 같이 지정되어 있다. 그리고 금고의 초기상태는 오른쪽 그림과 같이 모두 손잡이가 수평(-)으로 되어 있다. 그리고 모든 손잡이가 수평으로 되어있을 때만 금고문은 열린다.&nbsp;</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3.amazonaws.com/problem/9066/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202017-01-03%20%EC%98%A4%ED%9B%84%205.26.11.png" style="height: 92.5px; width: 354.167px;"></p>

<p>우리는 이 금고문이 열려있는 초기상태에서 다음과 같이 문을 잠근다. 어떤 손잡이를 잡고 그 방향을 바꾼다. 즉 수평(-)인 경우에 돌리면 수직(|)이 되고, 수직인 경우에는 수평이 된다. 그리고 중요한 한 가지 특징은 선택한 손잡이와 같은 행과 열에 있는 모든 손잡이의 방향은 바뀌게 된다.</p>

<p>예를 들어 초기상태에서 손잡이 6 번을 돌리면 아래 왼쪽 그림과 같은 상태가 되고 그 상태에서 다시 손잡이 11 번을 돌리면 오른쪽 그림과 같은 상태가 된다.&nbsp;</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3.amazonaws.com/problem/9066/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202017-01-03%20%EC%98%A4%ED%9B%84%205.27.14.png" style="height: 90px; width: 354.167px;"></p>

<p>이 문제는 잠긴 금고를 열기 위해서 최소 몇 번 손잡이를 돌려야 하는지를 출력하는 것이다. 즉, 모든 손잡이를 수평으로 만들기 위해 최소 몇 번 손잡이를 돌려야 하는지를 계산하는 것이다.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 표준입력(standard input)을 통해 받아들인다. 입력의 첫 줄에는 테스트 케이스의 개수 T (1 ≤ T ≤ 20)가 주어진다. 각 테스트 케이스는 첫째 줄에 금고의 크기를 나타내는 N 이 2 이상 20 이하의 짝수로 주어진다. 그 다음 이어지는 N개의 줄에는 금고의 상태가 나타난다. 각 줄에는 한 줄에 N개씩 H 또는 V 문자가 하나의 공백을 두고 나타난다. 여기에서 H는 수평상태의 손잡이를 V는 수직상태의 손잡이를 나타낸다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 표준출력(standard output)을 통하여 출력한다. 각 테스트케이스에서 금고를 열기 위해 손잡이를 돌려야 하는 최소 회수를 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
4
H V V H
V V H V
V H V V
H V V H
4
H V H H
H V H H
V V V V
H V H H
','2
1
','MATH'),
                                                                                                                (1415,'BAEKJOON','https://www.acmicpc.net/problem/9070',9070,'장보기','1초','128 MB',4,'<p>평소 맛살을 즐겨 먹는 혜선은 맛살을 구입하러 2-마트에 갔다. 식품코너에서 맛살을 고르면서 혜선은 고민이 되기 시작했다. 여러 업체에서 나온 맛살들이 들어있는 개수도 다르고 가격도 다르기 때문에 어떤 것을 사야 싼 가격에 많이 먹을 수 있을지 생각해야 했기 때문이다.&nbsp;</p>

<p>혜선은 현명하게도 각 맛살에 써진 중량(g)과 가격(원)을 다 조사해서 같은 가격으로 최대한 많은 중량을 살 수 있는 맛살을 사기로 했다. 혜선의 고민을 해결해 줄 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 표준입력(standard input)을 통해 받아들인다. 입력의 첫 줄에는 테스트 케이스의 개수 T(1 ≤ T ≤ 20)가 주어진다. 각 테스트 케이스는 첫째 줄에는 맛살의 종류 N이 주어지고 두 번째 줄부터는 각 맛살의 중량(g) W와 가격(원) C가 순서대로 공백 하나를 사이에 두고 한 줄에 하나씩 N개가 주어진다. (1 ≤ N ≤ 100, 1 ≤ W ≤ 5000, 1 ≤ C ≤ 100000, W와 C는 정수)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 표준출력(standard output)을 통하여 출력한다. 각 테스트 케이스에 대해서 혜선이 사야 하는 맛살의 가격을 한 줄에 하나씩 출력하시오. 같은 가격으로 살 수 있는 최대 중량이 같은 맛살이 두 개 이상인 경우는 낮은 가격의 것을 사기로 한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
2
300 2000
200 1500
3
320 2139
700 3200
1400 6400
5
250 1920
500 2980
430 2700
380 2350
340 2310
','2000
3200
2980
','MATH'),
                                                                                                                (1416,'BAEKJOON','https://www.acmicpc.net/problem/9078',9078,'정렬','1초','128 MB',14,'<p>주어진 숫자 열을 정렬하는데, 사용할 수 있는 연산은 이웃하는 두 숫자를 다른 두 수 사이나 숫자열의 맨 앞 혹은 맨 뒤에 끼워 넣는 것 뿐이다. 즉, 한 번에 숫자를 하나씩 옮기는 것이 아니라, 이웃하는 숫자를 두 개씩 묶어서 옮긴다. 4 1 5 3 2의 경우 다음과 같이 정렬할 수 있다.</p>

<p>4 1 5 <u>3 2</u> → 3 2 <u>4 1</u> 5 → <u>3 4</u> 1 2 5 → 1 2 3 4 5</p>

<p>그러나 2 1 3의 경우에는 어떻게 하더라도 정렬할 수 없다.</p>

<p>이와 같이 입력으로 1에서 N까지의 서로 다른 N의 정수로 구성된 숫자 열이 주어졌을 때, 그것이 위의 연산만으로 정렬가능한지 여부를 결정하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에는 테스트 케이스의 개수 T(1 ≤ T ≤ 20)가 주어진다. 각 테스트 케이스는 두 줄로 이루어져 있다. 첫째 줄에는 정수 N(1 ≤ N ≤ 100)이 주어지고, 둘째 줄에는 N개의 정수가 공백을 사이에 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서 정렬 가능하면 YES를, 아니면 NO를 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
3
1 2 3
4
2 4 1 3
7
3 6 7 1 2 4 5
','YES
NO
YES
','MATH'),
                                                                                                                (1417,'BAEKJOON','https://www.acmicpc.net/problem/9080',9080,'PC방 요금','1초','128 MB',12,'<p>현성이는 요즘 LINEAR 2라는 온라인 게임에 빠져있다. PC방에 가서 게임을 즐기는데, 자주 가는 PC방의 요금체계는 다음과 같다. 일반 요금으로 시간당 1000원 씩을 받으며, 야간 정액을 끊으면 5000원만 내고 밤 10시부터 다음날 아침 8시까지 사용할 수 있다. 이 PC방에서는 1시간에서 1분이라도 넘으면 새로운 1시간에 대한 요금을 부과한다. 그리고 이미 일반 요금으로 사용을 하다가 야간 정액을 쓰게 되면 일반 요금을 미리 계산을 하고 야간 정액을 쓸 수 있다. 즉, 일반 요금을 쓰다가 야간 정액을 쓰고 다시 일반 요금을 쓰게 되면 두 개의 일반 요금을 각각 따로 계산이 된다.</p>

<p>현성이가 게임을 시작하는 시각과 게임을 하는 시간을 입력으로 받으면 현성이가 최소로 지불해야 하는 PC방 이용 요금을 계산하는 프로그램을 작성하시오. 현성이는 한 번 게임을 시작하면 게임을 하는 시간 동안 계속 게임을 한다고 하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에는 테스트 케이스의 개수 T (1 ≤ T ≤ 10)가 주어진다. 각 테스트 케이스는 한 줄에 HH:MM D가 주어지며 HH와 MM사이에는 :(콜론)이 있고, MM과 D사이에는 한 칸의 공백이 주어진다. HH:MM은 현성이가 게임을 시작하는 시각을 나타내며 HH시 MM분부터 시작함을 의미한다. D는 현성이가 게임을 하는 시간을 분으로 나타내며 정수로 주어진다. HH:MM은 00:00부터 23:59까지의 시각으로 표시되며 모두 2자리로 표시된다(숫자가 한 자리일 때에는 앞에 0이 붙어서 주어진다.). 사람 체력의 한계상 D는 3일 동안의 시간까지만 입력된다. (1 ≤ D ≤ 4320)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서 현성이가 지불해야 하는 최소의 PC방 이용 요금을 한 줄에 하나씩 출력한다(단위 원은 생략).</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
14:30 180
19:28 242
23:25 580
21:10 765
','3000
5000
7000
8000
','MATH'),
                                                                                                                (1418,'BAEKJOON','https://www.acmicpc.net/problem/9081',9081,'단어 맞추기','1초','128 MB',10,'<p>BEER라는 단어를 이루는 알파벳들로 만들 수 있는 단어들을 사전 순으로 정렬하게 되면</p>

<pre>BEER
BERE
BREE
EBER
EBRE
EEBR
EERB
ERBE
EREB
RBEE
REBE
REEB</pre>

<p>와 같이 된다. 이러한 순서에서 BEER 다음에 오는 단어는 BERE가 된다. 이와 같이 단어를 주면 그 단어를 이루는 알파벳들로 만들 수 있는 단어들을&nbsp;사전 순으로 정렬할 때에 주어진 단어 다음에 나오는 단어를 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에는 테스트 케이스의 개수 T (1 ≤ T ≤ 10)가 주어진다. 각 테스트 케이스는 하나의 단어가 한 줄로 주어진다. 단어는 알파벳 A~Z 대문자로만 이루어지며 항상 공백이 없는 연속된 알파벳으로 이루어진다. 단어의 길이는 100을 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서 주어진 단어 바로 다음에 나타나는 단어를 한 줄에 하나씩 출력하시오. 만일 주어진 단어가 마지막 단어이라면 그냥 주어진 단어를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
HELLO
DRINK
SHUTTLE
ZOO
','HELOL
DRKIN
SLEHTTU
ZOO
','MATH'),
                                                                                                                (1419,'BAEKJOON','https://www.acmicpc.net/problem/9085',9085,'더하기','1초','128 MB',3,'<p>10보다 작거나 같은 자연수 N개를 주면 합을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에는 테스트 케이스의 개수 T(1 ≤ T ≤ 10)가 주어진다. 각 테스트 케이스는 첫 줄에 자연수의 개수 N(1 ≤ N ≤ 100)이 주어지고, 그 다음 줄에는 N개의 자연수가 주어진다. 각각의 자연수 사이에는 하나씩의 공백이 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서 주어진 자연수의 합을 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
5
1 1 1 1 1
7
1 2 3 4 5 6 7
','5
28
','MATH'),
                                                                                                                (1420,'BAEKJOON','https://www.acmicpc.net/problem/9094',9094,'수학적 호기심','1초','128 MB',3,'<p>두 정수 n과 m이 주어졌을 때, 0 < a < b < n인 정수 쌍 (a, b) 중에서 (a<sup>2</sup>+b<sup>2</sup>+m)/(ab)가 정수인 쌍의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있으며, n과 m이 주어진다. 두 수는 0보다 크고, 100보다 작거나 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 문제의 조건을 만족하는 (a, b)쌍의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
10 1
20 3
30 4
','2
4
5
','MATH'),
                                                                                                                (1421,'BAEKJOON','https://www.acmicpc.net/problem/9176',9176,'메르센 합성수','1초','128 MB',12,'<p>메르센 수는 2<sup>P</sup>-1 (P는 소수) 인 수를 말한다.</p>

<p>메르센 수는 P가 작을 땐 모두 소수인 듯 보인다.</p>

<table class="table table-bordered" style="width:40%">
	<thead>
		<tr>
			<th>Prime</th>
			<th>Corresponding Mersenne Number</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>2</td>
			<td>4-1 = 3 - prime</td>
		</tr>
		<tr>
			<td>3</td>
			<td>8-1 = 7 - prime</td>
		</tr>
		<tr>
			<td>5</td>
			<td>32-1 = 31 - prime</td>
		</tr>
		<tr>
			<td>7</td>
			<td>128-1 = 127 - prime</td>
		</tr>
	</tbody>
</table>

<p>하지만 P가 충분히 큰 소수일 경우, 메르센 수는 소수가 아닐 수도 있다.</p>

<p>이렇게 메르센 수이면서 소수가 아닌 수를 메르센 합성수 라 하자.</p>

<p>이때, K(< 63)가 주어지면, P가 K 이하인 모든 메르센 합성수를 찾아 소인수분해하는 프로그램을 작성하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력에는 단 하나의 정수 K가 주어진다. (K < 63)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>P<=K 인 모든 메르센 합성수 2 <sup>P</sup>-1에 대해, 예제 출력과 같은 형식으로 소인수분해한 결과를 출력한다.</p>

<p>메르센 합성수 자체가 작은 수부터 출력해야 하며, 각 소인수들은 오름차순으로 출력되어야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','31
','23 * 89 = 2047 = ( 2 ^ 11 ) - 1
47 * 178481 = 8388607 = ( 2 ^ 23 ) - 1
233 * 1103 * 2089 = 536870911 = ( 2 ^ 29 ) - 1
','MATH'),
                                                                                                                (1422,'BAEKJOON','https://www.acmicpc.net/problem/9206',9206,'나무 말고 꽃','1초','128 MB',18,'<p>선영이와 남자친구의 2주년이 얼마 남지 않았다. 선영이는 그를 위해 특별한 것을 사주려고 한다. 남자친구는 나무에 관심이 매우 많다. 하지만, 선영이는 나무는 선물로 매우 크다고 생각한다. 따라서, 꽃을 사주려고 한다.</p>

<p>선영이는 모든 꽃에는 그 꽃과 가장 잘 어울리는 꽃병의 부피가 있다고 생각한다. 선영이는 꽃병을 구매하기 위해 인터넷 쇼핑몰에 들어갔다. 쇼핑몰에는 꽃병의 사진과 윤곽 함수가 적혀져 있다. 가장 적합한 꽃병을 찾는 프로그램을 작성하시오.</p>

<p>꽃병의 윤곽은 함수&nbsp;f(x) = a?e<sup>-x<sup>2</sup></sup>+ b?√x로 나타낼 수 있다. 여기서 x는 꽃병의 바닥과 떨어진 수직 거리이다. 꽃병은 이 함수를 x축에 대해서 회전시킨 모양이다. 꽃병의 높이는 h이다.</p>

<p>서로 다른 두 꽃병의 부피의 차이는 적어도 10<sup>-4</sup>이다. 또, 서로 다른 두&nbsp;꽃병과 선영이가 찾는 꽃병의 부피의 차이도 적어도 10<sup>-4</sup>&nbsp;만큼 차이난다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 선영이가 찾는 꽃병의 부피 1 < V ≤ 10<sup>5</sup> 와 쇼핑몰에 올라와 있는 꽃병의 수 0 < N ≤ 5 이 주어진다.</p>

<p>다음 N개 줄에는 문제의 함수에 해당하는 a, b, h가 주어진다. (1 ≤ a, b, h ≤ 10)</p>

<p>예제의 경우에 두 꽃병의 부피는 34.72348, 21.77966이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>선영이가 찾는 꽃병과 부피 차이가 적은 꽃병의 인덱스를 출력한다. 첫 번째 꽃병의 인덱스는 0이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','25.0 2
1.0 2.0 2.0
2.0 1.0 2.0
','1
','MATH'),
                                                                                                                (1423,'BAEKJOON','https://www.acmicpc.net/problem/9211',9211,'타이밍','1초','128 MB',15,'<p>은하계의 충돌이 다가오고 있다.</p>

<p>미스테리한 MdI가 다스리는 은하계는 지금 우리 은하를 무력으로 합병하려고 하고 있다. 하지만 은하계 정부는 상황을 반전시킬 계획을 가지고 있다.&nbsp;</p>

<p>우리 정보국은 적의 본부에 잠입했고, 놀라운 지능을 얻게되었다. 적은 정해진 계획에 의해서 병력을&nbsp;움직인다. 그 계획은 각 요새에 주둔하고 있는 병력의 일정 비율이 다른 요새로 매 시간마다 이동하는 것이다. (요새 사이를 이동하는 시간은 무시할 수 있다)</p>

<p>자 이제 정부는 공격할 날짜를 정했다. 이제 적의 약점을 찾아야 한다. 하지만, 적의 은하는 매우 멀기 때문에 그 곳으로 날아가는데 1시간이 걸린다. 게다가 우리는 MdI가 우리의 목표를 알아채고 우리의 공격지점으로 갈 수 있는 모든 병력의 이동을 즉시 시작할 것을 알고 있다. (이 경우에는 방향에 상관 없이 이동 가능) 스파이는 당신에게 힘의 통계값을 알려 주었다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 1 ≤ T ≤ 10가 주어진다. 각 테스트 케이스의 첫째 줄에는 적의 요새의 수 N (1 ≤ N ≤ 100)과 연결된 링크의 수 l (0 ≤ l ≤ (N - 1)<sup>2</sup>), 그리고 공격할 시간 t (0 ≤ t ≤ 5000)가 주어진다. 둘째 줄에는 N개의 double값 u<sub>i</sub> 가 주어진다. (0 ≤ u<sub>i</sub> ≤ 1000) u<sub>i</sub>는 각 요새에 있는 부대의 힘의 통계값이다. 다음 l개 줄에는 링크의 정보가 포함되어 있다. 각 링크의 정보의 첫 두 정수 s<sub>j</sub> (0 ≤ s<sub>j</sub> < N)와 t<sub>j</sub> (0 ≤ t<sub>j</sub> < N)는 링크의 출발장소와 도착장소이고, 다음에 주어지는 p<sub>j</sub> (0 < p<sub>j</sub> ≤ 1)는 s<sub>j</sub>에서 t<sub>j</sub>로 이동하는 병력의 비율이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>적의 은하에서 가장 약한 지점 (모일 수 있는 부대의 힘의 통계값이 가장 작은 곳)의 힘의 통계값을 출력한다. 소수점 오차는 10<sup>-6</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p><img alt="" src=https://www.acmicpc.net/upload/images/timing1(1).png" style="height:130px; width:530px"></p>

<p><strong>그림 3</strong>&nbsp;? 첫 번째 예제의 힘의 통계값 (왼쪽: 처음, 오른쪽: 1시간이 지난 후)</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/timing2.png" style="height:133px; opacity:0.9; width:496px"></p>

<p><strong>그림 4</strong>&nbsp;? 공격을 시작한 시점에서 각 요새의 힘의 통계값 (이때, 링크는 양방향이 된다)</p>

				</div>
				</div>','3
4 3 1
100 200 10 305
0 1 0.25
1 2 0.1
2 0 0.75
4 3 1
100 200 10 312
0 1 0.25
1 2 0.1
2 0 0.75
4 4 5
100 200 300 400
0 1 0.2
1 2 0.2
2 3 0.3
3 0 0.2
','305.000000000
310.000000000
659.879000000
','MATH'),
                                                                                                                (1424,'BAEKJOON','https://www.acmicpc.net/problem/9212',9212,'트라이앵글','1초','128 MB',21,'<p>희원이는 생일 선물로 3차원 공간에 있는 삼각형 두 개를 받았다.</p>

<p>각 삼각형은 매우 얇은 선분으로 이루어져 있고, 각 선분은 매우 세게 눌러도 휘어지지 않는다.</p>

<p>사실 희원이는 삼각형 하나를 원한다. 따라서, 삼각형을 움직여서 멀리 떨어뜨려 놓으려고 한다. 삼각형을 회전시키는 것도 허용된다. 이렇게 두 삼각형을 서로 떨어뜨려 놓을 수 있는지, 아니면 꼬인 상태인지 알아내는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 1 ≤ T ≤ 1000가 주어진다. 각 테스트 케이스는 두 줄로 이루어져 있다. 첫째 줄은 첫 번째 삼각형의 꼭짓점을 나타내는 9개의 정수&nbsp;x<sub>1</sub>, y<sub>1</sub>, z<sub>1</sub>, x<sub>2</sub>, y<sub>2</sub>, z<sub>2</sub>, x<sub>3</sub>, y<sub>3</sub>, z<sub>3</sub>&nbsp;∈ [-1000,1000]&nbsp;로 이루어져 있다. 둘째 줄은 두 번째 삼각형의 꼭짓점을 나타내는 9개의 정수&nbsp;x<sub>1</sub>, y<sub>1</sub>, z<sub>1</sub>, x<sub>2</sub>, y<sub>2</sub>, z<sub>2</sub>. x<sub>3</sub>, y<sub>3</sub>, z<sub>3</sub>&nbsp;∈ [-1000,1000]&nbsp;로 이루어져 있다. 두 삼각형의 세 꼭짓점은 일직선 위에 있지 않다. 또, 두 삼각형을 교차하게 만드는 선분의 쌍은 존재하지 않으며, 두 삼각형을 동시에 포함하는 평면도 없다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 두 삼각형이 꼬여있는 상태라면 YES를 출력하고, 두 삼각형이 서로 멀리 떨어질 수 있는 상태이면 NO를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
0 0 0 10 0 0 0 10 0
1 1 10 1 1 -10 10 10 0
0 0 0 10 0 0 0 10 0
11 0 0 0 11 0 11 11 1
','YES
NO
','MATH'),
                                                                                                                (1425,'BAEKJOON','https://www.acmicpc.net/problem/9213',9213,'꽤 좋은 수','1초','128 MB',14,'<p>완전수는 자기 자신을 제외한 약수의 합이 자기 자신이 되는 자연수이다. 예를 들어, 6의 약수는 1, 2, 3인데 1+2+3은 6이기 때문에 완전수이고, 28도 1+2+4+7+14 = 28이기 때문에 완전수이다.</p>

<p>어떤 자연수의 나쁨이란 자기 자신을 제외한 약수의 합과 자기 자신과의 차이이다.</p>

<p>꽤 좋은 수는 자연수의 나쁨이 어떤 특정한 값보다 크지 않은 수이다. 예를 들어, 나쁨을 2까지 허용한다면, 100보다 작은 수 중에 꽤 좋은 수는 11가지 2, 3, 4, 6, 8, 10, 16, 20, 28, 32, 64)가 있다. 이 나쁨의 기준을 0으로 바꿔버리면 완전수의 정의와 같아진다.</p>

<p>허용하는 나쁨의 최댓값이 주어졌을 때, 꽤 좋은 수가 입력으로 주어지는 구간 안에 몇 개 있는지 구하는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 테스트 케이스 여러개로 이루어져 있다. 각 테스트 케이스는 한 줄이고 start stop badness 세 정수를 포함한다.</p>

<ul>
	<li>start (2 ≤ start < 1000000)</li>
	<li>stop (start ≤ stop < 1000000)</li>
	<li>badness (0 ≤ badness < 1000)</li>
</ul>

<p>입력의 마지막 줄에는 0이 세 개 주어진다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 입력으로 주어진 구간에 포함되는 자연수 중 꽤 좋은 수의 개수를 출력한다. (start와 stop도 구간에 포함되고, 나쁨의 최댓값은 badness로 주어진다)</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 100 2
2 100 0
1000 9999 3
0 0 0
','Test 1: 11
Test 2: 2
Test 3: 6
','MATH'),
                                                                                                                (1426,'BAEKJOON','https://www.acmicpc.net/problem/9215',9215,'신나는 분수 계산','1초','128 MB',7,'<p>유리수는 두 정수의 비로 나타낼 수 있다. 분자(n)와 분모(d)가 주어지면 이 분수를 n/d으로 쓴다. 유리수의 표현 방법은 유일하지 않다. 예를 들어, 1/2과 2/4는 그 값이 같다. 어떤 유리수 표현법 n/d이 gcd(|n|, |d|) = 1이라면 이것이 "기약분수로 표현되었다"라고 한다. 따라서 1/2은 기약분수로 표현되었지만 2/4는 아니다.</p>

<p>유리수의 덧셈은 다음과 같이 정의된다. 오른쪽 항이 기약분수로 표현되어 있다는 보장은 없음에 주목하라.</p>

<p>\[\frac{n_1}{d_1} + \frac{n_2}{d_2} = \frac{n_1d_2 + n_2d_1}{d_1d_2}\]</p>

<p>분자가 분모보다 크거나 같은 유리수는 대분수 꼴로 표현할 수 있는데, 이것은 정수부와 소수부로 이루어 진다. 예를 들어, $5 {{1}\over{3}}$은 16/3과 같은 값을 가지는 대분수 표현이다.</p>

<p>당신이 할 일은 유리수열을 읽어 그 합을 출력하는 것이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 몇 개의 테스트로 구성된다. 각 테스트의 정보는 첫 줄에 n(1 ≤ n < 1000)을 포함한다. n = 0인 경우 입력이 끝난다.</p>

<p>다음 n개의 줄은 공백이 없는 하나의 문자열이다. 각 문자열은 유리수 하나를 나타내며, 다음 세 형태 중 하나이고 기약분수로 표현되지 않을 수 있다 (w, n과 d는 정수이다: 0 ≤ w,n < 1000, 1 ≤ d < 1000).</p>

<ul>
	<li>w,n/d: (w * d + n) / d와 값이 같은 대분수</li>
	<li>n/d: 정수부가 0인 유리수</li>
	<li>w: 소수부가 0인 정수</li>
</ul>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 화면에 나온 대로 테스트 번호를 포함하여 합을 기약분수로 표현하여 출력한다. 만약 합의 정수부나 소수부가 없다면 각 부분을 생략하여 출력한다. 특수한 경우로, 정수부와 소수부가 모두 없다면 0을 출력해야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1/2
1/3
3
1/3
2/6
3/9
3
1
2/3
4,5/6
0
','Test 1: 5/6
Test 2: 1
Test 3: 6,1/2
','MATH'),
                                                                                                                (1427,'BAEKJOON','https://www.acmicpc.net/problem/9239',9239,'스티브 잡숭','1초','128 MB',9,'<p>스티브 잡숭은 남들 앞에서 발표할 때, 수학 트릭을 이용해&nbsp;청중의 관심을 끌어모은다.</p>

<p>첫 번째로 어떤 수의 제곱근이 그 수의 절반 뒷 부분이라는 트릭&nbsp;(\(\sqrt{25}=5\), \(\sqrt{5776} = 76\))을 말하고, 그 다음에는 어떤 수에 X = 2.6을 곱하면, 그 수의 첫 자리를 맨 뒷자리로 보낸 수가 된다는 트릭을 말한다. (\(135 \times 2.6 = 351\), \(270270 \times 2.6 = 702702\))</p>

<p>사람들은 두 번째 트릭에 열광했고, 잡숭은 X = 2.6을 제외한 다른 숫자를 찾으려고 한다.</p>

<p>X가 주어졌을 때, X를 곱했을 때, 결과가 원래 숫자의 첫 자리를 맨 뒷자리로 보낸 수가 되는 모든 숫자를 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째&nbsp;줄에 X (1 ≤ X < 1000)가 주어진다. X는 최대 소수점 4째 자리까지 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>10<sup>8</sup>보다 작은 모든 자연수 중에 X를 곱했을 때 결과가 원래 숫자의 첫 번째 자리를 맨 뒷자리로 보낸 수가 되는 모든 숫자를 한 줄에 하나씩 증가하는 순서대로 출력한다.</p>

<p>만약, 그러한 수가 없는 경우에는 No solution을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2.6
','135
270
135135
270270
','MATH'),
                                                                                                                (1428,'BAEKJOON','https://www.acmicpc.net/problem/9245',9245,'댄스','1초','128 MB',22,'<p>상근이는 몇 년 전부터 춤에 빠져있다. 상근이는 스윙, 살사, 힙합과 같은 춤을 모두 마스터했고, 이제 새로운 춤을 만들어 보려고 한다.</p>

<p>상근이는 새로운 춤을 한달 후에 열리는 정인이의 결혼식에서 정인이를 위해 추려고 한다. 춤은 총 N명이 추고, 바닥에는 N개의 마크가 표시되어 있다. 마크 사이에는 화살표가 그려져 있는데, 각 마크로 향하는 화살표의 개수는 1개이다. 자기 자신으로 돌아오는 화살표가 있을 수도 있다.</p>

<p>결혼식이 시작할 때, 모든 사람은 처음에 서 있을 마크를 고른다. 두 사람이 한 마크 위에 서 있을 수는 없다. 그 다음, 음악이 시작되면 춤을 10초간 추다가 상근이의 신호에 맞추어 화살표를 따라 다음 마크로 이동하게 된다. 사람들은 화살표를 통해 이동할 때, 서로 충돌하지 않는다. 만약, 자기 자신을 향하는 화살표 위에 올라가 있는 사람은 그 마크 위에서 계속 춤을 추게 된다.</p>

<p>정인이의 결혼식으로부터 일년이 지났고, 새로운 결혼식이 다가오고 있다. 상근이는 이 결혼식에도 정인이의 결혼식 때 추었던 춤을 추려고 한다. 하지만, 작년의 마크와 화살표 배치를 찾을 수 없었다. 운이 좋게 결혼식 사진에서 춤이 시작했을 때의 사진과 끝났을 때의 사진을 찾을 수 있었다. 상근이는 신호는 총 K번 이었다. 즉, 사람들은 화살표를 향해 총 K번 이동했다.</p>

<p>두 사진이 주어졌을 때, 화살표를 어떻게 그려야 하는지 구하는 프로그램을 작성하시오. 상근이는 첫 사진을 기준으로 마크에 번호를 1부터 N까지 붙였다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 K가 주어진다. (2 ≤ N ≤ 10,000, 1 ≤ K ≤ 10<sup>9</sup>)</p>

<p>둘째 줄에는 공백으로 구분된 N개의 정수 ai가 주어진다. (1 ≤ a<sub>i</sub> ≤ N) a<sub>i</sub>는 춤을 추기 시작할 때 i번째 마크 위에 서 있던 사람이 춤을 끝났을 때 몇 번째 마크 위에 서 있었는지를 나타낸다. a<sub>i</sub>는 1부터 N까지 숫자가 한 번씩 나타난다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>총 K번 이동해서 입력으로 주어진 배치를 만들 수 있는 화살표를 그릴 수 없다면 "Impossible"을 출력한다. 아닌 경우에는 N개의 숫자를 출력한다. i번째 숫자는 i번 마크가 몇 번 마크와 화살표로 연결되었는지를 나타낸다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 2
3 4 5 6 1 2
','5 6 1 2 3 4
','MATH'),
                                                                                                                (1429,'BAEKJOON','https://www.acmicpc.net/problem/9246',9246,'다트판','1초','128 MB',14,'<p>상근이는 친구들과 함께 다트를 하는 것을 좋아한다. 상근이는 다트를 잘하지 못한다. 하지만, 수학은 매우 잘한다. 이제 뛰어난 수학실력을 이용해서 다트 점수의 기댓값을 구해보려고 한다.</p>

<p>상근이가 중심으로부터 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45F TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>r</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\(r\)</span></mjx-container>만큼 떨어진 곳을 맞출 확률은 다음과 같다.</p>

<p><mjx-container class="MathJax" jax="CHTML" display="true" style="font-size: 109%; position: relative;">?<mjx-math display="true" class="MJX-TEX" aria-hidden="true" style="margin-left: 0px; margin-right: 0px;"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D453 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45F TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mfrac space="4"><mjx-frac type="d"><mjx-num><mjx-nstrut type="d"></mjx-nstrut><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-num><mjx-dbox><mjx-dtable><mjx-line type="d"></mjx-line><mjx-row><mjx-den><mjx-dstrut type="d"></mjx-dstrut><mjx-mrow><mjx-mn class="mjx-n"><mjx-c class="mjx-c32"></mjx-c></mjx-mn><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D70B TEX-I"></mjx-c></mjx-mi><mjx-msup><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D70E TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: 0.289em;"><mjx-texatom size="s" texclass="ORD"><mjx-mn class="mjx-n"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-texatom></mjx-script></mjx-msup></mjx-mrow></mjx-den></mjx-row></mjx-dtable></mjx-dbox></mjx-frac></mjx-mfrac><mjx-msup><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D452 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: 0.48em;"><mjx-texatom size="s" texclass="ORD"><mjx-mo class="mjx-n"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-mfrac><mjx-frac><mjx-num><mjx-nstrut></mjx-nstrut><mjx-msup size="s"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45F TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: 0.363em;"><mjx-mn class="mjx-n"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msup></mjx-num><mjx-dbox><mjx-dtable><mjx-line></mjx-line><mjx-row><mjx-den><mjx-dstrut></mjx-dstrut><mjx-mrow size="s"><mjx-mn class="mjx-n"><mjx-c class="mjx-c32"></mjx-c></mjx-mn><mjx-msup><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D70E TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: 0.289em;"><mjx-mn class="mjx-n"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msup></mjx-mrow></mjx-den></mjx-row></mjx-dtable></mjx-dbox></mjx-frac></mjx-mfrac></mjx-texatom></mjx-script></mjx-msup></mjx-math><mjx-assistive-mml unselectable="on" display="block"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi>f</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>π</mi><msup><mi>σ</mi><mrow data-mjx-texclass="ORD"><mn>2</mn></mrow></msup></mrow></mfrac><msup><mi>e</mi><mrow data-mjx-texclass="ORD"><mo>?</mo><mfrac><msup><mi>r</mi><mn>2</mn></msup><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac></mrow></msup></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\[f(r)=\frac{1}{2 \pi &nbsp;\sigma^{2}}e^{-\frac{r^2}{2 \sigma^2}}\]</span>?</mjx-container></p>

<p>즉, 중심으로부터 거리가 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45F TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>r</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\(r\)</span></mjx-container>만큼 떨어진 곳의 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-n"><mjx-c class="mjx-c394"></mjx-c></mjx-mi><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c22C5"></mjx-c></mjx-mo><mjx-mi class="mjx-n" space="3"><mjx-c class="mjx-c394"></mjx-c></mjx-mi><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D466 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi mathvariant="normal">Δ</mi><mi>x</mi><mo>?</mo><mi mathvariant="normal">Δ</mi><mi>y</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\(\Delta x \cdot \Delta y\)</span></mjx-container>을 맞출 확률은 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D453 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45F TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-mi class="mjx-n"><mjx-c class="mjx-c394"></mjx-c></mjx-mi><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c22C5"></mjx-c></mjx-mo><mjx-mi class="mjx-n" space="3"><mjx-c class="mjx-c394"></mjx-c></mjx-mi><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D466 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>f</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mi mathvariant="normal">Δ</mi><mi>x</mi><mo>?</mo><mi mathvariant="normal">Δ</mi><mi>y</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\(f(r)\Delta x \cdot \Delta y\)</span></mjx-container> 이다. 여기서 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D70E TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>σ</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\(\sigma\)</span></mjx-container>는 표준 편차이고, 이 값은 지금까지 마신 술의 양에 따라 다르다.</p>

<p>다트에서 점수를 매기는 방식은 아래와 같다.</p>

<ul>
	<li>Bulls eye 내부는 50점</li>
	<li>Bull 고리는 25점</li>
	<li>각각의 부채꼴 모양은 겉에 쓰여 있는 숫자만큼 점수</li>
	<li>위의 경우에 Triple ring 안에 다트를 맞춘 경우 부채꼴 점수의 3배</li>
	<li>또, Double ring 안에 맞춘 경우에는 2배.</li>
</ul>

<p>Double ring의 바깥에 다트를 맞춘 경우 점수는 0점이다. 모든 부채꼴의 넓이는 같다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/dartboard.png" style="height:181px; width:250px"></p>

<p>출처: 위키미디어 (CC BY-SA 3.0 licensed by Tijmen Stam)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 6개의 실수가 주어진다. 이 실수는 Bullseye, bull, Triple Ring의 안쪽, 바깥쪽, Double Ring의 안쪽 바깥쪽의 반지름이며, 단위는 모두 센티미터이다. 둘째 줄에는 표준 편차 (\sigma\)가 주어지며, 단위는 센티미터이다. 모든 실수는 구간 [10<sup>-3</sup>,100]에 포함된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 상근이가 다트를 하나 던졌을 때 기댓값을 출력한다. 절대/상대 오차는 10<sup>-4</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1.27 3.1 10.9 11.7 16.2 17.0
17.0
','5.266210658
','MATH'),
                                                                                                                (1430,'BAEKJOON','https://www.acmicpc.net/problem/9254',9254,'역행렬','1초','128 MB',0,'<p>\( n \times n\) 행렬이 주어졌을 때, 그 행렬의 역행렬을 구하는 프로그램을 작성하시오.</p>

<p>행렬 \(A\)가 주어졌을 때, \(AB = BA = I_n\)를 만족하는 행렬 \(B\)를 역행렬이라고 하며, \(A^{-1}\)로 표기한다. \(I_n\)은 \(n \times n\) 단위행렬이며, \(i \ne j\)일 때 \(I_{i,j} = 0\)이며, \(I_{i,i} = 1\)이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 행렬의 크기 \(N\)이 주어진다. (1 ≤ \(N\) ≤ 500)</p>

<p>다음 \(N\)개 줄에 행렬 \(A\)의 정보가 주어진다. 각 줄은 \(N\)개의 정수로 이루어져 있으며, 정수의 절댓값은 1,000보다 작거나 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>\(A\)의 역행렬이 존재하면 \(N\)개의 줄에 걸쳐 \(A^{-1}\)의 정보를 출력한다. 실수가 될 수 있기 때문에, 10<sup>-6</sup> 이내의 절대/상대 오차 범위 내에 있어야 정답으로 처리된다. 만약, 역행렬이 존재하지 않는 경우에는 "no inverse"를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1 3
2 7
','7 -3
-2 1
','MATH'),
                                                                                                                (1433,'BAEKJOON','https://www.acmicpc.net/problem/9272',9272,'상근이의 아이디어','2초','128 MB',9,'<p>상근이는 아들에게 다음과 같은 문제를 냈다.</p>

<p><mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;">?<mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c></mjx-mn><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c2264"></mjx-c></mjx-mo><mjx-msub space="4"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3C"></mjx-c></mjx-mo><mjx-msub space="4"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c2264"></mjx-c></mjx-mo><mjx-msup space="4"><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c><mjx-c class="mjx-c30"></mjx-c></mjx-mn><mjx-script style="vertical-align: 0.393em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c34"></mjx-c></mjx-mn></mjx-script></mjx-msup></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>1</mn><mo>≤</mo><msub><mi>n</mi><mn>1</mn></msub><mo><</mo><msub><mi>n</mi><mn>2</mn></msub><mo>≤</mo><msup><mn>10</mn><mn>4</mn></msup></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\(1 \le n_1 < n_2 \le 10^4\)</span></mjx-container>를 만족하는 두 정수 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>n</mi><mn>1</mn></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\(n_1\)</span></mjx-container>과 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>n</mi><mn>2</mn></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\(n_2\)</span></mjx-container>가 있다. 함수 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45D TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3A"></mjx-c></mjx-mo><mjx-msup space="4"><mjx-texatom texclass="ORD"><mjx-mi class="mjx-ds mjx-b"><mjx-c class="mjx-c2115 TEX-A"></mjx-c></mjx-mi></mjx-texatom><mjx-script style="vertical-align: 0.363em;"><mjx-mo class="mjx-n" size="s"><mjx-c class="mjx-c2217"></mjx-c></mjx-mo></mjx-script></mjx-msup><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c2192"></mjx-c></mjx-mo><mjx-msup space="4"><mjx-texatom texclass="ORD"><mjx-mi class="mjx-ds mjx-b"><mjx-c class="mjx-c2115 TEX-A"></mjx-c></mjx-mi></mjx-texatom><mjx-script style="vertical-align: 0.363em;"><mjx-mo class="mjx-n" size="s"><mjx-c class="mjx-c2217"></mjx-c></mjx-mo></mjx-script></mjx-msup></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>p</mi><mo>:</mo><msup><mrow data-mjx-texclass="ORD"><mi mathvariant="double-struck">N</mi></mrow><mo>?</mo></msup><mo stretchy="false">→</mo><msup><mrow data-mjx-texclass="ORD"><mi mathvariant="double-struck">N</mi></mrow><mo>?</mo></msup></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\(p:\mathbb{N}^* \rightarrow \mathbb{N}^*\)</span></mjx-container>, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45D TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-msup space="4"><mjx-mn class="mjx-n"><mjx-c class="mjx-c32"></mjx-c></mjx-mn><mjx-script style="vertical-align: 0.363em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msup></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>p</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mn>2</mn><mi>n</mi></msup></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\(p(n) = 2^n\)</span></mjx-container>, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-n"><mjx-c class="mjx-c2200"></mjx-c></mjx-mi><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c2208"></mjx-c></mjx-mo><mjx-msup space="4"><mjx-texatom texclass="ORD"><mjx-mi class="mjx-ds mjx-b"><mjx-c class="mjx-c2115 TEX-A"></mjx-c></mjx-mi></mjx-texatom><mjx-script style="vertical-align: 0.363em;"><mjx-mo class="mjx-n" size="s"><mjx-c class="mjx-c2217"></mjx-c></mjx-mo></mjx-script></mjx-msup></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi mathvariant="normal">∀</mi><mi>n</mi><mo>∈</mo><msup><mrow data-mjx-texclass="ORD"><mi mathvariant="double-struck">N</mi></mrow><mo>?</mo></msup></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\(\forall n \in &nbsp; \mathbb{N}^*\)</span></mjx-container> 을 이용해 다음 집합을 정의할 수 있다. (<mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msup><mjx-texatom texclass="ORD"><mjx-mi class="mjx-ds mjx-b"><mjx-c class="mjx-c2115 TEX-A"></mjx-c></mjx-mi></mjx-texatom><mjx-script style="vertical-align: 0.363em;"><mjx-mo class="mjx-n" size="s"><mjx-c class="mjx-c2217"></mjx-c></mjx-mo></mjx-script></mjx-msup></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mrow data-mjx-texclass="ORD"><mi mathvariant="double-struck">N</mi></mrow><mo>?</mo></msup></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\(\mathbb{N}^*\)</span></mjx-container>는 양의 정수의 집합이다)</p>

<p><mjx-container class="MathJax" jax="CHTML" display="true" style="font-size: 109%; position: relative;">?<mjx-math display="true" class="MJX-TEX" aria-hidden="true" style="margin-left: 0px; margin-right: 0px;"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D446 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-msub space="2"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mrow space="4"><mjx-mo class="mjx-n"><mjx-c class="mjx-c7B"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45D TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45D TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c2B"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="3"><mjx-c class="mjx-c31"></mjx-c></mjx-mn><mjx-texatom texclass="ORD"><mjx-mo class="mjx-n"><mjx-c class="mjx-c7C"></mjx-c></mjx-mo></mjx-texatom><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c2264"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="4"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c2264"></mjx-c></mjx-mo><mjx-msub space="4"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c7D"></mjx-c></mjx-mo></mjx-mrow></mjx-math><mjx-assistive-mml unselectable="on" display="block"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi>S</mi><mo stretchy="false">(</mo><msub><mi>n</mi><mn>1</mn></msub><mo>,</mo><msub><mi>n</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mrow data-mjx-texclass="INNER"><mo data-mjx-texclass="OPEN">{</mo><mi>p</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn><mrow data-mjx-texclass="ORD"><mo stretchy="false">|</mo></mrow><msub><mi>n</mi><mn>1</mn></msub><mo>≤</mo><mi>n</mi><mo>≤</mo><msub><mi>n</mi><mn>2</mn></msub><mo data-mjx-texclass="CLOSE">}</mo></mrow></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\[S(n_1,n_2)=\left\{ p(p(n))+1 |n_1 \le n \le n_2 &nbsp;\right\} \]</span>?</mjx-container></p>

<p>다음과 같은 쌍의 집합도 정의할 수 있다.</p>

<p><mjx-container class="MathJax" jax="CHTML" display="true" style="font-size: 109%; position: relative;">?<mjx-math display="true" class="MJX-TEX" aria-hidden="true" style="margin-left: 0px; margin-right: 0px;"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D447 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-msub space="2"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mrow space="4"><mjx-mo class="mjx-n"><mjx-c class="mjx-c7B"></mjx-c></mjx-mo><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45A TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-msub space="2"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45A TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-texatom texclass="ORD"><mjx-mo class="mjx-n"><mjx-c class="mjx-c7C"></mjx-c></mjx-mo></mjx-texatom><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45A TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-msub space="2"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45A TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c2208"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="4"><mjx-c class="mjx-c1D446 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-msub space="2"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-msub space="2"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45A TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3C"></mjx-c></mjx-mo><mjx-msub space="4"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45A TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c7D"></mjx-c></mjx-mo></mjx-mrow></mjx-math><mjx-assistive-mml unselectable="on" display="block"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi>T</mi><mo stretchy="false">(</mo><msub><mi>n</mi><mn>1</mn></msub><mo>,</mo><msub><mi>n</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mrow data-mjx-texclass="INNER"><mo data-mjx-texclass="OPEN">{</mo><mo stretchy="false">(</mo><msub><mi>m</mi><mn>1</mn></msub><mo>,</mo><msub><mi>m</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mrow data-mjx-texclass="ORD"><mo stretchy="false">|</mo></mrow><msub><mi>m</mi><mn>1</mn></msub><mo>,</mo><msub><mi>m</mi><mn>2</mn></msub><mo>∈</mo><mi>S</mi><mo stretchy="false">(</mo><msub><mi>n</mi><mn>1</mn></msub><mo>,</mo><msub><mi>n</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>,</mo><msub><mi>m</mi><mn>1</mn></msub><mo><</mo><msub><mi>m</mi><mn>2</mn></msub><mo data-mjx-texclass="CLOSE">}</mo></mrow></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\[T(n_1,n_2)=\left\{ (m_1,m_2) | m_1,m_2 \in &nbsp;S(n_1,n_2), m_1 < m_2 &nbsp;\right\} \]</span>?</mjx-container></p>

<p>이제 다음과 같은 식을 만들 수 있다.</p>

<p><mjx-container class="MathJax" jax="CHTML" display="true" style="font-size: 109%; position: relative;">?<mjx-math display="true" class="MJX-TEX" aria-hidden="true" style="margin-left: 0px; margin-right: 0px;"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D445 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-msub space="2"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-munder space="4"><mjx-row><mjx-base style="padding-left: 2.172em;"><mjx-mo class="mjx-lop"><mjx-c class="mjx-c2211 TEX-S2"></mjx-c></mjx-mo></mjx-base></mjx-row><mjx-row><mjx-under style="padding-top: 0.167em;"><mjx-texatom size="s" texclass="ORD"><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45A TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45A TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-mo class="mjx-n"><mjx-c class="mjx-c2208"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D447 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo></mjx-texatom></mjx-under></mjx-row></mjx-munder><mjx-texatom space="2" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D454 TEX-I"></mjx-c></mjx-mi><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D450 TEX-I"></mjx-c></mjx-mi><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D451 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45A TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-msub space="2"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45A TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo></mjx-texatom></mjx-math><mjx-assistive-mml unselectable="on" display="block"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi>R</mi><mo stretchy="false">(</mo><msub><mi>n</mi><mn>1</mn></msub><mo>,</mo><msub><mi>n</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><munder><mo data-mjx-texclass="OP">∑</mo><mrow data-mjx-texclass="ORD"><mo stretchy="false">(</mo><msub><mi>m</mi><mn>1</mn></msub><mo>,</mo><msub><mi>m</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>∈</mo><mi>T</mi><mo stretchy="false">(</mo><msub><mi>n</mi><mn>1</mn></msub><mo>,</mo><msub><mi>n</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow></munder><mrow data-mjx-texclass="ORD"><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><msub><mi>m</mi><mn>1</mn></msub><mo>,</mo><msub><mi>m</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\[R(n_1,n_2)= \sum_{(m_1,m_2) \in T(n_1,n_2)}{gcd(m_1,m_2)}\]</span>?</mjx-container></p>

<p><mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;">?<mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D454 TEX-I"></mjx-c></mjx-mi><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D450 TEX-I"></mjx-c></mjx-mi><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D451 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45A TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-msub space="2"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45A TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><msub><mi>m</mi><mn>1</mn></msub><mo>,</mo><msub><mi>m</mi><mn>2</mn></msub><mo stretchy="false">)</mo></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\(gcd(m_1,m_2)\)</span></mjx-container>는 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45A TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>m</mi><mn>1</mn></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\(m_1\)</span></mjx-container>와 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45A TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>m</mi><mn>2</mn></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\(m_2\)</span></mjx-container>의 최대 공약수이다.</p>

<p><mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;">?<mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>n</mi><mn>1</mn></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\(n_1\)</span></mjx-container>과 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>n</mi><mn>2</mn></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\(n_2\)</span></mjx-container>가 주어졌을 때, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D445 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-msub space="2"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>R</mi><mo stretchy="false">(</mo><msub><mi>n</mi><mn>1</mn></msub><mo>,</mo><msub><mi>n</mi><mn>2</mn></msub><mo stretchy="false">)</mo></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\(R(n_1,n_2)\)</span></mjx-container>를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>n</mi><mn>1</mn></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\(n_1\)</span></mjx-container>과 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>n</mi><mn>2</mn></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\(n_2\)</span></mjx-container>가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D445 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-msub space="2"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>R</mi><mo stretchy="false">(</mo><msub><mi>n</mi><mn>1</mn></msub><mo>,</mo><msub><mi>n</mi><mn>2</mn></msub><mo stretchy="false">)</mo></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\(R(n_1,n_2)\)</span></mjx-container>의 값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 34
','561
','MATH'),
                                                                                                                (1435,'BAEKJOON','https://www.acmicpc.net/problem/9273',9273,'정제헌을 팔자!','5초','128 MB',9,'<p>안암골짜기에는 ALPS(Anam Lotated Pill Station) 라는 이름의 유명한 제약회사가 있다. 그곳이 유명한 이유는, 그 회사가 제조하는 모든 약은 오로지 "소주"와 "맥주" 두 가지 재료를 통해서만 만들어지기 때문이다. ALPS의 사장 재헌은 소주와 맥주를 적절히 섞음으로써 모든 병을 치료할 수 있다는 믿음 하에 약을 팔고있다.</p>

<p>새해를 맞이하여 약을 거하기 마신 사장 재헌은 회사에 다음과 같은 신년계획을 지시했다.</p>

<ol>
	<li>회사에서 사용하는 모든 플라스크 및 비커의 용량은 전부 1/n (n은 자연수) 꼴이여야 한다</li>
	<li>판매 및 보관를 위한 모든 약은 플라스크 및 비커에 가득 담겨져 있어야한다</li>
	<li>일주일에 세번 동쪽을 향해 "알프스 개객끼"를 외친다.</li>
</ol>

<p>ALPS 회사 직원들 모두 약을 거하게 마셨기 때문에 이 지령에 대해 불만을 가지지 않고 잘 따르기로 하였다.</p>

<p>어느 날, 회사의 신묘한 약의 기운을 원하는 손님 홍준이 회사에 찾아와서 "정제헌"을 요구하였다. ("정제헌"은 ALPS에서 자랑하는, 잘 정제된 약이다.) ALPS의 신년계획에 의해서 모든 약은 자연수의 역수 꼴의 비커에 가득 담겨져있다. "정제헌" 또한 1/n 비커에 가득 담겨져있는 상태다.&nbsp;</p>

<p>ALPS 사장 재헌은 홍준에게 "정제헌" 1/n 을 전부 주고싶지 않다. 때문에 그는 "정제헌" 1/n 을 각각 1/x 와 1/y 의 용량을 가진 플라스크에 나눠담아서 1/x 에 담긴 "정제헌"을 홍준에게 주고 1/y 는 회사에 남기기로 하였다. 그런데 아차! 1/x 플라스크는 판매용이고, 1/y 플라스크는 보관용이다. 신년계획에 의해 1/x 플라스크와 1/y 플라스크 모두에 "정제헌"이 가득 담겨져 있어야 한다는 뜻이다!</p>

<p>재헌은 1/x 플라스크와 1/y 플라스크를 고르는 도중 문득 (팔라는 약은 안팔고) 신년계획을 지키면서 "정제헌"을 두 플라스크에 나눠담는 경우의 수가 궁금해졌다. 재헌이의 궁금증을 빠르게 해결하고, 홍준이에게 "정제헌"을 무사히 팔 수 있도록 도와주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>각 줄마다 테스트 케이스가 주어진다.&nbsp;</p>

<p>각 테스트 케이스는 한줄로 "정제헌"의 용량이 "1/n" 형태로 주어진다.&nbsp;1 ≤ n ≤ 10 000. 을 만족하며, 입력으로 공백이 들어오지 않는다고 가정한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 케이스마다 한 줄씩 "정제헌"을 플라스크에 나눠담을 수 있는 경우의 수를 출력한다. 즉,&nbsp;1/x+ 1/y = 1/n 을 만족하는 자연수 {x,y} 쌍의 가지수를 출력한다. 두 플라스크 중 하나는 판매용이기 때문에, {x,y} 와 {y,x} 는 서로 다른 경우가 아니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1/2
1/4
1/1
1/5000
','2
3
1
32
','MATH'),
                                                                                                                (1436,'BAEKJOON','https://www.acmicpc.net/problem/9278',9278,'절망적인 줄','2초','128 MB',12,'<p>해빈시의 공원에는 화장실이 두 개가 있다. 그런데 그 중 하나가 얼마전에 고장났다. 이제 남은 건 한 개 뿐이다....</p>

<p>문제는 해빈이는 당장 화장실이 가고 싶은데, 화장실 앞의 줄이 매우 길다는 것이다!</p>

<p>고통을 잊기 위해 해빈이는 절망적인 줄을 쳐다보며 아래와 같은 문제를 풀기 시작했다.</p>

<blockquote>
<p>화장실 사용료는 50원이다. 줄에 서 있는 사람들 중 반은 50원 동전을 가지고 있고, 나머지 반은 100원 동전만 가지고 있다.</p>

<p>화장실을 개장할 때, 관리인은 거슬러 줄 동전을 가지고 있지 않다.</p>

<p>100원 동전만 가진 사람에게는 50원 동전을 거슬러 줘야 한다. (이 경우, 50원 동전을 가진 사람이 먼저 등어가면서 지불한 동전을 거스름돈으로 사용한다)</p>

<p>사람들의 위치를 적절히 바꿔서 관리인의 거스름돈이 항상 모자라지 않게 하는 방법의 수를 구하라. 이때, 일부 사람들은 절대로 자리를 바꾸지 않는다. (뒤쪽, 앞쪽 모두 다)</p>
</blockquote>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다.</p>

<p>각 테스트 케이스는 길이가 n (1 ≤ n ≤ 1,000) 인 문자열 한 줄로 이루어져 있으며, 50원 동전을 가지고 있으면서 자리를 바꾸길 원치 않는 사람을 나타내는 (와 100원 동전을 가지고 있으면서 자리를 바꾸길 원치 않는 사람을 나타내는 ), 자리를 바꿔도 되는 사람을 나타내는 .으로 이루어져 있다.</p>

<p>(와 )의 개수는 각각 n/2개 이하이고, n은 항상 짝수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 문제의 조건을 지키며 자리를 바꿀 수 있는 방법의 수를 출력하라.&nbsp;단, 문제의 답이 매우 커질 수 있으므로 마지막 여섯자리만 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','....
.(..
)...
.....)......................
','2
1
0
68484
','MATH'),
                                                                                                                (1439,'BAEKJOON','https://www.acmicpc.net/problem/9295',9295,'주사위','1초','128 MB',3,'<p>오늘은 갑자기 주사위를 던지고 싶다.</p>

<p>그런데 코딩도 하고 싶다.</p>

<p>그럼 같이할까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다.</p>

<p>각 테스트 케이스는 한 줄로 이루어져 있으며, 주사위를 두 번 던져 나온 두 수를 입력한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 "Case x: "를 출력한 다음, 주사위를 두 번 던져 나온 두 수의 합을 출력한다. 테스트 케이스 번호(x)는 1부터 시작한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1 2
1 3
3 5
2 6
3 4
','Case 1: 3
Case 2: 4
Case 3: 8
Case 4: 8
Case 5: 7
','MATH'),
                                                                                                                (1448,'BAEKJOON','https://www.acmicpc.net/problem/9319',9319,'도청 장치','1초','128 MB',10,'<p>이번 주에 알고스팟 회의가 암스테르담에서 열린다. 전국 대학생 프로그래밍 대회 동아리 연합(이하 전대프연) 회장 성진이는 알고스팟 회의를 도청하려고 한다. 성진이는 도청장치를 회의 장소 근처에 숨겨놓았다. 도청장치는 계속해서 녹음하며, 무선 전파를 이용해서 전송한다.</p>

<p>성진이는 전대프연 회원들에게 도청장치의 수신기를 나누어주었고, 여러 장소에 흩어 보냈다. 전파는 서로 간섭을 일으킨다. 따라서, 전혀 듣지 못하는 장소가 있을 수 있다. 수신기를 가진 한 회원의 위치가 주어졌을 때, 그 사람이 들을 수 있는 도청장치를 구하는 프로그램을 작성하시오.</p>

<p>어떤 장소에서 들을 수 있는 도청장치는 다음과 같은 식을 만족하는 \(i\)번째 도청장치이다.</p>

<p>\[r_i > 6(B+\sum_{j \ne i} {r_j})\]</p>

<ul>
	<li>\(r_i = \frac{s_i} {\left| P_i - P_{listen} \right| ^2}\)는 \(i\)번째 도청장치의 신호 수신 세기이다.</li>
	<li>\(s_i\)는 \(i\)번째 도청장치가 보낸 신호의 세기이다.</li>
	<li>\(P_i\)는 \(i\)번째 도청장치의 위치이다.</li>
	<li>\(P_{listen}\)는 수신기를 들고있는 사람의 위치이다.</li>
	<li>\(\left| P_i - P_{j} \right|\) \(P_i\)와 \(P_j\) 사이의 유클리드 거리이다.</li>
	<li>\(B\)는 백그라운드 노이즈의 레벨이다.</li>
</ul>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 수가 주어지며, 100을 넘지 않는다. 각 테스트 케이스의 첫째 줄에는 도청장치의 수 \(n\) (0 ≤ \(n\) ≤ 100,000)이 주어진다. 둘째 줄에는 백그라운드 노이즈의 레벨 \(B\) (0 ≤ \(B\) ≤ 1,000,000)가 주어진다. 셋째 줄에는 수신기를 들고있는 사람의 위치 x좌표와 y좌표 \(x\)와 \(y\)가 주어진다. 다음 \(n\)개 줄에는 \(i\)번째 도청장치의 위치 \(x_i\), \(y_i\)와 신호의 세기 \(s_i\)가 주어진다. (0 ≤ \(s_i\) ≤ 1,000,000)</p>

<p>모든 좌표는 구간 [0, 10000]에 포함되며, 모든 도청장치의 위치 \(P_i\)와 수신기의 위치 \(P_{listen}\)는 다르다. 테스트 케이스는 소수점 오차가 정답에 영향을 주지 않게 설계되어져 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 들을 수 있는 도청장치의 번호를 출력한다. 만약, 들을 수 있는 도청장치가 없다면 "NOISE"를 출력한다.</p>

<p>도청장치의 번호는 1부터 시작한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
4
10
100 100
90 90 20000
110 90 50
90 110 1000
110 110 50
4
100
100 100
90 90 20000
110 90 50
90 110 1000
110 110 50
2
0
0 10
0 0 1000
0 8 1
','1
NOISE
1
','MATH'),
                                                                                                                (1449,'BAEKJOON','https://www.acmicpc.net/problem/9320',9320,'금고 열기','1초','128 MB',13,'<p>비밀 요원 상근이는 시리아의 화학 무기에 대한 정보를 보관하고 있는 금고를 열려고 한다. 금고를 열려면 금고에 암호를 입력해야 한다. 암호는 숫자 네 개로 이루어져 있다.</p>

<p>상근이는 시도해야 하는 암호의 목록을 가지고 있다. 목록에는 매우 많은 암호가 적혀있기 때문에, 암호가 될 수 없는 것을 미리 지우려고 한다.</p>

<p>올바른 암호는 24 조건을 만족한다. 암호를 이루는 수 네 개 사이에 덧셈, 뺄셈, 곱셈, 나눗셈, 괄호를 적절히 삽입해서 24를 만들 수 있을 때, 그 암호를 24 조건을 만족한다고 한다.</p>

<p>예를 들어, (4, 7, 8, 8)은 (7-8/8)*4 = 24이기 때문에, 24 조건을 만족한다. 하지만, (1, 1, 2, 4)나 (1, 1, 1, 1)과 같은 암호는 24 조건을 만족하지 않는다. 따라서, 이러한 암호는 시도해볼 필요가 없다.</p>

<p>가능한 암호가 모두 주어졌을 때, 24 조건을 만족하는지 안 하는지를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수가 주어진다. 테스트 케이스의 개수는 100개를 넘지 않는다. 각 테스트 케이스는 한 줄로 이루어져 있고, 가능한 암호를 나타내는 네 정수 a, b, c, d (1 ≤ a, b, c, d ≤ 9)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스 마다, 입력으로 주어진 암호가 24 조건을 만족하면 "YES"를, 만족하지 않으면 "NO"를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
4 7 8 8
1 1 2 4
1 1 1 1
1 3 4 6
','YES
NO
NO
YES
','MATH'),
                                                                                                                (1450,'BAEKJOON','https://www.acmicpc.net/problem/9325',9325,'얼마?','1초','128 MB',3,'<p>해빈이는 학교를 다니면서 틈틈히 번 돈으로 자동차를 사려고 한다. 자동차에 여러 가지 옵션을 포함시킬 수 있는데 해빈이는 덧셈과 곱셈을 하지 못하기 때문에 친구 태완이에게 도움을 청했다. 하지만&nbsp;태완이도 덧셈과 곱셈을 못한다.&nbsp;불쌍한 이&nbsp;두 친구를 위해 모든 옵션이 주어진 자동차를 구매하는데 필요한 액수를 계산해 주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수가 주어진다.</p>

<p>각 테스트 케이스의 첫 줄엔 자동차의 가격 s가&nbsp;주어진다.&nbsp;(1 ≤ s ≤ 100 000)</p>

<p>둘째 줄엔 해빈이가 구매하려고 하는&nbsp;서로 다른 옵션의 개수 n이&nbsp;주어진다.&nbsp;(0 ≤ n ≤ 1 000)</p>

<p>뒤이어 n개의 줄이 입력으로 들어온다. 각 줄은&nbsp;q 와 p로 이루어져 있는데&nbsp;q는 해빈이가 사려고 하는 특정 옵션의 개수이고 p는 해당 옵션의 가격이다. (1 ≤ q ≤ 100, 1 ≤ p&nbsp;≤ 10 000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스 마다, 해빈이가 최종적으로 구매하려는 자동차의 가격을 한줄씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
10000
2
1 2000
3 400
50000
0
','13200
50000
','MATH'),
                                                                                                                (1455,'BAEKJOON','https://www.acmicpc.net/problem/9333',9333,'돈 갚기','2초','128 MB',10,'<p>상근이는 선영이에게 B달러를 빌렸다.</p>

<p>이제 돈을 갚을 시간이다. 매월 초에 상근이가 내야하는 금액의 R 퍼센트가 이자로 붙는다. 상근이는 매월 말에 과외비 M달러를 받고, 이 금액 만큼 선영이에게 갚을 수 있다.</p>

<p>상근이는 선영이에게 더 이상 돈을 빌리지 않고, 상근이는 과외 이외의 일을 하지 않으며, 과외비는 인상되지 않는다.</p>

<p>이러한 경우에 상근이가 돈을 다 갚는데 몇 달이 걸리는지 구하는 프로그램을 작성하시오.</p>

<p>이자는 가까운 센트로 반올림한다. 100센트는 1달러이고, 0.5센트보다 크거나 같은 경우에 1센트로 올림, 나머지 경우에 버림한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 첫째 줄에는 테스트 케이스의 수가 주어지며, 1000을 넘지 않는다.</p>

<p>각 테스트 케이스는 한 줄로 이루어져 있고, R, B, M이 주어진다. 세 숫자는 모두 실수로 소수점 둘째 자리까지 주어지며, R ≤ 50.00, B, M ≤ 50000.00을 만족한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스 마다, 돈을 다 갚는데 몇 달이 걸리는지를 출력한다. 만약, 1200달이 넘어도 돈을 갚을 수 없다면, impossible을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','11
2.00 100.00 105.00
2.00 100.00 102.00
2.00 100.00 100.00
2.00 100.00 4.00
2.00 100.00 3.00
2.00 100.00 1.00
2.00 100.00 2.00
9.56 5462.50 522.22
12.50 29876.44 33610.99
5.50 1.00 1.05
14.78 40181.09 46119.86
','1
1
2
36
56
impossible
impossible
impossible
2
2
1
','MATH'),
                                                                                                                (1451,'BAEKJOON','https://www.acmicpc.net/problem/9334',9334,'IQ 테스트','2초','128 MB',17,'<p>IQ 테스트 문제에는 다음과 같은 유형이 주로 나타난다.</p>

<blockquote>정수 수열의 처음 몇 개의 수가 주어졌을 때, 다음 수는 무엇일까?</blockquote>

<p>예를 들어, 수열 (1, 2, 3, 5, 8, 13, 21)이 주어졌을 때, 이 수열은 피보나치 수열이고 다음 수는 34라는 것을 쉽게 알 수 있다.</p>

<p>다음 수는 정수이지만, 문제의 수열을 만족하는 매우 많은 다항식이 존재할 수 있기 때문에, 정답이 매우 여러 개 있을 수 있다. 이 문제에서는 다음과 같은 형태의 식을 만족하는 수열만 올바르다고 한다.</p>

<p>f(n) = a<sub>1</sub>f(n ? 1) + . . . a<sub>d</sub>f(n ? d),</p>

<p>1 ≤ d ≤ 3 이고, a<sub>1</sub>, ..., a<sub>d</sub>는 정수이다. 수열을 만족하는 식이 여러 개 있는 경우에는 d가 작은 것이 정답이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 첫째 줄에는 테스트 케이스의 수가 주어지며, 500을 넘지 않는다.</p>

<p>각 테스트 케이스는 한 줄로 이루어져 있다. 첫 번째 숫자는 수열의 길이 n (8 ≤ n ≤ 12) 이다. 다음 n개 수는 수열의 들어있는 정수이며, 절댓값이 1000을 넘지 않는다. 항상 적어도 하나의 식을 만족하는 수열만 주어지며, 처음 d개 숫자는 0이 아니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스 마다 다음 수를 출력한다. 다음 수의 절댓값은 100,000을 넘지 않는다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
8 1 1 2 3 5 8 13 21
8 1 1 1 1 1 1 1 1
8 1 -2 4 -8 16 -32 64 -128
','34
1
256
','MATH'),
                                                                                                                (1453,'BAEKJOON','https://www.acmicpc.net/problem/9343',9343,'랜덤 걷기','2초','64 MB',15,'<p>선영이는 매우 긴 직선의 원점에 서 있다. 선영이는 왼쪽이나 오른쪽으로 한 번에 한 칸씩 이동할 수 있다.</p>

<p>2N번 움직여서 시작한 위치로 돌아오는 랜덤 걷기 문제의 경로의 수는 \(\begin{pmatrix} &nbsp;2N &nbsp;\\ &nbsp;N &nbsp;\end{pmatrix}\) 이다. 시작한 점으로 다시 이동해야 하기 때문에, 왼쪽으로 이동한 횟수와 오른쪽으로 이동한 횟수가 같아야 한다. 따라서, N번 오른쪽으로, N번 왼쪽으로 움직이면 되기 때문이다.</p>

<p>선영이는 위의 문제에서 음수 좌표로 이동할 수 있다. 음수 좌표로 이동할 수 없는 조건을 추가했을 때, 경로의 수를 구하는 프로그램을 작성하시오. 예를 들어, N = 1인 경우에 선영이는 0 → 1 → 0으로 이동할 수 있다. 하지만, 0 → -1 → 0 으로는 이동할 수 없다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T ≤ 1000 가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있으며, N (1 ≤ N ≤ 1,000,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스 마다 음수 좌표를 방문하지 않고 시작점으로 도아오는 랜덤 걷기의 경로의 수를 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1
3
6
','1
5
132
','MATH'),
                                                                                                                (1458,'BAEKJOON','https://www.acmicpc.net/problem/9359',9359,'서로소','1초','128 MB',15,'<p>자연수 N이 주어졌을 때, A보다 크거나 같고, B보다 작거나 같은 수 중에서 N과 서로소인 것의 개수를 구하는 프로그램을 작성하시오.</p>

<p>두 정수를 나눌 수 있는 양의 정수가 1밖에 없을 때, 두 정수를 서로소라고 한다. 즉, 두 수의 최대공약수가 1이면 서로소이다. 1은 모든 정수와 서로소이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T (0 < T ≤ 100)가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, A, B, N이 주어진다. (1 ≤ A ≤ B ≤ 10<sup>15</sup>, 1 ≤ N ≤ 10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 A보다 크거나 같고, B보다 작거나 같은 자연수 중에서 N과 서로소인 것의 개수를 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>[1,10]에 속하는 수 중에서 2와 서로소인 것은 {1, 3, 5, 7, 9}이다.</p>

				</div>
				</div>','2
1 10 2
3 15 5
','Case #1: 5
Case #2: 10
','MATH'),
                                                                                                                (1459,'BAEKJOON','https://www.acmicpc.net/problem/9363',9363,'큰 나눗셈','5초','128 MB',13,'<p>이론물리학자들은&nbsp;삶, 우주, 그리고 모든 것에 대한 질문의 궁극적인 해답이 42라고 생각하지 않았다.&nbsp;(은하수를 여행하는 히치하이커를 위한 안내서 中 한 내용)&nbsp;대신 양의 정수 A와 B를 나눈 결과에 그 답이 있을것이라 생각했다!</p>

<p>A와 B를 나누는&nbsp;것은 보기&nbsp;보다 쉽지 않다. 특히 그 수가 커지면 빠르게 구하기는&nbsp;더욱 어려워진다. 구식 컴퓨터를 써서&nbsp;이것을 간단히&nbsp;구현한다면 엄청엄청 오래걸릴 것이다.</p>

<p>이론물리학자들을 위해 영리한 프로그래머인&nbsp;당신이 도와주도록 하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트케이스 T가 주어진다.&nbsp;(1 <= T <= 200)</p>

<p>각&nbsp;테스트케이스마다 첫 줄에 N과 M을 입력받는다. N과 M은 각각 수열 A와 B의 길이이다.&nbsp;(1 <= N, M<= 110,000)</p>

<p>그리고 다음 두 줄 중 첫째 줄에 A를 이루는 정수들이 공백으로 구분되어 입력되고(0 < A0, A1 … An <= 1,000,000), 둘째&nbsp;줄에 B를 이루는 정수들이 입력된다.(0 < B0, B1 … Bm <= 1,000,000)&nbsp;</p>

<p>A = A0*A1*...*An, B = B0*B1*...*Bn 이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트케이스마다 한줄에 수열 A를 수열 B로 나눈 결과를 기약분수의 형태 "X / Y"&nbsp;로 예제와 같이&nbsp;출력한다. (숫자와 구분자 사이에 공백이 있다)&nbsp;X와 Y는 32비트 정수 범위 내이다.</p>

<p>기약분수란 분자와 분모를 최대공약수로 나누어 더이상 약분되지 않는 분수를 말한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
3 1
2 4 5
12
2 4
1 15
5 1 7 2
','Case #1: 10 / 3
Case #2: 3 / 14
','MATH'),
                                                                                                                (1461,'BAEKJOON','https://www.acmicpc.net/problem/9366',9366,'삼각형 분류','1초','128 MB',3,'<p>꿍은 오늘&nbsp;학교에서 삼각형에 대해 배웠다.&nbsp;삼각형은 변의 길이에 따라 다음과 같이 분류될 수 있다.</p>

<ul>
	<li>정삼각형(equilateral triangle)은 모든 변의 길이가 같다. 각 역시 60도로 모두 같다.</li>
	<li>이등변삼각형(isosceles triangle)은 두 개의 변의 길이가 같다. 각 역시 두 개의 각의 크기가 같다.</li>
	<li>부등변삼각형(scalene triangle)은 모든 변의 길이가 같지 않다. 각 역시 모두 다르다. 몇몇 부등변삼각형의 경우 직각삼각형이다.</li>
</ul>

<p>수학선생님이&nbsp;삼각형의 세 변의 길이를 가지고 삼각형을 분류하라는 숙제를 내줬는데 꿍은 정말 놀고싶다. 꿍이 놀수있도록 여러분이 도와주어라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에는 테스트케이스의 개수&nbsp;T(1 <= T <= 100)가 주어진다. 다음 T줄에는 각 줄에&nbsp;삼각형의 세 변을 나타내는&nbsp;3개의 정수 A,B,C(1 <= A,B,C <= 1,000,000)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 삼각형이&nbsp;“equilateral”, “isosceles”, “scalene” 타입 중 어느 타입에 속하는지 출력한다. 만약 주어진 세 변의 길이로 삼각형이 만들어지지 않을경우,&nbsp;“invalid!”를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
3 3 4
6 4 2
','Case #1: isosceles
Case #2: invalid!
','MATH'),
                                                                                                                (1462,'BAEKJOON','https://www.acmicpc.net/problem/9371',9371,'인코딩 좌표','5초','128 MB',17,'<p>상근이는 테러리스트의 전화를 도청하던 중에 큰 공격이 예고되다는 사실을 알게되었다. 테러리스트는 인코딩된 좌표를 서로에게 보내고 있다. 상근이는 이 좌표 중 한 군데에서 공격이 일어날 것이라고 예상하고 있다. 상근이는 좌표를 가로채는데 성공했다.</p>

<p>모든 좌표는 x와 y 좌표로 나누어져 있으며, 두 좌표는 모두 소수 P보다 작은 음이 아닌 정수이다. x좌표와 y좌표는 각각 인코딩되며, 인코딩 되는 과정은 동일하다.&nbsp;</p>

<p>좌표 하나를 인코딩하려면 A, B, C, K, N이 필요하고, 다음과 같은 과정이 필요하다.</p>

<p>인코딩 과정은 세 함수로 나타낼 수 있고, 다음과 같다.</p>

<ul>
	<li>F(n+1) = G(n) + H(n)</li>
	<li>G(n+1) = K*F(n) + H(n-1)</li>
	<li>H(n+1) = F(n) + K*G(n)</li>
</ul>

<p>A, B, C는 함수의 초기값이다.</p>

<ul>
	<li>F(1) = A</li>
	<li>G(1) = B</li>
	<li>H(1) = C</li>
</ul>

<p>좌표는 F(N) mod P가 된다.</p>

<p>사실 위의 과정에는 매우 중요한 정보가 하나 빠져있다. G(2)를 계산하려면, H(0)이 필요하다. 하지만, H(0)을 알아낼 수 있는 방법은 없다. H(0)에 대한 유일한 정보는 x와 y를 계산할 때, 동일한 H(0)을 사용한다는 점이다.</p>

<p>상근이는 우연히 x좌표를 디코딩하지 않고 얻게 되었다. 이제, x를 이용해 H(0)을 구한 다음, y를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수가 주어진다. 테스트 케이스의 개수는 100개보다 작거나 같다. 각 테스트 케이스의 첫째 줄에는 소수 P (2 ≤ P ≤ 19997)가 주어진다. 둘째 줄에는 x좌표를 인코딩하는데 사용하는&nbsp;A<sub>x</sub>, B<sub>x</sub>, C<sub>x</sub>, K<sub>x</sub>,&nbsp;N<sub>x</sub>가&nbsp;주어진다.&nbsp;(0 ≤ A<sub>x</sub>, B<sub>x</sub>, C<sub>x</sub>, K<sub>x</sub>&nbsp;< P,&nbsp;1 ≤ N<sub>x</sub>&nbsp;≤ 10<sup>9</sup>) 셋째 줄에는 y좌표를 인코딩하는데 사용한&nbsp;A<sub>y</sub>, B<sub>y</sub>, C<sub>y</sub>, K<sub>y</sub>, N<sub>y</sub>가 주어진다. (0 ≤ A<sub>y</sub>, B<sub>y</sub>, C<sub>y</sub>, K<sub>y</sub>&nbsp;< P, 1 ≤ N<sub>y</sub>&nbsp;≤ 10<sup>9</sup>) 넷째 줄에는 x좌표 (0 ≤ x < P)가 주어진다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 y좌표를 출력한다. 만약, 가능한 y좌표가 여러 개인 경우에는&nbsp;“UNKNOWN”를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
11
2 3 5 7 4
4 6 8 9 7
5
7
1 6 2 5 1
3 4 2 5 3
1
','7
UNKNOWN
','MATH'),
                                                                                                                (1466,'BAEKJOON','https://www.acmicpc.net/problem/9375',9375,'패션왕 신해빈','1초','128 MB',8,'<p>해빈이는 패션에 매우 민감해서 한번 입었던 옷들의 조합을 절대 다시 입지 않는다. 예를 들어 오늘 해빈이가 안경, 코트, 상의, 신발을 입었다면, 다음날은 바지를 추가로 입거나 안경대신 렌즈를 착용하거나 해야한다. 해빈이가 가진 의상들이 주어졌을때 과연 해빈이는 알몸이 아닌 상태로 며칠동안 밖에 돌아다닐 수 있을까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스가 주어진다. 테스트 케이스는 최대 100이다.</p>

<ul>
	<li>각 테스트 케이스의 첫째 줄에는 해빈이가 가진 의상의 수 n(0 ≤ n ≤ 30)이&nbsp;주어진다.</li>
	<li>다음 n개에는 해빈이가 가진&nbsp;의상의 이름과 의상의 종류가 공백으로 구분되어 주어진다. 같은 종류의 의상은 하나만 입을 수 있다.</li>
</ul>

<p>모든 문자열은 1이상 20이하의 알파벳 소문자로 이루어져있으며 같은 이름을 가진 의상은 존재하지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 해빈이가 알몸이 아닌 상태로 의상을 입을 수 있는 경우를 출력하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 테스트 케이스는 headgear에 해당하는 의상이 hat, turban이며 eyewear에 해당하는 의상이 sunglasses이므로 &nbsp; (hat), (turban), (sunglasses), (hat,sunglasses), (turban,sunglasses)로 총 5가지 이다.</p>

				</div>
				</div>','2
3
hat headgear
sunglasses eyewear
turban headgear
3
mask face
sunglasses face
makeup face
','5
3
','MATH'),
                                                                                                                (1463,'BAEKJOON','https://www.acmicpc.net/problem/9417',9417,'최대 GCD','1초','128 MB',7,'<p>정수 M개가 주어졌을 때, 모든 두 수의 쌍 중에서 가장 큰 최대공약수 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 N (1 < N < 100)이 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있으며, 양의 정수 M (1 < M < 100)개가 주어진다. 모든 수는 -2<sup>31</sup>보다 크거나 같고, 2<sup>31</sup> -1보다 작거나 같다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다, 입력으로 주어진 수의 모든 두 수의 쌍의 최대공약수 중 가장 큰 값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
10 20 30 40
7 5 12
125 15 25
','20
1
25
','MATH'),
                                                                                                                (1465,'BAEKJOON','https://www.acmicpc.net/problem/9421',9421,'소수상근수','1초','256 MB',10,'<p>양의 정수 n의 각 자리수의 제곱의 합을 계산한다. 그렇게 해서 나온 합도 각 자리수의 제곱의 합을 계산한다. 이렇게 반복해서 1이 나온다면, n을 상근수라고 한다.</p>

<p>700은 상근수이다.</p>

<ul>
	<li>7<sup>2</sup> + 0<sup>2</sup> + 0<sup>2</sup> = 49</li>
	<li>4<sup>2</sup> + 9<sup>2</sup> = 97</li>
	<li>9<sup>2</sup> + 7<sup>2</sup> = 130</li>
	<li>1<sup>2</sup> + 3<sup>2</sup> + 0<sup>2</sup> = 10</li>
	<li>1<sup>2</sup> + 0<sup>2</sup> = 1</li>
</ul>

<p>2는 상근수가 아니다.</p>

<ul>
	<li>2<sup>2</sup> = 4</li>
	<li>4<sup>2</sup> = 16</li>
	<li>1<sup>2</sup> + 6<sup>2</sup> = 37</li>
	<li>3<sup>2</sup> + 7<sup>2</sup> = 58</li>
	<li>5<sup>2</sup> + 8<sup>2</sup> = 89</li>
	<li>8<sup>2</sup> + 9<sup>2</sup> = 145</li>
	<li>1<sup>2</sup> + 4<sup>2</sup> + 5<sup>2</sup> = 42</li>
	<li>4<sup>2</sup> + 2<sup>2</sup> = 20</li>
	<li>2<sup>2</sup> + 0<sup>2</sup> = 4</li>
	<li>4<sup>2</sup> = 16</li>
	<li>... 끝나지 않는다</li>
</ul>

<p>소수는 1과 자기자신을 제외하고 약수가 없는 수이다. 2, 3, 5, 7, 11, 13, 17, 19, ... 는 소수이다.</p>

<p>소수상근수는 소수이면서 상근수인 숫자이다. 7, 13, 19, ... 는 소수 상근수이다.</p>

<p>n이 주어졌을 때, n보다 작거나 같은 모든 소수상근수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n (10 ≤ n ≤ 1000000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>n보다 작거나 같은 소수상근수를 한 줄에 하나씩 오름차순으로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','20
','7
13
19
','MATH'),
                                                                                                                (1471,'BAEKJOON','https://www.acmicpc.net/problem/9437',9437,'사라진 페이지 찾기','1초','128 MB',4,'<p>꿍은 수능에 응시하고 있었는데 어느덧 4교시 탐구영역 시간이 되었다. 그런데 탐구영역은 다른 영역과 다르게 자기가 응시할 과목만 고르고 응시하지 않는 과목은 바닥에 버리도록 되어있다. 꿍이 응시하지 않는 과목을 골라 뽑아내던 중 문득 궁금한게 생겼다. 만약 탐구영역 시험지가 아래와 같이&nbsp;전체 12쪽으로 되어 있었다고 하자.&nbsp;</p>

<p><img src=https://www.acmicpc.net/upload/images2/newspaper.png"></p>

<p>그렇다면 1쪽과 12쪽은 한 면에, 2쪽과 11쪽이 한면에, ... 6쪽과 7쪽이 한면에 인쇄되어 있고 1,2,11,12쪽이 한 장, 3,4,9,10쪽이 한 장, 5,6,7,8이 한 장 이다. 그래서 만약 꿍이 2쪽이 인쇄된 종이 한 장을 바닥에 버렸을 때, 그 종이에 인쇄된 나머지 쪽, 즉 사라진 페이지들은 1,11,12쪽이다.</p>

<p>꿍이 탐구영역을 응시할 동안 여러분들은 한 쪽의 페이지만으로 사라진 나머지의&nbsp;페이지들을 찾아주어라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>각 테스트 케이스에 대해 두가지 정수 N,P가 주어진다. 4의 배수인&nbsp;N(4 ≤ <em>N</em> ≤ 1000)은 탐구영역의 전체 페이지 수이며, P(1 ≤ <em>P</em> ≤ <em>N)</em>는 선택된 한 페이지다. 입력의 마지막은 하나의 0만 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 사라진 페이지들을 오름차순으로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','12 2
12 9
8 3
0
','1 11 12
3 4 10
4 5 6
','MATH'),
                                                                                                                (1475,'BAEKJOON','https://www.acmicpc.net/problem/9453',9453,'학생의 수','2초','256 MB',16,'<p>선영이네 반에는 남학생과 여학생이 있다. 학생의 일부는 친구이고, 일부는 친구가 아니다. 친구 관계는 항상 양방향이라서, A와 B가 친구라면, B와 A도 친구이다.</p>

<p>모든 여학생의 여자인 친구는 a명, 남자인 친구는 b명이다.</p>

<p>모든 남학생의 여자인 친구는 c명, 남자인 친구는 d명이다.</p>

<p>선영이네 반의 학생의 수는 몇 명인지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 문제에서 설명한 a, b, c, d가 주어진다. (1 ≤ a, b, c, d ≤ 50)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스 마다, 여학생의 수 m과 남학생의 수 n을 출력한다. 가능한 정답이 여러 개인 경우에는 m과 n이 작은 것을 출력한다.&nbsp;다음 줄 부터 한 줄에 하나씩 누가 누구와 친구인지를 출력한다. 같은 친구 쌍을 여러 번 출력하면 안 된다.</p>

<p>여자를 1번부터 m번, 남자를 m+1번 m+n번으로 번호를 매긴다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p><img alt="" src=https://www.acmicpc.net/upload/images/ch.png" style="height:161px; width:332px"></p>

				</div>
				</div>','1 2 1 2
','2 4
1 2
1 3
1 5
2 4
2 6
3 4
3 5
4 6
5 6
','MATH'),
                                                                                                                (1479,'BAEKJOON','https://www.acmicpc.net/problem/9457',9457,'기하학문양','1초','128 MB',14,'<p>인류는 선사시대부터 물체와 건물을 장식해왔다. 이러한 장식에서 가장 중요한 요소는 기하학문양이다. 우리는 일상생활 속에서 기하학문양을 손쉽게 찾아볼 수 있다.</p>

<p>유명한 계산 기하학 전문가 수환이는 기하학문양이 그리드와 다양한 서브 그리드 위에서 매우 정교하게 만들어졌다는 사실을 알게 되었다.&nbsp;수환이는 최근에 기하학문양을 자동으로 만들어주는 연구 프로젝트를 시작했다.</p>

<p>수환이가 관심을 갖는 그리드는 직사각형 그리드와 원형 그리드이다. m × n 직사각형 그리드는 한 평면 위에 있는 정점과 간선이 직사각형을 이루는 그래프이다. 그래프의&nbsp;각 행에 있는 정점의 수는 n개, 각 열에 있는 정점의 수는 m개이다. 그래프의 정점은 {v<sub>j</sub><sup>i</sup>&nbsp;: 0 ≤ i ≤ m-1, 0 ≤ j ≤ n-1} 으로, 간선은 {(v<sub>j</sub><sup>i</sup>, v<sub>q</sub><sup>p</sup>) : |i - p| + |j - q| = 1} 으로 나타낼 수 있다. m × n 원형 그리드는 m × n 직사각형 그리드에 간선을 추가해 동그랗게 만든 그래프이다. 즉, 모든 0 ≤ i ≤ m-1에 대해서, (v<sub>n-1</sub><sup>i</sup>, v<sub>0</sub><sup>i</sup>)를 추가한 그래프이다. 2 × 6 직사각형 그리드와 원형 그리드는 아래 그림 1과 2에 나와있다.</p>

<p>많은 기하학문양은 그리드 상에서 스패닝 트리를 이루고 있다. 스패닝 트리는 사이클 없이 모두 연결된 그래프이며, 그래프의 모든 정점과 일부 간선으로 이루어져 있다. 수환이는 2 × n 그리드에서 만들 수 있는 서로 다른 스패닝 트리의 개수를 세보려고 한다. 그래프의 각 정점은&nbsp;다른 정점과 모두 구분된다. 그림 2에 나와있는 두 스패닝 트리는 다른 경우로 세야 한다.</p>

<p>n이 주어졌을 때, 2 × n 직사각형 그리드와 2 × n 원형 그리드에서 만들 수 있는 스패닝 트리의 개수를 구하는 프로그램을 작성하시오.</p>

<p style="text-align:center"><img alt="" src=https://www.acmicpc.net/upload/images/rsp.png" style="height: 87.5px; width: 386.667px;"></p>

<p style="text-align:center"><strong>그림 1</strong>. 2&nbsp;× 6 직사각형 그리드와 스패닝 트리 한 개</p>

<p style="text-align:center"><img alt="" src=https://www.acmicpc.net/upload/images/csp.png" style="height: 115.833px; width: 355px;"></p>

<p style="text-align:center"><strong>그림 2</strong>. 2&nbsp;× 6 원형 그리드와 서로 다른 스패닝 트리 두 개</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, 정수 n이 하나 주어진다. (3 ≤ n ≤ 50,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 R<sub>n</sub>을 10,007로 나눈 나머지와 C<sub>n</sub>을 10,007로 나눈 나머지를 출력한다. R<sub>n</sub>은 2 × n 직사각형 그리드에서 만들 수 있는 스패닝 트리의 개수, C<sub>n</sub>은 2 × n 원형 그리드에서 만들 수 있는 스패닝 트리의 개수이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
3
4
10
','15 75
56 384
1211 9033
','MATH'),
                                                                                                                (1472,'BAEKJOON','https://www.acmicpc.net/problem/9461',9461,'파도반 수열','1초','128 MB',8,'<p><img alt="" src=https://www.acmicpc.net/upload/images/pandovan.png" style="float:right; height:182px; width:289px">오른쪽 그림과 같이 삼각형이 나선 모양으로 놓여져 있다. 첫 삼각형은 정삼각형으로 변의 길이는 1이다. 그 다음에는 다음과 같은 과정으로 정삼각형을 계속 추가한다. 나선에서 가장 긴 변의 길이를 k라 했을 때, 그 변에 길이가 k인 정삼각형을 추가한다.</p>

<p>파도반 수열 P(N)은 나선에 있는 정삼각형의 변의 길이이다. P(1)부터 P(10)까지 첫 10개 숫자는 1, 1, 1, 2, 2, 3, 4, 5, 7, 9이다.</p>

<p>N이 주어졌을 때, P(N)을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, N이 주어진다. (1 ≤ N ≤ 100)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 P(N)을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
6
12
','3
16
','MATH'),
                                                                                                                (1473,'BAEKJOON','https://www.acmicpc.net/problem/9464',9464,'직사각형 집합','2초','128 MB',14,'<p>피타고리안 트리플은 a<sup>2</sup> + b<sup>2</sup> = c<sup>2</sup>을 만족하는 양의 정수 세 개 a, b, c로 이루어져 있고, (a, b, c)로 나타낸다. 피타고리안 트리플 (a, b, c)는 두 정수 x와 y (x > y > 0)을 이용해서 만들 수 있다. a = 2xy, b = x<sup>2</sup>-y<sup>2</sup>, c = x<sup>2</sup>+y<sup>2</sup>.</p>

<p>? = {R<sub>1</sub>, R<sub>2</sub>, ..., R<sub>i</sub>, ...} 은 직사각형으로 이루어진 집합이다. R<sub>i</sub>의 너비는 w<sub>i</sub>, 높이는 h<sub>i</sub>이고, 대각선의 길이는 d<sub>i</sub>이다. ?에 포함되는 모든 직사각형이 다음과 같은 조건을 만족하는 경우 "피타고리안 기초 직사각형 집합" 이라고 한다.</p>

<ul>
	<li>(w<sub>i</sub>, h<sub>i</sub>, d<sub>i</sub>)는 피타고리안 트리플이어야 한다.</li>
	<li>w<sub>i</sub> < h<sub>i</sub></li>
	<li>h<sub>i</sub>/w<sub>i</sub> ≠ h<sub>j</sub>/w<sub>j</sub> if i ≠ j</li>
</ul>

<p>피타고라스 고등학교에 재학중인 창영이는 길이가 L인 철사를 가지고 놀려고 한다. 창영이는 철사를 잘라서 조각으로 만들고, 각 조각을&nbsp;구부려서 직사각형을 만들려고 한다. 이때, 창영이가 만든 직사각형의 집합은 "피타고리안 기초 직사각형 집합"이어야 한다. R<sub>i</sub>를 만드는데 필요한 철사의 길이는 2(w<sub>i</sub> + h<sub>i</sub>)이다.</p>

<p>R<sub>i</sub>를 너비와 높이의 쌍 (w<sub>i</sub>, h<sub>i</sub>)로 나타낸다고 하자. L이 94인 경우에 창영이는 직사각형 3개를 만들 수 있다. ? = {(3, 4), (5, 12), (8, 15)}. 만약, 직사각형을 ? = {(3, 4), (7, 24)} 와 같이 만든다면, 창영이는 직사각형 2개를 만들 수 있다.</p>

<p>L이 주어졌을 때, 창영이가 만들 수 있는 직사각형 개수의 최댓값을 구하는 프로그램을 작성하시오. 직사각형은 "피타고리안 기초 직사각형 집합" 이어야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, 철사의 길이 L이 주어진다. (14 ≤ L ≤ 1,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 길이가 L인 전선으로 창영이가 만들 수 있는 직사각형 개수의 최댓값을 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
14
1000
','1
10
','MATH'),
                                                                                                                (1476,'BAEKJOON','https://www.acmicpc.net/problem/9469',9469,'폰 노이만','1초','128 MB',3,'<p>250마일 길이의 철로 양 끝에 두 기차 A와 B가 있다. A는 시속 10마일, B는 시속 15마일로 서로를 향해 출발했다. 두 기차의 출발과 동시에 기차 A 앞에 붙어있던 파리 한 마리가 기차가 충돌할 때 까지 시속 20마일로 두 기차를 사이를 왔다갔다 한다. 이때, 파리가 이동한 거리는 몇 마일일까?</p>

<p>폰 노이만은 문제를 듣자마자 머리속으로 무한 급수를 이용해 계산한 다음 1초도 지나지 않은 시간에 200 마일이라고 대답했다.&nbsp;</p>

<p>철로의 길이 D,&nbsp;두 기차 A, B의 속도와 파리의 속도 F가 주어졌을 때, 위 문제의 답을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 P (1 ≤ P ≤ 1000)가 주어진다.</p>

<p>각 테스트 케이스는 다섯 숫자 N, D, A, B, F이루어져 있다. N은 테스트 케이스의 번호이고, D는 철로의 길이 (10 ≤ D ≤ 1000), A와 B는 두 기차의 속도 (1 ≤ A, B ≤ 40), F는 파리의 속도 (A ≤ B < F ≤ 50)이다. D, A, B, F는 실수이다. 실수는 최대 소수점 둘째자리까지 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 테스트 케이스 번호를 출력하고, 두 기차가 충돌할 때까지 파리가 움직인 거리를 출력한다. 절대&nbsp;오차는 10<sup>-2</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1 250 10 15 20
2 10.7 3.5 4.7 5.5
3 523.7 15.3 20.7 33.3
4 1000 30 30 50
5 500 15 15 25
','1 200.000000
2 7.176829
3 484.422500
4 833.333333
5 416.666667
','MATH'),
                                                                                                                (1477,'BAEKJOON','https://www.acmicpc.net/problem/9471',9471,'피사노 주기','1초','128 MB',7,'<p>1960년, IBM의 직원 Donald Wall은 피보나치 수열을 m으로 나눈 나머지가 주기를 이룬다는 것을 증명했다.</p>

<p>예를 들어, 피보나치 수열의 처음 10개를 11로 나눈 예는 다음과 같다.</p>

<table class="table table-bordered" style="width:60%">
	<thead>
		<tr>
			<th>n</th>
			<th>1</th>
			<th>2</th>
			<th>3</th>
			<th>4</th>
			<th>5</th>
			<th>6</th>
			<th>7</th>
			<th>8</th>
			<th>9</th>
			<th>10</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<th>F(n)</th>
			<td>1</td>
			<td>1</td>
			<td>2</td>
			<td>3</td>
			<td>5</td>
			<td>8</td>
			<td>13</td>
			<td>21</td>
			<td>34</td>
			<td>55</td>
		</tr>
		<tr>
			<th>F(n) mod 11</th>
			<td>1</td>
			<td>1</td>
			<td>2</td>
			<td>3</td>
			<td>5</td>
			<td>8</td>
			<td>2</td>
			<td>10</td>
			<td>1</td>
			<td>0</td>
		</tr>
	</tbody>
</table>

<p>나머지를 이용해서 만든 수열은 주기가 나타날 수 있다. k(m)을 반복하는 부분 수열의 길이라고 했을 때, k(11) = 10임을 알 수 있다.</p>

<p>Wall은 아래와 같은 여러 가지 성질도 증명했다.</p>

<ul>
	<li>m > 2인 경우에 k(m)은 짝수이다.</li>
	<li>임의의 짝수 정수 n > 2에 대해서, k(m) = n인 m이 항상 존재한다.</li>
	<li>k(m) ≤ m<sup>2</sup> - 1</li>
	<li>k(2<sup>n</sup>) = 3×2<sup>(n-1)</sup></li>
	<li>k(5<sup>n</sup>) = 4×5<sup>n</sup></li>
	<li>k(2×5<sup>n</sup>) = 6n</li>
	<li>n > 2라면, k(10<sup>n</sup>) = 15×10<sup>(n-1)</sup></li>
</ul>

<p>m이 주어졌을 때, k(m)을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 P가 주어진다. 각 테스트 케이스는 N과 M으로 이루어져 있다. N은 테스트 케이스의 번호이고, M은 문제에서 설명한 m이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 테스트 케이스 번호를 출력하고 k(M)을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1 4
2 5
3 11
4 123456
5 987654
','1 6
2 20
3 10
4 15456
5 332808
','MATH'),
                                                                                                                (1478,'BAEKJOON','https://www.acmicpc.net/problem/9472',9472,'알고리즘 기말고사','1초','128 MB',14,'<p>알고리즘 기말고사는 용어와 정의를 선으로 연결하는 문제만 나온다. 왼쪽에는 용어 N개, 오른쪽에는 정의 N개가 한 줄로 나열되어 있다. 학생들은 각 용어에 해당하는 정의를 선으로 그려야 한다.</p>

<p>선영이는 자신의 뛰어난 프로그래밍 실력을 믿고 공부를 하지 않았다. 하지만, 기말고사는 프로그래밍 실력과 관계없는 문제만 나왔다. 따라서, 선영이는 문제를 모두 찍으려고 한다.</p>

<p>S(N,k)를 선영이가 문제를 모두 풀었을 때, 적어도 위에서부터 처음 k개 용어는 반드시 틀리는 경우의 수라고 하자.</p>

<p>N과 k가 주어졌을 때, S(N,k)를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있으며, 테스트 케이스 번호와&nbsp;두 정수 N과 k가 주어진다. (1 ≤ N ≤ 17, 0 ≤ k ≤ N)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스 마다 테스트 케이스 번호와 S(N,k)를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 4 1
2 7 3
3 10 5
4 17 17
','1 18
2 3216
3 2170680
4 130850092279664
','MATH'),
                                                                                                                (1483,'BAEKJOON','https://www.acmicpc.net/problem/9474',9474,'삼각 분할과 삼각형','1초','128 MB',16,'<p>다각형의 삼각분할이란 다각형을 삼각형으로 나누는 꼭짓점을 연결하는 직선의 집합이다. 직선은 반드시 다각형 내부에 있어야 하며, 꼭짓점을 제외한 다른 곳에서 다른 직선과 교차하면 안 된다.&nbsp;</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/triangula.png" style="height: 135px; width: 359.167px;"></p>

<p>위의 그림에서 굵은 선은 다각형의 변을 나타내고, 가는 선은 삼각분할을 나타낸다. 꼭짓점이 n개인 다각형을 삼각분할하면 (n-2)개의 삼각형을 만들 수 있다.</p>

<p>한 꼭짓점에서 시작해 변을 따라 이동하면서 각 꼭짓점에 있는 삼각형의 개수를 나열한 것을 삼각형 개수 수열이라고 한다. 위의 그림에 나와있는 다각형의 삼각형 개수 수열은 아래와 같다. 가장 왼쪽 위에 있는 꼭짓점에서 시작한다.</p>

<ul>
	<li>A: 1 3 1 3 1 3</li>
	<li>B: 2 2 1 4 1 2</li>
	<li>C: 1 2 3 2 1 6 1 2 3 2 1 6</li>
</ul>

<p>N개의 양의 정수로 이루어진 삼각형 개수 수열이 주어졌을 때, 이러한 수열을 만드는 다각형이 존재하는지 안하는지를 구하는 프로그램을 작성하시오. 존재하는 경우에는 삼각형을 모두 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 P (1 ≤ P ≤ 1000)가 주어진다.</p>

<p>각 테스트 케이스는 한 줄로 이루어져 있다. 첫 번째 숫자는 테스트 케이스 번호 K이며, 두 번째 숫자는 수열의 길이 N (4 ≤ N ≤ 20)이다. 다음 N개의 숫자는 삼각형 개수 수열이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어진 수열이 삼각형 개수 수열이 아닌 경우에는 테스트 케이스 번호 K와 알파벳 대문자 "N"을 출력한다.</p>

<p>올바른 경우에는 테스트 케이스 번호 K와 알파벳 대문자 "Y"를 출력한다. 다음 (N-2)개 줄에는 어떤 꼭짓점이 삼각형을 이루는지 한 줄에 하나씩 출력한다. 꼭짓점은 입력으로 주어진 순서대로 1번부터 시작하며, 사전순으로 정렬해서 출력한다. k < l < m이 한 삼각형이고, r < s < t가 다른 삼각형일 때, 아래 조건을 만족하면 첫 번째 삼각형이 두 번째보다 사전순으로 앞선다.</p>

<pre>k<r OR (k==r AND l<s) OR (k==r AND l==s AND m<t)</pre>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 6 1 3 1 3 1 3
2 6 1 3 2 2 1 3
3 12 1 2 3 2 1 6 1 2 3 2 1 6
4 20 1 2 3 2 1 6 1 2 3 2 1 6 1 3 2 2 1 3 1 2
','1 Y
1 2 6
2 3 4
2 4 6
4 5 6
2 N
3 Y
1 2 12
2 3 12
3 4 6
3 6 12
4 5 6
6 7 8
6 8 9
6 9 12
9 10 12
10 11 12
4 N
','MATH'),
                                                                                                                (1481,'BAEKJOON','https://www.acmicpc.net/problem/9475',9475,'파스칼 제곱','1초','128 MB',17,'<p>파스칼 행렬은 크기가 무한대이며 다음과 같이 정의한다. (행과 열 번호는 0부터 시작한다)</p>

<pre>Pascal[row, column] = Comb(row, column) for 0 ≤ column ≤ row</pre>

<p>위의 경우를 제외한 곳은 모두 0이다. Comb(n, k)는 조합이다.</p>

<table class="table table-bordered" style="width:55%">
	<tbody>
		<tr>
			<td style="width:5%">1</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">...</td>
		</tr>
		<tr>
			<td style="width:5%">1</td>
			<td style="width:5%">1</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">...</td>
		</tr>
		<tr>
			<td style="width:5%">1</td>
			<td style="width:5%">2</td>
			<td style="width:5%">1</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">...</td>
		</tr>
		<tr>
			<td style="width:5%">1</td>
			<td style="width:5%">3</td>
			<td style="width:5%">3</td>
			<td style="width:5%">1</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">...</td>
		</tr>
		<tr>
			<td style="width:5%">1</td>
			<td style="width:5%">4</td>
			<td style="width:5%">6</td>
			<td style="width:5%">4</td>
			<td style="width:5%">1</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">...</td>
		</tr>
		<tr>
			<td style="width:5%">1</td>
			<td style="width:5%">5</td>
			<td style="width:5%">10</td>
			<td style="width:5%">10</td>
			<td style="width:5%">5</td>
			<td style="width:5%">1</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">...</td>
		</tr>
		<tr>
			<td style="width:5%">1</td>
			<td style="width:5%">6</td>
			<td style="width:5%">15</td>
			<td style="width:5%">20</td>
			<td style="width:5%">15</td>
			<td style="width:5%">6</td>
			<td style="width:5%">1</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">...</td>
		</tr>
		<tr>
			<td style="width:5%">1</td>
			<td style="width:5%">7</td>
			<td style="width:5%">21</td>
			<td style="width:5%">35</td>
			<td style="width:5%">35</td>
			<td style="width:5%">21</td>
			<td style="width:5%">7</td>
			<td style="width:5%">1</td>
			<td style="width:5%">0</td>
			<td style="width:5%">0</td>
			<td style="width:5%">...</td>
		</tr>
		<tr>
			<td style="width:5%">1</td>
			<td style="width:5%">8</td>
			<td style="width:5%">28</td>
			<td style="width:5%">56</td>
			<td style="width:5%">70</td>
			<td style="width:5%">56</td>
			<td style="width:5%">28</td>
			<td style="width:5%">8</td>
			<td style="width:5%">1</td>
			<td style="width:5%">0</td>
			<td style="width:5%">...</td>
		</tr>
		<tr>
			<td style="width:5%">1</td>
			<td style="width:5%">9</td>
			<td style="width:5%">36</td>
			<td style="width:5%">84</td>
			<td style="width:5%">126</td>
			<td style="width:5%">126</td>
			<td style="width:5%">84</td>
			<td style="width:5%">36</td>
			<td style="width:5%">9</td>
			<td style="width:5%">1</td>
			<td style="width:5%">...</td>
		</tr>
		<tr>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
		</tr>
		<tr>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
		</tr>
		<tr>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
			<td style="width:5%">.</td>
		</tr>
	</tbody>
</table>

<p>파스칼 행렬의 제곱을 구하는 프로그램을 작성하시오.</p>

<pre>Pascal<sup>P</sup> = Pascal × Pascal × ... × Pascal</pre>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 K (1 ≤ K ≤ 1000)가 주어진다.</p>

<p>각 테스트 케이스는 네 정수로 이루어져 있다. 첫 번째 정수는 테스트 케이스 번호이다. 두 번째 정수는 P이다. (1 ≤ P ≤ 100,000) 세 번째 정수와 네 번째 정수는 R과 C이다. (0 ≤ C ≤ R ≤ 100,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 테스트 케이스 번호를 출력하고, Pascal<sup>P</sup>의 R행 C열의 값을 출력한다. 답이 64비트 정수 범위를 넘어가지 않는 입력만 주어진다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 1 8 3
2 9 21 13
3 200 100000 99998
','1 56
2 8759577256290
3 199998000000000
','MATH'),
                                                                                                                (1484,'BAEKJOON','https://www.acmicpc.net/problem/9477',9477,'아름다운 강산','20초','128 MB',18,'<p>도영이는 블록들의 스택을 가지고 노는 것을 좋아한다. 도영이는 그 블록들을 산으로 취급하고, 자신만의 지형물을 만들기를 즐긴다. 최근, 도영이는 블록을 재배열하는 데 제약을 하나 걸었다. 먼저, 도영이는 모든 스택을 일렬로 늘어세운다. 그리고, 한 번에 하나의 블록만을 옮길 수 있다. 이 일은 두 인접한 스택 중 제일 위에 있는 하나의 블록을 반대쪽 스택으로 옮기는 것을 말한다.</p>

<p>도영이는 항상 이 과정을 거쳐서 블록을 재배열한다. 이제 도영이는 지금까지 만들지 않았던 가장 <strong>아름다운 강산</strong>을 만들려고 한다. 도영이는 가능한 모든 두 산의 쌍을 골랐을 때, 두 산 사이의 거리가 소수일 경우(꼭 인접하지 않은 경우라도)에 그 강산이 아름답다는 것을 알았다. 만약 강산이 하나의 산으로 이루어져 있다면, 그것도 아름다운 강산이다. 산은 하나 이상의 블록을 가지고 있는 스택이다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images2/bm.png" style="width: 365.833px; height: 149.167px;"></p>

<p>위 그림은 블록들의 처음 상태를 나타낸다. 산을 "0" 값들이 쌓여 있는 스택 2개로 결정했다면, 이제 아름다운 강산을 만들기 위해 모든 블록을 가까운 산으로 하나씩 옮겨 가려면 최소 13번의 행동이 필요하다. 그러나 산을 아래 그림과 같이 3개로 정한다면, 6번의 행동만으로 아름다운 강산을 만들 수 있다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images2/bm2.png" style="width: 347.5px; height: 169.167px;"></p>

<p>현재 블록들의 상태가 주어질 때, 도영이가 아름다운 강산을 만드는 데 필요한 최소 횟수의 움직임을 구하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 테스트 케이스의 개수가 주어지며, 다음 줄부터 테스트 케이스가 차례대로 주어진다. 각 테스트 케이스의 첫 줄에는 스택의 개수 n(1≤n≤30,000)이 주어진다. 다음 줄에는 n개의 정수 b(0≤b≤1,000)가 주어지며, 이는 각각 스택의 블록 개수를 나타낸다. 각 정수들은 하나의 공백으로 구분되며, 줄의 맨 처음이나 맨 끝에는 공백이 없다. 스택에 블록이 0개가 있더라도 정수 b로 표기됨을 주의하라. 입력의 맨 끝에는 0 하나가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스에 대해서, 도영이가 아름다운 강산을 만드는 데 필요한 최소 움직임 횟수를 한 줄에 하나씩 출력한다. 공백이나 빈 줄을 출력하지 않는다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1 2 1 2 1
8
1 2 1 3 2 1 2 1
0
','3
6
','MATH'),
                                                                                                                (1486,'BAEKJOON','https://www.acmicpc.net/problem/9493',9493,'길면 기차, 기차는 빨라, 빠른 것은 비행기','1초','128 MB',3,'<p>기차보다 빠른 비행기를 타기 위해 더 많은 돈을 지불하는것이 과연&nbsp;그만한 가치가 있는 것일까?</p>

<p>거리 M(Km)이&nbsp;주어졌을때&nbsp;기차의 속도 A(Km/h)와 비행기의 속도 B(Km/h)로 달렸을때 발생하는 시간의 차를 계산하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>한 줄에 테스트 케이스가 하나씩 주어진다. 각 테스트 케이스는 세 개의 정수 M(1 ≤ M ≤ 10,000), A 그리고 B(1 ≤ A < B ≤ 1000)로 이루어져 있다. 정수는 공백으로 구분되어 있다.</p>

<p>마지막 테스트 케이스는 0&nbsp;세 개로 나타내며, 따로 처리하지 않고 프로그램을 종료한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다&nbsp;다음 형식으로 시간을 출력한다.</p>

<pre>H:MM:SS</pre>

<p>분(MM)과 초(SS)는 모두 2자리로 표현되며 그렇기에 필요에 따라 0을&nbsp;출력하는 경우도 존재한다. 초(Second)는 반올림하고, 시(Hour)는 최소 자리로 나타낸다. 출력에 공백은 없으며 테스트 케이스 사이에 빈 줄은 출력하지 않는다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','21 70 80
26 65 80
0 0 0
','0:02:15
0:04:30
','MATH'),
                                                                                                                (1487,'BAEKJOON','https://www.acmicpc.net/problem/9497',9497,'피라미드 수열','1초','128 MB',18,'<p>높이가 H인 피라미드 수열은 1, 2, ..., H-1, H, H-1, ..., 2, 1, 2, ... 이다. 즉, 앞의 원소 2H-2개가 무한히 반복해서 나타난다. 높이가 1인 피라미드 수열은 1이 무한히 반복된다.</p>

<p>두 자연수 N과 M이 주어졌을 때, 높이가 N인 피라미드 수열과 높이가 M인 피라미드 수열의 각 원소를 순서쌍으로 만든다. 이때, 나오는 순서쌍 종류의 개수를 구하는 프로그램을 작성하시오.</p>

<p>예를 들어, N = 3, M = 4일 때, 높이가 3인 피라미드 수열과 높이가 4인 피라미드 수열은 아래와 같이 나타낼 수 있다.</p>

<ul>
	<li>1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1</li>
	<li>1, 2, 3, 4, 3, 2, 1, 2, 3, 4, 3, 2, 1</li>
</ul>

<p>나오는 서로 다른 순서쌍은 (1,1), (2,2), (3,3), (2,4), (1,3), (3,1) 이며, 총 6개이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 자연수 N과 M이 주어진다. (1 ≤ N, M ≤ 10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>문제에서 설명한 서로 다른 순서쌍의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제의 경우에 두 피라미드 수열을 나열하면 아래와 같다.</p>

<ul>
	<li>1, 2, 3, 2, 1, 2, 3, 2, 1</li>
	<li>1, 2, 3, 4, 5, 4, 3, 2, 1</li>
</ul>

<p>이때 생기는 서로 다른 순서쌍은 (1,1), (2,2), (3,3), (2,4), (1,5)이며, 개수는 5개이다.</p>

				</div>
				</div>','3 5
','5
','MATH'),
                                                                                                                (1488,'BAEKJOON','https://www.acmicpc.net/problem/9501',9501,'꿍의 우주여행','2초','128 MB',3,'<p>꿍은 우주여행을 하고 싶어져서 우주여행을 계획하기 시작했다. 몇 가지를 고려해본 결과 우주여행에는 우주선의 연료와 목적지까지의 도착시간이 가장 큰 영향을 미치는것으로 파악됐다. 꿍은 엄청난 부자여서 우주선이 여러대가 있는데 각각의 우주선마다 최고속도와 연료소비율이 조금씩 다르다.&nbsp;연료 소비율은 단위시간당 소비하는 연료의 양이다.</p>

<p>모든 우주선이 최고속도에 즉시 도달한다고 할&nbsp;때 꿍이 가고싶어하는 곳까지 여행할 수 있는 우주선은 총 몇대인지 여러분이 대신 구해줘라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 테스트케이스의 개수&nbsp;T (1 ≤ T ≤ 50)로 시작한다.</p>

<p>각 테스트케이스는 공백으로 구분되는,&nbsp;우주선의 개수&nbsp;N (1 ≤ N ≤ 100)과 목적지 까지의 거리&nbsp;D (1 ≤ D ≤ 10<sup>6</sup>), 두 개의 정수로 시작한다. 다음 N줄에는 각각&nbsp;공백으로 구분되는, 우주선의 최고속도&nbsp;v<sub>i</sub> (1 ≤ v<sub>i</sub> ≤ 1000)와 우주선의 연료양&nbsp;f<sub>i</sub> (1 ≤ f<sub>i</sub> ≤ 1000)와 우주선의 연료소비율&nbsp;c<sub>i</sub> (1 ≤ c<sub>i</sub> ≤ 1000), 세개의 정수가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트케이스에 대해 목적지까지 갈 수 있는 우주선의 개수를 구하여라.</p>

<p>이때, 정수의 나눗셈에 조심하라!</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
3 100
52 75 10
88 13 44
56 9 5
2 920368
950 950 1
943 976 1
','2
1
','MATH'),
                                                                                                                (1490,'BAEKJOON','https://www.acmicpc.net/problem/9506',9506,'약수들의 합','2초','128 MB',5,'<p>어떤 숫자 n이 자신을 제외한 모든 약수들의 합과 같으면, <span style="line-height:1.6em">그 수를 완전수라고 한다. </span></p>

<p>예를 들어 6은 6 = 1 + 2 + 3 으로 완전수이다.</p>

<p>n이 완전수인지 아닌지 판단해주는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 테스트 케이스마다 한 줄 간격으로 n이 주어진다. (2 < n < 100,000)</p>

<p>입력의 마지막엔 -1이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>테스트케이스 마다 한줄에 하나씩 출력해야 한다.</p>

<p>n이 완전수라면, n을 n이 아닌 약수들의 합으로 나타내어 출력한다(예제 출력 참고).</p>

<p>이때, 약수들은 오름차순으로 나열해야 한다.</p>

<p>n이 완전수가 아니라면 n is NOT perfect. 를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
12
28
-1
','6 = 1 + 2 + 3
12 is NOT perfect.
28 = 1 + 2 + 4 + 7 + 14
','MATH'),
                                                                                                                (1492,'BAEKJOON','https://www.acmicpc.net/problem/9521',9521,'색칠 공부','1초','128 MB',18,'<p>상근이는 시간이 날 때마다 색칠 공부를 하고 있다. 상근이는 총 K개의 색이 담겨있는 팔레트를 가지고 있고, 붓을 이용해 색칠을 한다. 상근이의 친구 선영이는 상근이의 생일 선물로 색칠 공부 책을 선물했다. 책에는 그림이 총 N개 있으며, 1번부터 N번까지 번호가 붙여져 있다.</p>

<p>상근이는 각각의 그림을 K가지 색 중 하나를 골라 색칠하려고 한다. 선영이는 화려한 것을 좋아하기 때문에 상근이에게 숫자 N개 f<sub>i</sub>를 정해주었다. 상근이는 i번 그림을 f<sub>i</sub>번 그림과 다른 색으로 색칠해야 한다. i가 f<sub>i</sub>와&nbsp;같은 경우에 아무런 제한없이 i번 그림을 색칠할 수 있다.</p>

<p>N과 K, 그리고 f<sub>i</sub>가 모두 주어졌을 때, 상근이가 색칠 공부 책을 색칠하는 방법의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 K가 주어진다. (1 ≤ N, K ≤ 1,000,000) 둘째 줄에는 숫자 N개 f<sub>i</sub>가 주어진다. (1 ≤ f<sub>i</sub> ≤ N)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 색칠 공부 책을 색칠하는 방법의 수를 출력한다. 방법의 수가 매우 많기 때문에 1,000,000,007로 나눈 나머지를 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 예제의 경우 1번 그림과 2번 그림은 서로 같은 색으로 색칠하면 안 된다. 따라서 가능한 방법은 (1,2), (1,3), (2,1), (2,3), (3,1), (3,2)가 있다.</p>

				</div>
				</div>','2 3
2 1
','6
','MATH'),
                                                                                                                (1493,'BAEKJOON','https://www.acmicpc.net/problem/9527',9527,'1의 개수 세기','1초','128 MB',14,'<p>두 자연수 A, B가 주어졌을 때, A&nbsp;≤ x&nbsp;≤ B를 만족하는 모든 x에 대해 x를&nbsp;이진수로 표현했을 때 1의 개수의 합을 구하는 프로그램을 작성하시오.</p>

<p>즉, f(x) = x를 이진수로 표현 했을 때 1의 개수라고 정의하고, 아래 식의 결과를 구하자.</p>

<p>\[\sum_{x=A}^{B}{f(x)}\]</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 두 자연수 A, B가 주어진다. (1&nbsp;≤ A&nbsp;≤ B&nbsp;≤ 10<sup>16</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>1의 개수를 세어 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 12
','21
','MATH'),
                                                                                                                (1494,'BAEKJOON','https://www.acmicpc.net/problem/9529',9529,'11 (십 일)','1초','128 MB',19,'<p>이 문제에서 자연수 하나를 숫자들의 수열로 나타낼 수 있다고 한다. 마찬가지로 숫자로 이루어진 수열을 자연수 하나로 표현할 수 있다. 하지만 leading zeros (맨 앞의 0)은 허용하지 않는다.&nbsp;예를 들어 N = 2090 일 때, 수열 {2, 0, 9, 0}이 된다. 하지만 수열&nbsp;{0, 0, 1, 0}이 의미하는 자연수는 없다.</p>

<p>수열의&nbsp;Anagram이란 수열의 원소 구성은 같으면서 순서만 바뀐 것을 의미한다. 마찬가지로 자연수의 Anagram도 정의할 수 있다. N = 2090&nbsp;일 때, N의 Anagram은 2009, 2090, 2900, 9002, 9020, 9200이 된다.</p>

<p>자연수 N이 주어졌을 때, N의 Anagram 중 11의 배수가 되는 것이 몇 개나 있는지 궁금하다. 이를 계산하는 프로그램을 작성하자. 예를 들어, N = 2090 일 때 Anagram 중 2090 과 9020 만이 11의 배수이기 때문에 답은 2가 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 자연수 N이 leading zeros 없이 주어진다. (1 ≤ N&nbsp;≤ 10<sup>100</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>주어진 자연수 N의 Anagram 중 11의 배수의 개수를 출력한다. 단, 답이 매우 클 수 있으므로 10<sup>9</sup> + 7로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2090
','2
','MATH'),
                                                                                                                (1495,'BAEKJOON','https://www.acmicpc.net/problem/9537',9537,'잘생긴 GCD','5초','128 MB',19,'<p>어떤 길이가 양의 정수인 수열은 잘생긴 GCD 라는 값을 가질 수 있다. 잘생긴 GCD란 그 수열의 모든 원소들의 최대공약수에 수열의 길이를 곱한 값으로 정의된다.</p>

<p>당신의 임무는 수열이 주어질 때(a<sub>1</sub>, ... , a<sub>n</sub>) 그 수열의 연속된 부분수열들의 잘생긴 GCD 중 가장 큰 값을 구하는 것이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러개의 테스트 케이스로 이루어진다. 첫 줄에는 테스트 케이스의 수를 의미하는 T 가 주어진다. 각 각의 테스트 케이스들은 두 줄로 구성되는데, &nbsp;첫 줄은 수열의 크기 n&nbsp;( 1 ≤ n ≤ 100 000 )이 주어진다. 두 번째 줄은 수열 a<sub>1</sub>, a<sub>2</sub>, ... , a<sub>n</sub> 이 하나의 공백을 사이에 두고 주어지고 수열의 값은 1 이상 1,000,000,000,000 이하의 값을 가진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 각의 테스트 케이스에서 주어지는 수열의 연속 된 부분수열 중 잘생긴 GCD의 값이 가장 큰 수열의 잘생긴 GCD를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
5
30 60 20 20 20
','80
','MATH'),
                                                                                                                (1497,'BAEKJOON','https://www.acmicpc.net/problem/9546',9546,'3000번 버스','1초','128 MB',4,'<p>n명의 승객을 태우고 있는 3000번 버스는 강화에서부터 김포를 지나 신촌까지 가는 좌석버스이다. 3000번 버스는 버스 정류장마다 문을 연다. 그리고 정류장마다 타고 있는 승객의 수의 정확히 절반과 반 명(0.5명)의 승객이 내린다. 총 k개의 정류장에서 승객이 내렸고 마지막 정류장에서 승객이 없었으며 누구도 다치지 않았다면 맨 처음 타고있던 승객은 몇명인가.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄은 테스트 케이스의 수를 입력받는다. 각각의 테스트 케이스에는 정류장의 수 k를 입력받는다. 1 ≤ k ≤ 30.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스는 한 줄에 처음 버스에 타고있던 승객의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1
3
','1
7
','MATH'),
                                                                                                                (1498,'BAEKJOON','https://www.acmicpc.net/problem/9550',9550,'아이들은 사탕을 좋아해','1초','128 MB',3,'<p>승택이의 아들이 생일을 맞았다. 승택이는 아들을 위해 생일 파티를 하려고 한다.</p>

<p>하지만 아들의 친구들을 모두 초대할 수는 없다. 아이들에게 나눠 줄 사탕이 부족하기 때문이다.</p>

<p>아이들은 항상 한 종류의 사탕만을 먹고 싶어한다. 게다가, 한 종류의 사탕을 최소한 K개 이상 먹어야만 행복해한다.</p>

<p>K가 주어지고 승택이가 현재 갖고 있는 사탕의 종류와 개수가 주어진다. 이때, 생일파티에 올 수 있는 아이들은 최대 몇 명일까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 수 T가 주어진다. ( 1 ≤ T ≤ 100 )</p>

<p>각 테스트 케이스의 첫 줄엔 승택이가 갖고 있는 사탕의 종류의 수 N과 K가 주어진다. ( 1 ≤ N, K ≤ 100 )</p>

<p>두 번째 줄엔 N개의 정수로 승택이가 각 종류의 사탕을 몇 개 갖고 있는지가 주어진다.</p>

<p>모든 종류에 대해, 사탕은 최소 1개 최대 100개이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 생일파티에 최대 몇 명의 아이들이 참석할 수 있는지 하나의 정수로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
3 2
4 5 7
3 8
4 5 7
','7
0
','MATH'),
                                                                                                                (1501,'BAEKJOON','https://www.acmicpc.net/problem/9553',9553,'양궁','1초','128 MB',11,'<p>강산이는 2012년 런던 올림픽을 본 이후로 취미로 양궁을 하게 되었다.</p>

<p>하지만 생각만큼 양궁은 쉬운 스포츠가 아니었다.</p>

<p>좀처럼 잘 되지 않자 강산이는 좀 더 쉽게 할 수 있는 새로운 양궁을 생각해냈다.</p>

<p>새로운 양궁의 규칙은 다음과 같다.</p>

<ul>
	<li>플레이어는 관통력이 무한하며, 영원히 날아가는 화살을 발사한다.</li>
	<li>플레이어의 주변엔 타겟 여러 개가 직선 형태로 놓여 있다. 각 타겟은 교차하거나 겹칠 수도 있다. 단, 플레이어가 타겟 위에 서 있는 경우는 없다.</li>
</ul>

<p>&nbsp;</p>

<p><img src=https://www.acmicpc.net/upload/images2/archery.png"></p>

<p>위는 두 개의 타겟이 있는 게임의 예시이다. 플레이어는 원점에서 화살을 쏜다.</p>

<p>각 선수는 어떤 방향으로든 화살을 발사할 수 있다. 예를 들어 위 그림의 경우, 플레이어가 s방향으로 화살을 쏜다면 타겟 T1과 T2 모두를 관통하게 된다. 이 예제에서, 플레이어가 두 개의 타겟을 노릴 수 있는 영역은 한 군데이며, 한 개의 타겟을 노릴 수 있는 영역은 두 군데임을 알 수가 있다. 각 타겟의 끝점을 스치는 화살도 타겟을 관통한 것으로 친다.</p>

<p>강산이는 이 양궁이 아주 마음에 들었다. 특히나, 어떤 선수가 화살을 쏠 때 과연 몇 개의 타겟을 맞힐 수 있을 지를 계산하는 것이 아주 재미있었다.</p>

<p>강산이의 즐거움을 여러분도 체험하기 위해, 각 타겟의 시작점과 끝점이 주어질 때 화살 한 발로 맞힐 수 있는 타겟 수의 기댓값을 구해보도록 하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 수 T가 주어진다. ( 1 ≤ T ≤ 100 )</p>

<p>각 테스트 케이스의 첫 줄엔 타겟의 수 N이 주어진다. ( 1 ≤ N ≤ 100 )</p>

<p>이어 N줄에 걸쳐 네 개의 정수 X <sub>1</sub> Y<sub>1</sub> X<sub>2</sub> Y<sub>2</sub>가 주어진다. 이는 타겟이 (X<sub>1</sub>, Y<sub>1</sub>)에서 시작하여 (X<sub>2</sub>, Y<sub>2</sub>)에서 끝나는 선분의 형태로 놓여 있음을 의미한다. ( -100 ≤ X<sub>1</sub>, Y<sub>1</sub>, X<sub>2</sub>,Y<sub>2</sub> ≤ 100 )</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 화살 한 발로 맞힐 수 있는 타겟 수의 기댓값을 소수점 여섯 번째 자리에서 반올림하여 다섯 번째 자리까지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
2
1 5 3 3
3 5 6 2
8
3 0 0 3
0 3 -3 0
-3 0 0 -3
0 -3 3 0
3 3 -3 3
-3 3 -3 -3
-3 -3 3 -3
3 -3 3 3
','0.20636
2.00000
','MATH'),
                                                                                                                (1499,'BAEKJOON','https://www.acmicpc.net/problem/9556',9556,'수학 숙제','1초','128 MB',17,'<p>동일이는 어려운 수학 문제를 숙제로 받았다. 이제 기한이 얼마 남지 않았다. 내일까지 숙제를 해결해야만 한다.</p>

<p>숙제는 나눗셈 연습이다. 작은 수로 어떤 N자리 수를 나누는 과정에 대해 이해하는 것이 목표이다. 이때, N자리 수는 한 개 이상의 0으로 시작할 수도 있다.</p>

<p>문제는 아래와 같은 형식으로 이루어져 있다.</p>

<p>2자리 정수이면서 6으로 나누어 떨어지고 5로는 나누어 떨어지지 않는 수는 몇 개인가?</p>

<p>이에 대한 답은 06, 12, 18, 24, 36, 42, 48, 54, 66, 72, 78, 84, 96이 된다.</p>

<p>0은 모든 양의 정수로 나누어 떨어지는 수임에 유의해야 한다.</p>

<p>동일이는 문제를 풀려고 했지만, 조건을 만족하는 수가 너무 많아 다 구할 수가 없다고 생각하여 조건을 만족하는 수의 개수만 구해보려 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 수 T가 주어진다. ( 1 ≤ T ≤ 1,000 )</p>

<p>각 테스트 케이스는 하나의 정수 N과 6글자로 이루어진 문자열 하나로 이루어져 있다.</p>

<p>N은 구할 답이 N자리 정수임을 의미한다. ( 1 ≤ N ≤ 10 <sup>18</sup>)</p>

<p>이어 6자리 문자열은 0, 1, 2로 구성되어 있는데, i번째 글자가 0이라면 i로 나누어 떨어지지 않아야 함을 의미하며, 1일 경우엔 i로 나누어 떨어져야 함을 의미하며, 2일 경우엔 상관없음을 의미한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 조건을 만족하는 N자리 정수의 개수를 1,000,000,007로 나눈 값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
2 222201
1 111001
1 111111
2 222222
','13
1
1
100
','MATH'),
                                                                                                                (1508,'BAEKJOON','https://www.acmicpc.net/problem/9610',9610,'사분면','1초','128 MB',3,'<p>2차원 좌표 상의 여러 점의 좌표 (x,y)가 주어졌을 때, 각 사분면과 축에 점이 몇 개 있는지 구하는 프로그램을 작성하시오.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/quad.png" style="height:190px; width:292px"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 점의 개수 n (1 ≤ n ≤ 1000)이 주어진다. 다음 n개 줄에는 점의 좌표 (x<sub>i</sub>, y<sub>i</sub>)가 주어진다. (-10<sup>6</sup> ≤ x<sub>i</sub>, y<sub>i</sub> ≤ 10<sup>6</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 사분면과 축에 점이 몇 개 있는지를 예제 출력과 같은 형식으로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
0 0
0 1
1 1
3 -3
2 2
','Q1: 2
Q2: 0
Q3: 0
Q4: 1
AXIS: 2
','MATH'),
                                                                                                                (1506,'BAEKJOON','https://www.acmicpc.net/problem/9613',9613,'GCD 합','1초','128 MB',7,'<p>양의 정수 n개가 주어졌을 때, 가능한 모든 쌍의 GCD의 합을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 t (1 ≤ t ≤ 100)이 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있다.&nbsp;각 테스트 케이스는 수의 개수 n (1 < n ≤ 100)가 주어지고, 다음에는 n개의 수가 주어진다. 입력으로 주어지는 수는 1,000,000을 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 가능한 모든 쌍의 GCD의 합을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
4 10 20 30 40
3 7 5 12
3 125 15 25
','70
3
35
','MATH'),
                                                                                                                (1514,'BAEKJOON','https://www.acmicpc.net/problem/9614',9614,'잠금 패턴과 스패닝 트리','1초','128 MB',16,'<p>안드로이드는 스마트폰을 잠글때 패턴을 이용한다. 보통 잠근 패턴은 3×3 그리드에 노드 9개로 이루어져 있다. 상현이는 보다 더 높은 보안을 위해 아래와 같은 잠금 패턴을 제공하는 앱을 만들려고 한다.</p>

<p>상현이가 만들 앱의 잠금 패턴의 크기는 2×2부터 m×m까지로 다양하며, 항상 인접한 노드만 연결할 수 있다. 잠금 패턴은 그래프로 나타낼 수 있다. 아래 그림은 2×2, 3×3, 4×4 잠금 패턴을 그래프로 나타낸 것이다. 꼭짓점에 해당하는 정점은 총 3개와 연결되어 있고, 나머지 정점은 최대 8개와 연결될 수도 있다. 항상 아래 그림과 같이 인접한 점과만 연결할 수 있다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/securespanning.png" style="width: 353.333px; height: 110.833px;"></p>

<p>잠금 패턴은 항상 스패닝 트리를 이루어야 한다. 스패닝 트리는 그래프 상의 간선의 집합으로, 닫힌 루프를 포함하지 않아야 한다. 또, 임의의 두 점 사이의 경로가 존재해야 하고, 모든 m<sup>2</sup> = n개의 정점과 n-1개의 edge로 이루어져 있어야 한다. 잠금 패턴 상에서 스패닝 트리는 여러 가지 경우가 나올 수 있다.</p>

<p>그래프 G의 스패닝 트리의 개수를 구하기 위해 모든 정점에 번호 v<sub>1</sub>, ..., v<sub>n</sub>을 붙인다. 이제 행렬 T = [t<sub>ij</sub>]를 아래와 같이 만들 수 있다.</p>

<ul>
	<li>i = j인 경우에는 v<sub>i</sub>와 연결된 간선의 개수</li>
	<li>i ≠ j인 경우에 v<sub>i</sub>와 v<sub>j</sub> 사이에 간선이 있으면 -1, 없으면 0</li>
</ul>

<p>스패닝 트리의 개수는 다음과 같이 구할 수 있다.</p>

<p>cofactor of a<sub>ij</sub> = (-1)<sup>i+j</sup>M<sub>ij</sub>&nbsp;</p>

<p>여기서 M<sub>ij</sub>는 T에서 i행과 j열을 지워서 얻은 (n-1) × (n-1) 행렬의 행렬식(determinant)이다. T의 모든 cofactor는 같은 결과를 갖는다.</p>

<p>예를 들어, 2×2 패턴의 행렬 T는 다음과 같다.</p>

<p>\[T=\begin{pmatrix} 3 &amp; -1 &amp; -1 &amp; -1 \\ -1 &amp; 3 &amp; -1 &amp; -1 \\ &nbsp;-1&amp;-1&amp;3&amp;-1 \\ -1&amp;-1&amp;-1&amp;3 &nbsp;\end{pmatrix}\]</p>

<p>i=1, j=1로 두고 cofator를 구해보면 아래와 같다.</p>

<p>\[(-1)^{1+1}M_{11} = &nbsp;\begin{vmatrix} &nbsp;3&amp; -1&amp;-1 \\ &nbsp;-1&amp;3&amp;-1 \\ -1&amp;-1&amp;3 &nbsp;\end{vmatrix} = 16\]</p>

<p>따라서, 스패닝 트리의 개수는 16개임을 알 수 있다.&nbsp;</p>

<p>두 번째 예제로 3×3 패턴의 행렬 T는 다음과 같다.</p>

<p>\[T = \begin{pmatrix} &nbsp;3&amp;-1&amp;0&amp;-1&amp;-1&amp;0&amp;0&amp;0&amp;0 \\ -1&amp;5&amp;-1&amp;-1&amp;-1&amp;-1&amp;0&amp;0&amp;0 \\ 0&amp;-1&amp;3&amp;0&amp;-1&amp;-1&amp;0&amp;0&amp;0 \\ -1&amp;-1&amp;0&amp;5&amp;-1&amp;0&amp;-1&amp;-1&amp;0 \\ -1&amp;-1&amp;-1&amp;-1&amp;8&amp;-1&amp;-1&amp;-1&amp;-1 \\ 0 &amp; -1&amp;-1&amp;0&amp;-1&amp;5&amp;0&amp;-1&amp;-1 \\ 0&amp;0&amp;0&amp;-1&amp;-1&amp;0&amp;3&amp;-1&amp;0 \\ 0&amp;0&amp;0&amp;-1&amp;-1&amp;-1&amp;-1&amp;5&amp;-1 \\ 0&amp;0&amp;0&amp;0&amp;-1&amp;-1&amp;0&amp;-1&amp;3 &nbsp;\end{pmatrix}\]</p>

<p>T의 모든 cofactor는 같은 결과를 갖고, 이 답이 스패닝 트리의 개수가 된다.</p>

<p>m×m 패턴에서 만들 수 있는 스패닝 트리의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 N (1 ≤ N ≤ 5)가 주어진다. 다음 N개 줄에는 테스트케이스 한 줄에 하나씩 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, 패턴의 크기 m이 주어진다. (2 ≤ m ≤ 6)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 m×m 패턴에서 만들 수 있는 스패닝 트리의 개수를 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>m = 2인 경우 아래와 같이 16가지 경우가 있다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/securexm.png" style="height:389px; width:533px"></p>

				</div>
				</div>','1
2
','16
','MATH'),
                                                                                                                (1510,'BAEKJOON','https://www.acmicpc.net/problem/9616',9616,'홀수 정사각형','5초','256 MB',15,'<p>격자 정사각형은 모든 꼭짓점이 격자점 위에 있는 정사각형이다. 격자점은 x좌표와 y좌표가 모두 정수인 점이다. 예를 들어, (1,5)는 격자점이지만, (1, 1.5)는 아니다.</p>

<p>m×n 격자 위에 격자 정사각형은 총 몇 개가 있을까?</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/latticesqu.png" style="height: 229.167px; width: 365.833px;"></p>

<p>위의 그림은 4×4 격자 위에서 찾을 수 있는 격자 정사각형의 일부이다. 그림 1, 2, 3과 같이 축에 평행한 격자 정사각형도 있고, 4, 5, 6과 같이 평행하지 않은 정사각형도 있다. 그림 2, 4, 6의 정사각형은 넓이가 짝수이고, 1, 3, 5는 홀수이다.</p>

<p>격자의 크기가 주어졌을 때, 넓이가 홀수인 격자 정사각형은 총 몇 개가 있는지 구하는 프로그램을 작성하시오.</p>

<p>두 격자 정사각형이 네 변을 모두 공유하지 않으면 다른 정사각형이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 최대 50000줄로 이루어져 있다. 각 줄에는 m과 n이 주어진다. (1 ≤ m, n ≤ 100000) 입력의 마지막 줄에는 0이 두 개 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 입력마다 넓이가 홀수인 격자 정사각형의 수를 출력한다. 정답은 항상 64비트 정수(64-bit signed integer) 범위이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 2
3 3
4 4
0 0
','4
12
28
','MATH'),
                                                                                                                (1518,'BAEKJOON','https://www.acmicpc.net/problem/9655',9655,'돌 게임','1초','128 MB',6,'<p>돌 게임은 두 명이서 즐기는 재밌는 게임이다.</p>

<p>탁자 위에 돌 N개가 있다. 상근이와 창영이는 턴을 번갈아가면서 돌을 가져가며, 돌은 1개 또는&nbsp;3개&nbsp;가져갈 수 있다. 마지막 돌을 가져가는 사람이 게임을 이기게 된다.</p>

<p>두 사람이 완벽하게 게임을 했을 때, 이기는 사람을 구하는 프로그램을 작성하시오. 게임은 상근이가 먼저 시작한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. (1 ≤&nbsp;N ≤ 1000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>상근이가 게임을 이기면 SK를, 창영이가 게임을 이기면 CY을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
','SK
','MATH'),
                                                                                                                (1517,'BAEKJOON','https://www.acmicpc.net/problem/9656',9656,'돌 게임 2','1초','128 MB',7,'<p>돌 게임은 두 명이서 즐기는 재밌는 게임이다.</p>

<p>탁자 위에 돌 N개가 있다. 상근이와 창영이는 턴을 번갈아가면서 돌을 가져가며, 돌은 1개 또는&nbsp;3개 가져갈 수 있다. 마지막 돌을 가져가는 사람이 게임을 지게 된다.</p>

<p>두 사람이 완벽하게 게임을 했을 때, 이기는 사람을 구하는 프로그램을 작성하시오.&nbsp;게임은 상근이가 먼저 시작한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. (1 ≤ N ≤ 1000)</p>



					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>상근이가 게임을 이기면 SK를, 창영이가 게임을 이기면 CY을 출력한다.</p>



					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
','SK
','MATH'),
                                                                                                                (1519,'BAEKJOON','https://www.acmicpc.net/problem/9661',9661,'돌 게임 7','1초','128 MB',14,'<p>돌 게임은 두 명이서 즐기는 재밌는 게임이다.</p>

<p>탁자 위에 돌 N개가 있다. 상근이와 창영이는 턴을 번갈아가면서 돌을 가져가며, 돌은 4<sup>x</sup>개 만큼 가져갈 수 있다. 즉, 가능한 개수는 1, 4, 16, 64, ...개 이다. 4<sup>x</sup>개만큼 돌을 가져갈 수 있는 방법이 없는 사람이 게임을 지게 된다.</p>

<p>두 사람이 완벽하게 게임을 했을 때, 이기는 사람을 구하는 프로그램을 작성하시오.&nbsp;게임은 상근이가 먼저 시작한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. (1 ≤ N ≤ 1,000,000,000,000)</p>



					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>상근이가 게임을 이기면 SK를, 창영이가 게임을 이기면 CY을 출력한다.</p>



					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
','SK
','MATH'),
                                                                                                                (1525,'BAEKJOON','https://www.acmicpc.net/problem/9693',9693,'시파르','1초','128 MB',7,'<p>N이 주어졌을 때, N!/10<sup>M</sup>이 정수가 되는 M&nbsp;중 가장 큰 것을 출력하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>각 줄에&nbsp;5 ≤ N ≤ 10<sup>6</sup>인 N이&nbsp;있다. 입력의 마지막에는&nbsp;0이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 줄에 Case #x: M의 형태로 (x는 1부터 시작한다) 가장 큰 M을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>시파르(Sifar)는 말레이어로 0을 뜻한다고 한다.</p>

				</div>
				</div>','5
10
118
0
','Case #1: 1
Case #2: 2
Case #3: 27
','MATH'),
                                                                                                                (1531,'BAEKJOON','https://www.acmicpc.net/problem/9711',9711,'피보나치','1초','128 MB',8,'<p>피보나치 수열은&nbsp;아래와 같이 표현된다.</p>

<p>1, 1, 2, 3, 5, 8, 13, 21, 34, ...</p>

<p>각&nbsp;숫자는&nbsp;앞의 두 숫자의 합으로 나타내는 것을 알 수 있다.</p>

<p>P와 Q 그리고 n이 주어질 때, P번째 피보나치 숫자를&nbsp;Q로 나눈 나머지를 구하여라.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 라인에는 정수 T개의 테스트 케이스가 주어진다.</p>

<p>각 테스트 케이스는 정수 P와 Q가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다&nbsp;"Case #x: M" 형식으로 출력한다.</p>

<p>x는 테스트 케이스 번호(1부터 시작), M은 P번째 피보나치 숫자를 Q로 나눈 나머지이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10
5 10
6 25
10 21
32 43
100 100
50 50
25 25
45 67
109 32
128 128
','Case #1: 5
Case #2: 8
Case #3: 13
Case #4: 15
Case #5: 75
Case #6: 25
Case #7: 0
Case #8: 19
Case #9: 9
Case #10: 69
','MATH'),
                                                                                                                (1557,'BAEKJOON','https://www.acmicpc.net/problem/9734',9734,'순환 소수','1초','128 MB',10,'<p>분수는 소수로 바꿀 수 있다. 예를 들어, \(\frac{1}{2}\)는 \(0.5\)이고, \(\frac{1}{3}\)은 \(0.333\dots \)이며, 간단하게 \(0.\overline { 3 } \)으로 쓴다. \(0.5\)는 길이가 유한하지만, \(0.\overline { 3 } \)는 반복된다. 아래는 분수를 순환 소수로 나타낸 예시이다.</p>

<p>\[\frac{2}{7} = 0.\overline{285714} \\ \frac{17}{66} = 0.25\overline{75} \\ \frac {25}{6} = 4.1\overline{6} \\ \frac{3401}{333} = 10.\overline{213}\]</p>

<p>순환 소수가 주어졌을 때, 분수로 바꾸는 프로그램을 작성하시오. 분자와 분모는 서로소이어야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 순환 소수 하나로 이루어져 있으며, 반복되는 부분은 괄호로 감싸져 있다. 각 소수에 있는 숫자의 개수는 최대 9개이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어진 소수마다 분수를 출력한다. 분자와 분모는 서로소이어야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','0.(285714)
0.25(75)
4.1(6)
','0.(285714) = 2 / 7
0.25(75) = 17 / 66
4.1(6) = 25 / 6
','MATH'),
                                                                                                                (1556,'BAEKJOON','https://www.acmicpc.net/problem/9735',9735,'삼차 방정식 풀기','2초','128 MB',18,'<p>삼차 방정식 Ax<sup>3</sup> + Bx<sup>2</sup> + Cx + D = 0&nbsp;의 모든 실수 해를 찾는 프로그램을 작성하시오.</p>

<p>입력으로 주어지는 방정식은 정수 해를 적어도 한 개 갖는다.</p>

<p>A, B, C, D는 -2,000,000보다 크거나 같고, 2,000,000보다 작거나 같은 정수이고, A는 0이 아니다. 모든 해는 -1,000,000보다 크거나 같고, 1,000,000보다 작거나 같다. 주어지는 방정식의 해의 차이는 10<sup>-4</sup>보다 크다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 N (0 < N < 100)이 주어진다. 다음 N개 줄에는 삼차 방정식의 계수 A, B, C, D가 한 줄에 하나씩 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어진 방정식마다 모든 실수 해를 오름차순으로 출력한다. 해의 절대/상대 오차는 10<sup>-4</sup>까지 허용한다. 중근이 존재하는 경우에는 한 번만 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
2 -7 7 -2
2 0 0 0
','0.5000 1.0000 2.0000
0.0000
','MATH'),
                                                                                                                (1539,'BAEKJOON','https://www.acmicpc.net/problem/9736',9736,'정이면체군','5초','128 MB',0,'<p>정이면체군은 집합 D로, D상에서 곱셈 연산 *가 정의되어 있다. 집합 D는 두 원소 a와 b를 이용해 만들 수 있다. 곱셈 연산 *는 실제로 표기하는 경우는 거의 없고, 붙여서 쓰거나 제곱 형태로 나타낸다. 즉, a*a는 aa 또는 a<sup>2</sup>로 나타낸다. 또, a*a*b는 a<sup>2</sup>b<sup>1</sup> 또는 a<sup>2</sup>b로 나타낸다.</p>

<p>정이면체군 D는 두 파라미터 m과 n을 갖고, m ≥ 2, n ≥ 2이다. 이러한 정이면체군은 D<sub>m,n</sub>으로 나타낸다. D<sub>m,n</sub>사이의 관계는 다음과 같다.</p>

<p>a<sup>m</sup> = a<sup>0</sup> = 1, b<sup>n</sup> = b<sup>0</sup> = 1, and ba = a<sup>(m-1)</sup>b.</p>

<p>따라서, D<sub>m,n</sub>은 총 (mn)개의 원소를 가지며, 다음과 같다.</p>

<p>D<sub>m,n</sub> = {a<sup>j</sup>bk | 0 ≤ j < m, 0 ≤ k < n} = {a<sup>0</sup>b<sup>0</sup>, a<sup>1</sup>b<sup>0</sup>, a<sup>2</sup>b<sup>0</sup>, ..., a<sup>(m-1)</sup>b<sup>0</sup>, ..., a<sup>(m-1)</sup>b<sup>(n-1)</sup>}.</p>

<p>예를 들어, m=6, n=2인 경우 D<sub>7,2</sub>는 다음과 같다.</p>

<p>{a<sup>0</sup>b<sup>0</sup>, a<sup>1</sup>b<sup>0</sup>, a<sup>2</sup>b<sup>0</sup>, a<sup>3</sup>b<sup>0</sup>, a<sup>4</sup>b<sup>0</sup>, a<sup>5</sup>b<sup>0</sup>, a<sup>6</sup>b<sup>0</sup>, a<sup>0</sup>b<sup>1</sup>, a<sup>1</sup>b<sup>1</sup>, a<sup>2</sup>b<sup>1</sup>, a<sup>3</sup>b<sup>1</sup>, a<sup>4</sup>b<sup>1</sup>, a<sup>5</sup>b<sup>1</sup>, a<sup>6</sup>b<sup>1</sup>}.</p>

<p>곱셉 연산은 교환 법칙이 성립하지 않기 때문에, ba ≠ ab이다. D<sub>7,2</sub>의 정의에 의하면 ba = a<sup>6</sup>b이다. 또, a<sup>j</sup>a<sup>k</sup> = a<sup>(j+k)%m</sup>, b<sup>j</sup>b<sup>k</sup> = b<sup>(j+k)%n</sup> 이다. 따라서 다음과 같다.</p>

<p>(a<sup>j</sup>b<sup>k</sup>)(a<sup>p</sup>b<sup>q</sup>) ≠ (a<sup>(j+p)%m</sup>b<sup>(k+q)%n</sup>)</p>

<p>D<sub>7,2</sub>의 두 원소 (a<sup>3</sup>b<sup>1</sup>)과 (a<sup>2</sup>b<sup>1</sup>)을 올바르게 곱하는 방법은 다음과 같다.</p>

<p>(a<sup>3</sup>b<sup>1</sup>)(a<sup>2</sup>b<sup>1</sup>) = (a<sup>3</sup>b<sup>0</sup>)(ba)(a<sup>1</sup>b<sup>1</sup>) = (a<sup>3</sup>b<sup>0</sup>)(a<sup>6</sup>b<sup>1</sup>)(a<sup>1</sup>b<sup>1</sup>)</p>

<p>ba = a<sup>6</sup>b이때문에 위와 같이 계산할 수 있다. 또, a<sup>3</sup>b<sup>0</sup>a<sup>6</sup> = a<sup>3</sup>a<sup>6</sup> = a<sup>(3+6)%7</sup> = a<sup>2</sup>이기 때문에, (a<sup>3</sup>b<sup>0</sup>)(a<sup>6</sup>b<sup>1</sup>) = (a<sup>2</sup>b<sup>1</sup>)임을 알 수 있다. 따라서, 다음과 같이 계산할 수 있다.</p>

<p>(a<sup>3</sup>b<sup>0</sup>)(a<sup>6</sup>b<sup>1</sup>)(a<sup>1</sup>b<sup>1</sup>) = (a<sup>2</sup>b<sup>1</sup>)(a<sup>1</sup>b<sup>1</sup>).</p>

<p>이제, 위의 식을 아래와 같이 다시 계산할 수 있다.</p>

<p>(a<sup>2</sup>b<sup>1</sup>)(a<sup>1</sup>b<sup>1</sup>) = (a<sup>2</sup>b<sup>0</sup>)(ba)(a<sup>0</sup>b<sup>1</sup>) = (a<sup>2</sup>b<sup>0</sup>)(a<sup>6</sup>b<sup>1</sup>)(a<sup>0</sup>b<sup>1</sup>) = (a<sup>8</sup>b<sup>2</sup>) = (a<sup>1</sup>b<sup>0</sup>)</p>

<p>따라서, (a<sup>3</sup>b<sup>1</sup>)과 (a<sup>2</sup>b<sup>1</sup>)을 곱하면 (a<sup>3</sup>b<sup>1</sup>)(a<sup>2</sup>b<sup>1</sup>) = (a<sup>1</sup>b<sup>0</sup>)이 된다.</p>

<p>m과 n 그리고, 정이면체군 D<sub>m,n</sub> 상의 두 원소 (a<sup>j</sup>b<sup>k</sup>)와 (a<sup>p</sup>b<sup>q</sup>)가 주어졌을 때, 곱한 결과를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 문제 세트로 이루어져 있다. 각 문제 세트는 입력 여러 줄로 이루어져 있다.</p>

<p>첫째 줄에는 문제ID와 m, n,p 가 주어지며, 공백으로 구분되어져 있다. m과 n은 1000을 넘지 않는 정수이고, p는 그 문제 세트에 있는 곱셈 문제의 개수이다. 다음 p개 줄에는 곱셈 문제가 주어지며, D<sub>m,n</sub> 상의 두 원소가 주어진다. 각 원소는 a3b1형식이다. 각 문제 세트의 다음에는 바로 다음 문제 세트가 주어진다. 문제ID가 ZZ인 경우에는 입력의 끝을 나타낸다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 곱셈 문제에 대해서, 다음을 출력한다.</p>

<p>ProblemID id: ajbk * apbq = arbs</p>

<p>id는 입력으로 주어진 문제ID, ajbk, apbq는 입력으로 주어진 두 원소, arbs는 결과이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','C1 7 2 3
a3b1 a2b1
a5b1 a3b1
a2b1 a4b1
C2 9 3 2
a3b1 a2b1
a4b1 a3b1
ZZ 0 0 0
','ProblemID C1: a3b1 * a2b1 = a1b0
ProblemID C1: a5b1 * a3b1 = a2b0
ProblemID C1: a2b1 * a4b1 = a5b0
ProblemID C2: a3b1 * a2b1 = a1b2
ProblemID C2: a4b1 * a3b1 = a1b2
','MATH'),
                                                                                                                (1574,'BAEKJOON','https://www.acmicpc.net/problem/9753',9753,'짝 곱','1초','128 MB',9,'<p>정수 K (1 ≤ K ≤ 100,000)가 주어진다. 이때, K보다 크거나 같은 서로 다른 소수의 곱 중에서 가장 작은 곱을 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T (1 ≤ T ≤ 20)이 주어진다. 다음 T개 줄에는 K가 한 줄에 하나씩 주어진다. </p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 K마다 K보다 크거나 같은 서로 다른 두 소수의 곱 중에서 가장 작은 곱을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>K=1인 경우 답은 6 = 2 × 3이다. 6은 서로 다른 두 소수의 곱 중에서 가장 작은 곱이다. 4 = 2 × 2 이기 때문에, 정답이 되지 않는다.</p>

<p>세 번째 예제 K=10인 경우에 정답은 10 = 2 × 5 이다.</p>

<p>마지막 예제 K=100000인 경우 정답은 100001 = 11 × 9091 이다.</p>

				</div>
				</div>','5
1
3
10
300
100000
','6
6
10
301
100001
','MATH'),
                                                                                                                (1560,'BAEKJOON','https://www.acmicpc.net/problem/9765',9765,'여섯 방정식','1초','128 MB',10,'<p>여섯 개의 간단한 방정식이 주어진다. 이때, x<sub>1</sub>, x<sub>2</sub>, x<sub>3</sub>, x<sub>5</sub>, x<sub>6</sub>, x<sub>7</sub>를 찾는 프로그램을 작성하시오. x<sub>1</sub>, x<sub>2</sub>, x<sub>3</sub>, x<sub>5</sub>, x<sub>6</sub>, x<sub>7</sub>은 2보다 크거나 같고, 20,000,000보다 작거나 같은 소수이다. 여섯 방정식은 아래와 같다.</p>

<ul>
	<li>c<sub>1</sub> = x<sub>1</sub>x<sub>2</sub></li>
	<li>x<sub>4</sub> = c<sub>4</sub>x<sub>1</sub></li>
	<li>c<sub>3</sub> = x<sub>6</sub>x<sub>7</sub></li>
	<li>x<sub>8</sub> = x<sub>7</sub>c<sub>2</sub></li>
	<li>c<sub>5</sub> = x<sub>2</sub>x<sub>3</sub></li>
	<li>c<sub>6</sub> = x<sub>6</sub>x<sub>5</sub></li>
</ul>

<p>c<sub>1</sub>, c<sub>2</sub>, c<sub>3</sub>, c<sub>4</sub>, c<sub>5</sub>, c<sub>6</sub>은 양의 정수로 (20,000,000)<sup>2</sup>을 넘지 않는다. c<sub>1</sub>, c<sub>2</sub>, c<sub>3</sub>, c<sub>4</sub>, c<sub>5</sub>, c<sub>6</sub>이 주어졌을 때, x<sub>1</sub>, x<sub>2</sub>, x<sub>3</sub>, x<sub>5</sub>, x<sub>6</sub>, x<sub>7</sub>을 푸는 프로그램을 작성하시오. 항상 풀 수 있는 방정식만 입력으로 주어진다. </p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 c<sub>1</sub>, c<sub>2</sub>, c<sub>3</sub>, c<sub>4</sub>, c<sub>5</sub>, c<sub>6</sub>이 주어진다. (c<sub>1</sub> ≠ c<sub>5</sub>, c<sub>3</sub> ≠ c6)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>x<sub>1</sub>, x<sub>2</sub>, x<sub>3</sub>, x<sub>5</sub>, x<sub>6</sub>, x<sub>7</sub> 를 공백으로 구분해 출력한다. 가능한 답이 여러 가지인 경우, 아무거나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 20 35 10 39 77
','2 3 13 11 7 5
','MATH'),
                                                                                                                (1572,'BAEKJOON','https://www.acmicpc.net/problem/9937',9937,'직선으로 만드는 삼각형','1초','128 MB',15,'<p>상근이는 좌표 평면 위의 A<sub>i</sub>x + B<sub>i</sub>y + C<sub>i</sub> = 0 로 나타낼 수 있는 직선 N개를 가지고 있다.</p>

<p>상근이가 가지고 있는 직선으로 만들어지는 삼각형의 개수를 구하는 프로그램을 작성하시오.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/dbd256b3-1447-4505-9a4d-f6033831bc50/-/preview/" style="width: 370px; height: 289.167px;"></p>

<p>세 직선이 한 점에서 만나는 경우는 없다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 직선의 개수 N이 주어진다. (1 ≤ N ≤ 300,000)</p>

<p>다음 N개 줄에는 i번째 직선의 A<sub>i</sub>, B<sub>i</sub>, C<sub>i</sub>가 주어진다. 모든 숫자는 절댓값이 10<sup>9</sup>보다 작거나 같은 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 입력으로 주어진 직선이 만드는 삼각형의 개수를 출력한다. 개수가 매우 많을 수 있기 때문에,&nbsp;1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
0 1 0
-5 3 0
-5 -2 25
0 1 -3
0 1 -2
-4 -5 29
','10
','MATH'),
                                                                                                                (1575,'BAEKJOON','https://www.acmicpc.net/problem/9942',9942,'하노이의 네 탑','3초','128 MB',14,'<p><a href="/problem/1914">하노이의 탑</a>이라는 유명한 문제가 있다.</p>

<p>하지만 이 문제는 너무 유명한 나머지 이제는 식상하다.</p>

<p>그러니까 이번엔 탑을 3개가 아닌 4개로 늘려서 생각해보자!</p>

<p>N개의 원판과 4개의 막대가 있을 때, 즉 보조 막대가 한 개가 아닌 두 개이면 몇 번 움직여서 모든 원판을 끝의 원판으로 옮길 수 있을까?</p>

<p>4개의 막대를 이용해서 N개의 원판을 모두&nbsp;옮기기 위한&nbsp;최소 이동&nbsp;횟수를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>각 줄에 원판의 개수 N(1&nbsp;≤&nbsp;N&nbsp;≤&nbsp;1000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>테스트 케이스와 함께 답을 출력한다(단, 답은 64-bit 정수 타입(e.g. long long)으로 표현 가능하다).</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>사실&nbsp;<a href="http://en.wikipedia.org/wiki/Tower_of_Hanoi#With_four_pegs_and_beyond">막대가 4개 이상인&nbsp;하노이의 탑 문제</a>는 Open Problem이므로 이 답이 최적이라는 보장은 없다 :(</p>

<p>하지만, 2014년에&nbsp;Frame?Stewart algorithm이 최적해를 준다는 것이 증명되었다.</p>

				</div>
				</div>','1
3
5
','Case 1: 1
Case 2: 5
Case 3: 13
','MATH'),
                                                                                                                (1581,'BAEKJOON','https://www.acmicpc.net/problem/10039',10039,'평균 점수','1초','128 MB',2,'<p>상현이가 가르치는 아이폰 앱 개발 수업의 수강생은 원섭, 세희, 상근, 숭, 강수이다.</p>

<p>어제 이 수업의 기말고사가 있었고, 상현이는 지금 학생들의 기말고사 시험지를 채점하고 있다. 기말고사 점수가 40점 이상인 학생들은 그 점수 그대로 자신의 성적이 된다. 하지만, 40점 미만인 학생들은 보충학습을 듣는 조건을 수락하면 40점을 받게 된다. 보충학습은 거부할 수 없기 때문에, 40점 미만인 학생들은 항상 40점을 받게 된다.</p>

<p>학생 5명의 점수가 주어졌을 때, 평균 점수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 총 5줄로 이루어져 있고, 원섭이의 점수, 세희의 점수, 상근이의 점수, 숭이의 점수, 강수의 점수가 순서대로 주어진다.</p>

<p>점수는 모두 0점 이상, 100점 이하인 5의 배수이다. 따라서, 평균 점수는 항상 정수이다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 학생 5명의 평균 점수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>숭과 원섭이는 40점 미만이고, 보충학습에 참여할 예정이기 때문에 40점을 받게 된다. 따라서, 점수의 합은 340점이고, 평균은 68점이 된다.</p>

				</div>
				</div>','10
65
100
30
95
','68
','MATH'),
                                                                                                                (1569,'BAEKJOON','https://www.acmicpc.net/problem/10041',10041,'관광','1초','128 MB',5,'<p>상근이는 재환이와 함께 제주도에 여행을 가기로 했다.</p>

<p>제주시는 남북방향 도로 W개와 동서방향 도로 H개로 이루어져 있으며, 바둑판 모양을 이루고 있다.</p>

<p>남북방향 도로는 서쪽에서부터 차례대로 1, 2, ..., W가 매겨져 있고, 동서방향 도로는 남쪽에서부터 차례대로 1, 2, ..., H가 매겨져 있다. i번째 남북 도로와 j번째 동서 도로로 이루어진 교차로를 (i, j)로 나타낸다.</p>

<p>제주시에는 북동방향 도로도 존재한다. 가장 북쪽의 도로와 동쪽 도로에 있는 교차로를 제외한 모든 교차로에는 북동방향 도로가 존재한다. 즉, 교차로 (i,j)에서 (i-1,j-1)이나 (i+1,j+1)이 존재하는 경우에는 그 교차로로 한 번에 이동할 수 있다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/2014-yo-t3-fig01-ko.png" style="height:250px; width:320px"></p>

<p>재환이는 자신이 방문하고 싶은 관광지 N개를 미리 정해왔다. i번째로 방문할 관광지는 (X<sub>i</sub>, Y<sub>i</sub>)에 있다. 상근이는 여행에 걸리는 시간을 최소로 하기 위해서 통과해야 하는 길의 개수를 적게 하려고 한다. 관광지를 재환이가 정한 순서대로 방문하면서 지나야 하는 길의 최소 개수를 구하는 프로그램을 작성하시오.</p>

<p>여행은 (X<sub>1</sub>, Y<sub>1</sub>)에서 시작한다. 또한, 여행 도중에 도시 밖으로는 이동할 수 없다. 상근이와 재환이는 같은 길을 두 번 이상 통과할 수 있으며, 한 도로를 여러 번 방문하는 경우에는 방문하는 만큼 중복해서 계산한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 W, H, N이 주어진다. (2 ≤ W, H ≤ 10000, 1 ≤ N ≤ 1000)</p>

<p>둘째 줄부터 N개 줄에는 관광지의 위치 X<sub>i</sub>, Y<sub>i</sub>가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>관광지를 재환이가 정한 순서대로 방문하면서 통과하는 길의 최소 개수를 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>(1,1), (2,2), (3,3), (3,2), (4,2), (4,1) 순서로 방문하면 된다.</p>

				</div>
				</div>','4 3 3
1 1
3 3
4 1
','5
','MATH'),
                                                                                                                (1589,'BAEKJOON','https://www.acmicpc.net/problem/10074',10074,'곤돌라 - 교체 수열의 개수 세기','1초','256 MB',17,'<p>마오공 곤돌라는 타이페이의 명소 중 하나이다. 곤돌라 시스템은 원형의 레일과, 하나의 정류장이 있고, 1 부터 n까지 순서대로 번호가 붙은 n개의 곤돌라가 모두 단일한 방향으로 레일을 따라 움직이는 형태이다. i번 곤돌라가 정류장을 지난 직후에는 i+1번 곤돌라가 정류장을 지나가게 된다. (단, i=n번 곤돌라가 지나간 직후에 1 번 곤돌라가 지나가게 된다.)</p>

<p>곤돌라들은 고장이 나기도 한다. 다행히 무제한으로 많은 곤돌라의 여분이 있고, 여분 곤돌라들은 n+1, n+2과 같이 순차적으로 번호가 붙어 있다. 특정한 곤돌라가 고장이 나면 고장난 곤돌라는 빼고, 동일한 위치에 여분 곤돌라를 배치한다. 여분 곤돌라는 작은 번호부터 사용된다. 예를 들어, 사용하는 곤돌라 수가 총 5 개이고, 1 번 곤돌라가 고장난다면, 그 곤돌라는 6번으로 교체된다.</p>

<p>당신은 정류장에 서서 곤돌라들이 지나가는 것을 즐겨 본다. 곤돌라 수열이라는 것은 임의의 시점에서 시작해서 정류장을 지나가는 n개의 곤돌라들의 번호를 순서대로 적은 것이다. 곤돌라 수열을 적기 시작하는 시점 이전에 이미 몇개의 곤돌라가 고장나서 교체되었을 수 있다. 하지만, 곤돌라 수열을 적는 도중에는 아무 곤돌라도 고장이 나지 않는다.</p>

<p>전체적으로 곤돌라들의 배치가 동일하더라도 어떤 시점에 곤돌라 수열을 적기 시작하느냐에 따라 서로 다른 곤돌라 수열이 나올수 있다는 점에 주의하자. 예를 들어, 총 5개의 곤돌라들 중 고장난 곤돌라가 없는 경우에 (2, 3, 4, 5, 1) 과 (4, 5, 1, 2, 3) 은 모두 가능한 곤돌라 수열들이다. 하지만, 이경우 (4, 3, 2, 5, 1) 은 가능한 곤돌라 수열이 아니다. (곤돌라 번호의 순서가 잘못되어 있다.)</p>

<p>만약 곤돌라 1번 만이 고장난 상황이라면, (4, 5, 6, 2, 3) 의 곤돌라 수열을 만들 수 있다. 만약 이후 4번 곤돌라가 고장난다면, 7번 곤돌라가 그 자리에 있게 되고, (6, 2, 3, 7, 5) 가 가능한 곤돌라 수열이 된다. 만약 7번 곤돌라가 이후에 고장이 난다면, 8번이 그 자리를 차지할 것이고 (3, 8, 5, 6, 2) 가 가능한 곤돌라 수열들 중 하나가 된다.</p>

<table class="table table-bordered" style="width:40%">
	<thead>
		<tr>
			<th>고장난 곤돌라</th>
			<th>새 곤돌라</th>
			<th>가능한 곤돌라 수열 중 하나</th>
		</tr>
		<tr>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>1</td>
			<td>6</td>
			<td>(4, 5, 6, 2, 3)</td>
		</tr>
		<tr>
			<td>4</td>
			<td>7</td>
			<td>(6, 2, 3, 7, 5)</td>
		</tr>
		<tr>
			<td>7</td>
			<td>8</td>
			<td>(3, 8, 5, 6, 2)</td>
		</tr>
	</tbody>
</table>

<p>교체 수열이라는 것은 고장난 곤돌라들의 번호를 고장난 순서에 따라 쓴 것이다. 직전의 예에서 교체 수열은 (1, 4, 7) 이다. 교체 수열 e이 곤돌라 수열 g를 만든다고 말을 할 수 있는데, 그것은 초기 상황에서 시작해서 r에 해당하는 방법으로 곤돌라들이 고장난 직후에, g가 가능한 곤돌라 수열들 중 하나인 경우를 의미한다.</p>

<p>이 문제에서는 주어진 수열(가능한 곤돌라 수열일 수도 아닐 수도 있음)을 만들 수 있는 교체 수열의 수를 세어서 그 값을 1,000,000,009 로 나눈 나머지를 계산해야 한다. 다음과 같이 선언된 함수 countReplacement 를 구현해야 한다.</p>

<ul>
	<li>countReplacement(n, inputSeq)
	<ul>
		<li>n: 입력 수열의 길이.</li>
		<li>inputSeq: 크기 인 배열; inputSeq[i]는 입력 수열의 번 원소이다 (0 ≤ i ≤ n-1).</li>
		<li>입력이 곤돌라 수열인 경우, 입력의 곤돌라 수열을 만들 수 있는 모든 교체 수열의 수를 센 다음에 (그 수는 매우 클수 있음) 그 결과를 1,000,000,009 로 나눈 나머지를 리턴해야 한다. 만약 입력이 곤돌라 수열이 아닌 경우 0을 리턴해야 한다. 입력이 곤돌라 수열이고 고장난 곤돌라가 하나도 없는 경우는 1을 리턴해야 한다.</li>
	</ul>
	</li>
</ul>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 입력 수열의 길이 n이 주어진다.</p>

<p>둘째 줄에는 inputSeq[0], ..., inputSeq[n-1]이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>countReplacement함수의 리턴값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<table class="table table-bordered" style="width:50%">
	<thead>
		<tr>
			<th>서브태스크</th>
			<th>inputSeq</th>
			<th>리턴 값</th>
			<th>교체 수열</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>1</td>
			<td>(1, 2, 7, 6)</td>
			<td>2</td>
			<td>(3, 4, 5) or (4, 5, 3)</td>
		</tr>
		<tr>
			<td>2</td>
			<td>(2, 3, 4, 12, 6, 7, 1)</td>
			<td>1</td>
			<td>(5, 8, 9, 10, 11)</td>
		</tr>
		<tr>
			<td>3</td>
			<td>(4, 7, 4, 7)</td>
			<td>0</td>
			<td>inputSeq가 곤돌라 수열이 아님</td>
		</tr>
		<tr>
			<td>4</td>
			<td>(3, 4)</td>
			<td>2</td>
			<td>(1, 2) or (2, 1)</td>
		</tr>
	</tbody>
</table>

				</div>
				</div>','4
1 2 7 6
','2
','MATH'),
                                                                                                                (1591,'BAEKJOON','https://www.acmicpc.net/problem/10103',10103,'주사위 게임','1초','256 MB',3,'<p>창영이와 상덕이는 게임을 하고 있다.</p>

<p>게임을 시작하는 시점에서, 두 사람의&nbsp;점수는 모두 100점이다.</p>

<p>게임은 여섯 면 주사위를 사용하며, 라운드로 진행된다. 매 라운드마다, 각 사람은 주사위를 던진다. 낮은 숫자가 나온 사람은 상대편 주사위에 나온 숫자만큼 점수를 잃게 된다. 두 사람의 주사위가 같은 숫자가 나온 경우에는 아무도 점수를 잃지 않는다.</p>

<p>게임이 끝난 이후에 두 사람의 점수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 라운드의 수 n (1 ≤ n ≤ 15)가 주어진다. 다음 n개 줄에는 두 정수가 주어진다. 첫 번째 정수는 그 라운드에서 창영이의 주사위에 나타난 숫자, 두 번째 정수는 상덕이의 주사위에 나타난 숫자이다. 두 정수는 항상 1보다 크거나 같고, 6보다 작거나 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 게임이 끝난 이후에 창영이의 점수, 둘째 줄에는 상덕이의 점수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 라운드는 상덕이의 승리이다. 따라서 창영이는 6점을 잃게 된다. 두 번째 라운드는 두 사람의 숫자가 같기 때문에, 아무도 점수를 잃지 않고 넘어간다. 세 번째 라운드의 승자는 창영이이기 때문에, 상덕이는 4점을 잃게 된다. 마지막 라운드는 창영이가 승리하고, 상덕이는 5점을 잃게 된다. 따라서, 창영이는 6점, 상덕이는 9점을 잃었다.</p>

				</div>
				</div>','4
5 6
6 6
4 3
5 2
','94
91
','MATH'),
                                                                                                                (1598,'BAEKJOON','https://www.acmicpc.net/problem/10156',10156,'과자','1초','256 MB',2,'<p>동수는 제과점에 과자를 사러 가는데 현재 가진 돈이 모자랄 경우 부모님께 모자란 돈을 받으려고 한다. 과자 한 개의 가격이 K, 사려고 하는 과자의 개수가 N이고, 현재 가진 돈의 액수를 M이라 할 때 여러분은 동수가 부모님께 받아야 하는 모자란 돈을 계산하려고 한다.&nbsp;</p>

<p>예를 들어, 과자 한 개의 가격이 30원, 사려고 하는 과자의 개수가 4개, 현재 동수가 가진 돈이 100원이라 할 때, 동수가 부모님께 받아야 하는 돈은 20원이다. 과자 한 개의 가격이 250원, 사려고 하는 과자의 개수가 2개, 현재 동수가 가진 돈이 140원이라 할 때, 동수가 부모님께 받아야 하는 돈은 360원이다. 과자 한 개의 가격이 20원, 사려고 하는 과자의 개수가 6개, 현재 동수가 가진 돈이 120원이라 할 때 동수가 부모님께 받아야 하는 돈은 0원이다. 과자 한 개의 가격이 20원, 사려고 하는 과자의 개수가 10개, 현재 동수가 가진 돈이 320원이라 할 때 동수가 부모님께 받아야 하는 돈은 역시 0원이다.&nbsp;</p>

<p>과자 한 개의 가격, 사려고 하는 과자의 개수와 동수가 현재 가진 돈의 액수가 주어질 때 동수가 부모님께 받아야 하는 돈의 액수를 출력하는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 과자 한 개의 가격 K, 사려고 하는 과자의 개수 N, 현재 동수가 가진 돈 M이 각각 공백을 사이에 두고 주어진다. 단, K, N은 1,000 이하의 양의 정수이고, M은 10만 이하의 양의 정수이다. (1 ≤ K, N ≤ 1,000, 1 ≤ M ≤ 100,000이다.)&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 줄에 동수가 부모님께 받아야 하는 돈의 액수를 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','300 4 1000
','200
','MATH'),
                                                                                                                (1601,'BAEKJOON','https://www.acmicpc.net/problem/10158',10158,'개미','0.15초(추가시간없음)','256 MB',8,'<p>가로 길이가 w이고 세로 길이가 h인 2차원 격자 공간이 있다. 이 격자는 아래 그림처럼 왼쪽 아래가 (0,0)이고 오른쪽 위가 (w,h)이다. 이 공간 안의 좌표 (p,q)에 개미 한 마리가 놓여있다. 개미는 오른쪽 위 45도 방향으로 일정한 속력으로 움직이기 시작한다. 처음에 (p,q)에서 출발한 개미는 1시간 후에는 (p+1,q+1)로 옮겨간다. 단, 이 속력으로 움직이다가 경계면에 부딪치면 같은 속력으로 반사되어 움직인다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/95e84480-219b-4628-a65d-7b08bc3758e5/-/preview/" style="height: 150px; width: 205px;"></p>

<p>위 그림은 6×4 격자에서 처음에 (4,1)에서 출발한 개미가 움직인 길을 보여주고 있다. 처음에 (4,1)에 있는 개미는 2시간 후에 (6,3)에 있으며 8시간 후에 (0,1)에 있다. 만일 그 개미가 처음에 (5,3)에 있었다면 매 시간마다 (6,4), (5,3), (4,2), (3,1)로 움직인다.&nbsp;</p>

<p>여러분은 크기 w×h인 격자 공간에서 처음에 (p,q)에서 출발하는 개미의 t시간 후의 위치 (x,y)를 계산하여 출력해야 한다. 개미는 절대 지치지 않고 같은 속력으로 이동한다고 가정한다.&nbsp;</p>

<p>문제에서 w와 h는 자연수이며 범위는 2 ≤ w,h ≤ 40,000이다. 그리고 개미의 초기 위치 p와 q도 자연수이며 범위는 각각 0 < p < w과 0 < q < h이다. 그리고 계산할 시간 t의 범위는 1 ≤ t ≤ 200,000,000이다.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫줄에는 w와 h가 공백을 사이에 두고 주어진다. 그 다음 줄에는 초기 위치의 좌표값 p와 q가 공백을 사이에 두고 주어진다. 3번째 줄에는 개미가 움직일 시간 t가 주어진다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 t 시간 후에 개미의 위치 좌표 (x,y)의 값 x와 y를 공백을 사이에 두고 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 4
4 1
8
','0 1
','MATH'),
                                                                                                                (1600,'BAEKJOON','https://www.acmicpc.net/problem/10162',10162,'전자레인지','1초','64 MB',3,'<p>3개의 시간조절용 버튼 A B C가 달린 전자레인지가 있다. 각 버튼마다 일정한 시간이 지정되어 있어 해당 버튼을 한번 누를 때마다 그 시간이 동작시간에 더해진다. 버튼 A, B, C에 지정된 시간은 각각 5분, 1분, 10초이다.</p>

<p>냉동음식마다 전자레인지로 요리해야할 시간 T가 초단위로 표시되어 있다. 우리는 A, B, C 3개의 버튼을 적절히 눌러서 그 시간의 합이 정확히 T초가 되도록 해야 한다. 단 버튼 A, B, C를 누른 횟수의 합은 항상 최소가 되어야 한다. 이것을 최소버튼 조작이라고 한다. </p>

<p>만일 요리시간이 100초라고 하면(T=100) B를 1번, C는 4번 누르면 된다. 이와 다르게 C를 10번 눌러도 100초가 되지만 이 경우 10번은 최소 횟수가 아니기 때문이 답이 될 수 없다. 이 경우 B 1번, C 4번, 총 5번이 최소버튼 조작이다. 그리고 T=234와 같이 3개의 버튼으로 시간을 정확히 맞출 수 없는 경우도 있다. </p>

<p>여러분은 주어진 요리시간 T초를 맞추기 위한 최소버튼 조작 방법을 구하는 프로그램을 작성해야 한다. </p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 요리시간 T(초)가 정수로 주어져 있으며 그 범위는 1 ≤ T ≤ 10,000 이다. </p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>여러분은 T초를 위한 최소버튼 조작의 A B C 횟수를 첫 줄에 차례대로 출력해야 한다. 각각의 횟수 사이에는 빈 칸을 둔다. 해당 버튼을 누르지 않는 경우에는 숫자 0을 출력해야한다. 만일 제시된 3개의 버튼으로 T초를 맞출 수 없으면 음수 -1을 첫 줄에 출력해야 한다. </p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','100
','0 1 4
','MATH'),
                                                                                                                (1602,'BAEKJOON','https://www.acmicpc.net/problem/10164',10164,'격자상의 경로','1초','256 MB',10,'<p>행의 수가 N이고 열의 수가 M인 격자의 각 칸에 1부터 N×M까지의 번호가 첫 행부터 시작하여 차례로 부여되어 있다. 격자의 어떤 칸은 ○ 표시가 되어 있다. (단, 1번 칸과 N × M번 칸은 ○ 표시가 되어 있지 않다. 또한, ○ 표시가 되어 있는 칸은 최대 한 개이다. 즉, ○ 표시가 된 칸이 없을 수도 있다.)&nbsp;</p>

<p>행의 수가 3이고 열의 수가 5인 격자에서 각 칸에 번호가 1부터 차례대로 부여된 예가 아래에 있다. 이 격자에서는 8번 칸에 ○ 표시가 되어 있다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/8299a142-dd28-48bc-a698-64b8789e4733/-/preview/" style="width: 258px; height: 125px;"></p>

<p>격자의 1번 칸에서 출발한 어떤 로봇이 아래의 두 조건을 만족하면서 N×M번 칸으로 가고자 한다.&nbsp;</p>

<ul>
	<li>조건 1: 로봇은 한 번에 오른쪽에 인접한 칸 또는 아래에 인접한 칸으로만 이동할 수 있다. (즉, 대각선 방향으로는 이동할 수 없다.)</li>
	<li>조건 2: 격자에 ○로 표시된 칸이 있는 경우엔 로봇은 그 칸을 반드시 지나가야 한다.&nbsp;</li>
</ul>

<p>위에서 보인 것과 같은 격자가 주어질 때, 로봇이 이동할 수 있는 서로 다른 경로의 두 가지 예가 아래에 있다.</p>

<ul>
	<li>1 → 2 → 3 → 8 → 9 → 10 → 15</li>
	<li>1 → 2 → 3 → 8 → 13 → 14 → 15</li>
</ul>

<p>격자에 관한 정보가 주어질 때 로봇이 앞에서 설명한 두 조건을 만족하면서 이동할 수 있는 서로 다른 경로가 총 몇 개나 되는지 찾는 프로그램을 작성하라.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫째 줄에는 격자의 행의 수와 열의 수를 나타내는 두 정수 N과 M(1 ≤ N, M ≤ 15), 그리고 ○로 표시된 칸의 번호를 나타내는 정수 K(K=0 또는 1 < K < N×M)가 차례로 주어지며, 각 값은 공백으로 구분된다. K의 값이 0인 경우도 있는데, 이는 ○로 표시된 칸이 없음을 의미한다. N과 M이 동시에 1인 경우는 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>주어진 격자의 정보를 이용하여 설명한 조건을 만족하는 서로 다른 경로의 수를 계산하여 출력해야 한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 5 8
','9
','MATH'),
                                                                                                                (1606,'BAEKJOON','https://www.acmicpc.net/problem/10166',10166,'관중석','1초(추가시간없음)','64 MB (추가 메모리 없음)',10,'<p>KOI 공연장의 관중석에는 가운데에 있는 무대를 중심으로 반지름이 자연수인 동심원(중심이 같은 여러 원들) 위에 다음과 같이 좌석들이 배치되어 있다. 반지름이 1인 원 위에는 좌석이 1개, 반지름이 2인 원 위에는 좌석이 2개, 이런 식으로 반지름이 D 인 원 위에는 좌석이 D 개가 있다. 또한, 무대에서 정확히 북쪽 방향에는 모든 원들에 좌석이 있으며, 하나의 원 위에 있는 좌석들은 동일한 간격을 두고 배치되어 있다.&nbsp;</p>

<p>이번 공연에 반지름이 D<sub>1</sub>보다 같거나 크고, D<sub>2</sub>(D<sub>1</sub> ≤ D<sub>2</sub>)보다 같거나 작은 원들에 배치된 좌석만을 활용하려고 한다. 단, 좌석을 점으로 간주했을 때, 다른 좌석에 의해 무대 중심이 가려지는 좌석은 사용하지 않고, 그렇지 않은 좌석은 모두 사용한다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/4efefa2f-be2b-4890-8111-4bfc62e999a3/-/preview/" style="width: 290px; height: 312px;"></p>

<p>위 그림은 D<sub>1</sub> = 3, D<sub>2</sub> = 6일 때, 배치된 좌석 및 좌석의 사용 여부를 나타낸다. 숫자는 원의 반지름을 나타내고, ●은 공연에 사용되는 좌석, ?은 공연에 사용되지 않는 좌석을 나타낸다.&nbsp;</p>

<p>원의 반지름 D<sub>1</sub>과 D<sub>2</sub>를 입력으로 받아 사용되는 좌석의 수를 출력하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 원의 반지름 D<sub>1</sub>과 D<sub>2</sub>가 양의 정수로 주어진다. 단, 1 ≤ D<sub>1</sub> ≤ D<sub>2</sub> ≤ 2,000이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>사용되는 좌석의 수를 나타내는 하나의 양의 정수를 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 6
','12
','MATH'),
                                                                                                                (1604,'BAEKJOON','https://www.acmicpc.net/problem/10178',10178,'할로윈의 사탕','1초','256 MB',3,'<p>할로윈데이에 한신이네는 아부지가 사탕을 나눠주신다. 하지만 한신이의 형제들은 서로 사이가 좋지않아 서른이 넘어서도 사탕을 공정하게 나누어 주지 않으면 서로 싸움이 난다. 매년 할로윈데이때마다 아부지는 사탕을 자식들에게 최대한 많은 사탕을 나누어 주시기 원하며 자신에게는 몇개가 남게되는지에 알고 싶어 하신다. 이런 아부지를 도와서 형제간의 싸움을 막아보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>가장 첫 번째 줄에는 테스트 케이스의 수가 입력되고, 각 테스트 케이스마다 사탕의 개수 c와 형제의 수&nbsp;v가 차례대로 입력된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 예제를 보고 ”You get __ piece(s) and your dad gets __ piece(s).” 형식에 맞추어 적절하게 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
22 3
15 5
99 8
7 4
101 5
','You get 7 piece(s) and your dad gets 1 piece(s).
You get 3 piece(s) and your dad gets 0 piece(s).
You get 12 piece(s) and your dad gets 3 piece(s).
You get 1 piece(s) and your dad gets 3 piece(s).
You get 20 piece(s) and your dad gets 1 piece(s).
','MATH'),
                                                                                                                (1605,'BAEKJOON','https://www.acmicpc.net/problem/10179',10179,'쿠폰','1초','256 MB',3,'<p>당신은 어떤 물건이라도 20% 할인해주는 쿠폰을 가지고 있다.</p>

<p>원래 가격이 주어질 때, 쿠폰을 사용하면 얼마가 되는지 알려주는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트케이스의 수가 주어진다.</p>

<p>각 줄에는 물건의 원래가격이 소수점 둘째자리까지 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>할인된 가격을 달러 단위로 출력한다.</p>

<p>나누어떨어지지 않을 때는 소수점 셋째 자리에서 반올림해서 둘째 자리까지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
100.00
59.99
20.00
','$80.00
$47.99
$16.00
','MATH'),
                                                                                                                (1619,'BAEKJOON','https://www.acmicpc.net/problem/10244',10244,'최대공약수들','5초','256 MB',16,'<p>n개의 수로 이루어진 수열 A가 주어질 때, 1≤lo≤hi≤n의 정의역을 가지는 함수 f(lo,hi)는 A<sub>lo</sub>부터 A<sub>hi</sub>까지 모든 원소들의 최대공약수로 정의된다. lo와 hi는 수열의 원소가 아닌 인덱스라는 점에 주의하자. 가능한 모든 lo와 hi의 값을 고려해볼 때, 수열 A에서 각각 다른 f(lo,hi)의 값은 몇 개나 존재할 수 있을까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 주어진다. 각각의 테스트 케이스는 수열의 길이인 한 개의 정수 n (1≤n≤100,000)이 포함된 줄로 시작하며, 다음 n개의 줄에는 각각 수열의 원소 a (1≤a≤100)가 수열의 순서대로 주어진다. n에 0이 입력되면 입력이 종료된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스에 대해, 입력된 수열이 가질 수 있는 f(lo,hi)의 서로 다른 값의 개수를 한 개의 정수로 출력한다. 답과 답 사이에는 공백이나 빈 줄은 허용되지 않는다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 테스트 케이스의 경우,</p>

<ul>
	<li>lo=1, hi=1, f(lo,hi)=4</li>
	<li>lo=1, hi=2, f(lo,hi)=2</li>
	<li>lo=2, hi=2, f(lo,hi)=6</li>
</ul>

<p>가능한 f(lo,hi)의 값은 총 세 개이다.</p>

				</div>
				</div>','2
4
6
3
3
6
8
0
','3
5
','MATH'),
                                                                                                                (1620,'BAEKJOON','https://www.acmicpc.net/problem/10246',10246,'부동산 경매','10초','256 MB',10,'<p>꿍은 꿍만의 독특한 경매방식으로 부동산 경매업계에서 꽤나 유명한 인물이다.</p>

<p>꿍이 경매하는 부동산들은&nbsp;한 줄로&nbsp;연속적으로&nbsp;나열된 집들인데, 편의상 맨 왼쪽부터 1번집, 2번집... 이라고 부른다고 하자. (0번집은 존재하지 않으며 집은 무한히 많다고 가정한다.)</p>

<p>이때, K번집은 K+1 원의 가격에 낙찰된다.</p>

<p>꿍은 어떤 손님이 N원을 갖고 있다면 연속된 집들의 가격 합이 N원이 되도록 낙찰받을 수 있는 선택사항들을 말해준다. 예를 들어, 어떤 손님이 5원을 갖고 있다면 꿍은 이 손님에게 1번집과 2번집(각각 2원과 3원)을 낙찰받도록 하거나 단순히 4번집(5원)을 낙찰받게 할 수 있다. 따라서 이 경우에는 2가지의 선택사항이 존재한다.</p>

<p>꿍은 갈수록 유명해져 이제 이러한 선택사항의 수를 계산하기엔 바쁘다. 여러분이 꿍을 위해 프로그램을 만들어주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>각 테스트 케이스는 하나의 정수 N (1≤N≤1,000,000) 으로 이루어져 있으며 손님이 갖고 있는 돈을 나타낸다.</p>

<p>입력의 끝은 0으로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각&nbsp;테스트케이스에 대해,&nbsp;각 줄에 고객이&nbsp;연속적으로 나열된 집을 낙찰받을 수 있는 경우의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
2
5
0
','0
1
2
','MATH'),
                                                                                                                (1627,'BAEKJOON','https://www.acmicpc.net/problem/10250',10250,'ACM 호텔','1초','256 MB',3,'<p><img alt="" src=https://www.acmicpc.net/upload/images2/acmhotel.png" style="float:right; height:202px; width:294px">ACM 호텔 매니저 지우는 손님이 도착하는 대로 빈 방을 배정하고 있다. 고객 설문조사에 따르면 손님들은 호텔 정문으로부터 걸어서 가장 짧은 거리에 있는 방을 선호한다고 한다. 여러분은 지우를 도와 줄 프로그램을 작성하고자 한다. 즉 설문조사 결과 대로 호텔 정문으로부터 걷는 거리가 가장 짧도록 방을 배정하는 프로그램을 작성하고자 한다.</p>

<p>문제를 단순화하기 위해서 호텔은 직사각형 모양이라고 가정하자. 각 층에 W 개의 방이 있는 H 층 건물이라고 가정하자 (1 ≤ H, W ≤ 99). 그리고 엘리베이터는 가장 왼쪽에 있다고 가정하자(그림 1 참고). 이런 형태의 호텔을 H × W 형태 호텔이라고 부른다. 호텔 정문은 일층 엘리베이터 바로 앞에 있는데, 정문에서 엘리베이터까지의 거리는 무시한다. 또 모든 인접한 두 방 사이의 거리는 같은 거리(거리 1)라고 가정하고&nbsp;호텔의 정면 쪽에만 방이 있다고 가정한다.</p>

<p style="text-align:center"><img alt="" src=https://www.acmicpc.net/upload/images2/elevator.png" style="height: 216.667px; width: 361.667px;"></p>

<p style="text-align:center">그림 1. H = 6 이고 W = 12 인 H × W 호텔을 간략하게 나타낸 그림</p>

<p>방 번호는 YXX 나 YYXX 형태인데 여기서 Y 나 YY 는 층 수를 나타내고 XX 는 엘리베이터에서부터 세었을 때의 번호를 나타낸다. 즉, 그림 1 에서 빗금으로 표시한 방은 305 호가 된다.</p>

<p>손님은 엘리베이터를 타고 이동하는 거리는 신경 쓰지 않는다. 다만 걷는 거리가 같을 때에는 아래층의 방을 더 선호한다. 예를 들면 102 호 방보다는 301 호 방을 더 선호하는데, 102 호는 거리 2 만큼 걸어야 하지만 301 호는 거리 1 만큼만 걸으면 되기 때문이다. 같은 이유로 102 호보다 2101 호를 더 선호한다.</p>

<p>여러분이 작성할 프로그램은 초기에 모든 방이 비어있다고 가정하에 이 정책에 따라 N 번째로 도착한 손님에게 배정될 방 번호를 계산하는 프로그램이다. 첫 번째 손님은 101 호, 두 번째 손님은 201 호 등과 같이 배정한다. 그림 1 의 경우를 예로 들면, H = 6이므로 10 번째 손님은 402 호에 배정해야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>프로그램은 표준 입력에서 입력 데이터를 받는다. 프로그램의 입력은 T 개의 테스트 데이터로 이루어져 있는데 T 는 입력의 맨 첫 줄에 주어진다. 각 테스트 데이터는 한 행으로서 H, W, N, 세 정수를 포함하고 있으며 각각 호텔의 층 수, 각 층의 방 수, 몇 번째 손님인지를 나타낸다(1 ≤ H, W ≤ 99, 1 ≤ N ≤ H × W).&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>프로그램은 표준 출력에 출력한다. 각 테스트 데이터마다 정확히 한 행을 출력하는데, 내용은 N 번째 손님에게 배정되어야 하는 방 번호를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
6 12 10
30 50 72
','402
1203
','MATH'),
                                                                                                                (1621,'BAEKJOON','https://www.acmicpc.net/problem/10253',10253,'헨리','1초','256 MB',11,'<p>이제 10 살이 된 헨리(Henry)는 수학에 소질이 있다. 수학선생님인 아메스(Ahmes)는 오늘 헨리에게 분수에 대해 가르쳐줬고, 헨리는 분수를 이리저리 계산해보는 것이 너무 재미있었다. 그러던 중에 헨리는 1 보다 작은 분수를 여러 개의 서로 다른 단위분수의 합으로 표현할 수 있다는 것을 알아내었다. 여기서 단위분수란 분자가 1 인 분수를 말한다. 헨리는 여러 개의 분수에 대해 이를 시도해봤고, 시도해본 분수들은 모두 서로 다른 단위분수의 합으로 표현할 수 있었다. 예를 들어, \(\frac{4}{23}\)은 \(\frac{1}{6} + \frac{1}{138}\)와 같이 두 개의 단위 분수의 합으로 나타낼 수 있다.&nbsp;</p>

<p>헨리는 이런 발견을 선생님인 아메스에게 자랑스럽게 이야기했다. 아메스는 이를 듣고는 크게 기뻐하며 어린 제자를 칭찬했고, 이와 같이 하나의 분수를 서로 다른 단위분수의 합으로 표현한 것을 헨리식 표현법(Henry representation)이라고 이름 지었다. 즉, 분수 \(\frac{a}{b}\)의 헨리식 표현법은 총합이 \(\frac{a}{b}\) 와 같게 되는 서로 다른 단위분수의 나열이다. 헨리와 아메스는 헨리식 표현법에 대하여 더욱 연구하였고, 마침내 모든 1 보다 작은 분수는 헨리식 표현법이 가능함을 증명하였다. 또한 헨리식 표현법이 유일하지 않다는 것도 알 수 있었다. 예를 들면, \(\frac{5}{7} = \frac{1}{2} + \frac{1}{5} + \frac{1}{70} = \frac{1}{2}+\frac{1}{6} + \frac{1}{21} = \frac{1}{2} + \frac{1}{7} + \frac{1}{14}\) 와 같이 여러 가지 다른 헨리식 표현법이 존재할 수 있다. 단, 정의에 의해, 헨리식 표현법에는 같은 단위분수가 두 개 이상 포함될 수 없으므로 \(\frac{2}{3} = \frac{1}{3} + \frac{1}{3}\) 는 헨리식 표현법이 아님을 유념해야 한다.</p>

<p>아메스와 헨리는 또한 주어진 분수의 헨리식 표현법을 구하는 간단한 방법도 고안해냈다. \(a < b\) 인 양의 정수 \(a\)와 \(b\)로 이루어진 분수 \(\frac{a}{b}\)가 주어질 때에, 먼저 \(\frac{1}{x_1} \le \frac{a}{b}\)를 만족하는 가장 큰 단위 분수 \(\frac{1}{x_1}\)를 계산한다. 그런 다음 \(\frac{a}{b}\) 에서 \(\frac{1}{x_1}\)를 뺀 나머지에 대하여 위의 과정을 반복한다. 즉, \(\frac{1}{x_2} \le \frac{a}{b} - \frac{1}{x_1}\)를 만족하는 가장 큰 단위분수 \(\frac{1}{x_2}\)를 계산하고 뺀다. 이러한 과정을 나머지가 남지 않을 때까지 반복한다. 그러면 서로 다른 단위분수들 \(\frac{1}{x_1}, \frac{1}{x_2}, \frac{1}{x_3}, \dots\)을 순서대로 얻게 되며 그들의 합은 정확히 \(\frac{a}{b}\)와 같아진다. 아메스와 헨리는 이 알고리즘이 항상 종료하며 합이 \(\frac{a}{b}\)가 되는 서로 다른 단위분수들, 즉 헨리식 표현법을 출력함을 증명하였다.</p>

<p>아메스와 헨리는 당신에게 그들의 알고리즘을 컴퓨터 프로그램으로 구현해줄 것을 부탁했다. 입력으로 주어지는 1 보다 작은 분수 \(\frac{a}{b}\) 를 아메스와 헨리의 알고리즘을 수행하여 헨리식 표현법을 계산할 때에 마지막 단위 분수의 분모를 출력하는 프로그램을 작성하시오. 예를 들어. \(\frac{a}{b} = \frac{5}{7}\)라면, 아메스와 헨리의 알고리즘은 \(\frac{5}{7} = \frac{1}{2} + \frac{1}{5} + \frac{1}{70}\) 을 출력하게 되므로 당신의 프로그램은 반드시 70 을 출력해야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력 데이터는 표준입력을 사용한다. 입력은 T 개의 테스트 데이터로 구성된다. 입력의 첫 번째 줄에는 테스트 데이터의 개수 T 가 정수로 주어진다. 각 테스트 데이터는 한 줄로 구성되며, 여기에는 입력 분수 \(\frac{a}{b}\)를 의미하는 두 개의 정수 \(a\)와 \(b\) (1 ≤&nbsp;\(a\) < \(b\)&nbsp;≤&nbsp;10,000) 가 주어진다. 이때, \(a\)와 \(b\)는 서로소이며, 입력분수 \(\frac{a}{b}\) 에 대해 아메스와 헨리의 알고리즘을 실행했을 때에 출력되는 단위 분수가 순서대로 \(\frac{1}{x_1},\frac{1}{x_2},\frac{1}{x_3},\cdots,\frac{1}{x_m}\) 라면, \(bx_1x_2 \cdots x_{m-1} < 2^{31}\) 의 부등식을 만족한다고 가정할 수 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 표준출력을 사용한다. 각 테스트 데이터에 대해, 정확히 한 줄을 출력해야 하며 여기에는 정수 하나만을 출력한다. 이 정수는 아메스와 헨리의 알고리즘을 입력 분수 \(\frac{a}{b}\) 에 대해 실행했을 때, 출력되는 헨리식 표현법의 마지막 단위분수의 분모와 같아야 한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
4 23
5 7
8 11
','138
70
4070
','MATH'),
                                                                                                                (1622,'BAEKJOON','https://www.acmicpc.net/problem/10258',10258,'스위치 배열','1초','256 MB',16,'<p>새로운 잠금 장치가 개발되었다.</p>

<p>이 장치는 열리거나 닫힌 상태를 갖는 여러 스위치(s<sub>1</sub>,&nbsp;s<sub>2&nbsp;</sub>,..,&nbsp;s<sub>i-1</sub>,&nbsp;s<sub>i</sub>)들로 이루어져 있으며, 각각의 스위치는 0&nbsp;또는 1의 상태를 갖는다. 따라서, 각 장치는 0과 1로 이루어진 스위치&nbsp;배열로 나타낼 수 있다.</p>

<p>다음 표는 8개의 스위치를 가진 스위치 배열의&nbsp;예제이다.</p>

<table class="table table-bordered" style="width:50%">
	<thead>
		<tr>
			<th>switch</th>
			<th>s<sub>1</sub></th>
			<th>s<sub>2</sub></th>
			<th>s<sub>3</sub></th>
			<th>s<sub>4</sub></th>
			<th>s<sub>5</sub></th>
			<th>s<sub>6</sub></th>
			<th>s<sub>7</sub></th>
			<th>s<sub>8</sub></th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<th>state</th>
			<td>0</td>
			<td>1</td>
			<td>1</td>
			<td>0</td>
			<td>1</td>
			<td>1</td>
			<td>0</td>
			<td>0</td>
		</tr>
	</tbody>
</table>

<p>N개의 스위치를 가진 배열의 각 스위치를 작동시키는 규칙은 다음과 같다.</p>

<ul>
	<li>규칙 1) S<sub>N</sub>은 아무 때나 토글하여 상태를 바꿀 수 있다.</li>
	<li>규칙 2) S<sub>i+1</sub> = 1이며 S<sub>i+2</sub>, S<sub>i+3</sub>, ..., S<sub>N-1</sub>, S<sub>N</sub>은 모두&nbsp;0일 때, S<sub>i</sub>를 토글하여 상태를 바꿀 수 있다. 이 규칙은 스위치&nbsp;S<sub>i+2</sub>, S<sub>i+3</sub>, ..., S<sub>N-1</sub>, S<sub>N</sub>가 없을 때도 적용된다. 예를 들어, S<sub>N-1</sub>은 S<sub>N</sub>이 1이기만 하면 토글할 수 있다.</li>
	<li>규칙 3)&nbsp;한 번에 하나의 스위치만 토글할 수 있다.</li>
</ul>

<p>모든 스위치의 상태가 0일 때 이 장치는 열린다.</p>

<p>위의 규칙에 따라 배열을 모두 0으로 바꾸는 최소 토글&nbsp;횟수를 구하는 것이 당신의 과제이다.</p>

<p>아래의 표는 배열 1111 을 0000 으로 바꾸는 최소 횟수의&nbsp;연산을 나타낸 것이다. 1111&nbsp;의&nbsp;경우, 최소 10번의 연산으로 배열을 0000 으로 만들 수 있다.</p>

<table class="table table-bordered" style="width:50%">
	<thead>
		<tr>
			<th>operation</th>
			<th>s1</th>
			<th>s2</th>
			<th>s3</th>
			<th>s4</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<th>0</th>
			<td>1</td>
			<td>1</td>
			<td>1</td>
			<td>1</td>
		</tr>
		<tr>
			<th>1</th>
			<td>1</td>
			<td>1</td>
			<td>0</td>
			<td>1</td>
		</tr>
		<tr>
			<th>2</th>
			<td>1</td>
			<td>1</td>
			<td>0</td>
			<td>0</td>
		</tr>
		<tr>
			<th>3</th>
			<td>0</td>
			<td>1</td>
			<td>0</td>
			<td>0</td>
		</tr>
		<tr>
			<th>4</th>
			<td>0</td>
			<td>1</td>
			<td>0</td>
			<td>1</td>
		</tr>
		<tr>
			<th>5</th>
			<td>0</td>
			<td>1</td>
			<td>1</td>
			<td>1</td>
		</tr>
		<tr>
			<th>6</th>
			<td>0</td>
			<td>1</td>
			<td>1</td>
			<td>0</td>
		</tr>
		<tr>
			<th>7</th>
			<td>0</td>
			<td>0</td>
			<td>1</td>
			<td>0</td>
		</tr>
		<tr>
			<th>8</th>
			<td>0</td>
			<td>0</td>
			<td>1</td>
			<td>1</td>
		</tr>
		<tr>
			<th>9</th>
			<td>0</td>
			<td>0</td>
			<td>0</td>
			<td>1</td>
		</tr>
		<tr>
			<th>10</th>
			<td>0</td>
			<td>0</td>
			<td>0</td>
			<td>0</td>
		</tr>
	</tbody>
</table>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄엔 테스트 케이스의 수 T가 주어진다.</p>

<p>각 테스트 케이스마다 비트스트링 B가 한 줄에 주어지며, B의 첫 비트가 S<sub>1</sub>,&nbsp;마지막 비트가 S<sub>N</sub>이다.</p>

<p>B의 길이는&nbsp;2 ≤ |B| ≤ 31 을 만족한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 한 줄에 모든 스위치를 0으로 만들기 위한 최소의 연산 횟수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1111
11111
1010101010
000
000000010
','10
21
819
0
3
','MATH'),
                                                                                                                (1630,'BAEKJOON','https://www.acmicpc.net/problem/10262',10262,'주사위 게임','1초','256 MB',4,'<p><img alt="" src=https://www.acmicpc.net/upload/images2/dg.png" style="float:right; height:208px; width:257px"> 꿍과 석은 군대에서 수많은 보드게임을 해서 일반적으로 6개의 면을 갖는 주사위가 아닌 특이한 주사위들, 예를 들면, 47,48,...,56이 적혀있는 10개의 면을 가진 주사위 등을 갖고 있다.</p>

<p>할일없는 군대에서, 꿍과 석은 각자 갖고있는 2개의 주사위를 굴려서 합이 높은 사람이 이기는 새로운 주사위게임을 만들어보기로 했다.</p>

<p>모든 주사위는 숫자 a,a+1,...,b 가 각면에 적혀있는데 이때, a와 b는 그 주사위에서 가장 작은 숫자와 가장 큰 숫자를 나타낸다. 모든 숫자들은 각 면에 하나씩만 적혀있으므로 주사위는 b-a+1개의 면을 갖게되는 것이다.</p>

<p>꿍과 석의 주사위가 어떻게 생겼는지 주어졌을 때 누가 승률이 높을까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 꿍의 주사위를 알려주는 네 개의 숫자, a<sub>1</sub>, b<sub>1</sub>, a<sub>2</sub>, b<sub>2</sub> 가 주어진다.</p>

<p>주사위는 각 면에 a<sub>i</sub>, a<sub>i</sub>+1, ... , b<sub>i </sub> 의 숫자들을 갖고 있고, 1 ≤ a<sub>i</sub> ≤ b<sub>i</sub> ≤ 100 이다.</p>

<p>주사위는 최소 4개의 면을 가질 것이므로 a<sub>i</sub> + 3 ≤ b<sub>i</sub> 임을 유추할 수 있다.</p>

<p>두 번째 줄에는 같은 방식으로 석의 주사위가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>승률이 더 높은 플레이어를 출력하면 된다.</p>

<p>꿍의 승률이 더 높으면 "Gunnar", 석의 승률이 더 높으면 "Emma"를 출력하고 두 명의 승률이 같을 경우, "Tie"를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 4 1 4
1 6 1 6
','Emma
','MATH'),
                                                                                                                (1623,'BAEKJOON','https://www.acmicpc.net/problem/10275',10275,'골드 러시','1초','256 MB',5,'<p>강산이와 지현이는 모험 중에 어느 숲 속 깊숙히에서 신비한 동굴을 발견했다.</p>

<p>들떠서 동굴에 입장한 강산이와 지현이는 결국 동굴의 끝에서 거대한 금괴 하나를 발견했다.</p>

<p>하지만 둘이서 들고 나가기엔 금괴는 너무 거대하고 무거웠다.</p>

<p>방법이 없을까 고민하던 중, 지현이가 금괴에 숫자 n이 쓰여 있는 것을 발견했다.</p>

<p>그 순간 요정이 나타나 말했다.</p>

<ul>
	<li>요정 : 이 금괴는 무거워. 이건 무려 2<sup>n</sup> 펨토그램인걸. 게다가 n은 62까지 갈 수 있다구.</li>
	<li>강산 : 어, 그렇다면 운이 좋은걸요! 지현이 가방은 정확히 a 펨토그램을 담을 수 있고, 제 가방은 b 펨토그램을 담을 수 있는데 이때 a + b = 2<sup>n</sup>을 만족하니까요!</li>
	<li>지현 : 근데 어떻게 금괴를 자르지?</li>
	<li>요정 : 내 마법으로 어떤 물건이든 정확히 반토막을 낼 수 있어. 근데 난 마법을 하루에 한 번밖에 못 쓰는데..</li>
</ul>

<p>강산이와 지현이는 며칠 후, 금괴를 모두 나눠 갖고 동굴을 나섰다.</p>

<p>이때, 강산이와 지현이가 동굴을 나선 건 동굴에 들어온 뒤 며칠 뒤일까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄엔 테스트 케이스의 수 t ≤ 1000 가 주어진다.</p>

<p>그리고 t줄에 걸쳐, 정수 n, a, b가 주어진다.&nbsp;<span style="line-height:1.6em">( a, b ≥ 1, a + b = 2</span><sup style="line-height:1.6em">n</sup><span style="line-height:1.6em">, 1 ≤ n ≤ 62.)</span></p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 한 줄에 강산이와 지현이가 동굴을 최대한 빨리 떠났을 때 며칠이 지났는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
2 2 2
2 1 3
10 1000 24
','1
2
7
','MATH'),
                                                                                                                (1635,'BAEKJOON','https://www.acmicpc.net/problem/10327',10327,'피보나치 문제해결전략','2초','256 MB',18,'<p><img alt="" src=https://www.acmicpc.net/upload/images2/crime_scene.png" style="float:right; height:425px; width:286px"></p>

<p>피보나치 수열의 매력에 빠진 현욱이는 피보나치 수열을 너무나도 사랑한 나머지 피보나치 문제해결전략 책을 사서 읽다가 Gabonacci 수열의 존재에 대해 알게 된다.</p>

<div>
<p>당연히 피보나치 수열에 대해서 알고 있을 것이다. 만약 모른다면&nbsp; <a href="https://www.acmicpc.net/problem/2747">2747번</a> 문제를 풀어 보는 것을 권장한다. n번째 피보나치 항을 F<sub>n</sub>이라 할 때 F<sub>1</sub> = 1, F<sub>2</sub> = 2이며, 그 이후의 항들은 모두 바로 전 2개 항의 합이다. 이러한 귀납적 정의에 따라 피보나치 수열은 1, 1, 2, 3, 5, 8, 13, . . .. 으로 이어진다.</p>

<p>이제 이를 좀 더 일반화해 보자. 어떤 수열이&nbsp;피보나치 수열과 같은&nbsp;재귀적 정의 &nbsp;</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;G <sub>i</sub> = G<sub>i-1</sub> + G<sub>i-2</sub> for i > 2</p>

<p>를 따르지만, 처음 두 항을&nbsp;G <sub>1</sub> ≤ G<sub>2</sub>&nbsp;를 만족하게 하면서&nbsp;임의로 설정할 것이다. 이를 Gabonacci 수열이라고 한다. 만약&nbsp;G<sub>1</sub> = 1, G<sub>2</sub> = 3이면, 널리 알려진 수열인 Lucas numbers(1, 3, 4, 7, 11, 18, 29, . . ..)를 얻을 수 있다.</p>

<p>적절한 두 개의 첫 항을 골라서, 당신이 원하는 어떤 자연수를&nbsp;반드시 Gabonacci 수열에서 등장하게 할 수 있다. 예를 들면, n은 1, n-1로 시작하는 Gabonacci 수열에서 등장한다. 그러나 현욱이는&nbsp;이건 너무 쉽다고 생각했다. 그래서 가능한 한 작은 항으로 시작해 n이 등장하게 하고 싶다.</p>
</div>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 테스트 케이스의 개수 T가 주어진다. (T ≤ 100) 두 번째 줄부터 각 테스트 케이스에 대해 나타나게 해야 할&nbsp;정수 n이 주어진다.&nbsp;(2 ≤ n ≤ 10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 한 줄에 두 자연수 a, b를 출력한다. (0&nbsp;<&nbsp;a ≤ b) G<sub>1</sub> = a, G<sub>2</sub> = b, 그리고 어떤 자연수 k에 대해 G<sub>k</sub> = n 이다. a, b는 가능한 한 제일 작아야 하며, 이는&nbsp;어떤 자연수 a, b에 대해서 a, b로 시작하는 Gabonacci 수열에서 n이 등장하고,&nbsp;b < b 이거나 b = b 이고 a < a 인 a, b 가 존재하면 안 된다는 뜻이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
89
123
1000
1573655
842831057
','1 1
1 3
2 10
985 1971
2 7
','MATH'),
                                                                                                                (1653,'BAEKJOON','https://www.acmicpc.net/problem/10340',10340,'L∞ Jumps','3초','256 MB',27,'<p>Given two points (p, q) and (p′, q′) in the XY-plane, the L<sub>∞</sub> distance between them is defined as max(|p ? p′|, |q ? q′|). In this problem, you are given four integers n, d, s, t. Suppose that you are initially standing at point (0, 0) and you need to move to point (s, t). For this purpose, you perform jumps exactly n times. In each jump, you must move exactly d in the L<sub>∞</sub> distance measure. In addition, the point you reach by a jump must be a lattice point in the XY-plane. That is, when you are standing at point (p, q), you can move to a new point (p′, q′) by a single jump if p′ and q′ are integers and max(|p ? p′|, |q ? q′|) = d holds.</p>

<p>Note that you cannot stop jumping even if you reach the destination point (s, t) before you perform the jumps n times.</p>

<p>To make the problem more e interesting, suppose that some cost occurs for each jump. You are given 2n additional integers x<sub>1</sub>, y<sub>1</sub>, x<sub>2</sub>, y<sub>2</sub>, ... , x<sub>n</sub>, y<sub>n</sub> such that max(|x<sub>i</sub>|, |y<sub>i</sub>|) = d holds for each 1 ≤ i ≤ n. The cost of the i-th (1-indexed) jump is defined as follows: Let (p, q) be a point at which you are standing before the i-th jump. Consider a set of lattice points that you can jump to. Note that this set consists of all the lattice points on the edge of a certain square. We assign integer 1 to point (p + x<sub>i</sub> , q + y<sub>i</sub>). Then, we assign integers 2, 3, ... , 8d to the remaining points in the set in the counter-clockwise order. (Here, assume that the right direction is positive in the x-axis and the upper direction is positive in the y-axis.) These integers represent the costs when you perform a jump to these points.</p>

<p>For example, Figure K.1 illustrates the points reachable by your i-th jump when d = 2 and you are at (3, 1). The numbers represent the costs for x<sub>i</sub> = ?1 and y<sub>i</sub> = ?2.</p>

<p>Compute and output the minimum required sum of the costs for the objective.</p>

<p style="text-align: center;"><img alt="" src=https://www.acmicpc.net/upload/images2/linf.png" style="height:340px; width:397px"></p>

<p style="text-align: center;">Figure K.1. Reachable points and their costs</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>The input consists of a single test case.</p>

<pre>n d s t
x<sub>1</sub> y<sub>1</sub>
x<sub>2</sub> y<sub>2</sub>
.
.
.
x<sub>n</sub> y<sub>n</sub></pre>

<p>The first line contains four integers. n (1 ≤ n ≤ 40) is the number of jumps to perform. d (1 ≤ d ≤ 10<sup>10</sup>) is the L<sub>∞</sub> distance which you must move by a single jump. s and t (|s|, |t| ≤ nd) are the x and y coordinates of the destination point. It is guaranteed that there is at least one way to reach the destination point by performing n jumps.</p>

<p>Each of the following n lines contains two integers, x<sub>i</sub> and y<sub>i</sub> with max(|x<sub>i</sub>|, |y<sub>i</sub>|) = d.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>Output the minimum required cost to reach the destination point.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 2 4 0
2 2
-2 -2
-2 2
','15
','MATH'),
                                                                                                                (1649,'BAEKJOON','https://www.acmicpc.net/problem/10407',10407,'2 타워','1초','256 MB',8,'<p>2 타워의 높이 H는\[2^{2^{2^{\cdot^{\cdot^{\cdot 2}}}}}\]에서 숫자 2가 나타나는 횟수로 정의된다. 2 타워의 값은 해당 표현식의 값으로 정의된다. 예를 들어, 높이 1의 2 타워 값은&nbsp;2이고, 높이 2의 2 타워 값은&nbsp;4이며, 높이 4의 2 타워 값은\[2^{2^{2^{2}}} = 65536\]이므로 높이 5의 2 타워 값은 2<sup>65536</sup>이며 이 값은 2003...6736이고&nbsp;다 쓰기에는 여백이 부족하다.</p>

<p>H의 값이 커짐에 따라 2 타워의 값이 너무 커지므로, 우리는 이 값을 3으로 나눈 나머지만이 궁금하다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫째&nbsp;줄에&nbsp;높이 H가 주어진다. (1 ≤ H ≤ 10<sup>100</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 높이가 H인 2 타워의 값을 3으로 나눈 나머지를 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','2
','MATH'),
                                                                                                                (1654,'BAEKJOON','https://www.acmicpc.net/problem/10409',10409,'서버','1초','256 MB',3,'<p>당신은 FCFS(First-Come, First-Served)의 규칙에 따라 요청된 일을 처리하는 서버를 담당하게 되었다. 매일, 당신은 일을 처리하기 위해 최대 T분 동안 서버에 시간을 할당할 수 있다. 당신은 오늘 주어진 시간동안 몇개의 일이 완료될 수 있는지 알고싶다.</p>

<p>예시를 들어보겠다. T = 180이고, 요청된 일들의 수행시간이 요청된 순으로 각각 45, 30, 55, 20, 80, 20분이다. 그러면, 단 4개의 일만이 완료될 수 있다. 처음 4개의 일의 수행시간은 150분으로 주어진 시간 내에 완료될 수 있지만, 처음 5개의 일의 수행시간은 230분으로 주어진 시간 180분보다 크기 때문에 완료될 수 없다. 처음 4개의 일을 수행한 뒤 6번째의 일을 수행해도 T를 초과하지 않지만 5번째 일을 수행할 수 없기 때문에 6번째 일을 수행할 수 없음을 참고해라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄은 두 정수 n과 T이며 (1 ≤ n ≤ 50, 1 ≤ T ≤ 500) n은 일의 개수를 나타낸다. 두 번째 줄은 n개의 100 이하인 자연수가 입력되며, 입력된 각 일의 수행 시간을 나타낸다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>일이 First-come, First-served 규칙에 따라 처리될 때, T분 안에 완료될 수 있는 일들의 개수를 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 180
45 30 55 20 80 20
','4
','MATH'),
                                                                                                                (1660,'BAEKJOON','https://www.acmicpc.net/problem/10419',10419,'지각','1초','256 MB',3,'<p>창영이는 이번학기에 어떤 교양수업을 듣고 있다. 그런데, 그 교수님은 매우 지각을 자주 하시고 게다가 수업에 지각을 하였을 경우 수업을 일찍 마쳐 주기까지 하는 것을 발견하였다.</p>

<p>창영이는 교수님의 지각시간 0이상의 정수 t와 수업을 일찍 마쳐주는 시간 s 사이에 다음과 같은 관계가 있음을 알았다.</p>

<p style="text-align:center">s = t<sup>2</sup></p>

<p>문득 창영이는 수업시간 d가 주어졌을 때, 교수님이 얼마나 지각을 할 수 있는지 궁금해졌고, 여러분은 창영이를 도와서 교수님이 지각할 수 있는 최대의 시간을 알아보자. 물론, 교수님이 도착하자마자 수업을 일찍 마쳐서 수업이 끝나는 것도 가능하다. 예를 들어, 수업시간이 6분인 경우, 교수님이 2분 지각을 하면, 4분간 수업을 일찍 마치게 되고, 2+4=6이기 때문에 바로 수업을 끝낼 수 있다. 또 다른 예로, 수업시간이 7분인 경우 교수님이 2분 지각을 하면, 수업을 4분 일찍 마쳐줄 수 있고, 2+4≤7 이므로 가능한 경우가 되고, 교수님이 3분 지각을 하게 되면, 수업을 9분 일찍 마쳐야 되고, 3+9>7 이므로, 교수님이 3분 지각을 하는 것은 불가능하다. 따라서, 교수님은 수업시간이 7분인 경우 교수님은 최대 2분간 지각을 할 수 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>창영이가 궁금한 경우의 수 T(1 ≤ T ≤ 100)가 첫 번째 줄에 주어지고, 이어서 T 개의 줄에 수업시간 d(1 ≤ d ≤ 10,000, d는 정수)가 차례대로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>수업시간에 따른 교수님이 지각할 수 있는 최대 시간 t를 정수로 구해서 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1
2
5
6
7
','0
1
1
2
2
','MATH'),
                                                                                                                (1648,'BAEKJOON','https://www.acmicpc.net/problem/10420',10420,'기념일 1','1초','256 MB',4,'<p>세계적으로 유명한 커플 상근이와 나예는 2016년 4월 3일이 사귀기 시작한지 200일이 되는 날이었다. 상근이는 그 날이 200일인줄 몰라서 나예한테&nbsp;혼났다. 이런 일이 다시는 없도록 하기 위해서 기념하려고 하는 날 수가 양의 정수로 주어지면 기념일 날짜를 출력하는 프로그램을 작성하여 다시는 혼나는 일이 없도록 하려 한다. 이 커플의 사귀기 시작한 날짜는 2015년 9월 17일이다. 하지만, 알 수 없는 이유에 의해서 문제를 풀 때는 사귀기 시작한 날짜를 2014년 4월 2일로 처리해야 한다.</p>

<p>2월이 28일까지 있는 년을 평년이라 하고, 29일까지 있는 년을 윤년이라 한다. 윤년은 연도가 4의 배수이면서, 100의 배수가 아닐 때 또는 400의 배수일 때이다. 예를들어 1900년은 4의 배수이지만 100의 배수이기 때문에 윤년이 아니다. 하지만 2000년은 400의 배수이기 때문에 윤년이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 기념하려는 날이 양의 정수 N (1 ≤ N ≤ 10,000)으로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 기념일의 날짜를 YYYY-MM-DD 의 형식으로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','200
','2014-10-18
','MATH'),
                                                                                                                (1664,'BAEKJOON','https://www.acmicpc.net/problem/10422',10422,'괄호','2초','256 MB',12,'<p>‘(‘, ‘)’ 문자로만 이루어진 문자열을 괄호 문자열이라 한다. 올바른 괄호 문자열이란 다음과 같이 정의된다. ()는 올바른 괄호 문자열이다. S가 올바른 괄호 문자열이라면, (S)도 올바른 괄호 문자열이다. S와 T가 올바른 괄호 문자열이라면, 두 문자열을 이어 붙인 ST도 올바른 괄호 문자열이다. (()())()은 올바른 괄호 문자열이지만 (()은 올바른 괄호 문자열이 아니다. 괄호 문자열이 주어졌을 때 올바른 괄호 문자열인지 확인하는 방법은 여러 가지가 있다.</p>

<p>하지만 우리가 궁금한 것은 길이가 L인 올바른 괄호 문자열의 개수이다. 길이 L이 주어졌을 때 길이가 L인 서로 다른 올바른 괄호 문자열의 개수를 출력하는 프로그램을 만들어 보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트케이스의 개수를 나타내는 T (1 ≤ T ≤ 100)가 주어진다. 두 번째 줄부터 각 테스트케이스마다 괄호 문자열의 길이를 나타내는 L이 주어진다. (1 ≤ L ≤ 5000)&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 길이가 L인 올바른 괄호 문자열의 개수를 1,000,000,007로 나눈 나머지를 출력하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1
2
4
','0
1
2
','MATH'),
                                                                                                                (1665,'BAEKJOON','https://www.acmicpc.net/problem/10428',10428,'마법의 약','1초','256 MB',16,'<p>귀여운 민균이는 오늘도 어떻게 하면 귀여움을 받을 수 있는지 연구하느라 바쁘다. 그러던 중 신비의 나라 라는 곳에 가면 귀여움을 무한정으로 받을 수 있다고 BJ로부터 들었다. 하지만 BJ는 민균이에게 힘들게 알아낸 이 방법을 그냥 알려 줄 수 없다고 하면서 민균이에게 다음과 같은 게임을 제안했다.</p>

<p>N개의 가방이 있고, 정확히 하나의 가방에만 신비의 나라로 가는 마법의 약이 무한히 많이 들어 있고, 나머지 가방에는 먹어도 아무 효과가 없는 약이 무한히 많이 들어 있다. 각각의 가방은 서로 구분이 가능하지만, 가방에 든 약들은 모두 동일하게 생겨서 서로 구분이 불가능하다.</p>

<p>만약, 마법의 약을 먹었을 때에는 즉시 신비의 나라로 이동한다.</p>

<p>민균이는 이제 마법의 약이 어느 가방에 들어있는지 알아내기 위해 하나의 실험을 하려고 한다.</p>

<p>실험을 시작하기 전에 앞서 먼저 원하는 수만큼의 친구들을 부른다. 그 다음에 실험을 여러 단계로 나누어서 진행을 한다. 각 실험 단계에서는 먼저, 현재 신비의 나라로 가지 않은 친구들 중 원하는 친구들을 선택하고, 민균이가 원하는 대로 그 친구들에게 약물을 먹어보게 하려고 한다. 물론 어떤 친구한테는 아무 약도 먹지 않게 할 수 있고 어떤 친구한테는 여러 개의 약을 먹게 할 수 있다. 만약 어떤 친구가 마법의 약을 먹어서 신비의 나라로 가버렸다면 그 친구는 다음 단계에서부터 실험에 참여할 수 없다.</p>

<p>이제 여러분이 할 일은 민균이를 도와 가방의 개수 N, 가능한 실험의 단계 E 이 주어 졌을 때, E 번만의 실험으로 마법의 약물을 알아낼 수 있게 하는 가장 적은 친구의 수 F의 값을 구하는 것이다. 만약 가장 적은 친구의 수를 제대로 구하지 않았을 경우에는 BJ가 이 게임을 즉시 중단해버릴 것이므로 정확히 최소의 친구의 수를 구해야 한다.</p>

<p>예를 들어, 가방이 10개고 가능한 실험의 단계가 2번일 때, 가장 간단한 방법은 친구를 10명을 부른 뒤 각자 한 가방을 맡아 약물을 먹어보게 하면 1번만의 실험으로 마법의 약을 알아낼 수 있다. 하지만, 친구를 3명만 부른 뒤 첫 번째 단계의 실험에서 1, 2, 3 의 가방에 있는 약물을 친구 1에게 주고 4, 5, 6 의 가방에 있는 약물을 친구 2에게 주고 7, 8, 9 의 가방에 있는 약물을 친구 3에게 준다. 만약 아무도 사라지지 않았다면 가방 10에 있는 약물이 마법의 약이라는 것을 알 수 있다. 만약 친구 한 명이 사라졌다고 하자, 그리고 그 친구가 1번 친구라고 하자. 그러면 두 번째 실험 단계에서 1의 가방에 있는 약물을 친구 2에게 주고 2의 가방에 있는 약물을 친구 3에게 준다. 그렇게 하게 되면, 가능한 경우는 친구2 또는 친구 3이 사라지거나 아무도 사라지지 않는 경우가 있고, 두 단계의 실험으로 어느 가방에 마법의 약이 들어있는지 알아낼 수 있다.&nbsp;</p>

<p>하지만, 친구를 두 명만 부른다면 어떻게 해도 2단계의 실험으로 마법의 약이 들어있는 가방을 알아낼 수 없다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>먼저 친구의 수가 궁금한 경우의 수 T (1 ≤ T ≤ 100) 가 주어지고 이어서 T 개의 줄에 N (1 ≤ N ≤ 1,000,000) 과 E (1 ≤ E ≤ 10) 가 차례대로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 N 과 E에 대해 가장 작은 F의 값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1 1
10 2
1000 2
2 10
50 4
','0
3
7
1
3
','MATH'),
                                                                                                                (1652,'BAEKJOON','https://www.acmicpc.net/problem/10430',10430,'나머지','1초','256 MB',1,'<p>(A+B)%C는 ((A%C) + (B%C))%C&nbsp;와 같을까?</p>

<p>(A×B)%C는 ((A%C) × (B%C))%C 와 같을까?</p>

<p>세 수 A, B, C가 주어졌을 때, 위의 네 가지 값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 A, B, C가 순서대로 주어진다. (2&nbsp;≤ A, B, C ≤ 10000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 (A+B)%C, 둘째 줄에 ((A%C) + (B%C))%C, 셋째 줄에 (A×B)%C, 넷째 줄에 ((A%C) × (B%C))%C를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 8 4
','1
1
0
0
','MATH'),
                                                                                                                (1680,'BAEKJOON','https://www.acmicpc.net/problem/10434',10434,'행복한 소수','1초','256 MB',9,'<p>Q. : 아래의 수열에서 다음에 올 수를 찾으시오.</p>

<p>313 331 367 ...</p>

<p>경복 : ??</p>

<p>강산 : 379.</p>

<p>경복 : 뭐?</p>

<p>강산 : 행복한 소수잖아.</p>

<p>경복 : 행복한 뭐?</p>

<p>강산 : 그러니까, 자리수의 제곱의 합을 구하는 연산을 계속 반복했을 때 1이 되는 수를 행복한 수라고 하잖아. 행복한 소수는 그 중 소수인 수이고.</p>

<p>7은 분명 소수이다. 과연 행복할까?</p>

<ul>
	<li>7 → 7<sup>2</sup> = 49</li>
	<li>49 → 4<sup>2</sup> + 9<sup>2</sup> = 97</li>
	<li>97 → 9<sup>2</sup> + 7<sup>2</sup> = 130</li>
	<li>130 → 1<sup>2</sup> + 3<sup>2</sup> + 0<sup>2</sup> = 10</li>
	<li>10 → 1<sup>2</sup> + 0<sup>2</sup> = 1</li>
</ul>

<p>7은 행복한 수이다 ?.</p>

<p>사실 7은 행복한 소수 중 가장 작은 수이다. (이 문제에서는 1을 소수가 아닌 것으로 생각한다)</p>

<p>어떤 수가 주어지면 이 수가 행복한 소수인지 판정해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 수 P가 주어진다. (1 ≤ P ≤ 1000)</p>

<p>각 테스트 케이스는 테스트 케이스 번호와 행복한 소수인지 판정해야 할 정수인 M으로 이루어져 있다. (1 ≤ m ≤ 10000).</p>

<p>&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다, 테스트 케이스의 번호, 입력받은 수, 만일 M이 행복한 소수라면 YES 아니라면 NO를 공백으로 각각 구분하여 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 1
2 7
3 383
4 1000
','1 1 NO
2 7 YES
3 383 YES
4 1000 NO
','MATH'),
                                                                                                                (1681,'BAEKJOON','https://www.acmicpc.net/problem/10436',10436,'무한 유리수 트리','1초','256 MB',12,'<p>무한 유리수 트리는 완전 이진 트리이며, 다음과 같이 정의된다.</p>

<ul>
	<li>루트는 1/1이다.</li>
	<li>p/q의 왼쪽 자식은 p/(p+q)이다.</li>
	<li>p/q의 오른쪽 자식은 (p+q)/q이다.</li>
</ul>

<p>트리의 첫 세 층은 아래와 같이 구성된다.</p>

<p style="text-align: center;"><img src="/userupload/portableangel/201504/64a62f517eeb70b1830d8a12b59e044a.png" style="font-family: arial, helvetica, verdana, tahoma, sans-serif; line-height: 1.6em; width: 360px; height: 148.333px;"></p>

<p>이 무한 유리수 트리를 레벨 오더로(그림에서는 화살표 방향) 순회하여 얻어지는 수들을 나열하면 유리수 수열 F(n)을 얻을 수 있다. 첫 몇 개의 항은 아래와 같다.</p>

<p>F(1) = 1/1, F(2) = 1/2, F(3) = 2/1, F(4) = 1/3, F(5) = 3/2, F(6) = 2/3, …</p>

<p>입력으로 기약분수 p/q가 주어지면 F(n)에서 주어진 유리수의 다음 수가 무엇인지 찾는 프로그램을 작성하여라.</p>

<p>즉, F(n)=p/q일 때 F(n+1)을 찾으면 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 수 P가 주어진다. (1 ≤ P ≤ 1000)</p>

<p>각 테스트 케이스마다 테스트 케이스의 번호와 기약분수 하나가 공백으로 구분되어 주어진다.</p>

<p>기약분수는 항상 p/q꼴이며 공백은 주어지지 않는다. p는 분수의 분자이며 q는 분모이다.</p>

<p>모든 테스트 케이스에서 p와 q는 서로소이며, 0 ≤ p, q ≤ 2147483647을 만족한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 첫 줄에 테스트 케이스의 번호와 정답을 공백으로 구분하여 출력한다.</p>

<p>답이 되는 기약분수는 입력 형식과 동일하게 분자/분모 형태로 출력하며, 사이에 공백을 두어선 안 된다.</p>

<p>모든 테스트 케이스에서 답이 되는 분수의 분자와 분모는 32bit 정수 범위를 넘지 않는다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1 1/1
2 1/3
3 5/2
4 2178309/1346269
5 1/10000000
','1 1/2
2 3/2
3 2/5
4 1346269/1860498
5 10000000/9999999
','MATH'),
                                                                                                                (1682,'BAEKJOON','https://www.acmicpc.net/problem/10437',10437,'자라나는 직교 나선','1초','256 MB',12,'<p>자라나는 직교 나선이란 원점에서 출발하여 연속적으로 돌아가는 나선이다. 첫 부분은 항상 오른쪽으로 출발하며(양의 X축 방향), 그 다음 부분은 위로(양의 Y축 방향), 그 다음은 왼쪽으로(음의 X축 방향), 그 다음은 아래로(음의 Y축 방향) 진행한다. 단, 나선의 각 부분은 바로 이전의 부분보다 1 이상 증가한 길이를 가져야 한다. 첫 부분의 길이는 1 이상인 어떤 자연수라도 가능하다. 아래는 1,2,4,6,7,9,11,12,15,20의 길이로 자라나는 직교 나선의 예시이다.</p>

<p style="text-align: center;"><img src="https://www.acmicpc.net/upload/images2/spiral.png"></p>

<p>1사분면의 어떤 점 (x,y)가 주어졌을 때, 직교 나선이 자라나서 그 점에 도달할 수 있을까? 있다면 어떤 방법으로 자라나는 것이 최소의 총합 길이를 가질까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 수 P가 주어진다. (1 ≤ P ≤ 1000)</p>

<p>각 테스트 케이스는 테스트 케이스의 번호 T와 문제에서 설명한 점 X,Y로 이루어져 있다. (1 ≤ x ≤ 10000, 1 ≤ y ≤ 10000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 테스트 케이스의 번호를 출력하고,</p>

<p>만일 어떤 방법으로 자라나더라도 도달할 수 없는 점이라면 NO PATH를, 도달 가능하다면 최소 총합 길이로 도달하기 위해 필요한 성장 횟수와 그 방법(매번 자라난 길이)을 출력한다.</p>

<p>점까지의 경로가 존재하는 모든 테스트 케이스에서 나선은 22회 이하의 성장으로 목적지에 도달 가능하다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 1 1
2 3 5
3 8 4
','1 NO PATH
2 2 3 5
3 6 1 2 3 9 10 11
','MATH'),
                                                                                                                (1667,'BAEKJOON','https://www.acmicpc.net/problem/10438',10438,'페리 수열의 합','1초','256 MB',19,'<p>양의 정수 N에 대해, (0 < a ≤ b), (1 ≤ b ≤ N) 의 조건을 만족하는 모든 기약분수 a/b와 0/1, 1/1을 오름차순으로 나열한 것을 N번째 페리 수열이라 한다.</p>

<p>예를 들어, 6번째 페리 수열은 아래와 같다.</p>

<p><em>0/1, 1/6, 1/5, 1/4, 1/3, 2/5, 1/2, 3/5, 2/3, 3/4, 4/5, 5/6, 1/1</em></p>

<p>N번째 페리 수열의 분모만을 차례대로 써서 만든 아래와 같은 b 수열이 있다.</p>

<p><em>b[1], b[2], ..., b[K]</em></p>

<p>이때, 페리 수열의 합이란 i = 1부터 K-1까지 b[i]/b[i+1]의 합을 의미한다.</p>

<p>예를 들어, 6번째 페리 수열의 합은 아래와 같다.</p>

<p><em>1/6 + 6/5 + 5/4 + 4/3 + 3/5 + 5/2 + 2/5 + 5/3 + 3/4 + 4/5 + 5/6 + 6/1 = 35/2</em></p>

<p>자연수 N에 대해 N번째 페리 수열의 합을 출력하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 수 P가 주어진다. (1 ≤ P ≤ 10000)</p>

<p>각 테스트 케이스는 테스트 케이스의 번호 T와 문제에서 설명한 N의 값이 공백으로 구분되어 주어진다. (2 ≤ N ≤ 10000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 테스트 케이스의 번호와 페리 수열의 합을 출력한다.</p>

<p>합을 출력할 땐 항상 기약분수여야 하며, 합을 기약분수로 나타냈을 때 분모가 1이라면 분자만 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>N+1번째 페리 수열에는 N번째 페리 수열의 모든 분수에 N+1과 서로소인 N 이하의 자연수의 개수만큼의 분수가 추가로 들어간다.</p>

				</div>
				</div>','4
1 6
2 15
3 57
4 9999
','1 35/2
2 215/2
3 2999/2
4 91180457/2
','MATH'),
                                                                                                                (1658,'BAEKJOON','https://www.acmicpc.net/problem/10448',10448,'유레카 이론','1초','256 MB',5,'<p>삼각수 T<sub>n</sub>(n ≥ 1)는 [그림]에서와 같이 기하학적으로 일정한 모양의 규칙을 갖는 점들의 모음으로 표현될 수 있다.</p>

<p style="text-align: center;"><img alt="" src=https://www.acmicpc.net/upload/images2/eureka.png" style="width: 346.667px; height: 82.5px;"></p>

<p style="text-align: center;">[그림]</p>

<p>자연수 n에 대해 n ≥ 1의 삼각수 T<sub>n</sub>는 명백한 공식이 있다.</p>

<p>T<sub>n</sub> = 1 + 2 + 3 + ... + n = n(n+1)/2</p>

<p>1796년, 가우스는 모든 자연수가 최대 3개의 삼각수의 합으로 표현될 수 있다고 증명하였다. 예를 들어,</p>

<ul>
	<li>4 = T<sub>1</sub> + T<sub>2</sub></li>
	<li>5 = T<sub>1</sub> + T<sub>1</sub> + T<sub>2</sub></li>
	<li>6 = T<sub>2</sub> + T<sub>2</sub> or 6 = T<sub>3</sub></li>
	<li>10 = T<sub>1</sub> + T<sub>2</sub> + T<sub>3</sub> or 10 = T<sub>4</sub></li>
</ul>

<p>이 결과는 증명을 기념하기 위해 그의 다이어리에 “Eureka! num = Δ + Δ + Δ” 라고 적은것에서 유레카 이론으로 알려졌다. 꿍은 몇몇 자연수가 정확히 3개의 삼각수의 합으로 표현될 수 있는지 궁금해졌다. 위의 예시에서, 5와 10은 정확히 3개의 삼각수의 합으로 표현될 수 있지만 4와 6은 그렇지 않다.</p>

<p>자연수가 주어졌을 때, 그 정수가 정확히 3개의 삼각수의 합으로 표현될 수 있는지 없는지를 판단해주는 프로그램을 만들어라. 단, 3개의 삼각수가 모두 달라야 할 필요는 없다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>프로그램은 표준입력을 사용한다. 테스트케이스의 개수는 입력의 첫 번째 줄에 주어진다. 각 테스트케이스는 한 줄에 자연수 K (3 ≤ K ≤ 1,000)가 하나씩 포함되어있는 T개의 라인으로 구성되어있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>프로그램은 표준출력을 사용한다. 각 테스트케이스에대해 정확히 한 라인을 출력한다. 만약 K가 정확히 3개의 삼각수의 합으로 표현될수 있다면 1을, 그렇지 않다면 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
10
20
1000
','1
0
1
','MATH'),
                                                                                                                (1671,'BAEKJOON','https://www.acmicpc.net/problem/10474',10474,'분수좋아해?','2초','256 MB',3,'<p>당신은 학생들의 기초수학 학습을 돕는 소프트웨어를 개발하는 팀의 개발자이다. 당신은 가분수를 대분수(?)로 출력하는 부분을 개발해야 한다. 진분수는 분자가 분모보다 작은 분수이다; 대분수는 정수부를 따로 떼어주고 남는 부분을 진분수로 쓰는 기법이다. 예제로, 27/12는 대분수로 2 3/12이다. 기약분수로 만들지 말아야 한다.(3/12를 1/4로 바꿔 출력하지 마시오.)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>한 줄에 걸쳐 한 테스트 케이스가 입력된다. 각각의 테스트 케이스는 [1, 2^31 - 1]범위의 두 정수가 입력된다. 첫 번째 정수는 분자고 두 번째는 분모이다. "0 0" 입력이 들어오는 라인에서 입력을 종료한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 한 줄에 걸쳐 주어진 입력에 맞는 대분수를 공백토큰으로 구분하여 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','27 12
2460000 98400
3 4000
0 0
','2 3 / 12
25 0 / 98400
0 3 / 4000
','MATH'),
                                                                                                                (1672,'BAEKJOON','https://www.acmicpc.net/problem/10477',10477,'경운기','3초','256 MB',12,'<p>연돌이는 세순이에게서 경운기를 훔쳐서 좌표평면으로 나왔다! 하지만 연돌이는 운전을 끔찍하게 못해서 다음 규칙에 의해서만 움직일 수 있다:</p>

<ol>
	<li>각 움직임은 x축 양의 방향이나 y축 양의 방향에 평행해야 한다.</li>
	<li>n번째 움직임은 선택한 방향으로 2^(n - 1) 칸만큼 움직인다.</li>
</ol>

<p>연돌이가 있는 평면은 (0, 0), (A, 0), (0, B), (A, B)를 꼭짓점으로 가지는 직사각형 모양이다. 연돌이가 (0, 0)에서 출발한다고 할 때 평면의 경계를 포함하여 연돌이가 방문할 수 있는 좌표의 종류는 몇 가지인가?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에는 테스트 케이스의 수 T(0 ≤&nbsp;T ≤ 100)이 입력된다. 이어지는 N줄에 걸쳐 두 정수 A, B(1 ≤&nbsp;A, B ≤&nbsp;10<sup>8</sup>)이 입력된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 한 줄에 걸쳐 연돌이가 N번째 평면에서 도달할 수 있는 좌표의 종류를 출력한다.</p>

<p>첫 테스트 케이스에서 연돌이는 (0, 0), (0, 1), (1, 0), (1, 2), (2, 1), (0, 3)에 방문하는 것이 가능하다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
2 3
7 7
','6
15
','MATH'),
                                                                                                                (1666,'BAEKJOON','https://www.acmicpc.net/problem/10504',10504,'덧셈','5초','256 MB',13,'<p>학기 시작을 앞두고, 광현이는 숫자놀음에 빠져버렸다. 펜을 굴리다 문득 연속되는 수로 표현되지 못하는 수는 뭐가 있을까 갑자기 궁금해졌다. 하나씩 세고 있던 광현이가 안쓰러운 승균이는 빼어난 코딩실력으로 답을 알려주려 한다.</p>

<p>정수 N이 주어지면, 두 개 이상의 연속되는 양의 정수의 합으로 나타내는 프로그램을 작성하시오.</p>

<p>예를 들면, 10 = 1 + 2 + 3 + 4 로 표현 가능하고, 24 = 7 + 8 + 9 로 표현 가능하다.</p>

<p>만약 여러 개의 표현이 존재한다면, 가장 짧은 표현을 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트케이스 T가 주어진다.</p>

<p>다음 T개의 줄에 걸쳐서 한&nbsp;줄씩&nbsp;정수 N&nbsp;(1 ≤ N ≤ 10<sup>9</sup>) 가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트케이스마다 한 줄씩 아래의&nbsp;예와&nbsp;같이&nbsp;정답을 출력한다.</p>

<p><code>N = a + (a+1) + ... + b</code></p>

<p>만약 표현이 존재하지 않다면,&nbsp;IMPOSSIBLE 을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
8
10
24
','IMPOSSIBLE
10 = 1 + 2 + 3 + 4
24 = 7 + 8 + 9
','MATH'),
                                                                                                                (1684,'BAEKJOON','https://www.acmicpc.net/problem/10539',10539,'수빈이와 수열','1초','32 MB',4,'<p>수빈이는 심심해서 수열을 가지고 놀고 있다. 먼저, 정수 수열 A를 쓴다.&nbsp;그리고 그 아래에 정수 수열 A의 해당 항까지의&nbsp;평균값을 그 항으로 하는 정수 수열 B를 쓴다.&nbsp;</p>

<p>예를 들어, 수열 A가 1, 3, 2, 6, 8이라면, 수열 B는 1/1, (1+3)/2, (1+3+2)/3, (1+3+2+6)/4, (1+3+2+6+8)/5, 즉, 1, 2, 2, 3, 4가 된다.&nbsp;</p>

<p>수열 B가 주어질 때, 수빈이의 규칙에 따른 수열 A는 뭘까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 수열 B의 길이만큼 정수 N(1 ≤ N ≤ 100)이 주어지고,&nbsp;둘째 줄에는 수열 B<sub>i</sub>를 이루는 N개의 정수가 주어진다. (1&nbsp;≤ B<sub>i<sup>&nbsp;</sup></sub>≤ 10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에는 수열 A를 이루는 N개의 정수를 출력한다. (1 ≤ A<sub>i</sub> ≤ 10<sup>9</sup>)</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
2
','2
','MATH'),
                                                                                                                (1687,'BAEKJOON','https://www.acmicpc.net/problem/10541',10541,'싸리와 버드의 피라미드','1초','256 MB',15,'<p>싸리와 버드는 정말 할 게 없어서 뒷뜰에 높이가 N인 피라미드를 만들고 그 위에 좋아하는 단어를 쓰기로 했다. 아래 그림처럼 단어를 반복해서 지그재그 모양으로 써 내려간다.&nbsp;</p>

<pre>     J
    N A
   J E T
  J A N I
 A N J E T
N A J A N I
</pre>

<p>버드는 피라미드의&nbsp;K개의&nbsp;줄을 고르고 각 줄을&nbsp;a<sub>i</sub>라고 하고, 그 줄의 문자를 골라 c<sub>i</sub>라고 한다. 그리고 싸리에게 "a<sub>i</sub>행에 c<sub>i</sub>가 몇 번 나오게?"라고 묻는다. 싸리를 도와 버드의 질문에 대답해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄은 정수 N(1 ≤ N ≤ 10<sup>18</sup>)이 주어진다.&nbsp;</p>

<p>둘째 줄은 알파벳 대문자로 이루어진 단어가 주어진다. 단어의 길이는 10<sup>6</sup>을 넘지 않는다.</p>

<p>셋째 줄은 정수 K(1 ≤ K ≤ 50,000)가 주어진다. (K는&nbsp;버드가 고른 줄의 수이다.)</p>

<p>그 아래 K개의 줄에는 각각 a<sub>i</sub>, c<sub>i</sub>(1 ≤ a<sub>i</sub> ≤ N, c<sub>i</sub>는 알파벳)&nbsp;쌍이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>K줄만큼 출력한다. i번째 줄은 a<sub>i</sub>행에 나오는 c<sub>i</sub>의 개수이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
JANJETINA
5
1 J
1 A
6 N
6 I
5 E
','1
0
2
1
1
','MATH'),
                                                                                                                (1693,'BAEKJOON','https://www.acmicpc.net/problem/10562',10562,'나이트','60초','256 MB',20,'<p style="text-align:center"><img alt="" src=https://www.acmicpc.net/upload/images2/knights.png" style="height:119px; width:229px"></p>

<p>강호는 M행 N열 크기의 체스판 위에 나이트를 놓으려고 한다. 각각의 칸에는 최대 1개의 나이트가 놓여질 수 있다.</p>

<p>이때, 체스판 위에 있는 나이트가 서로 공격을 할 수 있으면 안 된다. 나이트가 놓여져 있을 때, 공격할 수 있는 칸의 위치는 아래 그림에 X로 표시되어 있다.</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10562/1.png" style="height:150px; width:145px"></p>

<p>체스판의 크기가 주어졌을 때, 나이트를 놓을 수 있는 방법의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T (T ≤ 10)가 주어진다. 각각의 테스트 케이스는 두 정수 M과 N으로 이루어져 있다. (1 ≤ M ≤ 4, 1 ≤ N ≤ 10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스마다, 나이트를 놓을 수 있는 방법의 수를 1,000,000,009로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 2
2 2
3 2
4 31415926
','4
16
36
413011760
','MATH'),
                                                                                                                (1692,'BAEKJOON','https://www.acmicpc.net/problem/10569',10569,'다면체','5초','256 MB',3,'<p style="text-align:center"><img alt="" src="https://www.acmicpc.net/upload/images2/poly.png"></p>

<p>수학자가 구를 깎아서 볼록다면체를 만들었다. 이 수학자는 임의의 볼록다면체에 대해 (꼭짓점의 수) - (모서리의 수) + (면의 수) = 2가 성립한다는 것을 알고 있다. 그래서 구를 깎는 게 취미인 이 사람은 꼭짓점, 모서리와 면의 수를 기록할 때 꼭짓점과 모서리의 수만 세고 면의 수는 세지 않는다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 1 이상 100 이하의 자연수 T가 주어진다.</p>

<p>다음 T개의 줄에 4 이상 100 이하의 자연수 V와 E가 공백을 사이에 두고 주어진다. V와 E는 각각 꼭짓점의 개수와 모서리의 개수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 V와 E에 대해 볼록다면체의 면의 수를 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
8 12
4 6
','6
4
','MATH'),
                                                                                                                (1697,'BAEKJOON','https://www.acmicpc.net/problem/10599',10599,'페르시아의 왕들','2초','256 MB',3,'<p>마야는&nbsp;페르시아의 왕들에 대해 관심이&nbsp;있다. 그녀는 최근 자신이 좋아하는 왕들의 나이가 궁금해졌고, 검색을 해서 정보를 얻기 시작했다.</p>

<p>하지만 불행하게도 대부분의 경우 정확한 왕의 출생일과 사망일을 얻지 못했고, 대신 출생, 사망했을거라 추정되는 때의 범위를 얻었다. 예를 들면 키루스 2세는 600BC에서 575BC사이에 출생했고, 530BC에 사망했다. 따라서 키루스 2세는 최소 45살에서 최대 70살의 인생을 살았다.</p>

<p>마야는 자신이 좋아하는 왕들에 대해 출생과 사망의 범위가 적힌 리스트를 길게 만들었다. 하지만 이 길이가 너무 길기때문에 우리가 왕들 나이의 최소와 최댓값을 대신 구해주자.</p>

<p>만약 왕이 x년도에 태어나고 y년도에 죽었다면 그는 y - x살을 산 것이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>테스트 케이스는 여러줄에 걸쳐 입력된다. 각 테스트 케이스는 4개의 정수 a, b, c, d (-5000 ≤ a ≤ b ≤ c ≤ d ≤ 2000)로 이뤄진다. [a, b]는 출생일의 범위, [c, d]는 사망일의 범위이다. a, b, c, d의 입력이 모두 0일 경우 프로그램을 종료한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 최소나이와 최대나이를 공백으로 나눠 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>0년은 실제로는 존재하지 않으나, 이 문제에서는 존재한다.</p>

				</div>
				</div>','100 110 180 185
-600 -575 -530 -530
-25 10 72 86
0 0 0 0
','70 85
45 70
62 111
','MATH'),
                                                                                                                (1715,'BAEKJOON','https://www.acmicpc.net/problem/10707',10707,'수도요금','1초','256 MB',3,'<p>JOI군이 살고 있는 지역에는 X사와 Y사, 두 개의 수도회사가 있다. 두 회사의 수도요금은 한 달간 수도의 사용량에 따라 다음과 같이 정해진다.</p>

<ul>
	<li>X사 : 1리터당 A엔.</li>
	<li>Y사 : 기본요금은 B엔이고, 사용량이 C리터 이하라면 요금은 기본요금만 청구된다. 사용량이 C리터가 넘었을 경우 기본요금 B엔에 더해서 추가요금이 붙는다. 추가요금은 사용량이 C리터를 넘었을 경우 1리터를 넘었을 때마다 D엔이다.</li>
</ul>

<p>JOI군의 집에서 한 달간 쓰는 수도의 양은 P리터이다.</p>

<p>수도요금이 최대한 싸게 되도록 수도회사를 고를 때, JOI군의 집의 1달간 수도요금을 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 5줄이고 한 줄에 하나씩 정수가 입력된다.</p>

<ul>
	<li>첫 번째 줄에는 X사의 1리터당 요금 A가 입력된다.</li>
	<li>두 번째 줄에는 Y사의 기본요금 B가 입력된다.</li>
	<li>세 번째 줄에는 Y사의 요금이 기본요금이 되는 사용량의 상한 C가 입력된다.</li>
	<li>네 번째 줄에는 Y사의 1리터 당 추가요금 D가 입력된다.</li>
	<li>다섯 번째 줄에는 JOI군의 집에서 사용하는 한 달간 수도의 양 P가 입력된다.</li>
</ul>

<p>입력되는 정수 A,B,C,D,P는 전부 1 이상 10000 이하이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>JOI군의 집에서 지불하는 한 달간 수도요금을 첫째 줄에 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>입출력예제 1에서, JOI군의 집에서 사용하는 수도의 양은 10리터이다.</p>

<ul>
	<li>X사의 수도요금은 9 × 10 = 90엔이다.</li>
	<li>JOI군의 집에서 사용한 양이 20리터 이하이므로 Y사의 수도요금은 기본요금인 100엔이다.</li>
</ul>

<p>JOI군의 집은 수도요금이 더 싼 X사를 고르고, 이때의 한 달치 수도요금은 90엔이다.</p>

<p>입출력예제 2에서, JOI군의 집에서 사용하는 수도의 양은 250리터이다.</p>

<ul>
	<li>X사의 수도요금은 8 × 250 = 2000엔이다.</li>
	<li>JOI군의 집에서 사용한 양이 100리터 이상이므로 초과량은 250 - 100 = 150리터이다. 따라서 Y사의 수도요금은 기본요금인 300엔에 더해서 10 × 150 = 1500엔의 추가요금이 붙고, 총 요금은 300 + 1500 = 1800엔이 된다.</li>
</ul>

<p>JOI군의 집은 수도요금이 더 싼 Y사를 고르고, 이때의 한 달치 수도요금은 1800엔이다.</p>

				</div>
				</div>','9
100
20
3
10
','90
','MATH'),
                                                                                                                (1714,'BAEKJOON','https://www.acmicpc.net/problem/10729',10729,'업적의 노예 1','3초','256 MB',17,'<p>경근이는 요즘 isRPG라는 웹게임을 열심히 하고 있다. 제목에 RPG가 들어가 있으니 알 수 있겠지만,&nbsp;이 게임에는&nbsp;캐릭터가 사용할 수 있는 많은 장비 아이템들이 있다.&nbsp;모든 장비는 주어진 방법을&nbsp;따라 재료를 모아 만들고,&nbsp;만들어진 장비의 옵션은 정해진 범위 내에서 무작위하게 결정된다. 만약&nbsp;만들어진 장비가 마음에 들지 않는다면&nbsp;장비를 해체하여 사용한 재료를 일부분 돌려받을 수 있다.</p>

<p>isRPG에는 요즈음의 많은 게임이 그러하듯 업적이라는 시스템이 있어서 어떤 항목에 대해 일정 수치를 달성하게 되면 업적을 달성할 수 있다. 경근이가 현재 관심 있어 하는 항목은 "특정 개수 이상의 장비 제작하기"와 "특정 개수 이상의 장비 분해하기"이다.</p>

<p>현재 isRPG에서 가장 쉽게 제작할 수 있는 아이템의 최고봉은 나무 단검이다. 나무 단검의 재료는 나무 쪼가리 한&nbsp;종류뿐이며, 이는 상점에서 쉽게 구매할 수 있기 때문이다. 업적을 달성하는 것과&nbsp;제작하는 아이템의 질은 아무런 상관이 없으므로 경근이는 나무 단검을 많이많이 깎으려고 한다!</p>

<p>나무 쪼가리 \(N\)개를 소모하면 나무 단검 하나를 제작할 수 있다.&nbsp;나무 단검 하나를 분해하면 나무 쪼가리를 적으면&nbsp;\(0\)개,&nbsp;많으면 \(K\)개까지&nbsp;돌려받을 수 있다. 이때 나무 쪼가리를 \(x\) (\(0 \leq x \leq K\))개&nbsp;돌려받을 확률은,&nbsp;\(x\)의 값과 상관 없이, 모든&nbsp;\(x\)에 대해&nbsp;\(1/(K+1)\)이다.</p>

<p>보물을 가진 용들을 많이많이 죽여서 많은 전리품을 얻은 경근이는 상점에서 나무 쪼가리를 \(M\)개 구입했다. 현재&nbsp;경근이는 나무 단검을 하나도 가지고 있지 않다. 경근이는 이제부터 나무 쪼가리로 나무 단검을 하나도 만들 수 없을 때까지 제작하고, 가지고 있는 나무 단검을 모두&nbsp;분해하는 작업을&nbsp;반복하려고 한다. 경근이는 수많은 경험을 통해, 모든 작업이 끝난 후에 나무 쪼가리가 인벤토리 창에 남아 있는 것은 매우 불쾌한 일이라는 것을 잘 알고 있다. 그러므로&nbsp;경근이는 모든 작업이 끝난 후 나무 쪼가리가 0개 남을 확률이 얼마인지&nbsp;알고 싶어 한다. 이런 생각을 하고 나니 더 나아가 나무쪼가리가 \(i\) (\(0 \leq&nbsp;i < N\))개 남을 확률도 알고 싶어졌다. 경근이를 도와주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 나무 단검 하나를 만드는 데 필요한 나무 쪼가리의 개수 \(N\), 나무 단검 하나를 분해했을 때&nbsp;얻을 수 있는 나무 쪼가리의 최대 개수 \(K\) (\( 1 \leq K < N \leq 10^3\)), 현재 경근이가 가지고 있는 나무 쪼가리의 개수 \(M\)이 공백을 사이로 두고 주어진다.</p>

<p>이 문제는 세&nbsp;개의 부분 문제로 이루어져 있다.</p>

<p><a href="https://www.acmicpc.net/problem/10729" style="line-height: 1.6em;">1번 문제</a>의 입력은&nbsp;\(0&nbsp;\leq M&nbsp;\leq 10^{6}\)을 만족하며 해결하면 10점을 얻을 수 있다.</p>

<p><a href="https://www.acmicpc.net/problem/10730" style="line-height: 20.7999992370605px;">2번 문제</a>의 입력은&nbsp;\(0&nbsp;\leq M&nbsp;\leq 10^{12}\)을 만족하며 해결하면 40점을 얻을 수 있다.</p>

<p><a href="https://www.acmicpc.net/problem/10731" style="line-height: 20.7999992370605px;">3번 문제</a>의 입력은&nbsp;\(M&nbsp;= -1\)을 만족하며 해결하면 50점을 얻을 수 있다.&nbsp;이 부분 문제는 앞의 문제와는 다르게 \(M = -1\)인데,&nbsp;이는 \(M\)이 무한대로 수렴할 때의 확률의 극한값을 정답으로 구해야 함을 의미한다. 이 극한값이 존재하며 유리수라는&nbsp;사실은 증명되어 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>\(i\)번째 줄에는 나무 쪼가리가 \(i-1\)개 남을 확률을 출력한다. 나무 쪼가리는 \(N-1\)개&nbsp;이하만큼&nbsp;남게 될 것이므로, 출력은 \(N\)줄이어야 한다.</p>

<p>좀더 정확하게 판별하기 위해, 확률을 기약분수로 \( {p}\over{q} \)로 나타냈을&nbsp;때, \(p-qr \equiv&nbsp;0&nbsp;\pmod{1,000,000,007}&nbsp;\)을 만족하는 \(0\) 이상 \(1,000,000,007\) 미만의 정수 \(r\)을 출력해야 한다. 이 정수 \(r\)이 존재하며, 이 범위 내에서 유일하다는 사실은 증명되어 있다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>순서대로 \( \frac{1}{3} \),\( \frac{1}{3} \),\( \frac{1}{3} \),\( 0 \)을 의미한다.</p>

				</div>
				</div>','4 2 4','333333336
333333336
333333336
0','MATH'),
                                                                                                                (1719,'BAEKJOON','https://www.acmicpc.net/problem/10730',10730,'업적의 노예 2','3초','256 MB',22,'<p>경근이는 요즘 isRPG라는 웹게임을 열심히 하고 있다. 제목에 RPG가 들어가 있으니 알 수 있겠지만,&nbsp;이 게임에는&nbsp;캐릭터가 사용할 수 있는 많은 장비 아이템들이 있다.&nbsp;모든 장비는 주어진 방법을&nbsp;따라 재료를 모아 만들고,&nbsp;만들어진 장비의 옵션은 정해진 범위 내에서 무작위하게 결정된다. 만약&nbsp;만들어진 장비가 마음에 들지 않는다면&nbsp;장비를 해체하여 사용한 재료를 일부분 돌려받을 수 있다.</p>

<p>isRPG에는 요즈음의 많은 게임이 그러하듯 업적이라는 시스템이 있어서 어떤 항목에 대해 일정 수치를 달성하게 되면 업적을 달성할 수 있다. 경근이가 현재 관심 있어 하는 항목은 "특정 개수 이상의 장비 제작하기"와 "특정 개수 이상의 장비 분해하기"이다.</p>

<p>현재 isRPG에서 가장 쉽게 제작할 수 있는 아이템의 최고봉은 나무 단검이다. 나무 단검의 재료는 나무 쪼가리 한&nbsp;종류뿐이며, 이는 상점에서 쉽게 구매할 수 있기 때문이다. 업적을 달성하는 것과&nbsp;제작하는 아이템의 질은 아무런 상관이 없으므로 경근이는 나무 단검을 많이많이 깎으려고 한다!</p>

<p>나무 쪼가리 \(N\)개를 소모하면 나무 단검 하나를 제작할 수 있다.&nbsp;나무 단검 하나를 분해하면 나무 쪼가리를 적으면&nbsp;\(0\)개,&nbsp;많으면 \(K\)개까지&nbsp;돌려받을 수 있다. 이때 나무 쪼가리를 \(x\) (\(0 \leq x \leq K\))개&nbsp;돌려받을 확률은,&nbsp;\(x\)의 값과 상관 없이, 모든&nbsp;\(x\)에 대해&nbsp;\(1/(K+1)\)이다.</p>

<p>보물을 가진 용들을 많이많이 죽여서 많은 전리품을 얻은 경근이는 상점에서 나무 쪼가리를 \(M\)개 구입했다. 현재&nbsp;경근이는 나무 단검을 하나도 가지고 있지 않다. 경근이는 이제부터 나무 쪼가리로 나무 단검을 하나도 만들 수 없을 때까지 제작하고, 가지고 있는 나무 단검을 모두&nbsp;분해하는 작업을&nbsp;반복하려고 한다. 경근이는 수많은 경험을 통해, 모든 작업이 끝난 후에 나무 쪼가리가 인벤토리 창에 남아 있는 것은 매우 불쾌한 일이라는 것을 잘 알고 있다. 그러므로&nbsp;경근이는 모든 작업이 끝난 후 나무 쪼가리가 0개 남을 확률이 얼마인지&nbsp;알고 싶어 한다. 이런 생각을 하고 나니 더 나아가 나무쪼가리가 \(i\) (\(0 \leq&nbsp;i < N\))개 남을 확률도 알고 싶어졌다. 경근이를 도와주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 나무 단검 하나를 만드는 데 필요한 나무 쪼가리의 개수 \(N\), 나무 단검 하나를 분해했을 때&nbsp;얻을 수 있는 나무 쪼가리의 최대 개수 \(K\) (\( 1 \leq K < N \leq 10^3\)), 현재 경근이가 가지고 있는 나무 쪼가리의 개수 \(M\)이 공백을 사이로 두고 주어진다.</p>

<p>이 문제는 세&nbsp;개의 부분 문제로 이루어져 있다.</p>

<p><a href="https://www.acmicpc.net/problem/10729" style="line-height: 1.6em;">1번 문제</a>의 입력은&nbsp;\(0&nbsp;\leq M&nbsp;\leq 10^{6}\)을 만족하며 해결하면 10점을 얻을 수 있다.</p>

<p><a href="https://www.acmicpc.net/problem/10730" style="line-height: 20.7999992370605px;">2번 문제</a>의 입력은&nbsp;\(0&nbsp;\leq M&nbsp;\leq 10^{12}\)을 만족하며 해결하면 40점을 얻을 수 있다.</p>

<p><a href="https://www.acmicpc.net/problem/10731" style="line-height: 20.7999992370605px;">3번 문제</a>의 입력은&nbsp;\(M&nbsp;= -1\)을 만족하며 해결하면 50점을 얻을 수 있다.&nbsp;이 부분 문제는 앞의 문제와는 다르게 \(M = -1\)인데,&nbsp;이는 \(M\)이 무한대로 수렴할 때의 확률의 극한값을 정답으로 구해야 함을 의미한다. 이 극한값이 존재하며 유리수라는&nbsp;사실은 증명되어 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>\(i\)번째 줄에는 나무 쪼가리가 \(i-1\)개 남을 확률을 출력한다. 나무 쪼가리는 \(N-1\)개&nbsp;이하만큼&nbsp;남게 될 것이므로, 출력은 \(N\)줄이어야 한다.</p>

<p>좀더 정확하게 판별하기 위해, 확률을 기약분수로 \( {p}\over{q} \)로 나타냈을&nbsp;때, \(p-qr \equiv&nbsp;0&nbsp;\pmod{1,000,000,007}&nbsp;\)을 만족하는 \(0\) 이상 \(1,000,000,007\) 미만의 정수 \(r\)을 출력해야 한다. 이 정수 \(r\)이 존재하며, 이 범위 내에서 유일하다는 사실은 증명되어 있다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>순서대로 \( \frac{1}{3} \),\( \frac{1}{3} \),\( \frac{1}{3} \),\( 0 \)을 의미한다.</p>

				</div>
				</div>','4 2 4','333333336
333333336
333333336
0','MATH'),
                                                                                                                (1718,'BAEKJOON','https://www.acmicpc.net/problem/10731',10731,'업적의 노예 3','3초','256 MB',14,'<p>경근이는 요즘 isRPG라는 웹게임을 열심히 하고 있다. 제목에 RPG가 들어가 있으니 알 수 있겠지만,&nbsp;이 게임에는&nbsp;캐릭터가 사용할 수 있는 많은 장비 아이템들이 있다.&nbsp;모든 장비는 주어진 방법을&nbsp;따라 재료를 모아 만들고,&nbsp;만들어진 장비의 옵션은 정해진 범위 내에서 무작위하게 결정된다. 만약&nbsp;만들어진 장비가 마음에 들지 않는다면&nbsp;장비를 해체하여 사용한 재료를 일부분 돌려받을 수 있다.</p>

<p>isRPG에는 요즈음의 많은 게임이 그러하듯 업적이라는 시스템이 있어서 어떤 항목에 대해 일정 수치를 달성하게 되면 업적을 달성할 수 있다. 경근이가 현재 관심 있어 하는 항목은 "특정 개수 이상의 장비 제작하기"와 "특정 개수 이상의 장비 분해하기"이다.</p>

<p>현재 isRPG에서 가장 쉽게 제작할 수 있는 아이템의 최고봉은 나무 단검이다. 나무 단검의 재료는 나무 쪼가리 한&nbsp;종류뿐이며, 이는 상점에서 쉽게 구매할 수 있기 때문이다. 업적을 달성하는 것과&nbsp;제작하는 아이템의 질은 아무런 상관이 없으므로 경근이는 나무 단검을 많이많이 깎으려고 한다!</p>

<p>나무 쪼가리 \(N\)개를 소모하면 나무 단검 하나를 제작할 수 있다.&nbsp;나무 단검 하나를 분해하면 나무 쪼가리를 적으면&nbsp;\(0\)개,&nbsp;많으면 \(K\)개까지&nbsp;돌려받을 수 있다. 이때 나무 쪼가리를 \(x\) (\(0 \leq x \leq K\))개&nbsp;돌려받을 확률은,&nbsp;\(x\)의 값과 상관 없이, 모든&nbsp;\(x\)에 대해&nbsp;\(1/(K+1)\)이다.</p>

<p>보물을 가진 용들을 많이많이 죽여서 많은 전리품을 얻은 경근이는 상점에서 나무 쪼가리를 \(M\)개 구입했다. 현재&nbsp;경근이는 나무 단검을 하나도 가지고 있지 않다. 경근이는 이제부터 나무 쪼가리로 나무 단검을 하나도 만들 수 없을 때까지 제작하고, 가지고 있는 나무 단검을 모두&nbsp;분해하는 작업을&nbsp;반복하려고 한다. 경근이는 수많은 경험을 통해, 모든 작업이 끝난 후에 나무 쪼가리가 인벤토리 창에 남아 있는 것은 매우 불쾌한 일이라는 것을 잘 알고 있다. 그러므로&nbsp;경근이는 모든 작업이 끝난 후 나무 쪼가리가 0개 남을 확률이 얼마인지&nbsp;알고 싶어 한다. 이런 생각을 하고 나니 더 나아가 나무쪼가리가 \(i\) (\(0 \leq&nbsp;i < N\))개 남을 확률도 알고 싶어졌다. 경근이를 도와주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 나무 단검 하나를 만드는 데 필요한 나무 쪼가리의 개수 \(N\), 나무 단검 하나를 분해했을 때&nbsp;얻을 수 있는 나무 쪼가리의 최대 개수 \(K\) (\( 1 \leq K < N \leq 10^3\)), 현재 경근이가 가지고 있는 나무 쪼가리의 개수 \(M\)이 공백을 사이로 두고 주어진다.</p>

<p>이 문제는 세&nbsp;개의 부분 문제로 이루어져 있다.</p>

<p><a href="https://www.acmicpc.net/problem/10729" style="line-height: 1.6em;">1번 문제</a>의 입력은&nbsp;\(0&nbsp;\leq M&nbsp;\leq 10^{6}\)을 만족하며 해결하면 10점을 얻을 수 있다.</p>

<p><a href="https://www.acmicpc.net/problem/10730" style="line-height: 20.7999992370605px;">2번 문제</a>의 입력은&nbsp;\(0&nbsp;\leq M&nbsp;\leq 10^{12}\)을 만족하며 해결하면 40점을 얻을 수 있다.</p>

<p><a href="https://www.acmicpc.net/problem/10731" style="line-height: 20.7999992370605px;">3번 문제</a>의 입력은&nbsp;\(M&nbsp;= -1\)을 만족하며 해결하면 50점을 얻을 수 있다.&nbsp;이 부분 문제는 앞의 문제와는 다르게 \(M = -1\)인데,&nbsp;이는 \(M\)이 무한대로 수렴할 때의 확률의 극한값을 정답으로 구해야 함을 의미한다. 이 극한값이 존재하며 유리수라는&nbsp;사실은 증명되어 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>\(i\)번째 줄에는 나무 쪼가리가 \(i-1\)개 남을 확률을 출력한다. 나무 쪼가리는 \(N-1\)개&nbsp;이하만큼&nbsp;남게 될 것이므로, 출력은 \(N\)줄이어야 한다.</p>

<p>좀더 정확하게 판별하기 위해, 확률을 기약분수로 \( {p}\over{q} \)로 나타냈을&nbsp;때, \(p-qr \equiv&nbsp;0&nbsp;\pmod{1,000,000,007}&nbsp;\)을 만족하는 \(0\) 이상 \(1,000,000,007\) 미만의 정수 \(r\)을 출력해야 한다. 이 정수 \(r\)이 존재하며, 이 범위 내에서 유일하다는 사실은 증명되어 있다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>순서대로 \( \frac{1}{3} \),\( \frac{1}{3} \),\( \frac{1}{3} \),\( 0 \)을 의미한다.</p>

				</div>
				</div>','4 2 4','333333336
333333336
333333336
0','MATH'),
                                                                                                                (1716,'BAEKJOON','https://www.acmicpc.net/problem/10734',10734,'\(I\)교신자 2','3초','256 MB',25,'<p>방학 동안 어떤 일을 겪었는지 몰라도 현종이는 수 \(I\)를 신성시하는 \(I\)교에 입교하였다.</p>

<p>\(I\)교에서는 \(I\)는 물론,&nbsp;\(I\)와 사칙연산을 이용해 만들 수 있는 다른 많은 수를&nbsp;좋은 수라고 생각한다. \(I\)교에서 좋은 수들을 만드는 활동을 왕성히 펼치던 현종이는 아래와 같은 놀이를 통해 좋은 수들을 많이 만들어 좀 더 많은 사람에게 \(I\)교를 포교하고자 하였다.</p>

<p>이 놀이를 하기 위해서는 몇 개의 준비물이 필요하다.</p>

<ul>
	<li>앞/뒷면에 \(I\)가 그려진 카드 \(A\)개, \(+\)가 그려진 카드&nbsp;\(B\)개, \(\times\)가 그려진 카드&nbsp;\(C\)개.</li>
	<li>무한히 많은 개수의 \(I\)가 들어있는 스택. 이 스택은 수 \(I\)에 대한 무한한 믿음, 감사, 사랑을 의미하며, 또한 \(I\)에 내재한&nbsp;절대적인 진리와 불멸성을 상징한다.</li>
</ul>

<p>준비물이 마련되었으면, 놀이를 시작하자!&nbsp;우선 현종이는&nbsp;현재 가지고 있는 카드를 섞는다. 이는 \(I\)가 세상에 내려와 다른 만물과 어우러져 조화를 이루고 사랑으로 감싸줌을 의미한다.&nbsp;그다음 현종이는 카드를&nbsp;섞인 순서대로 뽑는데, 카드를 뽑을 때마다&nbsp;뽑힌 카드가&nbsp;어떤 카드인지에 따라 다음과 같은 작업을 수행할 것이다.</p>

<ul>
	<li>\(I\)가 그려진 카드가 뽑히면 : 스택에 \(I\)를 넣는다.</li>
	<li>\(+\)가 그려진 카드가 뽑히면 : 스택의 가장 위에 있는 두 수를 뽑은 후,&nbsp;이 두 수를&nbsp;더한 수를&nbsp;스택에&nbsp;넣는다.</li>
	<li>\(\times\)가 그려진 카드가&nbsp;뽑히면 : 스택의 가장 위에 있는 두 수를 뽑은 후, 이 두 수를&nbsp;곱한 수를 스택에 넣는다.</li>
</ul>

<p>모든 과정이 끝나면 스택에는 좋은 수들이 많이 쌓여 있을 것이다. 현종이는 스택에 있는 수많은 수&nbsp;중에서 스택의 가장 위에 있는 수는 가장 좋은 수일 것으로&nbsp;생각했다. 그렇게 생각했었다. 하지만 곧 현종이는 깨달았다. 다른 수들도 모두 좋은 수들일진대 감히 우열을 따질 수 있겠는가! 스택의 가장 위에 있는 수만이 아니라 그 밑에 있는 수들도 모두 좋은 수들일&nbsp;것이며, 수들은 카드의 배열에 따라&nbsp;모습을 바꾸어 현종이에게 자애로운 웃음을 지어줄 것이다!</p>

<p>그래서 현종이는 가능한 모든 카드 배열에 대해, 작업을 끝냈을 때&nbsp;스택의 가장 위에 있는 수들의 합을 구하기로 하였다. 또한, 가장 위에 있는 수뿐만 아니라 두 번째로 위에 있는 수들의 합, 세 번째로 위에 있는 수들의 합, ...,&nbsp;&nbsp;\(K\)번째로 위에 있는 수들의 합을 모두&nbsp;구하기로 하였다. 그러나 현종이는 가능한 카드 배열의 개수가 너무 많다는 것을 알고 당신에게 \(I\)교의 아름다움을 알리는 겸 이 일을 맡겼다. 현종이를 도와주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 \(I&nbsp;(1 \leq I \leq 10^9)\), \(A\), \(B\), \(C\) \((0 \leq A,B,C \leq 40)\), \(K&nbsp;(1 \leq K \leq 40)\)를 나타내는 다섯 정수가 공백으로 구분되어 주어진다. \(I\)는 \(I \)이며, \(A\)는 \(I\)가 그려진 카드의 개수, \(B\)는 \(+\)가 그려진&nbsp;카드의 개수, \(C\)는 \(\times\)가 그려진&nbsp;카드의 개수, \(K\)는 구하고자 하는 합의 개수이다.</p>

<p>이 문제는 세&nbsp;개의 부분 문제로 이루어져 있다.</p>

<p><a href="https://www.acmicpc.net/problem/10733" style="line-height: 1.6em;">1번 문제</a>의 입력은&nbsp;\(0&nbsp;\leq A+B+C \leq 15\)을 만족하며 해결하면 10점을 얻을 수 있다.</p>

<p><a href="https://www.acmicpc.net/problem/10734" style="line-height: 20.7999992370605px;">2번 문제</a>의 입력은&nbsp;\(K=1\)을 만족하며 해결하면 20점을 얻을 수 있다.</p>

<p><a href="https://www.acmicpc.net/problem/10735" style="line-height: 20.7999992370605px;">3번 문제</a>의 입력은 다른 제한이 없으며 해결하면 70점을 얻을 수 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>\(i\)번째 줄에&nbsp;모든 카드 배열에 대해 작업을 끝낸 후의 모든 스택에 대해 맨 위에서 \(i\)번째에 있는 수들의 합을 출력한다. 숫자가 너무 커질 수 있으므로 \(1,000,000,007\)로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1 1 1 1','10','MATH'),
                                                                                                                (1717,'BAEKJOON','https://www.acmicpc.net/problem/10735',10735,'\(I\)교신자 3','3초','256 MB',26,'<p>방학 동안 어떤 일을 겪었는지 몰라도 현종이는 수 \(I\)를 신성시하는 \(I\)교에 입교하였다.</p>

<p>\(I\)교에서는 \(I\)는 물론,&nbsp;\(I\)와 사칙연산을 이용해 만들 수 있는 다른 많은 수를&nbsp;좋은 수라고 생각한다. \(I\)교에서 좋은 수들을 만드는 활동을 왕성히 펼치던 현종이는 아래와 같은 놀이를 통해 좋은 수들을 많이 만들어 좀 더 많은 사람에게 \(I\)교를 포교하고자 하였다.</p>

<p>이 놀이를 하기 위해서는 몇 개의 준비물이 필요하다.</p>

<ul>
	<li>앞/뒷면에 \(I\)가 그려진 카드 \(A\)개, \(+\)가 그려진 카드&nbsp;\(B\)개, \(\times\)가 그려진 카드&nbsp;\(C\)개.</li>
	<li>무한히 많은 개수의 \(I\)가 들어있는 스택. 이 스택은 수 \(I\)에 대한 무한한 믿음, 감사, 사랑을 의미하며, 또한 \(I\)에 내재한&nbsp;절대적인 진리와 불멸성을 상징한다.</li>
</ul>

<p>준비물이 마련되었으면, 놀이를 시작하자!&nbsp;우선 현종이는&nbsp;현재 가지고 있는 카드를 섞는다. 이는 \(I\)가 세상에 내려와 다른 만물과 어우러져 조화를 이루고 사랑으로 감싸줌을 의미한다.&nbsp;그다음 현종이는 카드를&nbsp;섞인 순서대로 뽑는데, 카드를 뽑을 때마다&nbsp;뽑힌 카드가&nbsp;어떤 카드인지에 따라 다음과 같은 작업을 수행할 것이다.</p>

<ul>
	<li>\(I\)가 그려진 카드가 뽑히면 : 스택에 \(I\)를 넣는다.</li>
	<li>\(+\)가 그려진 카드가 뽑히면 : 스택의 가장 위에 있는 두 수를 뽑은 후,&nbsp;이 두 수를&nbsp;더한 수를&nbsp;스택에&nbsp;넣는다.</li>
	<li>\(\times\)가 그려진 카드가&nbsp;뽑히면 : 스택의 가장 위에 있는 두 수를 뽑은 후, 이 두 수를&nbsp;곱한 수를 스택에 넣는다.</li>
</ul>

<p>모든 과정이 끝나면 스택에는 좋은 수들이 많이 쌓여 있을 것이다. 현종이는 스택에 있는 수많은 수&nbsp;중에서 스택의 가장 위에 있는 수는 가장 좋은 수일 것으로&nbsp;생각했다. 그렇게 생각했었다. 하지만 곧 현종이는 깨달았다. 다른 수들도 모두 좋은 수들일진대 감히 우열을 따질 수 있겠는가! 스택의 가장 위에 있는 수만이 아니라 그 밑에 있는 수들도 모두 좋은 수들일&nbsp;것이며, 수들은 카드의 배열에 따라&nbsp;모습을 바꾸어 현종이에게 자애로운 웃음을 지어줄 것이다!</p>

<p>그래서 현종이는 가능한 모든 카드 배열에 대해, 작업을 끝냈을 때&nbsp;스택의 가장 위에 있는 수들의 합을 구하기로 하였다. 또한, 가장 위에 있는 수뿐만 아니라 두 번째로 위에 있는 수들의 합, 세 번째로 위에 있는 수들의 합, ...,&nbsp;&nbsp;\(K\)번째로 위에 있는 수들의 합을 모두&nbsp;구하기로 하였다. 그러나 현종이는 가능한 카드 배열의 개수가 너무 많다는 것을 알고 당신에게 \(I\)교의 아름다움을 알리는 겸 이 일을 맡겼다. 현종이를 도와주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 \(I&nbsp;(1 \leq I \leq 10^9)\), \(A\), \(B\), \(C\) \((0 \leq A,B,C \leq 40)\), \(K&nbsp;(1 \leq K \leq 40)\)를 나타내는 다섯 정수가 공백으로 구분되어 주어진다. \(I\)는 \(I \)이며, \(A\)는 \(I\)가 그려진 카드의 개수, \(B\)는 \(+\)가 그려진&nbsp;카드의 개수, \(C\)는 \(\times\)가 그려진&nbsp;카드의 개수, \(K\)는 구하고자 하는 합의 개수이다.</p>

<p>이 문제는 세&nbsp;개의 부분 문제로 이루어져 있다.</p>

<p><a href="https://www.acmicpc.net/problem/10733" style="line-height: 1.6em;">1번 문제</a>의 입력은&nbsp;\(0&nbsp;\leq A+B+C \leq 15\)을 만족하며 해결하면 10점을 얻을 수 있다.</p>

<p><a href="https://www.acmicpc.net/problem/10734" style="line-height: 20.7999992370605px;">2번 문제</a>의 입력은&nbsp;\(K=1\)을 만족하며 해결하면 20점을 얻을 수 있다.</p>

<p><a href="https://www.acmicpc.net/problem/10735" style="line-height: 20.7999992370605px;">3번 문제</a>의 입력은 다른 제한이 없으며 해결하면 70점을 얻을 수 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>\(i\)번째 줄에&nbsp;모든 카드 배열에 대해 작업을 끝낸 후의 모든 스택에 대해 맨 위에서 \(i\)번째에 있는 수들의 합을 출력한다. 숫자가 너무 커질 수 있으므로 \(1,000,000,007\)로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1 1 1 1','10','MATH'),
                                                                                                                (1720,'BAEKJOON','https://www.acmicpc.net/problem/10757',10757,'큰 수 A+B','1초','256 MB',1,'<p>두 정수 A와 B를 입력받은 다음, A+B를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 A와 B가 주어진다. (0 < A,B < 10<sup>10000</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 A+B를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','9223372036854775807 9223372036854775808
','18446744073709551615
','MATH'),
                                                                                                                (1724,'BAEKJOON','https://www.acmicpc.net/problem/10790',10790,'달리기','2초','256 MB',26,'<p>운동선수 유라의 코치 민혁이는 체력 측정을 위해서&nbsp;유라에게 l&nbsp;미터 달리기를&nbsp;시키려고 한다. 유라는 v<sub>1</sub> m/s 이상 v<sub>2</sub> m/s 이하의 일정한 속력으로 달린다.</p>

<p>타이머를 이용하여 유라의 기록을 측정하려던 참에, 민혁이는 타이머를 갖고 오는 것을 잊어버렸다. 유라의 속력을 측정하는 것에 차질이 생긴 민혁이는 다른 방법을 이용하여 유라의 속력을 측정해야 한다.</p>

<p>민혁이는 특정 시점에 시작점과 도착점 사이의 특정 지역에 가서 유라가 이미 왔는지 확인할 수 있다. 이런 방식으로 몇 번 확인하다 보면 +-t/2 m/s의&nbsp;오차 범위를 감안한&nbsp;유라의 속력을 구할 수 있다.</p>

<p>민혁이가 특정&nbsp;지점에 가서 유라의 도달 여부를 확인하는 데 최소 s초의 시간이 걸린다. 따라서 유라가 달리기를 시작한 후 s초 동안은 유라의&nbsp;도달 여부를 확인할 수 없으며, 유라의 도달 여부를 확인한 후 그 다음 s초 동안&nbsp;역시 유라의 도달 여부를 확인할 수 없다.</p>

<p>민혁이는 최악의 경우에도&nbsp;최소한의 확인으로 유라의 속력을 측정하려고 한다. 민혁이를 도와 유라의 속력을 측정하는 전략을 짜는 프로그램을 작성하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 번째 줄에는 테스트 케이스의 수 c&nbsp;(1 ≤ c ≤ 100)가 주어진다.</p>

<p>두 번째 줄부터 c개의 줄에는 정수&nbsp;l, v<sub>1</sub>, v<sub>2</sub>, t,&nbsp;s (1 ≤ l, v<sub>1</sub>, v<sub>2</sub>, t, s ≤ 10<sup>9</sup>, v<sub>1</sub>&nbsp;< v<sub>2</sub>)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서 답을 한 줄에 하나씩 출력한다.</p>

<p>만약&nbsp;민혁이가 오차 범위 내에서&nbsp;유라의 속력을 구할 수 없다면 impossible을 출력한다. 그렇지 않은 경우&nbsp;민혁이가 유라의 속력을 구하기 위한 최소 확인 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1000 1 30 1 1
60 2 10 2 5
59 2 10 2 5
','5
3
impossible
','MATH'),
                                                                                                                (1727,'BAEKJOON','https://www.acmicpc.net/problem/10802',10802,'369 게임','1초','256 MB',19,'<p>여러 사람이 둘러 앉아 즐기는 369 게임은 다음과 같은 규칙을 가지고 있다. 규칙: 양의 정수 A에서 시작하여 차례로 사람들 이 돌아가면서 숫자를 하나씩 증가하면서 불러 나간다. 단, 부르는 숫자가 3의 배수이거나 그 숫자에 3, 6, 9중 하나라도 들어 있는 경우에 숫자는 부르지 않고 박수를 친다.&nbsp;</p>

<p>예를 들어, 369 게임을 17부터 시작하는 경우를 생각해보자. 박수를 X로 표현하면, 이 게임의 진행은 17-X-X-20-X-22-X-X-25?X?X-28-X-X …과 같을 것이다.&nbsp;</p>

<p>시작하는 양의 정수 A와 끝나는 양의 정수 B가 주어졌을 때, 박수를 치는 총 횟수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>한 줄에 시작하는 양의 정수 A와 끝나는 양의 정수 B가 순서대로 주어진다. 두 수의 범위는 1≤ A ≤ B ≤ 10<sup>100,000</sup>이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>박수치는 총 횟수를 20,150,523으로 나눈 나머지를 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 12
','4
','MATH'),
                                                                                                                (1728,'BAEKJOON','https://www.acmicpc.net/problem/10818',10818,'최소, 최대','1초','256 MB',3,'<p>N개의 정수가 주어진다. 이때, 최솟값과 최댓값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수의 개수 N (1 ≤ N ≤ 1,000,000)이 주어진다. 둘째 줄에는 N개의 정수를&nbsp;공백으로 구분해서&nbsp;주어진다. 모든 정수는 -1,000,000보다 크거나 같고, 1,000,000보다 작거나 같은 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 주어진 정수 N개의 최솟값과 최댓값을 공백으로 구분해 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
20 10 35 30 7
','7 35
','MATH'),
                                                                                                                (1729,'BAEKJOON','https://www.acmicpc.net/problem/10822',10822,'더하기','1초','256 MB',4,'<p>숫자와 콤마로만 이루어진 문자열 S가 주어진다. 이때, S에 포함되어있는 자연수의 합을 구하는 프로그램을 작성하시오.</p>

<p>S의 첫 문자와 마지막 문자는 항상 숫자이고, 콤마는 연속해서 주어지지 않는다. 주어지는 수는 항상 자연수이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 문자열 S가 주어진다. S의 길이는 최대 100이다. 포함되어있는 정수는 1,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>문자열 S에 포함되어 있는 자연수의 합을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10,20,30,50,100
','210
','MATH'),
                                                                                                                (1731,'BAEKJOON','https://www.acmicpc.net/problem/10823',10823,'더하기 2','1초','256 MB',5,'<p>숫자와 콤마로만 이루어진 문자열 S가 주어진다. 이때, S에 포함되어있는 자연수의 합을 구하는 프로그램을 작성하시오.</p>

<p>S의 첫 문자와 마지막 문자는 항상 숫자이고, 콤마는 연속해서 주어지지 않는다. 주어지는 수는 항상 자연수이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>문자열 S가 여러 줄에 걸쳐서 주어진다. S의 길이는 최대 10,000이다. 포함되어있는 정수는 1,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>문자열 S에 포함되어 있는 자연수의 합을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10,20,
3
0,50
,1
00
','210
','MATH'),
                                                                                                                (1733,'BAEKJOON','https://www.acmicpc.net/problem/10824',10824,'네 수','1초','256 MB',3,'<p>네 자연수 A, B, C, D가 주어진다. 이때, A와 B를 붙인 수와 C와 D를 붙인 수의 합을 구하는 프로그램을 작성하시오.</p>

<p>두 수&nbsp;A와 B를 합치는 것은 A의 뒤에 B를 붙이는 것을 의미한다. 즉, 20과 30을 붙이면 2030이 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 네 자연수 A, B, C, D가 주어진다. (1 ≤ A, B, C, D ≤ 1,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>A와 B를 붙인 수와 C와 D를 붙인 수의 합을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10 20 30 40
','4060
','MATH'),
                                                                                                                (1691,'BAEKJOON','https://www.acmicpc.net/problem/10829',10829,'이진수 변환','1초','256 MB',4,'<p>자연수 N이 주어진다. N을 이진수로 바꿔서 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수 N이 주어진다. (1 ≤ N ≤ 100,000,000,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>N을 이진수로 바꿔서 출력한다. 이진수는 0으로 시작하면 안 된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','53
','110101
','MATH'),
                                                                                                                (1737,'BAEKJOON','https://www.acmicpc.net/problem/10830',10830,'행렬 제곱','1초','256 MB',12,'<p>크기가 N*N인 행렬 A가 주어진다. 이때, A의 B제곱을 구하는 프로그램을 작성하시오. 수가 매우 커질 수 있으니, A^B의 각 원소를 1,000으로 나눈 나머지를 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 행렬의 크기 N과 B가 주어진다. (2&nbsp;≤ N ≤ &nbsp;5, 1 ≤ B ≤ 100,000,000,000)</p>

<p>둘째 줄부터 N개의 줄에 행렬의 각 원소가&nbsp;주어진다. 행렬의 각 원소는 1,000보다 작거나 같은&nbsp;자연수 또는 0이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄부터 N개의 줄에 걸쳐 행렬 A를 B제곱한 결과를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 5
1 2
3 4
','69 558
337 406
','MATH'),
                                                                                                                (1738,'BAEKJOON','https://www.acmicpc.net/problem/10833',10833,'사과','1초','256 MB',3,'<p>경상북도 특산품인 사과를 학생들에게 나눠주기 위해 여러 학교에 사과를 배정하였다. 배정된 사과 개수는 학교마다 다를 수 있고, 학생 수도 학교마다 다를 수 있다. 각 학교에서는 배정된 사과를 모든 학생들에게 똑같이 나눠주되, 남는 사과의 개수를 최소로 하려고 한다. (서로 다른 학교에 속한 학생이 받는 사과 개수는 다를 수 있다.)</p>

<p>예를 들어, 5개 학교의 학생 수와 배정된 사과 수가 다음과 같다고 하자.</p>

<table class="table table-bordered" style="width:40%">
	<thead>
		<tr>
			<th>학교</th>
			<th>A</th>
			<th>B</th>
			<th>C</th>
			<th>D</th>
			<th>E</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<th>학생 수</th>
			<td>24</td>
			<td>13</td>
			<td>5</td>
			<td>23</td>
			<td>7</td>
		</tr>
		<tr>
			<th>사과 개수</th>
			<td>52</td>
			<td>22</td>
			<td>53</td>
			<td>10</td>
			<td>70</td>
		</tr>
	</tbody>
</table>

<p>A 학교에서는 모든 학생에게 사과를 두 개씩 나눠주고 4개의 사과가 남게 된다. B 학교에서는 모든 학생에게 사과를 한 개씩 나눠주고 9개의 사과가 남게 된다. 비슷하게 C 학교에서는 3개의 사과가, D 학교에서는 10개의 사과가, E 학교에서는 0개의 사과가 남게 되어, 남는 사과의 총 수는 4+9+3+10+0 = 26이다.&nbsp;</p>

<p>각 학교의 학생 수와 사과 개수가 주어졌을 때, 학생들에게 나눠주고 남는 사과의 총 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 학교의 수를 나타내는 정수 N (1 ≤ N ≤ 100)이 주어진다. 다음 N 개의 줄에 각 학교의 학생 수와 배정된 사과 개수를 나타내는 두 개의 정수가 주어진다. 학생 수와 사과 개수는 모두 1이상 100이하이다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>남은 사과의 총 개수를 나타내는 정수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
24 52
13 22
5 53
23 10
7 70
','26
','MATH'),
                                                                                                                (1767,'BAEKJOON','https://www.acmicpc.net/problem/10834',10834,'벨트','1초','256 MB',4,'<p>바퀴와 벨트를 이용하여 실험을 할 수 있는 과학 교구가 있다. 이 교구에는 다양한 종류의 바퀴와 벨트, 그리고 여러 개의 바퀴를 서로 다른 곳에 꽂을 수 있는 교구판이 포함되어 있다.&nbsp;</p>

<p>교구판에는 바퀴를 꽂을 수 있는 축들이 한 줄로 늘어서 있다. 모든 축에 바퀴를 꽂았을 때 바퀴끼리 부딪치지 않도록 축과 축 사이는 충분히 멀리 떨어져 있다. 각 축에는 바퀴가 하나씩 꽂혀있다. 바퀴는 왼쪽부터 순서대로 1번부터 차례대로 번호가 매겨져 있다.&nbsp;</p>

<p>교구판에서 바로 옆에 있는 두 개의 바퀴는 항상 하나의 벨트로 연결해야 하는데, 이때 벨트를 0자 형태로 연결할 수도 있고 8자 형태로 한번 꼬아서 연결할 수도 있다. 그리고 한쪽 바퀴가 회전하게 되면 벨트로 연결된 다른 바퀴도 회전하게 되는데 이때 두 바퀴의 크기의 차이에 따라 두 바퀴의 회전수가 서로 다를 수 있다.&nbsp;</p>

<p>다음 예는 3개의 벨트와 4개의 바퀴에 대한 정보가 주어진 경우이다. 이때 벨트 형태는 0자 형태(안꼬인 형태)면 0으로, 8자 형태(꼬인 형태)면 1로 나타낸다.</p>

<p><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10834/1.png" style="height:124px; width:276px"></p>

<table class="table table-bordered" style="width:40%">
	<thead>
		<tr>
			<th rowspan="2">벨트 i</th>
			<th colspan="2">회전수 비</th>
			<th rowspan="2">벨트 형태</th>
		</tr>
		<tr>
			<th>바퀴 i 회전수</th>
			<th>바퀴 i+1 회전수</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>1</td>
			<td>1</td>
			<td>2</td>
			<td>0</td>
		</tr>
		<tr>
			<td>2</td>
			<td>1</td>
			<td>5</td>
			<td>1</td>
		</tr>
		<tr>
			<td>3</td>
			<td>2</td>
			<td>1</td>
			<td>0</td>
		</tr>
	</tbody>
</table>

<p>이 경우, 벨트 1은 바퀴 1과 바퀴 2를 0자 형태로 연결하며 바퀴 1이 1번 회전하는 동안 바퀴 2는 2번 회전하게 된다. 즉, 바퀴 1을 시계 방향으로 1회전시키면 바퀴 2는 시계 방향으로 2회전하게 된다.&nbsp;</p>

<p>벨트 2는 바퀴 2와 바퀴 3을 꼬인 형태로 연결하며 바퀴 2가 1번 회전하는 동안 바퀴 3은 5번 회전하게 되므로, 바퀴 2를 시계 방향으로 1회전시키면 바퀴 3은 반시계 방향으로 5회전하게 된다.&nbsp;</p>

<p>벨트 3은 바퀴 3과 바퀴 4를 0자 형태로 연결하며 바퀴 3이 2번 회전하는 동안 바퀴 4는 1번 회전하게 되므로, 바퀴 3을 시계 방향으로 2회전시키면 바퀴 4는 시계 방향으로 1회전하게 된다.&nbsp;</p>

<p>따라서, 처음에 바퀴 1을 시계방향으로 1회전시키면 바퀴 2와 바퀴 3을 거쳐 결국 바퀴 4는 반시계방향으로 5회전하게 된다.&nbsp;</p>

<p>벨트로 연결된 바퀴들의 회전수의 비와 벨트의 형태가 순서대로 주어졌을 때, 첫 번째 바퀴가 시계 방향으로 분당 1회전을 하는 경우 마지막 바퀴의 회전방향과 분당 회전수를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에는 벨트의 개수를 나타내는 자연수 M(1 ≤ M ≤ 1,000)이 주어진다. 다음 M개의 줄에는 1번 벨트부터 순서대로 벨트로 이어진 두 바퀴의 회전수의 비를 나타내는 두 개의 양의 정수 a, b와 벨트의 형태 0 또는 1이 한 줄에 주어진다. 즉, i번 벨트의 경우, i번 벨트로 이어진 두 바퀴 i와 i+1에 대해 바퀴 i가 a번 회전하는 동안 바퀴 i+1이 b번 회전하고 i번 벨트의 형태가 s(안꼬인 형태는 0, 꼬인 형태는 1)라면 a와 b, 그리고 s가 한 줄에 주어진다. 이때 모든 바퀴의 분당 회전수는 10<sup>9</sup> 이하의 양의 정수로 결정되도록 입력이 주어진다.&nbsp;a, b는 10<sup>9</sup> 이하의 양의 정수이고,&nbsp;a와 b는 서로소이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>M+1번 바퀴의 회전 방향(시계방향은 0, 반시계방향은 1)과 분당 회전수를 한줄에 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 2 0
1 5 1
2 1 0
','1 5
','MATH'),
                                                                                                                (1735,'BAEKJOON','https://www.acmicpc.net/problem/10837',10837,'동전 게임','1초','256 MB',8,'<p>영희와 동수는 동전 던지기 게임을 하고 있다. 이 게임은 K번 라운드로 구성되고 다음과 같은 규칙들을 따른다:</p>

<ol>
	<li>한 라운드에서 영희와 동수는 한 번씩 동전을 던지고 항상 영희가 먼저 던진다.&nbsp;</li>
	<li>동전을 던져 앞면이 나오면 1점을 얻고, 뒷면이 나오면 점수를 얻지 못한다.&nbsp;</li>
	<li>한 명이 남은 기회에 모든 점수를 얻더라도 상대방이 현재까지 얻은 점수보다 작게 되면 게임 도중 어떤 시점에서도 게임은 바로 끝난다.&nbsp;</li>
</ol>

<p>0이상 K이하인 임의의 정수 M과 N에 대해서, 이것이 항상 게임이 끝난 후 영희와 동수가 얻는 점수가 되는 것은 아니다. 예를 들어서, K = 2인 경우에, M과 N의 모든 경우에 대해서, 이것이 영희와 동수가 얻는 점수가 될 수 있는 지의 여부는 다음 표와 같다:</p>

<table class="table table-bordered" style="width:40%">
	<thead>
		<tr>
			<th>M</th>
			<th>N</th>
			<th>영희, 동수의 점수가 될 가능성</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>0</td>
			<td>0</td>
			<td>가능</td>
		</tr>
		<tr>
			<td>0</td>
			<td>1</td>
			<td>가능</td>
		</tr>
		<tr>
			<td>0</td>
			<td>2</td>
			<td>불가능</td>
		</tr>
		<tr>
			<td>1</td>
			<td>0</td>
			<td>가능</td>
		</tr>
		<tr>
			<td>1</td>
			<td>1</td>
			<td>가능</td>
		</tr>
		<tr>
			<td>1</td>
			<td>2</td>
			<td>가능</td>
		</tr>
		<tr>
			<td>2</td>
			<td>0</td>
			<td>가능</td>
		</tr>
		<tr>
			<td>2</td>
			<td>1</td>
			<td>가능</td>
		</tr>
		<tr>
			<td>2</td>
			<td>2</td>
			<td>가능</td>
		</tr>
	</tbody>
</table>

<p>위 표에서 영희와 동수의 점수가 0과 2가 되는 것이 불가능한 이유는 두 번째 라운드에서 영희가 뒷면이 나와서 점수를 얻지 못하는 순간 게임의 규칙 3에 의해서 0과 1로 게임이 끝나기 때문이다.&nbsp;</p>

<p>0이상 K이하인 정수 M과 N이 주어질 때, 이 두 정수가 각각 영희와 동수의 점수가 될 수 있는지 여부를 판별하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 게임의 라운드 수를 나타내는 정수 K(1 ≤ K ≤ 1,000)가 주어진다. 두 번째 줄에는 입력의 개수를 나타내는 정수 C(1 ≤ C ≤ 100,000)가 주어진다. 다음 이어지는 C개의 줄 각각에는 하나의 입력을 나타내는 두 정수 M과 N(0 ≤ M, N ≤ K)이 주어진다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 C개의 줄로 구성된다. 게임에서 영희와 동수의 점수가 각각 M과 N이 될 수 있다면 1, 아니면 0을 각 줄에 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
4
5 5
5 1
0 3
1 4
','1
0
1
0
','MATH'),
                                                                                                                (1756,'BAEKJOON','https://www.acmicpc.net/problem/10859',10859,'뒤집어진 소수','3초','256 MB',9,'<p>어제 자다가 알람 시계를 떨어뜨렸는지, 08:15분이 51:80분이 되어 있었다. 그때 나는 디지털로 표시된 어떤 숫자는 180도 뒤집혔을 때도 숫자가 될 수 있다는 걸 깨달았다.</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10859/f1.png" style="height:80px; width:302px"></p>

<p style="text-align:center">소수 18115211이 디지털로 표시된 그림</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10859/f2.png" style="height:75px; width:300px"></p>

<p style="text-align:center">18115211이 180도 뒤집혀서 11251181이 되었다. (소수가 아님)</p>

<ul>
	<li><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10859/0.png" style="height:34px; width:21px">, <img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10859/2.png" style="height:34px; line-height:20.7999992370605px; width:21px">, <img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10859/5.png" style="height:34px; line-height:20.7999992370605px; width:21px">,&nbsp;<img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10859/8.png" style="height:34px; line-height:20.7999992370605px; width:21px">&nbsp;은 뒤집혀서도&nbsp;<img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10859/0.png" style="height:34px; line-height:20.7999992370605px; width:21px">, <img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10859/2.png" style="height:34px; line-height:20.7999992370605px; width:21px">, <img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10859/5.png" style="height:34px; line-height:20.7999992370605px; width:21px">, <img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10859/8.png" style="height:34px; line-height:20.7999992370605px; width:21px">&nbsp;그대로이다.</li>
	<li><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10859/1.png" style="height:34px; line-height:20.7999992370605px; width:21px"> 은 그냥 왼쪽으로 옮겨진다.&nbsp;<img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10859/11.png" style="height:34px; line-height:20.7999992370605px; width:21px"></li>
	<li><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10859/6.png" style="height:34px; line-height:20.7999992370605px; width:21px"> 은 <img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10859/9.png" style="height:34px; line-height:20.7999992370605px; width:21px">가 되고,&nbsp;<img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10859/9.png" style="height:34px; line-height:20.7999992370605px; width:21px"> 는 <img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10859/6.png" style="height:34px; line-height:20.7999992370605px; width:21px">이 된다.</li>
	<li><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10859/3.png" style="height:34px; line-height:20.7999992370605px; width:21px">, <img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10859/4.png" style="height:34px; line-height:20.7999992370605px; width:21px">,&nbsp;<img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10859/7.png" style="height:34px; line-height:20.7999992370605px; width:21px">&nbsp;은 더 이상 숫자가 아니다. (<img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10859/E.png" style="height:34px; line-height:20.7999992370605px; width:21px">, <img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10859/h.png" style="height:34px; line-height:20.7999992370605px; width:21px">,&nbsp;<img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10859/L.png" style="height:34px; line-height:20.7999992370605px; width:21px">)</li>
</ul>

<p>내가 좋아하는 숫자는 소수이다. 당신이 할 일은 주어진 숫자가 소수인지, 뒤집혀서도 소수인지 확인하는 것이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 N이 주어진다 (1 ≤ N ≤ 10<sup>16</sup>).</p>

<p>N의 첫 숫자는 0이 아니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 N이 소수이고 뒤집혀서도 소수이면 "yes"를 출력하고, 아니면 "no"를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','151
','yes
','MATH'),
                                                                                                                (1739,'BAEKJOON','https://www.acmicpc.net/problem/10869',10869,'사칙연산','1초','256 MB',1,'<p>두 자연수 A와 B가 주어진다. 이때, A+B, A-B, A*B, A/B(몫), A%B(나머지)를 출력하는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>두 자연수 A와 B가 주어진다. (1 ≤ A,&nbsp;B ≤ 10,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 A+B, 둘째 줄에 A-B, 셋째 줄에 A*B, 넷째 줄에 A/B, 다섯째 줄에 A%B를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7 3
','10
4
21
2
1
','MATH'),
                                                                                                                (1740,'BAEKJOON','https://www.acmicpc.net/problem/10870',10870,'피보나치 수 5','1초','256 MB',4,'<p>피보나치 수는 0과 1로 시작한다. 0번째 피보나치 수는 0이고, 1번째 피보나치 수는 1이다. 그 다음 2번째 부터는 바로 앞 두 피보나치 수의 합이 된다.</p>

<p>이를 식으로 써보면 F<sub>n</sub>&nbsp;= F<sub>n-1</sub>&nbsp;+ F<sub>n-2</sub>&nbsp;(n ≥ 2)가 된다.</p>

<p>n=17일때 까지 피보나치 수를 써보면 다음과 같다.</p>

<p>0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597</p>

<p>n이 주어졌을 때, n번째 피보나치 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n이 주어진다. n은 20보다 작거나 같은 자연수 또는 0이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 n번째 피보나치 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10
','55
','MATH'),
                                                                                                                (1743,'BAEKJOON','https://www.acmicpc.net/problem/10872',10872,'팩토리얼','1초','256 MB',1,'<p>0보다 크거나 같은 정수 N이 주어진다. 이때, N!을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 N(0 ≤ N ≤ 12)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 N!을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10
','3628800
','MATH'),
                                                                                                                (1745,'BAEKJOON','https://www.acmicpc.net/problem/10876',10876,'사전 조사','3초','256 MB',21,'<p>오늘도 심심한 지학이는 A 이상 B 이하의 각 자연수가 하나씩 들어 있는 사전을 만들었다. 지학이는 사전의 각 페이지에 정확히 하나의 자연수를 적었기 때문에, 사전은 총 B ? A + 1페이지로 구성되어 있다. 사전에 있는 자연수들은 크기순이 아닌 사전 순으로 적혀 있다. 예를 들어 A = 4, B = 12라면 자연수들이 10, 11, 12, 4, 5, 6, 7, 8, 9의 순으로 적혀 있는 것이다.</p>

<p>지학이는 심심해 보이는 수찬이에게 자신이 만든 사전을 건네주면서 사전에는 연속하는 자연수들이 사전 순으로 적혀있다고 귀띔하였다. 매우 심심했던 수찬이는 사전에 과연 어떤 자연수들이 적혀 있는지 알고 싶었다. 사전에는 페이지 번호가 적혀 있지 않기 때문에 수찬이는 어떠한 짐작도 하지 못한 채 사전을 앞에서부터 한 페이지씩 차례대로 읽을 수밖에 없었다. 하지만 수찬이는 사전의 모든 페이지를 다 읽은 순간 표지를 보고 그 사실을 알 수 있다. 수찬이는 가능한 적은 수의 페이지를 읽어 A와 B 의 값을 찾아내고 싶어한다.</p>

<p>A와 B 가 주어질 때, 수찬이가 지학이의 사전을 받고 A와 B 의 값을 모두 알아내기 위해 읽어야 할 최소한의 페이지 수를 구하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트 케이스의 수 T (1 ≤ T ≤ 10<sup>5</sup>)가 주어진다. 이후 T 개의 테스트 케이스가 주어진다.</p>

<p>각 테스트 케이스는 한 줄로 구성되며, 이 줄에는 A와 B (1 ≤ A ≤ B ≤ 10<sup>18</sup>)가 공백을 사이로 두고 입력된다. 이는 지학이가 A 이상 B 이하의 자연수들로 구성된 사전을 만들었음을 의미한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해, 수찬이가 읽어야 할 최소 페이지 수를 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>각 테스트 케이스마다 사전을 앞에서부터 차례로 읽어나가면 아래와 같다.</p>

<ul>
	<li>#1: 1, 10, 11, 2, 3, 4, 5, 6, 7, 8, 9</li>
	<li>#2: 10, 11, 12, 13, 5, 6, 7, 8, 9</li>
	<li>#3: 3, 4, 5</li>
</ul>

				</div>
				</div>','3
1 11
5 13
3 5
','4
5
3
','MATH'),
                                                                                                                (1748,'BAEKJOON','https://www.acmicpc.net/problem/10885',10885,'수열의 장인','1초','256 MB',16,'<p>승현이는 수열을 찾는 사람들을 위해 길이가 N 인 수열 a<sub>1</sub>, a<sub>2</sub>, ··· , a<sub>N</sub>을 만드는 일을 하고 있다. 승현이는 경력이 짧아서 각 원소가 -2 이상 2 이하의 정수인 수열만 만들 수 있고, 그래서인지 수열을 찾는 고객이 많지 않아 승현이는 생활고에 시달리고 있다.</p>

<p>이를 지켜보던 지학이는 안타까운 마음에 승현이에게 수열을 하나 만들어달라고 의뢰했고, 승현이는 기쁜 마음으로 수열을 만들어 주었다. 지학이는 이 수열에서 임의의 연속하는 부분 a<sub>i</sub>, a<sub>i+1</sub>, ··· , a<sub>j?1</sub>, aj (1 ≤ i ≤ j ≤ N)를 선택하여, 선택한 부분의 원소들의 곱 a<sub>i</sub> × a<sub>i+1</sub> × · · · × a<sub>j?1</sub> × a<sub>j</sub> 가 최대가 되게 하려고 한다. (단 i = j 이면 곱의 결과를 a<sub>i</sub> 로 정의한다.)</p>

<p>승현이가 만든 수열이 주어질 때, 지학이가 만들 수 있는 곱의 최댓값을 구하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 수 T (1 ≤ T ≤ 100,000)가 입력된다. 이후 T 개의 테스트 케이스가 주어진다.</p>

<p>각 테스트 케이스의 첫 번째 줄에는 승현이가 만든 수열의 길이 N (2 ≤ N ≤ 100,000)이 주어지고, 두 번째 줄에는 승현이가 만든 수열의 각 원소 a<sub>1</sub>, a<sub>2</sub>, ··· , a<sub>N</sub> (?2 ≤ a<sub>i</sub> ≤ 2)이 공백을 사이에 두고 주어진다.</p>

<p>모든 테스트 케이스에 대한 N 의 총합이 300,000을 넘지 않음이 보장된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해, 지학이가 만들 수 있는 곱의 최댓값을 1,000,000,007 (= 10<sup>9</sup>+7)으로 나눈 나머지를 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
5
1 2 -1 2 1
5
1 2 -1 2 -1
2
2 -1
','2
4
2
','MATH'),
                                                                                                                (1742,'BAEKJOON','https://www.acmicpc.net/problem/10888',10888,'두 섬간의 이동','1초','16 MB',14,'<p>1에서 N까지 번호가 붙은 N개의 섬이 일렬로 쭉 늘어서 있다. 이 섬들 간에는 아직 다리가 없어서 배로만 이동을 해야 했기에 매우 불편했다. 그렇기에 정부에서는 이 섬들에 다리를 연결하고자 한다. 정부는 섬 i와 섬 i+1을 연결하는 다리를 총 N?1개 지을 계획에 있다. 그러나 다리라는 것이 바로 지어지는 것이 아니다 보니, 짓는 순서에 따라 사람들에게 미치는 영향이 다르다. 정부는 다리가 순서대로 지어지는 순간마다 다음과 같은 것들을 알고 싶다.</p>

<ul>
	<li>두 섬 간에 왕래가 가능한 섬들 (i,j) (i<j) 쌍들의 개수</li>
	<li>두 섬 (i,j)가 왕래 가능할 때 섬 i에서 섬 j까지 가기 위해 이용해야 하는 최소 다리 개수의 합</li>
</ul>

<p>정부는 이 문제에 매우 골머리를 썩히고 있다. 그래서 정부는 이런 문제를 전문적으로 해결한다는 당신에게 도움을 요청했다. 정부가 원하는 값들을 구해주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 섬의 개수 N (2 ≤ N ≤ 10<sup>5</sup>)가 주어진다.</p>

<p>다음 N?1개의 줄에는 각 줄마다 정수 i (1 ≤ i < N)이 주어지는데, 이는 섬 i와 i+1을 잇는 다리를 짓겠다는 의미이다. 중복해서 등장하는 수는 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 다리를 지을 때마다 정부가 원하는 값을 공백으로 구분하여 각 줄마다 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1
2
','1 1
3 4
','MATH'),
                                                                                                                (1764,'BAEKJOON','https://www.acmicpc.net/problem/10972',10972,'다음 순열','1초','256 MB',8,'<p>1부터 N까지의 수로 이루어진 순열이 있다. 이때, 사전순으로 다음에 오는 순열을 구하는 프로그램을 작성하시오.</p>

<p>사전 순으로 가장 앞서는 순열은 오름차순으로 이루어진 순열이고, 가장 마지막에 오는 순열은 내림차순으로 이루어진 순열이다.</p>

<p>N = 3인 경우에 사전순으로 순열을 나열하면 다음과 같다.</p>

<ul>
	<li>1, 2, 3</li>
	<li>1, 3, 2</li>
	<li>2, 1, 3</li>
	<li>2, 3, 1</li>
	<li>3, 1, 2</li>
	<li>3, 2, 1</li>
</ul>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(1 ≤ N ≤ 10,000)이 주어진다. 둘째 줄에 순열이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째&nbsp;줄에 입력으로 주어진 순열의 다음에 오는 순열을 출력한다. 만약, 사전순으로 마지막에 오는 순열인 경우에는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 2 3 4
','1 2 4 3
','MATH'),
                                                                                                                (1760,'BAEKJOON','https://www.acmicpc.net/problem/10973',10973,'이전 순열','1초','256 MB',8,'<p>1부터 N까지의 수로 이루어진 순열이 있다. 이때, 사전순으로 바로 이전에 오는 순열을 구하는 프로그램을 작성하시오.</p>

<p>사전 순으로 가장 앞서는 순열은 오름차순으로 이루어진 순열이고, 가장 마지막에 오는 순열은 내림차순으로 이루어진 순열이다.</p>

<p>N = 3인 경우에 사전순으로 순열을 나열하면 다음과 같다.</p>

<ul>
	<li>1, 2, 3</li>
	<li>1, 3, 2</li>
	<li>2, 1, 3</li>
	<li>2, 3, 1</li>
	<li>3, 1, 2</li>
	<li>3, 2, 1</li>
</ul>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(1 ≤ N ≤ 10,000)이 주어진다. 둘째 줄에 순열이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째&nbsp;줄에 입력으로 주어진 순열의 이전에 오는 순열을 출력한다. 만약, 사전순으로 가장 처음에 오는 순열인 경우에는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 2 3 4
','-1
','MATH'),
                                                                                                                (1762,'BAEKJOON','https://www.acmicpc.net/problem/10978',10978,'기숙사 재배정','1초','128 MB',14,'<p>RUNIST 대학교에서는 매 학기마다 재미있는 기숙사 배정을 한다.</p>

<p>RUNIST 대학교에는 N명의 학생이 있고 N개의 기숙사가 있다. 모든 N명의 학생들은 봄학기에 기숙사를 한 명 당 하나씩 배정을 받았고, 모두 각각 다 다른 기숙사에 배정이 되었다.</p>

<p>이제 가을학기가 되어 학생복지팀에서는 기숙사를 다시 배정하려고 한다. 모든 학생들은 본인이 살았던 봄학기 기숙사에서 가을 학기에 다른 기숙사로 배정되면 이사를 해야하므로 기숙사 재배정을 신청하였다. (기숙사 재배정이 된다면 기숙사를 그대로 쓰게 된다.)</p>

<p>이렇게 모든 학생들은 기숙사 재배정을 신청했지만, 학생복지팀에서는 어떤 학생에게도 기숙사 재배정을 해주지 않으려고 한다.</p>

<p>봄학기때 기숙사를 이미 배정받은 상태에서, 가을학기 기숙사에 아무도 재배정이 되지 않는 경우의 수를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p><span style="line-height:1.6em">첫 번째 줄에 테스트 케이스의 수 T가 주어진다.</span></p>

<p>각 케이스의 첫 번째 줄에 학생 명수(기숙사의 개수) N (1 ≤ N ≤ 20) 이 주어진다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p><span style="line-height:1.6em">각 테스트 케이스 별로 아무도 재배정이 되지 않는 경우의 수를 출력한다.</span></p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>N이 4인 경우, 봄학기 때 4명의 학생 (민수, 동화, 갑도, 석주)이 각각 기숙사 A,B,C,D에 배정이 되었다면,</p>

<p>(민수-B, 동화-A, 갑도-D, 석주-C), (민수-B, 동화-C, 갑도-D, 석주-A), (민수-B, 동화-D, 갑도-A, 석주-C), (민수-C, 동화-A, 갑도-D, 석주-B), (민수-C, 동화-D, 갑도-A, 석주-B), (민수-C, 동화-D, 갑도-B, 석주-A), (민수-D, 동화-A, 갑도-B, 석주-C), (민수-D, 동화-C, 갑도-A, 석주-B), (민수-D, 동화-C, 갑도-B, 석주-A)</p>

<p>다음과 같은 9가지 경우가 존재한다.&nbsp;</p>

				</div>
				</div>','2
3
4
','2
9
','MATH'),
                                                                                                                (1766,'BAEKJOON','https://www.acmicpc.net/problem/10984',10984,'내 학점을 구해줘','1초','256 MB',3,'<p>게으른 근우는 열심히 놀다가 문득, 자신의 학점 평균이 얼마일지 궁금해졌다. 학사시스템도 들어가기 귀찮아하는 근우를 위해 구해주도록 하자.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 학기의 수 T가 주어진다. 두 번째 줄부터 T개 학기에 대한 정보가 주어진다.</p>

<p>각 학기에 대한 정보는 다음과 같이 구성되어 있다. 첫 번째 줄에 들었던 과목의 수 N이 주어지고, 다음 N개 줄에 걸쳐서 N개 과목들의 학점 C와 성적 G가 주어진다. (1 ≤ N ≤ 10, 1 ≤ C ≤ 6, C는 정수) G는 {0, 0.7, 1, 1.3, 1.7, 2, 2.3, 2.7, 3, 3.3, 3.7, 4, 4.3} 중 하나이며 소수 부분은 최대 한 자리까지 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 학기에 대해 근우의 총 학점과 평점(GPA)을 출력한다. 정답과의 절대 오차는 10<sup>-1</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
4
3 4.3
2 2.0
4 0.0
2 4.0
3
4 0.0
4 0.0
3 0.0
','11 2.3
11 0.0
','MATH'),
                                                                                                                (1769,'BAEKJOON','https://www.acmicpc.net/problem/10986',10986,'나머지 합','1초','256 MB',13,'<p>수 N개 A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>N</sub>이 주어진다. 이때, 연속된 부분 구간의 합이 M으로 나누어 떨어지는 구간의 개수를 구하는 프로그램을 작성하시오.</p>

<p>즉, A<sub>i</sub> + ... + A<sub>j</sub> (i ≤ j) 의 합이 M으로 나누어 떨어지는 (i, j) 쌍의 개수를 구해야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 M이 주어진다. (1 ≤ N ≤ 10<sup>6</sup>, 2 ≤ M ≤ 10<sup>3</sup>)</p>

<p>둘째 줄에 N개의 수 A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>N</sub>이 주어진다. (0 ≤ A<sub>i</sub> ≤ 10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 연속된 부분 구간의 합이 M으로 나누어 떨어지는 구간의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 3
1 2 3 1 2
','7
','MATH'),
                                                                                                                (1768,'BAEKJOON','https://www.acmicpc.net/problem/10998',10998,'A×B','1초','256 MB',1,'<p>두 정수 A와 B를 입력받은 다음, A×B를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 A와 B가 주어진다. (0 < A, B < 10)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 A×B를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 2
','2
','MATH'),
                                                                                                                (1770,'BAEKJOON','https://www.acmicpc.net/problem/11005',11005,'진법 변환 2','0.5초(추가시간없음)','256 MB',5,'<p>10진법 수 N이 주어진다. 이 수를 B진법으로 바꿔 출력하는 프로그램을 작성하시오.</p>

<p>10진법을 넘어가는 진법은 숫자로 표시할 수 없는 자리가 있다. 이런 경우에는 다음과 같이 알파벳 대문자를 사용한다.</p>

<p>A: 10, B: 11, ..., F: 15, ..., Y: 34, Z: 35</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 B가 주어진다. (2 ≤ B ≤ 36) N은 10억보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 10진법 수 N을 B진법으로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','60466175 36
','ZZZZZ
','MATH'),
                                                                                                                (1772,'BAEKJOON','https://www.acmicpc.net/problem/11006',11006,'남욱이의 닭장','2초','256 MB',3,'<p>계란집을 운영하는 남욱이는 매일&nbsp;닭장에서 달걀을 수거해간다. 어느 날 닭장에 들어가보니 일부 닭의 다리가 하나씩 사라졌다. 남욱이는 얼마나 많은 닭들이 한&nbsp;다리를&nbsp;잃었는지&nbsp;알고싶었지만 닭이 너무 많아 셀 수 없었고, 대신 모든 닭의 다리수를 셌다. 고민하는&nbsp;남욱이를 위해&nbsp;모든 닭의 다리수의 합과&nbsp;닭의 수를 가지고 이것을 해결해주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 총 테스트 케이스의 수 T (T ≤ 25)가, 둘째 줄 부터 T + 1째줄까지 매줄 마다&nbsp;모든 닭의 다리수의 합 N (1 ≤ N ≤&nbsp;300)과 닭의 수 M (M ≤ N ≤ 2M)이 공백을 간격으로&nbsp;입력된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>테스트 케이스마다 한줄에 다리가 잘린 닭의 수 U와 멀쩡한 닭의 수 T를 공백을 간격으로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
5 3
7 5
','1 2
3 2
','MATH'),
                                                                                                                (1775,'BAEKJOON','https://www.acmicpc.net/problem/11023',11023,'더하기 3','1초','256 MB',3,'<p>수 N개가 주어졌을 때, N개의 합을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(1 ≤ N ≤ 100)개의 수가 공백으로 구분되어서 주어진다. 입력으로 주어지는 수는 10,000보다 작거나 같은 자연수이다. 또, 0으로 시작하는 수는 주어지지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력받은 수 N개의 합을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 2 3 4 5
','15
','MATH'),
                                                                                                                (1776,'BAEKJOON','https://www.acmicpc.net/problem/11024',11024,'더하기 4','1초','256 MB',3,'<p>수 N개가 주어졌을 때, N개의 합을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있으며,&nbsp;N(1 ≤ N ≤ 100)개의 수가 공백으로 구분되어서 주어진다. 입력으로 주어지는 수는 10,000보다 작거나 같은 자연수이다. 또, 0으로 시작하는 수는 주어지지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 입력받은 수 N개의 합을 한 줄에 하나씩 입력받은 순서대로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1 2 3 4 5
5 4 5 4 2 3 1 2
','15
26
','MATH'),
                                                                                                                (1780,'BAEKJOON','https://www.acmicpc.net/problem/11025',11025,'요세푸스 문제 3','1초(추가시간없음)','16 MB',16,'<p>요세푸스 문제는 다음과 같다.</p>

<p>1번부터 N번까지 N명의 사람이 원을 이루면서&nbsp;앉아있고, 양의 정수 K(≤ N)가&nbsp;주어진다. 이제 순서대로 K번째 사람을 제거한다. 한 사람이 제거되면 남은 사람들로 이루어진 원을 따라 이 과정을 계속해 나간다. 이 과정은 N명의 사람이 모두 제거될 때까지 계속된다. 원에서 사람들이 제거되는 순서를 (N, K)-요세푸스 순열이라고 한다. 예를 들어 (7, 3)-요세푸스 순열은 <3, 6, 2, 7, 5, 1, 4>이다.</p>

<p>N과 K가 주어지면, 마지막으로 남는 사람의 번호를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 K가&nbsp;빈 칸을 사이에 두고 순서대로 주어진다. (1 ≤ K ≤ N ≤ 5,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 마지막으로 남는 사람의 번호를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7 3
','4
','MATH'),
                                                                                                                (1782,'BAEKJOON','https://www.acmicpc.net/problem/11026',11026,'BI?N đ?I C?P S?','1초','256 MB',15,'<p>T? c?p s? (a, b) g?m 2 s? nguyen d??ng, co th? s? d?ng 1 trong 3 phep bi?n đ?i sau đ? t?o ra c?p s? m?i&nbsp;</p>

<ul>
	<li>(a,b) → (a, a+b)&nbsp;</li>
	<li>(a,b) → (a+b, b)&nbsp;</li>
	<li>(a,b) → (b,a)&nbsp;</li>
</ul>

<p>B?t đ?u t? c?p s? (1, 1) hay dung it phep bi?n đ?i nh?t đ? t?o ra m?t c?p s? co ch?a s? N.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>Dong đ?u ch?a s? test T. Ti?p theo la T test, m?i test ch?a m?t s? 1 ≤ N ≤ 10<sup>6</sup>.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>?ng v?i m?i test, in ra tren m?t dong s? b??c bi?n đ?i it nh?t.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<ul>
	<li>(1 1)</li>
	<li>(1 1) → (2 1) → (3 1)&nbsp;</li>
	<li>(1 1) → (2 1) → (2 3) → (2 5)&nbsp;</li>
	<li>(1 1) → (2 1) → (2 3) → (2 5) → (2 7)</li>
</ul>

				</div>
				</div>','4
1
3
5
7
','0
2
3
4
','MATH'),
                                                                                                                (1784,'BAEKJOON','https://www.acmicpc.net/problem/11029',11029,'đ?I M?','1초','256 MB',8,'<p>T? x?a đ?n nay, vi?c phan chia h?c sinh vao t?ng khoa c?a tr??ng Hogwart đ??c th?c hi?n b?i nh?ng chi?c m? phep thu?t. Tr??c kia, tr??ng co 4 khoa. Tuy nhien, sau khi tai c? c?u l?i tr??ng, s? khoa thay đ?i thanh p. Nh?ng chi?c m? v?n đ??c s? d?ng đ? phan chia h?c sinh.&nbsp;</p>

<p>K? ho?ch phan chia h?c sinh vao t?ng khoa đ??c bi?u di?n b?ng day s? a[1], a[2],..., a[k], trong đo a[i] la khoa ma h?c sinh i s? h?c.&nbsp;</p>

<p>Cach phan chia h?c sinh c?a chi?c m? đ??c mo t? nh? sau: Cac khoa trong tr??ng đ??c đanh s? t? 0 đ?n p ? 1. G?i next(x) la khoa k? ti?p c?a khoa x v?i next(x) = x+1 v?i x < p -1 va next(p-1) = 0. K? ho?ch phan chia đ??c b?t đ?u b?ng m?t day s? co duy nh?t 1 ph?n t? 0. Sau m?i b??c, day a v?i k ph?n t? s? tr? thanh day s? m?i co 2k ph?n t? a[1], a[2],..., a[k], next(a[1]), next(a[2]),..., next(a[k]).&nbsp;</p>

<p>Xet vi d? v? vi?c phan chia 9 h?c sinh vao 4 khoa. Chi?c m? s? th?c hi?n theo k? ho?ch: (0), (0, 1), (0, 1, 1, 2), (0, 1, 1, 2, 1, 2, 2, 3), (0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 0),... đ? dai c?a day cu?i đ? cho 9 h?c sinh.&nbsp;</p>

<p>Cho cac c?p s? p, n. Nhi?m v? c?a b?n la cho bi?t khoa nao trong s? p khoa c?a tr??ng ma h?c sinh th? n s? vao h?c ? đo (h?c sinh đ??c đanh s? t? 1)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>Dong đ?u la s? truy v?n Q (1 ≤ Q ≤ 310000). Q dong ti?p, m?i dong la m?t c?p s? p, n (1 ≤ n ≤ 10<sup>18</sup>, 2 ≤ p ≤ 10<sup>18</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>In ra Q dong l?n l??t la đap an c?a Q truy v?n</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10
1 4
2 4
3 4
4 4
5 4
6 4
7 4
8 4
9 4
10 4
','0
1
1
2
1
2
2
3
1
2
','MATH'),
                                                                                                                (1786,'BAEKJOON','https://www.acmicpc.net/problem/11034',11034,'캥거루 세마리2','1초','256 MB',3,'<p>캥거루 세 마리가 사막에서 놀고 있다. 사막에는 수직선이 하나 있고, 캥거루는 서로 다른 한 좌표 위에 있다.</p>

<p>한 번 움직일 때, 바깥쪽의 두 캥거루 중 한 마리가 다른 두 캥거루 사이의 정수 좌표로 점프한다. 한 좌표 위에 있는 캥거루가 두 마리 이상일 수는 없다.</p>

<p>캥거루는 최대 몇 번 움직일 수 있을까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>여러개의 테스트 케이스로 이루어져 있으며, 세 캥거루의 초기 위치 A, B, C가 주어진다. (0 < A < B < C < 100)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트에 대해 캥거루가 최대 몇 번 움직일 수 있는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 3 5
3 5 9
','1
3
','MATH'),
                                                                                                                (1788,'BAEKJOON','https://www.acmicpc.net/problem/11050',11050,'이항 계수 1','1초','256 MB',5,'<p>자연수 \(N\)과 정수 \(K\)가 주어졌을 때 이항 계수 \(\binom{N}{K}\)를&nbsp;구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 \(N\)과 \(K\)가 주어진다. (1 ≤ \(N\) ≤ 10, 0 ≤ \(K\) ≤ \(N\))</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>&nbsp;\(\binom{N}{K}\)를&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 2
','10
','MATH'),
                                                                                                                (1790,'BAEKJOON','https://www.acmicpc.net/problem/11051',11051,'이항 계수 2','1초','256 MB',9,'<p>자연수 \(N\)과 정수 \(K\)가 주어졌을 때 이항 계수 \(\binom{N}{K}\)를 10,007로 나눈 나머지를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 \(N\)과 \(K\)가 주어진다. (1 ≤ \(N\) ≤ 1,000, 0 ≤ \(K\) ≤ \(N\))</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>&nbsp;\(\binom{N}{K}\)를 10,007로 나눈 나머지를&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 2
','10
','MATH'),
                                                                                                                (1791,'BAEKJOON','https://www.acmicpc.net/problem/11068',11068,'회문인 수','1초','256 MB',6,'<p>어떤 수를 왼쪽부터 읽어도, 오른쪽부터 읽어도 같을 때 이 수를 회문인 수라고 한다. 예를 들어, 747은 회문인 수이다. 255도 회문인 수인데, 16진수로 표현하면 FF이기 때문이다. 양의 정수를 입력받았을 때, 이 수가 어떤 B진법 (2 ≤ B ≤ 64)으로 표현하면 회문이 되는 경우가 있는지 알려주는 프로그램을 작성하시오. B진법이란, 한 자리에서 수를 표현할 때 쓸 수 있는 수의 가짓수가 B라는 뜻이다. 예를 들어, 십진법에서 B는 10이다.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력 데이터는 표준입력을 사용한다. 입력은 T개의 테스트 데이터로 구성된다. 입력의 첫 번째 줄에는 테스트 데이터의 수를 나타내는 정수 T가 주어진다. 각 테스트 데이터는 64 이상 1,000,000 이하인 하나의 정수로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 표준출력을 사용한다. 하나의 테스트 데이터에 대한 답을 하나의 줄에 출력한다. 각 테스트 데이터에 대해, 주어진 수가 어떤 B진법 (2 ≤ B ≤ 64)으로 표현하여 회문이 될 수 있다면 1을, 그렇지 않다면 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
747
255
946734
','1
1
0
','MATH'),
                                                                                                                (1793,'BAEKJOON','https://www.acmicpc.net/problem/11070',11070,'피타고라스 기댓값','1초','256 MB',5,'<p>유명한 피타고라스의 정리와 유사한 형태의 피타고라스 기댓값 (Pythagorean Expectation)이 야구와 같은 스포츠 경기에 자주 사용된다. 피타고라스 기댓값은 빌 제임스(Bill James)에 의해 정의되었으며, 이 값은 특정 야구팀이 한 시즌 동안 얼마나 잘 했는지를 평가하는 지표 중 하나로 사용된다. 한 야구팀의 피타고라스 기댓값 \(W\)는 아래 식과 같이 정의된다.</p>

<p style="text-align:center">\(W = \dfrac{S^2}{S^2 + A^2}\),</p>

<p>여기서 \(S\)는 해당 팀의 총 득점 수를, \(A\)는 해당 팀의 총 실점 수를 나타낸다.</p>

<p>이 기댓값을 실제 승률과 비교하여, 해당 팀이 한 시즌을 얼마나 잘 보냈는지 평가할 수 있다. 예를 들어, 한화 이글스는 2014 시즌에 619 득점과 889 실점을 했다. 즉, \(S\)&nbsp;= 619, \(A\) = 889이 되어, 한화 팀의 피타고라스 기댓값은 \(W\) = 619<sup>2</sup>/(619<sup>2</sup> + 889<sup>2</sup>) = 0.326이 된다. KBO 규정에 따르면, 한 시즌당 한 팀은 128번의 경기를 해야 하므로, 한화는 0.326 ×128 = 41.728&nbsp;경기에서는 승리했어야 한다. 실제 한화는 49경기에서 승리했기 때문에, 2014 시즌을 그리 나쁘지 않게 보냈음을 알 수 있다. 반면에 롯데 자이언츠는 \(S\) = 715이고, \(A\) = 719이 되어, \(W\)&nbsp;= 0.497이 된다. 따라서 0.497 ×128 = 63.616경기 이상을 이길 것으로 기대되었지만, 실제론 58경기만 승리했다. 결국, 롯데에게 2014년은 기대에 많이 못 미친 시즌이었음을 알 수 있다.</p>

<p>\(n\)개의 팀에 대한 기록이 주어지면, 이 기록으로부터 팀 별 피타고라스 기댓값을 계산한 후, 그 중 최대 기댓값과 최소 기댓값을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력 데이터는 표준입력을 사용한다. 입력은 T개의 테스트 데이터로 구성된다. 입력의 첫 번째 줄에는 입력 데이터의 수를 나타내는 정수 T가 주어진다. 각 테스트 데이터의 첫 줄에는 두 양의 정수 \(n\) (2 ≤ \(n\) ≤ 1,000)과 \(m\) (2 ≤ \(m\) ≤ 1,000)이 주어진다. 여기서, \(n\)은 팀 개수이며, \(m\)은&nbsp;전체 경기 수이다. 다음의 \(m\)개의 줄에는 각 경기에 대한 정보가 주어진다. 하나의 경기는 네 개의 정수 \(a\), \(b\), \(p\), \(q\)로 주어지는데, 팀 a와 팀 b가 경기를 했고, 팀 a는 p득점을 팀 b는 q득점을 했다는 의미이다. 여기서, 1 ≤ \(a\) ≠ \(b\) ≤ \(n\)이며, \(p\)와 \(q\)는 모두 음이 아닌 20 이하의 정수이다. 하나의 테스트 데이터에서 팀 당 경기수가 반드시 같을 필요는 없다. 만약, 어떤 팀의 총 득점과 총 실점이 모두 0이라면, 그 팀의 기댓값은 0으로 정의한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 표준 출력을 사용한다. 각 테스트 데이터에 대해, 두 정수 값을 한 줄에 하나씩 출력해야 한다. 첫 번째 줄에는 최대 피타고라스 기댓값에 1,000을 곱한 값의 정수부분을 출력하고, 두 번째 줄에는 최소 피타고라스 기댓값에 1,000을 곱한 값의 정수부분을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
3 5
1 2 3 5
1 3 10 1
1 2 0 7
2 3 9 3
3 2 4 5
4 6
1 2 0 11
1 3 17 13
1 4 17 1
2 3 7 12
2 4 19 17
3 4 17 0
','871
100
753
103
','MATH'),
                                                                                                                (1795,'BAEKJOON','https://www.acmicpc.net/problem/11082',11082,'소수를 분수로','2초','256 MB',11,'<p>Cube World에서는 모든 유리수를 소수로 표시하고, Baekjoon World에서는 모든 유리수를 분수로 표시합니다. 이때문에 두 나라 간에 오랜 기간 동안 전쟁을 치뤘고, 마침내 서로의 생각을 존중하기로 화해했습니다.</p>

<p>그런데 문제는 Cube World에서 사용하는 소수가 너무 많아서, 이를 모두 Baekjoon World에서 사용하는 분수로 바꾸기는 어렵다는 것이었습니다. 한참을 고민 한 두 나라는 결국 위대한 과학자인 당신에게 도움을 요청해 왔습니다.</p>

<p>Cube World에서는 순환소수를 표시할 때 순환하는 부분을 소괄호로 묶어서 표시합니다. 예를 들어 0.444...는 0.(4)로 표시하는 식입니다. Baekjoon World에서는 분수를 표시할 때 분자와 분모가 서로소가 되도록 하여 표시합니다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 Cube World에서 사용하는 길이가 10 이하인 소수 하나가 주어집니다. 이 소수는 소수점과 소수 부분이 없을 수도 있고, 순환하는 부분이 없을 수도 있습니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 줄에 Baekjoon World에서 사용하는 분수로 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2015
','2015/1
','MATH'),
                                                                                                                (1796,'BAEKJOON','https://www.acmicpc.net/problem/11087',11087,'Bobby’s Bet','2초','256 MB',9,'<p>Bobby and Betty have a bet. Betty bets Bobby that he cannot roll an S-sided die (having values 1 through S) and obtain a value ≥ R on at least X out of Y rolls. Betty has a variety of dice with different numbers of sides S, and all her dice are fair (for a given die, each side’s outcome is equally likely). In order to observe statistically rare events while still giving Bobby a reason to bet, Betty offers Bobby W to 1 odds on each encounter. For example, suppose Betty bets Bobby 1 bitcoin that he can’t roll at least a 5 on a 6-sided die at least two out of three times; if Bobby does, she would give him 3 times his initial bet (i.e. she would give him 3 bitcoins). Should Bobby take the bet (is his expected return greater than his original bet)?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>Input begins with an integer 1 ≤ N ≤ 10 000, representing the number of cases that follow. The next N lines each contain five integers, R, S, X, Y , and W. Their limits are 1 ≤ R ≤ S ≤ 20, 1 ≤ X ≤ Y ≤ 10, and 1 ≤ W ≤ 100.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>For each case, output “yes” if Bobby’s expected return is greater than his bet, or “no” otherwise. Bobby is somewhat risk averse and does not bet if his expected return is equal to his bet.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
5 6 2 3 3
5 6 2 3 4
','no
yes
','MATH'),
                                                                                                                (1800,'BAEKJOON','https://www.acmicpc.net/problem/11109',11109,'괴짜 교수','1초','256 MB',3,'<p>승혁이는 괴짜 교수이다. 그는 미래에&nbsp;컴퓨터 프로그램을 만들기 위해서는 컴퓨터 프로그램을 병렬로 만들어야&nbsp;한다고 믿는다. 그가 옳다는 것을 확신시키기 위해서 그는 실험을 진행&nbsp;하길 원했다.&nbsp;</p>

<p>실험과정은 다음과 같다:&nbsp;그는 먼저 몇 개의 문제에 대해&nbsp;이 프로그램이 다음&nbsp;해 동안&nbsp;실행&nbsp;될 횟수를&nbsp;예상한다. 그리고&nbsp;그는 그의 조교에게 병렬버전의 프로그램을 개발하고, 그 프로그램을 개발하는 데 걸리는 시간을 측정하라고 지시한다. 마지막으로,&nbsp; 그들은 병렬버전과 직렬버전의 실행 시간을 측정한다.&nbsp;</p>

<p>이 측정된 데이터를 기반으로, 승혁이는 어떤 경우에 병렬화를 통해 전반적인 작업량을 최소화하는지 알고 싶어한다. 이 일에 대한 작업량은 병렬버전을 개발하는 시간과 그 프로그램이 실행될 때까지 기다리는 시간이다.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 입력으로 테스트케이스의 개수 T&nbsp;(T&nbsp;≤ 1000)가 주어진다.&nbsp;각각의 테스트케이스에 대해 정수 d, n, s, p가 한 칸의 공백을 사이로 주어진다. d&nbsp;(0 ≤ d ≤ 1000000)는 병렬 버전을 개발하는데 걸리는 시간이다.그리고 n&nbsp;(0 ≤ n ≤ 100000)&nbsp;은 다음해&nbsp;동안 이 프로그램이 실행되는 횟수이다.&nbsp;s와 p (0 ≤ s, p ≤ 1000)&nbsp;는&nbsp; 각각&nbsp;직렬버전과 병렬버전의 실행 시간이다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트케이스에 대해 병렬화를 하는게 좋으면 "parallelize"&nbsp;를 출력하고, 병렬화를 하는게 좋지 않으면 "do not parallelize" 를 출력한다. 만약 직렬화와 병렬화를 통한 시간이 같으면 "does not matter"&nbsp;를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
10 2 3 2
20 5 8 2
0 2 1 1
','do not parallelize
parallelize
does not matter
','MATH'),
                                                                                                                (1809,'BAEKJOON','https://www.acmicpc.net/problem/11134',11134,'쿠키애호가','1초','256 MB',3,'<p>철수는 쿠키를 세상에서 제일 좋아한다. 쿠키가 있는 곳이라면 철수도 반드시 있다고 할 정도이다. 철수는 날마다 자신이 가지고 있는 쿠키 중 C개를 먹는다. C개 미만의 쿠키가 남아 있다면 전부 먹는다. 철수가 쿠키 N개를 가지고 있으면 며칠 동안 먹을 수 있는지 구하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 테스트케이스의 개수 T가 주어진다. 그 다음 줄부터 T개의 줄에 테스트케이스가 한 줄씩 주어진다. 테스트케이스는 철수가 가진 쿠키의 개수 N과 날마다 먹는 쿠키의 개수 C로 이루어져 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트케이스마다 한 줄씩 철수가 며칠 동안 쿠키를 먹을 수 있는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
6 2
10 3
','3
4
','MATH'),
                                                                                                                (1814,'BAEKJOON','https://www.acmicpc.net/problem/11170',11170,'0의 개수','3초','256 MB',5,'<p>N부터 M까지의 수들을 종이에 적었을 때 종이에 적힌 0들을 세는 프로그램을 작성하라.</p>

<p>예를 들어, N, M이 각각 0, 10일 때 0을 세면 0에 하나, 10에 하나가 있으므로 답은 2이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트 케이스의 수 T가 주어진다.</p>

<p>각 줄에는 N과 M이 주어진다.</p>

<ul>
	<li>1 ≤ T ≤ 20</li>
	<li>0 ≤ N ≤ M ≤ 1,000,000</li>
</ul>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스마다 N부터 M까지의 0의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
0 10
33 1005
1 4
','2
199
0
','MATH'),
                                                                                                                (1817,'BAEKJOON','https://www.acmicpc.net/problem/11179',11179,'2진수 뒤집기','1초','256 MB',5,'<p>희연이는 스웨덴으로 이사하여 현재 학교를 다니고 있다. 1학년 교육과정은&nbsp;중국에서 배웠고,&nbsp;스웨덴과 중국&nbsp;두 나라의 교육과정은 완전히 다르다. 희연이는 수학을 좋아한다. 하지만 지금은... 선생님은 칠판에 뺄셈을 설명하고&nbsp;있어서 희연이는 수업에 흥미가 없다. 칠판에 있는 수들을 역 이진법으로 나타낸 수들로&nbsp;같은 계산을 수행하는 것이 가능할까? 희연이는&nbsp;몽상을 하며 시간을 보냈고, 머릿속으로 역 이진법 표시&nbsp;프로그램을 구상하기 시작했다. 수업이 끝나는대로 희연이는 집에가서 컴퓨터에 그것들을 적을 것이다.</p>

<p>당신이 할 일은 역 이진법 프로그램을 작성하는 것이다. 예를 들어 13을 2진법으로 나타내면&nbsp;1101이고, 이것을 뒤집으면 1011이 된다. 이 수를 다시 10진법으로 나타내면 11이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 한 줄에 정수 N(1 ≤ N ≤ 1,000,000,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력받은&nbsp;N을&nbsp;2진법으로 나타낸&nbsp;뒤&nbsp;뒤집어,&nbsp;다시&nbsp;10진법으로 나타낸 수를&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','13
','11
','MATH'),
                                                                                                                (1845,'BAEKJOON','https://www.acmicpc.net/problem/11296',11296,'가격','1초','256 MB',4,'<p>Golden Valley(골든 벨리) 의류 창고에는 겨울 재고가 많이 쌓여있는데, 곧 들어올 봄 여름 신상품을 위한 공간 마련을 위해 겨울 재고를 빨리 판매하려 합니다. 관리자는 상당히 복잡한 세일 정책을 생각했고, 당신에게&nbsp;그것을 시행하도록&nbsp;맡겼습니다.</p>

<p>여기에&nbsp;관리자가 정해놓은 규칙이 있습니다.</p>

<p>물건들에는 색이 있는 점 모양의 스티커가 하나씩 붙어있습니다. 각각의 점은 아래 표와 같은 할인 비율을 나타냅니다.</p>

<table class="table table-bordered" style="width:30%">
	<tbody>
		<tr>
			<td>점의 색깔</td>
			<td>할인율%</td>
		</tr>
		<tr>
			<td>빨강색</td>
			<td>45</td>
		</tr>
		<tr>
			<td>초록색</td>
			<td>30</td>
		</tr>
		<tr>
			<td>파란색</td>
			<td>20</td>
		</tr>
		<tr>
			<td>노란색</td>
			<td>15</td>
		</tr>
		<tr>
			<td>주황색</td>
			<td>10</td>
		</tr>
		<tr>
			<td>흰색</td>
			<td>5</td>
		</tr>
	</tbody>
</table>

<p>또한, 관리자는 할인 쿠폰을 뿌리고 있습니다! 할인 쿠폰을 가진 고객은 할인된 가격에서 추가로 5%의 할인을 받습니다.</p>

<p>당신은 주어진 각 항목의 할인된 가격을 계산해야합니다. 당신의 프로그램은 판매되는 동안 계속 작동해야하고, 소수점 셋째 자리에서 반올림해야합니다.</p>

<p>만약 고객이 현금을 지불하면, 당신은 소수점 둘째 자리에서 반올림하셔야 합니다. 단, 이때 5는 버려집니다. 즉 0.05를 반올림하면 0.00이 되고, 0.06을 반올림하면 0.10이 됩니다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄의 입력은 양의 정수이며, N(0 < N <= 100)은 구매자 수를 의미하며 다음 라인은 각자의 구매를 나타냅니다.</p>

<p>각 행은 다음과 같은 형식이며, 항목은 공백으로 구분됩니다.</p>

<pre><원래 가격><dots(점)><쿠폰><결제></pre>

<ul>
	<li><원래 가격>:&nbsp;모든 할인 전 품목의 가격, 소수점은 2번째 자리까지입니다.</li>
	<li><dots(점)>:&nbsp;점의 색깔이며, 색의 첫 글자인 대문자를 이용하여 색을 나타냅니다.</li>
	<li><쿠폰>:&nbsp;C는 쿠폰이 있는 경우, X는 쿠폰이 없는 경우를 의미합니다.</li>
	<li><결제>: C는 현금결제를, P는 카드결제를 의미합니다.</li>
</ul>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력 받은 것의 할인된 가격을 한 줄에 출력해야 합니다. 그리고 이러한 형식입니다.</p>

<pre>$d.cc</pre>

<p>즉, 달러기호, 금액, 소수점 2자리까지이며, 소수점이 0인 경우, 0을 표시해야합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
29.99 R X P
119.95 W C P
68.50 B X P
69.90 Y C C
','$16.49
$108.25
$54.80
$56.40
','MATH'),
                                                                                                                (1834,'BAEKJOON','https://www.acmicpc.net/problem/11312',11312,'삼각 무늬 - 2','1초','256 MB',3,'<p>무엇이든 덮어버리는 것을 좋아하는 지은이는 한변의 길이가 A인 정삼각형을 한변의 길이가 B인 정삼각형으로 완전히 덮어 버리고자 한다.&nbsp;</p>

<p>두개의 정수 A, B 가 주어지고,&nbsp;B ≤ A 이고, A를 B로 나눌수 있을때, 한 변의 길이가 A인 정삼각형을 완전하게 덮기 위한, 한변의 길이가&nbsp;B인 정삼각형의&nbsp;개수를 구하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. (T&nbsp;≤ 1000)</p>

<p>각각의 테스트 케이스는 한줄로 이루어져 있으며 두개의 정수 A, B 가 (1 ≤ B ≤ A ≤ 1,000,000, B|A)&nbsp;주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 한변의 길이가 A인 정삼각형을 완벽하게 덮을 수 있는&nbsp;한변의 길이가&nbsp;B인&nbsp;정삼각형의 최소 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
2 1
3 3
','4
1
','MATH'),
                                                                                                                (1847,'BAEKJOON','https://www.acmicpc.net/problem/11320',11320,'삼각 무늬 - 1','1초','256 MB',3,'<p>무엇이든 덮어버리는 것을 좋아하는 구사과는 한 변의 길이가 A인 정삼각형을 한 변의 길이가 B인 정삼각형으로 완전히 덮어버리고자 한다.</p>

<p>두&nbsp;개의 정수 A, B가 주어지고,&nbsp;B ≤ A 이고, A를 B로 나눌 수 있을 때, 한 변의 길이가 A인 정삼각형을 완전하게 덮기 위한, 한 변의 길이가 B인 정삼각형의 개수를 구하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. (T&nbsp;≤ 100)</p>

<p>각각의 테스트 케이스는 한 줄로 이루어져 있으며 두 개의 정수 A, B가 (1 ≤ B ≤ A ≤ 1,000, B|A)&nbsp;주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 한 변의 길이가 A인 정삼각형을 완벽하게 덮을 수 있는 한 변의 길이가&nbsp;B인&nbsp;정삼각형의 최소 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
2 1
3 3
','4
1
','MATH'),
                                                                                                                (1856,'BAEKJOON','https://www.acmicpc.net/problem/11382',11382,'꼬마 정민','1초','512 MB',1,'<p>꼬마 정민이는 이제 A + B 정도는 쉽게 계산할 수 있다. 이제 A + B + C를 계산할 차례이다!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 A, B, C (1 ≤ A, B, C ≤ 10<sup>12</sup>)이 공백을 사이에 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>A+B+C의 값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','77 77 7777
','7931
','MATH'),
                                                                                                                (1857,'BAEKJOON','https://www.acmicpc.net/problem/11385',11385,'씽크스몰','10초','512 MB',22,'<p>많이 자란 정민이는 부모님이 시키는 유명한 학습지 씽크스몰을 해야 한다. 정민이가 이번에 배워야 하는 부분은 다항식의 곱셈이다. 하지만 정민이는 게임을 해야만 하기에, 여러분에게 점수를 줄 테니 다항식 f(x)와 다항식 g(x)를 곱해주는 프로그램을 작성해 달라고 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 다항식 f(x)의 차수 N (1 ≤ N ≤ 1,000,000)과 다항식 g(x)의 차수 M (1 ≤ M ≤ 1,000,000)이 공백을 사이로 두고 주어진다.</p>

<p>두 번째 줄에는 다항식 f(x)의 계수를 나타내는 N + 1개의 자연수 a<sub>0</sub>, a<sub>1</sub>, ..., a<sub>N-1</sub>, a<sub>N</sub>이 주어진다. f(x) = a<sub>0</sub> + a<sub>1</sub>·x + a<sub>2</sub>·x<sup>2</sup> + ... + a<sub>N-1</sub>·x<sup>N-1</sup> + a<sub>N</sub>·x<sup>N</sup>이다. (1 ≤ a<sub>i</sub> ≤ 1,000,000)</p>

<p>세 번째 줄에는 다항식 g(x)의 계수를 나타내는 M + 1개의 자연수 b<sub>0</sub>, b<sub>1</sub>, ..., b<sub>M-1</sub>, b<sub>M</sub>이 주어진다. g(x) = b<sub>0</sub> + b<sub>1</sub>·x + b<sub>2</sub>·x<sup>2</sup> + ... + b<sub>M-1</sub>·x<sup>M-1</sup> + b<sub>M</sub>·x<sup>M</sup>이다.&nbsp;(1 ≤ b<sub>i</sub> ≤ 1,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>f(x) × g(x) = c<sub>0</sub> + c<sub>1</sub>·x + c<sub>2</sub>·x<sup>2</sup> + ... + c<sub>L</sub>·x<sup>L</sup>라고 하자.</p>

<p>첫 번째 줄에 c<sub>0</sub>, c<sub>1</sub>, ..., c<sub>L</sub>의 값을 모두 xor한 값, 즉 c<sub>0</sub> ?&nbsp;c<sub>1</sub> ?&nbsp;... ?&nbsp;c<sub>L</sub>을 출력한다. C/C++에서는 c[0] ^ c[1] ^ ... ^ c[L-1] ^ c[L]의 값을 구하면 된다.</p>

<p>xor 연산을 시행하는 이유는, c<sub>i</sub>를 출력하기에는 그 양이 너무 많기 때문이며, 문제의 풀이에는 영향을 주지 않는다.</p>

<p>&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>f(x) = 1 + 2x, g(x) = 3 + 2x, f(x) × g(x) = 3 + 8x + 4x<sup>2</sup></p>

				</div>
				</div>','1 1
1 2
3 2
','15
','MATH'),
                                                                                                                (1858,'BAEKJOON','https://www.acmicpc.net/problem/11386',11386,'괄호 문자열','10초','512 MB',26,'<p>(와 )로만 이루어진 문자열들을 괄호 문자열이라 하는데 괄호 문자열 중에서도 올바른 괄호 문자열은 아래와 같이 정의된다.</p>

<ol>
	<li>빈 문자열은 올바른 괄호 문자열이다.</li>
	<li>문자열 S가 올바른 괄호 문자열이면 (S)도 올바른 괄호 문자열이다.</li>
	<li>문자열 S와 T가 올바른 괄호 문자열이면 ST도 올바른 괄호 문자열이다.</li>
</ol>

<p>올바른 괄호 문자열이 아닌 괄호 문자열들은 올바르지 않은 괄호 문자열이라고 한다. 올바른 괄호 문자열의 예로는 "(())()", "()()()", "(()())” 등이 있고, 올바르지 않은 괄호 문자열의 예로는 "())(()", "(", "(()()()" 등이 있다.</p>

<p>어떤 문자열 S가 주기성이 있는 문자열이라는 것은 문자열 S의 비어 있지 않은 접두사 u가 동시에 S의 접미사일 때가 있음을 뜻한다. 주기성이 있는 문자열이 아닌 문자열들은 주기성이 없는 문자열이라고 한다. 주기성이 있는 문자열의 예로는 "abcabcab", "()(", "aaaaaa" 등이 있고, 주기성이 없는 문자열의 예로는 "abcd", "(())()", "a" 등이 있다. 각각 두 번째로 들었던 예는 주기성이 있는 괄호 문자열과 주기성이 없는 괄호 문자열이라고 할 수 있다.</p>

<p>길이가 L인 괄호 문자열들 중에서 주어진 조건을 만족하는 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 네 정수 p, q, m, Q (0 ≤ p, q ≤ 1, 1 ≤ m ≤ 10<sup>6</sup>, 1 ≤ Q ≤ 10<sup>5</sup>)이 공백을 사이로 두고 차례대로 주어진다.</p>

<p>다음 Q개의 각 줄에는 하나의 자연수 L (1 ≤ L ≤ 10<sup>6</sup>)이 주어진다. 앞으로 길이가 L인 모든 괄호 문자열의 집합을 A<sub>L</sub>, 길이가 L인 올바르지 않은 괄호 문자열의 집합을 B<sub>L</sub>, 길이가 L인 주기성이 없는 괄호 문자열의 집합을 C<sub>L</sub>이라고 하자. 주어지는 각 L마다 p = 0이면 P = A<sub>L</sub>, p = 1이면 P = B<sub>L</sub>이고, q = 0이면 Q = A<sub>L</sub>, q = 1이면 Q = C<sub>L</sub>이다. 여러분은 P ∩ Q의 크기를 m으로 나눈 나머지를 출력해야 한다.</p>

<p>즉 p = 1, q = 0이면 길이가 L인 올바르지 않은 괄호 문자열의 개수를, p = 0, q = 1이면 길이가 L인 주기성이 없는 괄호 문자열의 개수를, p = 1, q = 1이면 길이가 L인 올바르지 않으면서 주기성도 없는 괄호 문자열의 개수를 구하면 된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>Q개의 줄에 걸쳐서 입력에서 정의한 대로 P ∩ Q의 크기를 m으로 나눈 나머지를 출력하면 된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>길이가 4인 괄호 문자열 중에서 올바른 것은 "()()"과 "(())"의 두 가지이므로, 올바르지 않은 괄호 문자열의 개수는 16 - 2 = 14개 이다. 그리고 길이가 4인 주기성이 없는 괄호 문자열은 "((()", "(())", "()))", ")(((", "))((", ")))("의 6개이고, 이 중에서 올바른 괄호 문자열은 "(())" 하나이므로, 길이가 4인 올바르지 않으면서 주기성도 없는 괄호문자열은 5개이다.</p>

				</div>
				</div>','1 0 17 2
4
8
','14
4
','MATH'),
                                                                                                                (1855,'BAEKJOON','https://www.acmicpc.net/problem/11387',11387,'님 무기가 좀 나쁘시네여','1초','512 MB',8,'<p><span style="line-height:1.6em">크리와 파부는 요즘 새로 나온 게임인 "○○○ ○○"을 하고 있다. 이 게임의 주요 특징 중 하나는 캐릭터의 전투력을 수치로 표현한다는 것인데, 이를 통해 그 캐릭터가 얼마나 강한지를 대략적으로 파악할 수 있다. 게임 내에서 캐릭터는 무기를 단 하나 장착할 수 있는데, 어떤 무기를 창작하느냐에 따라 캐릭터의 전투력이 좋아질 수도 있고 나빠질 수도 있다. 그러므로 사람들은 좋은 무기를 장착해서 전투력을 높히려고 한다.</span></p>

<p>어느 날 게임을 하던 크리와 파부는 신기한 일을 겪었다. 이 게임에는 자신이 장착하지 않은 다른 장비를 볼 때 현재 자신이 장착한 장비를 그것으로 대체하면 전투력이 얼마나 변화하는지 표시해 주는 기능이 있는데, 크리가 파부의 무기에 대한 정보를 볼 때와 파부가 크리의 무기에 대한 정보를 볼 때 모두 "전투력이 떨어질 것"이라는 결과가 나왔던 것이다. 크리는 이것이 전투력이 계산되는 공식에 의해 생기는 현상이라는 것을 알게 되었다.</p>

<p>전투력에 영향을 주는 수치는 "공격력", "힘", "치명타 확률", "치명타 피해비율", "공격속도 증가"의 다섯 가지로 전투력은 이 수치들을 이용하여 다음과 같이 계산된다.</p>

<p>\[ (\text{전투력}) = (\text{공격력}) \times  \left( 1 + \frac{(\text{힘})}{100} \right) \times \left[ \left\{ 1 - \min{(\text{치명타 확률}, 1)} \right\} + \min{(\text{치명타 확률}, 1)} \times (\text{치명타 피해비율}) \right] \times \left\{1 + (\text{공격속도 증가})\right\}\]</p>

<p>위 식에서 <strong>min(치명타 확률, 1)</strong>은 치명타 확률이 100% 이상(1 이상)이면 그 값을 1로 가정한다는 의미이다.</p>

<p>무기를 장착한 상태인 크리와 파부의 공격력, 힘, 치명타 확률, 치명타 피해비율, 공격속도 증가의 다섯 수치와 크리와 파부가 장착한 무기가 올려주는 공격력, 힘, 치명타 확률, 치명타 피해비율, 공격속도 증가의 다섯 수치가 주어진다. 크리가 파부의 무기를 장착하면 전투력이 늘어나는지 줄어드는지 변화가 없는지, 파부가 크리의 무기를 장착하면 전투력이 늘어나는지 줄어드는지 변화가 없는지 알아내는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>각 줄마다 "공격력", "힘", "치명타 확률", "치명타 피해비율", "공격속도 증가"의 수치를 나타내는 다섯 개의 정수가 공백을 사이에 두고 순서대로 주어진다.</p>

<p>첫 번째 줄은 무기를 장착한 크리의 수치, 두 번째 줄은 무기를 장착한 파부의 수치, 세 번째 줄은 크리가 현재 장착하고 있는 무기가 올려주는 수치, 마지막으로 네 번째 줄은 파부가 현재 장착하고 있는 무기가 올려주는 수치를 의미한다.</p>

<p>"공격력"과 "힘"은 0 이상 20,000 이하, "치명타 확률"은 0 이상 200 이하, "치명타 피해비율"과 "공격속도 증가"는 0 이상 500 이하이다. 치명타 확률과 치명타 피해비율, 공격속도 증가의 단위는 모두 %이다. (예를 들어, "치명타 확률"이 56으로 주어지면 실제 치명타 확률은 56% = 0.56이다.) 또한 무기가 가진 각 수치는 그 무기를 장작한 사용자의 수치보다 작거나 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에는 크리가 파부의 무기를 장착할 때 전투력 변화 여부를 출력한다. 두 번째 줄에는 파부가 크리의 무기를 장착할 때 전투력 변화 여부를 출력한다. 증가한다면 “+”, 감소한다면 “-”, 변화가 없다면 “0”을 출력하면 된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','200 300 0 100 0
400 100 0 100 0
0 250 0 0 0
250 0 0 0 0
','-
-
','MATH'),
                                                                                                                (1859,'BAEKJOON','https://www.acmicpc.net/problem/11390',11390,'맛있는 과자','1초','512 MB',14,'<p>엘리가 좋아하는 과자는 직각삼각형 모양이고, 빗변을 제외한 다른 두 변의 길이가 각각 a와 b이다. 어느 날 엘리는 이 과자를 많이 많이 먹을 수 있는 방법을 떠올리고 자신의 천재성에 전율했다.</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/11390/1.png" style="height:212px; width:304px"></p>

<p>엘리는 빗변의 양 끝점이 아닌 점에서 빗변으로 과자를 자르면 직각삼각형 두 개를 만들 수 있다는 것을 알았다! 사실 이렇게 잘라봐야 과자의 총 면적은 같지만, 어린 엘리는 과자가 두 개가 되었다는 사실이 너무 행복했고 이런 방법을 떠올린 자신이 너무 기특했다. 그리고 또 생각했다. 직각삼각형 모양 과자가 두 개가 되었으니까 이 두 개를 아까처럼 자르면 직각삼각형 모양 과자가 네 개… 여덟 개… 2<sup>N</sup>개! 즉 엘리가 하나의 직각삼각형 모양 과자를 가지고 시작해서 자신이 가진 모든 과자를 잘라 과자의 개수를 두 배로 불리는 것을 N번 반복하면 엘리가 가진 직각삼각형 모양 과자의 개수는 2<sup>N</sup>개가 되는 것이다! 이렇게 자르는 것은 엘리가 가진 놀라운 힘을 이용하면 간단한 것이었고, 엘리는 이미 이런 식으로 과자들을 자르는 행위를 N번 반복해 2<sup>N</sup>개의 조각을 가지고 있다.</p>

<p>엘리는 이 과자들을 모두 먹고 싶었지만 모두 먹기에는 너무 조각이 많다고 생각해서 2<sup>N</sup>개의 조각들 중 크기(=면적)가 K번째로 큰 한 조각은 바보 피터에게 주기로 했다. 피터가 받게 될 과자의 면적이 얼마지 구하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 네 개의 자연수 a, b, N, K (1 ≤ a, b ≤ 100, 1 ≤ N ≤ 40, 1 ≤ K ≤ 2<sup>N</sup>)이 공백을 사이로 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 피터가 받게 될 과자의 크기(=면적)를 출력한다. 다만 이 값이 너무 작을 수 있으므로, 면적에 자연 로그(\(\ln{}\))을 취한 값을 출력한다. (즉 면적이 S라면, \(\ln{S}\)의 값을 출력해야 한다.) math.h 또는 cmath 헤더에 있는 log 함수(<a href="http://www.cplusplus.com/reference/cmath/log/">레퍼런스</a>)가 자연 로그를 계산하는 함수이다.</p>

<p>출제진이 의도한 정답과의 절대 오차 또는 상대 오차가 10<sup>-8</sup> 이하이면 올바른 답안으로 인정한다. 비교는 여러분이 출력한 값, 즉 면적에 자연로그를 취한 값을 기준으로 이루어진다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 4 1 1
','1.345472367','MATH'),
                                                                                                                (1861,'BAEKJOON','https://www.acmicpc.net/problem/11392',11392,'색종이','1초','512 MB',29,'<p>좌표평면 위에 N개의 서로 색이 다른 색종이를 하나씩 하나씩 붙인다. 색종이는 반드시 좌표평면과 이미 붙어 있는 모든 색종이들의 위에 놓여야 하며, 색종이를 좌표평면 아래에 붙이거나 붙어 있는 색종이 사이에 넣는 것은 불가능하다.</p>

<p>색종이의 모양에는 두 가지 종류가 있는데, 아래와 같다.</p>

<ol>
	<li>(x<sub>1</sub>, y<sub>1</sub>), (x<sub>2</sub>, y<sub>2</sub>), (x<sub>3</sub>, y<sub>3</sub>)을 세 꼭짓점으로 하는 삼각형 모양</li>
	<li>점 (x, y)가 중심이고 반지름의 길이가 r인 원 모양</li>
</ol>

<p>색종이에 1번부터 N번까지의 자연수 번호를 붙인 후, 번호가 작은 순서대로 차례대로 (1번, 2번, .., N번) 색종이를 붙인다. 아래 그림은 색종이를 붙이는 과정의 예시를 나타낸다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/11392/1.png" style="height: 115.833px; width: 383.333px;"></p>

<p>1번부터 i번까지의 모든 색종이를 붙인 시점에서, 붙어 있는 색종이들이 각각 얼마나 보이는지를 구하여 출력하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 자연수 N (1 ≤ N ≤ 200)이 주어진다.</p>

<p>이후 색종이들의 정보를 나타내는 N개의 줄이 주어진다. 이 중 i (1 ≤ i ≤ N)번째 줄에는 맨 처음 i번 색종이의 종류를 나타내는 정수 t (1 ≤ t ≤ 2)가 주어진다. t = 1이면 i번 색종이의 모양이 삼각형이라는 것으로, 이후 같은 줄에 삼각형의 세 꼭짓점의 좌표를 나타내는 6개의 정수 x<sub>1</sub>, y<sub>1</sub>, x<sub>2</sub>, y<sub>2</sub>, x<sub>3</sub>, y<sub>3</sub> (-100 ≤ x<sub>1</sub>, y<sub>1</sub>, x<sub>2</sub>, y<sub>2</sub>, x<sub>3</sub>, y<sub>3</sub> ≤ 100)이 공백을 사이로 두고 주어진다. 세 점이 일직선상에 놓여있는 경우는 없다. t = 2이면 i번 색종이의 모양이 원이라는 것으로, 이후 같은 줄에 원의 중심의 좌표를 나타내는 두 정수 x, y(-100 ≤ x, y ≤ 100)와 이 원의 반지름을 나타내는 정수 r(1 ≤ r ≤ 100)이 공백을 사이로 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>N개의 줄에 걸쳐 정답을 출력한다. 이 중 i (1 ≤ i ≤ N)번째 줄에는, 1번부터 i번까지의 모든 색종이를 순서대로 올렸을 때, 1번 색종이의 보이는 면적, 2번 색종이의 보이는 면적, ..., i번 색종이의 보이는 면적을 나타내는 i개의 실수를 공백을 사이로 두고 차례대로 출력하면 된다.</p>

<p>정답과의 절대 오차 또는 상대 오차가 10<sup>-8</sup> 이하이면 올바른 답안으로 인정된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
2 0 0 1
1 0 0 2 0 0 2
','3.141592653590
2.356194490192 2.000000000000
','MATH'),
                                                                                                                (1860,'BAEKJOON','https://www.acmicpc.net/problem/11394',11394,'최적의 능력 구성','1초','512 MB',15,'<p>경근이는 요즘 여러 능력을 가지고 몬스터들과 싸우는 웹게임을 열심히 하고 있다. 경근이는 지금 N개의 공격 능력을 가지고 있다. 경근이는 능력들을 편하게 관리하고자 각 능력에 1 이상 N 이하의 자연수 번호를 붙였다.</p>

<p>i번 능력에는 그 능력이 발동될 확률 p<sub>i</sub>와 상대에게 입히는 피해량 d<sub>i</sub>가 책정되어 있다. 따라서 경근이가 i번 능력에 발동 명령을 내리면, p<sub>i</sub>의 확률로 능력이 발동되어 상대에게 d<sub>i</sub>만큼의 피해를 입히고, (1 - p<sub>i</sub>)의 확률로 능력이 발동되지 않아 아무 일도 일어나지 않는다.</p>

<p>열심히 게임을 한 결과, 경근이는 드디어 게임 내에서 모든 능력을 자유롭게 장착하고 해제할 수 있게 되었다! 이제 경근이는 상대가 입을 피해량의 기댓값이 최대가 되도록 하기 위해 어떤 능력들을 장착해야 할지를 알고 싶다. 경근이가 어떤 능력(들)을 장착한 채로 상대방을 공격할 기회를 얻었다면, 아래 과정이 일어난다:</p>

<ul>
	<li>하나의 능력만 장착했을 때: 해당 능력에 발동 명령을 내린 후, 그 결과와 상관 없이 공격 기회를 잃는다.</li>
	<li>두 개 이상의 능력을 장착했을 때: 가지고 있는 모든 능력들 중 하나를 임의로 고른다. 모든 능력을 고를 확률은 서로 같다. 고른 능력에 발동 명령을 내린다. 만약 이 능력이 발동되었다면, 공격 기회를 잃고 과정이 끝난다. 하지만 이 능력이 발동되지 않았다면, 아직 발동 명령을 내려 보지 않은 능력들 중 하나를 동일한 확률로 무작위하게 고른 후, 다시 발동 명령을 내린다. 만약 능력이 발동되었다면 공격 기회를 잃은 후 과정을 끝내고, 발동되지 않았다면 같은 과정을 더 이상 발동 명령을 내려 보지 않은 능력이 없을 때까지 반복한다. 모든 능력에 발동 명령을 내렸음에도 발동된 능력이 하나도 없으면 공격 기회를 잃는다.</li>
</ul>

<p>현재 경근이가 가지고 있는 N개의 능력이 발동될 확률과 상대에게 입히는 피해량이 주어질 때, 한 번의 공격 기회에서 피해량의 기댓값이 최대가 되도록 하기 위해 장착해야 할 능력의 집합을 구하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 자연수 N (1 ≤ N ≤ 20)이 주어진다. 다음 N개의 줄에는 능력들의 정보가 주어진다. 이 중 i (1 ≤ i ≤ N)번째 줄에는 i번 능력이 발동될 확률과 상대에게 입히는 피해량을 의미하는 두 정수 p<sub>i</sub>, d<sub>i</sub> (1 ≤ p<sub>i</sub> , d<sub>i</sub> ≤ 100)이 공백을 사이로 두고 주어진다. 이는 i번 능력은 p<sub>i</sub>% ( = p<sub>i</sub> / 100)의 확률로 발동하는 능력이며 상대에게 d<sub>i</sub>만큼의 피해를 입힌다는 의미이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>가지고 있는 능력들을 적절히 장착하여 얻을 수 있는 피해량의 기댓값의 최댓값을 출력한다. 정답과의 절대/상대 오차가 10<sup>-8</sup> 이하이면 올바른 답안으로 처리된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 예제의 경우 1번 능력은 100% 발동하지만 피해량이 너무 낮아 이를 사용하지 않고 2번 능력만 사용하는 것이 피해량의 기댓값이 더 높다.</p>

				</div>
				</div>','2
100 1
10 20
','2.000000000000
','MATH'),
                                                                                                                (1863,'BAEKJOON','https://www.acmicpc.net/problem/11395',11395,'쿼터너리 컴퓨터','1초','512 MB',24,'<p>경근이는 새로운 컴퓨터를 발명했다. 이 컴퓨터는 다른 컴퓨터들과는 달리 이진법이 아닌 사진법으로 자료를 저장한다.</p>

<p>이 컴퓨터에서 p + q의 연산 결과와 p ? q의 연산 결과를 표로 나타내면 아래와 같다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/11395/1.png" style="height: 185.833px; width: 376.667px;"></p>

<p>경근이는 자신이 발명한 컴퓨터가 너무나 혁신적이라고 생각하여, 이를 한시라도 빨리 사용해 보고 싶은 마음에 컴퓨터를 직접 만들었다!</p>

<p>이 컴퓨터는 아주 적은 예산을 들여 임시로 만든 것이기 때문에, N개의 변수만 저장할 수 있으며, 각 변수는 0 이상 3 이하의 정수 하나만 저장할 수 있다. 경근이는 편의상 각 변수에 0 이상 N - 1 이하의 번호를 붙였고, i번 변수를 v<sub>i</sub>로 부르기로 했다.</p>

<p>경근이는 시간과 정성을 들여 꼭 필요하다고 판단한 4가지 기본 명령을 만들었다.</p>

<ul>
	<li><code>addv x y z</code> (0 ≤ x, y, z ≤ N - 1, x, y, z의 값은 모두 정수): v<sub>x</sub>에 v<sub>y</sub> + v<sub>z</sub>의 값을 대입한다.</li>
	<li><code>xorv x y z</code> (0 ≤ x, y, z ≤ N - 1, x, y, z의 값은 모두 정수): v<sub>x</sub>에 v<sub>y</sub> ? v<sub>z</sub>의 값을 대입한다.</li>
	<li><code>addc x y z</code> (0 ≤ x, y ≤ N - 1, 0 ≤ z ≤ 3, x, y, z의 값은 모두 정수): v<sub>x</sub>에 v<sub>y</sub> + z의 값을 대입한다.</li>
	<li><code>xorc x y z</code> (0 ≤ x, y ≤ N - 1, 0 ≤ z ≤ 3, x, y, z의 값은 모두 정수): v<sub>x</sub>에 v<sub>y</sub> ? z의 값을 대입한다.</li>
</ul>

<p>경근이는 M개의 기본 명령을 나열한 코드를 작성했다. 코드를 컴파일하면 프로그램이 생성되는데, 이 프로그램은 명령을 실행하기 전 각 변수 v<sub>i</sub>에 저장할 값을 입력받아, 코드에 있는 M개의 명령을 하나씩 하나씩 순서대로 실행하고, 모든 명령을 실행한 이후 각 변수 vi에 저장되어 있는 값을 출력한다. 편의상 입력을 a<sub>0</sub>, a<sub>1</sub>, ..., a<sub>N-1</sub>로, 출력을 b<sub>0</sub>, b<sub>1</sub>, ..., b<sub>N-1</sub>로 나타내자.</p>

<p>아쉽게도, 경근이의 구현 실수로 인해, 모든 변수 v<sub>i</sub>에는 초기에 저장될 수 없는 값인 f<sub>i</sub> (0 ≤ f<sub>i</sub> ≤ 3)이 존재한다. 따라서 a<sub>i</sub> ≠ f<sub>i</sub>여야 하므로, a<sub>i</sub>로 가능한 값은 0, 1, 2, 3 중 f<sub>i</sub>가 아닌 수들이다. 그러므로 가능한 모든 입력의 수는 3<sup>N</sup>가지임을 알 수 있다.</p>

<p>경근이는 완벽한 프로그램을 작성했는지 알고자 모든 가능한 입력들을 고려해 보기로 한다. 경근이는 결과를 기록하기 위해 N페이지로 구성된 노트를 구매했으며, 각 페이지에 0 이상 N - 1 이하의 정수 번호를 붙였다. 경근이는 가능한 모든 입력을 만들어 이를 모두 한번씩 프로그램에 넣어 보면서, 각 입력에 대한 프로그램의 출력 b<sub>0</sub>, b<sub>1</sub>, ..., b<sub>N-1</sub>을 얻은 후, b<sub>i</sub>의 값을 i번 페이지에 적는 일을 할 것이다.</p>

<p>모든 입력을 고려한 이후, i번 페이지에 적혀 있는 수들의 합을 s<sub>i</sub>라고 하자. 경근이는 작업을 시작하기 전, 최소한의 안전 장치를 마련하고자 모든 i에 대해 s<sub>i</sub>를 4로 나눈 나머지를 알고자 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 변수의 수 N (1 ≤ N ≤ 18)과 명령의 수 M (0 ≤ M ≤ 400)이 주어진다.</p>

<p>두 번째 줄에는 f<sub>0</sub>, f<sub>1</sub>, ..., f<sub>N-1</sub> (0 ≤ f<sub>i</sub> ≤ 3)이 공백을 사이로 두고 주어진다. 여기서 f<sub>i</sub>는 명령을 실행하기 전 변수 v<sub>i</sub>에 저장될 수 없는 값이며, 정수이다.</p>

<p>이후 M개의 줄에 명령들이 실행되는 순서대로 한 줄에 하나씩 주어진다. 이 중 j (1 ≤ j ≤ M)번째 줄의 입력 형식은 다음과 같으며, 주어지는 모든 수는 정수이며, 공백 하나로 구분된다.</p>

<ul>
	<li>"0 x y z" (0 ≤ x, y, z ≤ N - 1): j번째로 실행되는 명령이 <code>addv x y z</code>임을 나타낸다.</li>
	<li>"1 x y z" (0 ≤ x, y, z ≤ N - 1): j번째로 실행되는 명령이 <code>xorv x y z</code>임을 나타낸다.</li>
	<li>"2 x y z" (0 ≤ x, y ≤ N - 1, 0 ≤ z ≤ 3): j번째로 실행되는 명령이 <code>addc x y z</code>임을 나타낸다.</li>
	<li>"3 x y z" (0 ≤ x, y ≤ N - 1, 0 ≤ z ≤ 3): j번째로 실행되는 명령이 <code>xorc x y z</code>임을 나타낸다.</li>
</ul>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>s<sub>i</sub>를 4로 나눈 나머지를 t<sub>i</sub>라고 할 때, 첫 번째 줄에 t<sub>0</sub>, t<sub>1</sub>, ..., t<sub>N-1</sub>을 공백을 사이로 두고 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 2
2 3
0 0 1 0
1 1 1 0
','1 0
','MATH'),
                                                                                                                (1862,'BAEKJOON','https://www.acmicpc.net/problem/11397',11397,'피보나미얼','2초','512 MB',23,'<p>피보나치 수열 \(f_n\)은 다음과 같이 정의되는 수열이다.</p>

<p>\[f_n =  \begin{cases} 0  &amp; \text{if }n = 0 \\ 1   &amp; \text{if }n = 1 \\ f_{n-1} + f_{n-2}   &amp; \text{if }n \ge 2 \end{cases}\]</p>

<p>피보나미얼 \(F_n\) (\(n\) ≥ 1)은 \(F_n = f_1 \times f_2 \times \dots \times f_n\)으로 정의된다. 즉 \(f_1, f_2, \dots, f_n\)를 모두 곱한 값이다.</p>

<p>어떤 자연수 \(k\)에 대해, \(F_n\)을 \(k\)로 몇 번을 나누어야 \(F_n\)이 더 이상 \(k\)로 나누어 떨어지지 않는지를 구하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 두 자연수 n과 p (1 ≤ n ≤ 10<sup>9</sup>, 2 ≤ p ≤ 10<sup>3</sup>)이 공백을 사이로 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>p - 1줄에 걸쳐 답을 출력한다. 이 중 i(1 ≤ i ≤ p - 1)번째 줄에는 F<sub>n</sub>이 (i + 1)로 나누어 떨어지지 않도록 하기 위해 F<sub>n</sub>을 (i + 1)로 나눠야 할 횟수를 출력해야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>F<sub>12</sub> = 1,570,247,078,400 = 2<sup>9</sup>×3<sup>4</sup>×5<sup>2</sup>×...</p>

				</div>
				</div>','12 6
','9
4
4
2
4
','MATH'),
                                                                                                                (1867,'BAEKJOON','https://www.acmicpc.net/problem/11398',11398,'흑백 이미지 찾기','10초','512 MB',25,'<p>흑백 이미지에는 색이 없다. 따라서 흑백 이미지를 표현할 때에는, 각 픽셀마다 그 픽셀의 밝기를 나타내는 수치 하나만 기록한다. 이 문제에서는 0 이상 65,535 이하의 정수로 한 픽셀의 밝기를 나타낼 수 있다고 하자.</p>

<p>H × W 크기의 흑백 사진 I는 H × W개의 픽셀들이 H행 W열로 배열된 형태라고 생각하고, i (1 ≤ i ≤ H)행 j (1 ≤ j ≤ W)열에 있는 픽셀의 밝기를 I[i, j]로 표현하자.</p>

<p>경근이는 N × M 크기의 흑백 이미지 A와 R × C 크기의 흑백 이미지 B를 가지고 있다. 이때 N ≥ R, M ≥ C이다. (A가 B보다 가로/세로 길이가 모두 더 길다) 경근이는 A가 B를 표절했다고 생각하고, A에서 B와 비슷한 부분이 몇 개나 되는지 찾고자 한다.</p>

<p>그 방법은 다음과 같다. 우선 흑백 이미지 A에서 R × C 크기의 픽셀로 구성된 직사각형을 하나 선택한다. 이 직사각형은 좌측 상단 꼭짓점에 있는 픽셀의 위치 (x, y) (1 ≤ x ≤ N - R + 1, 1 ≤ y ≤ M - C + 1)에 의해 결정된다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/11398/1.png" style="height:297px; width:369px"></p>

<p>예를 들어 위 흑백 이미지를 A라고 하자. A에서 4 × 6 크기의 직사각형을 하나 선택했다고 하면 이 직사각형은 좌측 상단 꼭짓점인 (4, 4)에 의해 결정된다. (만약 좌측 상단 꼭짓점을 움직이면, 크기가 고정되어 있으므로, 직사각형도 같이 움직일 것) 이 직사각형의 우측 하단 꼭짓점은 (7, 9)인데, 이는 (4 + 4 - 1, 4 + 6 - 1)과 같다.</p>

<p>이제 이 직사각형과 사진 B가 비슷한지를 판단하는데, 그 기준은 다음과 같다.</p>

<blockquote>
<p>어떤 실수 p와 q가 모든 1 ≤ i ≤ R, 1 ≤ j ≤ C에 대해 p·A[x + i - 1, y + j - 1] + q = B[i, j]를 만족시키면, A에서 선택한 직사각형과 사진 B는 비슷하다.</p>
</blockquote>

<p>이 판단 기준을 A에 있는 모든 R × C 크기의 직사각형에 대해 적용하여, B와 비슷한 직사각형의 개수를 세면 된다. 다시 말해 1 ≤ x ≤ N - R + 1, 1 ≤ y ≤ M - C + 1를 만족하는 모든 (x, y)에 대해 위 판단 기준을 적용한 후, 비슷하다고 판단되는 (x, y) 쌍의 수를 세면 된다. 참고로 크기가 같은 두 직사각형이 다르다는 것은 좌측 상단 꼭짓점의 좌표가 서로 다르다는 것으로, 직사각형 내부 픽셀의 밝기와는 관계가 없다.</p>

<p>여러분은 경근이를 도와 A에서 B와 비슷한 부분이 몇 개인지 구하는 프로그램을 작성해야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 흑백 이미지 A의 행의 수 N, 열의 수 M (1 ≤ N, M ≤ 10<sup>3</sup>)이 공백을 사이로 두고 주어진다.</p>

<p>다음 N개의 줄에는 A의 픽셀들에 대한 정보가 주어진다. 이 중 i (1 ≤ i ≤ N)번째 줄에는 M개의 정수 A[i, 1], A[i, 2], ..., A[i, M - 1], A[i, M]이 공백을 사이로 두고 주어진다. 즉 i번째 줄에서 j번째로 주어지는 정수는 A의 i행 j열에 있는 픽셀의 밝기를 의미한다.</p>

<p>그 다음 줄에 흑백 이미지 B의 행의 수 R, 열의 수 C (1 ≤ R ≤ N, 1 ≤ C ≤ M)이 공백을 사이로 두고 주어진다.</p>

<p>다음 N개의 줄에는 B의 픽셀들에 대한 정보가 주어진다. 이 중 i (1 ≤ i ≤ R)번째 줄에는 C개의 정수 B[i, 1], B[i, 2], ..., B[i, C - 1], B[i, C]이 공백을 사이로 두고 주어진다. 즉 i번째 줄에서 j번째로 주어지는 정수는 B의 i행 j열에 있는 픽셀의 밝기를 의미한다.</p>

<p>주어지는 모든 픽셀 밝기는 0 이상 65,535 이하의 정수임이 보장된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>A에서 B와 비슷한 부분의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>두 번째 예제의 경우 p = 0, q = 77이면 모든 부분이 비슷하다고 판별된다.</p>

				</div>
				</div>','4 4
1 2 3 4
2 1 4 3
3 4 1 2
4 3 2 1
2 2
5 6
6 5
','5
','MATH'),
                                                                                                                (1864,'BAEKJOON','https://www.acmicpc.net/problem/11401',11401,'이항 계수 3','1초','256 MB',15,'<p>자연수 \(N\)과 정수 \(K\)가 주어졌을 때 이항 계수 \(\binom{N}{K}\)를 1,000,000,007로 나눈 나머지를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 \(N\)과 \(K\)가 주어진다. (1 ≤ \(N\) ≤ 4,000,000, 0 ≤ \(K\) ≤ \(N\))</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>&nbsp;\(\binom{N}{K}\)를 1,000,000,007로 나눈 나머지를&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 2
','10
','MATH'),
                                                                                                                (1865,'BAEKJOON','https://www.acmicpc.net/problem/11402',11402,'이항 계수 4','1초','256 MB',16,'<p>자연수 \(N\)과 정수 \(K\)가 주어졌을 때 이항 계수 \(\binom{N}{K}\)를 \(M\)으로 나눈 나머지를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 \(N\),&nbsp;\(K\)와 \(M\)이&nbsp;주어진다. (1 ≤ \(N\) ≤ 10<sup>18</sup>, 0 ≤ \(K\) ≤ \(N\), 2 ≤ \(M\) ≤ 2,000, M은 소수)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>&nbsp;\(\binom{N}{K}\)를 \(M\)으로 나눈 나머지를&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 2 3
','1
','MATH'),
                                                                                                                (1872,'BAEKJOON','https://www.acmicpc.net/problem/11439',11439,'이항 계수 5','1초','256 MB',17,'<p>자연수 \(N\)과 정수 \(K\)가 주어졌을 때 이항 계수 \(\binom{N}{K}\)를 \(M\)으로 나눈 나머지를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 \(N\),&nbsp;\(K\)와 \(M\)이&nbsp;주어진다. (1 ≤ \(N\) ≤ 4×10<sup><span style="font-size:10.8333px">6</span></sup>, 0 ≤ \(K\) ≤ \(N\), 2 ≤ \(M\) ≤ 4×10<sup><span style="font-size:10.8333px">6</span></sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>&nbsp;\(\binom{N}{K}\)를 \(M\)으로 나눈 나머지를&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 2 3
','1
','MATH'),
                                                                                                                (1870,'BAEKJOON','https://www.acmicpc.net/problem/11440',11440,'피보나치 수의 제곱의 합','1초','256 MB',16,'<p>피보나치 수는 0과 1로 시작한다. 0번째 피보나치 수는 0이고, 1번째 피보나치 수는 1이다. 그 다음 2번째 부터는 바로 앞 두 피보나치 수의 합이 된다.</p>

<p>이를 식으로 써보면 F<sub>n</sub>&nbsp;= F<sub>n-1</sub>&nbsp;+ F<sub>n-2</sub>&nbsp;(n ≥ 2)가 된다.</p>

<p>n=17일때 까지 피보나치 수를 써보면 다음과 같다.</p>

<p>0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597</p>

<p>n이 주어졌을 때, 0번째 피보나치 수의 제곱부터 n번째 피보나치 수의 제곱을 합한 값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n이 주어진다. n은 1,000,000,000,000,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에&nbsp;0번째 피보나치 수의 제곱부터 n번째 피보나치 수의 제곱의 합을&nbsp;1,000,000,007으로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10
','4895
','MATH'),
                                                                                                                (1873,'BAEKJOON','https://www.acmicpc.net/problem/11442',11442,'홀수번째 피보나치 수의 합','1초','256 MB',14,'<p>피보나치 수는 0과 1로 시작한다. 0번째 피보나치 수는 0이고, 1번째 피보나치 수는 1이다. 그 다음 2번째 부터는 바로 앞 두 피보나치 수의 합이 된다.</p>

<p>이를 식으로 써보면 F<sub>n</sub>&nbsp;= F<sub>n-1</sub>&nbsp;+ F<sub>n-2</sub>&nbsp;(n ≥ 2)가 된다.</p>

<p>n=17일때 까지 피보나치 수를 써보면 다음과 같다.</p>

<p>0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597</p>

<p>n이 주어졌을 때, 0번째 피보나치 수부터&nbsp;n번째 피보나치 수 중에서 홀수번째 피보나치 수의&nbsp;합을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n이 주어진다. n은 1,000,000,000,000,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 0번째 피보나치 수부터&nbsp;n번째 피보나치 수 중에서 홀수번째 피보나치 수의&nbsp;합을&nbsp;1,000,000,007으로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7
','21
','MATH'),
                                                                                                                (1875,'BAEKJOON','https://www.acmicpc.net/problem/11443',11443,'짝수번째 피보나치 수의 합','1초','256 MB',14,'<p>피보나치 수는 0과 1로 시작한다. 0번째 피보나치 수는 0이고, 1번째 피보나치 수는 1이다. 그 다음 2번째 부터는 바로 앞 두 피보나치 수의 합이 된다.</p>

<p>이를 식으로 써보면 F<sub>n</sub>&nbsp;= F<sub>n-1</sub>&nbsp;+ F<sub>n-2</sub>&nbsp;(n ≥ 2)가 된다.</p>

<p>n=17일때 까지 피보나치 수를 써보면 다음과 같다.</p>

<p>0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597</p>

<p>n이 주어졌을 때, 0번째 피보나치 수부터&nbsp;n번째 피보나치 수 중에서 짝수번째 피보나치 수의&nbsp;합을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n이 주어진다. n은 1,000,000,000,000,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 0번째 피보나치 수부터&nbsp;n번째 피보나치 수 중에서 짝수번째 피보나치 수의&nbsp;합을&nbsp;1,000,000,007으로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7
','12
','MATH'),
                                                                                                                (1876,'BAEKJOON','https://www.acmicpc.net/problem/11444',11444,'피보나치 수 6','1초','256 MB',14,'<p>피보나치 수는 0과 1로 시작한다. 0번째 피보나치 수는 0이고, 1번째 피보나치 수는 1이다. 그 다음 2번째 부터는 바로 앞 두 피보나치 수의 합이 된다.</p>

<p>이를 식으로 써보면 F<sub>n</sub>&nbsp;= F<sub>n-1</sub>&nbsp;+ F<sub>n-2</sub>&nbsp;(n ≥ 2)가 된다.</p>

<p>n=17일때 까지 피보나치 수를 써보면 다음과 같다.</p>

<p>0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597</p>

<p>n이 주어졌을 때, n번째 피보나치 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n이 주어진다. n은 1,000,000,000,000,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 n번째 피보나치 수를 1,000,000,007으로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1000
','517691607
','MATH'),
                                                                                                                (1932,'BAEKJOON','https://www.acmicpc.net/problem/11502',11502,'세 개의 소수 문제','1초','256 MB',7,'<p>정수론(수학)에서, 세 개의 소수 문제(3-primes problem) 는 다음과 같은 추측을 말한다.</p>

<p>5보다 큰 임의의 홀수는 정확히 세 개의 소수들의 합으로 나타낼 수 있다. 물론 하나의 소수를 여러 번 더할 수도 있다.</p>

<p>예를 들면,</p>

<ul>
	<li>7 = 2 + 2 + 3</li>
	<li>11 = 2 + 2 + 7</li>
	<li>25 = 7 + 7 + 11</li>
</ul>

<p>5보다 큰 임의의 홀수를 입력받아서, 그 홀수가&nbsp;어떻게 세 소수의 합으로 표현될 수 있는지 (또는 불가능한지) 알아보는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 T(Test Case의 수를 의미함)가 주어진다.</p>

<p>입력은 T개의 Test Case로 이루어진다.</p>

<p>각 Test Case는 하나의 정수 K (7 ≤ K < 1,000, K는 홀수)로 구성된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>T줄에 걸쳐서, 각 줄에 K가 어떻게 세 소수의 합으로 표현되는지 출력해야 한다.</p>

<p>가능하다면 그 세 소수를 오름차순 정렬하여&nbsp;출력하면 된다.</p>

<p>여러 개의 답이 가능하다면 그 중&nbsp;하나만 출력하면 되고,&nbsp;만약 불가능하다면 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
7
11
25
','2 2 3
2 2 7
5 7 13
','MATH'),
                                                                                                                (1904,'BAEKJOON','https://www.acmicpc.net/problem/11561',11561,'징검다리','1초','256 MB',8,'<p>승택이는 강을 건너려 한다.</p>

<p>승택이는 수영을 못하기 때문에, 강에 놓인 징검다리를 밟고 건너갈 것이다.</p>

<p>승택이는 수영은 못하지만 제자리뛰기는 정말 잘한다. 원하는 어느 곳으로든지 점프해서 바로 갈 수가 있다.</p>

<p>승택이는 이제 강의 한쪽 변 앞에 서 있다.</p>

<p>강엔 1번부터 시작해 2번, 3번, ... , N번 징검다리가 차례대로 놓여 있다.</p>

<p>강의 폭이 넓은 탓에 징검다리의 수는 엄청나게 많다.</p>

<p>이 징검다리를 모두 밟고 싶지는 않았던 승택이는 제자리뛰기 실력을 발휘해 적절한 개수의 징검다리만을 밟고 가기로 했다.</p>

<p>물론 강 건너편으로 바로 점프하는 것도 가능하지만, 더 재미있게 강을 건너기 위해 승택이는 다음과 같은 규칙을 정했다.</p>

<ol>
	<li>첫 징검다리는 점프해서 아무 것이나 밟을 수 있다. 이 점프가 첫 점프이다.</li>
	<li>두 번째 점프부터는 이전에 점프한 거리보다 1 이상 더 긴 거리를 뛰어야만 한다.</li>
	<li>N번 징검다리는 반드시 밟아야 한다.</li>
	<li>N번 징검다리를 밟은 후 강 건너로 이동할 땐 점프를 하지 않으므로 위의 규칙이 적용되지 않는다.</li>
</ol>

<p>승택이가 위의 규칙을 지키며 강을 건널 때, 밟을 수 있는 징검다리의 최대 수는 몇 개일까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 수 T가 주어진다.</p>

<p>각 테스트 케이스는 정수 한 개로 이루어져 있으며, 징검다리의 총 수 N을 의미한다. (1 ≤ N ≤ 10<sup>16</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 한 줄에 승택이가 밟을 수 있는 최대 징검다리 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1
2
100
1000000
','1
1
13
1413
','MATH'),
                                                                                                                (1928,'BAEKJOON','https://www.acmicpc.net/problem/11564',11564,'점프왕 최준민','1초','256 MB',7,'<p>준민이는 점프를 좋아한다. 창영이는 그의 점프력을 시험하기 위해 수직선을 하나 놓고, a 이상 b 이하의 모든 정수 좌표에 맛있는 초콜릿을 놓았다. 수직선은 아래의 그림과 같이 나타낼 수 있다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/11564/1.png" style="height:45px; width:270px"></p>

<p>준민이는 항상 0에서 시작하며, 준민이의 점프력이 k 라면 한 번 점프를 하여 -k 나 +k 좌표에 도달한다. 준민이는 항상 점프 거리가 k가 되도록 점프를 한다. 만약 0의 위치에 초콜릿이 있다면, 준민이는 점프하기 전에 초콜릿을 일단 먹고 시작한다.</p>

<p>초콜릿 중독자인 준민이는 모든 초콜릿을 얻기 위해 수직선에 올라섰다. 또한 준민이는 아침에 밥을 아주 많이 먹었기 때문에 무한번 점프 할 수 있다. 여러분이 해야하는 일은, k의 점프력을 가진 준민이가 얻을 수 있는 초콜릿의 최대 개수를 구하는 것이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 한 줄로 구성된다. 준민이의 점프력 k (1 ≤ k ≤ 10<sup>18</sup>), 초콜릿이 존재하는 시작 좌표와 끝 좌표 a, b (-10<sup>18</sup> ≤ a ≤ b ≤ 10<sup>18</sup>)가 공백으로 구분되어 정수로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>준민이가 무한 번 점프할 수 있을 때, 얻을 수 있는 초콜릿의 최대 개수를 구하여라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>수를 저장할 때, int 타입의 변수는 32bit에 데이터를 담으므로 큰 범위의 수를 저장할 수 없다. 따라서 64bit에 데이터를 담는 long long(format string : %lld) 타입의 변수 사용을 권한다.&nbsp;</p>

				</div>
				</div>','1 2 12
','11
','MATH'),
                                                                                                                (1930,'BAEKJOON','https://www.acmicpc.net/problem/11571',11571,'분수를 소수로','1초','256 MB',11,'<p>모든 유리수는 다음과 같이 특정한 수가 반복되는 순환 소수 형태로 표현될 수 있다.</p>

<p><mjx-container class="MathJax" jax="CHTML" display="true" style="font-size: 109%; position: relative;">?<mjx-math display="true" class="MJX-TEX" aria-hidden="true" style="margin-left: 0px; margin-right: 0px;"><mjx-mfrac><mjx-frac type="d"><mjx-num><mjx-nstrut type="d"></mjx-nstrut><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-num><mjx-dbox><mjx-dtable><mjx-line type="d"></mjx-line><mjx-row><mjx-den><mjx-dstrut type="d"></mjx-dstrut><mjx-mn class="mjx-n"><mjx-c class="mjx-c33"></mjx-c></mjx-mn></mjx-den></mjx-row></mjx-dtable></mjx-dbox></mjx-frac></mjx-mfrac><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mfrac space="4"><mjx-frac type="d"><mjx-num><mjx-nstrut type="d"></mjx-nstrut><mjx-mn class="mjx-n"><mjx-c class="mjx-c33"></mjx-c></mjx-mn></mjx-num><mjx-dbox><mjx-dtable><mjx-line type="d"></mjx-line><mjx-row><mjx-den><mjx-dstrut type="d"></mjx-dstrut><mjx-mn class="mjx-n"><mjx-c class="mjx-c39"></mjx-c></mjx-mn></mjx-den></mjx-row></mjx-dtable></mjx-dbox></mjx-frac></mjx-mfrac><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="4"><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c2E"></mjx-c><mjx-c class="mjx-c33"></mjx-c><mjx-c class="mjx-c33"></mjx-c><mjx-c class="mjx-c33"></mjx-c><mjx-c class="mjx-c33"></mjx-c><mjx-c class="mjx-c33"></mjx-c><mjx-c class="mjx-c33"></mjx-c><mjx-c class="mjx-c33"></mjx-c></mjx-mn><mjx-mo class="mjx-n" space="2"><mjx-c class="mjx-c22EF"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="4"><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c2E"></mjx-c></mjx-mn><mjx-mover><mjx-over style="padding-bottom: 0.18em; margin-bottom: -0.248em;"><mjx-mo class="mjx-n"><mjx-c class="mjx-c2013"></mjx-c></mjx-mo></mjx-over><mjx-base><mjx-mn class="mjx-n"><mjx-c class="mjx-c33"></mjx-c></mjx-mn></mjx-base></mjx-mover><mjx-mspace></mjx-mspace><mjx-mfrac><mjx-frac type="d"><mjx-num><mjx-nstrut type="d"></mjx-nstrut><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-num><mjx-dbox><mjx-dtable><mjx-line type="d"></mjx-line><mjx-row><mjx-den><mjx-dstrut type="d"></mjx-dstrut><mjx-mn class="mjx-n"><mjx-c class="mjx-c37"></mjx-c></mjx-mn></mjx-den></mjx-row></mjx-dtable></mjx-dbox></mjx-frac></mjx-mfrac><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mfrac space="4"><mjx-frac type="d"><mjx-num><mjx-nstrut type="d"></mjx-nstrut><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c><mjx-c class="mjx-c34"></mjx-c><mjx-c class="mjx-c32"></mjx-c><mjx-c class="mjx-c38"></mjx-c><mjx-c class="mjx-c35"></mjx-c><mjx-c class="mjx-c37"></mjx-c></mjx-mn></mjx-num><mjx-dbox><mjx-dtable><mjx-line type="d"></mjx-line><mjx-row><mjx-den><mjx-dstrut type="d"></mjx-dstrut><mjx-mn class="mjx-n"><mjx-c class="mjx-c39"></mjx-c><mjx-c class="mjx-c39"></mjx-c><mjx-c class="mjx-c39"></mjx-c><mjx-c class="mjx-c39"></mjx-c><mjx-c class="mjx-c39"></mjx-c><mjx-c class="mjx-c39"></mjx-c></mjx-mn></mjx-den></mjx-row></mjx-dtable></mjx-dbox></mjx-frac></mjx-mfrac><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="4"><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c2E"></mjx-c><mjx-c class="mjx-c31"></mjx-c><mjx-c class="mjx-c34"></mjx-c><mjx-c class="mjx-c32"></mjx-c><mjx-c class="mjx-c38"></mjx-c><mjx-c class="mjx-c35"></mjx-c><mjx-c class="mjx-c37"></mjx-c><mjx-c class="mjx-c31"></mjx-c><mjx-c class="mjx-c34"></mjx-c><mjx-c class="mjx-c32"></mjx-c><mjx-c class="mjx-c38"></mjx-c><mjx-c class="mjx-c35"></mjx-c><mjx-c class="mjx-c37"></mjx-c><mjx-c class="mjx-c31"></mjx-c><mjx-c class="mjx-c34"></mjx-c></mjx-mn><mjx-mo class="mjx-n" space="2"><mjx-c class="mjx-c22EF"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="4"><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c2E"></mjx-c></mjx-mn><mjx-mover><mjx-over style="padding-bottom: 0.18em; margin-bottom: -0.248em;"><mjx-mo class="mjx-n"><mjx-stretchy-h class="mjx-c2013" style="width: 3em;"><mjx-ext><mjx-c></mjx-c></mjx-ext></mjx-stretchy-h></mjx-mo></mjx-over><mjx-base><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c><mjx-c class="mjx-c34"></mjx-c><mjx-c class="mjx-c32"></mjx-c><mjx-c class="mjx-c38"></mjx-c><mjx-c class="mjx-c35"></mjx-c><mjx-c class="mjx-c37"></mjx-c></mjx-mn></mjx-base></mjx-mover><mjx-mspace></mjx-mspace><mjx-mfrac><mjx-frac type="d"><mjx-num><mjx-nstrut type="d"></mjx-nstrut><mjx-mn class="mjx-n"><mjx-c class="mjx-c33"></mjx-c></mjx-mn></mjx-num><mjx-dbox><mjx-dtable><mjx-line type="d"></mjx-line><mjx-row><mjx-den><mjx-dstrut type="d"></mjx-dstrut><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c><mjx-c class="mjx-c34"></mjx-c></mjx-mn></mjx-den></mjx-row></mjx-dtable></mjx-dbox></mjx-frac></mjx-mfrac><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mfrac space="4"><mjx-frac type="d"><mjx-num><mjx-nstrut type="d"></mjx-nstrut><mjx-mn class="mjx-n"><mjx-c class="mjx-c32"></mjx-c><mjx-c class="mjx-c31"></mjx-c><mjx-c class="mjx-c34"></mjx-c><mjx-c class="mjx-c32"></mjx-c><mjx-c class="mjx-c38"></mjx-c><mjx-c class="mjx-c35"></mjx-c><mjx-c class="mjx-c35"></mjx-c></mjx-mn></mjx-num><mjx-dbox><mjx-dtable><mjx-line type="d"></mjx-line><mjx-row><mjx-den><mjx-dstrut type="d"></mjx-dstrut><mjx-mn class="mjx-n"><mjx-c class="mjx-c39"></mjx-c><mjx-c class="mjx-c39"></mjx-c><mjx-c class="mjx-c39"></mjx-c><mjx-c class="mjx-c39"></mjx-c><mjx-c class="mjx-c39"></mjx-c><mjx-c class="mjx-c39"></mjx-c><mjx-c class="mjx-c30"></mjx-c></mjx-mn></mjx-den></mjx-row></mjx-dtable></mjx-dbox></mjx-frac></mjx-mfrac><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="4"><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c2E"></mjx-c><mjx-c class="mjx-c32"></mjx-c><mjx-c class="mjx-c31"></mjx-c><mjx-c class="mjx-c34"></mjx-c><mjx-c class="mjx-c32"></mjx-c><mjx-c class="mjx-c38"></mjx-c><mjx-c class="mjx-c35"></mjx-c><mjx-c class="mjx-c37"></mjx-c><mjx-c class="mjx-c31"></mjx-c><mjx-c class="mjx-c34"></mjx-c><mjx-c class="mjx-c32"></mjx-c><mjx-c class="mjx-c38"></mjx-c><mjx-c class="mjx-c35"></mjx-c><mjx-c class="mjx-c37"></mjx-c><mjx-c class="mjx-c31"></mjx-c><mjx-c class="mjx-c34"></mjx-c></mjx-mn><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="4"><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c2E"></mjx-c><mjx-c class="mjx-c32"></mjx-c></mjx-mn><mjx-mover><mjx-over style="padding-bottom: 0.18em; margin-bottom: -0.248em;"><mjx-mo class="mjx-n"><mjx-stretchy-h class="mjx-c2013" style="width: 3em;"><mjx-ext><mjx-c></mjx-c></mjx-ext></mjx-stretchy-h></mjx-mo></mjx-over><mjx-base><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c><mjx-c class="mjx-c34"></mjx-c><mjx-c class="mjx-c32"></mjx-c><mjx-c class="mjx-c38"></mjx-c><mjx-c class="mjx-c35"></mjx-c><mjx-c class="mjx-c37"></mjx-c></mjx-mn></mjx-base></mjx-mover></mjx-math><mjx-assistive-mml unselectable="on" display="block"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mfrac><mn>1</mn><mn>3</mn></mfrac><mo>=</mo><mfrac><mn>3</mn><mn>9</mn></mfrac><mo>=</mo><mn>0.3333333</mn><mo>?</mo><mo>=</mo><mn>0.</mn><mover><mn>3</mn><mo accent="true">―</mo></mover><mspace linebreak="newline"></mspace><mfrac><mn>1</mn><mn>7</mn></mfrac><mo>=</mo><mfrac><mn>142857</mn><mn>999999</mn></mfrac><mo>=</mo><mn>0.14285714285714</mn><mo>?</mo><mo>=</mo><mn>0.</mn><mover><mn>142857</mn><mo accent="true">―</mo></mover><mspace linebreak="newline"></mspace><mfrac><mn>3</mn><mn>14</mn></mfrac><mo>=</mo><mfrac><mn>2142855</mn><mn>9999990</mn></mfrac><mo>=</mo><mn>0.214285714285714</mn><mo>=</mo><mn>0.2</mn><mover><mn>142857</mn><mo accent="true">―</mo></mover></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">\[\frac{1}{3} = \frac{3}{9} = 0.3333333\dots = 0.\overline{3} \\ \frac{1}{7} = \frac{142857}{999999} = 0.14285714285714\dots = 0.\overline {142857} \\ \frac{3}{14} = \frac{2142855}{9999990} = 0.214285714285714 = 0.2\overline{142857}\]</span>?</mjx-container></p>

<p>위에서 분모가 9와 0으로 이루어진 부분을 보면 알 수 있듯이 순환 소수가 주어졌을 때 이를 분수로 바꾸는 방법은 공식화 되어있다. 하지만 공식의 형태가 아닌 분수가 주어졌을 때 이를 이용하기는 어려우므로 일반적으로 분수를 순환 소수로 바꾸는 가장 쉬운 방법은 나눗셈을 반복하는 것이다. 하지만 이 작업은 손으로 하기엔 너무 어려우니 이를 수행하는 프로그램을 작성해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 번째 줄에는 테스트 케이스의 수 T (1 ≤ T ≤ 15,000)가 주어진다.</p>

<p>이후 각 테스트 케이스에 대해 한 줄에 분자와 분모 (0 ≤ 분자 < 1024, 0 < 분모 < 1024)가 공백으로 구분되어 정수로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>한 줄에 한 개씩 각 테스트 케이스에 대한 순환소수를 출력한다(순환부는 괄호로 감싸서 표시한다).</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
1 2
1 7
10 5
11 5
995 476
991 994
','0.5(0)
0.(142857)
2.(0)
2.2(0)
2.09(033613445378151260504201680672268907563025210084)
0.9(969818913480885311871227364185110663983903420523138832997987927565392354124748490945674044265593561368209255533199195171026156941649899396378269617706237424547283702213279678068410462776659959758551307847082494)
','MATH'),
                                                                                                                (1916,'BAEKJOON','https://www.acmicpc.net/problem/11573',11573,'몬스터','2초','256 MB',14,'<p>세 종류의 몬스터가 살고 있는 섬이 있다. 서로 다른 종류의 몬스터들은 서로 사이가 나쁘기 때문에 서로 잡아먹거나 잡아먹힐 수 있다. 빨간색 몬스터와 노란색 몬스터가 마주치면 빨간색 몬스터는 노란색 몬스터를 잡아먹는다. 노란색 몬스터와 파란색 몬스터가 마주치면 노란색 몬스터는 파란색 몬스터를 잡아먹는다. 파란색 몬스터와 빨간색 몬스터가 마주치면 파란색 몬스터는 빨간색 몬스터를 잡아 먹는다. 세마리 이상의 몬스터가 만나는 경우는 없다고 가정한다. 즉 한 순간에는 단 두 마리의 몬스터만 만난다. 세월이 흐른 후 이 섬에는 결국 한 종류의 &nbsp;몬스터만이 남을 것이다. 각각의 종류의 몬스터가 살아 남을 확률을 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫째 줄에는 테스트케이스의 개수인 T가 주어진다.</p>

<p>각 테스트케이스마다 한 줄에 빨간색 몬스터의 수 r, 노란색 몬스터의 수 y, 파란색 몬스터의 수 b가 주어진다. (1 ≤ r, y, b ≤ 100)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>마지막에 각각의 종류의 몬스터가 살아남을 확률을 한 줄에 출력한다. 빨간색 몬스터만이 살아남을 확률, 노란색 몬스터가 살아남을 확률, 파란색 몬스터가 살아남을 확률을 차례로 출력한다. 소수점 오차는 10<sup>-9</sup>까지 허용한다..</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
100 100 100
2 1 2
1 1 3
','0.333333333333 0.333333333333 0.333333333333
0.150000000000 0.300000000000 0.550000000000
0.057142857143 0.657142857143 0.285714285714
','MATH'),
                                                                                                                (1920,'BAEKJOON','https://www.acmicpc.net/problem/11574',11574,'CYK의 너무너무 재밌는 그래프 만들기 놀이','1초','256 MB',15,'<p>N (1 ≤ N ≤ 100)개의 정점의 개수가 주어지고, K (1 ≤ K ≤ 3)개의 가능한 색깔이 주어진다. 각 정점들을 1 부터 N까지 차례로 번호를 매기고, 그 정점들에 K개의 색깔중 하나를 임의로 부여한다.&nbsp;</p>

<p>그 다음, 정점들 사이에 간선을 추가하는데 다음과 같은 규칙을 만족해야 한다.</p>

<ul>
	<li>1 ≤ j < i ≤ N일 때, 정점 i와 정점 j의 색깔이 다르다면 i에서 j로 향하는 간선을 추가할 수 있고, 추가하지 않아도 무방하다.&nbsp;</li>
	<li>임의의 정점 i (2 ≤ i ≤ N)에 대해 정점 i에서 다른 정점으로 향하는 간선은 최대 1개만 있을 수 있다. (즉, 정점 i의 out-degree 가 최대 1이다.)</li>
</ul>

<p>두 그래프는 정점에 부여된 색깔과, 정점 사이에 이어진 간선이 동일할 때 동일하다고 간주된다. 예를 들어, N=3, K=2 인경우 아래와 같이 24개의 서로 다른 그래프가 가능하다.</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/11574/1.png" style="height:223px; width:261px"></p>

<p>N, K가 주어질 때, 서로 다른 그래프의 경우의 수를 1,000,000,007 나눈 나머지를 출력하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>정점의 개수인 정수 N (1 ≤ N ≤ 100)과 가능한 색의 개수인 정수 K (1 ≤ K ≤ 3)가 한 줄에 공백 한 개로 구분되어 주어진다</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>가능한 그래프의 조합의 개수를 1,000,000,007 로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 2
','24
','MATH'),
                                                                                                                (1884,'BAEKJOON','https://www.acmicpc.net/problem/11579',11579,'초차원전쟁 이나','5초','256 MB',9,'<p>4명의 여신에 의해 수호되고 있는 이(異)세계는 오늘도 여전히 신도들을 모으기 위한 전쟁이 일어나고 있다. 최근 전쟁에서 계속 패하기만 했던 여신 이나는 다음 전쟁에서는 꼭 이기리라 다짐하고 다른 여신들의 행동 패턴을 분석하였다. 결국 이나는 모든 여신들의 이동을 수치화하는데 성공했으며 이를 단위 이동이라 부르기로 했다.</p>

<p>단위 이동의 몇 가지 특징을 정리해보면 다음과 같다.</p>

<ol>
	<li>여신들은 투명하진 않지만 초월적인 존재이기 때문에 차원을 마음대로 넘나들 수 있다.</li>
	<li>여신들은 간결함을 좋아하기 때문에 정수 좌표로만 이동한다.</li>
	<li>여신들의 이동은 원점을 기준으로 한다.</li>
	<li>n차원 공간의 단위 이동 (x<sub>1</sub>, x<sub>2</sub>, ..., x<sub>n</sub>)이 있다고 하자. 여신들은 게으르기 때문에 x<sub>1</sub>, x<sub>2</sub>, ..., x<sub>n</sub> 중 적어도 한 가지 값은 1임이 보장된다. 또한, 단위 이동 (x<sub>1</sub>, x<sub>2</sub>, ..., x<sub>n</sub>)에서 처음 나오는 1의 위치가 x<sub>i</sub>라면 x<sub>1</sub>, x<sub>2</sub>, ..., x<sub>i-1</sub>은 0이 보장된다.&nbsp;처음 나오는 1의 위치는 모두 다르다.</li>
</ol>

<p>어떤 좌표가 주어졌을 때 단위 이동을 적당한 순서로 조합하여 도달할 수 있으면 이동 가능한 위치, 없으면 불가능한 위치라고 한다. 이때, 각 단위 이동은 몇 번이고 사용할 수 있다. 단, 최대 20억 번만 움직일 수 있다.</p>

<p>만약 도달 가능한 위치의 경우, 가장 적은 수의 단위 이동을 사용해 이동했을 때 사용된 단위 이동의 수를 최단 이동 횟수라고 한다. 즉, 어떤 위치로의 이동 횟수 x가 같은 위치로 움직이는 다른 모든 이동 횟수 y에 대해 x ≤ y를 만족 한다면 x는 최단 이동 횟수이다.</p>

<p>예를 들어 여신들이 2차원 공간에서 움직인다고 가정하자. 만약 단위 이동의 집합이 {(1, 0), (0, 1)}이라면 (2, 1)은 (1, 0)+(1, 0)+(0, 1)과 같이 표현할 수 있으므로 이동 가능한 위치이고 다른 어떤 이동보다 이보다 적은 횟수로 움직일 수 있지 않으므로 최단 이동 횟수는 3이다. 반면에 (-1, 1)로는 이동할 수 없다. 즉 단위 이동의 횟수는 항상 음이 아닌 정수여야 한다.</p>

<p>이나는 특정 위치가 주어졌을 때 다른 여신들이 그 위치로 움직일 수 있는지 없는지를 빠르게 판단하고, 그 위치까지 가는데 필요한 최단 이동 횟수를 계산하는 알고리즘을 설계하여 다음 전쟁 때 사용하려 한다. 하지만 할 일이 많기에 신실한 신도인 당신에게 이 일을 맡기기로 했다.</p>

<p>여신 이나를 도와 전쟁에서 승리하기 위한 알고리즘을 설계하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에는 테스트 케이스의 수 T가 주어진다. 각 테스트 케이스의 첫 줄에는 차원의 수를 나타내는 양의 정수 n(1 ≤ n ≤ 500)이 주어진다. 다음 줄부터 여신들의 단위 이동들이 n개의 줄에 걸쳐 주어진다. i번째 줄에는 i번 단위 이동을 나타내는 n개의 정수 x<sub>ij</sub>(1 ≤ i ≤ n, 1 ≤ j ≤ n, -1,000 ≤ x<sub>ij</sub> ≤ 1,000)가 빈칸을 사이에 두고 주어진다. 단위 이동은 처음 나오는 1의 위치가 증가하는 순서대로 주어진다. 그 다음 줄에는 특정 위치의 좌표를 나타내는 n개의 정수 y<sub>i</sub>(1 ≤ i ≤ n, -5×10<sup>8</sup> ≤ y<sub>i</sub> ≤ 5×10<sup>8</sup>)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스별로 한 줄에 한 개씩 다른 여신들이 주어진 특정 좌표에 도달할 수 있다면 1, 없다면 0을 출력한다. 만약 도달할 수 있다면, 같은 줄에 추가로 최단 이동 횟수를 빈칸으로 구분하여 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1
1
5
2
1 0
0 1
-1 1
3
1 1 1
0 1 -1
0 0 1
1 2 0
','1 5
0
1 2
','MATH'),
                                                                                                                (1888,'BAEKJOON','https://www.acmicpc.net/problem/11584',11584,'저 집합은 해로운 집합이다','3초','256 MB',14,'<p>집합론을 공부하던 승현이는 다음과 같은 집합을 알게 됐다.</p>

<p>\[C_0 = \left[0,1\right] \\ C_n = \left\{ a+\sum_{i=1}^{n} {\frac{a_i}{3^i}} \mid 0 \le a \le \frac{1}{3^n}, a_i \in \left\{0, 2\right\} \right\} \text{ for } n \in \mathbb{N} \\ C = \bigcap_{n=0}^{\infty}{C_n}\]</p>

<p>\(C\)라는 집합이 잘 이해가 되지 않던 승현이는 이해를 하기 위해 몇 가지 작업을 계획했다. 첫 번째 작업은 어떤 유리수 한 개를 임의로 골랐을 때 그 수가 집합 안에 들어가는지 안 들어가는지 확인하는 작업이다. 만약 집합 안에 들어가지 않는다면 두 번째 작업을 이어서 하게 되는데, 이 작업은 그 유리수를 처음으로 포함하지 않는, 즉 가장 작은 \(n\)을 갖는 집합을 찾는 것이다.</p>

<p>몇 번 손으로 작업하는 승현이는 이 작업이 매우 귀찮아졌다. 그래서 컴퓨터를 사용하기로 했는데 코딩을 하는 것도 귀찮아졌는지 갑자기 이 일을 후배인 당신에게 시켰다. 얼떨결에 거절하지 못하고 이 일을 받게 된 당신은 승현이를 골탕 먹여줄 심보로 불완전한 판정 프로그램을 만들기로 했다.</p>

<p>너무 답이 이상하게 나오면 속지 않을 것을 걱정한 당신은 적당히 그럴듯하게 답을 출력하기로 했다. 이를 위해 \(C_0\)부터 \(C_{10}\)까지에 대해서만 수의 포함 여부를 확인하고 만약 모든 집합이 수를 포함한다면 포함된다고 판정하는 프로그램을 만들 것이다. 승현이를 골려주기 위해 위 조건을 만족하는 불완전한 프로그램을 작성하자!!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에는 테스트 케이스의 수 T가 주어진다. 각 테스트 케이스마다 유리수를 나타내는 정수 a와 b(0 ≤ a ≤ 100,000, 1 ≤ b ≤ 100,000)가 빈칸을 사이에 두고 주어진다. 이때 a는 분자, b는 분모를 나타낸다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>한 테스트 케이스 당 한 줄에 걸쳐 주어진 유리수가 \(C_0\)부터 \(C_{10}\)사이에 포함되지 않으면 처음으로 포함되지 않는 집합의 아랫첨자 \(n\)을 출력하고 포함하면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 입력의 경우 \(a_i = 0, a = 0\) 일 때 모든 집합에 대해 포함된다.</p>

<p>두 번째 입력의 경우 \(C_0 = \left[0,1\right], C_1 = \left[0,\frac{1}{3}\right] \cup \left[\frac{2}{3},1\right]\) 이므로 \(\frac{1}{2}\)는 \(C_1\)에서 처음으로 포함되지 않는다.</p>

<p>세 번째 입력의 경우 \(C_0\), \(C_1\)은 위와 같고, \(C_2 = \left[0,\frac{1}{9}\right] \cup \left[\frac{2}{9},\frac{1}{3}\right]\cup \left[\frac{2}{3},\frac{7}{9}\right] \cup \left[\frac{8}{9},1\right]\) 이므로 \(C_2\)에서 처음으로 포함되지 않는다.</p>

				</div>
				</div>','4
0 1
1 2
1 6
5 18
','-1
1
2
3
','MATH'),
                                                                                                                (1907,'BAEKJOON','https://www.acmicpc.net/problem/11648',11648,'지속','1초','256 MB',3,'<p>키파는 곱하기를 좋아한다. 그래서 키파는 수를 보면 각 자리 숫자를 모두 곱해서 하나의 수를 만든다. 키파는 기쁘다. 키파는 이 작업을 계속해서 반복한다.&nbsp;그런데 수가 한 자리가 되었다. <strong>키파는 슬퍼졌다</strong>.</p>

<p>키파의&nbsp;기쁨이 지속될 수 있는 것이 몇 단계인지를 출력하는 프로그램을 작성하시오. 예를 들어 679라면:</p>

<ul>
	<li>679&nbsp;→ 6*7*9 = 378 (1단계)</li>
	<li>378 → 3*7*8 = 168 (2단계)</li>
	<li>168&nbsp;→ 1*6*8 = 48 (3단계)</li>
	<li>48&nbsp;→ 4*8 = 32 (4단계)</li>
	<li>32&nbsp;→ 3*2 = 6 (5단계: <strong>키파는 슬퍼졌다</strong>.)</li>
</ul>

<p>키파는 5단계만에 슬퍼지므로 5를 출력하면 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>각각의 입력은 하나의 테스트 케이스로 이루어진다. 입력은 첫 번째 줄에 선행하는 0이 없는 9자리 이하의 수가 하나 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 입력에 대해 키파의 기쁨이 지속될 수 있는 단계의 수를 출력하라.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
','0
','MATH'),
                                                                                                                (1908,'BAEKJOON','https://www.acmicpc.net/problem/11653',11653,'소인수분해','1초','256 MB',5,'<p>정수 N이 주어졌을 때, 소인수분해하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 N (1&nbsp;≤ N ≤ 10,000,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>N의 소인수분해 결과를 한 줄에 하나씩 오름차순으로 출력한다. N이 1인 경우 아무것도 출력하지 않는다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','72
','2
2
2
3
3
','MATH'),
                                                                                                                (1910,'BAEKJOON','https://www.acmicpc.net/problem/11661',11661,'해의 개수','1초','256 MB',20,'<p>방정식 Ax + By + C = 0의 해의 개수를 구하는 프로그램을 작성하시오.</p>

<p>A, B, C, x, y는 모두 정수이고, x1 ≤ x ≤ x2, y1 ≤ y ≤ y2인 해의 개수를 구해야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 A, B, C, x1, x2, y1, y2가 주어진다. 모든 정수는 -10<sup>8</sup>보다 크거나 같고, 10<sup>8</sup>보다 작거나 같은 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 입력으로 주어진 방정식의 해의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1 1 -20 20 -30 30
','41
','MATH'),
                                                                                                                (1891,'BAEKJOON','https://www.acmicpc.net/problem/11662',11662,'민호와 강호','1초','256 MB',12,'<p>민호와 강호가 2차원 좌표 평면 위에 있다. 민호는 점 A(Ax, Ay)에서 점 B(Bx, By)를 향해 걸어가고 있고, 강호는 점 C(Cx, Cy)에서 점 D(Dx, Dy)를 향해 걸어가고 있다. 민호와 강호는 동시에 출발하고, 민호가 점 B에 도착하는 순간 강호도 점 D에 도착한다. 또, 두 사람은 항상 일정한 속도로 걸어간다. 두 사람의 거리가 가장 가까울 때, 거리를 구하는 프로그램을 작성하시오.</p>

<p>두 점 (x1, y1), (x2, y2)사이의 거리는 \(\sqrt{(x2-x1)^2 + (y2-y1)^2}\) 이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 Ax, Ay, Bx, By, Cx, Cy, Dx, Dy가 주어진다. 입력으로 주어지는 모든 좌표는 0보다 크거나 같고, 10000보다 작거나 같은 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>민호와 강호가 가장 가까웠을 때의 거리를&nbsp;출력한다. 절대/상대 오차는&nbsp;10<sup>-6</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','0 0 1 1 2 2 3 3
','2.8284271247
','MATH'),
                                                                                                                (1912,'BAEKJOON','https://www.acmicpc.net/problem/11664',11664,'선분과 점','1초','256 MB',11,'<p>3차원 좌표 평면 위에 선분 하나와 점 하나가 있다. 선분의 양 끝점은 A(Ax, Ay, Az)와 B(Bx, By, Bz)로 나타낼 수 있다. 점의 좌표는 C(Cx, Cy, Cz) 이다.</p>

<p>선분과 점 사이의 거리의 최솟값을 구하는 프로그램을 작성하시오.</p>

<p>두 점 (x1, y1, z1)과 (x2, y2, z2) 사이의 거리는 \(\sqrt{(x2-x1)^2+(y2-y1)^2+(z2-z1)^2}\) 이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 선분과 점의 좌표 Ax, Ay, Az, Bx, By, Bz, Cx, Cy, Cz가 주어진다. 좌표는 0보다 크거나 같고, 10,000보다 작거나 같은 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 선분과 점 사이의 거리의 최솟값을 출력한다. 절대/상대 오차는 10<sup>-6</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','0 0 0 1 1 1 2 2 2
','1.7320508076
','MATH'),
                                                                                                                (1915,'BAEKJOON','https://www.acmicpc.net/problem/11687',11687,'팩토리얼 0의 개수','0.5초(추가시간없음)','256 MB',10,'<p>가장 끝의 0의 개수가 M개인 N! 중에서 가장 작은 N을 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 M (1 ≤ M ≤ 100,000,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>가장 끝의 0의 개수가 M개인 N! 중에서 가장 작은 N을 출력한다. 그러한 N이 없는 경우에는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','5
','MATH'),
                                                                                                                (1917,'BAEKJOON','https://www.acmicpc.net/problem/11688',11688,'최소공배수 찾기','1초','256 MB',11,'<p>세 정수 a, b, L이 주어졌을 때, LCM(a, b, c) = L을 만족하는 가장 작은 c를 찾는 프로그램을 작성하시오. LCM(a, b, c)는 a, b, c의 최소공배수이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 a, b, L이 주어진다. (1 ≤ a, b ≤ 10<sup>6</sup>, 1 ≤ L ≤ 10<sup>12</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 c를 출력한다. 만약, 가능한 c가 없으면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 3 6
','1
','MATH'),
                                                                                                                (1925,'BAEKJOON','https://www.acmicpc.net/problem/11692',11692,'시그마 함수','1초','256 MB',13,'<p>시그마 함수&nbsp;σ(n)은 정수 n의 약수의 합을 구하는 함수이다.</p>

<p>예를 들어,&nbsp;σ(2) = 1+2 = 3이고,&nbsp;σ(6) = 1+2+3+6 = 12,&nbsp;σ(12) = 1+2+3+4+6+12 = 28 이다.</p>

<p>m이 주어졌을 때, 1 ≤ n ≤ m인 모든 n의&nbsp;σ(n) 중에서 값이 짝수인 것이 몇 개 있는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 m (1 ≤ m ≤ 10<sup>12</sup>)이 주어진다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에&nbsp;1 ≤ n ≤ m인 모든 n의&nbsp;σ(n) 중에서 값이 짝수인 것의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
','1
','MATH'),
                                                                                                                (1926,'BAEKJOON','https://www.acmicpc.net/problem/11693',11693,'n^m의 약수의 합','1초','256 MB',15,'<p>두 정수 n, m이 주어졌을 때, n<sup>m</sup>의 모든 약수의 합을 출력하는 프로그램을 작성하시오. </p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n (1 ≤ n ≤ 10<sup>9</sup>), m (0 ≤ m ≤ 10<sup>9</sup>)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>n<sup>m</sup>의 모든 약수의 합을 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 1
','3
','MATH'),
                                                                                                                (1965,'BAEKJOON','https://www.acmicpc.net/problem/11720',11720,'숫자의 합','1초','256 MB',2,'<p>N개의 숫자가 공백 없이 쓰여있다. 이 숫자를 모두 합해서 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 숫자의 개수 N (1 ≤ N ≤ 100)이 주어진다. 둘째 줄에 숫자 N개가 공백없이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어진 숫자 N개의 합을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
1
','1
','MATH'),
                                                                                                                (1941,'BAEKJOON','https://www.acmicpc.net/problem/11735',11735,'정산소','1초','256 MB',12,'<p>가리송과 안드레송은 정산소에서 일하고 있고, 미래를 예측하고자 한다.&nbsp;둘에게는 큰 n x n 정사각형이 주어진다. 처음에&nbsp;각 배열의 원소 (x,y)는&nbsp;x + y 로 채워져있다. (1 ≤ x, y ≤ n).&nbsp;</p>

<p>미래 예측을 하는데에 두가지 타입의 쿼리가 들어온다.</p>

<ul>
	<li>“R&nbsp;r” ㅡ r행의 모든 값들을 합한 결과를 출력하고, r행을 모두 0으로 바꾼다.</li>
	<li>“C&nbsp;c”ㅡ&nbsp;c열의 모든 값들을 합한 결과를 출력하고, c열을 모두 0으로 바꾼다.</li>
</ul>

<p>쿼리 결과를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫줄에는 배열의 크기 n과 쿼리의 개수 q가 입력된다. (1 ≤ n ≤ 10<sup>6</sup>&nbsp;, 1 ≤ q ≤ 10<sup>5</sup>)</p>

<p>그 다음 q개의 줄마다&nbsp;“R&nbsp;r” (1 ≤ r ≤ n) 혹은&nbsp;“C&nbsp;c” (1 ≤ c ≤ n)인 쿼리문이 입력된다.<br>
&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>q개의 줄에 걸쳐서 i번째 쿼리의 결과를&nbsp;출력한다. (1 ≤ i&nbsp;≤ q)</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 7
R 2
C 3
R 2
R 1
C 2
C 1
R 3
','12
10
0
5
5
4
0
','MATH'),
                                                                                                                (1956,'BAEKJOON','https://www.acmicpc.net/problem/11778',11778,'피보나치 수와 최대공약수','1초','256 MB',16,'<p>피보나치 수는 0과 1로 시작한다. 0번째 피보나치 수는 0이고, 1번째 피보나치 수는 1이다. 그 다음 2번째 부터는 바로 앞 두 피보나치 수의 합이 된다.</p>

<p>이를 식으로 써보면 F<sub>n</sub>&nbsp;= F<sub>n-1</sub>&nbsp;+ F<sub>n-2</sub>&nbsp;(n ≥ 2)가 된다.</p>

<p>n=17일때 까지 피보나치 수를 써보면 다음과 같다.</p>

<p>0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597</p>

<p>n과 m이 주어졌을 때, n번째 피보나치 수와 m번째 피보나치 수의 최대공약수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n과 m이 주어진다. n과 m은 1,000,000,000,000,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 n번째 피보나치 수와 m번째 피보나치 수의 최대공약수를 1,000,000,007으로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','16 24
','21
','MATH'),
                                                                                                                (1961,'BAEKJOON','https://www.acmicpc.net/problem/11811',11811,'데스스타','1초','256 MB',8,'<p>젊은 제다이 이반의 임무는 데스스타에 침투하여 파괴하는 일이다. 데스스타를 파괴하기 위해서는 길이 N의 음이 아닌 정수 수열 a<sub>i</sub>가 필요하다. 그러나 이반은 이 수열을 가지고 있지 않다. 대신 그에게는 오랜 친구 다스 베이더에게 받은 쪽지가 하나 있다. 이 쪽지에는 그 수열이 만족해야 하는 조건이 적혀 있다.</p>

<p>이 쪽지에는 크기 N의 정사각 행렬이 있는데, i번째 행 j번째 열에 적힌 숫자는 a<sub>i</sub>와 a<sub>j</sub>에 비트연산 and를 수행한 결과값이다. 하지만 안타깝게도 광선검에 의해 쪽지가 손상되었고 이반은 행렬의 주 대각선에 있는 숫자를 읽을 수 없게 되었다. 원래 배열을 재구성하여 임무를 수행해야 하는 이반을 도와주자.</p>

<p>답은 유일하지 않을 수 있지만, 항상 존재하도록 주어진다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 번째 줄에는 행렬의 크기 N (1 ≤ N ≤ 1 000)이 주어진다.</p>

<p>다음 N개의 줄에는 행렬의 각 원소인 N개의 숫자 m<sub>ij</sub> (1 ≤ m<sub>ij</sub> ≤ 10<sup>9</sup>)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>정확히 한 줄에 문제의 조건을 만족하는 N개의 음이 아닌 정수를 출력한다. 각 정수는 10<sup>9</sup>보다 같거나 작아야 한다. 답이 여러 개인 경우 아무거나 출력한다.</p>
					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 예제에서 [1 1 1]이 조건을 만족함은 쉽게 알 수 있다. 이것이 유일한 답은 아니다.</p>

				</div>
				</div>','3
0 1 1
1 0 1
1 1 0
','1 1 1
','MATH'),
                                                                                                                (1935,'BAEKJOON','https://www.acmicpc.net/problem/11812',11812,'K진 트리','1초','256 MB',13,'<p>각 노드가 자식을 최대 K개 가질 수 있는 트리를 K진 트리라고 한다. 총 N개의 노드로 이루어져 있는 K진 트리가 주어진다.</p>

<p>트리는 "적은 에너지" 방법을 이용해서 만든다. "적은 에너지" 방법이란, 이전 깊이를 모두 채운 경우에만, 새로운 깊이를 만드는 것이고, 이 새로운 깊이의 노드는 가장 왼쪽부터 차례대로 추가 한다.</p>

<p>아래 그림은 노드 9개로 이루어져 있는 3진 트리이다.</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/11812/1.png" style="height:124px; width:188px"></p>

<p>노드의 개수 N과 K가 주어졌을 때, 두 노드 x와&nbsp;y 사이의 거리를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N (1 ≤&nbsp;N ≤ 10<sup>15</sup>)과 K (1 ≤ K ≤ 1 000), 그리고 거리를 구해야 하는 노드 쌍의 개수 Q (1 ≤ Q ≤ 100 000)가 주어진다.</p>

<p>다음 Q개 줄에는 거리를 구해야 하는 두 노드 x와 y가 주어진다. (1 ≤ x, y ≤ N, x ≠ y)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>총 Q개의 줄을 출력한다. 각 줄에는 입력으로 주어진 두 노드 사이의 거리를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7 2 3
1 2
2 1
4 7
','1
1
4
','MATH'),
                                                                                                                (1936,'BAEKJOON','https://www.acmicpc.net/problem/11815',11815,'짝수? 홀수?','2초','256 MB',6,'<p>B를&nbsp;A로 나누었을 때 나머지가 0 이라면 A는 B의 약수라고 할 수 있다. (A > 0, B > 0) 예를 들면&nbsp;15 의 약수는&nbsp;1, 3, 5, 15 이다.</p>

<p>주어진 수가 가지는 약수 개수가 홀수인지 짝수인지 판별해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 전체 테스트 개수 (N)&nbsp;가 주어진다.&nbsp;(1 ≤ N ≤ 100)</p>

<p>두 번째 줄에는 약수 개수를 판별할&nbsp;수 (X)&nbsp;가 주어진다&nbsp;(1 ≤ X&nbsp;≤ 10<sup>18</sup>).</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>주어진 수의 약수 개수가 홀수이면 1, 짝수이면 0 을 출력하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
4 5
','1 0
','MATH'),
                                                                                                                (1937,'BAEKJOON','https://www.acmicpc.net/problem/11816',11816,'8진수, 10진수, 16진수','1초','256 MB',4,'<p>정수 X가 주어진다. 정수 X는 항상 8진수, 10진수, 16진수 중에 하나이다.</p>

<p>8진수인 경우에는 수의 앞에 0이 주어지고, 16진수인 경우에는 0x가 주어진다.</p>

<p>X를 10진수로 바꿔서 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 X가 주어진다. X는 10진수로 바꿨을 때, 1,000,000보다 작거나 같은 자연수이다. 16진수인 경우 알파벳은 소문자로만 이루어져 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 입력받은 X를 10진수로 바꿔서 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10
','10
','MATH'),
                                                                                                                (1939,'BAEKJOON','https://www.acmicpc.net/problem/11834',11834,'홀짝','2초','256 MB',14,'<p>홀짝 수열은 1,2,4,5,7,9,10,12,14,16,17로 시작하는 증가하는 자연수 수열이다. 홀짝 수열은 1개의 홀수, 2개의 짝수, 3개의 홀수 이런식으로 이어진다. 이 수열의 N번째 원소를 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(1 ≤ N ≤ 10<sup>100</sup>)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 홀짝 수열의 N번째 원소를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','1
','MATH'),
                                                                                                                (1945,'BAEKJOON','https://www.acmicpc.net/problem/11867',11867,'박스 나누기 게임','2초','512 MB',9,'<p>박스 나누기 게임은 두 박스를 이용해서 하는 게임이다.</p>

<p>처음에&nbsp;한 박스에는 돌이 N개, 다른 박스에는 돌이 M개 들어있다. 두 사람은 턴을 번갈아가면서 게임을 진행한다.</p>

<p>각 사람은 박스를 하나 선택하고, 박스안에 들어있는 돌을 모두 비운다. 그 다음, 다른 박스에 들어있는 돌을 적절히 두 박스로 분배한다. 이때, 두 박스에는 돌이 적어도 1개 이상 있어야 한다.</p>

<p>두 박스에 돌을 각각 1개씩 만드는 사람이 게임을 이기게 된다.</p>

<p>N과 M이 주어진다.&nbsp;두 사람이 게임을 완벽하게 했을 때, 이기는 사람을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 M이 주어진다. (1 ≤&nbsp;N, M ≤ 100, N과 M이 모두 1인 경우는 없다)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>게임을 먼저 시작한 사람이 게임을 이기면 A를, 그 다음에 시작한 사람이 게임을 이기면 B를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 2
','A
','MATH'),
                                                                                                                (1947,'BAEKJOON','https://www.acmicpc.net/problem/11880',11880,'개미','1초','256 MB',4,'<p>승현이는 방학을 맞아 심심하지만, 공부는 하기 싫습니다. 이렇게 방 안에서 하루하루 시간을 낭비하던 중, 승현이는 자신의 직육면체 모양의 지우개에 개미 한 마리가 붙어 있다는 것을 알게 됩니다. 사실 이 개미는 우리가 문제를 어떻게 낼 지 잘 몰라서 방에 넣은 로봇입니다.</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/11880/1.png" style="height:152px; width:168px"></p>

<p>이 개미 로봇은 말도 안 되지만 어떠한 시련이 닥쳐도 서로 반대편에 위치한 점 A에서 점 B까지 최단 거리로 이동하며 그 경로를 지우개에 그립니다. 누군가 자신의 지우개에 흔적을 남기는 것을 너무나 싫어하는 승현이는 개미 로봇이 자신의 지우개에 남긴 흔적의 양, 즉 로봇이 이동한 거리를 구하여 우리에게 손해 배상 청구를 하려고 합니다. 개미 로봇은 부피가 존재하지만, 승현이는 정확한 양을 측정하기 귀찮기 때문에 그냥 부피가 없다고 처리하기로 했습니다.</p>

<p>우리에게 복수하고 싶어하는 승현이를 도와줍시다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 수 T가 주어집니다. (1 ≤ T ≤ 100,000)</p>

<p>각 테스트 케이스마다 한 줄에 하나씩 음이 아닌 정수 a, b, c가 공백을 사이로 두고 주어집니다. 여기서 a는 지우개의 가로의 길이, b는 지우개의 세로의 길이, c는 지우개의 높이를 나타냅니다. (1 ≤ a, b, c ≤ 10<sup>5</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 한 줄에 하나씩 개미 로봇이 이동한 거리를 출력합니다. 단 꼼꼼한 승현이는 오차가 생기는 것을 원하지 않으므로, 이 거리의 제곱을 출력해야 합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
1 2 3
','18
','MATH'),
                                                                                                                (1949,'BAEKJOON','https://www.acmicpc.net/problem/11881',11881,'지우개','1초','256 MB',13,'<p>승현이는 우리에게 지우개를 훼손당할 수 있다는 생각에, 직접 지우개를 만들어 보기로 했습니다.</p>

<p>승현이는 자신이 좋아하는 자연수들로 구성된 수열 a<sub>1</sub>, a<sub>2</sub>, ?, a<sub>n</sub>을 생각해 냅니다. 그리고, 이 수열에서 서로 다른 세 원소 a<sub>i</sub>, a<sub>j</sub>, a<sub>k</sub>를 선택한 뒤, 이들을 가로, 세로, 높이로 하는 직육면체 모양의 지우개를 만들고 이를 i?j?k 지우개라고 명명하기로 했습니다. 단 승현이는 위로 길쭉한 지우개를 좋아하므로, a<sub>i</sub> < a<sub>j</sub> < a<sub>k</sub>를 만족해야 합니다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/11881/1.png" style="height: 170px; line-height: 20.8px; opacity: 0.9; text-align: center; width: 343.333px;"></p>

<p>위 그림을 한 번 살펴봅시다. 승현이가 만든 수열을 a<sub>1</sub>=3, a<sub>2</sub>=1, a<sub>3</sub>=1, a<sub>4</sub>=2라고 둡시다. 1?2?3 지우개는 만들 수 없는데, 3<1<1은 성립하지 않기 때문입니다. 반면 2?4?1 지우개는 1 < 2 < 3이 성립하므로 만들 수 있습니다. 이 수열에서 만들 수 있는 지우개는 2?4?1 지우개와 3?4?1 지우개뿐입니다.</p>

<p>이때 승현이는 만들 수 있는 모든 지우개들의 부피의 합을 갑자기 알고 싶어집니다. (지우개의 부피는 가로 길이, 세로 길이와 높이의 곱입니다.) 아마 창고에 지우개를 쌓아 놓아야 하니 그렇겠죠? 승현이가 지우개를 보관할 창고를 설계할 수 있도록 우리가 도와줍시다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 수열의 크기 n이 주어집니다. (1 ≤ n ≤ 100,000)</p>

<p>두 번째 줄에 a<sub>1</sub>, a<sub>2</sub>, ?, a<sub>n</sub>이 공백을 사이로 두고 차례대로 주어집니다. (1 ≤ a<sub>i</sub> ≤ 100,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 만들 수 있는 지우개들의 부피의 합을 출력합니다. 승현이는 프로그램이 제대로 동작하는 것부터 검증하기를 원하므로, 1,000,000,007 (10<sup>9</sup>+7)로 나눈 나머지를 출력합시다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>위에 설명한 예제와 같습니다. 만들 수 있는 지우개는 2?4?1 지우개와 3?4?1 지우개뿐이므로, 부피의 합은 a<sub>2</sub>a<sub>4</sub>a<sub>1</sub>+a<sub>3</sub>a<sub>4</sub>a<sub>1</sub>=1×2×3+1×2×3=12가 됩니다.</p>

				</div>
				</div>','4
3 1 1 2
','12
','MATH'),
                                                                                                                (1951,'BAEKJOON','https://www.acmicpc.net/problem/11884',11884,'생일수 II','1초','256 MB',21,'<p>승현이는 1998년 3월 5일에 태어났습니다. 그래서 승현이는 자신의 생년월일에 있는 수들 중에서 <strong>3</strong>, <strong>5</strong>, <strong>8</strong>을 굉장히 좋아합니다. 이에 승현이는 10진수로 표현했을 때 3, 5, 8로만 구성되어 있는 자연수를 <strong>생일수</strong>로 부르기로 했습니다. 예로 들어 3, 533, 858553은 생일수이지만, 3518, 1642, 88808은 생일수가 아닙니다.</p>

<p>여러분에게 두 생일수 x와 y (x<y)가 주어졌습니다. x 이상 y 이하의 서로 다른 모든 생일수들을 오름차순으로 나열한 수열을 a<sub>1</sub>, a<sub>2</sub>, ?, a<sub>k</sub>로 둘 때, a<sub>1</sub>×a<sub>2</sub>&nbsp;+ a<sub>2</sub>×a<sub>3</sub> + ? + a<sub>k?1</sub>×a<sub>k</sub>의 값을 구하는 프로그램을 작성하세요. 큰 수를 처리하기는 언제나 귀찮으므로, 승현이의 생일인 19980305로 나눈 나머지를 출력하도록 합시다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 x, 두 번째 줄에 y가 주어집니다. 각 줄에는 3, 5, 8 이외의 다른 문자는 주어지지 않습니다. (x,y≤10<sup>200000</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 a<sub>1</sub>×a<sub>2</sub>&nbsp;+ a<sub>2</sub>×a<sub>3</sub>&nbsp;+ ? + a<sub>k?1</sub>×a<sub>k</sub>의 값을 19980305로 나눈 나머지를 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
8
','55
','MATH'),
                                                                                                                (1959,'BAEKJOON','https://www.acmicpc.net/problem/11895',11895,'속이기','1초','256 MB',8,'<p>승현이는 남을 속이는 것을 참 좋아합니다. 오늘 승현이는 수열을 가지고 우리를 속여 보려고 합니다.</p>

<p>승현이는 길이가 n인 자연수로 구성된 수열 a<sub>1</sub>, a<sub>2</sub>, ?, a<sub>n</sub>을 들고 왔습니다. 그러더니 갑자기 이 수열의 각 원소를 두 그룹 X나 Y 중 하나에 넣으라고 합니다. 편의상 X의 모든 원소를 X<sub>1</sub>, X<sub>2</sub>, ?, X<sub>k</sub>, Y의 모든 원소를 Y<sub>1</sub>, Y<sub>2</sub>, ?, Y<sub>n?k</sub>로 둡시다. (단 k > 0,n?k > 0)</p>

<p>승현이는 X<sub>1</sub> ? X<sub>2</sub> ? ? ? X<sub>k</sub>의 값과 Y<sub>1</sub> ? Y<sub>2</sub> ? ? ? Y<sub>n?k</sub>의 값이 같으면 우리에게 X<sub>1</sub> + X<sub>2</sub> + ? + X<sub>k</sub>원을 준다고 합니다.</p>

<p>승현이에게 너무 많이 속은 여러분은 믿기지 않지만, 돈을 잃을 일은 없으니 한 번 시도해 보기로 했습니다. 승현이가 제시한 수열 a가 주어질 때, 여러분이 돈을 받을 수 있는지, 돈을 받을 수 있다면 최대 얼마나 받을 수 있는지 구하는 프로그램을 작성하세요.</p>

<p>참고: ?는 배타적 논리합(XOR)를 뜻합니다. 자세한 설명은 <a href="http://ko.wikipedia.org/wiki/%EB%B0%B0%ED%83%80%EC%A0%81_%EB%85%BC%EB%A6%AC%ED%95%A9#.EB.B9.84.ED.8A.B8.EA.B0.84_.EB.B0.B0.ED.83.80.EC.A0.81_.EB.85.BC.EB.A6.AC.ED.95.A9">여기</a>와 <a href="http://ko.wikipedia.org/wiki/XOR_%EC%8A%A4%EC%99%91_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98#.EC.A6.9D.EB.AA.85">여기</a>를 참고하세요.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 n (1 ≤ n ≤ 1,000)이 주어지고, 두 번째 줄에 a<sub>1</sub>, a<sub>2</sub>, ? ,a<sub>n</sub> (1 ≤ a<sub>1</sub>, a<sub>2</sub>, ?, a<sub>n</sub> ≤ 10<sup>6</sup>)이 공백을 사이로 두고 주어집니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 여러분이 받을 수 있는 돈의 최댓값을 출력합니다. 만약 돈을 받을 수 없다면 0을 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 2 3
','5
','MATH'),
                                                                                                                (1973,'BAEKJOON','https://www.acmicpc.net/problem/11896',11896,'다각형','1초','256 MB',5,'<p>승현이는 웹툰을 보는 것보다 더 생산적인 활동을 하고자 합니다. 그래서 종이에다가 아래와 같은 그림을 하나 그렸습니다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/11896/1.png" style="height:215px; width:164px"></p>

<p>남들과 보는 눈이 다른 승현이는 밑의 사각형 부분은 직선을 하나 그어서 모든 변을 자를 수 있다는 것을 알게 되었습니다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/11896/2.png" style="height:215px; width:204px"></p>

<p>이제 무슨 이야기가 나올 지 다 아시겠지만.. 승현이는 갑자기(?) 이러한 조건을 만족하는 다각형들의 종류가 몇 가지나 될지 궁금해졌습니다.</p>

<p>직선을 하나 그어서 모든 변을 자를 수 있는 n각형이 존재하는 모든 n들의 합을 구하는 프로그램을 작성하세요. 단 이러한 다각형은 무한히 존재할 것 같으니, n은 a 이상 b 이하여야 합니다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 두 자연수 a와 b가 공백을 사이로 두고 주어집니다. (1 ≤ a ≤ b ≤ 10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 위에서 요구한 답을 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 4
','4
','MATH'),
                                                                                                                (1972,'BAEKJOON','https://www.acmicpc.net/problem/11904',11904,'쌍둥이 독수리','1초','32 MB',16,'<p>쌍둥이 독수리는 근처에 사는 사자와 곰을 쓰러뜨리려고 합니다. 허나 정면승부로 싸우기엔 쌍둥이 독수리가 너무약하기 때문에 기습을 해서 쓰러뜨려야 합니다.</p>

<p>쌍둥이 독수리의 공격력은 LH이고 사자와 곰의 체력은 각각 S, D입니다. 독수리 한 마리가 공격하면 공격대상의 체력이 LH만큼 줄고, 두 마리가 공격하면 2×LH만큼 줍니다.</p>

<p>쌍둥이 독수리는 매일 사자와 곰이 있는 곳으로 가서 한 번 공격합니다. 둘이서 한 동물을 공격할 수도 있고 각자 한 동물씩 공격할 수도 있는데, 쌍둥이 독수리는 약하기 때문에 한 번 공격하면 하루 동안 쉬어야 합니다.</p>

<p>한편, 매 밤마다 사자와 곰은 쓰러져 있지 않으면 각각 L, B만큼의 체력을 회복합니다. 체력은 무한히 커질 수 있으며, 체력이 0 이하가 되면 쓰러집니다.</p>

<p>쌍둥이 독수리가 사자와 곰을 쓰러뜨리기 위해 필요한 날의 수의 최솟값을 구하세요.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 독수리의 공격력 LH와 사자와 곰의 체력 S, D, 사자와 곰의 회복력 L, B가 공백을 사이로 두고 주어집니다.</p>

<ul>
	<li>1 ≤ LH, S, D ≤ 1,000,000,000</li>
	<li>0 ≤ L, B ≤ 1,000,000,000</li>
</ul>

<p>&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>쌍둥이 독수리가 사자와 곰을 쓰러뜨리기 위해 필요한 날의 최솟값을 출력합니다. 답이 32-bit integer를 넘어갈 수 있으니 유의하세요.</p>

<p>&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 10 10 2 1
','3
','MATH'),
                                                                                                                (1974,'BAEKJOON','https://www.acmicpc.net/problem/11917',11917,'이상한 수열','1초','64 MB',13,'<p>승현이는 아래와 같은 수열을 만들고 좋아서 히죽거리고 있다.</p>

<ul>
	<li>B<sub>i</sub> = S<sub>i</sub> (1 ≤ i ≤ N)</li>
	<li>B<sub>i</sub> = B<sub>1</sub>, B<sub>2</sub>, ..., B<sub>i - 1</sub> 에 있는 서로 다른 수의 개수 (N < i)</li>
</ul>

<p>여기서 S는 승현이가 혼자서 생각한 길이 N인 수열이다.</p>

<p>승현이는 수열 B의 M번째 항을 계산하고 싶어 한다. 하지만 이런 일은 승현이에게는 너무 쉽기 때문에 승현이는 귀찮아한다. 승현이 대신 수열의 M번째 항을 구하는 프로그램을 작성하여라.</p>

<p>&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 수열 S의 길이 N이 주어진다.</p>

<p>두 번째 줄에는 S<sub>1</sub>, S<sub>2</sub>, ..., S<sub>N</sub>이 공백을 사이로 두고 차례대로 주어진다.</p>

<p>세 번째 줄에는 M이 주어진다.</p>

<ul>
	<li>1 ≤ N ≤ 50,000</li>
	<li>1 ≤ M ≤ 10<sup>9</sup>, M은 자연수</li>
	<li>수열 S의 각 원소는 정수</li>
	<li>- 1, 000, 000 ≤ Si ≤ 1, 000, 000</li>
</ul>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>수열 B의 M번째 항의 값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>주어진 수열을 9번째 수까지 나타내면 아래와 같다.</p>

<p>2, 13, -7, 2, 3, 4, 5, 6, 7</p>

				</div>
				</div>','4
2 13 -7 2
9
','7
','MATH'),
                                                                                                                (1975,'BAEKJOON','https://www.acmicpc.net/problem/11928',11928,'공기놀이','2초','512 MB',17,'<p>집에서 태준이와 공기놀이를 하던 홍준이는 태준이에게 다음과 같은 질문을 받았다.</p>

<p>“빨간 돌과 파란 돌이 각각 N개가 있어. 이것들을 일렬로 늘어놓되, 빨간 돌 하나와 파란 돌 하나를 택했을 때 빨간 돌이 파란 돌보다 왼쪽에 오는 경우의 수가 홀수 개가 되도록 하고 싶은데 이렇게 일렬로 늘어놓는 경우의 수가 얼마나 있을까?”</p>

<p>홍준이는 형의 질문을 듣고 오랫동안 고민하였지만 끝내 풀지 못하였다. 홍준이는 풀던 문제를 못 풀면 폭식을 하는 버릇이 있다. 홍준이가 폭식하지 않도록 문제를 풀어주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 하나의 양의 정수 N이 주어진다. (1 ≤&nbsp;N ≤&nbsp;10,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 태준이가 궁금해하는 경우의 수를 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제의 경우, 돌들을 일렬로 늘어놓을 수 있는 경우의 수는 빨간 돌 ? 파란 돌 / 파란 돌 ? 빨간 돌, 2가지 경우이다. 이 중, 전자의 경우에만 빨간 돌이 파란 돌보다 왼쪽에 오는 경우의 수가 홀수가 되므로 답은 1가지가 된다.</p>

				</div>
				</div>','1
','1
','MATH'),
                                                                                                                (1977,'BAEKJOON','https://www.acmicpc.net/problem/11943',11943,'파일 옮기기','1초','32 MB',2,'<p>두 개의 바구니에 사과와 오렌지가 있다. 첫 번째 바구니에는 사과 A개와 오렌지 B개가 있으며 두 번째 바구니에는 사과 C개와 오렌지 D개가 있다.</p>

<p>당신은 한 바구니에 있는 과일 하나를 집어서 다른 바구니로 옮길 수 있다. 이런 식으로 과일을 옮길 때, 한 바구니에는 사과만 있게 하고 다른 쪽에는 오렌지만 있게 하려고 한다.</p>

<p>앞서 말한 조건을 만족하도록 과일을 옮길 때, 과일을 옮기는 최소 횟수를 구하는 프로그램을 작성하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 첫 번째 바구니에 있는 사과와 오렌지의 수 A, B가 주어진다. (0 ≤ A, B ≤ 1,000)</p>

<p>두 번째 줄에는 두 번째 바구니에 있는 사과와 오렌지의 수 C, D가 주어진다. (0 ≤ C, D ≤ 1,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>사과와 오렌지를 옮기는 최소 횟수를 출력한다.</p>


					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 2
3 4
','5
','MATH'),
                                                                                                                (1976,'BAEKJOON','https://www.acmicpc.net/problem/11947',11947,'이런 반전이','1초','128 MB',7,'<p>하나의 양의 정수 n에 대해서 n의 ‘반전’인 F(n)은 다음과 같이 정의됩니다.</p>

<p>F(n) : n의 각 자리 수 a에 대해서 그 수를 (9 ? a)로 바꾼 것</p>

<p>이때, 가장 큰 자리수의 유효숫자보다 앞에 등장하는 0들은 무시하는 것에 주의합니다. 따라서 9의 반전은 0이고, 91의 반전은 8, 124의 반전은 875, 990의 반전은 9가 됩니다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/11947/1.png" style="height:153px; width:305px"></p>

<p>여기서 어떤 수 n의 ‘사랑스러움’는 n과 n의 반전을 곱한 것으로 정의합니다. 입력으로 자연수 N이 주어지면, 1 이상 N 이하인 수들의 ‘사랑스러움’ 중 최댓값을 출력하세요.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 테스트 케이스의 개수를 나타내는 하나의 자연수 T가 주어집니다. 다음 T개의 각 줄에는 하나의 양의 정수 N이 주어집니다. (1 ≤ N ≤ 1,000,000,000)</p>


					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 해당하는 1 이상 N 이하인 수들의 ‘사랑스러움’ 중 최댓값을 하나의 줄에 하나씩 출력하세요. 즉, k번째 테스트 케이스에 해당하는 답은 k번째 줄에 출력하시면 됩니다.</p>


					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>4 또는 5의 사랑스러움은 20이고 100의 사랑스러움은 89900입니다.</p>

				</div>
				</div>','2
7
100
','20
89900
','MATH'),
                                                                                                                (1964,'BAEKJOON','https://www.acmicpc.net/problem/11948',11948,'과목선택','2초','512 MB',2,'<p>JOI는 물리, 화학, 생물, 지구과학, 역사, 지리&nbsp;총 6 과목의&nbsp;시험을 봤다.&nbsp;각 시험의 만점은 100점이다.</p>

<p>JOI는 물리, 화학, 생물, 지구과학 4과목 중에서 3&nbsp;과목을 선택하고 역사, 지리 2&nbsp;과목&nbsp;중에서 한&nbsp;과목을 선택한다.</p>

<p>시험 점수의 합이 가장 높게 나오도록&nbsp;과목을 선택할 때, JOI가 선택한 과목의 시험 점수의 합을 구하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 6행으로 되어있으며, 각 행에 1개의 정수가&nbsp;주어진다.</p>

<p>1행에는 JOI의 물리 시험의&nbsp;점수 A가&nbsp;주어진다.</p>

<p>2행에는 JOI의 화학&nbsp;시험의&nbsp;점수 B가&nbsp;주어진다.</p>

<p>3행에는 JOI의 생물&nbsp;시험의&nbsp;점수 C가&nbsp;주어진다.</p>

<p>4행에는 JOI의 지구과학의&nbsp;시험&nbsp;점수 D가&nbsp;주어진다.</p>

<p>5행에는 JOI의 역사&nbsp;시험의&nbsp;점수 E가&nbsp;주어진다.</p>

<p>6행에는 JOI의 지리&nbsp;시험의&nbsp;점수 F가&nbsp;주어진다.</p>

<p>입력한 정수 A, B, C, D, E, F는 모두 0이상 100이하이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>JOI가 선택한 과목의 총 점수를&nbsp;1행에 출력하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 입/출력 1에서는 JOI가 물리, 생물, 지구과학, 역사, 4과목을 선택한 경우에 시험의 총 점수가 제일 높습니다.</p>

<p>물리, 생물, 지구과학, 역사의 점수가&nbsp;각각 100, 76,42, 10이므로&nbsp;선택한 과목의 총 점수는 228입니다.</p>

<p>예제 입/출력 2에서는 JOI가 화학, 생물, 지구과학, 지리, 4과목을 선택한 경우에&nbsp;시험의 총 점수가 제일 높습니다.</p>

<p>화학, 생물, 지구과학, 지리의 점수가&nbsp;각각 21, 15, 42, 62이므로 선택한 과목의 총 점수는 140입니다.</p>

				</div>
				</div>','100
34
76
42
10
0
','228
','MATH'),
                                                                                                                (1978,'BAEKJOON','https://www.acmicpc.net/problem/11958',11958,'행복한 수','0.5초','64 MB',20,'<p>준형이와 민형이가 수열 게임을 한다. 게임을 시작하기에 앞서, 민형이는 K, L, M 3개의 수를 뽑는다. 민형이가 수를 뽑았다면, 준형이는 K개의 연속한 자연수를 말해야 한다.</p>

<p>민형이는 준형이의 암산 실력을 키우기 위해서 룰을 하나 추가했다. 이 룰에 따르면,&nbsp;준형이가 K개의 수를 말하면&nbsp;그 중에서 행복한 수가 정확히 L개 있어야 한다. 행복한 수는 아래 두 조건 중 하나 이상을 만족시키는 수를 말한다.</p>

<ul>
	<li>수가 M 이하의 자연수인 경우</li>
	<li>수가 소수(약수가 정확히 2개인 수)인 경우</li>
</ul>

<p>준형이는 민형이의 질문에 빠른 대답을 하지 못하기 때문에 몰래 컴퓨터를 이용해서 답을 하려고 한다. 민형이의 질문에 답을 해주는 프로그램을 작성하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 테스트 케이스의 수 Q&nbsp;(1 ≤ Q ≤ 100 000)가 주어진다.</p>

<p>두 번째 줄부터 Q개의 줄에는 K, L, M의 값이 주어진다. (1 ≤ K, M ≤ 150, 0 ≤ L ≤ K)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>Q개의 줄에 준형이가 말해야 할 K개의 수들 중 가장 작은 수를 출력한다. 만약 답이 없거나 10 000 000보다 크다면, -1을 출력한다.</p>

<p>만약 답으로 가능한 수가 여러 개인 경우, 그중 아무거나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 1 1
2 0 2
3 1 1
','1
8
4
','MATH'),
                                                                                                                (1979,'BAEKJOON','https://www.acmicpc.net/problem/11966',11966,'2의 제곱인가?','2초','512 MB',3,'<p>자연수 N이 주어졌을 때, 2의 제곱수면 1을 아니면 0을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(1 ≤ N ≤ 2<sup>30</sup>)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>N이&nbsp;2의 제곱수면 1을 아니면 0을 출력하는 프로그램을 작성하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','1
','MATH'),
                                                                                                                (1982,'BAEKJOON','https://www.acmicpc.net/problem/12020',12020,'LU 분해','3초','128 MB',16,'<p>\(N \times N\) Matrix A가 주어진다. LU 분해란 \(A = LU\)꼴의 Matrix 곱로 분해하는 것이다. (단, \(L\)은 Lower Triangular Matrix, \(U\)는 Upper Triangular Matrix)</p>

<ul>
	<li>Lower Triangular Matrix란 \(L_{ij} = 0 \text{ (if }i < j\text{)}\)</li>
	<li>Upper Triangular Matrix란&nbsp;\(U_{ij} = 0 \text{ (if }i > j\text{)}\)</li>
</ul>

<p>여기서 특이한 Matrix의 LU decomposition을 생각한다. Band Matrix란 대각성분이 띠 같은 모양을 이루고 있는 Matrix를 말한다. 여기서 우리는 Band의 폭이 1인 것만 생각한다. 즉&nbsp;</p>

<p>Matrix A = \(\begin{bmatrix} b_1 &amp; c_1 &amp; &nbsp;0 &amp; \dots &amp; 0 \\ &nbsp;a_2 &nbsp;&amp; b_2 &amp; c_2 &amp; \dots &amp; \vdots \\ 0 &amp; \ddots &amp; \ddots &amp; \ddots &amp; 0 \\ \vdots &amp; \ddots &nbsp;&amp; a_{n-1} &amp; b_{n-1} &amp; c_{n-1} \\ &nbsp;0 &amp; \dots &amp; 0 &amp; a_n &amp; b_n \end{bmatrix}\)&nbsp;의 꼴만 생각 한다.</p>

<p>더 이상의 자세한 설명은 생략한다. 행렬 \(L\)의 대각성분은 1이 되도록 하는 행렬 \(L\)과 \(U\)를 구하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 정사각 행렬의 크기 N (1 ≤ N ≤ 1,000)이 주어지고 그 후 N줄에 차례대로 행렬의 성분이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>먼저 N개의 줄에 \(L\)행렬을 출력한 후 그 다음 N개의 줄에 \(U\)행렬을 출력한다. 행렬 성분의 값은 소수 4째자리에서 반올림하여 3째자리 까지 출력한다. 만약 LU 분해가 불가능하거나 \(U\)의 대각 성분이 0이면&nbsp;첫째 줄에 ?1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 1 0
1 0 1
0 1 1
','1.000 0.000 0.000
1.000 1.000 0.000
0.000 -1.000 1.000
1.000 1.000 0.000
0.000 -1.000 1.000
0.000 0.000 2.000
','MATH'),
                                                                                                                (1970,'BAEKJOON','https://www.acmicpc.net/problem/12021',12021,'보물 찾기','1초','128 MB',9,'<p>희현이는 학교를 가다가 보물 지도를 주웠다. 보물 지도에 써져 있는 내용은 다음과 같았다.</p>

<ol>
	<li>연세대학교 정문의 좌표를 (0, 0)이라 하자.</li>
	<li>\(x_0 = a\), \(y_0 = b\)이다. (\(0 < b \le a\))</li>
	<li>\(x_{n+1} = \frac{(x_n + y_n)}{2}\), \(y_{n+1} = 2\frac{x_ny_n}{x_n+y_n}\)</li>
	<li>계속 쫓아가다 보면 보물은 나오기 마련!</li>
</ol>

<p>희현이를 도와 보물이 있는 위치를 구하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 양의 정수 \(a\)와 \(b\)가 주어진다. (\(0 < b \le a \le 10^{18}\))</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 보물이 있는 좌표를&nbsp;출력하자. 상대/절대 오차는 10<sup>-6</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1
','1.000 1.000
','MATH'),
                                                                                                                (1934,'BAEKJOON','https://www.acmicpc.net/problem/12024',12024,'사각형 찾기','2초','128 MB',14,'<p>주어진 그래프가 있다. 문제는 간단하다 사각형의 개수를 찾는 것이다. 즉, 서로 다른 정점들로 이루어진 길이가 4인 Cycle의 개수를 세는 것이다. 이때 정점 방문 순서가 다르면 다른 경우로 간주한다. (1 -> 2 -> 3 -> 4 -> 1 과 2 -> 3 -> 4 -> 1 -> 2은 다른 경우이다.)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>정점의 개수 N이 주어진다. (1 ≤ N ≤ 250)</p>

<p>그 후 N줄에는 그래프가 양방향 그래프인 인접행렬 A로 주어진다. A<sub>ii</sub>가 1인 경우는 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>서로 다른 길이 4짜리의 Cycle의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
0 1 0 1
1 0 1 0
0 1 0 1
1 0 1 0
','8
','MATH'),
                                                                                                                (1984,'BAEKJOON','https://www.acmicpc.net/problem/12025',12025,'장난꾸러기 영훈','1초','128 MB',11,'<p>희현이는 인터넷 ID를 만들 때 주로 쓰는 비밀번호가 있다. 하지만 이 비밀번호는 너무 길어서 희현이는 항상 쪽지에 적어 다니면서 확인을 한다. 하지만 장난꾸러기 영훈이는 이 쪽지를 가져가 1들 중 몇 개를 6로, 6들 중 몇 개를 1로 바꾸고 2들 중 몇 개를 7로 7들 중 몇 개를 2으로 바꾸는 장난을 쳤다. 따라서 영훈이가 장난쳐놓은 비밀번호 무용지물이 되었다. 왜냐하면 1이라고 쓰여 있어도 1 또는 6일수가 있고, 또한 6이라 쓰여 있어도 1 또는 6일수가 있다. 2과 7에서도 마찬가지이다. 하지만 희현이는 이러한 상황에 대비하여 비밀번호에 대한 한 가지 단서를 만들어 놓았는데 이는 다음과 같다.</p>

<p>비밀번호 수열의 숫자 중 1과 6을 모두 1로, 2와 7을 모두 2으로 바꾼 숫자와 1과 6을 모두 6으로 2과 7을 모두 7로 바꾼 숫자 사이에 가능한 경우를 모두 사전순으로 나열한 다음 그 중 k번째가 비밀번호이다.</p>

<p>따라서 이 단서를 통해 멘붕에 빠진 희현이를 도와 비밀번호를 다시 찾아보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 영훈이가 장난을 쳐서 바뀐 비밀번호가 주어진다. (비밀번호의 길이는 60자까지이고 첫 숫자가 0일수도 있다.)</p>

<p>둘째 줄에 숫자 k가 주어진다. (k ≤ 2<sup>63</sup> ? 1)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 원래 비밀번호를 출력한다.</p>

<p>만약 k번째 비밀번호가 존재하지 않으면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>1234567890</p>

<ul>
	<li>k = 1 : 1234512890</li>
	<li>k = 2 : 1234517890</li>
	<li>k = 3 : 1234562890</li>
	<li>k = 4 : 1234567890</li>
</ul>

				</div>
				</div>','1234567890
4
','1234567890','MATH'),
                                                                                                                (1985,'BAEKJOON','https://www.acmicpc.net/problem/12107',12107,'약수 지우기 게임 1','2초','512 MB',13,'<p>A와 B가 약수 지우기 게임을 한다. 약수 지우기 게임은 두 사람이 즐기는 게임이다.</p>

<p>칠판에 1부터 N까지의 자연수가 적혀 있다. 각 사람은 자신의 턴에 칠판에 적힌 자연수 하나를 지우고, 그 자연수의 약수 중 칠판에 남아 있는 수들을 모두 지운다. 예를 들어, 칠판에 2,3,4,5,6이 적혀 있을 때, 6을 지우면, 그 약수인 2와 3 역시 지워야 한다. 자신의 턴에 숫자를 지우지 않을 수는 없다. 마지막 숫자를 지우는 사람이 지게 된다.</p>

<p>A와 B가 최적의 방법으로 게임을 할 때, 이기는 사람을 출력한다. 게임은 A가 먼저 시작한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. N은 1,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 A가 이기는 경우 A, B가 이기는 경우 B를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>N=4인 경우, A는 처음에 4,2,1을 지운다. 칠판에 남은 수는 3으로, B는 3을 지울 수밖에 없어 패배한다.</p>

				</div>
				</div>','4
','A
','MATH'),
                                                                                                                (1986,'BAEKJOON','https://www.acmicpc.net/problem/12347',12347,'한수 2','0.5초','512 MB',11,'<p>어떤 양의 정수 X의 각 자리가 등차수열을 이룬다면, 그 수를 한수라고 한다. 등차수열은 연속된 두 개의 수의 차이가 일정한 수열을 말한다. N이 주어졌을 때, 1보다 크거나 같고, N보다 작거나 같은 한수의 개수를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 10<sup>18</sup>보다 작거나 같은 자연수 N이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 1보다 크거나 같고, N보다 작거나 같은 한수의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','110
','99
','MATH'),
                                                                                                                (1987,'BAEKJOON','https://www.acmicpc.net/problem/12348',12348,'분해합 2','0.25초(추가시간없음)','512 MB',11,'<p>어떤 자연수 N이 있을 때, 그 자연수 N의 분해합은 N과 N을 이루는 각 자리수의 합을 의미한다. 어떤 자연수 M의 분해합이 N인 경우, M을 N의 생성자라 한다. 예를 들어, 245의 분해합은 256(=245+2+4+5)이 된다. 따라서 245는 256의 생성자가 된다. 물론, 어떤 자연수의 경우에는 생성자가 없을 수도 있다. 반대로, 생성자가 여러 개인 자연수도 있을 수 있다.</p>

<p>자연수 N이 주어졌을 때, N의 가장 작은 생성자를 구해내는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수 N(1 ≤ N ≤ 10<sup>18</sup>)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 답을 출력한다. 생성자가 없는 경우에는 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','216
','198
','MATH'),

                                                                                                                (1989,'BAEKJOON','https://www.acmicpc.net/problem/12418',12418,'일조량 (Large)','10초','512 MB',17,'<p>근래의 신혼부부들의 가장 큰 걱정은 집을 마련하는 것이다. 그런데 도시에 살기 원하는 사람은 많고, 집은 굉장히 비싸기 때문에 원하는 집을 구하기가 쉽지 않다. 곧 결혼 예정인 A씨는 다행스럽게도 충분한 돈이 있어서 집을 사는데 큰 문제가 없다. 하지만 A씨에게도 고민이 있다. 살고자하는 집에 해가 충분한 시간동안 들기를 원하기 때문이다. 해는 아침 6시에 동쪽에서 떠서 반원형을 그리며 12시간 후에 서쪽으로 진다. 하지만, 도시에는 건물이 많아서 특정 시간에는 다른 건물에 가려 해가 들지 않는 집들이 많기 때문에 A씨가 원하는만큼 해가 드는 집을 찾는게 쉽지 않다. 도시에 A씨가 원하는 집이 얼마나 될 지 알아보자.</p>

<p><img src="https://onlinejudgeimages.s3.amazonaws.com/problem/12417/images-44.png" style="vertical-align:middle"></p>

<p>해는 위의 그림에 나와있는 반원 형태의 경로를 따라서 동쪽에서 서쪽으로 일정한 속도로 움직인다. 그림에서 빨간색으로 나타난 것이 건물이며, 파란색으로 표시된 영역이 가운데 건물의 가장 아래에 위치한 집에 해가 들어오는 시간 영역을 나타낸다. 각 건물에는 동일한 형태의 무한히 많은 집이 존재하며 각 집은 한 건물내에서 같은 높이에 위치하지 않는다. 건물의 넓이는 0이며, 동일한 위치에 건물이 여러채가 있을 수 없다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에는 테스트 케이스의 숫자&nbsp;<strong>T</strong>가 주어진다.<br>
각 테스트 케이스는 다음과 같이 주어진다.</p>

<pre>N R H
X<sub>0</sub> Y<sub>0</sub>
...
X<sub>N-1</sub> Y<sub>N-1</sub>
</pre>

<p>각 케이스의 첫 줄에는 다음과 같이 정수 3개가 주어진다.&nbsp;<strong>N</strong>은 건물의 수,&nbsp;<strong>R</strong>은 태양 이동 경로의 반지름, 그리고&nbsp;<strong>H</strong>는 A씨가 생각하는 최소 일조시간이다.<br>
두 번째 줄부터&nbsp;<strong>N</strong>개의 줄은 2개의 정수가 주어지며, 각각 건물의 정보를 나타낸다.&nbsp;<strong>X<sub>i</sub></strong>는 건물의 위치 이며,&nbsp;<strong>Y<sub>i</sub></strong>는 건물의 높이이다. 건물의 위치는 반원의 가운데를 기준으로 상대적인 위치를 나타낸다.</p>

<h3>제한</h3>

<ul>
	<li>1 ≤&nbsp;<strong>T</strong>&nbsp;≤ 100.</li>
	<li>100 ≤&nbsp;<strong>R</strong>&nbsp;≤ 1000.</li>
	<li>0 <&nbsp;<strong>H</strong>&nbsp;≤ 12.</li>
	<li><strong>Y</strong>&nbsp;> 0</li>
	<li><strong>X<sup>2</sup></strong>&nbsp;+&nbsp;<strong>Y<sup>2</sup></strong>&nbsp;<&nbsp;<strong>R<sup>2</sup></strong></li>
	<li>1 ≤&nbsp;<strong>N</strong>&nbsp;≤ 200.</li>
</ul>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대한 출력은 "Case #x: y" 형태로 이루어져야 한다. x는 1부터 시작되는 케이스 번호이고, y는 조건을 만족하는 집의 비율이다. 10<sup>-4</sup>범위의 절대/상대오차는 정답으로 간주된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1 100 12
0 50
2 100 7
0 75
-50 25
','Case #1: 1.0000000
Case #2: 0.7500000
','MATH'),
                                                                                                                (1990,'BAEKJOON','https://www.acmicpc.net/problem/12433',12433,'모자 쓴 아이들 (Small)','5초','512 MB',16,'<p>계단에 그림과 같이 검은색 혹은 흰색 모자를 쓴 아이들이 서 있다. 아이들은 계단 아래쪽만 볼 수 있고 전체 검은색 모자와 흰색 모자의 개수를 각각 알고 있다. 아이들보다 모자가 많아서, 모자가 남을 수 있는데, 이 경우 아이들이 쓰고 있지 않은 모자는 인솔자가 감추고 있다. 인솔자는 계단 맨 위에 있는 아이부터 차례차례 자신이 쓰고 있는 모자의 색을 알 수 있는지 물어보았고, 한 아이가 정답을 맞혔다. (즉 자신이 쓰고 있는 모자의 색을 맞혔다.) 정답을 맞힌 아이가 나온 후에는 그 앞에 있는 아이들에게는 더 이상 물어보지 않았다.</p>

<p><img src="https://onlinejudgeimages.s3.amazonaws.com/problem/12433/images-41.png" style="vertical-align:middle"></p>

<p>위 그림은 3명의 아이가 검은색/흰색 모자가 각각 2개인 상황에 뒤에서부터 2번째 아이가 정답을 말한 경우이다.</p>

<ul>
	<li>맨 뒤에 있는 아이가 볼 수 있는 것은, 검은색 모자 하나와 흰색 모자 하나이다. 만약 앞에 있는 아이가 둘 다 검은색의 모자를 쓰고 있었다면, 흰색 모자만 남기 때문에 자신이 흰색 모자를 쓰고 있다는 것을 알았을 것이다. 둘 다 흰색 모자를 쓰고 있을 때에도 자기 모자 색을 알 수 있었을 테지만 그렇지 않기 때문에 자신의 모자를 알 수 없다.</li>
	<li>두 번째 아이는 만일 자기 모자 색이 검은색이었다면 맨 뒤에 있는 아이가 자기 모자 색이 흰색인 것을 맞췄을 것이기 때문에 자기 모자 색이 흰색이라는 것을 알 수 있다.</li>
</ul>

<p>&nbsp;</p>

<p>당신은 이 상황에 대해 친구에게 전해 들었다. 친구는 상황이 정확히 어땠는지는 기억하지 못하고, 다만 아이들의 수와 검은색/흰색 모자의 수, 그리고 뒤에서 몇 번째 아이가 답을 맞혔는지만 알려주었다. 당신은 친구가 얘기해 준 정보에 맞는 경우의 수가 궁금해졌다. 이 경우의 수는 물론 매우 클 수 있기 때문에 32749로 나눈 나머지를 구하기로 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에는 테스트 케이스의 숫자&nbsp;<strong>T</strong>가 주어진다. 아래로 T 줄의 입력이 주어지며 각 줄은 하나의 테스트 케이스에 대한 입력이다. 각 테스트 케이스는 아래와 같이 4개의 자연수로 주어진다.</p>

<pre>B W k i</pre>

<p>여기에서&nbsp;<strong>B</strong>와&nbsp;<strong>W</strong>는 각각 검은색 모자와 흰색 모자의 수,&nbsp;<strong>k</strong>는 아이들의 수, 그리고&nbsp;<strong>i</strong>는 뒤에서 몇 번째 아이가 맞췄는지를 나타낸다.</p>

<h3>제한</h3>

<ul>
	<li>1 ≤&nbsp;<strong>T</strong>&nbsp;≤ 100.</li>
	<li>0 ≤&nbsp;<strong>B</strong>,&nbsp;<strong>W</strong>.</li>
	<li><strong>k</strong>&nbsp;≤&nbsp;<strong>B</strong>&nbsp;+&nbsp;<strong>W</strong>.</li>
	<li>1 ≤&nbsp;<strong>i</strong>&nbsp;≤&nbsp;<strong>k</strong>.</li>
	<li><strong>B</strong>,&nbsp;<strong>W</strong>,&nbsp;<strong>k</strong>&nbsp;≤ 20.</li>
</ul>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대한 출력은 "Case #x: y" 형태로 이루어져야 한다. x는 1부터 시작되는 케이스 번호이고, y는 주어진 조건에 맞는 경우의 수를 32749로 나눈 나머지이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
2 2 3 2
2 4 6 1
0 7 5 1
','Case #1: 4
Case #2: 15
Case #3: 1
','MATH'),
                                                                                                                (1991,'BAEKJOON','https://www.acmicpc.net/problem/12435',12435,'한강 (Small)','5초','512 MB',10,'<p>2011년 행정안전부에서는 도로명에 일련번호를 붙인 도로명 주소(새 주소) 제도를 시행하였다. 그로부터 수십년이 지났고, 한강의 물줄기를 따라서 물 위에 집을 짓는 것이 유행하였다. 이 새로운 유행에서는 다음과 같이 일렬로 집들이 만들어졌다. (주소 번호만 표시)</p>

<p>북쪽 강변<br>
---------------------------------------------------------------<br>
(하류) 2 3 4 5 6 7 8 9 10 11 12 13 ...&nbsp;<strong>N</strong>&nbsp;(상류)&nbsp;<br>
---------------------------------------------------------------<br>
남쪽 강변</p>

<p>주소는 2번지부터 매겨지고, 한강변을 거슬러 올라가면서 다음 집들에 3, 4, 5... 번지로 주소가 매겨진다.</p>

<p>이 집들에 사는 사람들끼리 공유하는 특이한 풍습이 하나 있었는데, 한 집의 주소 번호가 다른 집의 주소 번호의 배수가 되는 경우, 두 집은 서로 형제 관계 라고 불렀고, 번호가 큰 쪽이 형, 작은 쪽이 남동생 이 되었다. 예를 들어서 6번 집은 2, 3번 집에게 형이 되고, 2, 3번 집은 6번 집에게 남동생 이 된다. 또한 남동생 중 번호가 가장 작은 집이 ‘막내 가 되어, 이 경우 2번 집은 6번 집의 ‘막내 가 된다.</p>

<p>남동생의 수가 같은 집들끼리는 또한 친목 관계가 있었는데, 이것을 자매 관계 라 불렀다. 예를 들어서 6번 집은 2, 3번 집의 두 남동생 이 있고, 8번 집은 2, 4번 집의 두 남동생 이 있으므로, 두 집은 자매 관계가 된다. 이때 번호가 큰 8번 집을 언니, 번호가 작은 6번 집을 여동생 이라고 불렀다.</p>

<p><strong>N</strong>번 집에는 오랜 과거에 새주소 시스템을 인터넷 지도 서비스에 적용시킨 노 프로그래머가 살고 있었다. 그는 자신의 집의 여동생 인 집들에게 그 동안의 자매 관계에 대한 감사의 뜻으로 선물 상자를 보내기로 했다. 특히 그 선물 상자를 받는 집이 남동생 관계의 집들을 가지고 있고 그 중 막내의 집 번호가&nbsp;<strong>M</strong>&nbsp;이상일 경우에는, 어떤 특별한 선물을 선물 상자에 하나 넣어서 보내기로 하였다.</p>

<p>이 프로그래머는 특별한 선물을 총 몇 개 준비해야 할까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에는 테스트 케이스의 숫자&nbsp;<strong>T</strong>가 주어진다. 아래로 T 줄의 입력이 주어지며 각 줄은 하나의 테스트 케이스에 대한 입력이다. 각 테스트 케이스는 아래와 같이 2개의 자연수로 주어진다.</p>

<pre>N M</pre>

<p>여기서&nbsp;<strong>N</strong>은 장난감의 수를 계산해야 할 집의 주소 번호이고,&nbsp;<strong>M</strong>은 막내 주소의 최소 제한이다.</p>

<h3>제한</h3>

<ul>
	<li>1 ≤&nbsp;<strong>T</strong>&nbsp;≤ 1000.</li>
	<li>2 ≤&nbsp;<strong>M</strong>&nbsp;≤&nbsp;<strong>N</strong>.</li>
	<li>2 ≤&nbsp;<strong>N</strong>&nbsp;≤ 10<sup>6.</sup></li>
</ul>

<div>&nbsp;</div>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대한 출력은 "Case #x: y" 형태로 이루어져야 한다. x는 1부터 시작되는 케이스 번호이고, y는 각 케이스에 대해서 준비해야 하는 특별한 선물의 개수이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
3 2
8 2
35 2
35 3
','Case #1: 0
Case #2: 1
Case #3: 11
Case #4: 4
','MATH'),
                                                                                                                (1992,'BAEKJOON','https://www.acmicpc.net/problem/12437',12437,'새로운 달력 (Small)','5초','512 MB',6,'<p>태양계 밖에서 새로 발견된 행성 ELG8-G는 지구와는 다른 자전/공전주기를 가지고 있어서 지구의 달력을 그대로 가져다 쓸 수 없다. 이에 과학자들은 이 행성을 위해 새로운 달력 시스템을 만들기로 하였다. 그동안 지구에서 사용하던 그레고리력은 매달 날짜가 달라 다소 번거로운 점이 있어 이번 새로운 달력 시스템에서는 매달 같은 일수를 포함하도록 하였다. 이렇게 만들어 놓은 달력을 기반으로 매일 관찰한 내용을 기록하기 위해 커다란 달력을 만들기로 하였는데, 1년을 몇 달로 하는지, 1주를 며칠로 하는지에 따라서 달력이 크기가 달라진다는 사실을 알게 되었다. 이에 과학자들의 편의를 위해 기준이 되는 수들을 입력하면 필요로 하는 달력의 줄 수를 출력해 주는 프로그램을 작성하게 되었다.</p>

<p>달력은 다음과 같이 출력된다.</p>

<ul>
	<li>첫 달의 첫날은 첫 번째 열에 위치한다.</li>
	<li>첫 달을 제외한 각 달의 첫날은 이전달의 마지막 날 다음 열에 위치한다.</li>
	<li>서로 다른 달에 속한 날은 같은 줄에 위치하지 않는다.</li>
	<li>달력은 1년치만 출력된다.</li>
</ul>

<p>한 달에 11일이고, 1년에 3달이며, 한 주에 4일이면 다음과 같은 11줄짜리 달력이 만들어진다.  </p>

<table class="table table-bordered th-center td-center table-center-30">
	<tbody>
		<tr>
			<th>#0 </th>
			<th>#1 </th>
			<th>#2 </th>
			<th>#3</th>
		</tr>
		<tr>
			<td>1</td>
			<td>2</td>
			<td>3</td>
			<td>4</td>
		</tr>
		<tr>
			<td>5</td>
			<td>6</td>
			<td>7</td>
			<td>8</td>
		</tr>
		<tr>
			<td>9</td>
			<td>10</td>
			<td>11</td>
			<td> </td>
		</tr>
		<tr>
			<td> </td>
			<td> </td>
			<td> </td>
			<td>1</td>
		</tr>
		<tr>
			<td>2</td>
			<td>3</td>
			<td>4</td>
			<td>5</td>
		</tr>
		<tr>
			<td>6</td>
			<td>7</td>
			<td>8</td>
			<td>9</td>
		</tr>
		<tr>
			<td>10</td>
			<td>11</td>
			<td> </td>
			<td> </td>
		</tr>
		<tr>
			<td> </td>
			<td> </td>
			<td>1</td>
			<td>2</td>
		</tr>
		<tr>
			<td>3</td>
			<td>4</td>
			<td>5</td>
			<td>6</td>
		</tr>
		<tr>
			<td>7</td>
			<td>8</td>
			<td>9</td>
			<td>10</td>
		</tr>
		<tr>
			<td>11</td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
	</tbody>
</table>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에는 테스트 케이스의 숫자 <strong>T</strong>가 주어진다. 아래로 T 줄의 입력이 주어지며 각 줄은 하나의 테스트 케이스에 대한 입력이다. 각 테스트 케이스는 아래와 같이 3개의 자연수로 주어진다.</p>

<pre>총월수 월당일수 주당일수
</pre>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대한 출력은 "Case #x: y" 형태로 이루어져야 한다. x는 1부터 시작되는 케이스 번호이고, y는 달력을 만드는데 필요한 줄 수 이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
3 11 4
12 28 7
10 35 10
','Case #1: 11
Case #2: 48
Case #3: 40
','MATH'),
                                                                                                                (1993,'BAEKJOON','https://www.acmicpc.net/problem/12438',12438,'새로운 달력 (Large)','5초','512 MB',11,'<p>태양계 밖에서 새로 발견된 행성 ELG8-G는 지구와는 다른 자전/공전주기를 가지고 있어서 지구의 달력을 그대로 가져다 쓸 수 없다. 이에 과학자들은 이 행성을 위해 새로운 달력 시스템을 만들기로 하였다. 그동안 지구에서 사용하던 그레고리력은 매달 날짜가 달라 다소 번거로운 점이 있어 이번 새로운 달력 시스템에서는 매달 같은 일수를 포함하도록 하였다. 이렇게 만들어 놓은 달력을 기반으로 매일 관찰한 내용을 기록하기 위해 커다란 달력을 만들기로 하였는데, 1년을 몇 달로 하는지, 1주를 며칠로 하는지에 따라서 달력이 크기가 달라진다는 사실을 알게 되었다. 이에 과학자들의 편의를 위해 기준이 되는 수들을 입력하면 필요로 하는 달력의 줄 수를 출력해 주는 프로그램을 작성하게 되었다.</p>

<p>달력은 다음과 같이 출력된다.</p>

<ul>
	<li>첫 달의 첫날은 첫 번째 열에 위치한다.</li>
	<li>첫 달을 제외한 각 달의 첫날은 이전달의 마지막 날 다음 열에 위치한다.</li>
	<li>서로 다른 달에 속한 날은 같은 줄에 위치하지 않는다.</li>
	<li>달력은 1년치만 출력된다.</li>
</ul>

<p>한 달에 11일이고, 1년에 3달이며, 한 주에 4일이면 다음과 같은 11줄짜리 달력이 만들어진다.</p>

<table class="table table-bordered th-center td-center table-center-30">
	<tbody>
		<tr>
			<th>#0</th>
			<th>#1</th>
			<th>#2</th>
			<th>#3</th>
		</tr>
		<tr>
			<td>1</td>
			<td>2</td>
			<td>3</td>
			<td>4</td>
		</tr>
		<tr>
			<td>5</td>
			<td>6</td>
			<td>7</td>
			<td>8</td>
		</tr>
		<tr>
			<td>9</td>
			<td>10</td>
			<td>11</td>
			<td> </td>
		</tr>
		<tr>
			<td> </td>
			<td> </td>
			<td> </td>
			<td>1</td>
		</tr>
		<tr>
			<td>2</td>
			<td>3</td>
			<td>4</td>
			<td>5</td>
		</tr>
		<tr>
			<td>6</td>
			<td>7</td>
			<td>8</td>
			<td>9</td>
		</tr>
		<tr>
			<td>10</td>
			<td>11</td>
			<td> </td>
			<td> </td>
		</tr>
		<tr>
			<td> </td>
			<td> </td>
			<td>1</td>
			<td>2</td>
		</tr>
		<tr>
			<td>3</td>
			<td>4</td>
			<td>5</td>
			<td>6</td>
		</tr>
		<tr>
			<td>7</td>
			<td>8</td>
			<td>9</td>
			<td>10</td>
		</tr>
		<tr>
			<td>11</td>
			<td> </td>
			<td> </td>
			<td> </td>
		</tr>
	</tbody>
</table>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에는 테스트 케이스의 숫자 <strong>T</strong>가 주어진다. 아래로 T 줄의 입력이 주어지며 각 줄은 하나의 테스트 케이스에 대한 입력이다. 각 테스트 케이스는 아래와 같이 3개의 자연수로 주어진다.</p>

<pre>총월수 월당일수 주당일수
</pre>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대한 출력은 "Case #x: y" 형태로 이루어져야 한다. x는 1부터 시작되는 케이스 번호이고, y는 달력을 만드는데 필요한 줄 수 이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
3 11 4
12 28 7
10 35 10
','Case #1: 11
Case #2: 48
Case #3: 40
','MATH'),
                                                                                                                (2103,'BAEKJOON','https://www.acmicpc.net/problem/12457',12457,'ビット? (Small)','5초','512 MB',8,'<p>f(x) を 「x を 2進?表記した時の "1" の個?を返す??」と定義します。 例えば、5 は 101<sub>2</sub>&nbsp;と 2 進?表記されるので、f(5) = 2 です。</p>

<p>正の整?&nbsp;<strong>N</strong>&nbsp;が?えられるので、 a + b =&nbsp;<strong>N</strong>&nbsp;を?たす 0 以上の整? a, b の組の中で f(a) + f(b) が最大になるものを求め、その時の f(a) + f(b) の値を出力してください。</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>最初の行はテストケ?スの個?&nbsp;<strong>T</strong>&nbsp;を表す正の整?です。 各テストケ?スは1行の文字列で表現され、それぞれの行には&nbsp;<strong>N</strong>&nbsp;を表す正の整?が1つだけ含まれています。</p>

<h3>制約</h3>

<ul>
	<li>1 ≤&nbsp;<strong>T</strong>&nbsp;≤ 1000</li>
	<li><strong>N</strong>&nbsp;≤ 10000</li>
</ul>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>各テストケ?スごとに、</p>

<pre>Case #X: P
</pre>

<p>という?容を1行出力してください。ここで&nbsp;<strong>X</strong>&nbsp;は 1 から始まるテストケ?ス番?、<strong>P</strong>&nbsp;は f(a) + f(b) の最大値です。</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1
4
31
1125899906842624
','Case #1: 1
Case #2: 3
Case #3: 5
Case #4: 51
','MATH'),
                                                                                                                (2104,'BAEKJOON','https://www.acmicpc.net/problem/12458',12458,'ビット? (Large)','5초','512 MB',14,'<p>f(x) を 「x を 2進?表記した時の "1" の個?を返す??」と定義します。 例えば、5 は 101<sub>2</sub>&nbsp;と 2 進?表記されるので、f(5) = 2 です。</p>

<p>正の整?&nbsp;<strong>N</strong>&nbsp;が?えられるので、 a + b =&nbsp;<strong>N</strong>&nbsp;を?たす 0 以上の整? a, b の組の中で f(a) + f(b) が最大になるものを求め、その時の f(a) + f(b) の値を出力してください。</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>最初の行はテストケ?スの個?&nbsp;<strong>T</strong>&nbsp;を表す正の整?です。 各テストケ?スは1行の文字列で表現され、それぞれの行には&nbsp;<strong>N</strong>&nbsp;を表す正の整?が1つだけ含まれています。</p>

<h3>制約</h3>

<ul>
	<li>1 ≤&nbsp;<strong>T</strong>&nbsp;≤ 1000</li>
	<li><strong>N</strong>&nbsp;≤ 10<sup>18</sup>&nbsp;(32bit整?型には?まらないことに注意)</li>
</ul>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>各テストケ?スごとに、</p>

<pre>Case #X: P
</pre>

<p>という?容を1行出力してください。ここで&nbsp;<strong>X</strong>&nbsp;は 1 から始まるテストケ?ス番?、<strong>P</strong>&nbsp;は f(a) + f(b) の最大値です。</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1
4
31
1125899906842624
','Case #1: 1
Case #2: 3
Case #3: 5
Case #4: 51
','MATH'),
                                                                                                                (1994,'BAEKJOON','https://www.acmicpc.net/problem/12515',12515,'챔피언소트 (Small)','5초','512 MB',18,'<p>여기, 특이한 방법으로 정렬을 하려고 하는 사람이 있다.</p>

<p><strong><em>그리고 그의 이름은 존 시나!!!!</em></strong></p>

<p><img alt="CENA.png" src="https://upload.acmicpc.net/0a735ed4-7f4a-4536-8ec0-35ae4611fbf5/-/preview/" style="width: 366.667px; height: 172.5px;"></p>

<p>알고리즘 전문이 아닌 존 시나는 자신만의 방법으로 수를 정렬하려고 한다. 존 시나가 정렬할 배열에는 1부터 N까지의 자연수가 하나씩 들어있다. 우선 존 시나는 배열 안에서 몇 개의 원소를 골라 "You cant see me"라고 발언한다. 그 후 선택한 원소에 동시에 파이브 너클 셔플을 날린다. 그러면 선택한 원소들이 큰 대미지를 입으며 순서가 무작위로 섞이게 된다.</p>

<p>존 시나는 섞을 원소를 선택할 때 최적의 전략을 사용하고자 한다. 즉, 정렬하는 데 필요한 파이브 너클 셔플 횟수의 기댓값을 최소화하려고 한다. (동시에 사용하는 파이브 너클 셔플은 하나로 친다.) 그 기댓값은 얼마일까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트케이스의 개수 T가 주어진다. 각 테스트케이스는 두 줄로 이루어져 있다. 첫 줄에는 배열의 길이 N이 주어진다. 두 번째 줄에는 배열의 원소가 차례대로 주어진다.</p>

<p>1 ≤ T ≤ 100이고, 1 ≤ N ≤ 10이다. 배열에는 1부터 N까지의 자연수가 하나씩 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 줄에 테스트케이스 번호 x와 최소 기댓값 y를 Case #x: y의 형태로 출력한다. y는 반올림하여 소수점 아래 6자리까지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>케이스 #1: 존 시나는 두 원소를 모두 선택하여 파이브 너클 셔플을 날린다. 1/2의 확률로 배열이 정렬되고, 1/2의 확률로 그대로 있으므로 기댓값은 2가 된다.</p>

<p>케이스 #2: 존 시나는 3과 2를 선택하여 파이브 너클 셔플을 날린다. #1과 마찬가지로 기댓값은 2가 된다.</p>

<p>케이스 #3: 존 시나는 2와 1을 선택하여 파이브 너클 셔플을 날린다. #1과 마찬가지로 이때까지의 기댓값은 2가 된다. 그 후 4와 3을 선택하여 파이브 너클 셔플을 날리면 총 기댓값은 4가 된다.</p>

				</div>
				</div>','3
2
2 1
3
1 3 2
4
2 1 4 3
','Case #1: 2.000000
Case #2: 2.000000
Case #3: 4.000000
','MATH'),
                                                                                                                (1995,'BAEKJOON','https://www.acmicpc.net/problem/12516',12516,'챔피언소트 (Large)','5초','512 MB',18,'<p>여기, 특이한 방법으로 정렬을 하려고 하는 사람이 있다.</p>

<p><strong><em>그리고 그의 이름은 존 시나!!!!</em></strong></p>

<p><img alt="CENA.png" src="https://upload.acmicpc.net/0a735ed4-7f4a-4536-8ec0-35ae4611fbf5/-/preview/" style="width: 366.667px; height: 172.5px;"></p>

<p>알고리즘 전문이 아닌 존 시나는 자신만의 방법으로 수를 정렬하려고 한다. 존 시나가 정렬할 배열에는 1부터 N까지의 자연수가 하나씩 들어있다. 우선 존 시나는 배열 안에서 몇 개의 원소를 골라 "You cant see me"라고 발언한다. 그 후 선택한 원소에 동시에 파이브 너클 셔플을 날린다. 그러면 선택한 원소들이 큰 대미지를 입으며 순서가 무작위로 섞이게 된다.</p>

<p>존 시나는 섞을 원소를 선택할 때 최적의 전략을 사용하고자 한다. 즉, 정렬하는 데 필요한 파이브 너클 셔플 횟수의 기댓값을 최소화하려고 한다. (동시에 사용하는 파이브 너클 셔플은 하나로 친다.) 그 기댓값은 얼마일까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트케이스의 개수 T가 주어진다. 각 테스트케이스는 두 줄로 이루어져 있다. 첫 줄에는 배열의 길이 N이 주어진다. 두 번째 줄에는 배열의 원소가 차례대로 주어진다.</p>

<p>1 ≤ T ≤ 100이고, 1 ≤ N ≤ 1000이다. 배열에는 1부터 N까지의 자연수가 하나씩 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 줄에 테스트케이스 번호 x와 최소 기댓값 y를 Case #x: y의 형태로 출력한다. y는 반올림하여 소수점 아래 6자리까지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>케이스 #1: 존 시나는 두 원소를 모두 선택하여 파이브 너클 셔플을 날린다. 1/2의 확률로 배열이 정렬되고, 1/2의 확률로 그대로 있으므로 기댓값은 2가 된다.</p>

<p>케이스 #2: 존 시나는 3과 2를 선택하여 파이브 너클 셔플을 날린다. #1과 마찬가지로 기댓값은 2가 된다.</p>

<p>케이스 #3: 존 시나는 2와 1을 선택하여 파이브 너클 셔플을 날린다. #1과 마찬가지로 이때까지의 기댓값은 2가 된다. 그 후 4와 3을 선택하여 파이브 너클 셔플을 날리면 총 기댓값은 4가 된다.</p>

				</div>
				</div>','3
2
2 1
3
1 3 2
4
2 1 4 3
','Case #1: 2.000000
Case #2: 2.000000
Case #3: 4.000000
','MATH'),
                                                                                                                (1996,'BAEKJOON','https://www.acmicpc.net/problem/12728',12728,'n제곱 계산','5초','512 MB',20,'<p>이 문제에서 숫자 (3 + √5)<sup><strong>n</strong></sup> 에 대한 소수점 앞에 마지막 세 자리를 찾아야합니다. 예를 들어, n = 5 일 때 (3 + √5)<sup>5</sup>&nbsp; = 3935.73982 ... 이므로 답은 935입니다. n = 2 인 경우 (3 + √5)<sup>2</sup>&nbsp;= 27.4164079 … 이므로, 답은 027입니다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 입력 줄은 테스트 케이스의 수 T를 알려줍니다. 각각의 T 테스트 케이스는 행(라인)이 분할되어 주어지며, 각 테스트 케이스는 하나의 양의 정수 n을 알려줍니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 입력 테스트 케이스에 대해 다음과 같은 출력이 필요합니다.</p>

<pre>Case #<strong>X</strong>: <strong>Y</strong></pre>

<p dir="ltr">여기서 X는 테스트 케이스 번호이고, Y는 숫자 (3 + (5)^(0.5))^n 의 마지막 세 정수입니다. 만일 소수점 앞의 숫자(정수)가 세 자리보다 작은 경우 출력에 정확히 세 자리가 포함되도록 앞에 0을 추가하십시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
5
2
','Case #1: 935
Case #2: 027
','MATH'),
                                                                                                                (1997,'BAEKJOON','https://www.acmicpc.net/problem/12740',12740,'돌림판 (Large)','1초','256 MB',20,'<p>지훈이는 경품 이벤트를 진행하기 위해서 원형판이 N등분 되어 있고, 각 N등분된 곳에 빨간색 또는 초록색 또는 파란색이 색칠되어 있는 돌림판을 준비하였다. 이 이벤트의 룰은 간단하다. 이벤트 참가자들은 빨간색, 초록색, 파란색 중 하나의 색을 선택한다. 만약 돌림판을 돌렸을 때, 스피너가 있는 칸의 색깔과 선택한 색깔이 일치한 모든 사람에게 상품을 제공한다. 원형판은 N등분 되어 있기 때문에, N개의 부분 중에서 빨간색이 색칠된 것이 a개, 초록색이 색칠된 것이 b개, 파란색이 색칠된 것이 c개라면, 각각의 색이 걸릴 확률은 각각 a/N, b/N, c/N이 된다. 즉, 이론적으로 돌림판의 각 부분에 어떠한 색이 칠해졌는지 모른다면, 각각의 색이 걸릴 확률은 모두 동일할 것이다.</p>

<p>지훈이는 참가자들이 어떠한 색을 선택했는지 조사해 보았는데, 세가지 색 중에서 특정색을 유난히 많이 선택했음을 알게 되었다. 그래서 그 이유를 찾아봤더니, 어떤 사람이 돌림판을 발견하고, 돌림판에서 가장 많이 색칠된 색을 친분이 있는 몇몇 참가자에게 알려줬다는 사실이 드러났다! 그래서 지훈이는 돌림판의 색들을 모두 바꾸고자 한다. 지훈이가 돌림판의 색을 바꾸는 과정은 다음과 같다: (돌림판의 각 부분의 색은 동시에 바뀐다)</p>

<p>만약 P를 돌림판의 어떤 임의의 부분이라고 하자.</p>

<ol>
	<li>만약 P의 왼쪽 부분과 P의 오른쪽 부분과 P에 칠해진 색이 모두 같거나, 모두 다르다면, P에 칠해진 색을 파란색으로 바꾼다.</li>
	<li>그렇지 않다면, 1에서 고려했던 세 부분 중에서 X 색이 2개, Y 색이 1개 칠해진 상황일 것이다.</li>
	<li>다음 조건을 한 가지라도 만족한다면, P에 칠해진 색을 빨강색으로 바꾼다. 그렇지 않다면, 초록색으로 바꾼다.</li>
</ol>

<p>(X가 빨강색이고 Y가 초록색인 경우, X가 초록색이고 Y가 파랑색인 경우, X가 파랑색이고 Y가 빨강색인 경우)</p>

<p>지훈이는 이렇게 돌림판의 색을 1번 바꾸었다. 그래도 불안했던 지훈이는 같은 방법으로 색을 K-1번 더 바꾸었다. 그렇다면, 이제 돌림판에는 어떠한 색이 몇 개의 조각에 칠해졌는지 구하고 싶다. 지훈이를 도와 이 문제를 해결해주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 K가 주어진다.</p>

<p>두 번째 줄에 길이가 N인 문자열이 주어지는데, 이는 돌림판의 각 구간에 칠해진 색을 시계방향으로 나타낸 것이다. (빨강색은 R, 초록색은 G, 파랑색은 B로 주어진다)</p>

<p>N, K의 제한은 다음과 같다.</p>

<p>1 ≤ N ≤ 100000, 1 ≤ K ≤ 10<sup>9</sup></p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>빨강색으로 칠해진 구간의 수, 초록색으로 칠해진 구간의 수, 파랑색으로 칠해진 구간의 수를 차례대로 띄어쓰기로 구분해 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 5
RGB
','0 0 3
','MATH'),
                                                                                                                (1998,'BAEKJOON','https://www.acmicpc.net/problem/12748',12748,'색칠 공부 (Large)','3초','512 MB',25,'<p>종원이는 정n각형의 꼭짓점을 k개의 색으로 칠하려고 한다.&nbsp;이때 정다각형을 돌려서 같은 경우나, 뒤집어서 같은 경우, 또는 임의의 다른 두 색 X, Y를 선택해 X색의 점들을 모두 Y색으로 바꾸고 Y색의 점들을 모두 X색으로 바꾸는 과정을 유한 번 반복해서 (X색의 점들이나 Y색의 점들이 없었을 수 있음) 돌리거나 뒤집을 때 같은 모양이 되는 경우를 모두 같은 한 가지의 경우로 생각한다.</p>

<p>숙제를 새벽까지 하느라 머리가 복잡해진 종원이는 안타깝게도 이 문제를 풀지 못하였다. 그래서 종원이는 여러분들에게 도움을 요청하였다. 종원이를 도와주기 위해 정n각형의 꼭짓점을 k개의 색으로 칠하는 서로 다른 경우의 수를 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 n, k가 주어진다.</p>

<p>n, k의 제한은 다음과 같다.</p>

<p>1 ≤ n ≤ 10<sup>9</sup> , 1 ≤ k ≤ 25</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>조건을 만족시키면서, 정n각형의 꼭짓점을 k개의 색으로 칠하는 서로 다른 경우의 수를 1,000,000,007로 나눈 나머지를&nbsp;구하여라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 2
','8
','MATH'),
                                                                                                                (1999,'BAEKJOON','https://www.acmicpc.net/problem/12755',12755,'수면 장애','1초','128 MB',7,'<p>수면 장애를 가진 강민이는 잠이 오지 않아 적잖은 고통을 느끼고 있다.&nbsp;강민이는 잠이 오지 않을 때마다 속으로 양을 세고 있었는데, 오늘따라 백만 마리까지 세었는데도 잠이 오지 않았다.</p>

<p>한계를 느낀 강민이는 새로운 방법으로 수를 세기로 했다.</p>

<p>1부터 숫자를 쭉 이어 붙이면 다음과 같은 숫자열이 생성된다.</p>

<p>12345678910111213...</p>

<p>강민이는 이 숫자열을 한 숫자씩 떼어서 읽기 시작했다.&nbsp;수면에 성공한 강민이는 다음날 일어나자마자 "\(N\)번째 숫자까지 읽었어!" 라고 기분 좋게 외쳤다.</p>

<p>과연 \(N\)번째 숫자는 무엇일까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 \(N\)번째 숫자를 나타내는 \(N\)이 주어진다. \((1 \le N \le 100,000,000)\)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 \(N\)번째 숫자에 해당하는 0~9 중 한 숫자를 출력하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','15
','2
','MATH'),
                                                                                                                (2000,'BAEKJOON','https://www.acmicpc.net/problem/12756',12756,'고급 여관','1초','128 MB',3,'<p>"럭키스톤"은 카드를 통해 대결하는 게임이다. 창식이는 럭키스톤을 자주 한다.</p>

<p>이 게임의 카드에는 공격력과 생명력이 표시되어있다. 왼쪽에는 공격력이, 오른쪽에는 생명력이 숫자로 적혀있다.</p>

<p>서로 꺼낸 카드를 비교하여 남길 카드를 결정하는 데, 카드의 비교는 다음과 같이 이루어진다.</p>

<ul>
	<li><em>비교하는 카드의 공격력만큼 동시에 서로 상대 카드의 생명력을 깎는다</em><em>. 줄어든 생명력은 다시 회복되지 않는다.</em></li>
	<li><em>생명력이 0 이하인 경우에는 카드는 죽은 상태로 전환된다.</em></li>
	<li><em>카드가 두 장 모두 남아있다면 비교를 계속한다.</em></li>
</ul>

<p>요즘 따라 게임이 안 풀리는 창식이는 대전 전에 가능한 수를 미리 계산하여 최대한 이득을 챙기고 싶어 한다.</p>

<p>카드 2개의 공격력과 생명력이 주어지면 어떤 플레이어의 카드가 남아있을지 출력하는 프로그램을 작성해주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 플레이어 A가 꺼낸 카드의 공격력과 생명력이 주어진다.</p>

<p>둘째 줄에 플레이어 B가 꺼낸 카드의 공격력과 생명력이 주어진다.</p>

<p>카드의 공격력과 생명력은 100,000 이하의 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>플레이어 A의 카드가 남아있다면 "PLAYER A"를, 플레이어 B의 카드가 남아있다면 "PLAYER B"를 출력한다.</p>

<p>모두 죽은 상태라면 "DRAW"를 따옴표 없이 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 12
5 5
','PLAYER A
','MATH'),
                                                                                                                (2001,'BAEKJOON','https://www.acmicpc.net/problem/12758',12758,'천상용섬','2초','128 MB',15,'<p>시대를 초월하는 검객 승균이는 자신의 문파 알프스검류를 단련하기 위해 신기술 천상용섬을 연마했다.</p>

<p>천상용섬은 눈앞의 \(N\)개의 물체를 베는 기술로써, 벨 때마다 베는 높이가 줄어들지 않고 유지되거나 증가한다.</p>

<p>천상용섬의 대단한 점은 물체를 베는 높이로 물체의 높이를 나누었을 때 항상 자연수로 나누어떨어진다는 점이다.</p>

<p>예를 들어 눈앞에 3개의 물체가 각각 2, 4, 6의 높이로 존재한다고 하자. 천상용섬은 이때 이 물체를 각각 높이 1, 2, 3 에서 벨 수 있다.</p>

<p>2는 1로, 4는 2로, 6은 3으로 나누어떨어지며, 높이가 줄어들지 않기 때문이다. 같은 이유로 1, 1, 1도 가능하다.</p>

<p>또한, 정확도를 자랑하기 위해 2, 4, 6의 높이를 베기도 한다. 즉, 물체의 높이만큼도 벨 수 있다. 단, 높이 0은 벨 수 없다.</p>

<p>승균이는 자신의 신기술 천상용섬이 어느 정도의 가능성을 품고 있는지 판단하기 위해 N개의 물체를 벨 수 있는 모든 경우의 수를 구하고자 한다. 위 예시의 경우 모두 12가지의 경우의 수가 존재한다.</p>

<p>그러나 승균이는 숫자를 배우지 못했기 때문에 이를 계산할 수 없다. 우리가 대신 경우의 수를 구해주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 테스트케이스로 이루어져 있다.</p>

<p>첫째 줄에는 테스트케이스 개수를 나타내는 \(T\)가 주어진다. \((1 \le T \le 30)\)</p>

<p>각 테스트케이스의 첫째 줄에 물체의 개수를 나타내는 \(N\)이 주어진다. \((1 \le N \le 300)\)</p>

<p>둘째 줄에 띄어쓰기를 간격으로 \(N\)개의 물체의 높이 \(H_i(1 \le&nbsp;i \le N)\)가 주어진다. \((1 \le H_i \le 1,000,000)\)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>테스트케이스마다 승균이가 벨 수 있는 모든 경우의 수를 출력한다. 출력은 개행으로 구분되어야 한다.&nbsp;정답이 커질 수 있으니 \(1,000,000,007\)로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
3
2 4 6
2
2 3
','12
3
','MATH'),
                                                                                                                (2002,'BAEKJOON','https://www.acmicpc.net/problem/12769',12769,'영원한 젊음','1초','512 MB',20,'<p>내 생일이 다가오고 있다. 아아, 나는 늙어가면서 다시 젊어지고 싶었다. 운 좋게도, 나는 어려지는 듯한 기분이 드는 완벽한 방법을 찾았다: 적당한 밑 b를 정해 나이를 적는다면 더 작아 보일 수 있다. 예를 들어, 내 나이가 10진수로 32라면, 16진수로 적는다면 20밖에 되지 않는다!</p>

<p>그러나, 이 방법은 밑을 아무거나 정해서는 할 수 없다. 만약 나이가 0에서 9가 아닌 다른 숫자를 가진다면, 내가 속임수를 쓴다는 것이 명백해지고, 목적을 잃게된다.</p>

<p>추가적으로, 만약 내 나이가 너무 작은 수로 적혀진다면, 그것 또한 명백하게 속임수라는 것이 보일 것이다. 나이 y와 나이가 적어보이고 싶은 하한 l이 주어지면, y를 b진수로 적었을 때 오직 숫자만 포함하고, 이 b진수를 10진수로 읽었을 때 l보다 크거나 같은&nbsp;최대의 b를 찾아라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 10진수의 두 정수 y (10 ≤ y ≤ 10<sup>18</sup> ?네, 많이 늙었습니다)와 l(10 ≤ ℓ ≤ y)로 이루어진 한 줄로 구성된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>위에서 설명한 최대의 b를 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','32 20
','16
','MATH'),
                                                                                                                (2003,'BAEKJOON','https://www.acmicpc.net/problem/12779',12779,'상품 is 뭔들','1초','128 MB',8,'<p>&nbsp;정보통신처에서는 2016년 6월 4일 인하 광장에서 이벤트를 진행하려고 한다. 정보통신처에서 인하 광장에 올린 게시글에 <em>N</em>번째로 댓글을 단 모든 학생에게 상품을 지급하기로 하였다. 단, <em>N</em>은 약수의 개수가 홀수여야 한다.</p>

<p>인하 광장을 즐겨보는 찬미는 이 이벤트에 참가하기로 하였다. 찬미는 댓글을 작성한 후 자신이 상품을 받을 확률이 얼마나 되는지 궁금해졌다. 찬미가 댓글을 작성하기 전의 총 댓글 수가 <em>a</em>개이고, 댓글을 작성 후의 총 댓글 수가 <em>b</em>개일 때 찬미의 댓글은 <em>a</em>보다 크고 <em>b</em>보다 작거나 같은 범위 안에 존재한다고 한다. 예를 들어 <em>a</em>가 1이고, <em>b</em>가 4인 경우 [2, 3, 4] 중 한 곳에 댓글이 존재한다. 이 중 약수의 개수가 홀수인 숫자는 4, 한 개이므로 상품을 받을 확률은 1/3이다.</p>

<p>찬미를 도와 찬미가 상품을 받을 확률을 구하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에는 정수 <em>a</em>와 <em>b</em>가 주어진다. (0 ≤ <em>a&nbsp;</em><&nbsp;<em>b</em> ≤ 2<sup>60</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>찬미가 상품을 지급받을 확률을 기약분수 형태로 출력한다. 만약 확률이 0인 경우 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 4
','1/3
','MATH'),
                                                                                                                (2004,'BAEKJOON','https://www.acmicpc.net/problem/12783',12783,'곱셈 게임','1초','128 MB',14,'<p>주어진 숫자 카드와 사칙연산, 괄호 등을 조합하여 원하는 값을 만드는 게임이 있다. 이 게임을 좋아하는 ‘진’은 이번 IT공과대학 MT에서 이 게임을 하려고 카드를 챙겼다. 그러나 실수로 카드셋을 다 챙기지 못 했다. 연산자 카드는 오직 곱하기 카드만 챙기고, 숫자카드는 0에서 9까지 카드 중 <em>N</em>개의 종류의 카드만 챙겼다. 그래서 진은 게임의 종류를 곱셈 게임으로 변경하기로 하였다.&nbsp;</p>

<p>곱셈 게임은 정해진 숫자를 주어진 숫자카드와 곱셈카드를 조합하여 만드는 게임이다. 이 게임은 곱셈카드의 개수를 가장 적게 사용하는 팀이 승리하게 된다. 가져온 숫자카드의 종류가 주어졌을 때, 곱셈카드를 가장 적게 사용하여 게임을 승리할 수 있도록 하자. 카드는 각 종류별로 충분히 많이 가져와 부족한 경우는 없다.&nbsp;</p>

<p>예를 들어, 가져온 숫자카드의 종류가 2,3,6 일 때, 64는 32 x 2 로 곱하기 1개를 사용하여 만들 수 있고 이는 곱셈카드를 가장 적게 사용한 것이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에는 테스트 케이스의 개수 <em>T</em>(1 ≤ <em>T</em> ≤ 50)가 주어진다.</p>

<p>각 테스트 케이스의 첫 번째 줄에는 숫자 카드의 종류의 개수 <em>N</em>(1 ≤ <em>N</em> ≤ 10)과 <em>N</em>개의 숫자 카드의 종류가 공백을 구분으로 주어진다.</p>

<p>각 테스트 케이스의 두 번째 줄에는 질의의 수 <em>M</em>(1 ≤ <em>M</em> ≤ 20)이 주어진다.</p>

<p>다음 <em>M</em>개의 줄에는 만들고자 하는 자연수 <em>K</em>가 주어진다.(<em>K</em> ≤ 1,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 질의마다 곱셈카드의 최소의 개수를 출력한다. 수를 만들 수 없는 경우에는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
3 2 3 6
3
64
5
7
4 1 2 3 4
2
31
16
','1
-1
-1
0
1
','MATH'),
                                                                                                                (2005,'BAEKJOON','https://www.acmicpc.net/problem/12785',12785,'토쟁이의 등굣길','1초','128 MB',10,'<p>인하대학교에 다니는 토쟁이는 y축과 평행한 <em>w</em>개의 도로, x축과 평행한 <em>h</em>개의 도로가 있는 도시에 살고 있다. 토쟁이의 집은 이 도시의 맨 왼쪽 아래에 위치하며 좌표로는 (1, 1)로 표시할 수 있다. 매일 아침 토쟁이는 등교를 하며, 등굣길에 토스트 가게에 들러 토스트를 사 먹는다. 이때 학교의 위치는 토쟁이의 집 반대쪽 맨 오른쪽 위에 위치하며 좌표로는 (<em>w</em>, <em>h</em>)로 표시할 수 있다. 토쟁이는 늦장 부리는 것을 좋아하여 수업 시작 시간에 맞게 도착하게끔 출발한다. 따라서 토스트 가게를 거쳐 학교로 가는 경로는 항상 최소의 시간이 걸려야 한다. (토쟁이는 토스트를 매우 빠르게 먹어 0초 만에 먹으며, 토스트 가게 아주머니 역시 토스트 장인이기 때문에 0초 만에 토스트를 만든다고 가정한다) 이때, 토쟁이가 토스트를 먹고 학교에 늦지 않게 도착할 수 있는 경로는 몇 가지일까??</p>

<p>예를 들면, y축과 평행한 도로가 3개 있으며, x축과 평행한 &nbsp;도로가 2개 있다고 했을 때, 도시는 아래의 그림과 같이 그려진다.</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/12785/1.png" style="height:133px; width:177px"></p>

<p>이때, 토스트 가게가 (2,2)에 위치하면, 토쟁이의 집은 (1,1)에 위치하고, 학교는 (3,2)에 위치하므로, 이때 경로들은</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/12785/2.png" style="height:158px; width:363px"></p>

<p>위와 같이 2가지이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫째 줄에 도시의 y축과 평행한 도로의 개수 <em>w</em>와 x축과 평행한 도로의 개수 <em>h</em>가 주어진다. (2 ≤ <em>w</em>, <em>h</em> ≤ 200)</p>

<p>둘째 줄에는 토스트 가게의 (<em>x</em>, <em>y</em>)좌표가 주어진다. (1 ≤ <em>x</em> ≤ <em>w</em>,1 ≤ <em>y</em> ≤ <em>h</em>) <em>x</em>, <em>y</em>는 항상 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 토쟁이가 학교에 늦지 않게 도착할 수 있는 등굣길의 개수를 1,000,007로 나눈 나머지 값을 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 2
2 2
','2
','MATH'),
                                                                                                                (2136,'BAEKJOON','https://www.acmicpc.net/problem/12792',12792,'주작 주 주작','1초','256 MB',10,'<p>곧 다가올 학교 축제를 위해, 쿠사과는 참가비를 내고 여러 사람이 동시에 즐길 수 있는 게임을 만들었다. 이 게임의 알파이자 오메가는 추첨기이다. 이 추첨기는 1번부터 <em>N</em>번까지 둥글게 구멍이 위 아래로 하나씩 나 있고, 추첨기 윗편 구멍에 구슬을 넣으면 안에서 정해진 통로에 따라 복잡하게 움직이다가 아래 구멍 중 하나로 떨어지게 된다.</p>

<p>게임은 간단하다. <em>N</em>명이 동시에 모여 추첨기에서 1부터 <em>N</em>이 적힌 자리에 각각 한 명씩 선 뒤, 쿠사과가 1번 사람부터 <em>N</em>번 사람까지 차례로 돌아가면서 구슬을 하나씩 넣고, 어느 위치에 떨어지는지 본다. 만약 어떤 사람이 자신의 위치에서 넣은 구슬이 그대로 자신이 선 위치의 아래 구멍으로 나오게 되면 아무 일도 일어나지 않지만, 다른 자리에 떨어지면 그 사람은 경품을 얻게 된다. 단 모든 사람이 경품을 받는 경우, 즉 모든 사람이 자신이 선 위치와 다른 곳으로 구슬이 떨어지면 이 판은 잭팟이 되어 모두가 경품을 받지 못한다.</p>

<p>추첨기의 내부 동작에 대해 전혀 알 수 없는 사람들이 생각하기에는 그냥 웬만하면 경품을 얻는 꿀같은 게임이라고 생각하겠지만, 쿠사과의 생각은 조금 달랐다. 언듯 보기에는 구슬이 랜덤하게 떨어져 내려오는 것 같았지만 실제로는 사전에 정해진 결과대로 내려오기 때문이었다.</p>

<p>또한 추첨기를 처음 한 개 만드는 건 매우 어려웠지만 복제하는 것은 매우 간단했기 때문에, 추첨기에 똑같은 추첨기를 다시 연결하는 식으로 하면 겉에서 보기에는 하나의 추첨기이고 또 더 화려하게 움직이지만 내부적으로는 조작된 추첨기를 얻을 수 있다.</p>

<p>예를 들어 1 → 2, 2 → 1, 3 → 4, 4 → 3으로 구성된 추첨기가 있다면, 이건 이미 쿠사과가 무조건 이득을 보는 좋은 기계이다. 이 기계를 두 개 연결하게 되면 1 → 1, 2 → 2, 3 → 3, 4 → 4가 되어 아무런 일도 일어나지 않지만, 다시 한 개 더 연결하게 되면 처음처럼 쿠사과가 무조건 이득을 보는 좋은 기계가 된다.</p>

<p>이렇게 게임을 진행하면, 1번 사람부터 점점 다른 위치로 나와서 모두가 신나하다가, 점점 모두가 다른 위치로 나오는 것에 경악하게 될 것이다. 그리고 N번 사람의 구슬이 마지막 추첨기 밖으로 나오는 순간, 쿠사과는 "아이쿠 그런데 그것이 실제로 일어났습니다" 라고 말하며 즐거워할 생각에 가득차 있다.</p>

<p>쿠사과는 가급적이면 2개 이상의 추첨기를 서로 연결해 게임의 박진감을 불러일으키고자 한다. 추첨기가 주어질 때, 쿠사과가 이득을 보는 결과를 얻으려면 몇 개의 추첨기를 연결해야 할까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에는 정수 <em>N</em> (1 ≤ <em>N</em>&nbsp;≤&nbsp;1000000) 이 주어진다. &nbsp;다음 줄에는 <em>N</em>개의 정수 <em>J<sub>i</sub></em>가 공백으로 구분되어 주어지며, 각 정수는 1에서 <em>N</em> 사이이며 끝을 포함한다. 이는 <em>i</em>번 자리에 선 사람이 얻게 되는 결과 정수를 뜻한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>추첨기를 몇 개 연속으로 연결하면 쿠사과가 이득을 보는 결과를 얻을 수 있는지 출력한다. 이 값은 2 이상 2 ×&nbsp;10<sup>9</sup> 이하여야 하지만, 조작된 결과를 얻을 수만 있다면 어떤 값이든 상관없다. 만약 주어진 범위 안에서 조작할 방법이 없다면 -1을 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 2 3
','-1
','MATH'),
                                                                                                                (2137,'BAEKJOON','https://www.acmicpc.net/problem/12796',12796,'나의 행렬곱셈 답사기','1초','128 MB',11,'<p>계산은 사람에게나 컴퓨터에게나 상당히 번거로운 일인 것 같다. 특히 \(n\)개의 행렬 \(\textbf{M}_{1}, \textbf{M}_{2}, \cdots, \textbf{M}_{n}\)의 곱, 즉 \(\textbf{M}_{1} \textbf{M}_{2} \cdots \textbf{M}_{n}\)같은 것은 정말이지 계산하기 귀찮다.</p>

<p>행렬과 그 곱셈이 익숙하지 않은 사람들을 위해 설명을 해 보자면, 먼저 행렬은 여러 수나 기호, 문자, 수식 같은 것을 직사각형 모양으로 적절히 배열한 후 이를 괄호로 묶은 것을 말한다. 편의상 이 문제에서는 행렬에 정수만 배열한다고 가정한다. 예를 들어 아래와 같은 것이 행렬의 한 예이다.</p>

<p>\[\begin{pmatrix} 2 &amp; 0 &amp; 1 &amp; 6 \\ 0 &amp; 5 &amp; 2 &amp; 8 \\ 1 &amp; 4 &amp; -1 &amp; 7 \end{pmatrix}\]</p>

<p>행렬에 배열된 수를 <em>성분</em>이라고 한다. 행렬의 가로줄은 <em>행</em>이라고 부르며, 위에서부터 차례로 제1행, 제2행, 제3행, … 식으로 이름을 붙인다. 또한 행렬의 세로줄은 <em>열</em>이라고 부르며, 왼쪽에서부터 차례로 제1열, 제2열, 제3열, … 식으로 이름을 붙인다. \(m\)개의 행과 \(n\)개의 열로 이루어진 행렬은 <strong>\(m \times n\) 행렬</strong>이라고 한다. 마지막으로 제\(i\)행 제\(j\)열에 위치한 성분을 행렬의 \((i, j)\) 성분이라고 하며, 어떤 행렬 \(\textbf{A}\)의 \((i, j)\) 성분을 \(A_{ij}\)와 같이 표기한다고 한다.</p>

<p style="text-align:center"><img alt="ㅎㅎ" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/12796/pic1.jpeg" style="height: 135.833px; width: 335px;" title=""></p>

<p>그러면 행렬을 어떻게 곱한다는 것일까? 실수에서의 곱셈과 같이, 행렬의 곱셈도 두 개의 행렬을 가지고 할 수 있다. \(\textbf{A}\)가 \(m \times n\) 행렬이고, \(\textbf{B}\)가 \(n \times p\) 행렬일 때, \(\textbf{A}\)와 \(\textbf{B}\)의 곱 \(\textbf{AB}\)는 아래와 같은 \(m \times p\) 행렬로 정의된다고 한다.</p>

<p>\[\mathbf{AB} = \begin{pmatrix} \sum_{k=1}^n A_{1k}B_{k1} &amp; \sum_{k=1}^n A_{1k}B_{k2} &amp; \cdots &amp; \sum_{k=1}^n A_{1k}B_{kp} \\ \sum_{k=1}^n A_{2k}B_{k1} &amp; \sum_{k=1}^n A_{2k}B_{k1} &amp; \cdots &amp; \sum_{k=1}^n A_{2k}B_{kp} \\ \vdots &amp; \vdots &amp; &amp; \vdots \\ \sum_{k=1}^n A_{mk}B_{k1} &amp; \sum_{k=1}^n A_{mk}B_{kp} &amp; \cdots &amp; \sum_{k=1}^n A_{mk}B_{kp} \end{pmatrix}\]</p>

<p>\(\mathbf{AB}\)의 각 성분을 계산하기 위해 \(n\)회의 정수 곱셈이 필요하고, \(\mathbf{AB}\)이 \(m \times p\) 행렬이므로, 모든 성분을 계산하기 위해 총 \((m \times p) \times n = m \times n \times p\)회의 정수 곱셈이 필요함을 알 수 있다.</p>

<p>\(\textbf{A}\)의 열의 수와 \(\textbf{B}\)의 행의 수가 같을 때에만 행렬의 곱셈이 정의된다. 예를 들어 \(3 \times 2\) 행렬과 \(4 \times 5\) 행렬을 곱할 수는 없다는 것이다.</p>

<p>그렇다면 우리가 처음 생각했던 행렬 \(n\)개의 곱은 어떨까? 실수에서 곱셈을 할 때 곱셈의 여러 성질들을 활용하듯이, 행렬을 곱할 때에도 이러한 곱셈의 성질을 활용할 수 있다.</p>

<p>일반적으로 행렬의 곱셈은 교환법칙이 성립하지 않지만, 결합법칙은 성립하는 것으로 알려져 있다. 다시 말해, \(m \times n\) 행렬 \(\textbf{A}\), \(n \times p\) 행렬 \(\textbf{B}\), \(p \times q\) 행렬 \(\textbf{C}\)에 대해 일반적으로</p>

<ul>
	<li>\(\textbf{AB} \neq \textbf{BA}\)</li>
	<li>\(\textbf{ABC} = (\textbf{AB})\textbf{C} = \textbf{A} (\textbf{B}\textbf{C})\)</li>
</ul>

<p>임이 알려져 있다는 것이다. 즉 행렬 여러 개를 곱할 때 행렬이 나열된 순서를 바꿀 수는 없지만, 곱하는 순서는 상관이 없음을 알 수 있다. 그런데 행렬을 곱하는 순서를 바꾼다고 실제로 정수 곱셈의 수가 바뀔까? 실제 예시를 통해 이를 확인해보자.</p>

<p>\(\textbf{A}\)가 \(2 \times 4\) 행렬이고, \(\textbf{B}\)가 \(4 \times 3\) 행렬, \(\textbf{C}\)가 \(3 \times 5\) 행렬이라고 하자. 행렬의 곱 \(\textbf{ABC}\)를 계산하기 위해 필요한 정수 곱셈의 수를 분석해 보면 아래와 같다.</p>

<ul>
	<li>\((\textbf{A}\textbf{B})\textbf{C}\)와 같이 계산한다면
	<ul>
		<li>\(2 \times 4\) 행렬 \(\textbf{A}\)와 \(4 \times 3\) 행렬 \(\textbf{B}\)를 곱할 때 \(2 \times 4 \times 3 = 24\)회의 정수 곱셈이 필요하며, 그 결과 \(2 \times 3\) 행렬이 만들어진다.</li>
		<li>\(2 \times 3\) 행렬 \(\textbf{A}\textbf{B}\)와 \(3 \times 5\) 행렬 \(\textbf{C}\)를 곱할 때 \(2 \times 3 \times 5 = 30\)회의 정수 곱셈이 필요하며, 그 결과 \(2 \times 5\) 행렬이 만들어진다.</li>
		<li>따라서 총 \(24 + 30 = 54\)회의 정수 곱셈이 필요함을 알 수 있다.</li>
	</ul>
	</li>
	<li>\(\textbf{A}(\textbf{B}\textbf{C})\)와 같이 계산한다면
	<ul>
		<li>\(4 \times 3\) 행렬 \(\textbf{B}\)와 \(3 \times 5\) 행렬 \(\textbf{C}\)를 곱할 때 \(4 \times 3 \times 5 = 60\)회의 정수 곱셈이 필요하며, 그 결과 \(4 \times 5\) 행렬이 만들어진다.</li>
		<li>\(2 \times 4\) 행렬 \(\textbf{A}\)와 \(4 \times 5\) 행렬 \(\textbf{B}\textbf{C}\)를 곱할 때 \(2 \times 4 \times 5 = 40\)회의 정수 곱셈이 필요하며, 그 결과 \(2 \times 5\) 행렬이 만들어진다.</li>
		<li>따라서 총 \(60 + 40 = 100\)회의 정수 곱셈이 필요함을 알 수 있다.</li>
	</ul>
	</li>
</ul>

<p>3개의 행렬을 곱할 때에도 행렬을 곱하는 순서에 따라 정수 곱셈의 횟수가 달라질 수 있으니, \(n\)개의 행렬을 곱할 때 역시 마찬가지임을 쉽게 짐작할 수 있을 것이다. 행렬의 수가 많아지면 많아질수록 행렬을 곱하는 방법의 수는 다양하게 존재한다. 예를 들어 \(n = 4\)일 때, &nbsp;4개의 행렬 \(\textbf{M}_{1}, \textbf{M}_{2}, \textbf{M}_{3}, \textbf{M}_{4}\)을 곱하는 방법에는 아래 5가지가 있다.</p>

<ul>
	<li>\(\big((\textbf{M}_{1}\textbf{M}_{2})\textbf{M}_{3}\big)\textbf{M}_{4}\)</li>
	<li>\(\big(\textbf{M}_{1}(\textbf{M}_{2}\textbf{M}_{3})\big)\textbf{M}_{4}\)</li>
	<li>\((\textbf{M}_{1}\textbf{M}_{2})(\textbf{M}_{3}\textbf{M}_{4})\)</li>
	<li>\(\textbf{M}_{1}\big((\textbf{M}_{2}\textbf{M}_{3})\textbf{M}_{4}\big)\)</li>
	<li>\(\textbf{M}_{1}\big(\textbf{M}_{2}(\textbf{M}_{3}\textbf{M}_{4})\big)\)</li>
</ul>

<p>이렇게 많은 방법들 가운데 어떤 것을 택하더라도 그 결과가 같으므로, 이 방법들 가운데 필요한 정수 곱셈의 수가 가장 적은 것을 택하면 행렬을 곱하는 데 필요한 시간이 최소화될 것이다.</p>

<p>계산을 좋아하는 승현이는 최근 이와 같은 \(n\)개의 행렬의 곱에 대해 배웠는데, 보통 사람은 이해할 수 없는 일이지만 몇몇 예제를 계산해 보더니 곱셈의 매력에 푹 빠지고 말았다. 성분끼리 곱한 것을 모두 더하는 것이 참 아름답다고 하는데, 이해하긴 어렵지만 일단 그렇다고 하자.</p>

<p>승현이가 정수 곱셈을 하는 데에는 0의 시간이 걸리기 때문에, 승현이는 행렬을 곱할 때 필요한 정수 곱셈 횟수를 굳이 최소화할 필요가 있을까? 하는 생각을 하게 되었다. 승현이는 이러한 의문을 품고 선생님께 질문을 하였고, 이에 선생님은 최악의 정수 곱셈 횟수와 최적의 정수 곱셈 횟수 사이의 차가 상당히 커지는 경우가 있기 때문에, 정수 곱셈에 상당한 시간이 걸리는 일반인들에게는 곱셈 횟수를 최소화하는 것이 중요하다고 대답해 주셨다. "최악/최적의 정수 곱셈 횟수"라는 것은 행렬을 곱하는 모든 방법들 가운데 필요한 정수 곱셈 횟수가 가장 많은/적은 방법의 정수 곱셈 횟수를 의미한다.</p>

<p>일반인들의 심정에 전혀 공감할 수 없었던 승현이는 질문을 이어나갔고, 승현이의 질문 공세에 지친 선생님은 결국 모든 자연수 \(K\)에 대해, 행렬을 곱하기 위해 필요한 최악의 정수 곱셈 횟수와 최적의 정수 곱셈 횟수의 차이가 정확히 \(K\)가 되는 어떤 행렬들 \(\textbf{M}_{1}, \textbf{M}_{2}, \cdots, \textbf{M}_{n}\)이 항상 존재한다고 대답해 주셨다.</p>

<p>충격을 받은 승현이는 당신에게 혹시 임의의 \(K\)를 줄 때 그런 행렬들을 아무 것이나 하나 찾아줄 수 있는지 부탁해왔다. &nbsp;최악의 곱셈 횟수와 최적의 곱셈 횟수의 차가 \(K\)인 어떤 행렬들을 찾아내는 프로그램을 작성하자.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 정수 <em>K</em> (1 ≤ <em>K</em> ≤ 10<sup>9</sup>)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 줄에 <em>K</em>를 만족시킬 수 있는 데이터의 행렬 개수 정수 <em>N</em>(1 ≤&nbsp;<em>N</em> ≤ 100)을 출력한다. 둘째 줄에는 해당 행렬의 정보를 (<em>N</em>+1)개의 정수 <em>a<sub>0</sub></em>, <em>a<sub>1</sub></em>, .., <em>a<sub>n</sub></em>로 나타내어 출력한다. 행렬의 크기는 <em>a<sub>0</sub></em> x <em>a<sub>1</sub></em>, <em>a<sub>1</sub></em> x <em>a<sub>2</sub></em>, .., <em>a<sub>n-1</sub></em>&nbsp;x <em>a<sub>n</sub></em> 이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','20
','3
3 2 4 2
','MATH'),
                                                                                                                (2135,'BAEKJOON','https://www.acmicpc.net/problem/12797',12797,'연금술','1초','128 MB',21,'<p>cubelover가 세상에서 가장 위대한 연금술사라는 것은 잘 알려진 사실입니다. 그는 다음과 같은 과정을 통해 재료를 조합합니다.</p>

<ol>
	<li>가마에 슬라임의 체액을 가득 채우고 불로 가열합니다.</li>
	<li>재료를 하나 넣고 시계방향으로 4번, 반시계방향으로 2번 천천히 저어줍니다.</li>
	<li>동쪽을 향해 기도를 올립니다.</li>
	<li>2와 3을 재료를 다 넣을 때까지 반복합니다.</li>
	<li>불을 끄고 17시간동안 식혀 완성합니다.</li>
</ol>

<p>놀랍게도, cubelover의 가마로 만든 완성품은 재료를 넣는 순서와 상관이 없습니다. 하지만 넣는 재료가 다르면 항상 다른 완성품이 나옵니다. 또한 cubelover는 오랜 기간의 경험을 통해서, 완성품의 품질은 넣은 재료의 품질을 모두 곱한 것과 같다는 것을 발견했습니다.</p>

<p>예를 들어 재료로 도마뱀의 꼬리와 요정의 날개를 사용하고, 도마뱀의 꼬리는 품질이 2이고 요정의 날개는 품질이 3이라고 해 봅시다. 도마뱀의 꼬리 -> 요정의 날개 -> 도마뱀의 꼬리 순서로 재료를 넣었더니 사과 주스가 나왔다고 하면, 사과 주스의 품질은 2 * 3 * 2 = 12 가 됩니다. 또한 재료를 넣는 순서는 완성품과 상관이 없으므로, 요정의 날개 -> 도마뱀의 꼬리 -> 도마뱀의 꼬리 순서로 재료를 넣어도 사과 주스가 나옵니다.</p>

<p>cubelover는 오늘 <em>n</em>개의 재료를 조합하려고 합니다. 그의 창고에는 <em>m</em>종류의 재료가 있고, 각 재료의 품질은 <em>a<sub>1</sub></em>, <em>a<sub>2</sub></em>, ..., <em>a<sub>m</sub></em> 으로 서로 다릅니다. 문득 cubelover는 조합해서 나올 수 있는 모든 가능한 완성품의 품질의 합이 궁금해졌지만, 가능한 완성품이 너무 많아 구하지 못했습니다. 그는 당신이 대신 구해준다면 Coders High 푼 문제수를 하나 늘려주겠다고 제안했습니다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 정수 <em>n</em>과 <em>m</em>(1 ≤&nbsp;<em>n</em> ≤ 10<sup>9</sup>, 1 ≤ <em>m</em> ≤ 10<sup>3</sup>)이 공백으로 구분되어 두고 주어진다. 다음 줄에 <em>a<sub>1</sub></em>, <em>a<sub>2</sub></em>, ..., <em>a<sub>m</sub></em> (1 ≤&nbsp;<em>a<sub>i</sub></em> ≤ 10<sup>9</sup>)이 공백으로 구분되어 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 줄에 답을 1,000,000,007 로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 3
1 2 3
','90
','MATH'),
                                                                                                                (2139,'BAEKJOON','https://www.acmicpc.net/problem/12840',12840,'창용이의 시계','1초','512 MB',3,'<p>창용이는 여름을 맞이하여 ‘정창용’ 이름이 쓰인 한정판 섬머 에디션 시계를 구입했다. 왠지 오늘은 001도 가고 싶지 않고 시계를 가지고 놀고만 싶다. 우린 방에 있는 창용이가 시계를 가지고 뭘 하는지 궁금하기만 하다. 창용이는 시계의 건전지를 분리했기 때문에 시계는 시간이 흐르지 않는다.</p>

<p>창용이는 앞으로 시계를 돌리기도 하고 뒤로 시계를 돌리기도 한다. 입력으로는 초기 현재 시간이 주어지고 q개의 쿼리가 주어진다.</p>

<p>한 쿼리는 T로 시작한다. (1 ≤&nbsp;T ≤&nbsp;3, 0 ≤&nbsp;c ≤&nbsp;10,000,000)</p>

<ul>
	<li>T가 1일 때는 c를 입력으로 받아와서, 시계를 앞으로 c초 돌린다.</li>
	<li>T가 2일 때는 c를 입력으로 받아와서, 시계를 뒤로 c초 돌린다.</li>
	<li>T가 3일 때는 창용이가 조작한 시계의 상황을 출력한다.</li>
</ul>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>현재 시간이 h m s 로 주어진다. (0 ≤&nbsp;h ≤&nbsp;23, 0 ≤&nbsp;m ≤&nbsp;59, 0 ≤&nbsp;s ≤&nbsp;59)</p>

<p>그 다음 쿼리의 개수 q가 주어진다. (1 ≤&nbsp;q ≤&nbsp;100,000)</p>

<p>다음 q개의 줄에는 쿼리가 주어진다. 쿼리의 형태는 위와 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>쿼리의 T가 3 일때, 창용이가 이리 저리 바꿔 놓은 시계가 가리키는 시간을</p>

<p>h’ m’ s’ 의 형태로 출력한다. T가 3인 쿼리는 하나는 꼭 주어진다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','0 1 0
4
1 4263
3
2 1175
3
','1 12 3
0 52 28
','MATH'),
                                                                                                                (2144,'BAEKJOON','https://www.acmicpc.net/problem/12850',12850,'본대 산책2','1초','512 MB',15,'<p>숭실 대학교 정보 과학관은 유배를 당해서 &nbsp;캠퍼스의 길 건너편에 있다. 그래서 컴퓨터 학부 학생들은 캠퍼스를 ‘본대’ 라고 부르고 정보 과학관을 ‘정보대’ 라고 부른다. 준영이 또한 컴퓨터 학부 소속 학생이라서 정보 과학관에 박혀있으며 항상 꽃 이 활짝 핀 본 대를 선망한다. 어느 날 준영이는 본 대를 산책하기로 결심하였다. 숭실 대학교 캠퍼스 지도는 아래와 같다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/12850/1.png" style="height: 259.167px; width: 377.5px;"></p>

<p style="text-align: center;">(편의 상 문제에서는 위 건물만 등장한다고 가정하자)</p>

<p>한 건물에서 바로 인접한 다른 건물로 이동 하는 데 1분이 걸린다. 준영이는 산책 도중에 한번도 길이나 건물에 멈춰서 머무르지 않는다. 준영이는 할 일이 많아서 딱 D분만 산책을 할 것이다. (산책을 시작 한 지 D분 일 때, 정보 과학관에 도착해야 한다.) 이때 가능한 경로의 경우의 수를 구해주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>D 가 주어진다 (1 ≤&nbsp;D ≤&nbsp;1,000,000,000)&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>가능한 경로의 수를 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','100000000
','261245548
','MATH'),
                                                                                                                (2140,'BAEKJOON','https://www.acmicpc.net/problem/12854',12854,'홍준이는 물리를 좋아해','2초','512 MB',14,'<p>홍준이는 물리를 좋아하고 밀도 계산이 취미에요.</p>

<p>학교에서 그래프 이론을 배운 홍준이는 그래프 상에서 밀도를 정의해보기로 했어요. 정점과 간선에 가중치가 있는 무방향 그래프에서 밀도는 정점들의 가중치 합을 Sum<sub>V</sub>라 하고, 간선들의 가중치 합을 Sum<sub>E</sub>라 하면, (Sum<sub>V</sub> / Sum<sub>E</sub>)로 정의됩니다.</p>

<p>홍준이는 명우에게 생일 선물로 정점과 간선에 가중치가 있는 무방향 그래프를 하나 선물 받았습니다. 심심한 홍준이는 원래 그래프의 부분 그래프인 ‘유도 부분그래프’(induced subgraph)에서 밀도를 최대가 되는 유도 부분그래프를 찾고 싶습니다.</p>

<p>그래프 G(V, E)의 유도 부분그래프 G’(V’, E’)는 다음과 같은 조건들을 만족합니다.</p>

<ol>
	<li>V&nbsp;⊆ V</li>
	<li>(정점 u와 v를 잇는 간선)&nbsp;∈ E&nbsp; if and only if u&nbsp;∈ V, v&nbsp;∈ V, (정점 u와 v를 잇는 간선)&nbsp;∈ E</li>
	<li>G’에서의 정점과 간선의 가중치는 G에서와 동일합니다.</li>
	<li>G’은 연결 그래프입니다.</li>
</ol>

<p>홍준이를 도와 밀도가 최대가 되는 유도 부분그래프를 구해주세요.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정점의 개수를 나타내는 n과 간선의 개수를 나타내는 m이 주어집니다.</p>

<p>둘째 줄에 i번째 정점의 가중치를 나타내는 n개의 정수가 공백을 사이에 두고 주어집니다.</p>

<p>셋째 줄부터 간선의 정보를 나타내는 3개의 정수가 m개의 줄에 걸쳐서 주어집니다.</p>

<p>정점의 개수는 1개 이상 500개 이하이며, 간선의 개수는 0개 이상 n(n-1)/2개 이하입니다. 중복되는 간선은 주어지지 않습니다. 정점의 가중치는 1보다 크거나 같고 1,000,000보다 작거나 같으며, 간선의 가중치는 1보다 크거나 같고 1,000보다 작거나 같습니다. 그래프에서 정점의 번호는 1번부터 n번까지 순서대로 매겨져 있습니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>밀도가 최대가 되는 유도 부분그래프의 밀도를 소수 6번째 자리까지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 1
1 2
1 2 1
','3.000000
','MATH'),
                                                                                                                (2143,'BAEKJOON','https://www.acmicpc.net/problem/12859',12859,'점프하는 민호','2초','512 MB',15,'<p>음의정수, 0, 양의정수로 표현할 수 있는 무한히 긴 1차원 좌표가 있다. 이런 1차원 좌표위의 한 점에 민호가 서있다.</p>

<p>그리고 민호의 앞에는 n개의 카드들을 파는 상점이 있다. 각각의 카드 l<sub>i</sub>와 c<sub>i</sub>라는 두개의 값을 가지고 있다. 만약 민호가 c<sub>i</sub>원을 사용해 카드를 산다면 임의의 점 x에서 (x - l<sub>i</sub>)또는 (x + l<sub>i</sub>)로 점프를 할 수가 있게 된다.</p>

<p>처음 민호는 아무런 카드를 가지고 있지 않기 때문에 처음 서있던 위치에서 움직일 수가 없다. 하지만 돈을 써서 카드를 사면 점프를 해 다른 점들로 이동을 할 수 있게 된다.</p>

<p>민호는 몇개의 카드를 사서 무한히 긴 1차원 좌표에서 갈수 없는 점이 존재하지 않았으면 한다. 만약 모든 점들을 갈 수 있는 경우가 존재한다면 가능한 적은 비용을 사용해 카드를 사고 싶다.</p>

<p>몇개의 카드를 사서 모든 점들을 방문 할 수 있는지 알아보고 가능한 경우 중 가장 적은 비용을 계산하는 프로그램을 작성하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 카드의 개수 n (1 ≤&nbsp;n ≤ 300) 이 주어진다.</p>

<p>두 번째 줄에는 n개의 카드가 가지고 있는 l<sub>i</sub> (1 ≤&nbsp;l<sub>i</sub> ≤ 10<sup>9</sup>)이 주어진다.</p>

<p>세 번째 줄에는 n개의 카드가 가지고 있는 c<sub>i</sub> (1 ≤ c<sub>i</sub> ≤ 10<sup>5</sup>)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>만약 몇개의 카드를 사서 모든 점들을 갈 수 있는 경우가 존재하지 않다면 -1을 출력한다.</p>

<p>가능한 경우가 존재한다면 사용해야 하는 비용들 중 가장 적은 비용을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
100 99 9900
1 1 1
','2
','MATH'),
                                                                                                                (2145,'BAEKJOON','https://www.acmicpc.net/problem/12866',12866,'피노키오','2초','512 MB',5,'<p>인간의 염색체는 [‘A’, ‘C’, ‘G’, ‘T’] 네 가지 알파벳으로 대표되는 네 가지 염기로 이루어져 있다. 힘들게 의경에 붙었지만, 고급시계에 빠져버린 준서는 자기 대신 복무를 해줄 피노키오를 만들려고 한다.</p>

<p>준서는 길이가 L인 염기열을 가지고 있는데, 이 염기열에서 각 1개씩의 ‘A’, ‘C’, ‘G’, ‘T’ 염기를 빼내어 합성하면 하나의 피노키오를 만들 수 있다. 자신이 직접 가는 것은 아니지만, 좋은 게 좋은 거라고 준서는 이 중 가장 일을 잘할 것 같은 피노키오를 만들려고 한다. 같은 염기더라도 염기열의 어디에 위치해 있느냐에 따라서 조금씩 다르므로, 완전히 같은 위치의 네 염기로 이루어진 게 아니라면 서로 다른 성질의 피노키오가 된다. 준서의 편안한 고급시계 생활을 위해 만들 수 있는 피노키오의 종류가 총 몇 개나 되는지 알려주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 문자열의 길이 L(1 ≤ L ≤ 1,000,000)이 주어진다. 둘째 줄에 길이 L의 문자열 S가 주어진다. 모든 문자는 ‘A’, ‘C’, ‘G’, ‘T’ 중 하나이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>한 줄에 가능한 피노키오의 종류를 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
AACGT
','2
','MATH'),
                                                                                                                (2146,'BAEKJOON','https://www.acmicpc.net/problem/12871',12871,'무한 문자열','2초','512 MB',6,'<p>문자열 s가 있을 때, f(s)는 s를 무한번 붙인 문자열로 정의한다. 예를 들어, s = "abc" 인 경우에 f(s) = "abcabcabcabc..."가 된다.</p>

<p>다른 문자열 s와 t가 있을 때, f(s)와 f(t)가 같은 문자열인 경우가 있다. 예를 들어서, s = "abc", t = "abcabc"인 경우에 f(s)와 f(t)는 같은 문자열을 만든다.</p>

<p>s와 t가 주어졌을 때, f(s)와 f(t)가 같은 문자열을 만드는지 아닌지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 s, 둘째 줄에 t가 주어진다. 두 문자열 s와 t의 길이는 50보다 작거나 같은 자연수이고, 알파벳 소문자로만 이루어져 있다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 f(s)와 f(t)가 같으면 1을, 다르면 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','ab
abab
','1
','MATH'),
                                                                                                                (2150,'BAEKJOON','https://www.acmicpc.net/problem/12872',12872,'플레이리스트','2초','512 MB',15,'<p>수빈이는 BOJ 알고리즘 캠프에서 음악을 들으면서 문제를 풀고 있다. 지금 수빈이의 스마트폰에는 N개의 노래가 저장되어 있다. 오늘 수빈이는 P개의 노래를 들으려고 한다. 수빈이는 다음과 같은 조건을 만족하는 플레이리스트를 만들려고 한다. 플레이리스트에는 같은 노래를&nbsp;여러 번 추가해도 된다.</p>

<ul>
	<li>모든 노래를&nbsp;플레이리스트에 추가해야 한다.</li>
	<li>같은 노래를 추가하려면, 플레이리스트에서 두 노래 사이에 적어도 M개의 곡이 있어야 한다.</li>
</ul>

<p>수빈이는 플레이리스트를 만들 수 있는 경우의 수가 궁금해졌다. N, M, P가 주어졌을 때, 수빈이가 만들 수 있는 플레이리스트의 경우의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, M, P가 주어진다. (1 ≤ N ≤ 100, 0 ≤ M ≤ N, N ≤ P ≤ 100)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 수빈이가 만들 수 있는 플레이리스트의 경우의 수를 출력한다. 경우의 수가 매우 커질 수 있기 때문에,&nbsp;1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1의 경우에 가능한 플레이리스트는 (노래1, 노래1, 노래1) 이다.</p>

<p>예제 2의 경우에는 가능한 플레이리스트가 없다.</p>

<p>예제 3의 경우에 (노래1, 노래1, 노래1), (노래2, 노래2, 노래2)는 불가능한 경우이다.</p>

<p>예제 4의 경우에 가능한 플레이리스트는 (노래1, 노래2, 노래1, 노래2), (노래2, 노래1, 노래2, 노래1) 이다.</p>

				</div>
				</div>','1 0 3
','1
','MATH'),
                                                                                                                (2154,'BAEKJOON','https://www.acmicpc.net/problem/12903',12903,'공 색칠하기','2초','512 MB',13,'<p>Alice는 k종류의 색을 가진 n개의 공을 갖고 있다. 공의 색깔들은 각각 1~k까지 번호가 매겨져 있으며, 같은 색의 공들은 서로 구분이 불가능하다. 이 공들은 모두 하나의 상자에 들어 있는 상태이다.</p>

<p>Alice는 상자가 빌 때까지, 상자에서 n개의 공을 하나씩 꺼냈다. 이렇게 공을 꺼내고 나니, 꺼낸 공들의 순서가 다음과 같은 신기한 성질을 만족하는 것을 알게 되었다.</p>

<ul>
	<li>모든 1 이상 k 미만의 자연수 i에 대해, 색깔이 i인 마지막 공은 색깔이 i+1인 마지막 공보다 먼저 상자에서 나왔다.</li>
</ul>

<p>즉, [1,2,1,1,2,3] 등의 수열은 조건을 만족하지만, [1,1,2,1,3,3] 등의 수열은 색깔이 1인 마지막 공이 4번째, 색깔이 2인 마지막 공이 3번째에 나왔으므로 조건을 만족하지 않는다.</p>

<p>Alice는 이런 상황이 발생할 경우의 수가 얼마나 많은지 궁금해졌다. 처음에 상자에 들어있던 각 색깔의 공의 개수가 주어질 때, 이런 상황이 발생할 경우의 수를 출력하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 공의 색깔의 종류 k가 주어진다. (1 ≤ k ≤ 1000)</p>

<p>다음 k개의 줄에는 각 색깔의 공의 개수를 나타내는 자연수 c<sub>i</sub>가 주어진다. (1 ≤ c<sub>i </sub>≤ 1000)</p>

<p>모든 c<sub>i</sub>의 합(n)은 1000을 넘지 않음이 보장된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>위와 같은 성질을 만족하도록 공을 뽑을 수 있는 순서의 가짓수를 1,000,000,007 (10<sup>9</sup>+7)로 나눈 나머지를 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
2
2
1
','3
','MATH'),
                                                                                                                (2149,'BAEKJOON','https://www.acmicpc.net/problem/12907',12907,'동물원','2초','512 MB',11,'<p>동물원에 동물이 N마리 있고, 1번부터 N번가지 번호가 매겨져 있다. 이 동물원에 동물은 토끼나 고양이밖에 없고, 모든 동물의 키는 다 다르다.</p>

<p>수빈이는 토끼와 고양이를 구분할 수 없지만, 토끼와 고양이와 대화를 할 수 있다!</p>

<p>수빈이는 모든 동물에게 다음과 같은 질문을 했다.</p>

<p>"너랑 같은 동물 중에서 너보다 키가 큰 동물은 몇 마리야?"</p>

<p>모든 토끼는 자신보다 키가 큰 토끼의 수를 말해줬고, 모든 고양이도 자신보다 키가 큰 고양이의 수를 말해줬다.</p>

<p>모든 동물의 대답이 주어졌을 때, 각 대답을 어떤 동물이 했는지 알아내려고 한다. 가능한 조합의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 동물의 수 N (1 ≤ N ≤ 40)이 주어진다.</p>

<p>둘째 줄에는 각 동물의 대답이 주어진다. 대답은 0보다 크거나 같고, 40보다 작거나 같은 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 가능한 조합의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
0 1 2 3 4
','2
','MATH'),
                                                                                                                (2155,'BAEKJOON','https://www.acmicpc.net/problem/12910',12910,'사탕 나눠주기','2초','512 MB',8,'<p>오늘은 BOJ 알고리즘 캠프 참가자들에게 사탕을 나누어주려고 한다.</p>

<p>백준이는 사탕을 총 N개 가지고 있으며, 각 사탕의 브랜드를 알고 있다. 브랜드는 정수로 나타낸다.</p>

<p>사탕을 몇 명에게 나누어 주려면,&nbsp;먼저 몇 개의 사탕을 나누어줄 것인지 K를 결정해야 한다. 그 다음 브랜드가 1부터 K까지인 사탕을 각 브랜드 별로 1개씩 고른다.</p>

<p>사탕을 고를 수 있는 방법의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 사탕의 개수 N이 주어진다. (1 ≤ N ≤ 50)</p>

<p>둘째 줄에는 사탕의 브랜드가 주어진다. (1 ≤ 브랜드 ≤ 50)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 백준이가 사탕을 고를 수 있는 방법의 수를 출력한다. 방법의 수는 2<sup>31</sup>보다 작다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 3 2
','3
','MATH'),
                                                                                                                (2156,'BAEKJOON','https://www.acmicpc.net/problem/12911',12911,'좋아하는 배열','2초','512 MB',13,'<p>성관이는 다음과 같은 성질을 만족하는 배열을 좋아한다.</p>

<ul>
	<li>배열의 길이는 N이다.</li>
	<li>배열에 채워져있는 수는 1보다 크거나 같고, K보다 작거나 같은 자연수이다.</li>
	<li>배열에서 연속한 수가 A와 B일 때, A <= B 또는 A % B != 0 을 만족해야 한다.</li>
</ul>

<p>예를 들어, N = 4, K = 7인 경우에 [1, 7, 7, 2]는 성관이가 좋아하는 배열이다. 모든 연속한 수가 1 <= 7, 7 <= 7, 7 % 2 != 0 조건을 만족하기 때문이다.</p>

<p>N과 K가 주어졌을 때, 성관이가 좋아하는 배열의 경우의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 K가 주어진다. (1 ≤ N ≤ 10, 1 ≤ K ≤ 100,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 성관이가 좋아하는 배열의 개수를 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 2
','3
','MATH'),
                                                                                                                (2159,'BAEKJOON','https://www.acmicpc.net/problem/12924',12924,'멋진 쌍','2초','512 MB',11,'<p>두 자연수 (n, m)이 멋진 쌍일 조건은 다음과 같다.</p>

<ul>
	<li>n의 뒤에서 몇 자리를 떼서, 앞에 그대로 붙이면 m을 얻을 수 있다.</li>
</ul>

<p>예를 들어, 12345의 뒤에서 345를 떼서 앞에 붙이면 34512가 되므로, (12345, 34512)는 멋진 쌍이다.</p>

<p>같은 개수의 자릿수를 갖는 두 자연수 A와 B가 주어질 때, A ≤ x <&nbsp;y ≤ B 인 멋진 쌍 (x, y)의 개수를 출력하세요.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 두 자연수 A, B가 주어진다. A ≤ B ≤ 2,000,000, A와 B의 자릿수 개수는 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>멋진 쌍의 개수를 자연수 하나로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 9
','0
','MATH'),
                                                                                                                (2161,'BAEKJOON','https://www.acmicpc.net/problem/12934',12934,'턴 게임','2초','512 MB',11,'<p>윤호와 동혁이는 BOJ 알고리즘 캠프에 참가중이다. 두 사람은 문제가 너무 안 풀릴 때는 게임을 하고 문제를 풀기도 한다.</p>

<p>게임은 턴으로 이루어져 있으며, 각 턴의 승자는 두 사람 중에 한 사람이다. i번째 턴을 승리한 사람은 점수 i점을 갖게 되고, 턴은 1부터 시작한다.</p>

<p>두 정수 x와 y가 주어졌을 때, 윤호의 점수가 x, 동혁이의 점수가 y가 되는 것이 가능한지 불가능한지 구하는 프로그램을 작성하시오. 만약, 가능하다면 윤호가 최소 몇 번 이겨야 하는지도 구하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 x와 y가 주어진다. (0 ≤ x, y ≤ 10<sup>12</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>윤호가 최소 몇 번 이겨야 하는지 출력한다. 불가능한 경우에는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>윤호가 1, 2, 4 턴을 이기고, 동혁이가 3, 5, 6 턴을 이겼다면 가능한 결과이다. 윤호의 승리 횟수가 최소가 되는 경우는 윤호가 1, 6 턴을 이기고, 동혁이가 2, 3, 4, 5를 이긴 것이다.</p>

				</div>
				</div>','7 14
','2
','MATH'),
                                                                                                                (2162,'BAEKJOON','https://www.acmicpc.net/problem/12937',12937,'좋아하는 배열 2','2초','512 MB',22,'<p>성관이는 다음과 같은 성질을 만족하는 배열을 좋아한다.</p>

<ul>
	<li>배열의 길이는 N이다.</li>
	<li>배열에 채워져있는 수는 1보다 크거나 같고, K보다 작거나 같은 자연수이다.</li>
	<li>배열에서 연속한 수가 A와 B일 때, A <= B 또는 A % B != 0 을 만족해야 한다.</li>
</ul>

<p>예를 들어, N = 4, K = 7인 경우에 [1, 7, 7, 2]는 성관이가 좋아하는 배열이다. 모든 연속한 수가 1 <= 7, 7 <= 7, 7 % 2 != 0 조건을 만족하기 때문이다.</p>

<p>N과 K가 주어졌을 때, 성관이가 좋아하는 배열의 경우의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 K가 주어진다. (1 ≤ N ≤ 50,000, 1 ≤ K ≤ 50,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 성관이가 좋아하는 배열의 개수를 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 2
','3
','MATH'),
                                                                                                                (2163,'BAEKJOON','https://www.acmicpc.net/problem/12938',12938,'곱으로 분해하기','2초','512 MB',15,'<p>n개의 양수들의 곱으로 구성된 하나의 자연수 m이 주어집니다. 이때, m을 n개의 수로 분해하는 경우의 수를 출력하는 프로그램을 작성하세요. 분해한 수들을 다시 곱하였을 때에 m이 되어야 하며, 원소의 구성은 같더라도 순서가 다른 분해는 다른 경우의 수로 간주합니다.</p>

<p>예를 들어 m = 15이고 n = 2라면, (1, 15), (3, 5), (5, 3), (15, 1) 총 4가지로 분해가 가능합니다.</p>

<p>입력 그 자체도 하나의 분해가 될 수 있으며, 경우의 수가 매우 크기 때문에 답을 1000000009로 나눈 나머지를 출력하세요.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 하나의 양의 정수 n이 주어진다. n은 500 이하의 자연수입니다.</p>

<p>둘째 줄에는 n개의 자연수들이 공백을 사이에 두고 주어집니다. 이 자연수들은 10억 이하입니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 m을 분해하는 경우의 수를 1000000009로 나눈 나머지를 출력하세요.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 1 2
','3
','MATH'),
                                                                                                                (2157,'BAEKJOON','https://www.acmicpc.net/problem/12944',12944,'재미있는 숫자 놀이','2초','512 MB',14,'<p>민호는 K개의 카드를 가지고 있는데 각각의 카드에는 양의 정수가 적혀 있다. 이 카드들을 너무 좋아하는 민호는 이것들을 이용해 재미있는 놀이를 생각해 냈다.</p>

<p>1이상 N이하의 양의 정수 중에서 민호가 가지고 있는 카드들 중 적어도 한개로 나눠떨어지는 숫자는 몇개인지 알아보는 것이다.</p>

<p>하지만 경우의 수가 너무 많아 손으로 셀 수 없다는 것을 깨달은 민호는 여러분들에게 도움을 요청했다. 민호를 도와 민호가 놀이를 성공적으로 마칠 수 있게 해주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 N, K (1 ≤ N ≤ 10<sup>9</sup>, 1 ≤ K ≤ 20) 이 공백을 구분으로 주어진다.</p>

<p>다음 줄에는 민호가 가지고 있는 K개의 카드에 적힌 숫자가 A<sub>i</sub> (1 ≤ i ≤ N, 1 ≤ A<sub>i</sub> ≤ 10<sup>9</sup>)가 공백을 구분으로 차례대로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>1이상 N이하의 양의 정수 중 민호가 가지고 있는 카드들 중 적어도 한 개로 나눠떨어지는 수의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','100 2
2 3
','67
','MATH'),
                                                                                                                (2165,'BAEKJOON','https://www.acmicpc.net/problem/12955',12955,'팰린드롬 부분 문자열','2초','512 MB',18,'<p>알파벳 대문자로만 이루어진 길이가 N인 문자열 중에서, 길이가 M인 모든 부분 문자열 중에서 팰린드롬인 것의 개수가 K개 이상인 것의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, M, K가 주어진다. (2 ≤ M ≤ N ≤ 11, 0 ≤ K ≤ 11)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제의 조건에 맞는 문자열의&nbsp;개수를 출력한다. 정답은 2<sup>63</sup>-1보다 작거나 같다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1의 경우에 길이가 2이면서, 같은 문자로 이루어진 AA, BB, CC, ..., ZZ와 같은 문자열이 정답이 된다.</p>

<p>예제 2의 경우에는 팰린드롬의 개수가 0이기 때문에, 길이가 2인 모든 문자열이 해당된다.</p>

				</div>
				</div>','2 2 1
','26
','MATH'),
                                                                                                                (2168,'BAEKJOON','https://www.acmicpc.net/problem/12957',12957,'보행의 개수','2초','512 MB',18,'<p>그래프의 보행이란 같은 정점, 간선을 여러 번 방문할 수 있는 경로를 말한다. 보행의 길이란 보행에 포함되어 있는 간선의 개수이다.</p>

<p>그래프가 주어졌을 때, 길이가 L인 보행의 개수가 O(L<sup>K</sup>)인 것 중에서 가장 작은 음이 아닌 정수 K를 찾는 프로그램을 작성하시오.</p>

<p>경우의 수가 O(L<sup>K</sup>)라는 것은 임의의 양의 정수 L에 대해서, 길이가 L인 보행의 개수가 C×L<sup>K</sup>&nbsp;이하를 만족하는 상수 C가 존재한다는 뜻이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 그래프의 정점의 개수 N (2 ≤ N ≤ 50)이 주어진다.</p>

<p>둘째 줄부터 N개의 줄에는 그래프 간선의 정보가 인접 행렬 형식으로 주어진다. Y인 경우에는 간선이 있는 것이고, N인 경우에는 간선이 없는 것이다. 같은 정점을 연결하는 간선은 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제의 조건을 만족하는 가장 작은 음이 아닌 정수 K를 출력한다. 조건을 만족하는 K가 없는 경우에는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1의 경우에 길이가 L인 보행의 개수 3*2^L이다. 이 값은 O(L<sup>K</sup>)로 나타낼 수 없다.</p>

<p>예제 2의 경우에 L이 크면, 보행의 개수가 0이 된다.</p>

<p>예제 3의 모든 L에 대해서, 보행의 개수가 5이다.</p>

				</div>
				</div>','3
NYY
YNY
YYN
','-1
','MATH'),
                                                                                                                (2164,'BAEKJOON','https://www.acmicpc.net/problem/12966',12966,'턴 게임 2','2초','512 MB',13,'<p>윤호와 동혁이는 BOJ 알고리즘 캠프에 참가중이다. 두 사람은 문제가 너무 안 풀릴 때는 게임을 하고 문제를 풀기도 한다.</p>

<p>게임은 턴으로 이루어져 있으며, 각 턴의 승자는 두 사람 중에 한 사람이다. i번째 턴을 승리한 사람은 점수 2×i-1점을 갖게 되고, 턴은 1부터 시작한다.</p>

<p>두 정수 x와 y가 주어졌을 때, 윤호의 점수가 x, 동혁이의 점수가 y가 되는 것이 가능한지 불가능한지 구하는 프로그램을 작성하시오. 만약, 가능하다면 윤호가 최소 몇 번 이겨야 하는지도 구하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 x와 y가 주어진다. (0 ≤ x, y ≤ 10<sup>12</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>윤호가 최소 몇 번 이겨야 하는지 출력한다. 불가능한 경우에는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8 17
','2
','MATH'),
                                                                                                                (2171,'BAEKJOON','https://www.acmicpc.net/problem/12971',12971,'숫자 놀이','2초','512 MB',7,'<p>준서는 얼마 전 나머지연산에 대해 배웠다. 양의 정수 N을 다른 양의 정수 M으로 나눈 나머지는 항상 0이상 M-1이하의 정수가 된다는 사실이 신기한 준서는 혼자만의 숫자놀이를 고안했다.</p>

<p>먼저 준서는 양의 정수 X1, X2, X3 3개를 임의로 고른다. 그 후 3개의 양의 정수 P1, P2, P3을 고르는데, P1 > X1, P2 > X2, P3 > X3을 만족하도록 고른다. 준서가 알고 싶은 것은 아래의 조건을 만족하는 가장 작은 양의 정수 N이다.</p>

<p style="text-align: center;">N을 P1로 나눈 나머지가 X1, P2로 나눈 나머지가 X2, P3로 나눈 나머지가 X3</p>

<p>준서가 선택한 P1, P2, P3, X1, X2, X3가 주어졌을 때, 가장 작은 정수 N을 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>공백으로 구분된 6개의 정수 P1, P2, P3, X1, X2, X3가 순서대로 주어진다. 모든 숫자는 1과 300사이의 정수다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>한 줄에 가장 작은 양의 정수 N을 출력한다.</p>

<p>단, 조건을 만족하는 1,000,000,000미만의 양의 정수가 없을 경우 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','20 20 20 1 2 3
','-1
','MATH'),
                                                                                                                (2179,'BAEKJOON','https://www.acmicpc.net/problem/12972',12972,'GCD 테이블','2초','512 MB',15,'<p>길이가 N인 수열 A = {a<sub>1</sub> ~ an}이 있을 때, A의 GCD 테이블 G는 아래 공식에 의해 정의된다.</p>

<p style="text-align:center">g<sub>ij</sub> = gcd(a<sub>i</sub>, a<sub>j</sub>)</p>

<p>gcd(x, y)란 두 수 x, y의 최대 공약수를 뜻한다. 예를 들어 길이가 4인 수열 A = {4, 3, 6, 2}의 GCD 테이블은 아래와 같다.</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/12972/1.png" style="height:142px; width:178px"></p>

<p>GCD 테이블 G를 구성하는 모든 g<sub>ij</sub>가 주어질 때, 원본 수열 a를 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 수열 A의 길이 N(1 ≤ N ≤ 500)이 주어진다. 두 번째 줄에는 A의 GCD 테이블의 N*N개의 값이 임의의 순서로 공백을 사이에 두고 주어진다. 모든 GCD 테이블의 숫자는 양의 정수이며, 1,000,000,000을 넘지 않는다. 원본 수열 A를 구할 수 없는 경우는 주어지지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>한 줄에 공백으로 구분된 N개의 양의 정수를 출력한다. 만약 가능한 답이 여러개라면, 그 중 아무거나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2
','4 3 6 2
','MATH'),
                                                                                                                (2174,'BAEKJOON','https://www.acmicpc.net/problem/12977',12977,'원 위의 점','2초','512 MB',16,'<p>반지름이 1인 원의 둘레 위에 점 n개를 무작위로 찍는다고 하자. (각 점을 찍을 때, 원의 둘레 위의 모든 점이 선택될 확률이 같다는 뜻이다.) 이때, 그 점들이 모두 중심과 반지름이 같고, 중심각이 p도 이내인 원호 위에 있을 확률을 구하시오.</p>

<p>확률이 매우 작을 수 있으므로, 확률을 P라고 할 때, -log<sub>2</sub>P를 출력하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 번째 줄에는 점의 개수 n과 각도 p가 주어진다. (1 ≤ n ≤ 100,000; 1 ≤ p < 180) n과 p는 모두 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>-log<sub>2</sub>P를 정확히 소수점 아래 6자리까지 출력하시오. (소수점 아래 7번째 자리에서 반올림하여 출력한다.)</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 150
','0.000000
','MATH'),
                                                                                                                (2166,'BAEKJOON','https://www.acmicpc.net/problem/12979',12979,'종이 접기','2초','512 MB',11,'<p>W×H 크기의 종이가 있다. 지금 현정이가 필요한 종이의 크기는 넓이가 A인 종이이다. 따라서, 종이를 접어서 넓이가 A인 종이를 만들려고 한다.</p>

<p>종이는 직선을 기준으로 접어야하며, 다음과 같은 두 가지 조건을 지켜야 한다.</p>

<ul>
	<li>종이를 접는 기준선은 직사각형의 한 변과 평행해야 한다.</li>
	<li>종이를 접은 후에도 W와 H는 정수가 되어야 한다.</li>
</ul>

<p>예를 들어, 5×3 크기의 종이가 있는 경우에, 너비를 기준으로 4가 되는 선으로 종이를 접으면 4×3 크기의 종이를 접게 된다. 이제, 높이를 기준으로 1이 되는 선을 기준으로 종이를 접어서 5×2 크기의 직사각형을 만들 수 있다.</p>

<p>W, H, A가 주어졌을 때, 넓이가 A가 되게 접을 수 있는지 없는지 구하고, 접을 수 있는 경우에는 접어야 하는 횟수의 최솟값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 W, H, A가 주어진다. (1 ≤ W, H ≤ 1,000,000,000, 1 ≤ A ≤ 100,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>W×H 크기의 종이를 접어서 넓이가 A가 되게 만들 수 있으면 접는 횟수의 최솟값을, 만들 수 없으면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 3 12
','1
','MATH'),
                                                                                                                (2176,'BAEKJOON','https://www.acmicpc.net/problem/12981',12981,'공 포장하기','2초','512 MB',7,'<p>빨간 공 R개, 초록 공 G개, 파란 공 B개를 가지고 있다.</p>

<p>오늘은 이 공을 박스로 포장하려고 한다. 박스에는 공이 1개, 2개, 또는 3개 들어갈 수 있다.</p>

<p>박스에 들어가는 공의 색은 모두 다르거나, 모두 같아야 한다.</p>

<p>필요한 박스 개수의 최솟값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 R, G, B가 주어진다. (1 ≤ R, G, B ≤ 100)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 필요한 박스 개수의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 예제는 RGB, RG, RR, BBB로 포장하면 된다.</p>

<p>두 번째 예제는 RGB, GGG, GGG로 포장한다.</p>

				</div>
				</div>','4 2 4
','4
','MATH'),
                                                                                                                (2177,'BAEKJOON','https://www.acmicpc.net/problem/12992',12992,'홍준이의 교집합','2초','512 MB',17,'<p>홍준이에게는 수평면 상에서 N개의 1차원 구간이 있습니다. i번째 구간을 [L<sub>i</sub> , R<sub>i</sub>](L<sub>i</sub>&nbsp;≤ R<sub>i</sub>)라고 하겠습니다. 이때, 구간의 길이는 f([L<sub>i</sub> , R<sub>i</sub>])= R<sub>i</sub> ? L<sub>i </sub>+ 1로 정의하겠습니다. F(공집합) = 0입니다.</p>

<p>N 이하의 정수 k가 주어질 때, \( \displaystyle\sum_{1 \le i_1&nbsp; < i_2&nbsp; <&nbsp; ...&nbsp; < i_k&nbsp; \le N} {f([L_{i_1}, R_{i_1}]\bigcap[L_{i_2}, R_{i_2}]\bigcap ... \bigcap [L_{i_k}, R_{i_k}])} \)&nbsp;를 계산하는 프로그램을 작성하세요. 즉, 가능한 모든 서로 다른 k개의 선분을 골랐을 때 k개의 선분의 교집합의 길이의 합을 구하여야 합니다.</p>

<p>답이 매우 커질 수 있으므로, 10<sup>9</sup>+7로 나눈 나머지를 출력하세요.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 k가 주어집니다.(1 ≤ k ≤ N ≤ 200,000)</p>

<p>둘째 줄부터 N개의 줄에 걸쳐서 i+1(1 ≤ i ≤ N)번째 줄에 L<sub>i</sub>와 R<sub>i</sub>를 나타내는 2개의 정수가 주어집니다. (-10<sup>9</sup> ≤ L<sub>i</sub>, R<sub>i</sub> ≤ 10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>가능한 모든 서로 다른 k개의 선분을 골랐을 때 k개의 선분의 교집합의 길이의 합을 10<sup>9</sup>+7로 나눈 나머지를 출력하세요.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>\( {f([1,2]\bigcap[1,3]) = f([1,2]) = 2} \)</p>

<p>\( {f([1,2]\bigcap[2,3]) = f([2,2]) = 1} \)</p>

<p>\( {f([1,3]\bigcap[2,3]) = f([2,3]) = 2} \)</p>

				</div>
				</div>','3 2
1 2
1 3
2 3
','5
','MATH'),
                                                                                                                (2169,'BAEKJOON','https://www.acmicpc.net/problem/12993',12993,'이동3','2초','512 MB',8,'<p>동혁이는 크기가 무한대인 평면 위에 원점 (0, 0)에 올라가있다.</p>

<p>동혁이는 이동을 단계별로 하면서 (x, y)로 이동하려고 한다. 단계는 0부터 시작한다.</p>

<p>각 단계마다 동혁이는 두 방향 오른쪽(x-좌표 증가)과 위(y-좌표 증가) 중에서 하나를 고른다음, 3^k 만큼 이동한다. 이때, k는 단계 번호이다. 이동하지 않고 단계를 건너 뛰는 것은 불가능하다.</p>

<p>x와 y가 주어졌을 때, (0, 0)에서 (x, y)를 갈 수 있는지 없는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 x와 y가 주어진다. (0 ≤ x, y ≤ 1,000,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>(0, 0)에서 (x, y)를 갈 수 있으면 1을 없으면 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 3
','1
','MATH'),
                                                                                                                (2178,'BAEKJOON','https://www.acmicpc.net/problem/12994',12994,'이동3-2','2초','512 MB',11,'<p>동혁이는 크기가 무한대인 평면 위에 원점 (0, 0)에 올라가있다.</p>

<p>동혁이는 이동을 단계별로 하면서 (x, y)로 이동하려고 한다. 단계는 0부터 시작한다.</p>

<p>각 단계마다 동혁이는 네&nbsp;방향 오른쪽(x-좌표 증가), 왼쪽(x-좌표 감소),&nbsp;위(y-좌표 증가), 아래(y-좌표 감소)&nbsp;중에서 하나를 고른다음, 3^k 만큼 이동한다. 이때, k는 단계 번호이다. 이동하지 않고 단계를 건너 뛰는 것은 불가능하다.</p>

<p>x와 y가 주어졌을 때, (0, 0)에서 (x, y)를 갈 수 있는지 없는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 x와 y가 주어진다. (-1,000,000,000 ≤ x, y ≤ 1,000,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>(0, 0)에서 (x, y)를 갈 수 있으면 1을 없으면 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 3
','1
','MATH'),
                                                                                                                (2180,'BAEKJOON','https://www.acmicpc.net/problem/12997',12997,'철인 2종 경기','2초','512 MB',18,'<p>20XX년, BOJ Camp에서 철인 2종 경기가 열릴 예정이다. 철인 2종 경기는 수영과 달리기의 두 파트로 이루어진 경기이다. 사람들은 R미터를 달린 후, S미터를 수영할 것이다. 이때, 가장 먼저 결승점에 도착한 사람이 우승자가 된다. (단, 동시에 여러 사람이 결승점에 도착하면 공동 우승으로 인정한다.)</p>

<p>경기가 시작하기 전에, 성관이는 n명의 참가자들의 정보를 보고 있다. 성관이는 조사를 통해 모든 사람의 달리기 속도와 수영 속도를 알고 있다. i번째 사람은 r<sub>i</sub> m/s의 속도로 달리고, s<sub>i</sub> m/s의 속도로 수영을 한다. 하지만, 성관이는 R과 S의 길이는 알지 못한다. 단지, R과 S 모두 0보다 큰 실수란 사실만을 알고 있다.</p>

<p>성관이는 우승할 가능성이 있는 사람들이 누구인지가 궁금해졌다. R과 S 값에 따라, 우승할 가능성이 있는 사람들을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 번째 줄에는 참가자 수 N이 주어진다. (1 ≤ N ≤ 200,000)</p>

<p>다음 N개의 줄에는 참가자의 정보가 주어진다. i번째 줄에는 참가자의 정보를 나타내는 두 자연수 s<sub>i</sub>와 r<sub>i</sub>가 주어진다. (1 ≤ s<sub>i</sub>, r<sub>i </sub>≤ 10,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>오름차순으로, 승리할 가능성이 있는 사람들의 번호를 모두 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 3
2 2
3 1
','1 2 3
','MATH'),
                                                                                                                (2173,'BAEKJOON','https://www.acmicpc.net/problem/13003',13003,'배수열','2초','512 MB',14,'<p>민호는 1부터 N까지의 숫자를 사용해 길이 L인 수열을 만들려고 한다. 이럴 경우 경우의 수는 N<sup>L</sup>이 된다.</p>

<p>하지만 이렇게 수열을 만드는 경우는 너무 재미가 없다고 생각한 민호는 아래 두가지 규칙을 지키면서 두열을 만들려고 한다.</p>

<ol>
	<li>수열의 수는 비 내림차순이여야 한다. 즉 수열은 뒤로 갈수록 감소하지 않아야 한다.</li>
	<li>수열의 모든 수는 서로 배수 관계여야 한다.</li>
</ol>

<p>이렇게 만든 수열의 전체 경우의 수를 계산해 출력하자. 단 경우의 수가 많아질 수 있으니 10<sup>9</sup> + 7으로 나눈 나머지를 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 N, L (1 ≤ N, L ≤ 2,000) 이 공백을 구분으로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>위에 두가지 조건을 지키면서 수열을 만드는 경우의 수를 10<sup>9</sup> + 7으로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 2
','5
','MATH'),
                                                                                                                (2182,'BAEKJOON','https://www.acmicpc.net/problem/13011',13011,'사탕의 밀도','2초','512 MB',10,'<p>BOJ 알고리즘 캠프의 스페셜 게스트 성원이는 캠프 참가자들에게 사탕을 만들어주려고 한다. BOJ 알고리즘 캠프의 참가자의 수는 N명이고, 0번부터 N-1번까지 번호가 매겨져 있다.</p>

<p>i번 참가자는 총 C[i] 리터의 사탕이 들어가는 바구니를 가지고 있고, 받고 싶은 사탕의 무게는 W[i] 그램이다.</p>

<p>성원이는 모든 참가자들의 바구니를 가득 채워줄 것이다 즉, C[i]리터만큼 모두 채울 것이다. 하지만, 성원이는 사탕을 한 종류만 만들 수 있다(밀도가 일정하다)</p>

<p>성원이는 되도록 많은 참가자를 만족시키는 밀도를 선택해야 한다. 최대한 많은 참가자를 만족시키게 하기 위해서, 각 참가자의 W[i]와 실제로 받은 사탕의 무게의 차이의 합을 최소로 하려고 한다.</p>

<p>각 참가자의 W[i]와 실제로 받은 사탕의 무게의 차이의 합을 최소로 하는&nbsp;프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 참가자의 수 N (1 ≤ N ≤ 50)이 주어진다.</p>

<p>둘째 줄에는 C[i], 셋째 줄에는 W[i]가 주어진다. (1 ≤ C[i], W[i] ≤ 1,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 참가자의 W[i]와 실제로 받은 사탕의 무게의 차이의 합을 최솟값을 출력한다. 정답과의 절대/상대 오차는 10<sup>-9</sup> 까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1의 경우에 참가자가 1명이다. 밀도를 200그램/리터로 하면 W[i]와 실제로 받은 무게의 차이는 0.0이 된다.</p>

<p>예제 2의 경우에는 두 사람이 가지고 있는 사탕 바구니는 10리터인데, 한 사람은 1000그램을, 다른 한 사람은 2000그램을 받으려고 한다. 밀도 100그램/리터로 정하면 차이가 1000.0이 나게 만들 수 있다.</p>

				</div>
				</div>','1
5
1000
','0.0
','MATH'),
                                                                                                                (2183,'BAEKJOON','https://www.acmicpc.net/problem/13018',13018,'특이한 수열','2초','512 MB',12,'<p>이 문제는 특이한 수열 A를 찾는 문제이다. 특이한 수열의 성질은 다음과 같다.</p>

<ul>
	<li>수열 A의 길이는 n</li>
	<li>1이상 n이하의 정수가 빠짐없이 모두 등장해야 하며, 각 수는 한번만 등장해야함</li>
	<li>1 ≤ i ≤ n 인 i에 대해 gcd(i, A[i]) > 1 을 만족하는 i가 정확히 k개여야함</li>
</ul>

<p>n, k 가 주어졌을 때, 특이한 수열을 아무거나 하나 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n, k (1 ≤ n ≤ 10<sup>5</sup>, 0 ≤ k ≤ n)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제의 조건을 만족하는 특이한 수열 A를 출력한다. 답이 여러 가지가 있다면 그 중 아무거나 출력해도 된다. 만약 조건을 만족하는 특이한 수열이 없다면 "Impossible" 을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1
','Impossible
','MATH'),
                                                                                                                (2184,'BAEKJOON','https://www.acmicpc.net/problem/13021',13021,'공 색칠하기','2초','512 MB',11,'<p>공 N개가 한 줄로 놓여져 있다. 공은 검정색 또는 흰색으로 칠할 수 있으며, 처음에 모든 공의 색은 흰색이다. 공은 가장 왼쪽이 1번이고, 순서대로 번호가 매겨져 있다.</p>

<p>오늘은 공을 칠해보려고 한다. 공은 기계를 이용해서 칠할 수 있는데, 기계는 두 정수 L과 R을 입력으로 받는다. 기계는 L번째 공부터 R번째 공까지를 흰색이나 검정색으로 모두 칠한다.</p>

<p>기계를 총 M번 사용했고, 이때 입력한 L과 R을 모두 알고있다. 하지만, 어떤 색으로 칠했는지는 까먹고 말았다.&nbsp;</p>

<p>기계를 모두 M번 사용했을 때, 나올 수 있는 색 조합의 경우의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 공의 개수 N과 기계를 사용한 횟수 M이 주어진다. (1 ≤ N ≤ 1,000, 1 ≤ M ≤ 50)</p>

<p>둘째 줄부터 M개의 줄에는 기계를 사용할 때 입력한 L과 R이 기계를 사용한 순서대로 주어진다. (1 ≤ L ≤ R ≤ N)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 나올 수 있는 색&nbsp;조합의 수를 출력한다. 정답은 2<sup>63</sup>-1보다 작거나 같다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 3
1 1
2 2
3 3
','8
','MATH'),
                                                                                                                (2185,'BAEKJOON','https://www.acmicpc.net/problem/13024',13024,'서브 트리의 크기','2초','512 MB',17,'<p>양방향 트리 T가 주어진다. 트리의 정점은 0번부터 N-1번까지 번호가 매겨져 있다.</p>

<p>T의 서브 트리는 T의 연결된 서브 그래프를 의미한다. 서브 트리의 크기는 포함되어 있는 정점의 개수이다.</p>

<p>T의 모든 서브 트리의 크기의 합을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(1 ≤ N ≤ 10<sup>5</sup>)이 주어진다. 둘째 줄부터 N-1개의 줄에 트리 T의 간선이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 트리 T의 모든 서브 트리의 크기의 합을 1,000,000,007로 나눈 나머지를&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
0 1
0 2
','10
','MATH'),
                                                                                                                (2188,'BAEKJOON','https://www.acmicpc.net/problem/13025',13025,'숫자 골라내기','2초','512 MB',17,'<p>성관이는 다음과 같은 조건을 만족하는 집합을 만들려고 한다.</p>

<ul>
	<li>집합의 모든 원소는 서로 다른 자연수이다.</li>
	<li>집합의 모든 원소는 [l, r] 범위 내에 있다.</li>
	<li>집합의 원소 개수는 1보다 크거나 같고, k보다 작거나 같다.</li>
	<li>집합의 모든 원소를 XOR한 값이 최대한 작아야 한다.</li>
</ul>

<p>위와 같은 조건을 만족하는 집합을 출력하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 세 개의 자연수 l, r, k가 주어진다. (1?≤?l?≤?r?≤ 10<sup>12</sup>, 1?≤?k ≤?min(10<sup>6</sup>, r-l+1))</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에, 만든 집합의 모든 원소를 XOR한 값을 출력한다.</p>

<p>두 번째 줄에 집합의 크기 |S|를 출력한다.</p>

<p>세 번째 줄에 집합의 각 원소를 나타내는 자연수 |S|개를 출력한다.</p>

<p>만약 조건을 만족하는 집합이 여러 개라면, 아무 것이나 출력해도 관계없다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8 15 3
','1
2
10 11
','MATH'),
                                                                                                                (2186,'BAEKJOON','https://www.acmicpc.net/problem/13026',13026,'저녁 식사','2초','512 MB',18,'<p>성관이는 소수 왕국에서 열리는 비밀 파티에 초대받았다. 파티에는 (성관이를 포함해) 총 n명의 사람들이 있었다. i번째 사람의 나이는 a<sub>i</sub>이다.</p>

<p>그들은 여러 개의 원형 테이블에 앉아 식사를 할 것이다. 사람들은 다음과 같은 조건으로 테이블에 앉아 식사를 하길 원한다.</p>

<ul>
	<li>모든 사람이 정확히 하나의 테이블에 앉아 있어야 한다.</li>
	<li>하나의 테이블에는 적어도 3명의 사람이 앉아 있어야 한다.</li>
	<li>테이블에서 인접해 있는 모든 사람 쌍에 대해, 나이의 합이 소수여야 한다. 즉, 한 테이블에 x<sub>1</sub>, x<sub>2</sub>, …, x<sub>k</sub>번째 사람이 순서대로 앉아 있다면, a<sub>x1 </sub>+ a<sub>x2</sub>, a<sub>x2 </sub>+ a<sub>x3</sub>, …, a<sub>xk </sub>+ a<sub>x1</sub>가 모두 소수여야 한다.</li>
</ul>

<p>위와 같은 조건을 만족하게 사람들을 앉히는 방법이 존재하는지 출력하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 사람의 수를 나타내는 자연수 n이 주어진다. (1?≤?n ≤ 200)</p>

<p>다음 줄에 각 사람의 나이를 나타내는 자연수 n개 (a<sub>1</sub>~a<sub>n</sub>)가 주어진다. (2 ≤ a<sub>i</sub> ≤ 10<sup>4</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>만약 조건을 만족하도록 사람들을 앉히는 것이 가능하다면, “Possible”을 출력한다.</p>

<p>그렇지 않다면, “Impossible”을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 예제에서는, 3-8-9-4의 순서로 테이블 하나에 모든 사람을 앉히면 된다.</p>

<p>두 번째 예제에서는, 2+2가 소수가 아니기 때문에, 불가능하다.</p>

<p>세 번째 예제에서는, 2-3-4-7-6-13-10-9-8-11-12-5의 순서로 모든 사람을 앉히면 된다.</p>

<p>네 번째 예제에서는, 다음과 같이 세 개의 테이블을 사용하면 된다.</p>

<ol>
	<li>2-3-4-7-6-5</li>
	<li>8-9-10-13-16-15-14-17-12-11</li>
	<li>18-19-24-23-20-21-22-25&nbsp; &nbsp; &nbsp;</li>
</ol>

				</div>
				</div>','4
3 4 8 9
','Possible
','MATH'),
                                                                                                                (2205,'BAEKJOON','https://www.acmicpc.net/problem/13116',13116,'30번','2초','512 MB',7,'<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/13116/image00.png" style="height: 428.333px; width: 352.5px;"></p>

<p>혹시 2007학년도 대학수학능력시험 수리영역 가형 이산수학 30번 문제를 아는가? 여러분은 수능을 치는 수험생의 마음으로 이 문제를 해결해야만 한다.</p>

<p>하지만 우리는 저작권 위반으로 판사님을 뵙고 싶지 않았기 때문에 이 문제를 직접 수록할 수는 없었다. 아래 링크 중 하나를 클릭해서 pdf 파일을 내려받아 가장 마지막 페이지를 보면, 위의 그림과 아주 유사한 문제가 하나 있을 것이다. 여러분은 바로 그 문제를 해결해야만 한다.</p>

<ul>
	<li><a href="http://wdown.ebsi.co.kr/W61001/01exam/20061116/mathga1_mun.pdf">http://wdown.ebsi.co.kr/W61001/01exam/20061116/mathga1_mun.pdf</a></li>
	<li><a href="http://www.suneung.re.kr/boardCnts/fileDown.do?fileSeq=e7700624691c4dcb8a2cfc3f959204fe">http://www.suneung.re.kr/boardCnts/fileDown.do?fileSeq=e7700624691c4dcb8a2cfc3f959204fe</a></li>
</ul>

<p>문제를 그대로 내면 재미없기 때문에, 우리는 위 그림과 같이 33과 79가 적혀 있던 부분을 하얀색 직사각형으로 가렸다. 그림에서 흐릿하게 보이는 모든 부분은 원래 문제와 다르지 않다.</p>

<p>빈 칸에 들어갈 두 자연수가 주어졌을 때 문제를 해결하는 프로그램을 작성하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트 케이스의 수 T (1 ≤ T ≤ 50 000)가 주어진다. 이후 T개의 테스트 케이스가 주어진다. 각 테스트 케이스는 한 줄로 구성되어 있으며, 각 줄에는 두 개의 정수 A와 B (1 ≤ A, B ≤ 1 023, A ≠ B)가 공백을 사이로 두고 주어진다. 이는 첫 번째 빈 칸에는 A를, 두 번째 빈 칸에는 B를 넣었을 때 답을 구하라는 의미이다</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 답을 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
33 79
9 15
1022 1023
','40
10
5110
','MATH'),
                                                                                                                (2208,'BAEKJOON','https://www.acmicpc.net/problem/13117',13117,'가위바위보','2초','512 MB',19,'<p>N명의 코더스하이 참가자들이 스테이지에 모여 상품을 걸고 가위바위보를 하려 한다. 가위바위보는 승부가 날 때까지 계속 진행하며 승부가 갈렸을 경우 승자끼리, 패자끼리 가위바위보를 다시 시작한다. 그렇게 가위바위보를 진행하다 보면, 승자 그룹부터 차례대로 1등부터 N등까지 등수가 정해진다. 당연히 승부가 난 경우라 함은 참가자들이 제시한 것이 가위/바위/보 중 2가지로 구성된 경우이다.</p>

<p>예를들어 4명의 참가자 A, B, C, D가 가위바위보를 하여 A/C가 가위, B/D가 보를 낸 경우 A와 C가 서로 가위바위보를 하고 이 중 승자가 1등, 패자가 2등을 한다. 마찬가지로 B와 D가 서로 가위바위보를 한 뒤 승자가 3등, 패자가 4등을 하는 것이다.</p>

<p>참가자들에는 1부터 N번까지 번호가 매겨져 있는데, 그 중 1번 참가자인 태현이는 참가자들이 가위/바위/보를 낼 확률을 미리 알아내었다! 1등부터 N등까지 상품이 다양하지만 태현이가 원하는 상품은 K등을 했을 때 얻을 수 있다. 태현이가 원하는 상품을 얻을 확률을 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 N(2 ≤ N ≤ 12)과 K(1 ≤ K ≤ N)가 주어진다.</p>

<p>다음 N개의 줄에는 각 참가자가 가위, 바위, 보를 낼 확률을 나타내는 세 실수 s<sub>i</sub>, r<sub>i</sub>, p<sub>i</sub>(0 ≤ s<sub>i</sub>, r<sub>i</sub>, p<sub>i</sub> ≤ 1, s<sub>i </sub>+ r<sub>i </sub>+ p<sub>i</sub> = 1) 공백을 사이로 두고 주어진다. 각 실수는 소수점 아래 셋째 자리까지 주어질 수 있다. 각 참가자는 적어도 두 가지 이상의 모양을 제시함이 보장된다. (즉, 세 개의 실수 중 0은 최대 한 개이다)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>태현이가 원하는 상품을 얻을 확률을 출력한다. 출제진의 답과 절대 오차 또는 상대 오차가 10<sup>-4</sup>&nbsp;이하일 시 정답으로 인정한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 1
0.5 0.5 0
0.5 0 0.5
0 0.5 0.5
','0.33333333
','MATH'),
                                                                                                                (2210,'BAEKJOON','https://www.acmicpc.net/problem/13121',13121,'이진 탐색','2초','64 MB',22,'<p>지학이는 학생들에게 이진 탐색을 가르쳐주기 위해서 간단한 게임을 만들었다. 이 게임은 다음과 같은 과정으로 진행된다.</p>

<ol>
	<li>먼저 컴퓨터가 1 이상 <em>n</em> 이하의 정수 <em>x</em>를 무작위로 하나 정하고, 플레이어에게 <em>n</em>의 값을 알려준다.</li>
	<li>그 다음, 플레이어는 정수 <em>q</em>를 하나 정해서, 컴퓨터에게 “<em>x</em>가 <em>q</em> 이하입니까?”라는 질문을 원하는 만큼 한다. 질문할 때마다 컴퓨터는 ‘예’ 또는 ‘아니오’로 답해준다. 플레이어의 목적은 가능한 한 질문을 적게 하여, <em>x</em>의 값을 알아내는 것이다.</li>
	<li>플레이어가 자신이 <em>x</em>의 값을 알아냈다고 판단한다면, 플레이어가 추측한 <em>x</em>의 값을 <em>v</em>라고 할 때, 컴퓨터에게 “<em>x</em>의 값이 <em>v</em>입니까?”라는 질문을 단 한 번 할 수 있다. 컴퓨터는 플레이어가 추측한 <em>x</em>의 값이 정확하다면 ‘성공’을, 정확하지 않다면 ‘실패’를 출력하고, 게임을 종료한다.</li>
</ol>

<p>지학이는 수업 시간에 자신이 만든 게임을 하며 이진 탐색을 이해하는 학생들을 보며 뿌듯함을 느꼈다. 그런데 어느 날, 수업 준비를 하던 지학이는 충격적인 소식을 접했다. 지학이의 게임 설명을 들은 재현이가 ‘게임이 너무 쉽다’며 학생들에게 최적의 방법을 미리 알려주었다는 것이다. 자신이 열심히 구현한 게임이 모두 무용지물이 되어 버렸다는 생각에 화가 난 지학이는, 재현이가 먹던 허니버터칩을 뺏는 정도의 복수로는 분을 풀 수 없겠다고 생각하여, 재현이에게 추가 과제를 내 주기로 하였다.</p>

<p>지학이는 게임을 약간 고쳐서, 컴퓨터가 정한 수가 x일 때, 플레이어가 추측한 수가 정확할 뿐만 아니라 그 때까지 한 질문의 수가 <em>a<sub>x</sub></em>번 이하일 때에만 ‘성공’이라고 출력하고, 그렇지 않을 때에는 ‘실패’라고 출력하도록 게임을 바꿔버렸다. 그리고 지학이는 정렬된 수열이 아름답다고 생각하기 때문에, 수열 {<em>a<sub>x</sub></em>} 가 단조증가하도록(즉, <em>a<sub>1</sub></em> ≤ <em>a<sub>2</sub></em> ≤ · · · ≤ <em>a<sub>n</sub></em>을 만족하도록) 하였다. 재현이에게 주어진 추가 과제는, 이렇게 지학이가 바꾼 게임이 컴퓨터가 정한 <em>x</em>의 값과 관계없이 항상 ‘성공’을 출력하도록 하는 질문을 하는 방법을 찾는 것이다.</p>

<p>숙제를 받을 때만 해도 자신만만하던 재현이는, 게임을 몇 번 시도해보다가, 해답을 찾지 못하자, 지학이에게 ‘그런 방법은 없다’고 주장하며 강력하게 항의했다. 이에 지학이는 그런 방법이 존재함을 증명하려고 했으나, 사실 이 숙제는 지학이가 재현이에게 복수하기 위해 대충 만든 것이었기에 지학이도 아는 게 별로 없었고, 결국 증명에 실패하였다.</p>

<p>어떻게든 증명을 해내고 싶었던 지학이는 당신에게 도움을 요청하였다. 당신이 해야 할 일은, 지학이가 바꾼 게임에서 컴퓨터가 항상 ‘성공’을 출력하도록 하는 방법이 있는지를 확인하고, 존재한다면 첫 번째 질문으로 물어봐도 되는 <em>q</em>의 값을 모두 구하는 것이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 <em>n</em>(1 ≤ <em>n</em> ≤ 1 000 000)이 주어진다.</p>

<p>두 번째 줄에 <em>n</em>개의 정수 <em>a<sub>1</sub></em>, <em>a<sub>2</sub></em>, . . . , <em>a<sub>n</sub></em>(1 ≤ <em>a<sub>1</sub></em> ≤ <em>a<sub>2</sub></em> ≤ . . . ≤ <em>a<sub>n</sub></em> ≤ 10<sup>9</sup>)이 공백을 사이에 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에, 첫 번째 질문으로 물어봐도 되는 <em>q</em>의 가짓수를 출력한다. 단, 첫 번째 질문으로 물어봐도 되는 <em>q</em>가 무한히 많다면 “<code>inf</code>”(따옴표 제외)를 대신 출력한다.</p>

<p>두 번째 줄에는, 첫 번째 질문으로 물어봐도 되는 <em>q</em>의 값들을 공백을 사이에 두고 오름차순으로 출력한다. 단, 첫 번째 질문으로 물어봐도 되는 <em>q</em>가 0개이거나 무한히 많다면 아무것도 출력하지 않아야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 2 2
','1
1
','MATH'),
                                                                                                                (2215,'BAEKJOON','https://www.acmicpc.net/problem/13127',13127,'도박과 사각형','1초','256 MB',21,'<p>1×1 크기의 정사각형 격자가 정사각형 형태로 배열된 N행 N열의 격자판이 있고, 격자판의 각 격자에는 1 이상 5 이하의 자연수가 하나씩 적혀 있다. 당신은 이 격자판을 활용하여 도박장을 운영해보려고 한다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/13127/fig1.png" style="height:93px; width:93px"></p>

<p style="text-align: center;"><em>N</em> = 4일 때 가능한 격자판의 예</p>

<p>당신이 생각해낸 도박 방법은 아래와 같다. 우선 아래 그림과 같이, 격자판의 각 변을 연장하여 세로선 <em>N</em> + 1개와 가로선 <em>N</em> + 1개를 만든다. 그 후, 고객에게 서로 다른 가로선 2개와 세로선 2개를 택하도록 한다. 고객은 가로선과 세로선이 어디에 그어져 있는지 모르는 상태로 선택하기 때문에, 가능한 <em>N</em>(<em>N</em>+1)/2 × <em>N</em>(<em>N</em>+1)/2 가지의 경우 중 하나를 무작위로 선택할 것이다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/13127/fig2.png" style="height:122px; width:295px"></p>

<p style="text-align: center;">격자판에 5개의 세로선과 5개의 가로선이 있고, 고객은 이 중 세로선 두 개와 가로선 두 개를 선택한다.</p>

<p>그 후, 당신은 고객이 선택한 선들로 둘러싸인 직사각형을 가지고 점수를 매겨, 고객에게 그 점수에 해당하는 돈을 줄 것이다. 점수를 매기는 방법은 간단하다. 먼저 직사각형 내에 있는 1, 2, 3, 4, 5의 개수를 세어, 각각 <em>c<sub>1</sub></em>, <em>c<sub>2</sub></em>, <em>c<sub>3</sub></em>, <em>c<sub>4</sub></em>, <em>c<sub>5</sub></em>라고 둔다. 그 후, 고객이 받는 점수 <em>S</em>를 아래 공식에 대입하여 계산한다.</p>

<p style="text-align: center;"><em>S</em> = 1 × <em>c<sub>1</sub></em><sup>2</sup> + 2 × <em>c<sub>2</sub></em><sup>2</sup> + 3 × <em>c<sub>3</sub></em><sup>2</sup> + 4 × <em>c<sub>4</sub></em><sup>2</sup> + 5 × <em>c<sub>5</sub></em><sup>2</sup></p>

<p>개수에 제곱을 붙임으로써, 고객의 선택으로 만들어진 직사각형이 커지면 커질수록 점수 <em>S</em>가 더 많이 늘어나는 효과가 생기고, 이는 도박성을 강화하여 더 많은 고객을 유치하는 데에 도움을 줄 것이다. 이제 당신에게 남은 것은 판돈을 정하는 것인데, 이를 위해 고객이 받는 점수 <em>S</em>의 기댓값을 구해야 한다.</p>

<p>격자판이 주어질 때, <em>S</em>의 기댓값을 구하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 격자판의 크기를 나타내는 자연수 <em>N</em> (1 ≤ <em>N</em> ≤ 1 000)이 주어진다.</p>

<p>다음 <em>N</em>개의 줄에는 각각 1 이상 5 이하의 자연수 <em>N</em>개가 공백을 사이로 두고 주어진다. <em>i</em>번째 줄에 주어지는 <em>j</em>번째 수(1 ≤ <em>i</em> ≤ <em>N</em>, 1 ≤ <em>j</em> ≤ <em>N</em>)는 격자판의 위에서부터 <em>i</em>번째 행, 왼쪽에서부터 <em>j</em>번째 열에 적혀 있는 수를 의미한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 <em>S</em>의 기댓값을 출력한다. 출제진의 답과 절대 오차 또는 상대 오차가 10<sup>?4</sup> 이하일 시 정답으로 인정한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
3
','3.0000000000
','MATH'),
                                                                                                                (2268,'BAEKJOON','https://www.acmicpc.net/problem/13165',13165,'이것도 해결해 보시지','5초','512 MB',21,'<p>명우76는 UCPC 문제를 푸는 것을 매우 좋아했었다. 이젠 아니야(Not anymore).</p>

<p style="text-align:center">“이 시간부로 나는 이제 출제자다.”</p>

<p>명우76는 당신의 연습을 위해 다음과 같은 문제를 준비했다.</p>

<p>N×L 크기의 행렬 A가 주어지면, 행렬 내의 연속된 3N 길이의 부분 열을 잡는다. 이때, 이 3N 길이의 부분 열을 N열씩 나눠 3개의 N×N행렬을 만들고 이를 앞에서부터 A, B, C라고 하자. 이때 A×B=C를 만족하면, 행렬 A내에서 선택한 N×3N행렬 부분을 색칠할 수 있다.</p>

<p>하지만 색칠하려고 하는 N×3N 부분 중 일부가 이미 색칠되어 있다면, 당신은 이 부분을 색칠할 수 없다. 이와 같은 규칙이 존재할 때 적당한 순서로 행렬을 색칠해서, 최대한 많은 숫자를 칠하고 싶다. 이때 칠할 수 있는 숫자의 최대 개수를 구하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 두 개의 정수 N(1 ≤ N ≤ 256)과 L(1 ≤ N×L ≤ 1,024,000)이 주어진다. 그 후, N개의 줄에 걸쳐 줄마다 행렬 A의 수를 나타내는 정수 A<sub>ij</sub> (0 ≤ A<sub>ij</sub> ≤ 7,676,767)가 L개씩 순서대로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>색칠할 수 있는 숫자의 최대 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 7
1 2 2 7 3 3 9
','6
','MATH'),
                                                                                                                (2272,'BAEKJOON','https://www.acmicpc.net/problem/13170',13170,'떨어진 수정','1초','512 MB',7,'<p>마나 수정 M개가 신 나무스트럼에 떨어졌다. 마나 수정이 떨어진 후 되살아난 시체들로부터 마을을 지켜야 한다. 마을의 수장 Marko는 전투를 통해 되살아난 시체들을 만든 마법사 Kul’den을 생포하는 데 성공했다. Kul’den을 심문한 결과 M개의 마나 수정이 되살아난 시체에게 마나 공급을 하고 있으며, 이것들을 모두 파괴하면 되살아난 시체들이 멈춘다는 사실을 알아내었다. Marko는 마을에 있는 둔 망치를 사용해 마나 수정을 모두 파괴하기로 했다. 둔 망치는 한 번에 하나의 마나 수정에만 힘을 가할 수 있다.</p>

<p>Marko가 둔 망치를 이용해 마나 수정을 하나씩 파괴하던 도중, 큰 폭발이 일어났다. 이 폭발로 묶인 채로 마나 수정의 파괴를 옆에서 지켜보던 Kul’den은 부상을 입었지만, 되살아난 시체를 불러온 당사자를 치료해줄 마을 사람은 없었다.</p>

<p>마을의 대 마법사 매디브는 폭발의 원인을 분석했고, 그 결과 신 나무스트럼 마을에 떨어진 M개의 마나 수정 중 일부에 큰 마나가 응집되어 있는 것을 알게 되었다. 이러한 마나 수정을 파괴할 수 있는 최소 힘에 비해 너무 강한 힘으로 파괴하면, 마나 수정 속의 응집되어 있던 마나가 과부하를 일으켜 큰 폭발이 일어나게 된다.</p>

<p>하지만 매디브는 어떤 마나 수정에 큰 마나가 응집되어 있는지 판별할 능력이 없었다. 고민 끝에, 마을의 샤먼 타사다르를 찾아갔다. 타사다르가 남아있는 마나 수정들을 감정한 결과, 남은 마나 수정 중 단 하나만이 큰 마나가 응집되어 있다는 것을 파악할 수 있었다. 즉, 남아있는 마나 수정들 중 단 하나의 마나 수정만이 파괴 시 폭발할 가능성이 있다는 뜻이다. 하지만 폭발할 가능성이 있는 마나 수정이라도 이를 적당한 힘으로 파괴한다면(필요한 힘보다 월등히 강력한 힘으로 파괴하지 않는다면) 폭발 없이 파괴할 수 있을 것이다.</p>

<p>타사다르는 남은 N개의 마나 수정들 중 어떤 것에 마나가 응집되어 있는지 판별하기 위해, 각 마나 수정의 무게와 부피, 표면적을 측정했다. 이 값과 비수사의 고서에 기록된 방식을 이용해 폭발 가능성이 있는 마나 수정을 판별해냈지만, 여전히 이 마나 수정에 어느 정도의 힘을 가해야 폭발 없이 파괴할 수 있는지는 모른다.</p>

<p>각 마나 수정의 강도는 무게를 부피로 나눈 값에 비례한다. 하지만 어떻게 비례하는지는 모르기 때문에, 정확한 값은 파악할 수 없다. 대신 두 마나 수정이 있으면 어떤 수정이 더 강도가 높은 지 비교하는 방법은 있다. 이를 통해 모든 마나 수정 쌍을 최대한 비교한 결과, N개의 마나 수정은 모두 서로 다른 강도를 가지고 있다는 사실을 파악했고, 마나가 응집되어 있는 마나 수정은 남은 N개의 마나 수정 중에 K번째로 강한 강도를 가지고 있다는 것을 알아냈다. 즉, 마나가 응집되어 있어 폭발 가능성이 있는 마나 수정보다 (K-1)개의 마나 수정이 더 강한 강도를 가지고 있고, (N-K)개의 마나 수정이 더 약한 강도를 가지고 있다는 뜻이다. 또한, 각각의 마나 수정들 사이의 강도 순서가 어떤 지도 이미 알고 있다!</p>

<p>둔 망치로 마나 수정을 내리치는 힘을 정교하게 조정하기 위해, 마을에서 가장 망치를 잘 다루는 마을의 대장장이 린드홀에게 둔 망치를 이용해 마나 수정을 파괴하도록 하려고 한다. 마을의 대장장이 린드홀은 둔 망치를 내리칠 때 이를 P이하의 힘으로 내리칠 수 있다. 린드홀은 망치를 매우 잘 다루기 때문에, 마음속으로 P이하의 양의 실수 p를 상상하며 힘을 조절해 망치를 내리칠 경우, 마나 수정에 정확히 p의 힘을 가할 수 있다. 린드홀의 힘과 둔 망치는 마나 수정을 파괴하기에 충분히 강력하므로 최대 파워인 P의 힘으로 내리치면 어떤 마나 수정이던 한 번에 파괴할 수 있다. (하지만 이렇게 마나가 응집된 마나 수정을 한 번에 파괴한다면, 필요 이상의 큰 힘을 가하게 되어 마나 수정이 폭발할지도 모른다!)</p>

<p>각 N개의 마나 수정의 강도는 N개의 서로 다른 양의 실수로 표현될 수 있는데, 모든 강도는 P이하임이 보장된다. 마나 수정의 강도가 X인 경우, X이상의 힘으로 둔 망치를 내리치면 마나 수정은 파괴되어 사라진다.(사라진 마나 수정에는 더 이상 망치를 내리칠 수 없다!) 반면 X미만의 힘으로 내리치면 아무런 변화가 없다. 응집된 마나 수정은 그 강도 보다 W이상 강한 힘으로 내리치면, 응집된 마나가 과부하를 일으켜 큰 폭발이 일어나게 된다. 이러한 폭발이 일어날 수 있는 경우는 무조건 피하려고 한다.</p>

<p>각 마나 수정의 강도 순서는 알고 있지만, 실제 강도는 알지 못한다. 하지만 우리는 최악의 경우를 대비하려고 한다. 마나가 응집된 마나 수정은 굉장히 위험하기 때문에, 최대한 빠르게 파괴하고 싶다. 당신의 임무는 린드홀에게 몇 번째로 강한 강도의 마나 수정을 얼마만큼의 힘으로 내리칠지 명령하여, 최악의 경우에 망치를 내리치는 횟수를 최소화하는 전략을 사용하고자 한다. 이러한 전략을 사용 했을 때 최악의 경우 망치를 내리쳐야 하는 횟수를 구하여라. (폭발할 가능성이 조금이라도 있는 명령을 내린다면, 린드홀은 둔 망치를 휘둘러 당신의 명치를 파괴할 것이다. 이러한 경우는 피해야 한다.)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 네 개의 정수 N, K, P, W가 주어진다. 이는 순서대로 남아있는 마나 수정의 수 N(1 ≤ N ≤ 1,000)과 마나가 응집된 마나 수정의 강도 순위를 나타내는 K(1 ≤ K ≤ N), 둔 망치의 최대 파워 P(1 ≤ P ≤ 2,000), 폭발 위험이 있는 힘 차이 W(1 ≤ W ≤ P)를 의미한다. 각 마나 수정의 강도를 표현 불가능한 경우는 주어지지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>최악의 경우 마나가 응집된 마나 수정을 파괴하기까지 내리치는 횟수를 최소화하는 전략을 사용했을 때, 마나가 응집된 마나 수정을 파괴하기까지 망치를 내리치는 최대 횟수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 1 90 25
','4
','MATH'),
                                                                                                                (2273,'BAEKJOON','https://www.acmicpc.net/problem/13172',13172,'Σ','1초','512 MB',12,'<p>실제로 존재하는지 아닌지는 차치하고, 당신에게 삼면체 주사위가 있어서 이 주사위를 굴린다고 생각해보자. 주사위를 굴렸을 때 각 면이 나올 확률은 모두 동일하게 1/3 이다. 한 면에는 1, 다른 한 면에는 2, 남은 한 면에는 4가 적혀있다고 하면 주사위를 굴렸을 때 나오게 되는 숫자의 기댓값은 과연 몇일까? 간단하게도 셋의 평균인 7/3이 될 것이다.</p>

<p>이 문제를 조금 확장해서, "N면체 주사위의 각 면에 적힌 수가 주어졌을 때, 주사위를 굴렸을 때 각 면이 나올 확률이 모두 같다면 주사위를 굴렸을 때 나오게 되는 수의 기댓값은 과연 몇일까?"라는 문제가 주어졌다고 하자. 위의 예시에 대한 답을 소수로 출력한다면 2.33333333...일텐데, 무한한 자릿수를 모두 출력할 수는 없으니 적당히 끊어서 출력할 것이고, 이 끊긴 소수를 채점 프로그램이 다시 입력받아서 정답과 비교한다고 하면 결과가 얼마나 부정확할 것인가? 그렇기에 답을 정확히 판별하기 위해 출력하고자 하는 분수를 <a href="https://ko.wikipedia.org/wiki/%EA%B8%B0%EC%95%BD%EB%B6%84%EC%88%98">기약분수</a>로 만들어 분모와 분자를 직접 출력하도록 했던 시기가 있었다.</p>

<p>이제 문제를 조금 더 확장하여, M개의 주사위가 있어서 이 중 i번째 주사위가 N<sub>i</sub>면체 주사위이고 모든 면에 적힌 수를 더한 값이 S<sub>i</sub>일 때, 각 주사위에 대해서 주사위를 던졌을 때 주사위의 각 면이 나올 확률이 동일하다고 가정한 상태에서 모든 주사위를 각각 한 번씩 던졌을 때 나온 수들의 합의 기댓값을 구하는 문제를 만들었다. 확률변수 X의 기댓값을 E(X)로 나타내면, 기댓값의 선형성에 의해서 두 확률변수 X, Y에 대해 E(X + Y) = E(X) + E(Y)가 성립하므로, 이 문제의 답을 아래와 같이 간단하게 나타낼 수 있다.</p>

<p style="text-align: center;">S<sub>1</sub>/N<sub>1</sub> + S<sub>2</sub>/N<sub>2</sub> + ... + S<sub>M</sub>/N<sub>M</sub></p>

<p>즉, 각 주사위에서 나오게 되는 수의 기댓값을 모두 더하면 답이 되는 것이다. 이 답을 정확하게 출력하기 위해, 모든 분수(여기서는 각 주사위의 기댓값)를 통분한다고 생각해보자. 이 분수의 분모와 분자의 값이 어떤 범위까지 치솟게 될 것인가? 즉, 분모와 분자를 모두 저장하고 있게 되면, 두 분수의 합을 구할 때 분모와 분자를 적정한 범위 내에서 계산해낼 수 없다는 문제에 부딪히게 된다. "그렇다면 분모와 분자를 어떤 모듈러 상에서 가지고 있으면 되지 않을까?"라고 생각할 수 있지만, 그러면 분모와 분자를 약분할 수가 없게 된다. 그렇기에, 분수를 다음과 같이 모듈러 상에서 하나의 정수로 가지고 있는 방법을 채택하게 되었다.</p>

<p>어떤 분수가 기약분수로 나타냈을 때 a/b이면, 이 분수는 a × b<sup>-1</sup> mod X (X는 소수)으로 대신 계산하도록 한다. 여기서 b<sup>-1</sup>은 b의 모듈러 곱셈에 대한 역원이다.</p>

<p>b의 모듈러 곱셈에 대한 역원 b<sup>-1</sup>은 대체 어떤 수인 것일까? 이 수는 다음과 같은 성질을 만족하는 정수이다.</p>

<p style="text-align: center;">b<sup>-1</sup> × b ≡ 1(mod X)</p>

<p>소수 모듈러에서만 성립하는 페르마의 소정리에 의해 b<sup>X - 1</sup> ≡ 1 (mod X)가 성립하기에, b<sup>X - 2</sup> ≡ b<sup>-1</sup> (mod X) 역시 성립함을 알 수 있다.</p>

<p>이해를 돕기 위해 X를 11로 두고 Q = 7/3 을 계산해보자. 3<sup>-1</sup> ≡ 4 (mod 11)이므로, Q ≡ 7 × 4 ≡ 6 (mod 11)이다. 이 Q에 3을 곱한 다음 11로 나눈 나머지를 구해 보면 7이 나오므로, 6이라는 정수가 7/3을 적절히 저장하고 있다는 것을 알 수 있다.</p>

<p>분수(유리수)를 이와 같은 방식으로 나타낸다면, 두 분수의 덧셈, 뺄셈, 곱셈은 mod X에서 두 정수를 가지고 계산하듯이 처리하고, 나눗셈은 나누는 분수의 곱셈에 대한 역원을 구한 후 그 역원을 mod X에서 곱하는 것으로 처리한다면, 분수를 정확히 출력하기 위해 통분을 하거나 기약분수로 만드는 골치아픈 일을 할 필요가 없어진다!</p>

<p>그러나 이 방법에도 문제가 있는 것은 마찬가지이다. 앞의 예에서 7/3을 6으로 저장했지만, 그냥 6/1도 6으로 저장할 것이다. 즉 서로 다른 두 분수도 모듈러 상에서 같은 정수로 저장하여, 정확한 판별을 한다는 우리의 목적에 부합하지 않는 것이다. 또다른 문제로는, 분모가 소인수로 X를 가질 때에는 역원을 계산할 수 없어서 모듈러로 나타낼 수가 없다는 점이 있다. 이러한 문제를 해결하기 위해 모듈러를 1,000,000,007와 같은 큰 소수로 하는데, 이를 통해 서로 다른 두 분수가 같은 정수로 나타나게 되는 확률을 낮추고, 분모가 가질 수 있는 소인수의 범위를 늘리는 효과를 볼 수 있다. 그는 이런 방식이 그래도 가장 정확한 방식이라고 생각하게 되었다.</p>

<p>이제 이 방식으로 M 개의 주사위가 있고, i번째 주사위가 N<sub>i</sub>면체 주사위이며, 모든 면에 적힌 숫자를 더한 값이 S<sub>i</sub>일 때, 각 주사위에 대해서 주사위를 던졌을 때 주사위의 각 면이 나올 확률이 동일하다면, 모든 주사위를 한 번씩 던졌을 때 나온 숫자들의 합의 기댓값을 구하는 문제를 해결해보자.</p>

<p>&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 주사위의 수를 나타내는 정수 M(1 ≤ M ≤ 10<sup>4</sup>)이 주어진다.</p>

<p>다음 M개의 줄은 각 주사위의 정보를 나타내며, 이 중 i(1 ≤ i ≤ M)번째 줄에는 N<sub>i</sub>, S<sub>i</sub>(1 ≤ N<sub>i</sub>, S<sub>i</sub> ≤ 10<sup>9</sup>)가 공백으로 구분되어 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>모든 주사위를 한 번씩 던졌을 때 나온 숫자들의 합의 기댓값을 출력한다. 정확한 판별을 위해, 답을 기약분수로 나타내었을 때 a/b가 된다면, (a × b<sup>-1</sup>) mod 1,000,000,007을 대신 출력하도록 한다. b<sup>-1</sup>은 b의 모듈러 곱셈에 대한 역원이다. 이 문제에서는 가능한 모든 입력에 대해 답이 존재한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>모듈러가 11에서 1,000,000,007이 되어 답이 달라졌지만, 역시 3을 곱한 다음 1,000,000,007으로 나눈 나머지는 7이 된다.</p>

				</div>
				</div>','1
3 7
','333333338
','MATH'),
                                                                                                                (2275,'BAEKJOON','https://www.acmicpc.net/problem/13173',13173,'Ω','1초','512 MB',16,'<p>이제 조금 더 어려운 문제를 해결해 보자. 당신은 지금 P면체 주사위를 굴리고 있다. 각 면에는 1 이상 P 이하의 자연수가 하나씩 적혀 있으며, 주사위를 굴렸을 때 각 면이 나올 확률은 모든 면에 대해 동일하다. 이제 다음과 같은 놀이를 할 것이다.</p>

<ul>
	<li>처음에는 K라는 수를 가지고 있다.</li>
	<li>가지고 있는 수가 0이거나 N이면 놀이를 끝낸다. 놀이가 끝나지 않았다면 주사위를 굴린다. 만약에 Q 이하인 수가 나오면 현재 가지고 있는 수에서 1을 빼주고, 아니라면(즉 Q 초과의 수가 나오면) 1을 더해준다. 이를 계속 반복한다.</li>
</ul>

<p>놀이가 끝났을 때 가지고 있는 수가 N일 확률을 구하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 정수 P(1 ≤ P ≤ 100)가 주어진다.</p>

<p>두 번째 줄에는 정수 Q(0 ≤ Q ≤ P)가 주어진다.</p>

<p>세 번째 줄에는 정수 N(1 ≤ N ≤ 100)이 주어진다.</p>

<p>네 번째 줄에는 정수 K(0 ≤ K ≤ N)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>놀이가 끝났을 때의 숫자가 N 일 확률을 출력한다. 정확한 판별을 위해,&nbsp;답을 기약분수로 나타내었을 때 a/b가 된다면, (a × b<sup>-1</sup>) mod 1,000,000,007을 대신 출력하도록 한다. b<sup>-1</sup>은 b의 모듈러 곱셈에 대한 역원이다. 이 문제에서는 가능한 모든 입력에 대해 답이 존재한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
2
5
3
','903225813
','MATH'),
                                                                                                                (2280,'BAEKJOON','https://www.acmicpc.net/problem/13174',13174,'괄호','2초','512 MB',22,'<p><strong>올바른 괄호 문자열</strong>이란 다음과 같은 문자열의 집합이다.</p>

<ul>
	<li>빈 문자열은 올바른 괄호 문자열이다.</li>
	<li>S가 올바른 괄호 문자열이면 (S)도 올바른 괄호 문자열이다. 즉 올바른 괄호 문자열의 앞에 여는 괄호를 붙이고 뒤에 닫는 괄호를 붙여도 올바른 괄호 문자열이다.</li>
	<li>S와 T가 올바른 괄호 문자열이면 ST도 올바른 괄호 문자열이다. 즉 올바른 괄호 문자열을 이어 붙여도 올바른 괄호 문자열이다.</li>
</ul>

<p>그는 괄호 문자열을 매우 좋아한다. 하지만 괄호의 종류를 하나만 사용해왔던 것이 너무 재미가 없어서 서로 구별할 수 있는 K 개의 색을 괄호에 칠하기로 했다. 예를 들어 K = 3 이고 빨간색, 녹색, 파란색을 사용하기로 했다면 위의 정의에서 두 번째 부분이 아래처럼 확장된다.</p>

<ul>
	<li>S가 올바른 괄호 문자열이면 <span style="color:#F00000"><strong>(</strong></span>S<span style="color:#F00000"><strong>)</strong></span>, <span style="color:#00B050"><strong>(</strong></span>S<span style="color:#00B050"><strong>)</strong></span>, <span style="color:#0070C0"><strong>(</strong></span>S<span style="color:#0070C0"><strong>)</strong></span>도 올바른 괄호 문자열이다. 즉 올바른 괄호 문자열의 앞에 여는 괄호를 붙이고 뒤에 닫는 괄호를 붙여도 올바른 괄호 문자열이다.</li>
</ul>

<p>K 가 더 늘어나면 구별 가능한 색을 더 추가해서 정의를 확장하면 된다. 이제 2N 개의 괄호를 사용하여 만든 올바른 문자열 중에서 자기 자신과 자기 자신을 뒤집은 문자열이 같은 것들의 개수를 구하는 프로그램을 작성하라. 어떤 문자열을 뒤집는다는 것은 문자열을 거울에 비춘 다음 거울에 비친 모양대로 적는다는 것과 같다. 예를 들어 <span style="color:#F00000"><strong>(</strong></span><span style="color:#00B050"><strong>()</strong></span><span style="color:#F00000"><strong>)</strong></span><span style="color:#0070C0"><strong>()</strong></span>를 뒤집으면 <span style="color:#0070C0"><strong>()</strong></span><span style="color:#F00000"><strong>(</strong></span><span style="color:#00B050"><strong>()</strong></span><span style="color:#F00000"><strong>)</strong></span>가 될 것이다. 이 문자열은 자기 자신과 뒤집은 문자열이 같지 않으므로 세면 안 된다. <span style="color:#0070C0"><strong>()</strong></span><span style="color:#F00000"><strong>(</strong></span><span style="color:#00B050"><strong>()</strong></span><span style="color:#F00000"><strong>)</strong></span><span style="color:#0070C0"><strong>()</strong></span>는 뒤집어도 똑같이 <span style="color:#0070C0"><strong>()</strong></span><span style="color:#F00000"><strong>(</strong></span><span style="color:#00B050"><strong>()</strong></span><span style="color:#F00000"><strong>)</strong></span><span style="color:#0070C0"><strong>()</strong></span>가 될 것이므로 개수를 세어야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 사용하는 괄호의 개수와 괄호의 색을 나타내는 두 자연수 N, K 가 공백으로 구분되어 주어진다. (1 ≤ N ≤ 10<sup>6</sup>, 1 ≤ K ≤ 10<sup>6</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>K 종류의 괄호를 2N 개 사용해 올바른 괄호 문자열을 만들었을 때, 자기 자신과 자기 자신을 뒤집은 문자열이 같은 것들의 개수를 출력한다. 이 수는 매우 커질 수 있으므로 1,000,000,007로 나눈 나머지를 출력해야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>다음의 6가지 경우가 있을 수 있다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/13174/1.png" style="height:64px; width:254px"></p>

				</div>
				</div>','2 2
','6
','MATH'),
                                                                                                                (2277,'BAEKJOON','https://www.acmicpc.net/problem/13175',13175,'능력','2초','512 MB',21,'<p>그는 요즘 여러 능력을 가지고 몬스터들과 싸우는 웹게임을 열심히 하고 있다. 그는 지금 N개의 공격 능력을 가지고 있고 이 모든 능력을 장착하고 있다. 그는 능력들을 편하게 관리하고자 각 능력에 1 이상 N 이하의 자연수 번호를 붙였다.</p>

<p>i번 능력에는 그 능력이 발동될 확률 p<sub>i</sub>와 상대에게 입히는 피해량 d<sub>i</sub>가 책정되어 있다. 따라서 그가 i번 능력에 발동 명령을 내리면, p<sub>i</sub>의 확률로 능력이 발동되어 상대에게 d<sub>i</sub>만큼의 피해를 입히고, (1 - p<sub>i</sub>)의 확률로 능력이 발동되지 않아 아무 일도 일어나지 않는다. 그가 어떤 능력(들)을 장착한 채로 상대방을 공격할 기회를 얻었다면, 아래 과정이 일어난다:</p>

<p>가지고 있는 모든 능력들 중 하나를 임의로 고른다. 모든 능력을 고를 확률은 서로 같다. 고른 능력에 발동 명령을 내린다. 만약 이 능력이 발동되었다면, 공격 기회를 잃고 과정이 끝난다. 하지만 이 능력이 발동되지 않았다면, 아직 발동 명령을 내려 보지 않은 능력들 중 하나를 동일한 확률로 고른 후, 다시 발동 명령을 내린다. 만약 능력이 발동되었다면 공격 기회를 잃은 후 과정을 끝내고, 발동되지 않았다면 같은 과정을 더 이상 발동 명령을 내려 보지 않은 능력이 없을 때까지 반복한다. 모든 능력에 발동 명령을 내렸음에도 발동된 능력이 하나도 없으면 공격 기회를 잃는다.</p>

<p>현재 그가 장착하고 있는 N개의 능력이 발동될 확률과 상대에게 입히는 피해량이 주어질 때, 한 번의 공격 기회에서 주게 되는 피해량의 기댓값을 구하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 능력의 수를 나타내는 자연수 N (1 ≤ N ≤ 5,000)이 주어진다.</p>

<p>다음 N개의 줄에는 능력들의 정보가 주어진다. 이 중 i (1 ≤ i ≤ N)번째 줄에는 i번 능력이 발동될 확률과 상대에게 입히는 피해량을 의미하는 두 정수 p<sub>i</sub>, d<sub>i</sub> (1 ≤ p<sub>i</sub>, d<sub>i</sub> ≤ 10<sup>9</sup>)이 공백을 사이로 두고 주어진다. 이는 i번 능력은 p<sub>i</sub> / 10<sup>9</sup>의 확률로 발동하는 능력이며 상대에게 d<sub>i</sub>만큼의 피해를 입힌다는 의미이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>그가 한 번의 공격 기회에서 주게 되는 피해량의 기댓값을 출력한다.&nbsp;정확한 판별을 위해, 답을 기약분수로 나타내었을 때 a/b가 된다면, (a × b<sup>-1</sup>) mod 1,000,000,007을 대신 출력하도록 한다. b<sup>-1</sup>은 b의 모듈러 곱셈에 대한 역원이다. 이 문제에서는 가능한 모든 입력에 대해 답이 존재한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
500000000 10
','5
','MATH'),
                                                                                                                (2278,'BAEKJOON','https://www.acmicpc.net/problem/13177',13177,'로봇','1초','512 MB',25,'<p>xy평면의 원점에 로봇이 서 있다. 로봇은 x축 양의 방향을 바라보고 있으며, 지금부터 N 번 움직이려고 한다. 로봇이 한 번 움직이는 과정은 다음과 같다.</p>

<ol>
	<li>먼저 로봇은 L/(L+M+R)의 확률로 자신이 바라보는 방향의 왼쪽으로 90도 돌고, M/(L+M+R)의 확률로 방향을 바꾸지 않으며, R/(L+M+R)의 확률로 자신이 바라보는 방향의 오른쪽으로 90도 돈다.
	<ul>
		<li>예를 들어, 처음 상태에서는 로봇이 왼쪽으로 90도 돌면 y축 양의 방향을 바라보게 되고, 오른쪽으로 90도 돌면 y축 음의 방향을 바라보게 된다.</li>
	</ul>
	</li>
	<li>1번 과정이 끝나고 나서, 로봇은 자신이 바라보고 있는 방향으로 1의 거리를 움직인다.</li>
</ol>

<p>로봇이 N번 움직인 결과 좌표 (x, y)에 위치해 있다면, 로봇이 원점으로부터 떨어져 있는 정도는 x<sup>2</sup> + y<sup>2</sup>로 나타난다. 로봇이 N 번 움직인 다음 원점으로부터 떨어져 있는 정도의 기댓값을 구하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 로봇이 움직일 횟수, 왼쪽으로 방향을 바꿀 확률, 가만히 있을 확률, 오른쪽으로 방향을 바꿀 확률을 결정하는 네 정수 N, L, M, R이 공백으로 구분되어 주어진다. L, M, R 중 적어도 하나는 양의 정수이다. (1 ≤ N ≤ 10<sup>9</sup>, 0 ≤ L, M, R ≤ 10<sup>6</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>로봇이 N 번 이동한 다음 원점으로부터 떨어져 있는 정도의 기댓값을 출력한다.&nbsp;정확한 판별을 위해, 답을 기약분수로 나타내었을 때 a/b가 된다면, (a × b<sup>-1</sup>) mod 1,000,000,007을 대신 출력하도록 한다. b<sup>-1</sup>은 b의 모듈러 곱셈에 대한 역원이다. 이 문제에서는 가능한 모든 입력에 대해 답이 존재한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 1 0 1
','5
','MATH'),
                                                                                                                (2279,'BAEKJOON','https://www.acmicpc.net/problem/13178',13178,'목공','7초','512 MB',24,'<p>목공을 시작한 그는 기본기를 쌓기 위해 나무 상자를 만드는 것을 반복하고자 한다. 나무 상자 하나는 N개의 나무판자를 이어 붙여 만들 수 있다. 이렇게 만들어진 나무 상자는 어차피 공간만 차지하므로 다시 나무판자로 분해하여 새로운 나무 상자를 만들기 위해 사용한다. 나무 상자를 분해하여 새로 얻을 수 있는 온전한 나무판자의 수는 N개보다 작으며(N개 미만), 상자를 언제나 잘 분해할 수는 없기에 그는 확률적으로 나무판자를 얻게 된다. 모든 0 ≤ i < N에 대해 나무 상자를 분해하여 나무판자 i개를 얻을 확률은 정수 q<sub>i</sub>에 비례함이 알려져 있으며, q<sub>i</sub>/(q<sub>0</sub>&nbsp;+ q<sub>1</sub>&nbsp;+ ... + q<sub>N-1</sub>)로 계산된다.</p>

<p>그는 현재 M개의 나무판자를 가지고 있으며, 나무 상자를 만들 수 없을 때까지 계속해서 나무 상자를 만들 것이다. 그가 만들게 되는 나무 상자 수의 기댓값을 구하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 나무 상자를 만드는데 필요한 나무 판자의 수와 그가 가지고 있는 나무 판자의 개수를 나타내는 두 자연수 N과 M이 공백으로 구분되어 주어진다.</p>

<p>다음 N개의 줄의 i번째 줄에는 나무 상자를 분해했을 때, 나무 판자 i-1개를 얻게 되는 확률을 의미하는 음이 아닌 정수 q<sub>i-1</sub> 이 주어진다. q<sub>0</sub> + q<sub>1</sub> + ... + q<sub>N-1</sub>은 1 이상 10<sup>9</sup> 이하임이 보장된다. (1 ≤ N ≤ 16,000, 0 ≤ M ≤ 10<sup>12</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>그가 만들게 되는 나무 상자 개수의 기댓값을 출력한다.&nbsp;정확한 판별을 위해, 답을 기약분수로 나타내었을 때 a/b가 된다면, (a × b<sup>-1</sup>) mod 1,092,616,193(= 2<sup>21</sup> × 521 + 1이며, 소수이다)을 대신 출력하도록 한다. b<sup>-1</sup>은 b의 모듈러 곱셈에 대한 역원이다. 이 문제에서는 가능한 모든 입력에 대해 답이 존재한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 예제의 답은 3/2를 나타낸다.</p>

				</div>
				</div>','2 3
1
1
','546308098
','MATH'),
                                                                                                                (2281,'BAEKJOON','https://www.acmicpc.net/problem/13179',13179,'비트','2초','512 MB',22,'<p>시간이 많은 그는 N개의 비트(0 또는 1을 가질 수 있는 변수)를 조작하는 일을 반복하고 있다. 지금까지 하던 것이 식상해진 그는 새로운 규칙으로 N개의 비트를 조작하려고 한다. 한 번의 조작이란 다음과 같은 작업을 의미한다.</p>

<ol>
	<li>비트 중에서 0인 것들을 먼저, 1인 것들을 나중에 놓는 방식으로 일렬로 늘어 놓는다. 즉 오름차순(엄밀히 비내림차순) 정렬한다.</li>
	<li>그 다음 1 이상 N 이하의 정수 K개(K는 홀수)를 무작위로 뽑는다. 각 정수를 뽑을 확률은 모두 독립적으로, 같은 정수가 두 번 이상 뽑힐 수도 있으며, 1부터 N 까지의 각 자연수가 뽑힐 확률은 모두 동일하다.</li>
	<li>뽑힌 K 개의 정수 각각에 대해서 정수가 i 라면 i 번째 비트를 토글한다. 즉, 0이면 1로, 1이면 0으로 바꾼다.</li>
</ol>

<p>예를 들어, 그가 가진 비트가 0,1,0이고 K = 3이라고 해보자.</p>

<ol>
	<li>먼저 비트를 정렬하여 0,0,1로 만든다.</li>
	<li>K = 3개의 정수를 뽑아 1,3,1순서대로 뽑혔다고 해보자.</li>
	<li>첫 번째 정수 1에 의해서 비트는 1,0,1이 된다. 두 번째 정수 3에 의해서 비트는 1,0,0이 된다. 세 번째 정수 1에 의해서 비트는 0,0,0이 된다.</li>
</ol>

<p>위의 과정에서 알 수 있듯, 사실 비트의 순서가 어떻게 되어있는지는 크게 중요한 것이 아니고 개수가 중요하다. 그는 조작을 한 후에 모든 비트가 1이 되면 조작을 끝내고 자러 갈 것이다. 현재 비트 중에서 0인 것의 개수가 z개일 때 모든 비트를 1로 만들기 위한 조작 횟수의 기댓값을 구하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 비트의 개수와 뽑게 되는 정수의 개수를 의미하는 두 자연수 N, K가 공백으로 구분되어 주어진다. K는 홀수이다. (1 ≤ N ≤ 100, 0 ≤ K ≤ 10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>N개의 줄에 걸쳐 답을 출력한다. z번째 줄에는 현재 비트 중에서 0인 것의 개수가 z개일 때 모든 비트를 1로 만들기 위해 필요한 조작 횟수의 기댓값을 출력한다.&nbsp;정확한 판별을 위해, 답을 기약분수로 나타내었을 때 a/b가 된다면, (a × b<sup>-1</sup>) mod 1,000,000,007을 대신 출력하도록 한다. b<sup>-1</sup>은 b의 모듈러 곱셈에 대한 역원이다. 이 문제에서는 가능한 모든 입력에 대해 답이 존재한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1
','1
','MATH'),
                                                                                                                (2276,'BAEKJOON','https://www.acmicpc.net/problem/13180',13180,'순열','2초','512 MB',20,'<p>길이가 N 인 순열이란, 1 이상 N 이하의 자연수 N 개로 이루어진, 같은 수가 두 번 이상 등장하지 않는 수열을 의미한다. 길이가 N 인 순열의 종류는 총 N!개가 있다.</p>

<p>이 순열에서 K-minsum이라는 것을 정의할 것이다. 순열 A 가 있고, 각 원소를 순서대로 나열하면 A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>N</sub>일 때, 순열 A 의 K-minsum은</p>

<p>\[\text{K-minsum}(A) = \sum_{i=1}^{N}{\sum_{j=i+K}^{N}{\text{min}(A_i, A_{i+1}, \cdots, A_{j-1}, A_j)}}\]</p>

<p>이다. min은 인자로 나열된 수 중의 최솟값을 구하는 함수이다. K 가 주어질 때, 길이가 N인 모든 N!개의 순열에 대해 K-minsum을 구해 그 합을 출력하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 순열의 길이를 나타내는 자연수 N 과 정수 K(0 ≤ K ≤ N)가 주어진다. (1 ≤ N ≤ 10<sup>6</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>길이가 N 인 모든 N!개의 순열에 대해 K-minsum을 구해 그 합을 출력한다. 합이 매우 커질 수 있으므로 1,000,000,007로 나눈 나머지를 출력해야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1
','0
','MATH'),
                                                                                                                (2282,'BAEKJOON','https://www.acmicpc.net/problem/13181',13181,'악수','4초','512 MB',23,'<p>악수는 두 사람이 각자 한 손을 마주 내어 잡고 서로 반가움을 표하며 결속을 다지는 매우 뜻깊은 일이다.</p>

<p>그는 자신을 포함하여 N명이 참석하는 파티를 주최했다. 그는 파티의 재미를 위해 모든 참가자들이 이미 알고 있던 사람이 한 명도 없도록 참가자들을 무작위로 모집했으나, 그의 예상과는 달리 얼어붙은 분위기는 잘 깨지지 않았다. 그는 어떻게 하면 자신이 원하던 즐거운 파티를 이끌어낼 수 있을지 고심하다가 이것은 서로가 서로를 잘 알지 못하기 때문이라는 결론을 내리고, 먼저 N(N-1)/2가지의 모든 사람 쌍에 대해 악수를 한 번씩 하는 행사를 하여 서로의 친목을 다지기로 했다.</p>

<p>그는 매우 독특한 사람이라, 어떤 두 사람 A, B가 악수를 하면 그 즉시 A와 B는 서로 아는 사람이 된다고 생각한다. 거기까지는 이해할 수 있을지 모르지만, 그는 A가 알고 있던 사람들과 B가 알고 있던 사람들 역시 서로 아는 사람이 된다고 생각한다. 예를 들어, 4명의 사람 P, Q, R, S가 참여한 파티에서 P와 Q, R과 S끼리 이미 악수를 해서 서로 아는 사람일 때 P와 R이 악수를 한다면, P와 R, P와 S, Q와 R, Q와 S 모두 서로 아는 사람이 된다. 이는 실제와는 매우 동떨어진 생각이지만 어쨌든 그는 그렇게 생각한다.</p>

<p>악수 행사를 진행할 때는 아직까지 악수를 하지 않은 사람 쌍들 중 하나를 동일한 확률로 무작위로 하나 골라 진행한다고 할 때, 그의 생각 상에서 모든 사람이 서로를 알게 되는 악수는 몇 번째가 될 것인지 그 기댓값을 구하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 사람의 수를 나타내는 자연수 N 이 주어진다. (1 ≤ N ≤ 40)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>모든 사람이 서로를 알게 되는 악수는 몇 번째가 될 것인지 그 기댓값을 출력한다.&nbsp;정확한 판별을 위해, 답을 기약분수로 나타내었을 때 a/b가 된다면, (a × b<sup>-1</sup>) mod 1,000,000,007을 대신 출력하도록 한다. b<sup>-1</sup>은 b의 모듈러 곱셈에 대한 역원이다. 이 문제에서는 가능한 모든 입력에 대해 답이 존재한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','0
','MATH'),
                                                                                                                (2283,'BAEKJOON','https://www.acmicpc.net/problem/13182',13182,'제비','2초','512 MB',24,'<p>시간이 많은 그는 제비 뽑기를 계속하고 있다. 그냥 아무것도 없이 하다 보니 재미가 없어서 제비를 뽑고 난 후에 어떤 제비를 뽑았는지 에 따라 지켜야 하는 규칙을 만들어 신선한 제비 뽑기를 하려고 한다.</p>

<p>그는 지금 끝을 빨간색으로 칠한 제비를 R 개, 초록색은 G 개, 파란색은 B 개를 만들었다. 이 제비들을 모두 색칠한 쪽이 보이지 않게 통에 넣고 잘 섞은 다음에 제비를 하나씩 뽑을 것이다. 그는 제비를 매우 잘 섞기 때문에 모든 제비는 뽑힐 확률이 동일해진다. 뽑은 제비의 색에 따라 다음과 같은 일을 한다.</p>

<ol>
	<li>빨간 제비를 뽑은 경우에는 뽑은 제비를 쓰레기통에 버린다.</li>
	<li>초록 제비를 뽑은 경우에는 뽑은 제비를 다시 통에 넣고 제비들을 잘 섞는다.</li>
	<li>파란 제비를 뽑은 경우에는 뽑은 제비를 다시 통에 넣고 제비들을 잘 섞는다. 만약 파란 제비를 뽑은 횟수가 K 번이 되면 제비 뽑기를 그만 두고 잠이나 자러 가도록 한다.</li>
</ol>

<p>그가 잠을 자러 갈 때까지 뽑게 되는 제비 개수의 기댓값을 구하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 테스트 케이스의 개수 T(1 ≤ T ≤ 10<sup>3</sup>)가 주어진다. 각 테스트 케이스의 첫 번째 줄에는 그가 가진 빨간 제비의 개수 R, 초록 제비의 개수 G, 파란 제비의 개수 B, 파란 제비를 몇 번 뽑아야 잠을 자러 가게 되는지를 나타내는 K 가 공백으로 구분되어 주어진다. 각 수는 모두 1이상의 자연수이다. 입력되는 수의 범위는&nbsp;1이상 10<sup>9</sup>이하이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 한 줄에 그가 잠을 자러 갈 때까지 뽑게 되는 제비 개수의 기댓값을 출력한다.&nbsp;정확한 판별을 위해, 답을 기약분수로 나타내었을 때 a/b가 된다면, (a × b<sup>-1</sup>) mod 1,000,000,007을 대신 출력하도록 한다. b<sup>-1</sup>은 b의 모듈러 곱셈에 대한 역원이다. 이 문제에서는 가능한 모든 입력에 대해 답이 존재한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 입력은 1번 부분 문제에 속하지 않음에 유의하라.</p>

<p>첫 번째 입력의 첫 번째 테스트 케이스의 답은 5/2를 나타낸다.</p>

<p>두 번째 입력은 1번 부분 문제에 속한다.</p>

				</div>
				</div>','4
1 1 1 1
1 2 3 4
1000 1000 1 1000
50000 50000 50000 10000000
','500000006
569010428
490804548
595034885
','MATH'),
                                                                                                                (2229,'BAEKJOON','https://www.acmicpc.net/problem/13183',13183,'창문','1초','512 MB',9,'<p>그가 사는 집의 한 벽면은 1 × 1크기의 정사각형 벽돌 H × W개로 이루어진 직사각형 형태이다. 즉, 이 벽은 1 × 1 크기의 정사각형 벽돌이 세로로 H행, 가로로 W열 쌓여 있는 것이다.</p>

<p>그는 창문이 없는 집이 너무 답답했기 때문에, 벽에 있는 몇 개의 벽돌을 제거하여 창문을 만들려고 한다. 창문을 만들 것이기 때문에, 제거하는 벽돌들은 하나로 붙어 있는 직사각형 모양을 이루어야 한다.</p>

<p>일단 그는 창문을 설치하는 것은 다음에 생각하도록 하고, 우선 창문을 만들 위치를 정해 그 위치에 있는 모든 벽돌을 제거하기로 했다. 그는 무작위성을 좋아하기 때문에, 설치하는 것이 가능한 창문의 위치 H(H+1)/2 × W(W+1)/2개 중 하나를 무작위로 선택하여 해당하는 모든 벽돌을 제거하려고 한다. 벽돌 하나를 제거하는 데 드는 비용은 9(九)원이다. 그가 벽돌을 제거하기 위해 드는 비용의 기댓값을 출력하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 벽의 크기를 나타내는 두 자연수 H 와 W 가 공백 하나로 구분되어 주어진다. (1 ≤ H, W ≤ 10<sup>18</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>그가 벽돌을 제거하기 위해 드는 비용의 기댓값을 출력한다.&nbsp;정확한 판별을 위해, 답을 기약분수로 나타내었을 때 a/b가 된다면, (a × b<sup>-1</sup>) mod 1,000,000,007을 대신 출력하도록 한다. b<sup>-1</sup>은 b의 모듈러 곱셈에 대한 역원이다. 이 문제에서는 가능한 모든 입력에 대해 답이 존재한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1
','9
','MATH'),
                                                                                                                (2192,'BAEKJOON','https://www.acmicpc.net/problem/13184',13184,'카드','2초','512 MB',23,'<p>a그는 새로운 전략 카드 게임에 입문했다. 이 게임에서 카드를 구입할 때는 카드가 정확히 하나 들어 있는 카드 팩을 사야한다. 카드 팩 안의 내용물은 뜯어보기 전까지는 알 수 없고 게임에 있는 N 종류의 카드 중 하나가 들어 있으며 모든 카드는 뽑힐 확률이 동일하다.</p>

<p>카드를 모은다고 끝나는 것이 아니라 덱을 구성해야 한다. 카드에 1 번에서 N 번까지의 번호를 붙이면, 그가 원하는 덱들을 구성하기 위해서는 i 번 카드가 적어도 D<sub>i</sub> 장은 필요하다. 그러므로 그의 목표는 각 카드 i 에 대해 D<sub>i</sub> 개 이상의 카드를 모으는 것이다.</p>

<p>하지만 현실은 그다지 녹록치 않다. 카드 팩은 돈을 주고 사야하고 그가 가진 돈은 적기 때문이다. 결국 그는 카드 팩을 L 개만 구매하기로 했다. 그가 그의 목표를 달성할 확률을 구하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 카드의 종류, 사려고 하는 카드 팩의 수를 나타내는 두 자연수 N, L 이 공백으로 구분되어 주어진다.</p>

<p>두 번째 줄에는 각 카드마다 모아야 하는 개수를 나타내는 N 개의 정수 D<sub>1</sub>, , …, D<sub>N</sub> 이 공백으로 구분되어 주어진다. (1 ≤ N ≤ 3,000, 0 ≤ D<sub>i</sub> ≤ 10, 1 ≤ L ≤ 3,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>그가 목표를 달성할 확률을 출력한다.&nbsp;정확한 판별을 위해, 답을 기약분수로 나타내었을 때 a/b가 된다면, (a × b<sup>-1</sup>) mod 1,000,000,007을 대신 출력하도록 한다. b<sup>-1</sup>은 b의 모듈러 곱셈에 대한 역원이다. 이 문제에서는 가능한 모든 입력에 대해 답이 존재한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1
1
','1
','MATH'),
                                                                                                                (2203,'BAEKJOON','https://www.acmicpc.net/problem/13185',13185,'트리','1초','512 MB',21,'<p>트리란 그래프의 일종으로 어떤 두 정점을 잇는 경로가 정확히 하나만 있는 방향성 없는 그래프를 뜻한다. 다른 말로 하자면, 모든 정점이 연결되어 있으며 사이클이 없는 그래프이다. N 개의 구별할 수 있는 정점을 가진 트리를 만들 수 있는 경우의 수를 생각해보자. 정점에 1 에서 N 까지의 번호를 붙이면, 간선이 어떤 두 정점을 연결하는지에 따라 경우를 구분할 수 있게 된다. 예를 들어 N=4 인 경우 다음과 같이 16 가지의 트리가 있을 수 있다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/13185/1.png" style="height: 214.167px; width: 395px;"></p>

<p>N 개의 구별할 수 있는 정점을 가진 트리 중에서 특정한 M 개의 간선을 포함하는 트리의 개수를 구하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 트리의 정점 개수와 포함해야 하는 간선의 개수를 나타내는 두 정수 N, M이 공백으로 구분되어 주어진다. 다음 M 개의 줄에는 포함해야 하는 간선의 양 끝점 a, b (1 ≤ a, b ≤ N )이 주어진다. a와 b는 다른 수이며 같은 간선이 여러 번 주어지는 일은 없다. 주어진 간선을 모두 포함하는 트리를 만들지 못할 수도 있다. (1 ≤ N ≤ 10<sup>9</sup>, 0 ≤ M ≤ 10<sup>5</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>주어진 간선을 모두 포함하는 트리의 개수를 출력한다. 이 수는 매우 커질 수 있으므로 1,000,000,007로 나눈 나머지를 출력해야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/13185/2.png" style="height:360px; width:659px"></p>

<p>위 그림에서 1과 2를 연결하는 간선을 빨간 색으로 칠하였다. 이런 간선을 포함하는 트리는 8개 밖에 없음을 알 수 있다.</p>

				</div>
				</div>','4 0
','16
','MATH'),
                                                                                                                (2204,'BAEKJOON','https://www.acmicpc.net/problem/13186',13186,'팔찌','1초','512 MB',21,'<p>그는 여러 가지 색을 지닌 구슬을 엮어 팔찌를 만드는 취미에 빠졌다. 그가 만드는 팔찌는 여러 개의 구슬을 일렬로 놓은 다음 실로 꿰어 실의 양 끝을 묶어 원형으로 만든 것이다. 그가 만들 수 있는 팔찌의 종류는 무궁무진하지만 비슷한 것을 싫어하는 그는 팔찌를 회전시키거나 뒤집어서 사용된 구슬의 색 순서가 같으면 같은 종류로 취급하기로 했다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/13186/1.png" style="height:154px; width:348px"></p>

<p>위의 그림은 빨간 구슬과 파란 구슬을 교대로 엮어 구슬을 네 개 사용한 팔찌를 만든 경우이다. 어떤 색 구슬을 기준으로 보느냐에 따라 두 가지 종류로 볼 수 있다. 그러나 왼쪽의 팔찌를 시계방향으로 조금 회전시키면 오른쪽에 있는 팔찌와 같은 구성이 되므로, 한 가지 종류로 생각해야 한다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/13186/2.png" style="height:154px; width:334px"></p>

<p>또 다른 예로, 위의 그림은 다섯 개의 구슬을 사용하여 팔찌를 만든 경우이다. 왼쪽의 팔찌를 좌우로 뒤집으면 오른쪽에 있는 팔찌를 만들 수 있으므로, 위의 두 팔찌는 한 가지 종류로 생각해야 한다.</p>

<p>그가 가진 구슬 색의 종류는 현재 K종류이고, 각 종류의 구슬은 무한히 많이 준비되어 있다. 구슬을 N개 이하만 사용해서 만들 수 있는 서로 다른 팔찌의 종류의 수를 구하는 프로그램을 작성하라. 구슬을 하나도 사용하지 않은 팔찌도 하나의 종류로 생각한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 사용할 수 있는 구슬의 개수와 구슬 색의 종류를 나타내는 두 자연수 N, K가 공백으로 구분되어 주어진다. (1 ≤ N ≤ 10<sup>6</sup>, 1 ≤ K ≤ 10<sup>6</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 구슬을 N 개 이하만 사용해서 만들 수 있는 팔찌의 종류 개수를 출력한다. 이 수는 매우 커질 수 있으므로 1,000,000,007로 나눈 나머지를 출력해야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 3
','4
','MATH'),
                                                                                                                (2202,'BAEKJOON','https://www.acmicpc.net/problem/13187',13187,'흑백','2초','512 MB',23,'<p>1 × 1 크기의 정사각형 H × W 개로 이루어진 직사각형이 있다. 즉, 이 직사각형은 H 개의 행과 W 개의 열을 가지고 균등한 1 × 1 크기의 정사각형으로 나뉘어 있는 것이다. 각 정사각형은 흑색으로 칠해져 있거나 백색으로 칠해져 있을 수 있으며, 그 확률은 각각 50%이다.</p>

<p>이 직사각형에서 부분 직사각형이라는 것을 정의한다. 부분 직사각형은 한 개 이상의 행을 선택하고 한 개 이상의 열을 선택하여 이 행이나 열에 포함되지 않는 모든 정사각형을 제외하여 만드는 직사각형이다. 예를 들어 3 × 5 크기의 직사각형이 적절히 칠해져 있다고 하자. 첫 번째, 세 번째 행을 선택하고 두 번째, 네 번째, 다섯 번째 열을 선택하면 다음과 같이 선택되는 것이다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/13187/1.png" style="height:103px; width:289px"></p>

<p>부분 직사각형에 칠해진 구성이 같아도 선택한 행과 열 중에서 하나라도 다른 것이 있다면 다른 경우로 생각한다. 부분 직사각형을 만들었을 때, 포함된 모든 칸의 색이 흑색이면 흑색 부분 직사각형, 백색이면 백색 부분 직사각형이라고 하자. 흑색 부분 직사각형의 개수와 백색 부분 직사각형의 개수를 곱한 값의 기댓값을 구하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 직사각형의 크기를 나타내는 두 자연수 H 와 W 가 공백 하나로 구분되어 주어진다. (1 ≤ H, W ≤ 10<sup>3</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>흑색 부분 직사각형의 개수와 백색 부분 직사각형의 개수를 곱한 값의 기댓값을 출력한다.&nbsp;정확한 판별을 위해, 답을 기약분수로 나타내었을 때 a/b가 된다면, (a × b<sup>-1</sup>) mod 1,000,000,007을 대신 출력하도록 한다. b<sup>-1</sup>은 b의 모듈러 곱셈에 대한 역원이다. 이 문제에서는 가능한 모든 입력에 대해 답이 존재한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1
','0
','MATH'),
                                                                                                                (2207,'BAEKJOON','https://www.acmicpc.net/problem/13199',13199,'치킨 먹고 싶다','1초(추가시간없음)','256 MB',13,'<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/13199/chicken.jpg" style="height: 250.833px; width: 376.667px;"></p>

<p>서울대학교 301동에는 아는 사람만 아는 “눕치킨”이란 치킨집이 있다. 이 치킨집은 여느 치킨집처럼 치킨을 시킬 때 마다 쿠폰을 <em>C</em> 장 주고, 쿠폰을 <em>F</em> 장 모으면 치킨을 공짜로 시킬 수 있다.</p>

<p>눕치킨의 단골이 아닌 두영이에게는 쿠폰으로 시키는 치킨에는 쿠폰이 딸려나오지 않는다. 하지만 눕치킨의 단골 손님인 상언이에게는 치킨집 아저씨가 쿠폰으로 시키는 치킨에 쿠폰을 주신다. 상언이와 두영이는 둘 다 <em>M</em> 원을 가지고 있고, 치킨의 가격은 <em>P</em> 원이다. 이때, 상언이는 두영이보다 치킨을 얼마나 더 시켜먹을 수 있을까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트 케이스의 수 <em>T</em> (1 ≤ <em>T</em> ≤ 20,000)가 주어지고, 이어서 <em>T</em>개의 테스트 케이스가 주어진다.</p>

<p>각 테스트 케이스마다 한 줄에 4개의 정수가 주어진다. 이는 순서대로 치킨의 가격 <em>P</em> (1 ≤ <em>P</em> ≤ 50,000), 치킨에 쓸 돈 <em>M</em> (1 ≤ <em>M</em> ≤ 1,000,000), 치킨을 공짜로 시키는데 필요한 쿠폰의 장수 <em>F</em> (2 ≤ <em>F</em> ≤ 1,000), 치킨을 시키면 주는 쿠폰의 장수 <em>C</em> (1 ≤ <em>C</em> < <em>F</em>) 를 의미한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다, 첫 번째 줄에 상언이가 두영이보다 더 먹을 수 있는 치킨의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
10000 50000 5 1
10000 250000 5 1
','0
1
','MATH'),
                                                                                                                (2212,'BAEKJOON','https://www.acmicpc.net/problem/13201',13201,'즉흥 여행','3초','256 MB',17,'<p>당신은 세계 갑부 순위에서 찾아볼 수 있는 대부호인 상일이의 비서이다. 당신의 상사인 상일이는 여행을 즉흥적으로 가는 것을 즐긴다. 상일이가 즉흥적으로 여행을 가는 방식은 다음과 같다.</p>

<ol>
	<li>자신이 있는 도시의 공항에 간다.</li>
	<li>그 공항에서 출발할 수 있는 항공편 중 임의의 항공편 티켓을 구입한다. 이때, 각각의 항공편의 티켓을 구입하는 확률은 모두 동일하다.</li>
	<li>구입한 항공편을 타고 다른 도시로 이동한다.</li>
</ol>

<p>이제, 위의 과정을 한 번의 여정이라고 정의하자. 상일이는 한 번의 여정으로 여행을 했다고 만족하지 못하는 성격이기 때문에, 한 번의 여행에 정확히 <em>K</em> 번의 여정을 해야 한다. 들어갈 때는 마음대로지만 나올 때는 아닌 공항도 있다. 이 경우 더 이상 여정을 진행하지 못하여, 상황에 따라 상일이는 영원한 여행을 하게 될 수도 있다.</p>

<p>상일이는 여행 중에 업무와 관련한 이야기를 듣기 싫어하기 때문에, 당신은 어쩔 수 없이 휴가를 얻게 되었다. 하지만, 마냥 휴가를 즐기고 있을 당신이 아니다. 당신은 상일이가 갈 수 있는 여행 코스 중 가장 확률이 높은 여행 코스를 따라 미행하기로 결심하였다. 또한 여행이 끝남과 동시에 업무로 다시 돌아가야 하므로, 그 여행 코스의 최종 목적지 공항 근처에 업무 관련 자료를 미리 보내려 한다.</p>

<p>상일이가 갈 수 있는 여행 코스 중 가장 확률이 높은 여행 코스의 최종 공항을 알아내자. 항상 경로가 존재한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트 케이스의 수 <em>T</em> 가 주어진다.</p>

<p>각 테스트 케이스의 첫 번째 줄에 전 세계 공항의 개수 <em>N</em> 과 한 여행에 해야 하는 여정의 수 <em>K</em> 가 주어진다. (2 ≤ <em>N</em> ≤ 100, 1 ≤ <em>K</em> ≤ 1,000)</p>

<p>각 테스트 케이스의 두 번째 줄부터 <em>N</em> 개의 줄에 걸쳐 각 공항의 IATA 공항 코드가 주어진다. 이 공항 코드는 3자리 알파벳 대문자로 이루어진다. 여행을 출발할 때 가는 공항의 IATA 공항 코드는 <code>ICN</code>이다.</p>

<p>각 테스트 케이스의 그 다음 줄부터 <em>N</em> 개의 줄에 걸쳐 각 줄에 <em>N</em> 개의 숫자가 주어진다. <em>i</em>번째 줄의 <em>j</em> 번째 숫자는 <em>i</em>번 공항에서 출발하여 <em>j</em> 번 공항에 도착하는 항공편의 개수 <em>S<sub>ij</sub></em> 이다. (0 ≤ <em>S<sub>ij</sub></em> ≤ 100, <em>S<sub>ii</sub></em> = 0)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다, 첫 번째 줄에 상일이가 갈 수 있는 여행 코스 중 가장 확률이 높은 여행 코스의 최종 공항의 IATA 공항 코드를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 입력에서, 아래 10가지 여행 경로가 있고, 각 확률은 다음과 같다.</p>

<ul>
	<li>ICN → FUK → ICN → FUK : 0.4 × 0.4 × 0.4 = 0.064</li>
	<li>ICN → FUK → ICN → PEK : 0.4 × 0.4 × 0.6 = 0.096</li>
	<li>ICN → FUK → PEK → ICN : 0.4 × 0.6 × 0.125 = 0.03</li>
	<li>ICN → FUK → PEK → FUK : 0.4 × 0.6 × 0.25 = 0.06</li>
	<li>ICN → FUK → PEK → FNJ : 0.4 × 0.6 × 0.625 = 0.15</li>
	<li>ICN → PEK → ICN → FUK : 0.6 × 0.125 × 0.4 = 0.03</li>
	<li>ICN → PEK → ICN → PEK : 0.6 × 0.125 × 0.6 = 0.045</li>
	<li>ICN → PEK → FUK → ICN : 0.6 × 0.25 × 0.4 = 0.06</li>
	<li>ICN → PEK → FUK → PEK : 0.6 × 0.25 × 0.6 = 0.09</li>
	<li>ICN → PEK → FNJ → PEK : 0.6 × 0.625 × 1 = 0.375</li>
</ul>

				</div>
				</div>','1
4 3
ICN
FUK
PEK
FNJ
0 2 3 0
2 0 3 0
1 2 0 5
0 0 5 0
','PEK
','MATH'),
                                                                                                                (2213,'BAEKJOON','https://www.acmicpc.net/problem/13202',13202,'피자 배치','1초','256 MB',14,'<p>상언이의 단골 피자가게는 직각삼각형 모양의 테이블과 완벽한 원 모양의 피자로 유명하다. 이 가게의 사장님은 한 테이블에서 피자를 주문하면 그 테이블로 직접와서 테이블이 피자로 가득 찰 때까지 피자를 계속 만든다.</p>

<p>사장님은 피자 하나를 새로 만들 때 마다 다음과 같은 그만의 놀라운 방법을 사용한다. 현재 이미 만들어진 다른 피자들과 겹치지 않으면서 (접할 수는 있다) 테이블의 변 중 두개 이상에 접하도록 만들 수 있는 피자 중 가장 넓이가 큰 피자를 만든다. 상언이는 문득 이 테이블에 만들어질 <em>k</em>번째 피자의 넓이가 궁금해졌다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/13202/pizza.png" style="height:193px; width:256px"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트 케이스의 수 <em>T</em>(1 ≤ <em>T</em> ≤ 10,000)가 주어지고, 이어서 <em>T</em> 개의 테스트 케이스가 입력된다. 각 테스트 케이스는 한 줄에 3개의 정수가 주어진다. 이는 직각삼각형의 직교하는 두 변 <em>a</em>, <em>b</em>의 길이와 <em>k</em> 를 의미한다. (1 ≤ <em>a</em>, <em>b</em> ≤ 10<sup>9</sup>, 1 ≤ <em>k</em> ≤ 100)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다, 첫 번째 줄에 <em>k</em> 번째 피자의 넓이를 출력한다. 출제진의 답과 절대 오차 또는 상대 오차가 10<sup>?6</sup> 이하일 시 정답으로 인정한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
3 4 1
','3.1415926
','MATH'),
                                                                                                                (2211,'BAEKJOON','https://www.acmicpc.net/problem/13204',13204,'표본의 수 구하기','1초','256 MB',12,'<p>몇몇 뉴스 기사들은 여론조사 결과를 참조하여 작성한다. 이때, 가독성을 위해 실제 투표 수보다는 퍼센트로 결과를 나타내는 경우가 많은데, 이 경우 표본의 수가 얼마나 되는지 궁금해질 때가 문득 생긴다.</p>

<p>예 혹은 아니오로 선택 가능한 여론조사 질문에 대해, ‘예’ 에 해당하는 투표 수의 퍼센트가 주어질 때 가능한 최소 표본의 수를 알아내자. 이때, 투표 결과는 항상 넷째 자리에서 반올림을 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트 케이스의 수 <em>T</em> 가 주어진다.</p>

<p>각 테스트 케이스의 첫 번째 줄에 투표 수의 퍼센트가 소수점 아래 셋째 자리까지 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 한 줄에 가능한 최소 표본의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
0.001
50.000
15.000
','66667
2
20
','MATH'),
                                                                                                                (2230,'BAEKJOON','https://www.acmicpc.net/problem/13223',13223,'소금 폭탄','2초','512 MB',3,'<p>철수는 화학 시험을 망치고, 애꿎은 화학 선생님에게 복수를하기로 한다.</p>

<p>철수는 집에서 만든 자동 로봇팔을 선생님의 책상에&nbsp;숨겨, 선생님이&nbsp;수업을 시작하려 들어온 순간 숨겨놓은 로봇팔을&nbsp;이용해 선생님을 혼내주려고한다. 철수는 선생님이 늘 애용하는 물컵에 시간이 되면 로봇팔이 소금을 잔뜩 집어넣도록 프로그램을 짜려고한다.</p>

<p>철수는 현재시각과 선생님이 언제 컵을 사용할지 시간을 알고있지만, 수 계산에 정말 약해서 로봇팔에 입력해야할 시간 계산을 못한다. 철수가 로봇팔에 알맞은 시간을 입력할수 있도록 도와주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 현재 시각이 hh:mm:ss로 주어진다. 시간의 경우 0≤h≤23 이며, 분과 초는 각각 0≤m≤59,&nbsp;0≤s≤59 이다.</p>

<p>두 번째 줄에는 소금 투하의 시간이&nbsp;hh:mm:ss로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>로봇팔이 소금을 투하할때까지 필요한 시간을&nbsp;hh:mm:ss로 출력한다. 이 시간은 1초보다 크거나 같고, 24시간보다 작거나 같다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','20:00:00
04:00:00
','08:00:00
','MATH'),
                                                                                                                (2227,'BAEKJOON','https://www.acmicpc.net/problem/13241',13241,'최소공배수','2초','512 MB',6,'<p>정수 B에 0보다 큰 정수인 N을 곱해 정수 A를 만들&nbsp;수 있다면, A는 B의 배수이다.</p>

<p>예:</p>

<ul>
	<li>10은 5의 배수이다 (5*2 = 10)</li>
	<li>10은 10의 배수이다(10*1 = 10)</li>
	<li>6은 1의 배수이다(1*6 = 6)</li>
	<li>20은 1, 2, 4,5,10,20의 배수이다.</li>
</ul>

<p>다른 예:</p>

<ul>
	<li>2와 5의 최소공배수는 10이고, 그 이유는 2와 5보다 작은 공배수가 없기 때문이다.</li>
	<li>10과 20의 최소공배수는 20이다.</li>
	<li>5와 3의 최소공배수는 15이다.</li>
</ul>

<p>당신은 두 수에 대하여 최소공배수를 구하는 프로그램을 작성 하는&nbsp;것이 목표이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>한 줄에 두 정수 A와 B가 공백으로 분리되어 주어진다.</p>

<p>50%의 입력 중 A와 B는 1000(10<sup>3</sup>)보다 작다. 다른 50%의 입력은 1000보다 크고 100000000(10<sup>8</sup>)보다 작다.</p>

<p>추가: 큰 수 입력에 대하여 변수를 64비트 정수로 선언하시오. C/C++에서는 long long int를 사용하고, Java에서는 long을 사용하시오.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>A와 B의 최소공배수를 한 줄에 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1
','1
','MATH'),
                                                                                                                (2248,'BAEKJOON','https://www.acmicpc.net/problem/13246',13246,'행렬 제곱의 합','2초','512 MB',14,'<p>크기가 N*N인 행렬 A가 주어진다. 이때, A의 1제곱부터 A의 B제곱까지 더한 행렬을 구하는 프로그램을 작성하시오. 즉, S = A<sup>1</sup> + A<sup>2</sup> + ... + A<sup>B</sup>를 구해야 한다.</p>

<p>수가 매우 커질 수 있으니, S의 각 원소를 1,000으로 나눈 나머지를 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 행렬의 크기 N과 B가 주어진다. (2 ≤ N ≤ 5, 1 ≤ B ≤ 100,000,000,000)</p>

<p>둘째 줄부터 N개의 줄에 행렬의 각 원소가 주어진다. 행렬의 각 원소는 1,000보다 작거나 같은 자연수 또는 0이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄부터 N개의 줄에 걸쳐 행렬 S를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 5
1 2
3 4
','313 914
871 184
','MATH'),
                                                                                                                (2240,'BAEKJOON','https://www.acmicpc.net/problem/13247',13247,'토끼의 이동','2초','512 MB',13,'<p>외로운 토끼들이 모여서 재미있는 게임을 하기로 결정했다.</p>

<p>게임은 총 N (N ≥ 2)개의 칸이 가로로 놓여진 곳에서 진행되며, 왼쪽부터 오른쪽까지 0번부터 N-1번의 번호가 매겨져 있다. 각각의 칸은 흰색, 검정색, 빨간색 중의 하나로 칠해져 있다.</p>

<p>총 r마리의 토끼가 모여서 게임을 하려고 한다. 각각의 토끼는 게임을 시작할 칸을 무작위로 고르며, 두 토끼가 같은 칸에 있는 경우는 없다. 시작 칸으로 골라질 r개의 칸은 모두 같은 확률로 골라진다.</p>

<p>게임판의 크기는 칸의 개수와 같으며 (처음에는 N)이다. 다음을 게임판의 크기가 2보다 큰 동안 반복한다.</p>

<ul>
	<li>모든 토끼는 인접한 칸으로 이동한다. 각각의 칸은 최대 2개의 인접한 칸을 가지고 있으며, 다음과 같은 규칙을 이용해 토끼가 이동할 칸을 정한다.
	<ul>
		<li>0번 칸에 있는 토끼는 항상 1번 칸으로 이동한다.</li>
		<li>게임판의 크기를 size라고 했을 때, size-1이나 size-2에 있는 토끼는 항상 왼쪽에 있는 칸으로 이동한다.</li>
		<li>나머지 토끼는 현재 자신이 있는 칸의 색상에 따라서 이동할 칸을 결정한다.
		<ul>
			<li>흰색: 왼쪽 칸으로 이동한다</li>
			<li>검정색: 오른쪽 칸으로 이동한다</li>
			<li>빨간색: 아직 한 번도 이동한 적이 없다면, 왼쪽 칸으로 이동한다. 그 외의 경우에는 현재 칸에 오기 전에 있었던 칸으로 이동한다.</li>
		</ul>
		</li>
	</ul>
	</li>
	<li>모든 토끼의 이동이 끝난 후에, 한 마리보다 많은 토끼가 있는 칸에 있는 토끼는 게임에서 제외된다.</li>
	<li>가장 오른쪽 칸은 게임판에서 사라진다. 즉, 게임판의 크기가 1 감소한다. 위의 규칙에 의하면 가장 오른쪽 칸은 항상 비어있게 된다.</li>
</ul>

<p>게임이 끝났을 때, 게임판에 남아있는 토끼는 0, 1, 2마리 중 하나이다. 게임이 끝났을 때, 게임판에 남아있을 수 있는 토끼의 수의 기댓값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 게임판의 색상이 주어진다. 게임판의 크기(N)는 2보다 크거나 같고, 17보다 작거나 같으며, W는 흰색, B는 검정색, R은 빨간색을 나타낸다.</p>

<p>둘째 줄에는 토끼의 수 r (1 ≤ r ≤ N)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>게임판에 남아있을 수 있는 토끼의 수의 기댓값을 출력한다. 정답과의 절대/상대 오차는 10<sup>-9</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','WRBRW
4
','0.8
','MATH'),
                                                                                                                (2234,'BAEKJOON','https://www.acmicpc.net/problem/13248',13248,'수업 거절','2초','512 MB',14,'<p>효빈이는 숭실대학교 ACM-ICPC 동아리에서 친구들을 위해 강의를 하고 있다. 효빈이는 완벽한 강의를 펼치지만, 시간을 잘 지키지 않는다.</p>

<p>영선이는 효빈이의 강의를 듣기 위해 강의가 시작하는 시간에 맞춰서 오지만, 효빈이가 언제 오는지는 알지 못한다. 영선이는 교실에서 효빈이를 기다리면서 보내는 의미없는 시간을 피하기 위해 다음과 같은 방법을 사용하기로 했다.</p>

<ul>
	<li>영선이가 교실에 시간 0에 도착한다.</li>
	<li>효빈이가 오기를 기다린다.</li>
	<li>A초가 지났는데도 효빈이가 오지 않는다면, 잠시 교실 밖으로 나가 B초동안 산책을 하다 온다.</li>
	<li>산책을 마치고 영선이가 교실에 돌아오는 시간은 A+B초이다.</li>
	<li>다시 효빈이가 A초동안 오기를 기다린다. A초 이후에도 효빈이가 오지 않는다면, 다시 B초동안 산책을 하고 온다.</li>
	<li>이 과정은 효빈이가 교실에 올 때 까지 반복한다.</li>
</ul>

<p>즉, 영선이는 교실에 0초부터 A초까지 (0초와 A초를 포함), A+B초부터 2*A+B초까지, ... 교실에 있게 된다. 이외의 다른 시간에는 교실 밖에서 산책을 하고 있게 된다.</p>

<p>하지만, 효빈이는 지각을 용서하지 않는다. 영선이가 산책을 마치고 돌아왔을 때, 효빈이가 이미 교실에 있다면 영선이는 지각을 한 것이 된다. 효빈이가 교실에 도착한 시간으로 부터 C초 이상의 시간이 지난 후에 영선이가 교실에 도착한다면, 영선이는 효빈이의 수업을 들을 수없다.</p>

<p>효빈이가 교실에 도착한 시간은 D초와 E를 포함하는 실수에 균일하게 분포되어 있다. 영선이가 효빈이의 수업을 들을 수 없는 확률을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 A, B, C, D, E가 주어진다. (1 ≤ A, B, C, E ≤ 10,000,000, 0 ≤ D ≤ E)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 영선이가 효빈의 수업을 들을 수 없는 확률을 출력한다. 정답과의 절대/상대 오차는 10<sup>-9</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1의 경우에 효빈이는 0초부터 50초사이의 어느 순간에 교실에 도착한다. 이때 영선이는 다음과 같이 행동한다.</p>

<ul>
	<li>0초부터 20초까지 교실에서 효빈이를 기다린다.</li>
	<li>20초부터 50초까지 잠시 산책을 하고 있다.</li>
	<li>50초에 다시 교실에 도착한다.</li>
</ul>

<p>효빈이는 10초까지는 기다려 준다. 따라서, 20초부터 40초 사이에 효빈이가 도착한다면, 수업을 들을 수 없게 된다. 따라서, 확률은 (40-20)/(50-0) = 0.4 이다.</p>

<p>예제 2의 경우에&nbsp;효빈이가 30초부터 40초사이에 또는 70초부터 90초 사이에 도착한다면, 영선이는 수업을 들을 수 없다.</p>

				</div>
				</div>','20 30 10 0 50
','0.4
','MATH'),
                                                                                                                (2242,'BAEKJOON','https://www.acmicpc.net/problem/13249',13249,'공의 충돌','2초','512 MB',11,'<p>무게가 모두 같고, 크기가 0인 공 N개가 일직선 위에 놓여져 있다.</p>

<p>오른쪽으로 굴러가는 공과 왼쪽으로 굴러가는 공이 같은 속도로 충돌하면, 속도는 변하지 않고 공의 진행 방향만 바뀌게 된다.</p>

<p>공 N개의 위치가 주어진다. 효빈이는 공 N개의 진행 방향(오른쪽, 왼쪽)을 같은 확률로 결정한다. 시간 0일 때, 효빈이는 공을 결정한 방향으로 동시에 1초에 1만큼 이동하는 속도로 굴린다.</p>

<p>T초 후에 공이 충돌한 횟수의 기댓값을 구하는 프로그램을 작성하시오. (T초에 충돌한 것도 포함해야 한다)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 공의 개수 N이 주어진다. (1 ≤ N ≤ 12)</p>

<p>둘째 줄에 공의 위치 N개가 주어진다. (0 ≤ 위치 ≤ 100,000,000, 위치는 정수) 공의 위치는 중복되지 않는다.</p>

<p>셋째 줄에 T (1 ≤ T ≤ 100,000,000)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>T초 동안 공이 충돌한 횟수의 기댓값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
5 8
2
','0.25
','MATH'),
                                                                                                                (2236,'BAEKJOON','https://www.acmicpc.net/problem/13250',13250,'주사위 게임','2초','512 MB',12,'<p>효빈이는 1부터 6까지 수가 적혀있는 6면 주사위를 가지고 있다. 매번 주사위를 던질 때마다 주사위의 윗 면에 적힌 수 만큼 사탕을 받게 된다. 효빈이가 적어도 N개의 사탕을 받기 위해 주사위를 던져야 하는 횟수의 기댓값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. (1 ≤ N ≤&nbsp;1,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 사탕을 적어도 N개 받기 위해 주사위를 던져야 하는 횟수의 기댓값을 출력한다. 정답과의 절대/상대 오차는 10<sup>-9</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','1.0
','MATH'),
                                                                                                                (2243,'BAEKJOON','https://www.acmicpc.net/problem/13251',13251,'조약돌 꺼내기','2초','512 MB',8,'<p>효빈이의 비밀 박스에는 조약돌이&nbsp;N개 들어있다. 조약돌의 색상은 1부터 M까지 중의 하나이다.</p>

<p>비밀 박스에서 조약돌을 랜덤하게 K개 뽑았을 때, 뽑은 조약돌이 모두 같은 색일 확률을 구하는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 M (1 ≤ M ≤ 50)이 주어진다.</p>

<p>둘째 줄에는 각 색상의 조약돌이 몇 개 있는지 주어진다. 각 색상의 조약돌 개수는 1보다 크거나 같고 50보다 작거나 같은 자연수이다.</p>

<p>셋째 줄에는 K가 주어진다. (1 ≤ K ≤ N)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 뽑은 조약돌이 모두 같은 색일 확률을 출력한다. 정답과의 절대/상대 오차는 10<sup>-9</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
13
8
','1.0
','MATH'),
                                                                                                                (2265,'BAEKJOON','https://www.acmicpc.net/problem/13253',13253,'토러스','2초','512 MB',13,'<p>상근이는 도넛해를 항해하고 있다. 도넛해는 토러스 모양이며, N × M개의 칸으로 나누어져 있으며, 아래 그림처럼 생겼다.</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/13253/1.png" style="height:260px; width:310px"></p>

<p style="text-align:center">(Image by YassineMrabet from Wikimedia Commons, licensed under CC BY-SA 3.0.)</p>

<p>도넛해의 모든 칸은 좌표 (n, m)으로 나타낼 수 있다. (0 ≤ n < N, 0 ≤ m < M)&nbsp;</p>

<p>모든 좌표는 N과 M으로 나눈 나머지 값을 가져야 한다. 즉, (N-1, M-1) 칸이 좌표의 범위에 포함되지 않는다면, (N-2, M-1), (0, M-1), (N-1, M-2), (N-1, 0) 중 하나로 이동했을 것이다.</p>

<p>상근이는 (0, 0)에서 출발해서 (x, y)에 도착하려고 한다.</p>

<p>상근이가 이동할 수 있는 방법은 두 좌표를 1씩 증가시키거나, 1씩 감소시키는 것이다. 즉, 상근이가 (n, m)에 있다면, 이동할 수 있는 칸은 ((n+1)%N, (m+1)%M) 또는 ((n-1)%N, (m-1)%M) 이다. 두 칸으로 이동할 확률은 같으며, 이동에는 하루가 걸린다.</p>

<p>상근이가 (x, y)에 도착하는데 필요한 일의 기댓값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, M, x, y가 주어진다. (2 ≤ N, M ≤ 10, 0 ≤ x ≤ N-1, 0 ≤ y ≤ M-1)</p>

<p>(x, y)는 (0, 0)이 아니다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 (x, y)에 도착하는데 필요한 일의 기댓값을 출력한다. 정답과의 절대/상대 오차는 10<sup>-9</sup>까지 허용한다. 만약, (x, y)로 이동할 수 없다면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 2 1 1
','1.0
','MATH'),
                                                                                                                (2246,'BAEKJOON','https://www.acmicpc.net/problem/13254',13254,'연휴','2초','512 MB',16,'<p>N개의 도시와 N-1개의 도로로 이루어진 나라가 있다. 이 나라의 도시는 0번부터 N-1번까지 번호가 매겨져 있다. 모든 도로는 양방향이며, 두 도시를 연결한다.</p>

<p>단순 경로란 두 개 이상의 도시의 수열로, 한 도시가 수열에 두 번 이상 등장하지 않는다. 또한, 연속된 도시를 연결하는 도로가 있어야 한다. 이 나라의 임의의 두 도시 사이에는 단순 경로가 존재한다. 즉, 이 나라의 도로 네트워크는 트리 형태이다.</p>

<p>이 나라에는 M개의 가족이 살고 있다. 가족은 0번부터 M-1번까지 번호가 매겨져 있다. 모든 가족은 도시 하나에 거주하고 있으며, 여러 가족이 같은 도시에 거주할 수 있다.</p>

<p>연휴를 맞이해서 모든 가족은 이동할 임의의 도시를 하나 골랐다. 선택한 도시는 현재 거주하고 있는 도시와는 다르며, 각 도시를 선택할 확률은 모두 같다. 이동할 도시의 선택은 가족마다 모두 독립적이다. 연휴 기간 동안 모든 가족은 거주하고 있는 도시와 선택한 도시 사이의 단순 경로를 이용해서 이동한다.</p>

<p>각각의 가족이 어떤 도시를 선택했는지에 따라서, 모든 가족이 이용하는 도로가 생길 수도 있다. 이러한 도로의 개수를 L로 나타낸다. L의 기댓값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 도시의 수 N과 거주하고 있는 가족의 수 M이 주어진다. (2 ≤ N ≤ 51, 1 ≤ M ≤ 50)</p>

<p>둘째 줄부터 N-1개의 줄에는 도로가 연결하는 도시의 번호가 주어진다. 입력으로 주어지는 도로는 항상 트리를 이룬다.</p>

<p>마지막 줄에는 각각의 가족이 거주하고 있는 도시의 번호가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 L의 기댓값을 출력한다. 정답과의 절대/상대 오차는 10<sup>-6</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1의 경우에 이 나라에 거주하는 가족은 하나밖에 없고, 거주하는 도시는 0번이다.</p>

<p>50%의 확률로 1번 도시를 고를 것이다. 이 경우에는 0-1만 모든 가족이 사용하는 도로이다. L = 1</p>

<p>50%의 확률로 2번 도시를 고른다. 이 경우에는 0-1과 1-2가 모든 가족이 사용하는 도로이다. L = 2</p>

<p>기댓값은 0.5*1 + 0.5*2 = 1.5이다.</p>

<p>예제 2의 경우에 25%의 확률로 두 가족이 2번 도시를 고른다. 이 경우는 0-1과 1-2가 모든 가족이 사용하는 도로이며, L = 2이다. 다른 경우는 0-1만 모든 가족이 사용하는 도로이다. 따라서, 정답은 0.25*2 + 0.75*1 = 1.25 이다.&nbsp;</p>

				</div>
				</div>','3 1
0 1
1 2
0
','1.5
','MATH'),
                                                                                                                (2247,'BAEKJOON','https://www.acmicpc.net/problem/13255',13255,'동전 뒤집기','2초','512 MB',13,'<p>N개의 동전이 탁자 위에 놓여져 있다. 동전은 모두 앞면이 위를 향하고 있다.</p>

<p>K개의 정수 A[i]가 주어진다. 가장 처음에 A[1]개의 동전을 랜덤하게 골라서 뒤집는다. 그 다음에는 A[2]개의 동전을 랜덤하게 골라서 뒤집는다. 이 과정을 계속해서 반복하고, 마지막에는 A[K]개의 동전을 랜덤하게 골라서 뒤집는다.</p>

<p>모든 과정을 완료했을 때, 앞면이 위를 향하는 동전 개수의 기댓값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 동전의 개수 N (1 ≤ N ≤ 1,000)이 주어진다. 둘째 줄에는 K (1 ≤ K ≤ 50)이 주어진다. 셋째 줄에는 A[i] (1 ≤ A[i] ≤ N)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>모든 과정을 완료한 후에 앞면이 위를 향하는 동전 개수의 기댓값을 출력한다.</p>

<p>정답과의 절대/상대 오차는 10<sup>-9</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1의 경우에 첫 단계에서 동전 2개를 뒤집어야 한다. 두 번째 단계에는 다음과 같은 두 가지 상황이 가능하다.</p>

<ul>
	<li>뒷면 2개를 골라서 뒤집는다. (확률: 1/3) 앞면의 개수는 3개가 된다.</li>
	<li>앞면 1개와 뒷면 1개를 골라서 뒤집는다. (확률: 2/3) 앞면의 개수는 1개가 된다.</li>
</ul>

<p>기댓값은 1/3*3 + 2/3*1 = 5/3 이다.</p>

				</div>
				</div>','3
2
2 2
','1.6666666666666667
','MATH'),
                                                                                                                (2239,'BAEKJOON','https://www.acmicpc.net/problem/13256',13256,'수열의 아름다움','2초','512 MB',16,'<p>영선이는 나무 N개를 일렬로 심었다. 각각의 나무는 0번부터 N-1번까지 번호가 매겨져 있다. i번째 나무가 모두 자라면, 높이는 low[i]와 high[i]를 포함하는 그 사이의 정수가 되며, 각 정수가 선택될 확률은 모두 같다.</p>

<p>영선이는 교차 수열을 매우 좋아하며, 교차 수열의 정의는 다음과 같다.</p>

<ul>
	<li>길이가 1인 수열은 교차 수열이다.</li>
	<li>길이가 2인 수열 (A, B)는 A ≠ B를 만족하면 교차 수열이다.</li>
	<li>길이가 3인 수열 (A, B, C)는 A < B와 B > C를 만족하거나, A > B와 B < C를 만족하면 교차 수열이다.</li>
	<li>길이가 L > 3인 수열 (A[0], A[1], ..., A[L-1])은 모든 연속한 세 쌍이 교차 수열일 때 교차 수열이다. 즉, (A[0], A[1], A[2]), (A[1], A[2], A[3]), ..., (A[L-3], A[L-2], A[L-1])dl 모두 교차 수열이어야 한다.</li>
</ul>

<p>교차 수열의 아름다움을 인접한 원소의 차이의 합이다. 예를 들어, 교차 수열 (A[0], A[1], ..., A[L-1])의 아름다움은 |A[0] - A[1]| + |A[1] - A[2]| + ... + |A[L-2] - A[L-1]| 이다. 길이가 1인 교차 수열의 아름다움은 0이다.</p>

<p>나무가 모두 자란 뒤에, 영선이는 0번 나무부터 N-1번 나무까지의 높이를 공책에 적었다. 만약 이 수열이 교차 수열이라면 영선이는 수열을 그대로 놔둘 것이다. 교차 수열이 아닌 경우에는 일부 수를 지워서 교차 수열로 만들 것이다. 만약, 교차 수열을 만들 수 있는 방법이 여러 가지라면, 아름다움이 크게 되도록 수를 지울 것이다. 이렇게 해서 만든 수열을 결과 수열이라고 한다.</p>

<p>결과 수열의 아름다움의 기댓값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 나무의 수 N (1 ≤ N ≤ 50)이 주어진다.</p>

<p>둘째 줄부터 N개의 줄에는 low[i]와 high[i]가 주어진다. (1 ≤ low[i] ≤ high[i] ≤ 100,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>결과 수열의 아름다움의 기댓값을 출력한다. 정답과의 절대/상대 오차는 10<sup>-9</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 2의 경우에 나무가 자란 결과는 총 8가지가 가능하다.</p>

<ul>
	<li>(1, 1, 1)과 (2, 2, 2)는 수 2개를 지워야 교차 수열이 되고, 아름다움은 0이다.</li>
	<li>(1, 1, 2), (2, 2, 1), (1, 2, 2), (2, 1, 1)의 경우에는 가운데 수를 지우면 된다. 이때, 아름다움은 1이다.</li>
	<li>(1, 2, 1)과 (2, 1, 2)의 경우에는 수를 지우지 않아도 된다. 이때, 아름다움은 2이다.</li>
</ul>

<p>따라서, 기댓값은 (4/8)*1 + (2/8)*2 = 1이 된다.</p>

				</div>
				</div>','1
1 100
','0.0
','MATH'),
                                                                                                                (2250,'BAEKJOON','https://www.acmicpc.net/problem/13257',13257,'생태학','2초','512 MB',13,'<p>생태학에서 주어진 영역의 개체수를 추정하는 방법은 여러 가지가 있다. 이번 문제에서는 새의 개체수를 구해볼 것이고 다음과 같은 방법을 사용할 것이다.</p>

<p>먼저, 데이터 수집은 D일동안 진행된다. 초기에 모든 새에 측정기를 부착되어있지 않다. 데이터 수집이 진행되는 동안 매일 매일 C마리의 새를 잡을 것이다. 그 다음, C마리의 새 중에 측정기가 부착되어 있지 않은 새에는 측정기를 부착할 것이고, 이미 부착되어 있는 새는 그냥 놔둘 것이다. 그 다음 하루가 끝날 때, 모든 새를 다시 풀어준다.</p>

<p>데이터 수집 기간이 끝나면, 측정기가 부착되어 있지 않은 새를 이용해서 새의 개체수를 측정할 것이다.</p>

<p>데이터를 수집한 영역의 새의 개체수가 N마리라고 가정했을 때, 데이터 수집 기간이 끝난 후에 측정기가 부착되어 있는 새의 수가 M마리일 확률을 구하는 프로그램을 작성하시오. 데이터 수집이 진행되는 동안, 매일 매일 모든 새를 잡을 확률은 같다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, C, D, M이 주어진다. (1 ≤ N ≤ 20, 1 ≤ C ≤ 20, 1 ≤ D ≤ 5, 0 ≤ M ≤ N)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>데이터를 수집한 영역의 새의 개체수가 N마리라고 가정했을 때, 데이터 수집 기간이 끝난 후에 측정기가 부착되어 있는 새의 수가 M마리일 확률을 출력한다. 정답과의 절대/상대 오차는 10<sup>-9</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1의 경우에 첫째 날이 지난 후에 한 마리의 새에 측정기가 부착되어 있다.</p>

<p>둘째 날 1/3의 확률로 측정기가 이미 부착된 새를 잡을 것이고, 2/3의 확률로 측정기가 부착되지 않은 새를 잡을 것이다.</p>

				</div>
				</div>','3 1 2 2
','0.6666666666666666
','MATH'),
                                                                                                                (2251,'BAEKJOON','https://www.acmicpc.net/problem/13258',13258,'복권 + 은행','2초','512 MB',11,'<p>스타트링크 은행은 고전적인 방식의 이자를 지급하는 대신에 복권 제도를 이용한 이자를 지급하고 있다. 이 제도는 은행에게 돈을 조금 더 적게 쓰게 만들어주지만, 대부분의 사람들은 그 차이를 눈치채지 못한다. 이 은행의 이자 시스템은 다음과 같이 이루어져 있다.</p>

<p>금요일 저녁에 은행은 계좌를 가지고 있는 사람들에게 잔고 1원당 티켓을 1개씩 지급한다. 모든 티켓을 지급한 후에는 티켓 하나를 랜덤하게 고른다. 모든 티켓이 당첨될 확률은 같다. 당첨된 사람의 계좌에 J원이 즉시 추가된다.</p>

<p>강호는 스타트링크 은행에 지금 막 계좌를 열고 나오는 길이다. 스타트링크 은행에 계좌를 가지고 있는 사람의 수와 잔고가 주어졌을 때, C주가 지난 후 강호의 통장 잔고의 기댓값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N (1 ≤ N ≤ 50)이 주어진다.&nbsp;</p>

<p>둘째 줄에는 스타트링크 은행에 통장 계좌를 가진 사람의 잔고가 주어진다. 첫 번째로 주어지는 잔고는 강호의 잔고이다. (0 ≤ 잔고 ≤&nbsp;100,000) 적어도 한 사람의 잔고는 0원보다 많다.</p>

<p>셋째 줄에는 J (1 ≤ J ≤ 1,000)가, 넷째 줄에는 C (1 ≤ C ≤ 1,000)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>C주가 지난 후, 강호 잔고의 기댓값을 출력한다. 정답과의 절대/상대 오차는 10<sup>-9</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>두 번째 예제의 경우에 첫 주가 지난 후 1/3의 확률로 (3, 2, 2)가, 1/3의 확률로 (2, 3, 2)가, 1/3의 확률로 (2, 2, 3)이 된다.</p>

<p>둘째 주에 (3, 2, 2)는 기댓값이 3.4286이 되고, (2, 3, 2)와 (2, 2, 3)은 기댓값이 2.2857이 된다. 따라서, 기댓값은 2.66667이다.</p>

				</div>
				</div>','2
100 100
100
2
','200.0
','MATH'),
                                                                                                                (2252,'BAEKJOON','https://www.acmicpc.net/problem/13267',13267,'쿠키 배열','2초','256 MB',21,'<p>언제나 그랬듯이, 데브베이커리에서는 쿠키를 굽고 있다! 오늘 데브베이커리에서 굽는 쿠키는 딱 2 가지로, 2×1 크기의 ‘명랑한 쿠키양’과 1×1 크기의 ‘용감한 쿠키군의 머리’쿠키이다.</p>

<p>데브베이커리에서는 쿠키들을 구울 때, 쿠키들을 정확히 N×5 모양으로 배치하여 굽는다. 1×1 크기의 쿠키는 정확히 K 개 굽는데, 쿠키들을 배치할 때, 먼저 1×1 크기의 쿠키들을 모두 배치한 후에 그 다음으로 2×1 크기의 쿠키를 채워 넣어서 빈 칸이 없도록 쿠키를 굽는다. (쿠키를 돌려서 배치할 수도 있다)</p>

<p>N 과 K, 그리고 1×1 크기의 쿠키의 배치 위치가 주어졌을 때, 2×1 크기의 쿠키를 배치하는 경우의 수를 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫째 줄에 N 과 K 가 주어진다. (1 ≤ N ≤ 10<sup>18</sup>, 0 ≤ K ≤ 1000)</p>

<p>둘째 줄부터 K+1 번째 줄에 쿠키의 위치를 나타내는 좌표가 두 개의 정수로 주어진다. </p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>2×1 크기의 쿠키를 배치하는 경우의 수를 1,000,000,007 로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 2
1 1
2 1
','5
','MATH'),
                                                                                                                (2253,'BAEKJOON','https://www.acmicpc.net/problem/13270',13270,'피보나치 치킨','1초','128 MB',9,'<p>KAIST 주변에서 먹을 수 있는 배달 음식들은 대부분 치킨이다. 이렇게 치킨집이 포화 상태지만 지훈이는 카이스트 주변에 새로 치킨집을 창업했는데, 생각보다 장사가 잘 되었다!</p>

<p>알고 보니 그가 차린 치킨집의 신기한 방식 때문에 장사가 잘 된다고 한다. 지훈이의 치킨집에 치킨 주문을 하는 것은 간단하다. 어차피 지훈이네 치킨집의 메뉴는 도깨비오븐구이 하나이므로, 치킨 먹을 사람 수만 이야기하면, 그 사람 수에 맞는 치킨을 배달하는 것이다.</p>

<p>치킨의 마리 수를 정하는 방법은 다음과 같다:</p>

<ol>
	<li>2인 1닭, 3인 2닭, 5인 3닭, 8인 5닭, 13인 8닭 … 등 피보나치 수열의 인접한 두 수를 이용해(항상 사람의 수 > 닭의 수가 되어 야 한다) 치킨 세트를 만든다.</li>
	<li>이 세트들을 적절히 조합해서 총 합이 정확히 N인분이 되도록 만든다.</li>
	<li>2번 과정에서 조합한 세트들을 배달한다.</li>
</ol>

<p>어느 날, 지훈이의 치킨집 단골인 태영이가 N명이 먹을 것을 주문하면 배달되는 치킨 수의 범위가 궁금해졌다. 똑같이 N인분을 주문한다고 해서 항상 같은 마리수의 닭이 오는 것은 아니기 때문이다. 예를 들어, N=6 일 경우, “2인 1닭” 세트를 3개 배달하면 총 3마리가 오는 반면, “3인 2닭” 세트를 2 개 배달하면 총 4마리까지 올 수도 있다. 태영이는 이미 답을 알고 있으나 계산하기 귀찮은 나머지 여러분들에게 프로그램을 만들라고 시켰다.</p>

<p>치킨은 좋아하는 여러분들도 답이 궁금할 것이라고 생각되므로 이 문제를 풀어보자. N이 주어졌을 때 배달되는 치킨 수의 최솟값과 최댓값을 구하면 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 사람의 수 N이 주어진다. N은 2016년에 재학 중이었던 카이스트 학생 수보다는 작거나 같은 2 이상의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>배달되는 치킨 수의 최솟값과 최댓값을 띄어쓰기로 구분하여 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
','3 4
','MATH'),
                                                                                                                (2241,'BAEKJOON','https://www.acmicpc.net/problem/13277',13277,'큰 수 곱셈','3초','512 MB',1,'<p>두 정수 A와 B가 주어졌을 때, 두 수의 곱을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 A와 B가 주어진다. 두 정수는 0보다 크거나 같은 정수이며, 0을 제외한 정수는 0으로 시작하지 않으며, 수의 앞에 불필요한 0이 있는 경우도 없다. 또한, 수의 길이는 300,000자리를 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>두 수의 곱을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 2
','2
','MATH'),
                                                                                                                (2267,'BAEKJOON','https://www.acmicpc.net/problem/13278',13278,'피보나치 합의 개수','5초','512 MB',22,'<p>피보나치 수는 다음과 같이 정의된다</p>

<ul>
	<li>F[1] = 1</li>
	<li>F[2] = 1</li>
	<li>F[N] = F[N-1] + F[N-2] (N ≥ 2)</li>
</ul>

<p>N개의 수가 주어져있는 집합 S와 정수 K가 주어진다.</p>

<p>이때, 집합 S의 크기가 K인 부분 집합 s에 대해서, 각 부분 집합 s의 합번째 피보나치 수의 합을 구하는 프로그램을 작성하시오.</p>

<p>예를 들어, S = {1, 2, 3, 4, 5}, K = 2인 경우 S의 모든 부분 집합은 {1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 5}, {3, 4}, {3, 5}, {4, 5} 이다. 각 부분 집합의 합은 3, 4, 5, 6, 5, 6, 7, 7, 8, 9 이다. F[3] + F[4] + F[5] + F[6] + F[5] + F[6] + F[7] + F[7] + F[8] + F[9] = 112 이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N (1 ≤ N ≤ 50000)과 K (1 ≤ K ≤ N)이 주어진다.</p>

<p>둘째 줄에는 집합의 각 원소가 주어진다. 집합에 들어있는 수는 10<sup>9</sup>보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 집합 S의 크기가 K인 부분 집합 s에 대해서, 각 부분 집합 s의 합번째 피보나치 수의 합을 99991로 나눈 나머지를&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 1
1 2 3
','4
','MATH'),
                                                                                                                (2258,'BAEKJOON','https://www.acmicpc.net/problem/13279',13279,'곱의 합 쿼리','2초','512 MB',18,'<p>N개의 수로 이루어진 수열 A가 주어진다. 이때, Q개의 쿼리를 실행한 결과를 구하는 프로그램을 작성하시오.</p>

<p>각각의 쿼리는 정수 K로 이루어져 있다. 수열 A의 부분 수열 중에서 크기가 K인 것을 모두 구한 다음, 각 부분 수열에 들어있는 수의 곱을 구한다. 그 다음 이 수의 합을 100003로 나눈 나머지를 출력한다.</p>

<p>수열 A의 크기가 K인 부분 수열의 개수는 <sub>N</sub>C<sub>K</sub>개이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(1 ≤ N ≤ 30000) 이 주어지고, 둘째 줄에는 수열에 포함되어 있는 수 A<sub>i</sub>(1 ≤ A<sub>i</sub> ≤ 100,000)가 주어진다.&nbsp;</p>

<p>셋째 줄에는 쿼리의 개수 Q(1 ≤ Q ≤ N)가 주어지고, 넷째 줄부터 Q개의 줄에는 각 쿼리에 해당하는 K(1 ≤ K ≤ N)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 쿼리에 대해서 정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1의 경우에 K = 1이면 부분 배열은 {1}, {2}, {3}이 있다. 합은 1+2+3 = 6이다.</p>

<p>K = 2인 경우에 부분 배열은 {1, 2}, {2, 3}, {1, 3}있다. 합은 1*2 + 2*3 + 3*1 = 2+6+3 = 11이다.</p>

<p>예제 2의 경우에 K = 2이고, 부분 배열은 {1, 2}, {2, 2}, {1, 2}가 있다. 합은 1*2 + 2*2 + 2*1 = 2+4+2 = 8이다.</p>

				</div>
				</div>','3
1 2 3
2
1
2
','6
11
','MATH'),
                                                                                                                (2264,'BAEKJOON','https://www.acmicpc.net/problem/13294',13294,'역팩토리얼','2초','512 MB',13,'<p>양의 정수 n이 주어졌을 때 n의 팩토리얼인 n!을 구하는 것은 쉽다. 이번에는 n!이 주어졌을 때 n을 구해 보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>어떤 자연수 n에 대해 n!이 입력으로 주어진다. n!의 자리수는 10<sup>6</sup> 이하이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>n을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','120
','5
','MATH'),
                                                                                                                (2266,'BAEKJOON','https://www.acmicpc.net/problem/13300',13300,'방 배정','2초','512 MB',4,'<p>정보 초등학교에서는 단체로 2박 3일 수학여행을 가기로 했다. 여러 학년이 같은 장소로 수학여행을 가려고 하는데 1학년부터 6학년까지 학생들이 묵을 방을 배정해야 한다. 남학생은 남학생끼리, 여학생은 여학생끼리 방을 배정해야 한다. 또한 한 방에는 같은 학년의 학생들을 배정해야 한다. 물론 한 방에 한 명만 배정하는 것도 가능하다.</p>

<p>한 방에 배정할 수 있는 최대 인원 수 K가 주어졌을 때, 조건에 맞게 모든 학생을 배정하기 위해 필요한 방의 최소 개수를 구하는 프로그램을 작성하시오.</p>

<p>예를 들어, 수학여행을 가는 학생이 다음과 같고 K = 2일 때 12개의 방이 필요하다. 왜냐하면 3학년 남학생을 배정하기 위해 방 두 개가 필요하고 4학년 여학생에는 방을 배정하지 않아도 되기 때문이다.</p>

<table class="table table-bordered table-center-30">
	<thead>
		<tr>
			<th>학년</th>
			<th>여학생</th>
			<th>남학생</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>1학년</td>
			<td>영희</td>
			<td>동호, 동진</td>
		</tr>
		<tr>
			<td>2학년</td>
			<td>혜진, 상희</td>
			<td>경수</td>
		</tr>
		<tr>
			<td>3학년</td>
			<td>경희</td>
			<td>동수, 상철, 칠복</td>
		</tr>
		<tr>
			<td>4학년</td>
			<td>&nbsp;</td>
			<td>달호</td>
		</tr>
		<tr>
			<td>5학년</td>
			<td>정숙</td>
			<td>호동, 건우</td>
		</tr>
		<tr>
			<td>6학년</td>
			<td>수지</td>
			<td>동건</td>
		</tr>
	</tbody>
</table>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>표준 입력으로 다음 정보가 주어진다. 첫 번째 줄에는 수학여행에 참가하는 학생 수를 나타내는 정수 N(1 ≤ N ≤ 1,000)과 한 방에 배정할 수 있는 최대 인원 수 K(1 < K ≤ 1,000)가 공백으로 분리되어 주어진다. 다음 N 개의 각 줄에는 학생의 성별 S와 학년 Y(1 ≤ Y ≤ 6)가 공백으로 분리되어 주어진다. 성별 S는 0, 1중 하나로서 여학생인 경우에 0, 남학생인 경우에 1로 나타낸다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>표준 출력으로 학생들을 모두 배정하기 위해 필요한 최소한의 방의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','16 2
1 1
0 1
1 1
0 2
1 2
0 2
0 3
1 3
1 4
1 3
1 3
0 6
1 5
0 5
1 5
1 6
','12
','MATH'),
                                                                                                                (2270,'BAEKJOON','https://www.acmicpc.net/problem/13301',13301,'타일 장식물','2초','512 MB',6,'<p>대구 달성공원에 놀러 온 지수는 최근에 새로 만든 타일 장식물을 보게 되었다. 타일 장식물은 정사각형 타일을 붙여 만든 형태였는데, 한 변이 1인 정사각형 타일부터 시작하여 마치 앵무조개의 나선 모양처럼 점점 큰 타일을 붙인 형태였다. 타일 장식물의 일부를 그리면 다음과 같다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/13301/1.png" style="height:307px; width:191px"></p>

<p>그림에서 타일에 적힌 수는 각 타일의 한 변의 길이를 나타낸다. 타일 장식물을 구성하는 정사각형 타일 한 변의 길이를 안쪽 타일부터 시작하여 차례로 적으면 다음과 같다.</p>

<blockquote>
<p>1, 1, 2, 3, 5, 8, ...&nbsp;</p>
</blockquote>

<p>지수는 문득 이러한 타일들로 구성되는 큰 직사각형의 둘레가 궁금해졌다. 예를 들어, 처음 다섯개의 타일이 구성하는 직사각형(위에서 빨간색으로 표시한 직사각형)의 둘레는 26이다.</p>

<p>타일의 개수 N(1 ≤ N ≤ 80)이 주어졌을 때, N개의 타일로 구성된 직사각형의 둘레를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>표준 입력으로 다음 정보가 주어진다. 입력은 한 줄로 구성되며 이 줄에는 타일의 개수를 나타내는 정수 N(1 ≤ N ≤ 80)이 주어진다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>표준 출력으로 N 개의 타일이 구성하는 타일 장식물 직사각형의 둘레를 출력한다.&nbsp;</p>

<p>64비트 정수형인 “long long” 자료형을 써야할 수 있음</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
','26
','MATH'),
                                                                                                                (2271,'BAEKJOON','https://www.acmicpc.net/problem/13304',13304,'방 배정','2초','512 MB',4,'<p>정보 초등학교에서는 단체로 2박 3일 수학여행을 가기로 했다. 여러 학년이 같은 장소로 수학여행을 가려고 하는데 1학년부터 6학년까지 학생들이 묵을 방을 배정해야 한다. 1~2학년은 남학생, 여학생 구별 없이 방을 배정할 수 있으며 3~6학년은 남학생은 남학생끼리, 여학생은 여학생끼리 방을 배정해야 한다. 또한 1~2학년은 학년 구별 없이 같은 방에 배정할 수 있으며 마찬가지로 3~4학년도, 5~6학년도 각각 학년 구별 없이 방을 배정할 수 있다. 물론 한 방에 한 명만 배정되는 것도 가능하다.</p>

<p>한 방에 배정할 수 있는 최대 인원 수 K가 주어졌을 때, 조건에 맞게 모든 학생을 배정하기 위해 필요한 방의 최소 개수를 구하는 프로그램을 작성하시오.</p>

<p>예를 들어, 수학여행을 가는 학생이 다음과 같다면 K = 2일 때 9개의 방이 필요하다.&nbsp;</p>

<table class="table table-bordered table-center-30">
	<thead>
		<tr>
			<th>학년</th>
			<th>여학생</th>
			<th>남학생</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>1학년</td>
			<td>영희</td>
			<td>동호, 동진</td>
		</tr>
		<tr>
			<td>2학년</td>
			<td>혜진, 상희</td>
			<td>경수</td>
		</tr>
		<tr>
			<td>3학년</td>
			<td>경희</td>
			<td>동수, 상철, 칠복</td>
		</tr>
		<tr>
			<td>4학년</td>
			<td>&nbsp;</td>
			<td>달호</td>
		</tr>
		<tr>
			<td>5학년</td>
			<td>정숙</td>
			<td>호동, 건우</td>
		</tr>
		<tr>
			<td>6학년</td>
			<td>수지</td>
			<td>동건</td>
		</tr>
	</tbody>
</table>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>표준 입력으로 다음 정보가 주어진다. 첫 번째 줄에는 수학여행에 참가하는 학생 수를 나타내는 정수 N(1 ≤ N ≤ 1,000)과 한 방에 배정할 수 있는 최대 인원 수 K(1 ≤ K ≤ 1,000)가 공백으로 분리되어 주어진다. 다음 N&nbsp;개의 각 줄에 학생의 성별 S와 학년 Y(1 ≤ Y ≤ 6)가 공백으로 분리되어 주어진다. 성별 S는 0, 1중 하나로서 여학생인 경우에 0, 남학생인 경우에 1로 나타낸다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>표준 출력으로 학생들을 모두 배정하기 위해 필요한 최소한의 방의 수를 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 3
0 3
1 5
0 6
','3
','MATH'),
                                                                                                                (2302,'BAEKJOON','https://www.acmicpc.net/problem/13311',13311,'행운의 편지','2초','512 MB',3,'<p>지구이는 어느 날 다음과 같은 편지를 받았다.</p>

<p>“이 편지는 영국에서 최초로 시작되어 일년에 한 바퀴 돌면서 받는 사람에게 행운을 주었고 지금은 당신에게로 옮겨진 이 편지는 12시간 안에 아래 쓰여있는 문제를 풀어야 합니다. 이 편지를 포함해서 7통을 행운이 필요한 사람에게 보내 주셔야 합니다. 복사를 해도 좋습니다. ...(중략)… 2부터 1000까지의 자연수 a에 대하여, n ≡ a­-1 (mod a)인 정수 n을 구하여라.“</p>

<p>실수로 편지를 끝까지 읽어버린 지구이는 문제도 풀지 못해 너무 찜찜해졌다. 지구이를 도와 문제를 대신 풀어주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 432자리 이내의 숫자&nbsp;n을 출력한다.</p>

<p>출력 예시는 답이 아님에 주의하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','','1234
','MATH'),
                                                                                                                (2285,'BAEKJOON','https://www.acmicpc.net/problem/13318',13318,'위험한 해싱','5초','512 MB',24,'<p>string matching 알고리즘에는 여러 가지가 있다. KMP 알고리즘이나 Boyer­Moore 알고리즘이 그 예시이다. 하지만 지구이는 KMP를 이해할 수 없었고, Boyer­Moore는 시간복잡도가 너무 컸다. 결국 지구이는 틀릴 확률이 있지만, 간단한 방법인 해싱을 즐겨 사용하게 되었다. 해싱은 문자열을 숫자 하나로 바꾸는 해시 함수를 하나 정의한 후, 이 값이 같은지 다른지를 통해 문자열이 같은지 판별하는 방법이다.</p>

<p>지구이는 해시 함수를 다음과 같이 정의했다.</p>

<p>길이가 n인 문자열 d[0] ~ d[n­1]와 임의의 숫자 p에 대하여 해시 함수 값은 아래와 같다. (d[i]는 해당 문자의 ASCII 코드 값이다.)</p>

<p>H(p, d) = p<sup>0</sup> * d[0] + p<sup>1</sup> * d[1] + ... + p<sup>n-1</sup> * d[n­1] (mod (10^9 + 7))</p>

<p>지구이는 Codeforces 대회에서 H(29, d)를 해시 함수로 사용하였다. 이는 H(29, d) = H(29, e)인 두 문자열 d, e가 있다면, d, e는 같은 문자열로 판별하는 것을 의미한다. 하지만 우연히 같은 룸에 도토리가 있었고, 도토리는 해시 값이 같은 두 문자열을 찾아 핵을 성공시켰다.</p>

<p>결국 지구이는 그 문제를 풀지 못했으며, 도토리에게 해싱이 너무 약했기 때문에 틀렸다는 사실을 듣게 되었다. 그 후로 지구이는 해시 함수로 H(29, d) 뿐만이 아니라, p의 값이 31, 37, 41, 43, 47, 53, 59, 61, 67인 해시 함수도 사용하기로 했다. 즉, 문자열 각각에 대하여 10개의 해시 함수를 계산한 후, 모든 해시 함수의 값이 같을 때만 두 문자열이 같다고 판별하는 것이다.</p>

<p>이제 지구이는 자신이 틀릴 리가 없다고 생각하고 있다. 해시 함수 10개의 값이 같은 문자열 2개를 만들어 KMP의 아름다움을 보여주자!</p>

<p>지구이의 코드는 <a href="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/13318/hashing.cpp"><strong><u>여기</u></strong></a>에 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 문자열 A를 출력한다.</p>

<p>두 번째 줄에 문자열 B를 출력한다.</p>

<p>문자열 2개는 길이는 같되 서로 달라야 하며, 길이는 300000 이하여야 한다. 또한, 문자열은 알파벳 소문자로만 구성되어야 한다.</p>

<p>출력 예시는 답이 아님에 주의하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','','aaaaaa
bbbbbb
','MATH'),
                                                                                                                (2286,'BAEKJOON','https://www.acmicpc.net/problem/13319',13319,'가짜 소수','2초','512 MB',16,'<p>지구이는 우연히 오일러 프로젝트에서 100억 정도의 매우 큰 숫자가 소수인지 판별해야만 풀리는 문제를 보게 되었다. 지구이는 2부터 sqrt(N) 까지 모든 숫자로 나누는 방법으로 코딩했지만, 1시간이 지나도 결과가 나오지 않았다. 결국 구글신에게 물어본 결과 “페르마 소정리”를 찾을 수 있었다. 페르마 소정리는 다음과 같다.</p>

<p>“소수 p와 (a, p) = 1인 모든 자연수 a에 대하여, a<sup>(p-1)</sup> ≡ 1 (mod p)이다.”</p>

<p>지구이는 이것을 응용해서 n이 소수인지 확인하기 위해 2<sup>(n-1)</sup> ≡ 1 (mod n)이면 소수라고 판별하기로 했다. 하지만 지구이의 코드는 561을 소수로 분류했고, 결국 또 틀리고 말았다. 이대로 포기할 수 없었던 지구이는 이것을 응용해서 2부터 500까지의 모든 숫자 a에 대하여 a<sup>(n-1)</sup> ≡ 1 (mod n)을 만족할 때만 소수로 판별하기로 했다. 백만까지 컴퓨터로 확인을 해본 지구이는 자신만만하게 답을 제출했지만, 빨간 X표시가 반겨줄 뿐이었다.</p>

<p>지구이에게 반례 데이터를 알려주자!</p>

<p>지구이의 소수판별 코드는 <a href="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/13319/pseudo_prime.cpp"><strong><u>여기</u></strong></a>에 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 자연수 n(500 < n ≤ 10<sup>15</sup>)과 n의 소인수 m (1 < m < n)을 출력한다.</p>

<p>출력 예시는 답이 아님에 주의하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','','561 11
','MATH'),
                                                                                                                (2288,'BAEKJOON','https://www.acmicpc.net/problem/13337',13337,'거의 오일러 그래프','2초','512 MB',20,'<p>N개의 정점으로 이루어져있는 양방향 그래프가 있다. 그래프의 정점은 0번부터 N-1번까지 번호가 매겨져 있다. 이 그래프는 단순 그래프이기 때문에, 루프를 포함하지 않으며, 임의의 두 정점을 연결하는 간선의 개수는 최대 1개이다.</p>

<p>그래프의 모든 간선을 포함하는 닫힌 보행이 존재할 때, 그러한 양방향 연결 그래프를 오일러 그래프라고 한다. 여기서 닫힌 보행이란, 첫 정점과 마지막 정점이 같은 보행을 의미한다.</p>

<p>어떤 그래프가 있을 때, 이 그래프에 간선 1개를 추가하거나 제거했을 때, 결과 그래프가 오일러 그래프가 되었다면, 이 그래프를 거의 오일러 그래프라고 한다. 간선을 추가할 때, 루프를 만들거나 이미 존재하는 간선을 또 추가할 수는 없다. 또, 모든 오일러 그래프는 거의 오일러 그래프이다.</p>

<p>N이 주어졌을 때, 정점이 N개인 서로 다른 거의 오일러 그래프의 개수를 구하는 프로그램을 작성하시오. 0 ≤ i < j ≤ N-1을 만족하는 간선 (i, j)가 한 그래프에는 존재하는데, 다른 그래프에는 존재하지 않는다면, 두 그래프를 다른 그래프라고 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정점의 개수 N (2 ≤ N ≤ 2000)이 주어진다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 정점 N개로 이루어진 거의 오일러 그래프의 개수를 1,000,000,007로 나눈 나머지를&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
','4
','MATH'),
                                                                                                                (2331,'BAEKJOON','https://www.acmicpc.net/problem/13391',13391,'특별한 표','2초','512 MB',22,'<p>준규는 정수가 채워져 있는 표를 매우 좋아한다. 준규는 다음과 같은 4가지 성질을 모두 만족하는 표를 특별한 표라고 한다.</p>

<ul>
	<li>표는 N행 M열로 이루어져 있다.</li>
	<li>표의 각 칸에는 1보다 크거나 같고, C보다 작거나 같은 자연수가 하나 채워져 있다.</li>
	<li>임의의 서로 다른 두 행 r1과 r2에 대해서, 서로 다른 수가 채워져 있는 칸 (r1, c)와 (r2, c)가 적어도 하나 존재한다.</li>
	<li>임의의 서로 다른 두 열 c1과 c2에 대해서, 서로 다른 수가 채워져 있는 칸 (r, c1)와 (r, c2)가 적어도 하나 존재한다.</li>
</ul>

<p>N, M, C가 주어졌을 때, 특별한 표의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, M, C (1 ≤ N, M, C ≤ 4,000)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>특별한 표의 개수를 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1의 경우에 가능한 특별한 표는 다음과 같다.</p>

<pre>11  11  12  21  22  22  21  12  12  21
12  21  11  11  21  12  22  22  21  12</pre>

				</div>
				</div>','2 2 2
','10
','MATH'),
                                                                                                                (2313,'BAEKJOON','https://www.acmicpc.net/problem/13396',13396,'카르테시안 트리 2','2초','512 MB',20,'<p>현정이는 오늘 카르테시안 트리를 배웠고, 카르테시안 트리에 대한 자세한 설명은&nbsp;<a href="https://en.wikipedia.org/wiki/Cartesian_tree">https://en.wikipedia.org/wiki/Cartesian_tree</a>&nbsp;에 나와있다. 다음은 카르테시안 트리에 대한 간단한 설명이다.</p>

<p>서로 다른 정수로 이루어진 수열 A가 있을 때, 수열 A를 이용해서 유일한 카르테시안 트리를 만들 수 있다. 카르테시안 트리는 다음과 같은 규칙을 지켜야 한다.</p>

<ol>
	<li>카르테시안 트리는 루트 있는 바이너리 트리이다.</li>
	<li>트리의 각 노드는 A의 원소에 대응한다.</li>
	<li>트리를 인오더 순회했을 때, 수열 A와 순서가 같아야 한다.</li>
	<li>트리는 힙이다.</li>
</ol>

<p>아래 그림은 A = [9, 3, 7, 1, 8, 12, 10, 20, 15, 18, 5] 를 이용해서 만든 카르테시안 트리이다.</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/13336/1.png" style="height: 345px; width: 360px;"></p>

<p>수열 A를 이용해서 만든 카르테시안 트리를 T라고 했을 때, 카르테시안 트리 T의 점수는 다음과 같이 계산한다.</p>

<p>T에서 자식을 두 개 가지고 있는 노드를 찾는다. 그 다음, 각각의 노드에 대해서, 두 자식에 저장되어있는 값을 수열 A에서 찾는다. 그 다음 A에서의 인덱스의 차이를 모두 더한 것이 트리 T의 점수가 된다.</p>

<p>위의 그림의 경우에 자식 노드를 2개 가지고 있는 노드는 1, 3, 10, 15이다. 1은 노드 3과 5를 자식으로 가지고 있는데, 수열 A에서 인덱스는 1과 10이다. 따라서, 이 노드의 점수는 10 - 1 = 9가 된다. 자식을 2개 가지고 있는 다른 세 노드의 점수를 구해보면 2, 3, 2가 나오게 되고, 트리의 점수는 9 + 2 + 3 + 2 = 16이 된다.</p>

<p>N, MOD가 입력으로 주어진다. 1부터 N까지의 수로 이루어진 순열은 총 N!개가 있다. 이때, 각각의 순열은 카르테시안 트리를 만든다. 이때, 만들 수 있는 모든 카르테시안 트리의 점수의 합을 X라고 했을 때, X를 MOD로 나눈 나머지를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N (1 ≤ N ≤ 100), MOD (3 ≤ MOD ≤ 10<sup>9</sup>, MOD는 소수)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>N!개의 순열로 만들 수 있는 모든 카르테시안 트리의 점수의 합을 MOD로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 502739849
','4
','MATH'),
                                                                                                                (2296,'BAEKJOON','https://www.acmicpc.net/problem/13410',13410,'거꾸로 구구단','1초','128 MB',4,'<p>일반적인 구구단에서 가장 큰 수는 마지막 항의 값이 제일 크다. 거꾸로 구구단에서는, 각 항에 구구단의 계산 결과로 나온 값을 뒤집어 저장을 한다. 이렇게 하면 가장 큰 값이 항상 마지막이 아니게 된다. 예를 들어 8단의 9개 항의 값은 8, 16, 24, 32, 40, 48, 56, 64, 72 이 되어 72가 가장 크지만, 거꾸로 구구단에서는 8, 61, 42, 23, 4, 84, 65, 46, 27 가 되어 84가 가장 큰 값을 가지게 된다.</p>

<p>단의 수 N과 항의 수 K가 주어질 때, 거꾸로 구구단의 가장 큰 값을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 K가 주어진다. 두 수는 모두 1,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 주어진 단과 항에서 나올 수 있는 가장 큰 거꾸로 구구단의 값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8 9
','84
','MATH'),
                                                                                                                (2315,'BAEKJOON','https://www.acmicpc.net/problem/13412',13412,'서로소 쌍','1초','128 MB',9,'<p>두 자연수 A, B의 최대공약수를 GCD(A, B)라고 할 때, A와 B가 서로소면 GCD(A, B) = 1이다. 두 자연수 A, B의 최소공배수를 LCM(A, B)라고 할 때, A와 B가 서로소면 LCM(A, B) = A x B이다.</p>

<p>어떤 자연수 N이 서로소인 두 자연수 A, B의 최소공배수라고 할 때, A, B로 가능한 숫자 쌍은 여러 개가 있을 수 있다. 예를 들어 N = 30인 경우 30을 최소공배수로 하는 서로소인 두 자연수로 가능한 숫자 쌍은 (1, 30), (2, 15), (3, 10), (5, 6)의 4가지가 있다.</p>

<p>자연수 N이 주어질 때 N을 최소공배수로 하는 서로소인 자연수 쌍의 개수를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트 케이스의 개수를 나타내는 자연수 T가 주어진다. 다음 줄부터 차례로 T개의 테스트 케이스가 주어진다. 각각의 테스트 케이스의 첫째 줄에 100,000,000이하의 자연수 N이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스의 답을 순서대로 출력한다. 각 테스트 케이스마다 첫 줄에 N을 최소공배수로 하는 서로소인 자연수 쌍의 개수를 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
30
16
60060
','4
1
32
','MATH'),
                                                                                                                (2314,'BAEKJOON','https://www.acmicpc.net/problem/13416',13416,'주식 투자','1초','128 MB',3,'<p>환규는 오늘부터 주식 투자를 하려고 한다. 열심히 정보를 수집한 결과 A사, B사, C사에 투자하기로 했다. 환규는 오늘 산 주식이 내일 오를지, 떨어질지 예측하는 것이 아직은 힘들다. 그래서 다음과 같이 투자를 하기로 했다. 먼저 서로 다른 날에는 서로 다른 회사의 주식을 살 수 있지만, 하루에는 최대 1개 회사의 주식만 사도록 한다. 매일 장이 열리기 전에 A사, B사, C사 중 그날 주식을 살 회사를 하나 정한 후, 장이 열릴 때 정한 회사의 주식을 산다. 그 다음 장이 닫힐 때 그날 산 주식을 모두 판다. 만약 세 회사 중 어느 곳도 수익이 날 것 같지 않으면 주식을 구매하지 않아도 된다.</p>

<p>환규는 주식을 처음 해보기 때문에 과연 주식으로 돈을 벌 수 있을지 궁금해졌다. 그래서 투자하려는 회사들의 지난 N일 동안의 주식 데이터를 이용해 N일 동안 위 규칙을 지키며 주식투자를 했을 때 과연 얼마를 벌 수 있는지 계산해 보기로 했다. 먼저 A사, B사, C사의 N일 동안의 주가 데이터를 모았다. 환규는 이 데이터를 이용해 각 회사별로 장이 열릴 때 주식을 사고, 장이 닫힐 때 모두 팔았을 경우 매일 얼마를 벌 수 있었는지 정리했다. 다음은 N = 4일때 환규가 정리한 데이터를 나타내는 표이다.</p>

<table class="table table-bordered" style="width:50%">
	<tbody>
		<tr>
			<td>날짜<br>
			회사명</td>
			<td>1일</td>
			<td>2일</td>
			<td>3일</td>
			<td>4일</td>
		</tr>
		<tr>
			<td>A사</td>
			<td>500</td>
			<td>300</td>
			<td>-100</td>
			<td>600</td>
		</tr>
		<tr>
			<td>B사</td>
			<td>800</td>
			<td>0</td>
			<td>-200</td>
			<td>200</td>
		</tr>
		<tr>
			<td>C사</td>
			<td>200</td>
			<td>300</td>
			<td>-400</td>
			<td>300</td>
		</tr>
	</tbody>
</table>

<p>위 표에서 양수는 이익을, 음수는 손해를 나타내며, 0은 이익도, 손해도 없음을 의미한다. 예를 들어 1일째에 A사의 주식을 장이 열릴 때 사고, 장이 닫힐 때 팔면 500의 이익을 얻을 수 있었다. 만약 3일째에 C사의 주식을 장이 열릴 때 사고, 장이 닫힐 때 판다면 400의 손해가 생겼을 것이다.</p>

<p>데이터를 분석하던 환규는 자신이 정리한 데이터를 이용해서 N일 동안 규칙을 지키면서 매일 최적의 투자를 할 경우 최대 얼마를 벌 수 있었는지 궁금해졌다. 예를 들어 위 표에서 1일째에는 B사의 주식을 사면 가장 많은 이익을 남길 수 있다. 2일째에는 A사, 또는 C사의 주식을 사면 가장 많은 이익을 남길 수 있다. 3일째에는 어떤 주식을 사도 손해가 나므로 주식을 사지 않는다. 4일째에는 A사의 주식을 사면 된다. 이렇게 주식 투자를 할 경우 환규는 800 + 300 + 0 + 600 = 1700으로, 최대 1700의 이익을 남길 수 있다. N일 동안 A사, B사, C사의 주식을 장이 열릴 때 사고, 장이 닫힐 때 모두 팔았을 경우의 손익을 정리한 데이터가 주어질 때, 환규가 N일간 규칙을 지키며 최적의 투자를 했을 경우 얻을 수 있었을 최대 이윤을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력 데이터는 표준 입력을 사용한다. 입력은 T개의 테스트 데이터로 구성된다. 입력의 첫째 줄에는 테스트 케이스의 개수를 나타내는 자연수 T가 주어진다. 각각의 테스트 케이스의 첫째 줄에 환규가 정리한 주식 데이터의 일수를 나타내는 자연수 N(1 ≤ N ≤ 1,000)이 주어진다. 다음 N개의 줄에 각 회사별 주식을 구매했을 때, 그날 그날의 손익을 나타내는 3개의 정수 A, B, C (-1,000,000 ≤ A, B, C ≤1,000,000)가 주어진다. A는 A사의 주식을 구매했을 때의 손익, B는 B사의 주식을 구매했을 때의 손익, C는 C사의 주식을 구매했을 때의 손익을 나타낸다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 표준 출력을 사용한다. 입력받은 데이터에 대해, 환규가 N일 동안 규칙을 지키며 최적의 투자를 했을 경우 얻을 수 있었을 최대 이익을 한 줄에 1개씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
4
500 800 200
300 0 300
-100 -200 -400
600 200 300
3
451 234 309
224 334 467
143 246 245
','1700
1164
','MATH'),
                                                                                                                (2297,'BAEKJOON','https://www.acmicpc.net/problem/13420',13420,'사칙연산','1초','128 MB',4,'<p>사칙연산은 덧셈, 뺄셈, 곱셈, 나눗셈으로 이루어져 있으며, 컴퓨터 프로그램에서 이를 표현하는 기호는 +, -, *, / 와 같다. 아래는 컴퓨터 프로그램에서 표현한 사칙 연산의 예제이다.</p>

<p style="text-align:center">3 * 2 = 6</p>

<p>문제와 답이 주어졌을 때, 이를 계산하여 올바른 수식인지 계산하는 프로그램을 만들려고 한다. 만약 주어진 데이터가 3 * 2 = 6 이라면 정답으로, 3 * 2 = 7 이면 오답으로 채점을 하면 된다. 문제와 답이 주어졌을 때, 이를 채점하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력 데이터는 표준 입력을 사용한다. 입력은 T개의 테스트 데이터로 구성된다. 입력의 첫 번째 줄에 테스트 케이스의 개수를 나타내는 자연수 T가 주어진다. 각 테스트 케이스의 첫 번째 줄에는 수식이 주어진다. 수식은 문자와 기호가 공백으로 구분되어 주어지고, 사칙연산 기호는 1개만 사용된다. 나눗셈의 경우 항상 나누어떨어지는 경우로만 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 표준 출력을 사용한다. 입력받은 데이터에 대해, 각 테스트 케이스의 답을 순서대로 1줄에 1개씩 출력한다. 주어진 수식이 정답일 경우 “correct”를, 오답일 경우 “wrong answer”를 출력한다. 문제의 정답이 32비트 정수가 넘어갈 수 있다.&nbsp;모든 범위가 부호가 있는 64비트 정수 이내이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
3 * 2 = 6
11 + 11 = 11
7 - 9 = -2
3 * 0 = 0
','correct
wrong answer
correct
correct
','MATH'),
                                                                                                                (2318,'BAEKJOON','https://www.acmicpc.net/problem/13428',13428,'배열의 합','5초','512 MB',22,'<p>크기가 N인 배열 A와 배열 B가 주어진다.</p>

<p>배열 A와 B에 들어있는 수를 마음대로 각각 섞을 수 있다. 그 다음 배열 C를 만든다. 배열 C를 만드는 방법은 C[i] = A[i] + B[i] 이다.</p>

<p>현정이는 같은 수를 좋아하기 때문에, 배열 C가 같은 수를 많이 포함하고 있게 만들려고 한다. 배열 C가 주어졌을 때, 현정이는 정수 X와 Y를 계산할 수 있는데, Y는 C에서 가장 많이 등장한 수, X는 등장한 횟수이다. 이때, X를 최대한 크게 만들어야 한다.</p>

<p>배열 A, B가 주어졌을 때, X가 크게 C를 만드는 프로그램을 작성하시오. 이때, 같은 경우가 여러 가지라면 Y가 큰 것을 구한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 배열의 크기 N(3 ≤ N ≤ 100,000)이 주어진다.</p>

<p>둘째 줄에는 배열 A에 들어있는 수가, 셋째 줄에는 배열 B에 들어있는 수가 주어진다.</p>

<p>배열에 들어있는 수는 0보다 크거나 같고, 100,000보다 작은 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>배열 A, B가 주어졌을 때, X가 크게 C를 만든다. 이때, 같은 경우가 여러 가지라면 Y가 큰 것을 구한 다음, X와 Y를 공백으로 구분해서 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 1 1
1 1 1
','3 2
','MATH'),
                                                                                                                (2316,'BAEKJOON','https://www.acmicpc.net/problem/13429',13429,'동전 교환','2초','512 MB',18,'<p>강호는 동전 수집가이다. 강호가 가지고 있는 모든 동전의 가치는 1보다 크거나 같고 D보다 작거나 같은 자연수이다. 같은 가치를 갖는 동전을 여러개 가지고 있을 수도 있다. 강호는 임의의 두 동전을 구분할 수 있으며, 두 동전의 가치가 같다고 해도 동전을 구분할 수 있다.</p>

<p>준규는 강호가&nbsp;어떤 동전을 가지고&nbsp;있는지 알지 못한다. 준규가 알고 있는 정보는 강호가 가지고 있는 동전을 사용해서 x원을 만드는 방법의 수만 알고 있다.</p>

<p>f(x)를 강호가 가지고 있는 동전을 사용해서 x원을 만드는 방법의 수이고, 이 값을 1,000,000,007로 나눈 나머지를 W<sub>i</sub>라고 한다. 준규가 알고 있는 정보는 0 ≤ i ≤ D인 모든 정수 i에 해당하는 W<sub>i</sub>이다.</p>

<p>예를 들어, 강호가 가지고 있는 동전이 1원짜리 두 개라면, f(0) = 1, f(1)= 2, f(2) = 1이고, 2보다 큰 모든 x의 f(x) 값은 0이 된다.</p>

<p>강호는 민호에게 동전 일부를 주려고 한고, 어떻게 동전을 줄지 생각하고 있다. 강호는 Q개의 독립적인 시나리오를 생각했으며, 이 시나리오는 1번부터 Q번까지 번호가 매겨져 있다.</p>

<p>i번째 시나리오는 두 가지 정수 N<sub>i</sub>과 V<sub>i</sub>로 이루어져 있는데, 가치가 V<sub>i</sub>인 동전 N<sub>i</sub>개를 민호에게 준다는 의미이다.</p>

<p>각각의 시나리오에 대해서, 동전을 민호에게 준 이후에 f(D)를 1,000,000,007로 나눈 나머지의 값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 D(1 ≤ D ≤ 1999)가 주어진다.</p>

<p>둘째 줄에는 W<sub>0</sub>, W<sub>1</sub>, ..., W<sub>D</sub>가 주어진다. (0 ≤ W<sub>i</sub> ≤ 1,000,000,006)</p>

<p>셋째 줄에는 시나리오의 개수 Q(1 ≤ Q ≤ 2,000)가 주어진다.&nbsp;</p>

<p>넷째 줄부터 Q개의 줄에는 시나리오의 정보 V<sub>i</sub>와 N<sub>i</sub>가 주어진다. (1 ≤ V<sub>i</sub> ≤ D, 1 ≤ N<sub>i</sub> ≤ 1,000,000)</p>

<p>W<sub>i</sub>로 만들 수 있는 동전이 있으며, 각각의 시나리오 V<sub>i</sub>, N<sub>i</sub>에 해당하는 값을 만들 수 있는 경우만 입력으로 주어진다.</p>

<p>입력으로 주어진 W<sub>i</sub>를 가지고 만들 수 있는 강호의 동전은 여러 가지 방법이 있다. 이 모든 방법에 대해서 각각의 시나리오는 같은 정답을 구할 수 있는 경우면 입력으로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 시나리오에 대해서, f(D)를 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1 4 6
3
1 1
1 2
1 3
','3
1
0
','MATH'),
                                                                                                                (2317,'BAEKJOON','https://www.acmicpc.net/problem/13430',13430,'합 구하기','2초','512 MB',16,'<p>S는 다음과 같이 정의된다.</p>

<ul>
	<li>S(0, n) = n (모든 양의 정수 n)</li>
	<li>S(k, n) = S(k-1, 1) + S(k-1, 2) + ... + S(k-1, n) (모든 양의 정수 k, n)</li>
</ul>

<p>k와 n이 주어졌을 때, S(k, n)을 1,000,000,007로 나눈 나머지를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 k와 n이 주어진다. (1 ≤ k ≤ 50, 1 ≤ n ≤ 1,000,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 S(k, n)을 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 3
','6
','MATH'),
                                                                                                                (2320,'BAEKJOON','https://www.acmicpc.net/problem/13433',13433,'기하 문제','2초','512 MB',15,'<p>N개의 원을 일직선 위에 겹치지 않게 놓으려고 한다. 모든 원이 직선과 접해야 한다.</p>

<p>가장 왼쪽 원과 직선이 닿는 점과 가장 오른쪽 원과 직선이 닿는 점 사이의 거리의 최솟값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에&nbsp;원의 개수 N (3 ≤ N ≤ 8)이 주어진다.</p>

<p>둘째 줄에 원의 반지름이 주어진다. 원의 반지름은 1보다 크거나 같고, 1,000,000,000보다 작거나 같은 자연수이다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 가장 왼쪽 원과 직선이 닿는 점과 가장 오른쪽 원과 직선이 닿는 점 사이의 거리의 최솟값을 출력한다. 정답과의 절대/상대 오차는 10<sup>-9</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1 2
','2.8284271247461903
','MATH'),
                                                                                                                (2319,'BAEKJOON','https://www.acmicpc.net/problem/13435',13435,'피라미드 수열','2초','512 MB',18,'<p>높이가 X > 1인 피라미드 수열의 주기는 2X-2이다. 처음 2X-2개의 수는 1, 2, ..., X-1, X, X-1, ..., 2 이다.</p>

<p>두 피라미드 수열 A와 B의 높이 N과 M이 주어진다. 이때, 서로 다른 (A[i], B[i]) 쌍의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, M이 주어진다. (2 ≤ N, M ≤ 1,000,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 서로 다른 (A[i], B[i]) 쌍의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1의 경우에</p>

<ul>
	<li>A: 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, ...</li>
	<li>B: 1, 2, 3, 4, 3, 2, 1, 2, 3, 4, 3, 2, 1, ...</li>
</ul>

<p>(1, 1), (2, 2), (3, 3), (2, 4), (1, 3), (3, 1)이 있다.</p>

				</div>
				</div>','3 4
','6
','MATH'),
                                                                                                                (2298,'BAEKJOON','https://www.acmicpc.net/problem/13439',13439,'팩토리얼과 점화식','2초','512 MB',17,'<p>S(n, k)는 다음과 같이 정의 한다.</p>

<ul>
	<li>S(n, k) = S(n, k-1) * S(n-1, k)</li>
	<li>S(n, k) = 1 (n = 0)</li>
	<li>S(n, k) = n (k = 0)</li>
</ul>

<p>예를 들어, S(7, 1) = 7! 이며, S(5, 3) = S(5, 2) * S(4, 3) = S(5, 1) * S(4, 2) * S(4, 3) 이다.</p>

<p>N, K가 주어졌을 때, S(N, K)의 약수의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 K가 주어진다. (1 ≤ N ≤ 1000, 1 ≤ K ≤ 100)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 S(N, K)의 약수의 개수를 1,000,000,009로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<ul>
	<li>예제 1: S(3, 1) = 6</li>
	<li>예제 2: S(3, 2) = 12</li>
	<li>예제 3: S(4, 2) = 288</li>
</ul>

				</div>
				</div>','3 1
','4
','MATH'),
                                                                                                                (2299,'BAEKJOON','https://www.acmicpc.net/problem/13458',13458,'시험 감독','2초','512 MB',4,'<p>총 N개의 시험장이 있고, 각각의 시험장마다 응시자들이 있다. i번 시험장에 있는 응시자의 수는 A<sub>i</sub>명이다.</p>

<p>감독관은 총감독관과 부감독관으로 두 종류가 있다. 총감독관은 한 시험장에서 감시할 수 있는 응시자의 수가 B명이고, 부감독관은 한 시험장에서 감시할 수 있는 응시자의 수가 C명이다.</p>

<p>각각의 시험장에 총감독관은 오직 1명만 있어야 하고, 부감독관은 여러 명 있어도 된다.</p>

<p>각 시험장마다 응시생들을 모두 감시해야 한다. 이때, 필요한 감독관 수의 최솟값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 시험장의 개수 N(1 ≤ N ≤ 1,000,000)이 주어진다.</p>

<p>둘째 줄에는 각 시험장에 있는 응시자의 수 A<sub>i</sub> (1 ≤ A<sub>i</sub> ≤ 1,000,000)가 주어진다.</p>

<p>셋째 줄에는 B와 C가 주어진다. (1 ≤ B, C ≤ 1,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 시험장마다 응시생을 모두 감독하기 위해 필요한 감독관의 최소 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
1
1 1
','1
','MATH'),
                                                                                                                (2312,'BAEKJOON','https://www.acmicpc.net/problem/13532',13532,'악마의 수열','0.5초','64 MB',15,'<p>악마의 수열은 다음과 같이 정의된다.</p>

<ul>
	<li>x<sub>0</sub> = 0</li>
	<li>x<sub>1</sub> = 1</li>
	<li>x<sub>n</sub> = (x<sub>n-1</sub> + x<sub>n-2</sub>) / 2</li>
</ul>

<p>예를 들어, x<sub>10</sub> = 0.666015625 이다. n이 주어졌을 때, x<sub>n</sub>의 첫부분에 6이 몇 개 연속되는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n (2 ≤ n ≤&nbsp;100000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>x<sub>n</sub>의 첫부분에 6이 몇 개 연속되는지&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10
','3
','MATH'),
                                                                                                                (2329,'BAEKJOON','https://www.acmicpc.net/problem/13533',13533,'꽃 구매하기','2초','512 MB',18,'<p>오늘 상근이는 여자친구를 주기 위해 꽃을 S개 사려고 한다.</p>

<p>상근이네 동네에는 꽃집이 N개 있다. 각각의 i번째 꽃집은 꽃을 f<sub>i</sub>개까지 팔 수 있다. 한 가게에서 파는 모든 꽃의 색은 같은 색이다. 같은 색의 꽃은 모두 구분할 수 없다. 서로 다른 가게에서 같은 색의 꽃을 파는 경우는 없다.</p>

<p>꽃을 S개 구매하는 방법의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, S가 주어진다. (1 ≤ N ≤ 20, 0 , S ≤ 10<sup>14</sup>)</p>

<p>둘째 줄에는 f<sub>1</sub>, f<sub>2</sub>, ..., f<sub>N</sub>이 주어진다. (0 ≤ fi ≤ 10<sup>12</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>꽃을 S개 구매하는 방법의 수 10<sup>9</sup>+7로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1의 경우 {1, 2}, {0, 3}으로 꽃을 구매하는 방법이 있다.</p>

<p>예제 2의 경우에는 {2, 2}로 꽃을 구매할 수 있다.</p>

<p>예제 3의 경우에는 {1, 2, 2}, {0, 3, 2}, {1, 3, 1}이 가능하다.</p>

				</div>
				</div>','2 3
1 3
','2
','MATH'),
                                                                                                                (2330,'BAEKJOON','https://www.acmicpc.net/problem/13534',13534,'생일 파티','5초','512 MB',15,'<p>오늘은 상근이의 생일이다. 상근이는 생일 파티에 총 f명을 초대했고, 친구들에게 나눠줄 사탕 n개를 가지고 있다. 친구들은 1번부터 f번까지 번호가 매겨져 있다.</p>

<p>상근이는 다음과 같은 규칙을 지키면서 친구들에게 사탕을 나눠주려고 한다.</p>

<ul>
	<li>모든 사람은 사탕을 적어도 1개 받아야 한다.</li>
	<li>i번째 사람이 받은 사탕의 개수를 a<sub>i</sub>라고 했을 때, 모든 a<sub>i</sub>를 나누는 양의 정수 x > 1이 존재하면 안 된다.</li>
</ul>

<p>n과 f가 주어졌을 때, 사탕을 나눠줄 수 있는 방법의 수를 구하는 프로그램을 작성하시오.</p>

<p>사탕을 나눠주는 순서가 다르면 다른 방법으로 친다. 예를 들어, 1번 친구에게 1개, 2번 친구에게 2개를 나눠준 것과 1번 친구에게 2개, 2번 친구에게 1개를 나눠준 것은 다른 경우이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T (1 ≤ T ≤ 100,000)가 주어진다.</p>

<p>둘째 줄부터 T개의 줄에 n과 f가 주어진다. (1 ≤ f ≤ n ≤ 10,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스마다 사탕을 나눠주는 방법을 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>n = 6, f = 2 인 경우 가능한 방법은 [1, 5], [5, 1]이다.</p>

<p>n = 7, f = 2인 경우에는 [1, 6], [2, 5], [3, 4], [4, 3], [5, 2], [6, 1]이 가능하다.</p>

				</div>
				</div>','5
6 2
7 2
6 3
6 4
7 4
','2
6
9
10
20
','MATH'),
                                                                                                                (2332,'BAEKJOON','https://www.acmicpc.net/problem/13542',13542,'우표 구매하기 (Hard)','2초','512 MB',20,'<p>우체국에서 파는 우표 중에서 가격이 1원인 우표는 총 N종류가 있고, 2원인 우표는 총 M종류가 있다.</p>

<p>우표를 K원어치 구매하는 방법의 수를 구하는 프로그램을 작성하시오.</p>

<p>같은 종류의 우표를 여러 개 사도 가능하며, 우체국에는 우표가 무한대 만큼 있다. 정확하게 K원을 모두 사용해야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, M, K, P가 주어진다. (0 ≤ N, M ≤ 300, 1 ≤ K ≤ 10<sup>12</sup>, 3 ≤ P ≤ 1,000,000, P는 소수)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 우표를 사는 방법의 수를 P로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','0 10 2 47
','10
','MATH'),
                                                                                                                (2333,'BAEKJOON','https://www.acmicpc.net/problem/13558',13558,'등차수열의 개수','3초','512 MB',14,'<p>길이가 N인 수열 A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>N</sub>이&nbsp;주어진다. 이때, 1 ≤ i < j < k ≤ N 이면서, A<sub>j</sub> - A<sub>i</sub> = A<sub>k</sub> - A<sub>j</sub>를 만족하는 (i, j, k) 쌍의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 수열의 크기 N (3&nbsp;≤ N ≤ 100,000)가 주어진다.</p>

<p>둘째 줄에는 A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>N</sub>이 주어진다. (1 ≤ A<sub>i</sub>&nbsp;≤ 30,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>1 ≤ i < j < k ≤ N 이면서, A<sub>j</sub>&nbsp;- A<sub>i</sub>&nbsp;= A<sub>k</sub>&nbsp;- A<sub>j</sub>를 만족하는 (i, j, k) 쌍의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10
3 5 3 6 3 4 10 4 5 2
','9
','MATH'),
                                                                                                                (2335,'BAEKJOON','https://www.acmicpc.net/problem/13560',13560,'축구 게임','2초','512 MB',16,'<p>축구는 지구에서 가장 인기있는 스포츠 중의 하나입니다. n 팀으로 이루어진 축구 리그가 있습니다. 하나의 팀은 다른 모든 팀과 정확히 한 번씩만 경기를 합니다. 그러므로, 각 팀은 n - 1 번의 경기를 하게 됩니다. 무승부는 승부차기를 하기 때문에 없습니다. 한 경기 후에 이긴 한 팀은 1 점을 얻게 되고, 진 팀은 0 점을 얻게 됩니다.</p>

<p>베스트 팀 선정을 위해 경기 일정이 끝난 후에 각 팀은 리그 사무소에 획득한 점수를 보고하게 됩니다. 리그 사무소는 각 팀이 보고한 점수가 실수가 없는지 확실히 해두고 싶습니다. 즉, 보고한 점수가 유효한지 아닌지 알고 싶은 것이고, 이 말은 리그 룰에 따르는 경우 이 점수들을 각 팀에 할당하는 것이 가능해야 합니다.</p>

<p>주어진 n 개의 정수들은 각 팀에서 보고한 점수들로 이 점수들이 유효한지 아닌지 알아내는 프로그램을 작성해야 합니다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>프로그램은 표준 입력에서 읽어야 합니다. 입력은 두 줄로 이루어져 있고, 첫째 줄은 하나의 정수 n (2 ≤ n ≤ 10,000) 이고, 팀의 개수를 의미합니다. 다음 줄은 각 팀에서 보고한 점수들입니다. 각 정수는 0 보다 같거나 크고 n - 1 보다 같거나 작습니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>프로그램은 표준 출력에 써야 합니다. 보고한 점수들이 유효한 경우라면 1 을 출력하고, 그렇지 않으면 -1 을 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
0 2 1 3
','1
','MATH'),
                                                                                                                (2334,'BAEKJOON','https://www.acmicpc.net/problem/13571',13571,'나이트의 이동','5초','512 MB',22,'<p>크기가 2n × 2n인 체스판의 가장 왼쪽 윗 칸에 나이트가 하나 놓여져 있다. 최대 K번 움직여서 모서리에 도착하는 방법의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T (1 ≤ T ≤ 20)이 주어진다.</p>

<p>각 테스트 케이스는 한 줄로 이루어져 있으며, n과 k가 주어진다. (2 ≤ n ≤ 12, 1 ≤ k ≤ 1,000,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 방법의 수를 1000007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
2 1
2 2
3 3
','1
5
7
','MATH'),
                                                                                                                (2336,'BAEKJOON','https://www.acmicpc.net/problem/13572',13572,'나이트의 이동 2','2초','512 MB',23,'<p>크기가 2n × 2n인 체스판의 가장 왼쪽 윗 칸에 나이트가 하나 놓여져 있다. 최대 K번 움직여서 모서리에 도착하는 방법의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T (1 ≤ T ≤ 50)이 주어진다.</p>

<p>각 테스트 케이스는 한 줄로 이루어져 있으며, n과 k가 주어진다. (2 ≤ n ≤ 24, 1 ≤ k ≤ 1,000,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 방법의 수를 1000007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
2 1
2 2
3 3
','1
5
7
','MATH'),
                                                                                                                (2340,'BAEKJOON','https://www.acmicpc.net/problem/13573',13573,'동전 뒤집기 3','5초','512 MB',22,'<p>N×M개의 동전이 N행 M열을 이루어 탁자 위에 놓여 있다. 그 중 일부는 앞면(H)이 위를 향하도록 놓여 있고, 나머지는 뒷면(T)이 위를 향하도록 놓여 있다. <그림 1>은 N과 M이 3일 때의 예이다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/qFb2xhF6yGeur.png" style="height:179px; opacity:0.9; width:153px"></p>

<p>이들 N×M개의 동전에 대하여 임의의 한 행에 놓인 N개 또는 한 열에 놓인 M개의 동전을 모두 뒤집는 작업을 수행할 수 있다. 예를 들어 <그림 1>의 상태에서 첫 번째 열에 놓인 동전을 모두 뒤집으면 <그림 2>와 같이 되고, <그림 2>의 상태에서 첫 번째 행에 놓인 동전을 모두 뒤집으면 <그림 3>과 같이 된다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/kZHVpNcZWaEy.png" style="height:180px; width:372px"></p>

<p><그림 3>의 상태에서 뒷면이 위를 향하여 놓인 동전의 개수는 두 개이다. <그림 1>의 상태에서 이와 같이 한 행에 놓인 N개&nbsp;또는 한 열에 놓인 M개의 동전을 모두 뒤집는 작업을 계속 수행할 때 뒷면이 위를 향하도록 놓인 동전의 개수를 2개보다 작게 만들 수는 없다.</p>

<p>N×M개의 동전들의 초기 상태가 주어질 때, 한 행에 놓인 N개&nbsp;또는 한 열에 놓인 M개의 동전을 모두 뒤집는 작업들을 수행하여 뒷면이 위를 향하는 동전 개수를 최소로 하려 한다. 이때의 최소 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 20이하의 자연수 N과 100,000이하의 자연수 M이 주어진다. 둘째 줄부터 N줄에 걸쳐 M개씩 동전들의 초기 상태가 주어진다. 각 줄에는 한 행에 놓인 N개의 동전의 상태가 왼쪽부터 차례대로 주어지는데, 앞면이 위를 향하도록 놓인 경우 H, 뒷면이 위를 향하도록 놓인 경우 T로 표시되며 이들 사이에 공백은 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 한 행 또는 한 열에 놓인 동전을 모두 뒤집는 작업들을 수행하여 뒷면이 위를 향하여 놓일 수 있는 동전의 최소 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 3
HHT
THH
THT
','2
','MATH'),
                                                                                                                (2337,'BAEKJOON','https://www.acmicpc.net/problem/13574',13574,'수열 변환','10초','512 MB',25,'<p>수열 A = a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>에 연산 P를 적용하면 수열 B = b<sub>1</sub>, b<sub>2</sub>, ..., b<sub>n</sub>이 된다. 이때, b<sub>i</sub> = a<sub>1</sub> | a<sub>2</sub> | ... | a<sub>i</sub> 이며, |는 비트 OR 연산이다.</p>

<p>1보다 크거나 같고, 2<sup>k</sup>보다 작은 정수로 이루어진 길이가 n인 모든 수열에 연산 P를 적용시키려고 한다. 이때, 연산을 적용한 결과가 오름차순(b<sub>1</sub> < b<sub>2</sub> < ... < b<sub>n</sub>)이 되는 수열의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n과 k (1 ≤ n ≤ 10<sup>18</sup>, 1 ≤ k ≤ 30,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 수열의 개수를 10<sup>9</sup>+7로&nbsp;나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 2
','3
','MATH'),
                                                                                                                (2338,'BAEKJOON','https://www.acmicpc.net/problem/13575',13575,'보석 가게','5초','512 MB',21,'<p>보석 가게에 도둑이 들었다. 도둑은 가게에서 K개의 보석을 가져가려고 한다.</p>

<p>가게에 있는 보석은 총 N종류가 있다. 각각의 i번 종류의 가치는 a<sub>i</sub>이며, 개수는 무한대이다.</p>

<p>도둑이 가게에서 가져갈 수 있는 가치의 합을 모두 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 K가 주어진다. (1 ≤ N, K ≤ 1000)</p>

<p>둘째 줄에는 a<sub>i</sub> (1 ≤ a<sub>i</sub> ≤ 1000)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>가져갈 수 있는 가치의 합을 오름차순으로 출력한다. 각 가치의 합은 공백 한 칸으로 구분되어야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 2
1 2 3
','2 3 4 5 6
','MATH'),
                                                                                                                (2402,'BAEKJOON','https://www.acmicpc.net/problem/13706',13706,'제곱근','2초','512 MB',7,'<p>정수 N이 주어졌을 때, N의 제곱근을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 양의 정수 N이 주어진다. 정수 N의 제곱근은 항상 정수이며, N의 길이는 800자리를 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 정수 N의 제곱근을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','36
','6
','MATH'),
                                                                                                                (2409,'BAEKJOON','https://www.acmicpc.net/problem/13707',13707,'합분해 2','1초','512 MB',12,'<p>0부터 N까지의 정수 K개를 더해서 그 합이 N이 되는 경우의 수를 구하는 프로그램을 작성하시오.</p>

<p>덧셈의 순서가 바뀐 경우는 다른 경우로 센다(1+2와 2+1은 서로 다른 경우). 또한 한 개의 수를 여러 번 쓸 수도 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 N(1 ≤ N ≤ 5,000), K(1 ≤ K ≤ 5,000)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 답을 1,000,000,000으로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','20 2
','21
','MATH'),
                                                                                                                (2411,'BAEKJOON','https://www.acmicpc.net/problem/13709',13709,'XOR 합 2','2초','512 MB',18,'<p>N개의 수로 이루어진 수열 A가 주어진다.&nbsp;</p>

<p>수열 A에서 부분 수열을 고르려고 한다. 부분 수열의 XOR 합이란, 부분 수열에 들어있는 모든 원소를 XOR한 값을 의미한다.</p>

<p>수열 A가 주어졌을 때, XOR 합이 가장 큰 부분 수열을 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 배열의 크기 N (1 ≤ N ≤ 100,000), 둘째 줄에는 수열 A에 들어있는 수가 주어진다. 수열 A에 들어있는 수는 10<sup>18</sup>보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>수열 A의 부분 수열 중에서 XOR 합이 가장 큰 부분 수열의 XOR 합을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 2 4
','7
','MATH'),
                                                                                                                (2412,'BAEKJOON','https://www.acmicpc.net/problem/13714',13714,'약수의 개수','2초','512 MB',24,'<p>\(d(n)\)을 양의 정수 \(n\)의 약수의 개수라고 정의하자.</p>

<p>세 정수 \(a\), \(b\), \(c\)가 주어졌을 때, 다음 식의 결과를 출력하는 프로그램을 작성하시오.</p>

<p>\[\sum_{i=1}^{a}\sum_{j=1}^{b}\sum_{k=1}^{c}{d(i \cdot j \cdot k)}\]</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 \(a\), \(b\), \(c\)가 주어진다. (1 ≤ \(a\), \(b\), \(c\) ≤ 2000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제의 식의 결과를 2<sup>30</sup>으로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 2 2
','20
','MATH'),
                                                                                                                (2414,'BAEKJOON','https://www.acmicpc.net/problem/13715',13715,'순열의 좋은 위치','2초','512 MB',21,'<p>1부터 N까지 수가 한 번씩 등장하는 순열 P = P<sub>1</sub>, P<sub>2</sub>, ..., P<sub>N</sub>이 있다.</p>

<p>각각의 위치 i가 |P<sub>i</sub> - i| = 1을 만족한다면, 그 위치를 좋은 위치라고 한다.</p>

<p>크기가 N인 순열 중에서 좋은 위치가 K개인 순열의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 K가 주어진다. (1 ≤ N ≤ 1,000, 0 ≤ K ≤ N)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>크기가 N인 순열 중에서 좋은 위치가 K개인 순열의 개수를 10<sup>9</sup>+7로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 0
','1
','MATH'),
                                                                                                                (2415,'BAEKJOON','https://www.acmicpc.net/problem/13716',13716,'피보나치 수열처럼 보이지만...','2초','512 MB',21,'<p>피보나치 수열은 다음과 같이 정의된다.</p>

<p style="text-align: center;">F<sub>1</sub> = 1, F<sub>2</sub> = 2, F<sub>i</sub> = F<sub>i-1</sub> + F<sub>i-2</sub> (i > 2).</p>

<p>A<sub>i</sub>(k)는 다음과 같이 정의 된다.</p>

<p style="text-align: center;">A<sub>i</sub>(k) = F<sub>i</sub> × i<sup>k</sup> (i ≥ 1).</p>

<p>n과 k가 주어졌을 때, A<sub>1</sub>(k) + A<sub>2</sub>(k) + ... + A<sub>n</sub>(k)를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n과 k가 주어진다. (1 ≤ n ≤ 10<sup>17</sup>, 1 ≤ k ≤ 40)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에&nbsp;A<sub>1</sub>(k) + A<sub>2</sub>(k) + ... + A<sub>n</sub>(k)를 10<sup>9</sup> + 7로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1
','1
','MATH'),
                                                                                                                (2418,'BAEKJOON','https://www.acmicpc.net/problem/13723',13723,'팩토리얼 분수 방정식','2초','512 MB',14,'<p>양의 정수 N이 주어졌을 때, 아래 식을 만족하는 양의 정수 해의 개수를 구하는 프로그램을 작성하시오.</p>

<p>\[\frac{1}{N!} = \frac{1}{X} + \frac{1}{Y}\]</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N (N ≤ 10<sup>4</sup>)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>해의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','1
','MATH'),
                                                                                                                (2416,'BAEKJOON','https://www.acmicpc.net/problem/13724',13724,'3D 쿼리','10초','512 MB',22,'<p>3차원 공간위의 점 N개가 주어진다. 이때, 쿼리 M개를 계산하는 프로그램을 작성하시오.</p>

<p>각각의 쿼리는 네 정수 A, B, C, D로 이루어져 있으며, 다음 식의 값을 출력해야 한다.</p>

<p>\[\sum_{i \ne j}{\frac{|A(X_i - X_j) + B(Y_i-Y_j) + C(Z_i-Z_j) + D|}{N(N-1)\sqrt{(X_i-X_j)^4 + (Y_i-Y_j)^4 + (Z_i-Z_j)^4}}}\]</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 점의 개수 N (2 ≤ N ≤ 777777)가 주어진다.</p>

<p>둘째 줄부터 N개의 줄에 점의 좌표 X, Y, Z가 주어진다. (1 ≤ X, Y, Z ≤ 77)</p>

<p>다음 줄에는 쿼리의 개수 M (1 ≤ M ≤ 77)이 주어진다.</p>

<p>다음 M개의 줄에는 쿼리를 나타내는 A, B, C, D가 주어진다. (1 ≤ A, B, C ≤ 77, 1 ≤ D ≤ 7777)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 쿼리마다 정답을 한 줄에 하나씩 순서대로 출력한다. 절대/상대 오차는 10<sup>-6</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10
45 70 41
9 1 43
1 68 8
70 76 7
1 19 33
71 70 53
42 54 71
11 13 30
16 63 25
30 24 34
5
56 61 29 7328
63 32 18 365
37 41 11 2332
36 19 43 7432
68 55 46 6338
','6.692386875130186
1.323651551014940
2.269817185835997
6.783038317971530
5.816449269601737
','MATH'),
                                                                                                                (2420,'BAEKJOON','https://www.acmicpc.net/problem/13727',13727,'5차원 구사과 초콜릿','2초','512 MB',25,'<p>5차원 세계에 사는 구사과는 크기가 2 × 2 × 2 × 2 × n인 초콜릿을 가지고 있다.</p>

<p>오늘은 초콜릿을 잘라서 크기가 1 × 1 × 1 × 1 × 2인 초콜릿을 총 8n개 만들려고 한다. 자르는 방법의 수를 구하는 프로그램을 작성하시오.</p>

<p>초콜릿의 방향은 중요하지 않다. 즉, 1 × 1 × 1 × 2 × 1, 2 × 1 × 1 × 1 × 1도 가능한 크기이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n(1 ≤ n ≤ 10<sup>9</sup>)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 방법의 수를 10<sup>9</sup>+7로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','272
','MATH'),
                                                                                                                (2421,'BAEKJOON','https://www.acmicpc.net/problem/13728',13728,'행렬식과 GCD','2초','512 MB',17,'<p>다음과 같은 원소를 갖는 크기가 N×N인 행렬이 있다.</p>

<ul>
	<li>M(i, i) = 1</li>
	<li>M(i, i+1) = 1</li>
	<li>M(i, i-1) = -1</li>
	<li>다른 값은 모두 0</li>
</ul>

<p>예를 들어, 크기 N = 4인 경우 M은 다음과 같다.</p>

<pre>1 1 0 0
-1 1 1 0
0 -1 1 1
0 0 -1 1</pre>

<p>D(k)를 크기가 k×k인 행렬 M의 행렬식(Determinant)이라고 하자. N이 주어졌을 때, S = Σgcd(D(i), D(N)) (1 ≤ i ≤ N) 을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. (1 ≤ N ≤ 10<sup>5</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>S를 10<sup>9</sup>+7로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','1
','MATH'),
                                                                                                                (2422,'BAEKJOON','https://www.acmicpc.net/problem/13729',13729,'1013 피보나치','2초','512 MB',22,'<p>F<sub>n</sub>을 n번째 피보나치 수, G<sub>n</sub>을 F<sub>n</sub> % 10<sup>13</sup>이라고 하다.</p>

<p>n이 주어졌을 때, G<sub>i</sub> = n인 가장 작은 i값을 찾는 프로그램을 작성하시오.</p>

<p>피보나치 수의 첫 부분은 아래와 같다.</p>

<ul>
	<li>F<sub>0</sub> = 0</li>
	<li>F<sub>1</sub> = 1</li>
	<li>F<sub>2</sub> = 1</li>
	<li>F<sub>3</sub> = 2</li>
	<li>F<sub>4</sub> = 3</li>
	<li>F<sub>5</sub> = 5</li>
	<li>F<sub>6</sub> = 8</li>
	<li>F<sub>7</sub> = 13</li>
	<li>F<sub>8</sub> = 21</li>
</ul>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 n(1 ≤ n ≤ 10<sup>13</sup>)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>G<sub>i</sub>&nbsp;= n인 가장 작은 i값을 출력한다. 만약 그러한 i가 없으면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','13
','7
','MATH'),
                                                                                                                (2426,'BAEKJOON','https://www.acmicpc.net/problem/13756',13756,'완벽한 구사과의 집합','2초','512 MB',24,'<p>구사과는 정수론을 공부하고 있다.</p>

<p>음이 아닌 정수로 이루어져 있는 비어있지 않은 집합 S는 다음과 같은 조건을 만족할 때, 완벽한 집합이라고 한다.</p>

<p>임의의 두 정수 a와 b가 a, b ∈ S 일 때, (a와 b는 같아도 된다) (a xor b) ∈ S 이어야 한다.</p>

<p>k가 주어졌을 때, k보다 크지 않은 정수로 이루어진 완벽한 집합의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 k (0 ≤ k ≤ 10<sup>9</sup>)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 완벽한 집합의 개수를 10<sup>9</sup>+7로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1의 경우에 정답은 {0}, {0, 1}이 있다.</p>

<p>예제 4의 경우에 정답은 {0}, {0, 1}, {0, 2}, {0, 3}, {0, 4}, {0, 1, 2, 3}이 있다.</p>

				</div>
				</div>','1
','2
','MATH'),
                                                                                                                (2349,'BAEKJOON','https://www.acmicpc.net/problem/13854',13854,'트리와 소수','2초','512 MB',23,'<p>N(2 ≤ N ≤ 50,000)개의 정점으로 이루어진 트리가 주어진다. 트리의 각 정점은 1번부터 N번까지 번호가 매겨져 있다.</p>

<p>서로 다른 두 개의 정점을 균일한 확률로 랜덤하게 선택했을 때, 거리가 소수일 확률은 몇일까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 노드의 개수 N이 주어지고, 다음 N-1개 줄에는 트리 상에서 연결된 두 정점이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>서로 다른 두 개의 정점을 균일한 확률로 랜덤하게 선택했을 때, 거리가 소수일 확률을 출력한다. 절대/상대 오차는 10<sup>-6</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1 2
2 3
3 4
4 5
','0.5
','MATH'),
                                                                                                                (2352,'BAEKJOON','https://www.acmicpc.net/problem/13866',13866,'팀 나누기','2초','512 MB',2,'<p>4명의 친구가 탁구를 하고 있다. 각각은 정수형으로 표현된 스킬 레벨을 가지고 있고, 숫자가 높을수록 더 좋은 플레이어다.</p>

<p>4명의 친구는 각각 두 명씩 구성된 두 팀을 구성하려고 한다. 게임이 더 흥미롭게 하기 위해서 팀의 스킬 레벨을 최대한 가깝게 유지하기를 원한다. 팀의 스킬 레벨은 팀원의 스킬 레벨의 합계이다.</p>

<p>그들은 탁구 선수로는 탁월하지만, 수학이나 컴퓨터와 같은 다른 것들에 능숙하지 않다. 팀의 스킬 레벨이 가능한 작은 차이를 갖도록 도와주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 네 개의 정수 A, B, C 및 D가 포함된 한 줄로 구성되며 4명의 스킬 레벨이 주어진다. (0 ≤ A ≤ B ≤ C ≤ D ≤ 10<sup>4</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>두 팀의 스킬 레벨 차이의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 7 10 20
','7
','MATH'),
                                                                                                                (2355,'BAEKJOON','https://www.acmicpc.net/problem/13877',13877,'이건 무슨 진법이지?','2초','512 MB',4,'<p>C, C++, Java와 같은 프로그래밍 언어에서는 사용자가 다양한 진법의 상수를 사용할 수 있도록 "접두 문자(Prefix characters)"라는 개념을 도입하고 있다.</p>

<p>8진법인 수를 표기하고 싶으면, "0(숫자 0)"을, 16진법은 "0x"를, 10진법은 아무런 표기를 하지 않아도 되는데, 이해를 돕기 위해 10진법 수 "4660"을&nbsp;이 표기방법대로 8, 10, 16진법으로 표기한 예는 다음과 같다.</p>

<ul>
	<li>8진법(Octal): 011064</li>
	<li>10진법(Decimal): 4660</li>
	<li>16진법(Hexadecimal): 0x1234</li>
</ul>

<p>만약 이런 표기 방법이 없었다면, 컴파일러는 저 숫자가 8진법인지, 10진법인지, 16진법인지 알 길이 없다. 0x1234에서 "0x"라는 접두 문자가 빠지면 사용자가 16진수로 표기했지만, 컴파일러는 이를 16진수가 아닌 8진수, 10진수로 인식할 수도 있다는 소리다.</p>

<p>이러한 오류가 발생했을 경우를 가정하여, 10진법으로 표현 가능한 숫자들로 구성된 문자열을 각각 8진수, 10진수, 16진수로 해석하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 테스트 케이스를 나타내는 자연수 T(1 ≤ T ≤ 10000)이 주어진다. 이후 아래 2 ~ T&nbsp;+ 1번째 줄에는 테스트 데이터의 번호를 나타내는 정수 K와 10진수로 표현된&nbsp;문자열이 주어진다. 문자열의 길이는 7보다 작거나 같고, 0으로 시작할 수 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 데이터마다 테스트 데이터의 번호 K와 8진법, 10진법, 16진법으로 나타낸 수를 공백으로 구분하여 출력한다. 만약 입력된 문자열이 8진수로 해석될 수 없는 경우에는 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 1234
2 9
3 1777
4 129
','1 668 1234 4660
2 0 9 9
3 1023 1777 6007
4 0 129 297
','MATH'),
                                                                                                                (2364,'BAEKJOON','https://www.acmicpc.net/problem/13900',13900,'순서쌍의 곱의 합','1초(추가시간없음)','256 MB',7,'<p>N개의 정수 중 서로 다른 위치의 두 수를 뽑는 모든 경우의 두 수의 곱의 합을 구하라.</p>

<p>예를 들어 N = 3이고 주어진 정수가 2, 3, 4일 때, 두 수를 뽑는 모든 경우는 (2, 3), (2, 4), (3, 4)이며 이때 각각의 곱은 6, 8, 12이다. 따라서 총합은 26이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 입력 받을 정수의 개수 N(<strong>2 ≤ N ≤ 100,000</strong>)</p>

<p>두 번째 줄에는 N 개의 정수가 주어진다. 이때 입력 받는 정수들의 범위는 <strong>0이상 10,000 이하이다.</strong></p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>모든 경우의 곱의 합을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
2 3 4
','26
','MATH'),
                                                                                                                (2363,'BAEKJOON','https://www.acmicpc.net/problem/13909',13909,'창문 닫기','1초','64 MB',6,'<p>서강대학교 컴퓨터공학과 실습실 R912호에는 현재 N개의 창문이 있고 또 N명의 사람이 있다. 1번째 사람은 1의 배수 번째 창문을 열려 있으면 닫고 닫혀 있으면 연다.&nbsp; 2번째 사람은 2의 배수 번째 창문을 열려 있으면 닫고 닫혀 있으면 연다. 이러한 행동을 N번째 사람까지 진행한 후 열려 있는 창문의 개수를 구하라. 단, 처음에 모든 창문은 닫혀 있다.</p>

<p>예를 들어 현재 3개의 창문이 있고 3명의 사람이 있을 때,</p>

<ol>
	<li>1번째 사람은 1의 배수인 1,2,3번 창문을 연다. (1, 1, 1)</li>
	<li>2번째 사람은 2의 배수인 2번 창문을 닫는다. (1, 0, 1)</li>
	<li>3번째 사람은 3의 배수인&nbsp;3번 창문을 닫는다. (1, 0, 0)</li>
</ol>

<p>결과적으로 마지막에 열려 있는 창문의 개수는 1개 이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 창문의 개수와 사람의 수 N(<strong>1 ≤ N ≤ 2,100,000,000</strong>)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>마지막에 열려 있는 창문의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
','1
','MATH'),
                                                                                                                (2356,'BAEKJOON','https://www.acmicpc.net/problem/13912',13912,'외계 생물','1초','256 MB',15,'<p>기문이는 특이한 외계 생물을 한 마리 발견하였다. 발견될 때에는 갓 태어난 상태였다. 이 생물은 태어난 지 하루가 지나면 정확히 두 명의 새끼를 낳는데, 한번 새끼를 낳고 나면 그 이후로는 새끼를 낳지 못한다. 따라서 발견한 지 0일째에는 1마리, 1일째에는 1 + 2 = 3마리, 2일째에는 1 + 2 + 4 = 7마리가 된다. 즉, H일째에 2<sup>H+1</sup> - 1마리가 되는 것이다.</p>

<p>기문이는 H일째에 이 외계 생물들에게 번호를 붙이려고 하였다. H일째에는 총 2<sup>H+1</sup> - 1마리이므로 1번부터 2<sup>H+1</sup> - 1번까지를 한 번씩만 사용하여 번호를 붙이려고 하는데, 부모의 번호는 자식의 번호보다 항상 작게 하려 한다. 번호를 붙일 수 있는 경우의 수를 구하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 정수 H (0 ≤ H ≤ 10)가 입력으로 주어진다. 이는 발견한 지 H일째임을 의미한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>번호를 붙일 수 있는 경우의 수를 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>1 일째의 경우 번호를 붙일 방법은 다음과 같이 2가지가 있다.</p>

<p><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/13912/1.png" style="height:100px; width:191px"></p>

				</div>
				</div>','1
','2
','MATH'),
                                                                                                                (2370,'BAEKJOON','https://www.acmicpc.net/problem/13949',13949,'쉬운 문제','1초','512 MB',23,'<p>1보다 큰 정수 k가 주어졌을때, 다음 식을 만족하는 양의 정수 (a,b,c)는 무수히 많다는 것을 증명할 수 있다:</p>

<p>a<sup>2</sup> + b<sup>2</sup> + c<sup>2</sup> = k (ab + bc + ca) + 1.</p>

<p>양의 정수 n과 k가 주어졌을때 위 식을 만족하는 임의 n개의(a<sub>1</sub>, b<sub>1</sub>, c<sub>1</sub>), (a<sub>2</sub>, b<sub>2</sub>, c<sub>2</sub>), . . . , (a<sub>n</sub>, b<sub>n</sub>, c<sub>n</sub>)&nbsp;를 찾아라.&nbsp;a<sub>1</sub>, . . . , a<sub>n</sub>, b<sub>1</sub>, . . . , b<sub>n</sub>, c<sub>1</sub>, . . . , c<sub>n</sub>은 서로 다른 양의 정수이고, 최대 100자리 수이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 두 정수 k와 n이 주어진다.&nbsp;(2 ≤ k ≤ 1000, 1 ≤ n ≤ 1000)&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 줄에 세 수 a b c를 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 8
','1 2 6
3 10 24
12 35 88
15 28 84
4 5 18
14 33 90
40 104 273
21 60 152
','MATH'),
                                                                                                                (2374,'BAEKJOON','https://www.acmicpc.net/problem/13976',13976,'타일 채우기 2','2초','512 MB',16,'<p>3×N 크기의 벽을 2×1, 1×2 크기의 타일로 채우는 경우의 수를&nbsp;구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(1 ≤ N ≤ 1,000,000,000,000,000,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 경우의 수를 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>아래 그림은 3×12 벽을 타일로 채운 예시이다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/2663_1.jpg" style="height:80px; width:273px"></p>

				</div>
				</div>','2
','3
','MATH'),
                                                                                                                (2398,'BAEKJOON','https://www.acmicpc.net/problem/13977',13977,'이항 계수와 쿼리','1초','512 MB',16,'<p>\(M\)개의 자연수 \(N\)과 정수 \(K\)가 주어졌을 때 이항 계수 \(\binom{N}{K}\)를 1,000,000,007로 나눈 나머지를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 \(M\)이 주어진다. (1 ≤ \(M\) ≤ 100,000)</p>

<p>둘째 줄부터 \(M\)개의 줄에&nbsp;\(N\)과 \(K\)가 주어진다. (1 ≤ \(N\) ≤ 4,000,000, 0 ≤ \(K\) ≤ \(N\))</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>총 \(M\)개의 줄에&nbsp;\(\binom{N}{K}\)를 1,000,000,007로 나눈 나머지를&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
5 2
5 3
10 5
20 10
10 0
','10
10
252
184756
1
','MATH'),
                                                                                                                (2405,'BAEKJOON','https://www.acmicpc.net/problem/14058',14058,'The Game “Divisibility”','2초','512 MB',21,'<p>Two players, X and Y, play the following game:</p>

<ul>
	<li>They are given a positive integer P and a set A consisting of N different nonnegative integers, A = {a<sub>1</sub>, a<sub>2</sub>, …, a<sub>N</sub>}, such that every a<sub>i</sub> is less than P.</li>
	<li>Players play with alternating turns. Each player on his turn deletes a number from the set A.</li>
	<li>If after exactly K turns, the sum of the numbers remaining in A is divisible by P ? Player X wins. Otherwise ? Player Y wins.</li>
</ul>

<p>Write a program div, which determines who wins if both players play optimally.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>On the first line of the standard input is the positive integer T ? the number of games in this test case.</p>

<p>After that, for each i = 0, 1, …, T ? 1:</p>

<ul>
	<li>on the (3i + 2)-nd line are the numbers N, K and P, separated by spaces;</li>
	<li>on the (3i + 3)-rd line is either the symbol X, or the symbol Y, denoting which of the players goes first;</li>
	<li>on the (3i + 4)-th line are the space separated numbers a<sub>1</sub>, a<sub>2</sub>, …, a<sub>N</sub>..</li>
</ul>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>The standard output should be one line with T symbols (without separators), one symbol for each game in the test case. The i-th symbol should be X, if X wins in the i-th game, no matter how Y plays; otherwise, this symbol should be Y.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
5 3 7
X
1 2 3 4 6
8 4 13
Y
5 10 6 11 2 8 9 3
6 1 12
X
1 4 5 7 9 11
','XYX
','MATH'),
                                                                                                                (2437,'BAEKJOON','https://www.acmicpc.net/problem/14176',14176,'트리와 소수','3초','512 MB',23,'<p>트리가 주어진다. 서로 다른 두 노드를 균일한 확률로 선택했을 때, 두 노드 사이의 거리가 소수일 확률은 어떻게 될까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 노드의 개수 N이 주어지고, 다음 N-1개 줄에는 트리 상에서 연결된 두 정점이 주어진다. (2 ≤ N ≤ 100,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>서로 다른 두 노드를 균일한 확률로 선택했을 때, 두 노드 사이의 거리가 소수일 확률을 출력한다. 절대/상대 오차는 10<sup>-6</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1 2
2 3
3 4
4 5
','0.5
','MATH'),
                                                                                                                (2459,'BAEKJOON','https://www.acmicpc.net/problem/14205',14205,'함수','2초','512 MB',21,'<p>이 문제에서 함수란 1부터 n까지의 정수와 1부터 n까지의 정수가 매핑되어 있는 함수를 의미한다. 예를 들어, n = 3인 경우에 가능한 함수 g의 한 예는 g(1) = 1, g(2) = 3, g(3) = 1이다.</p>

<p>f<sup>j</sup>(x)란 다음과 같이 정의되어 있다.</p>

<ul>
	<li>올바른 x에 대해서, f<sup>0</sup>(x) = x</li>
	<li>올바른 x와 j에 대해서, f<sup>j+1</sup>(x) = f<sup>j</sup>(f(x))</li>
</ul>

<p>다음과 같은 새로운 표현이 정의되어 있다.</p>

<ul>
	<li>G(f, w)는 1보다 크거나 같고, n보다 작거나 같은 x에 대해서, f<sup>r</sup>(x)값의 집합을 의미한다. 이때, r은 w보다 크거나 같아야 한다.</li>
	<li>S(f, w)는 G(f, w)의 크기이다.</li>
	<li>Z(f)는 모든 음이아닌 정수 w에 대해서, S(f, w)값의 최솟값이다.</li>
	<li>A(y)는 Z(f) = y인 함수 f의 집합이다.</li>
</ul>

<p>n과 k가 주어졌을 때, A(k)의&nbsp;크기를 1,000,000,007로 나눈 나머지를 구하는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n과 k가 주어진다. (1 ≤ n ≤ 5,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 A(k)의 크기를 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>n = 2이기 때문에 총 4개의 함수를 만들 수 있고, 각각의 함수를 a, b, c, d라고 하면 다음과 같다.</p>

<ul>
	<li>a(1) = 1, a(2) = 1</li>
	<li>b(1) = 1, b(2) = 2</li>
	<li>c(1) = 2, c(2) = 1</li>
	<li>d(1) = 2, d(2) = 2</li>
</ul>

<p>a와 d는 A(1)에 포함되어 있고, b와 c는 A(2)에 포함되어 있다.</p>

				</div>
				</div>','2 1
','2
','MATH'),
                                                                                                                (2461,'BAEKJOON','https://www.acmicpc.net/problem/14208',14208,'수열 찾기','2초','512 MB',17,'<p>총 N개의 양의 정수로 이루어진 수열 B = B<sub>0</sub>, ..., B<sub>N-1</sub>가 주어진다. 이때, 아래와 같은 성질을 만족하는 수열 A = A<sub>0</sub>, ..., A<sub>N-1</sub>을 만들려고 한다.</p>

<ul>
	<li>수열 A의 모든 수는 서로 달라야 한다.</li>
	<li>모든 A<sub>i</sub>는 1보다 커야 한다.</li>
	<li>모든 i에 대해서, A<sub>i</sub>^B<sub>i</sub> (A<sub>i</sub>의 B<sub>i</sub>제곱)은 P<sub>i</sub>로 나누어 떨어져야 한다. 이때, P<sub>i</sub>는 A에서 A<sub>i</sub>를 제외한 수를 모두 곱한 값이다. 즉, P<sub>i</sub> = A<sub>0</sub>×A<sub>1</sub>×...×A<sub>i-1</sub>×A<sub>i+1</sub>×...×A<sub>N-1</sub> 이다.</li>
</ul>

<p>수열 A를 만들 수 있는지 없는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 수열의 크기 N (2 ≤ N ≤ 50)이 주어진다. 둘째 줄에는 수열 B가 주어진다. (1 ≤ B<sub>i</sub> ≤ 10)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 수열 A를 만들 수 있으면 1을 없으면 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
2 1
','1
','MATH'),
                                                                                                                (2452,'BAEKJOON','https://www.acmicpc.net/problem/14215',14215,'세 막대','2초','512 MB',3,'<p>영선이는 길이가 a, b, c인 세 막대를 가지고 있고, 각 막대의 길이를 마음대로 줄일 수 있다.</p>

<p>영선이는 세 막대를 이용해서 아래 조건을 만족하는 삼각형을 만들려고 한다.</p>

<ul>
	<li>각 막대의 길이는 양의 정수이다</li>
	<li>세 막대를 이용해서 넓이가 양수인 삼각형을 만들 수 있어야 한다.</li>
	<li>삼각형의 둘레를 최대로 해야 한다.</li>
</ul>

<p>a, b, c가 주어졌을 때, 만들 수 있는 가장 큰 둘레를 구하는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 a, b, c (1 ≤ a, b, c ≤ 100)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 만들 수 있는 가장 큰 삼각형의 둘레를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 2 3
','5
','MATH'),
                                                                                                                (2453,'BAEKJOON','https://www.acmicpc.net/problem/14219',14219,'막대과자 포장','2초','512 MB',4,'<p>동혁이는 막대과자를 포장하는 아르바이트를 하고 있다. 막대과자는 그림과 같이 3 X1 직사각형 모양의 과자와 2 X 2 크기에 ㄴ자 모양의 과자가 있고, 동혁이는 이 과자를 포장 박스에 차곡차곡 넣으려 한다.</p>

<p><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14219/1.png" style="height:105px; width:209px"></p>

<p>포장 박스의 크기는 n X m이고, 과자들은 부서지기 쉬우므로, 상자에 빈틈이 있으면 흔들려서 깨질 가능성이 있어, 상자를 빈틈없이 꽉 채우려고 한다. 아래 그림은 5 X 3의 박스를 채운 모습이다.</p>

<p><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14219/2.png" style="height:235px; width:196px"></p>

<p>동혁이는 지금 막대과자와 포장 박스들을 가지러 갔다. 동혁이를 대신하여 포장 박스안에 과자들을 빈틈없이 넣을 수 있는지 확인해주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>박스의 가로 세로 길이 n,m이 주어진다.(1≤n,m≤500)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>과자를 빈틈없이 채울 수 있다면 “YES”, 채울 수 없다면 “NO”를 출력하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 3
','YES
','MATH'),
                                                                                                                (2465,'BAEKJOON','https://www.acmicpc.net/problem/14223',14223,'작은 정사각형 1','2초','512 MB',8,'<p>좌표 평면 위에 점이 N개 있다.</p>

<p>다음 조건을 만족하는 정사각형을 구하는 프로그램을 작성하시오.</p>

<ul>
	<li>정사각형의 꼭짓점은 모두 정수 좌표를 가져야 한다.</li>
	<li>정사각형의 변은 좌표 축에 평행해야 한다.</li>
	<li>적어도 N-2개의 점이 정사각형의 안에 있어야 한다. 경계 위에 있는 점은 안에 있는 것이 아니다.</li>
</ul>

<p>위의 세 조건을 만족하는 정사각형 중에서 가장 작은 넓이를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 점의 개수 N (3 ≤ N ≤ 50)이 주어진다.</p>

<p>둘째 줄부터 N개의 줄에 점의 좌표 x와 y가 주어진다. (-1,000,000,000 ≤&nbsp;x, y ≤ 1,000,000,000)</p>

<p>같은 점이 여러 번 주어지는 경우는 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>문제의 조건에 맞는 정사각형 중에서 가장 넓이가 작은 것의 넓이를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
0 0
1 1
2 5
','4
','MATH'),
                                                                                                                (2454,'BAEKJOON','https://www.acmicpc.net/problem/14227',14227,'빨간 버튼 파란 버튼','2초','512 MB',16,'<p>영선이는 두 정수 a와 b를 가지고 있다.</p>

<p>효빈이는 빨간 버튼과 파란 버튼을 가지고 있다.</p>

<p>빨간 버튼을 누르면 영선이가 가지고 있는 두 정수의 값이 1 증가한다. 파란 버튼을 누르면 두 정수의 값에 2를 곱한다.</p>

<p>효빈이는 (a, b)를 (c, d)로 바꾸려고 한다. 이때 버튼을 누르는 횟수의 최솟값을 구하는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 a, b, c, d가 주어진다. (1 ≤ a, b, c, d ≤ 1,000,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 (a, b)를 (c, d)로 바꾸는데 필요한 연산 횟수의 최솟값을 출력한다. 만약, 불가능한 경우에는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','100 1000 101 1001
','1
','MATH'),
                                                                                                                (2456,'BAEKJOON','https://www.acmicpc.net/problem/14232',14232,'보석 도둑','2초','512 MB',10,'<p>희대의 도둑 효빈이는 세계 최고의 보석가게 영선상에 잠입할 계획이다. 이 영선상은 최고의 보석가게답게 최고의 보안장치를 두고 있는데, 이 보안장치를 해제하지 않는다면 보석을 여러 개 훔쳐갈 시, 보석끼리 달라붙으며 무게가 모든 보석들의 곱으로 늘어난다.</p>

<p>효빈이는 이 보안장치를 해제할 수 없기 때문에, 차라리 곱해진 대로 최대한 많은 보석들을 가져오기로 계획했다. 효빈이는 한번에 k라는 무게를 들 수 있으므로, 딱 k만큼의 무게만큼의 보석을 가져오고 싶은데, 그 때 보석들의 최대 개수를 알고싶다.</p>

<p>영선상에는 세계 최고의 보석가게답게 모든 무게의 보석들이 매우 많이때문에, 훔쳐가는 보석이 부족할 일은 없다. 다만 모든 보석들은 무게가 1보다 크다.</p>

<p>효빈이는 이제 영선상에 잡입할 계획을 다 세웠다. 하지만 무슨 보석들을 훔쳐올지 결정하지 못하였는데, 효빈이를 대신하여 훔쳐올 보석들을 결정해주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 효빈이가 들 수 있는 무게 k가 주어진다.(2≤k≤10<sup>12</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에는 효빈이가 훔쳐올 보석의 개수를 출력하고, 다음 줄에는 훔쳐올 보석들의 무게를 오름차순으로 출력하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','15
','2
3 5
','MATH'),
                                                                                                                (2457,'BAEKJOON','https://www.acmicpc.net/problem/14241',14241,'슬라임 합치기','2초','512 MB',8,'<p>영선이와 효빈이는 슬라임을 합치는 게임을 하고 있다. 두 사람은 두 슬라임을 골라서 하나로 합쳐야 한다. 게임은 슬라임이 하나 남았을 때 끝난다.</p>

<p>모든 슬라임은 양수 크기를 가지고 있다. 두 슬라임 x와 y를 합쳤을 때, 합친 슬라임의 크기는 x+y가 된다. 또한, 슬라임을 합칠 때 마다 두 사람은 x*y 점수를 얻게 된다.</p>

<p>영선이와 효빈이가 얻을 수 있는 점수의 최댓값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 슬라임의 개수 N (2 ≤ N ≤ 100)이 주어진다.</p>

<p>둘째 줄에는 슬라임의 크기가 주어진다. 크기는 100보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 영선이와 효빈이가 얻을 수 있는 점수의 최댓값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
3 4
','12
','MATH'),
                                                                                                                (2460,'BAEKJOON','https://www.acmicpc.net/problem/14252',14252,'공약수열','2초','512 MB',17,'<p>서로 다른 양의 정수로 이루어진 크기가 N인 집합 A가 주어진다. 영선이는 집합에 새로운 양의 정수를 추가하려고 한다. 이때, 집합에 있는 수를 정렬한 결과에서 인접한 두 수의 공약수가 1을 넘으면 안 된다. 그러기 위해서 수를 최소 몇 개 추가해야하는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다.&nbsp;(1 ≤ N ≤ 50)</p>

<p>둘째 줄에는 집합에 포함되어 있는 수가 주어진다. 주어지는 수는 100,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 수를 최소 몇 개 추가해야하는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1의 경우에 {43, 2195, 2199}를 추가하면 된다.</p>

				</div>
				</div>','4
2200 42 2184 17
','3
','MATH'),
                                                                                                                (2468,'BAEKJOON','https://www.acmicpc.net/problem/14255',14255,'멋진 배열','2초','512 MB',18,'<p>크기가 N행 N열인 배열 A와 0부터 N-1까지의 정수로 이루어진 순열 P가 있다.</p>

<p>Sum(A, P) = A[0][P[0]] + A[1][P[1]] + ... + A[N-1][P[N-1]] 이다.</p>

<p>순열 P를 어떻게 고르는지에 상관없이 Sum(A, P)가 항상 같으면 그러한 배열을 멋지다고 한다.</p>

<p>일부 수가 지워진 배열 A가 주어졌을 때, 멋진 배열을 만드는 방법의 수를 구하는 프로그램을 작성하시오. 즉, 지워진 수를 모두 채워 넣는 방법의 수를 구하는 것이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 배열 A의 크기 N (1 ≤&nbsp;N ≤ 50)이 주어진다.</p>

<p>둘째 줄부터 N개의 줄에는 배열 A가 주어진다. 지워진 수는 -로 주어지며, 나머지 수는 모두 0보다 크거나 같고, 9보다 작거나 같은 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>멋진 배열을 만드는 방법의 수를&nbsp;1,000,000,007로 나눈 나머지를 출력한다. 항상 답이 무한대가 아닌 경우만 입력으로 주어진다. 또한, 새로 채우는 수는 9보다 커도 된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1-
-2
','4
','MATH'),
                                                                                                                (2464,'BAEKJOON','https://www.acmicpc.net/problem/14257',14257,'XOR 방정식','2초','512 MB',14,'<p>양의 정수 S와 X가 주어질 때, A + B = S, A ? B = X을 만족하는 모든 양의 정수 A, B 쌍의 개수를 구하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에는 두 양의 정수 S와 X가 주어진다.(2 ≤ S, X ≤ 10<sup>12</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>위 식을 만족하는 모든 A, B 쌍의 개수를 구하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','9 5
','4
','MATH'),
                                                                                                                (2471,'BAEKJOON','https://www.acmicpc.net/problem/14264',14264,'정육각형과 삼각형','2초','512 MB',3,'<p>한 변의 길이가 L인 정육각형을 가지고 있다. 오늘은 이 정육각형에 세 개의 겹치지 않는 대각선을 그리려고 한다.</p>

<p>대각선은 정육각형을 4개의 삼각형으로 나눈다. 4개의 삼각형 중에 면적이 제일 작은 삼각형의 면적을 S라고 한다.</p>

<p>가능한 S중에서 최댓값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정육각형&nbsp;한 변의 길이 L이 주어진다. (1 ≤ L ≤ 1,000,000, L은 정수)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 S의 최댓값을 출력한다. 절대/상대 오차는 10<sup>-9</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
','10.825317547305485
','MATH'),
                                                                                                                (2472,'BAEKJOON','https://www.acmicpc.net/problem/14265',14265,'영선 수열','2초','512 MB',12,'<p>음이 아닌 정수 X가 있을 때, X의 영선 수열은 아래와 같은 방법으로 정의된 길이가 무한인 수열이다.</p>

<ul>
	<li>첫 번째 수는 X이다.</li>
	<li>짝수 Y의 다음에 오는 수는 Y/2이다. (0도 짝수이다)</li>
	<li>홀수 Z의 다음에 오는 수는 Z-1이다.</li>
</ul>

<p>60의 영선 수열은 60, 30, 15, 14, 7, 6, ... &nbsp;이다.</p>

<p>K, A, B가 주어졌을 때, A ≤&nbsp;X ≤&nbsp;B인 모든 X중에서 X의 영선 수열에 K가 포함되어있는 X의 개수를 구하는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 K, A, B가 주어진다. (0 ≤ K ≤ 10<sup>18</sup>, 0 ≤ A ≤ B ≤ 10<sup>18</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제의 정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 4 8
','2
','MATH'),
                                                                                                                (2473,'BAEKJOON','https://www.acmicpc.net/problem/14277',14277,'등차 수열과 등비 수열','2초','512 MB',11,'<p>등차 수열 A의 일반항 a + b*x (x는 음이 아닌 정수)에서 a, b와 등비 수열 G의 일반항 c * d^y (y는 음이 아닌 정수)에서 c, d가 주어진다.</p>

<p>u가 주어졌을 때, 1부터 u까지의 수 중에서 입력으로 주어진 등차 수열 A나 등비 수열 G에 포함되는 수의 개수를 구하는 프로그램을 작성하시오. (동시에 포함되어도 된다)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 a, b, c, d, u가 주어진다. (1 ≤ a, b, c, u ≤ 10<sup>12</sup>, 1 ≤ d ≤ 10<sup>5</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 등차 수열 A나 등비 수열 G에 포함되는 1보다 크거나 같고 u보다 작거나 같은 자연수의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 4의 경우에 4, 20, 100, 452, 476, 500, 524, 548, 572, 596이 정답이다.</p>

				</div>
				</div>','1 1 1 2 1000
','1000
','MATH'),
                                                                                                                (2474,'BAEKJOON','https://www.acmicpc.net/problem/14279',14279,'두 수의 곱','2초','512 MB',13,'<p>a, b, c가 주어졌을 때, A * B = C 이면서 |A - a| + |B - b| + |C - c|의 최솟값을 구하는 프로그램을 작성하시오. 이때, A, B, C는 양의 정수이어야 한다.</p>

<p>|x|는 x의 절댓값이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 a, b, c (1 ≤ a, b, c ≤ 1,000,000)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 |A - a| + |B - b| + |C - c|의 최솟값을 출력한다. 이때, A*B는 C와 같아야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','19 28 522
','2
','MATH'),
                                                                                                                (2475,'BAEKJOON','https://www.acmicpc.net/problem/14280',14280,'두 수의 곱 2','2초','512 MB',16,'<p>a, b, c가 주어졌을 때, A * B = C 이면서 |A - a| + |B - b| + |C - c|의 최솟값을 구하는 프로그램을 작성하시오. 이때, A, B, C는 양의 정수이어야 한다.</p>

<p>|x|는 x의 절댓값이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 a, b, c (1 ≤ a, b, c ≤ 1,000,000,000)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 |A - a| + |B - b| + |C - c|의 최솟값을 출력한다. 이때, A*B는 C와 같아야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','19 28 522
','2
','MATH'),
                                                                                                                (2466,'BAEKJOON','https://www.acmicpc.net/problem/14282',14282,'학년 통폐합','2초','512 MB',18,'<p>영선이가 다니는 학교, sys학교는 자연재해를 겪어 일부 교실을 사용할 수 없게 되었다. 다행히 현재 m개의 교실은 사용이 가능하다. 현재 sys학교에는 n학년이 존재하며, 각 학년별로 a반이 존재한다. 교실이 부족하여 해당 학년의 모든 반의 학생들을 한 교실에 몰아넣을 것이다. 그래도 부족하면, 그나마 교육수준이 비슷한 인접한 두 학년의 모든 반을 한 교실에 넣을 것이다. 예를 들면 2학년은 1학년이나 3학년이 그나마 교육수준이 비슷하므로 둘 중 하나와 같은 교실을 사용하게 할 수 있다.</p>

<p>하지만, 같은 학년이면 공통으로 듣는 과목이 있지만, 다른 학년끼리는 한 학년 차이라고 하더라도 문이과차이, 세부 선택과목 차이 등으로 다른 학년끼리는 도저히 같이 들을 수 없는 반들이 있다.</p>

<p>또한, 교실의 수가 모질라는 형편이기에, 형평성 문제로, 두 학년이 한 교실을 쓰는 경우는 있어도, 한 학년이 두 교실을 쓰는 경우는 없다. 즉, 두 학년사이에서 도저히 같이 들을 수 없는 반들 끼리는 한쪽 반이 버려진다. 하지만 상황에 따라 한 학년이 교실을 하나도 쓰지 못하는 경우도 있다.</p>

<p>다음과 같은 상황이 주어질 때, m개의 교실의 n학년을 배정할 때, 최대로 많은 반들이 교실을 배정받게 하고 싶다. 이때, 최대가 되는 반의 개수를 출력하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 학교의 학년 수 n, 사용할 수 있는 교실의 수 m이 주어진다.(1≤n≤50,floor(n/2)≤m≤n)</p>

<p>다음 줄에는 각 학년별로 반의 수a가 주어지고, 다음 a줄에는 상위 학년과 같이 들을 수 없는 반들의 개수 b, 같이 들을 수 없는 반의 숫자가 b개 주어진다.(1≤a(i)≤100,0≤b≤a(i+1))</p>

<p>최고학년의 입력은 반의 수 a 만 들어온다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>m개의 교실에 적절히 배정했을 때, 모든 학년에 배정된 반들의 수의 최댓값을 출력하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 2
3
1 1
1 1
2 1 2
2
0
1 3
5
0
3 1 2 3
2 1 3
0
1 2
3
','9
','MATH'),
                                                                                                                (2476,'BAEKJOON','https://www.acmicpc.net/problem/14289',14289,'본대 산책 3','2초','512 MB',15,'<p>숭실 대학교 정보 과학관은 유배를 당해서 캠퍼스의 길 건너편에 있다. 그래서 컴퓨터 학부 학생들은 캠퍼스를 ‘본대’ 라고 부르고 정보 과학관을 ‘정보대’ 라고 부른다. 준영이 또한 컴퓨터 학부 소속 학생이라서 정보 과학관에 박혀있으며 항상 꽃 이 활짝 핀 본 대를 선망한다. 어느 날 준영이는 본 대를 산책하기로 결심하였다.</p>

<p>숭실대학교 캠퍼스 지도는 n개의 건물이 있고, 인접한 두 건물을 뜻하는 도로 m개가 있다.</p>

<p>한 건물에서 바로 인접한 다른 건물로 이동 하는 데 1분이 걸린다. 준영이는 산책 도중에 한번도 길이나 건물에 멈춰서 머무르지 않는다. 준영이는 할 일이 많아서 딱 D분만 산책을 할 것이다. 산책을 시작 한 지 D분 일 때, 정보 과학관에 도착해야 한다. 이때 가능한 경로의 경우의 수를 구해주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 건물의 수 n개,도로의 수 m개가 주어진다.(1 ≤ n ≤ 50, 0 ≤ m ≤ 1000)</p>

<p>다음 m줄에는 두 건물를 잇는 간선 a, b가 주어진다.(1 ≤ a, b ≤ n, a ≠ b) 특정 두 건물를 잇는 간선이 여러 번 나오지 않는다.</p>

<p>다음 줄에는 산책할 시간인 D분이 주어진다. 1번 정점이 정보대이며, 준영이는 0분에 정보대에 위치할 것이다.(1 ≤ D ≤ 1,000,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>가능한 경로의 수를 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8 12
1 2
1 3
2 3
2 4
3 4
3 5
4 5
4 6
5 6
5 7
6 8
7 8
100000000
','261245548
','MATH'),
                                                                                                                (2489,'BAEKJOON','https://www.acmicpc.net/problem/14335',14335,'서로 다른 부분 수열의 개수','1초','512 MB',13,'<p>어떤 문자열 S = S<sub>1</sub>S<sub>2</sub>...S<sub>N</sub>이 있을때, S<sub>i<sub>1</sub></sub>S<sub>i<sub>2</sub></sub>...S<sub>i<sub>k</sub></sub> (0 ≤ k ≤ N, 1 ≤ i<sub>1</sub> < i<sub>2</sub> < ... < i<sub>k</sub> ≤ N)을 만족하는 모든 문자열을 S의 부분 수열이라한다. 길이가 0인 빈 문자열도 S의 부분 수열이다. 문자열 <code>ioi</code>의 서로 다른 부분 수열은 빈 문자열, <code>i</code>, <code>o</code>, <code>ii</code>, <code>io</code>, <code>oi</code>, <code>ioi</code>로 총 7개가 있다.</p>

<p>문자열 S가 주어진다. 이 문자열의 서로 다른 부분 수열의 개수를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T (1 ≤ T ≤ 10,000)가 주어진다. 둘째 줄부터 한 줄에 하나씩 문자열 S가 주어진다. S는 영어 알파벳 대문자와 소문자로, 0부터 9까지의 숫자만 이루어져 있고, 길이는 1,000 이하이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스마다 입력으로 주어진 문자열 S의 서로 다른 부분 수열의 개수를 출력한다. 항상 개수가 10<sup>18</sup> 이하인 문자열만 입력으로 주어진다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
ioi
Mmmmm
ERRATA
0000FF
R3GuLaM1N
','7
10
42
15
512
','MATH'),
                                                                                                                (2539,'BAEKJOON','https://www.acmicpc.net/problem/14398',14398,'피타고라스 수','2초','512 MB',18,'<p>피타고라스 수 (a, b, c)는 다음과 같은 조건을 만족하는 세 쌍이다.</p>

<ul>
	<li>a, b, c는 정수이다.</li>
	<li>a^2 + b^2 = c^2</li>
	<li>a와 b의 최대 공약수는 1이다.</li>
</ul>

<p>영선이는 나무 막대 N개를 가지고 있다. 영선이는 직각 삼각형 모양의 장난감을 최대한 많이 만들려고 한다. 이때, 장난감의 두 변 a와 b는 나무 막대를 이용해야 하며, 한 변 c는 쇠 막대를 이용해야 한다. 장난감을 만드는데 사용한 나무 막대는 다른 장난감을 만들 때 또 사용할 수 없다. 영선이는 쇠 막대를 매우 많이 가지고 있기 때문에, 부족할 일은 없다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 나무 막대의 개수 N (1 ≤ N ≤ 200)이 주어진다.</p>

<p>둘째 줄에는 나무 막대의 길이가 주어진다. 길이는 1,000,000보다 작은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 만들 수 있는 장난감의 최대 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','9
3 4 4 3 11 5 12 9 4
','3
','MATH'),
                                                                                                                (2538,'BAEKJOON','https://www.acmicpc.net/problem/14399',14399,'2연산','2초','512 MB',17,'<p>1이 저장되어 있는 두 변수 X와 Y가 있다.</p>

<p>사용할 수 있는 연산은 아래와 같다.</p>

<ul>
	<li>연산 X: X = X+Y</li>
	<li>연산 Y: Y = X+Y</li>
</ul>

<p>N이 주어진다. 두 연산을 사용해서 두 변수 중 하나에 N을 저장하는 프로그램을 작성하시오. 가능한 연산 방법이 여러 가지면, 연산의 길이가 가장 짧은 것을, 그러한 것도 여러 가지면 사전 순으로 앞서는 것을 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N (1 ≤ N ≤ 1,000,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 연산 방법을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10
','XXYYX
','MATH'),
                                                                                                                (2541,'BAEKJOON','https://www.acmicpc.net/problem/14400',14400,'편의점 2','2초','512 MB',9,'<p>영선이는 이번에 편의점으로 창업을 하려고 계획 중이다. 이번 창업을 위해 많은 준비를 하고 있는데, 아직 편의점을 세울 위치를 결정을 하지 못했다. 영선이는 미리 시장조사를 하여, 주요 고객들이 어느 위치에 존재하는지 파악을 하였고, 모든 고객들의 거리의 합을 최소로 하려한다. 두 위치의 거리는 |x1-x2|+|y1-y2|로 정의한다.</p>

<p>n명의 주요 고객들의 위치 (xi,yi)이 주어질 때, 모든 고객들의 거리 합을 최소로 하는 위치에 편의점을 세울 때, 그 최소 거리 합을 출력하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 주요 고객들의 수n이 주어진다.(1≤n≤100,000)</p>

<p>다음 n줄에는 고객들의 위치 (x,y)가 주어진다.(-1,000,000≤x,y≤1,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>모든 고객들의 거리 합을 최소로 하는 위치에 편의점을 세울 때, 그 최소 거리 합을 출력하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
2 2
3 4
5 6
1 9
-2 -8
','30
','MATH'),
                                                                                                                (2553,'BAEKJOON','https://www.acmicpc.net/problem/14429',14429,'배스킨라빈스 31','2초','256 MB',5,'<p>수련회 첫 날 밤을 맞아 유진이와 규용이는 배스킨라빈스 31 게임으로 진 사람을 정해 간장을 마시려고 한다. 게임의 룰은 다음과 같다.</p>

<p>유진이와 규용이는 한 줄로 나란히 앉아있다. 맨 왼쪽에는 유진이가 앉는다.</p>

<p>게임은 유진이부터 시작하여 오른쪽으로 진행한다.</p>

<p>자기 차례가 되면 1부터 j사이의 자연수를 1~m개 연달아 말할 수 있다. 무조건 1개 이상 말해야 한다.</p>

<p>j를 말하는 사람이 진다.</p>

<p>게임을 몇 번이나 해 보았지만 유진이만 계속 간장을 먹었다. 화가 난 유진이는 인터넷을 검색해 반드시 이길 수 있는 승리 전략을 찾았다. 승리 전략은 이러하다.</p>

<ul>
	<li>전체 개수 j-1을 1+m으로 나누어 나머지 r을 구한다.</li>
	<li>전체의 숫자 중 r번째의 숫자가 필승 숫자의 초항이다.</li>
	<li>초항부터 1+m을 계속 더해 가면 그것이 곧 필승 숫자들이다.</li>
	<li>게임을 시작하면 무조건 필승 숫자의 초항까지 말한다.</li>
	<li>상대가 몇 개를 말하던 다음 턴에 자신이 필승 숫자를 포함해 말해나가면 게임에서 이기게 된다.</li>
	<li>예) 31을 말하면 지는 게임에서 한 턴에 1~3번까지 말할 수 있다면 (31-1)÷4=7...2 이므로 필승 숫자는 2, 6, 10, 14, 18, 22…가 된다.</li>
</ul>

<p>‘다음의 승리 전략을 이용’하여 유진이가 게임에서 이기는 최소 턴의 수를 길이라고 할 때, n번의 게임 후에 길이가 가장 짧은 게임의 번호와 길이를 구하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 플레이할 게임의 판 수 n(1 ≤ n ≤ 1,000)이 주어진다. 다음 줄에는 전체 개수이자 말하면 지는 숫자 j(1 ≤ j ≤ 10,000)와 한 턴에 말할 수 있는 최대 자연수의 개수 m(1 ≤ m ≤ 9,999)이 공백으로 분리되어 주어진다. 단, 항상 j>m이며 j-1은 m+1의 배수가 아니다. 즉, 유진이는 항상 게임에서 이길 수 있다</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>길이가 가장 짧은 게임의 번호와 길이를 출력한다. 만약 길이가 가장 짧은 게임이 두 개 이상일 경우 가장 먼저 입력된 번호와 그 길이를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
31 3
20 6
14 2
','2 6
','MATH'),
                                                                                                                (2560,'BAEKJOON','https://www.acmicpc.net/problem/14440',14440,'정수 수열','0.25초(추가시간없음)','512 MB',14,'<p>음이 아닌 정수 수열 A<sub>0</sub>, A<sub>1</sub>, A<sub>2</sub>, A<sub>3</sub>, ...이 있다.</p>

<p>모든 n ≥ 2에 대해서, A<sub>n</sub> = x×A<sub>n-1</sub> + y×A<sub>n-2</sub>를 만족한다.</p>

<p>A<sub>0</sub>과 A<sub>1</sub>의 마지막 두 자리가 주어졌을 때, A<sub>n</sub>의 마지막 두 자리를 구하는 프로그램을 작성하시오.</p>

<p>예를 들어, x=y=1이고, A<sub>0</sub> = 0, A<sub>1</sub> = 1인 경우에 수열은 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55 이다. A<sub>10</sub>의 마지막 두 자리는 55이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 x, y, a<sub>0</sub>, a<sub>1</sub>, n이 주어진다. (1 ≤ x, y ≤ 99, 0 ≤ n < 10<sup>8</sup>) a<sub>0</sub>과 a<sub>1</sub>은 A<sub>0</sub>, A<sub>1</sub>의 마지막 두 자리이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>A<sub>n</sub>의 마지막 두 자리를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1 00 01 10
','55
','MATH'),
                                                                                                                (2562,'BAEKJOON','https://www.acmicpc.net/problem/14441',14441,'사이클의 개수','2초','512 MB',17,'<p>방향 그래프 G가 주어졌을 때, 길이가 K보다 작은&nbsp;서로 다른 사이클의 개수를 구하는 프로그램을 작성하시오. 이 개수는 매우 커질 수 있기 때문에, M으로 나눈 나머지를 출력한다.</p>

<p>사이클은 노드의 연속이며, 같은 노드가 여러 번 등장해도 된다. 이때, 각각의 노드와 다음 노드 사이에는 간선이 있어야 하며, 마지막 노드와 첫 번째 노드 사이에도 간선이 있어야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 그래프 G의 노드의 개수 N, K, M이 주어진다. (1 ≤ N ≤&nbsp;35, 1 ≤ K ≤ 10<sup>6</sup>, 1 ≤&nbsp;M ≤&nbsp;10<sup>9</sup>)</p>

<p>둘째 줄부터 N개의 줄에는 그래프의 간선 정보가 인접 행렬 형식 (i번 줄의 j번 문자는 i번 정점과 j번 정점 사이의 간선 정보)로 주어진다. Y는 간선이 있는 것이고, N은 간선이 없는 것이다. 입력으로 주어지는 그래프에 루프는 없다. 즉, i번째 줄의 i번째 문자는 항상 N이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 길이가 K보다 작은 서로 다른 사이클의 개수를 M으로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1의 경우에&nbsp;길이가 6보다 작은 사이클은 다음과 같다.</p>

<ul>
	<li>(0,3), (3,0), (0,1,2), (1,2,0), (2,0,1), (0,3,0,3), (3,0,3,0), (0,1,2,0,3), (0,3,0,1,2), (1,2,0,3,0), (2,0,3,0,1), (3,0,1,2,0)</li>
</ul>

				</div>
				</div>','4 6 100
NYNY
NNYN
YNNN
YNNN
','12
','MATH'),
                                                                                                                (2563,'BAEKJOON','https://www.acmicpc.net/problem/14445',14445,'케이크(?) 자르기','2초','512 MB',10,'<p>최근 키파는 빵 만드는 방법을 배웠다. 키파는 빵밖에 만들 줄 모르지만 케이크를 만들고 싶어서 윗면이 정사각형 모양인 직육면체 모양의 빵에 생크림을 얇게 발랐다. 물론 모든 면에 다 바른 건 아니고, 윗면과 옆면 총 다섯 면에만 발랐다. 키파는 처음 만든 케이크(?)를 N명의 친구에게 선물했다. N명의 친구는 아주 계산적이어서 다른 사람과 자기가 먹는 빵의 양뿐만 아니라 생크림의 양까지 같다는 것이 보장되어야 만족하고 자신의 케이크(?) 조각을 먹는다. 키파가 케이크(?)를 어떻게 잘라야 가장 적은 횟수로 자르면서 만족하고 케이크(?) 조각을 먹게 할 수 있을까? 자를 때는 윗면에 수직인 면으로 끝에서 끝까지 완전히 잘라야 하며, 중간에 칼질을 멈추거나, 자른 조각을 이동하면 안 된다. N조각보다 더 많이 잘라서 여러 조각을 한 사람에게 나누어 주는 것은 상관없다. 키파는 빵을 일정한 크기로 굽는 법을 모르기 때문에 케이크(?)의 크기는 알 수 없다. 다만 같은 길이의 자를 써서 케이크(?)의 가로와 세로 크기를 맞추기 때문에 그 둘만큼은 똑같다고 가정해도 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 10<sup>18</sup> 이하의 자연수 N이 주어진다. 그게 다다!</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>자르는 방법은 알고 있으니까 자르는 것이 언제 끝날지 궁금해하는 사람을 위해 첫째 줄에 자르는 최소 횟수만을 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8
','4
','MATH'),
                                                                                                                (2570,'BAEKJOON','https://www.acmicpc.net/problem/14470',14470,'전자레인지','2초','512 MB',2,'<p>JOI 군은 식사 준비를 위해 A℃의 고기를 전자레인지로 B℃까지 데우려고 한다. 고기는 온도가 0℃보다 낮을 때 얼어 있고, 0℃보다 높을 때는 얼어 있지 않다. 온도가 정확히 0℃일 때 고기는 얼어 있을 수도, 얼어 있지 않을 수도 있다.</p>

<p>JOI 군은 가열할 때 고기가 아래의 규칙을 따라 데워진다고 가정하고, 고기를 데우는 데 걸리는 시간을 어림하기로 했다.</p>

<ul>
	<li>고기가 얼어 있고 온도가&nbsp;0℃ 미만일 때 : 온도가 C초에 1℃씩 오른다.</li>
	<li>고기가 얼어 있고 온도가 정확히&nbsp;0℃일 때 : 얼어 있지 않은 상태로 만드는(해동하는) 데 D초가 걸린다.</li>
	<li>고기가 얼어 있지 않을 때 : 온도가 E초에 1℃씩 오른다.</li>
</ul>

<p>이 규칙을 토대로, 고기가&nbsp;B℃까지 데워지는 데 몇 초가 걸리는지 구하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 총 5줄로, 한 줄에 한 개씩의 정수가 주어진다.</p>

<ul>
	<li>첫 줄에는 원래의 고기의 온도 A가 주어진다. 단, A는 -100 이상 100 이하이며, 0이 아니다.</li>
	<li>둘째 줄에는 목표 온도 B가 주어진다. 단, B는 1 이상 100 이하이며, A보다 크다.</li>
	<li>셋째 줄에는 얼어 있는 고기를 1℃ 데우는 데 걸리는 시간 C가 주어진다.</li>
	<li>넷째 줄에는 얼어 있는 고기를 해동하는 데 걸리는 시간 D가 주어진다.</li>
	<li>다섯째 줄에는 얼어 있지 않은 고기를 1℃ 데우는 데 걸리는 시간 E가 주어진다.</li>
</ul>

<p>C, D, E는 모두 1 이상 100 이하이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>고기를&nbsp;B℃로 데우는 데 걸리는 시간을 초 단위로 한 줄에 출력하라.</p>
					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 입출력 1에서, 원래의 고기는 -10℃로 얼어 있다. 걸리는 시간은 아래와 같다.</p>

<ul>
	<li>-10℃에서 0℃까지 데우는 데 5×10=50 초</li>
	<li>0℃인 고기를 해동하는 데 10 초</li>
	<li>0℃에서 20℃까지 데우는 데 3×20=60 초</li>
</ul>

<p>따라서, 걸리는 시간은 총 120초이다.</p>

<p>예제 입출력 2에서 원래의 고기는 얼어 있지 않다. 따라서 고기를 35℃에서 92℃까지 데우는 데 걸리는 시간은 627초이다.</p>

				</div>
				</div>','-10
20
5
10
3
','120
','MATH'),
                                                                                                                (2568,'BAEKJOON','https://www.acmicpc.net/problem/14471',14471,'포인트 카드','2초','512 MB',4,'<p>JOI 상점가에서는 포인트 카드 서비스를 실시하고 있다. 각 포인트 카드에는 도장을 찍을 수 있는 칸이 총 2N개 있어, 상품을 구매하면 뽑기를 해서 결과에 따라 당첨 또는 꽝 도장이 찍힌다. 한 칸에 두 번 이상 도장을 찍을 수는 없다. 2N개 중 N개 이상의 칸에 당첨 도장이 찍힌 포인트 카드는 경품과 교환할 수 있다. 또, 한 칸에 찍힌 도장을 1엔을 내고 다른 도장으로 바꿀 수 있다.</p>

<p>JOI 군은 2N개 칸을 다 채운 포인트 카드를 M장 가지고 있다. i번째 포인트 카드에는 A<sub>i</sub>개의 당첨 도장과, B<sub>i</sub>개의 꽝 도장이 찍혀 있다.</p>

<p>JOI 군은 M-1개 이상의 경품을 가지려고 한다. 이에 필요한 비용의 최솟값을 구하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 M+1줄로 이루어진다.</p>

<p>첫 줄에는 2개의 정수 N, M(1 ≤ N ≤ 1000, 1 ≤ M ≤ 1000)이 공백을 사이에 두고 주어진다. 이는 포인트 카드에 2N개의 칸이 있고, JOI 군이 M장의 포인트 카드를 가지고 있음을 나타낸다.</p>

<p>다음 M개 줄 중 i번째(1 ≤ i ≤ M) 줄에는 각각 2개의 정수 A<sub>i</sub>, B<sub>i</sub> (0 ≤ A<sub>i</sub> ≤ 2N, 0 ≤ B<sub>i</sub> ≤ 2N, A<sub>i</sub> + B<sub>i</sub> = 2N)가 주어지며, 포인트 카드 i에 A<sub>i</sub>개의 당첨 도장과 B<sub>i</sub>개의 꽝 도장이 찍혀 있음을 나타낸다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>JOI 군이 M-1개 이상의 경품을 얻기 위해 필요한 비용의 최솟값을 엔 단위로 한 줄로 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 입출력 1에서, 포인트 카드 1의 꽝 도장 3개와 포인트 카드 3의 꽝 도장 1개를 당첨 도장으로 바꾸면, 4엔으로 5-1=4장의 카드가 경품과 교환 가능하게 되어, 이것이 최소 비용이다.</p>

<p>예제 입출력 2에서, 이미 4-1=3장의 카드가 경품과 교환 가능하므로 도장을 바꿀 필요가 없다.</p>

				</div>
				</div>','4 5
1 7
6 2
3 5
4 4
0 8
','4
','MATH'),
                                                                                                                (2571,'BAEKJOON','https://www.acmicpc.net/problem/14476',14476,'최대공약수 하나 빼기','2초','512 MB',14,'<p>정수 A가 B로 나누어 떨어지면, B는 A의 약수이고 A는 B의 배수이다.</p>

<p>최대공약수란 정수의 공통된 약수 중 가장 큰 수를 말한다. 예를 들어, 12와 8의 공통된 약수 1, 2, 4&nbsp;중에서 가장 큰 것은 4이기 때문에 12와 8의 최대공약수는 4이다.</p>

<p>N개의 정수 중에서 임의의 수 K를 뺐을 때,&nbsp;나머지 N-1개의 최대공약수가 가장 커지는 것을 찾는 프로그램을 작성하시오. 이때, 최대공약수는 K의 약수가 되면 안 된다.</p>

<p>예를 들어, 정수 8, 12, 24, 36, 48에서 8을 빼면 나머지 12, 24, 36, 48의 최대공약수는 12가 되고, 12는 빠진 수 8의 약수가 아니기 때문에 정답이 될 수 있다. 이때, 다른 수를 빼도 최대공약수가 8보다 커질 수 없다.</p>

<p>하지만, 8, 12, 20, 32, 36의 경우에는 그 무엇을 빼더라도 나머지 수의 최대공약수가 K의 약수가 되기 때문에, 정답을 구할 수 없다.</p>

<p>N개의 수가 주어졌을 때, 정수 하나를 빼서 만들 수 있는 가장 큰 최대공약수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수의 개수 N (4&nbsp;≤ N ≤ 1,000,000)이 주어진다.</p>

<p>둘째 줄부터 N개의 줄에는 N개의 수가 주어진다. 각각의 수는 20억을 넘지 않는 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 정수 하나를 빼서 만들 수 있는 가장 큰 최대공약수를 출력하고, 공백을 출력한 다음 뺀 수를 출력한다.&nbsp;</p>

<p>뺀 수를 K라고 했을 때, 나머지 수의 최대공약수가 K의 약수가 되면 안 된다.</p>

<p>만약 정답이 없는 경우에는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
8 12 24 36 48
','12 8
','MATH'),
                                                                                                                (2591,'BAEKJOON','https://www.acmicpc.net/problem/14488',14488,'준오는 급식충이야!!','2초','512 MB',11,'<p>심술쟁이 해커 임준오(동탄 주민)는 오늘도 점심시간을 기다리고 있다. 준오와 친구들은 매일 복도 어딘가의 한 지점에 모여서 함께 밥을 먹으러 간다. 선린의 복도는 직선형으로 되어있고, 준오와 친구들은 이 복도 어딘가에 위치한 교실에서 종이 치기만을 기다리고 있다.</p>

<p>‘띵~ 디딩~ 띵디딩디딩~’</p>

<p>종이 울렸다! 준오와 친구들은 최대한 빨리 한 지점에서 만나야한다. 그렇지 않으면 홍수처럼 쏟아지는 학생들에 휩쓸려 제각각 급식실로 떠내려갈지도 모른다.</p>

<p>준오를 포함한 친구들의 교실 위치 x<sub>i</sub>와 각 학생들의 달리기 속도 v<sub>i</sub>, 그리고 홍수가 밀려오기까지 남은 시간 T가 주어진다. 과연 준오와 친구들은 함께 밥을 먹으러 갈 수 있을까?</p>

<p>교실은 1차원 직선 위 어딘가에 위치해있다. 학생들의 달리기 속도는 항상 일정하며, 모든 학생들이 종이 울림과 동시에 뛰어나온다. 홍수가 터지는 시점과 친구들이 만나는 시점이 일치한다면 홍수에 떠내려가기 전에 만날 수 있는 것으로 간주한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 준오를 포함한 친구들의 수 N과 홍수까지 남은 시간 T가 주어진다. (1 ≤ N ≤ 50,000, 1 ≤ T(초) ≤ 1,000,000,000) 남은 시간 T는 소숫점 넷째자리의 실수로 주어진다.</p>

<p>둘째 줄에는 N명 학생들의 위치 x<sub>1</sub>, x<sub>2</sub>, ..., x<sub>n</sub>(1 ≤ x<sub>i</sub> ≤ 1,000,000,000)가 주어진다. (자연수, 미터 단위)</p>

<p>셋째 줄에는 N명 학생들의 속도 v<sub>1</sub>, v<sub>2</sub>, ..., v<sub>n</sub>(1 ≤ v<sub>i</sub> ≤ 1,000,000,000)가 주어진다. (자연수, 초당 미터)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>준오와 친구들이 모두 만날 수 있으면 1을, 그렇지 않으면 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 2.5
1 7 5
2 1 1
','1
','MATH'),
                                                                                                                (2607,'BAEKJOON','https://www.acmicpc.net/problem/14489',14489,'치킨 두 마리 (...)','2초','512 MB',2,'<p>슬프게도, 2017 선린 봄맞이 교내대회의 상품 비용은 욱제의 통장에서 충당된다. 욱제의 마음을 아는지 모르는지, 참가자들이 1등 상품으로 치킨을 무려 두 마리(...)나 달라고 조르고 있다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14489/1.png" style="height:96px; width:246px"></p>

<p>욱제에게는 두 개의 통장이 있다. 두 통장의 잔고와 치킨 한 마리의 가격이 주어질 때, 욱제가 치킨 두 마리(...)를 살 수 있는지 알아보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 통장의 잔고 A와 B가 주어진다. (0 ≤ A, B ≤ 1,000,000,000)</p>

<p>둘째 줄에 치킨 한 마리의 가격 C가 주어진다. (0&nbsp;≤ C ≤ 1,000,000,001)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>욱제가 치킨 두 마리(...)를 살 수 있으면 치킨 두 마리(...)를 사고 남은 두 통장 잔고의 합을, 살 수 없으면 현재 두 통장의 잔고의 합을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','87 31
20000
','118
','MATH'),
                                                                                                                (2577,'BAEKJOON','https://www.acmicpc.net/problem/14490',14490,'백대열','2초','512 MB',6,'<p>대열이는 욱제의 친구다.</p>

<ul>
	<li>“야 백대열을 약분하면 뭔지 알아?”</li>
	<li>“??”</li>
	<li>“십대일이야~ 하하!”</li>
</ul>

<p>n:m이 주어진다. 욱제를 도와주자. (...)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>n과 m이 :을 사이에 두고 주어진다. (1 ≤ n, m ≤ 100,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>두 수를 최대한으로 약분하여 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','100:10
','10:1
','MATH'),
                                                                                                                (2623,'BAEKJOON','https://www.acmicpc.net/problem/14491',14491,'9진수','2초','512 MB',4,'<p>10진수를 9진수로 바꾸자.</p>

<p>컴파일러:&nbsp;<img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14491/1.png" style="height:114px; width:102px"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 10진수 T(1 ≤ T ≤ 10,000)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>T를 9진수로 변환한 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','100
','121
','MATH'),
                                                                                                                (2618,'BAEKJOON','https://www.acmicpc.net/problem/14492',14492,'부울행렬의 부울곱','2초','512 MB',6,'<p>문제를 출제하던 욱제는 갑자기 괴랄한 문제를 내고 싶어졌다. 불행하게도, 이번 대회에는 프로그래밍 뉴비들이 많기 때문에 그럴 수는 없었다. 하지만 욱제는 신입생들을 괴롭히고픈 욕망을 포기할 수 없었다.</p>

<p>‘하하! 과연 신입생들이 이 문제를 풀 수 있을까?’</p>

<p>문제는 간단하다. N×N 크기의 두 부울행렬(0과 1로만 이루어진 행렬) A=[a<sub>ij</sub>]와 B=[b<sub>ij</sub>]가 주어졌을 때, 두 행렬에 대해 부울곱 연산을 수행한 행렬 C=[c<sub>ij</sub>]에 나타나는 1의 개수를 세는 것이다. 부울곱 연산은 아래와 같이 수행된다.</p>

<p>c<sub>ij</sub> = (a<sub>i1</sub>∧b<sub>1j</sub>)∨(a<sub>i2</sub>∧b<sub>2j</sub>)∨...∨(a<sub>in</sub>∧b<sub>nj</sub>)</p>

<p>x<sub>ij</sub>는 X행렬의 i행j열 원소를 뜻하며 ∧는 논리곱(AND), ∨는 논리합(OR) 연산을 나타낸다. 자, 어서 코딩하자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 행렬의 크기 N(1 ≤ N ≤ 300)이 주어진다. 이후 N개의 줄에 N×N의 부울행렬 A=[a<sub>ij</sub>]와, 다음 N개의 줄에 N×N의 부울행렬 B=[b<sub>ij</sub>]가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>A?B를 연산한 행렬 C에서 나타나는 1의 개수를 세어서 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제1의 연산 결과는 다음과 같다.</p>

<pre>1 1 1
1 1 1
0 0 1

따라서 1의 개수는 7이다.</pre>

<p>예제2의 연산 결과는 다음과 같다.</p>

<pre>0 0
1 1</pre>

<p>따라서 1의 개수는 2이다.</p>

				</div>
				</div>','3
1 1 0
0 1 0
0 0 1
1 0 0
1 1 1
0 0 1
','7
','MATH'),
                                                                                                                (2627,'BAEKJOON','https://www.acmicpc.net/problem/14493',14493,'과일노리','2초','512 MB',6,'<p>재훈이는 과일노리에서 영화를 보는 걸 좋아한다. 하지만 어느 날, 사이버안전지킴이 병희가 만든 학인봇이 나타나 과일노리로의 접속을 차단하기 시작했다. 학인봇은 트래픽이 오가는 길목에 일정 간격으로 나타나 수 초간 침입자를 탐지한다. 영화가 너무 보고 싶은 재훈이는 학인봇을 피해 과일노리에 접속하려고 한다.</p>

<p>아래의 예시를 보자.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14493/1.png" style="height: 54.1667px; width: 352.5px;"></p>

<p>재훈이는 과일노리에 접속하기 위해 총 4개의 구간을 거쳐야 한다. A/B는 해당 구간에서 학인봇이 A초 간격으로 나타나, B초 동안 침입자를 탐지하고 사라진다는 의미이다. 학인봇은 침입자 발생과 동시에 모든 구간에서 한꺼번에 나타나 활동을 시작한다. 따라서 재훈이는 학인봇의 감시를 피해 경로 중간의 네트워크 장비에 숨으면서 이동해야한다. 각 구간을 통과하는 데에는 1초의 시간이 소요된다. 다음은 예시에 대한 설명이다.</p>

<ul>
	<li>재훈이의 핸드폰에서, 0초의 시간이 소요된 상태에서, 학인봇이 나타났기 때문에 재훈이는 5초간 기다린 후에 다음 구간으로 이동해야한다.</li>
	<li>첫 번째 스위치에서, 6초의 시간이 소요된 상태에서, 학인봇의 쉬는 시간이기 때문에 재훈이는 기다리지 않고 바로 이동할 수 있다.</li>
	<li>두 번째 라우터에서, 7초의 시간이 소요된 상태에서, 학인봇의 활동이 2초 남았기 때문에 재훈이는 2초 기다린 후에 이동해야 한다.</li>
	<li>세 번째 서버에서, 10초의 시간이 소요된 상태에서, 학인봇의 활동이 4초 남았기 때문에 재훈이는 4초 기다린 후에 이동해야 한다.</li>
</ul>

<p>예시에서 재훈이가 과일노리에 접속하는 데에는 최소 15초의 시간이 소요되었다.</p>

<p>심술쟁이 해커 임준오(동탄 주민)는 재훈이를 경찰에 신고해서 윤리의식을 일깨워주려 한다. 준오가 112에 전화를 거는 동안 재훈이의 최소접속시간을 구해서 준오에게 알려주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 재훈이가 거쳐야하는 구간의 수 N이 주어진다. (1 ≤&nbsp;N ≤ 50,000)</p>

<p>이후 N개의 줄에 걸쳐 i번째 구간에서의 학인봇의 활동 정보 (a, b)가 주어진다. 이는 학인봇이 a초 간격으로 나타나, b초 동안 활동 후에 사라진다는 뜻이다. (1 ≤ a, b ≤ 1,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>재훈이가 과일노리에 접속하기 위해 필요한 최소 소요시간을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
3 5
4 1
3 3
6 4
','15
','MATH'),
                                                                                                                (2498,'BAEKJOON','https://www.acmicpc.net/problem/14561',14561,'회문','1초','256 MB',4,'<p>n진수는 base가 n인 수를 말한다. 예를 들어 십진수는 base가 10인 수이다. n진수의 수 A<sub>m</sub>A<sub>m-1</sub>A<sub>m-2</sub>…A<sub>1</sub>A<sub>0</sub>를 n진수로 표현해보면 A<sub>m</sub>A<sub>m-1</sub>A<sub>m-2</sub>…A<sub>1</sub>A<sub>0</sub> = A<sub>m </sub>× n<sup>m&nbsp;</sup>+ A<sub>m-1</sub> × n<sup>m?1</sup> + A<sub>m-2</sub> × n<sup>m?2</sup>&nbsp;+ … + A<sub>1</sub> × n<sup>1</sup> + A<sub>0</sub> × n<sup>0</sup>이다. 예를 들면, 12468은 12468 = 1 × 10<sup>4</sup> + 2 × 10<sup>3</sup> + 4 × 10<sup>2</sup> + 6 × 10<sup>1</sup> + 8 × 10<sup>0</sup>로 표현할 수 있다.</p>

<p>회문(Palindrome)이란 앞으로 읽으나 뒤로 읽으나 같은 글을 말한다. 예를 들면, madam, level, 12321은 회문이다. 반면에, Chung-ang이나 university, 54899는 회문이 아니다.</p>

<p>어떤 십진수의 수 A가 주어졌을 때, 이를 n진수로 표현하면 회문인지 아닌지 판별하는 프로그램을 만드시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 수 T(1 ≤ T ≤ 1000)이 주어진다.</p>

<p>둘째 줄부터 T줄에 걸쳐 테스트 케이스별로 어떤 십진수의 수 A(1 ≤ A ≤ 100,000,000,000)와 n(2 ≤ n ≤ 16)이 공백을 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 줄마다 테스트 케이스가 회문일 경우 1, 아닐 경우에는 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
100 3
30 2
25 4
58 8
342633 16
','1
0
1
0
0
','MATH'),
                                                                                                                (2503,'BAEKJOON','https://www.acmicpc.net/problem/14563',14563,'완전수','1초','128 MB',4,'<p>어떠한 자연수 N에 대해서 N을 제외한 약수(진약수)의 합이 N이 되는 자연수를 완전수라고 한다. 예를 들어, 6의 약수는 1, 2, 3, 6인데 1+2+3은 6이기 때문에 완전수이다. 또 진약수의 합이 자기 자신보다 작은 경우를 부족수, 진약수의 합이 자기 자신보다 큰 경우를 과잉수라고 한다.</p>

<p>이때, 어떤 수가 주어질 때 이 수가 완전수인지, 부족수인지, 과잉수인지를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수의 개수 T가 주어진다. T은 1000보다 작은 자연수이다.</p>

<p>둘째 줄에는 공백을 사이에 두고 완전수인지 구해야 되는 자연수 N이 주어진다.(1 ≤ N < 10,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>T개 줄에 걸쳐서 각 자연수에 대해서 완전수면 ‘Perfect’, 부족수면 ‘Deficient’, 과잉수면 ‘Abundant’를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>28의 경우 약수가 1, 2, 4, 7, 14, 28 이고, 1+2+4+7+14=28이기 때문에 완전수이다.</p>

<p>21의 경우 약수가 1, 3, 7, 21 이고, 1+3+7=11<21이기 때문에 부족수이다.</p>

<p>36의 경우 약수가 1, 2, 3, 4, 6, 9, 12, 18, 36 이고, 1+2+3+4+6+9+12+18=55>36이기 때문에 과잉수 이다.</p>

				</div>
				</div>','3
28 21 36
','Perfect
Deficient
Abundant
','MATH'),
                                                                                                                (2504,'BAEKJOON','https://www.acmicpc.net/problem/14564',14564,'두부 게임 (Tofu Game)','2초','128 MB',5,'<p>컴퓨터 공학부 새내기인 경환이는 선배님들과 함께 술자리를 갖는다. 그 때 어떤 선배가 두부게임을 제안하는 것이 아닌가? 하지만 모습부터 범상치 않은 선배는 두부 9모 게임을 제안했고, 이에 적응하지 못한 경환이는 그만 술을 먹고 시체방에 들어가게 된다.</p>

<p>다음날 정신이 든 경환이는 다음에도 이러한 일을 방지 하기 위해서 일반적인 두부 게임을 클리어하기 위한 프로그램을 제작하기로 한다. 경환이를 도와서 이 프로그램을 완성하자.</p>

<p>두부게임은 <strong>N</strong>명이서 원모양으로 앉아서 하는 게임이다. <strong>주최자(A)</strong>를 기준으로 <strong>M </strong>모 게임(M은 1보다 큰 홀수 이다)을 진행한다고 하자. <strong>주최자(A)</strong>는 <strong>(M/2+1)의 정수부분으로 </strong>두부 모 수의 기준점이 되고 주최자 뒷 번호는 차례대로 <strong>정수부분</strong> <strong>M/2+2 ~ M</strong> 모가 된다. 같은 원리로 주최자 앞 번호는 <strong>정수부분</strong> <strong>M/2 ~ 1</strong>모가 되는 것이다.</p>

<p>예를 들어 <strong>5명</strong>이서 원으로 앉아 두부 <strong>5모</strong> 게임을 다섯 사람이 하는 경우<strong>2번</strong>이 주최자로 결정되었다고 하자. 위 글 대로 3번 4번은 각각 4모, 5모 자리로 1번 5번은 각각 2모 1모 자리가 된다. 주최자는 자신의 모 수를 제외한 X(1 ≤ X ≤ M)모를 호출 할 수 있고 그 X모에 해당되는 사람이 다시 기준이 되어서 위 방식 게임을 이어 나가게 된다. 실수로 자신에 해당되는 모 수를 부르거나 자신의 차례 외에 구호를 외치면 게임은 종료되게 된다. 이 문제의 경우 자신의 차례 외의 구호를 외치는 경우는 없다고 하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 한 칸 간격을 두고 각각 N, M, A 숫자가 주어진다. N은 M/2 < N < 100,000을 만족하는 정수, M은 1보다 크고 10,000보다 작은 홀수이고, 주최자 A는 1 ≤ A ≤ N 을 만족하는 정수이다.</p>

<p>그 다음 줄부터 최대 10,000줄까지 기준이 되는 사람이 호출한 모 수가 입력된다. 입력의 끝은 (M/2+1)의 정수부분이 나타난다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 기준자로부터 입력의 끝이 들어오기 전까지 호출된 모 수 에 해당하는 번호를 가진 사람을 각각 한 행 씩 출력한다. 입력의 끝이 들어오면 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 5 2
4
5
4
2
3
','3
5
1
5
0
','MATH'),
                                                                                                                (2505,'BAEKJOON','https://www.acmicpc.net/problem/14565',14565,'역원(Inverse) 구하기','1초','128 MB',14,'<p>집합 Zn을 0부터 n-1까지의 정수 집합이라고 하자. Zn ∋ a, b, c&nbsp;일 때, (a+b) mod n = 0이면 b는 a의 덧셈역이라고 하고 (a*c) mod n = 1이면 c는 a의 곱셈역이라고 한다.</p>

<p>정수 N, A가 주어졌을 때 Zn에서의 A의 덧셈역과 곱셈역을 구하시오.</p>

<p>단, 곱셈역을 구할 수 없으면 -1을 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 N(2 ≤ N ≤ 10<sup>12</sup>)과 A(1 ≤ A < N)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 A의 N에 대한 덧셈역과 곱셈역을 한 줄에 공백으로 구분하여 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<ul>
	<li>덧셈역 (11 + 15) mod 26 = 0</li>
	<li>곱셈역 (11 * 19) mod 26 = 1</li>
</ul>

				</div>
				</div>','26 11
','15 19
','MATH'),
                                                                                                                (2508,'BAEKJOON','https://www.acmicpc.net/problem/14568',14568,'2017 연세대학교 프로그래밍 경시대회','1초','128 MB',3,'<p>2015, 2016년에 이어 2017년에도 연세대학교 교내 프로그래밍 경시대회가 열린다.</p>

<p>택희, 영훈이, 남규는 열심히 문제를 만들었고, 이에 대한 보상으로 과사로부터 사탕 N개를 받았다.</p>

<p>N개의 사탕을 적절히 나눠 가지기 위해 토론한 결과, 아래와 같은 방식으로 사탕을 나누기로 결정하였다.</p>

<ul>
	<li>남는 사탕은 없어야 한다.</li>
	<li>남규는 영훈이보다 2개 이상 많은 사탕을 가져야 한다.</li>
	<li>셋 중 사탕을 0개 받는 사람은 없어야 한다.</li>
	<li>택희가 받는 사탕의 수는 홀수개가 되어서는 안 된다.</li>
</ul>

<p>이제 사탕을 적절히 나누어 집에 돌아가던 중, 택희는 위와 같은 규칙을 만족하도록 세 명에게 사탕을 나누어 주는 방법의 수가 궁금해졌다.</p>

<p>사탕의 개수 N이 주어지면, 사탕을 세 사람에게 분배하는 서로 다른 경우의 수를 세 보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 사탕의 총 개수 N이 주어진다. (1 ≤ N ≤ 100)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>규칙에 맞게 사탕을 분배하는 경우의 수를 출력한다. 택희, 영훈이, 남규가 받은 사탕의 수를 각각 A, B, C개라고 할 때, 서로 다른 (A, B, C)&nbsp;순서쌍의 수를 세면 된다.</p>

<p>만일 규칙에 맞게 사탕을 분배하는 방법이 없다면 0을 출력한다.</p>

<p>&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>택희에게 2개, 영훈이에게 1개, 남규에게 3개를 주는 방법 하나뿐이다.</p>

				</div>
				</div>','6
','1
','MATH'),
                                                                                                                (2509,'BAEKJOON','https://www.acmicpc.net/problem/14571',14571,'모래시계','1초','128 MB',18,'<p>모래시계 가공업자 택희는 매일 그래프를 하나 받아 그 안에서 모래시계를 추출하는 작업을 한다.</p>

<p>모래시계는 아래와 같이 생겼다.</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14571/1.png" style="height:158px; width:133px"></p>

<p>좀 더 정확히 말하면, 다음의 조건을 만족하는 부분그래프를 모래시계라 한다.</p>

<ol>
	<li>정확히 길이가 3인 단순 사이클 두 개로 이루어져 있다.</li>
	<li>두 단순 사이클은 정확히 한 개의 정점을 공유한다.</li>
	<li>두 단순 사이클을 외부에서 잇는 간선은 있든 없든 상관없다.</li>
</ol>

<p>3번 조건에 대한 예시를 부연설명하자면, 아래와 같은 그래프에서 진한 부분도 모래시계이다.</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14571/2.png" style="height:167px; width:198px"></p>

<p>만일 어떤 두 모래시계에 대해, 두 모래시계에 속한 정점과 간선의 합집합이 두 모래시계 중 어느 한 쪽과 동일할 때, 이 두 모래시계는 동일한 모래시계라고 한다. 이 조건을 만족하지 않는 모든 두 모래시계는 서로 다른 모래시계이다.</p>

<p>택희는 그래프에서 모래시계를 추출하는 작업을 굉장히 빨리 할 수가 있다. 얼마나 빠르냐면, 128MB의 메모리만 있다면 1초 내로 그래프에 존재하는 모든 서로 다른 모래시계의 개수를 셀 수가 있다.</p>

<p>택희에게 한 번 도전해보도록 하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 그래프의 정점의 수 N (5 ≤ N ≤ 200), 간선의 수 M (6 ≤ M ≤ $ \frac{N(N-1)}{2} $)이 주어진다.</p>

<p>둘째 줄부터 M줄에 걸쳐 각 간선의 정보가 U V와 같이 주어진다. (1 ≤ U, V ≤ N, U ≠ V)</p>

<p>이는 그래프에 U와 V를 잇는 간선이 존재한다는 의미이다.</p>

<p>어떤 두 정점 사이에는 최대 한 개의 간선만이 존재한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 줄에, 그래프 내에 있는 모든 서로 다른 모래시계의 개수를 출력한다.</p>

<p>모래시계끼리 겹치는(간선이나 정점을 공유하는) 경우에도 서로 다른 모래시계라면 모두 세야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 6
1 2
2 3
3 1
3 4
4 5
5 3
','1
','MATH'),
                                                                                                                (2512,'BAEKJOON','https://www.acmicpc.net/problem/14573',14573,'엄청난 수열','2초','128 MB',15,'<p>얼마 전 dp를 공부하던 택희는 엄청난 사실을 알아냈다.</p>

<p>피보나치 수는 엄청나게 빠르게 증가한다는 것이다.</p>

<p>택희는 피보나치 수열에 엄청나게 매료되어 100만 번째 피보나치 수까지 종이에 적었다.&nbsp;하지만 적는 도중 택희는 느꼈다.&nbsp;피보나치 수 정도로는 엄청난 택희를 만족시켜줄 수가 없었다.</p>

<p>택희는 더 엄청나게 빨리 증가하는 수열이 없을까 생각하다가, 아래와 같은 엄청난 수열을 생각해냈다.</p>

<p>$$ a_1 = k $$</p>

<p>$$ N_n =\left\{ 1, 2, 3, 4, …, n \right\} 일 때, a_{n+1} = \sum_{S \subset N_n} \sum_{i \in S} a_i $$</p>

<p>즉, a<sub>n</sub>은 a<sub>1</sub>부터 a<sub>n-1</sub>까지의 수 중 하나 이상을 뽑아 만들 수 있는 모든 부분집합의 합으로 정의하였다.</p>

<p>예를 들어 a<sub>1</sub> = 1인 수열의 첫 몇 개 항을 살펴보면,</p>

<ul>
	<li>a<sub>2</sub> = a<sub>1</sub> = 1</li>
	<li>a<sub>3</sub> = (a<sub>1</sub>) + (a<sub>2</sub>) + (a<sub>1</sub> + a<sub>2</sub>) = 4</li>
	<li>a<sub>4</sub> = (a<sub>1</sub>) + (a<sub>2</sub>) + (a<sub>3</sub>) + (a<sub>1</sub> + a<sub>2</sub>) + (a<sub>1</sub> + a<sub>3</sub>) + (a<sub>2</sub> + a<sub>3</sub>) + (a<sub>1</sub> + a<sub>2</sub> + a<sub>3</sub>) = 24</li>
</ul>

<p>와 같다.</p>

<p>택희는 이 엄청난 수열이 피보나치 수열보다 더 빨리 증가한다는 사실을 증명했고, 이제 이 수를 종이에 적기 시작했다.</p>

<p>100만 번째 수를 적었을 때쯤, 택희는 궁금한 것이 여러 가지 생겼다.</p>

<p>예를 들어, a<sub>i</sub>와 a<sub>j</sub>의 최대공약수는 얼마인지, a<sub>k</sub>의 값은 무엇인지, 수열에서 연속된 일부를 뽑아 더하면 얼마인지, 만일 수열의 첫 항 a<sub>1</sub>이 바뀌면 이 값들은 어떻게 바뀌는지 등, 자신이 만든 엄청난 수열에 대해 점점 궁금한 것이 많아진 택희는 이를 빠르게 계산해 줄 프로그램이 필요하다고 판단했다.</p>

<p>택희를 위해 택희의 궁금증을 해결해 줄 프로그램을 작성해 보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 택희의 질문의 개수 Q가 주어진다. (1 ≤ Q ≤ 200000)</p>

<p>이어 Q줄에 걸쳐, 다음의 네 가지 타입 중 하나의 쿼리가 주어진다.</p>

<ul>
	<li>1 a<sub>1</sub> i j (1 ≤ a<sub>1</sub> ≤ 10<sup>5</sup>, 1 ≤ i, j ≤ 10<sup>6</sup>): 첫 항이 a<sub>1</sub>인 엄청난 수열에서, a<sub>i</sub>와 a<sub>j</sub>의 최대공약수는?</li>
	<li>2 a<sub>1</sub> i j (1 ≤ a<sub>1</sub> ≤ 10<sup>5</sup>, 1 ≤ i, j ≤ 10<sup>6</sup>): 첫 항이 <!--[if gte msEquation 12]><m:oMath><m:sSub><m:sSubPr><span
   style=font-size:12.0pt;mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
   font-family:"Cambria Math";mso-ascii-font-family:"Cambria Math";mso-fareast-font-family:
   "맑은 고딕";mso-fareast-theme-font:minor-latin;mso-hansi-font-family:"Cambria Math"><m:ctrlPr></m:ctrlPr></span></m:sSubPr><m:e><i
   style=mso-bidi-font-style:normal><span style=font-size:12.0pt;line-height:
   160%;font-family:"Cambria Math";mso-fareast-font-family:"맑은 고딕";mso-fareast-theme-font:
   minor-latin><m:r>a</m:r></span></i></m:e><m:sub><i style=mso-bidi-font-style:
   normal><span style=font-size:12.0pt;line-height:160%;font-family:"Cambria Math";
   mso-fareast-font-family:"맑은 고딕";mso-fareast-theme-font:minor-latin><m:r>1</m:r></span></i></m:sub></m:sSub></m:oMath><![endif]-->a<sub>1</sub>인 엄청난 수열에서, a<sub>i</sub>와 a<sub>j</sub>의 최소공배수는?
	<ul>
		<li>단, 이 값은 너무 클 수 있으므로, 이 값을 L이라 할 때, $ \frac{L}{2^P} $이 정수가 되게 하는 가장 큰 정수 P만 구해보자.</li>
	</ul>
	</li>
	<li>3 a<sub>1</sub> i j (1 ≤ a<sub>1</sub> ≤ 10<sup>5</sup>, 1 ≤ i, j ≤ 10<sup>6</sup>): 첫 항이 a<sub>1</sub>인 엄청난 수열에서, $ \sum_{k=i}^j a_k $는?</li>
	<li>4 a<sub>1</sub> k (1 ≤ a<sub>1</sub> ≤ 10<sup>5</sup>, 1 ≤ k ≤ 10<sup>6</sup>): 첫 항이 a<sub>1</sub>인 엄청난 수열에서, a<sub>k</sub>는?</li>
</ul>

<p>3번 쿼리의 경우, 항상 i ≤ j를 만족하도록 입력이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>Q줄에 걸쳐, 각 쿼리에 대한 답을 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1 1 3 4
2 2 3 4
3 1 2 3
4 1 5
4 2 1000
','4
4
5
240
949550777
','MATH'),
                                                                                                                (2514,'BAEKJOON','https://www.acmicpc.net/problem/14578',14578,'영훈이의 색칠공부','1초','128 MB',15,'<p>영훈이는 n x n격자가 그려져 있는 그림을 가지고 있다.</p>

<p>이때, 영훈이는 그 그림에 빨간색과 파란색을 색칠하려고 한다.</p>

<p>그냥 칠하기에는 너무 재미가 없던 영훈이는 더 재미있는 방법으로 색칠하려고 한다.</p>

<p>영훈이는 각 행에 빨간색 하나와 파란색 하나를 색칠 할 것인데, 이때 각 열에도 마찬가지로 빨간색 하나와 파란색 하나가 색칠되어 있어야 한다.</p>

<p>즉, n = 3 일 때 다음과 같은 그림을 그릴 수 있다.</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14578/1.png" style="height:250px; width:265px"></p>

<p>그림의 크기 N이 주어졌을 때, 영훈이가 색칠 할 수 있는 모든 경우의 수를 구하여라</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>그림의 크기 N (1 ≤ N ≤ 10<sup>5</sup>)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>영훈이가 색칠 할 수 있는 모든 경우의 수를 1,000,000,007로 나눈 나머지를 출력하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
','12
','MATH'),
                                                                                                                (2515,'BAEKJOON','https://www.acmicpc.net/problem/14579',14579,'덧셈과 곱셈','1초','128 MB',3,'<p>남규는 최근에 덧셈과 곱셈을 배웠다.</p>

<p>하지만 도현이는 남규가 제대로 배웠는지에 대해 의심을 가지고 있다.</p>

<p>그래서 도현이는 남규에게 문제를 내기로 했는데, 문제는 아래와 같다.</p>

<p>a, b (1 ≤ a < b ≤ 1000)가 주어졌을 때</p>

<blockquote>
<p>(1+2+…+a) * (1+2+…+(a+1)) * … * (1+2+…+(b-1)) * (1+2+…+b)</p>
</blockquote>

<p>의 값을 계산하라.</p>

<p>남규는 사실 이 값을 계산하지 못한다.</p>

<p>그래서 남규는 a, b가 주어졌을 때, 위의 값의 결과가 얼마인지 구하는 프로그램이 필요하다.</p>

<p>남규를 위해 위 식을 계산해내는 프로그램을 하나 만들어 주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 a, b (1 ≤ a < b ≤ 1000)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>위의 문제의 결과를 출력한다.</p>

<p>단, 결과가 매우 커질 수 있으니 14579로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 5
','900
','MATH'),
                                                                                                                (2516,'BAEKJOON','https://www.acmicpc.net/problem/14583',14583,'이음줄','1초','64 MB',12,'<p>이음줄은 고려대학교 제49대 총학생회장단입니다. 이음줄이 작년 가을에 선거운동을 했을 때 이런 포스터를 나눠줬어요.</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14583/poster_original.jpg" style="height: 276.667px; width: 370px;"></p>

<p>이 포스터는 신기하게도 접힌 부분을 펼 수 있어요. 접힌 부분을 펴면 다음과 같이 포스터가 펴지죠.</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14583/poster_unfold1.jpg" style="height: 276.667px; width: 370px;"></p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14583/poster_unfold2.jpg" style="height: 276.667px; width: 370px;"></p>

<p>지노는 이음줄 포스터를 보고 감명을 깊게 받은 나머지, 이음줄 포스터와 비슷하게 포스터를 만들어 보려고 합니다. 그러나 지노가 갖고 있는 건 오직 Hcm x Vcm 크기의 직사각형 모양 종이밖에 없어요. 지노가 이 종이를 가지고 포스터를 만들었을 때 어떤 크기의 포스터가 생길까요?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 종이의 가로 길이 H, 세로 길이 V가 주어집니다. H와 V는 소수점 아래 두 번째 자리까지 주어집니다. (H > V, 1.00 ≤ H, V ≤ 1000.00)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>Hcm x Vcm 크기의 종이를 접어서 만든 이음줄 포스터의 가로 길이와 세로 길이 (센티미터 단위)를 출력하세요. 답은 소수점 아래 셋째 자리에서 반올림한 값을 출력합니다. 계산한 답과 정답 간의 오차가 0.01 이하라면 정답으로 간주합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','120.00 90.00
','63.25 47.43
','MATH'),
                                                                                                                (2518,'BAEKJOON','https://www.acmicpc.net/problem/14606',14606,'피자 (Small)','1초','512 MB',6,'<p style="text-align:center"><img alt="" src="http://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14606/1.png" style="height:154px; width:233px"></p>

<p style="text-align:center">< Picture: Designed by Kstudio / Freepik ></p>

<p>갑은 아주대학교 학생입니다. 갑은 팔달관 1층에서 학과 개강총회를 준비하고 있습니다. 갑은 피자를 N 판 시켰습니다. 식탁 위에 피자 N 판이 탑처럼 쌓여있습니다. 갑은 높이가 N 인 이 한 피자탑을, 높이가 1인 피자탑들로 분리시켜야 합니다. 갑은 이 일을 하기 싫었습니다. 하지만 다음과 같은 격언이 있습니다.</p>

<p style="text-align:center">“피할 수 없다면 즐겨라!” - 로버트 엘리어트</p>

<p>격언대로, 갑은 혼자 놀기를 하며 즐겁게 일을 해결하기로 합니다. 그래서 다음과 같은 놀이를 하기로 했습니다.&nbsp;</p>

<p>먼저 놀이를 시작하기 전에, 식탁 위엔 N 개의 피자판이 하나의 탑으로 쌓여있습니다. 놀이가 시작되면, 갑은 식탁 위에 있는 피자탑들 중 하나를 고릅니다. 그리고 고른 피자탑을 두 개의 피자탑으로 분리합니다. 이때 갑은, 분리된 두 피자탑의 높이의 곱만큼 즐거움을 느낍니다. 즉, 갑이 고른 피자탑의 높이가 A이고, 갑이 이 피자탑을 높이 B인 피자탑과 높이 C인 피자탑으로 분리했다면, 갑은 이때 B * C만큼의 즐거움을 느낍니다. 단, 높이가 1인 피자탑은 더는 분리시키지 않습니다. 갑은 계속 피자탑들을 분리해나갑니다. 이 놀이를 하다가 식탁 위에 더 이상 분리할 수 있는 피자탑이 없어진다면, 갑의 개강총회 준비 일은 끝나게 됩니다.&nbsp;</p>

<p>갑은 문득, 혼자 놀기를 통해 얼마나 재밌게 놀 수 있을지 궁금해졌습니다. 갑이 주문한 피자판의 수 N 이 주어질 때, 갑이 혼자 놀기를 통해 얻을 수 있는 즐거움의 총합의 최댓값을 구해주세요.</p>

<p style="text-align:center"><img alt="" src="http://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14606/2.png" style="height:189px; width:283px"></p>

<p style="text-align:center">< 높이가 8인 피자탑을 높이가 4인 피자탑 둘로 분리시키는 과정 ></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 피자판의 개수를 의미하는 양의 정수 N(1 ≤ N ≤ 10) 이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>갑이 얻을 수 있는 즐거움의 총합의 최댓값을 한 줄에 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제1의 입력이 1이므로, 게임 시작부터 갑이 분리할 수 있는 피자탑이 없습니다. 따라서 갑이 얻는 즐거움은 0입니다.</p>

<p>예제2의 정답 3은 다음과 같은 과정을 통해 얻어집니다. 먼저 놀이를 시작한 순간에, 갑은 (3) 피자탑 하나를 식탁 위에 두고 있습니다. ()는 피자탑 하나를, () 안의 수는 피자탑의 높이를 의미합니다. 갑은 &nbsp;피자탑 (3)을 (1), (2)로 나눕니다. 그리고 2(=1*2) 만큼 즐거움을 얻습니다. 갑은 높이 2의 피자탑을 골라 나눕니다. 즉, 식탁 위의 (1), (2) 피자탑들을 (1), (1), (1)로 만들고, 1(=1*1)만큼의 즐거움을 누립니다. 이제 더 이상 식탁 위에 나눌 수 있는 피자탑이 없으므로, 최종적으로 갑은 총 3(1+2)만큼 즐겁게 놀았습니다.</p>

				</div>
				</div>','1
','0
','MATH'),
                                                                                                                (2519,'BAEKJOON','https://www.acmicpc.net/problem/14607',14607,'피자 (Large)','1초','512 MB',8,'<p style="text-align:center"><img alt="" src="http://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14606/1.png" style="height:154px; width:233px"></p>

<p style="text-align:center">< Picture: Designed by Kstudio / Freepik ></p>

<p>갑은 아주대학교 학생입니다. 갑은 팔달관 1층에서 학과 개강총회를 준비하고 있습니다. 갑은 피자를 N 판 시켰습니다. 식탁 위에 피자 N 판이 탑처럼 쌓여있습니다. 갑은 높이가 N 인 이 한 피자탑을, 높이가 1인 피자탑들로 분리시켜야 합니다. 갑은 이 일을 하기 싫었습니다. 하지만 다음과 같은 격언이 있습니다.</p>

<p style="text-align:center">“피할 수 없다면 즐겨라!” - 로버트 엘리어트</p>

<p>격언대로, 갑은 혼자 놀기를 하며 즐겁게 일을 해결하기로 합니다. 그래서 다음과 같은 놀이를 하기로 했습니다.&nbsp;</p>

<p>먼저 놀이를 시작하기 전에, 식탁 위엔 N 개의 피자판이 하나의 탑으로 쌓여있습니다. 놀이가 시작되면, 갑은 식탁 위에 있는 피자탑들 중 하나를 고릅니다. 그리고 고른 피자탑을 두 개의 피자탑으로 분리합니다. 이때 갑은, 분리된 두 피자탑의 높이의 곱만큼 즐거움을 느낍니다. 즉, 갑이 고른 피자탑의 높이가 A이고, 갑이 이 피자탑을 높이 B인 피자탑과 높이 C인 피자탑으로 분리했다면, 갑은 이때 B * C만큼의 즐거움을 느낍니다. 단, 높이가 1인 피자탑은 더는 분리시키지 않습니다. 갑은 계속 피자탑들을 분리해나갑니다. 이 놀이를 하다가 식탁 위에 더 이상 분리할 수 있는 피자탑이 없어진다면, 갑의 개강총회 준비 일은 끝나게 됩니다.&nbsp;</p>

<p>갑은 문득, 혼자 놀기를 통해 얼마나 재밌게 놀 수 있을지 궁금해졌습니다. 갑이 주문한 피자판의 수 N 이 주어질 때, 갑이 혼자 놀기를 통해 얻을 수 있는 즐거움의 총합의 최댓값을 구해주세요.</p>

<p style="text-align:center"><img alt="" src="http://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14606/2.png" style="height:189px; width:283px"></p>

<p style="text-align:center">< 높이가 8인 피자탑을 높이가 4인 피자탑 둘로 분리시키는 과정 ></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 피자판의 개수를 의미하는 양의 정수 N(1 ≤ N ≤ 10<sup>9</sup>) 이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>갑이 얻을 수 있는 즐거움의 총합의 최댓값을 한 줄에 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제1의 입력이 1이므로, 게임 시작부터 갑이 분리할 수 있는 피자탑이 없습니다. 따라서 갑이 얻는 즐거움은 0입니다.</p>

<p>예제2의 정답 3은 다음과 같은 과정을 통해 얻어집니다. 먼저 놀이를 시작한 순간에, 갑은 (3) 피자탑 하나를 식탁 위에 두고 있습니다. ()는 피자탑 하나를, () 안의 수는 피자탑의 높이를 의미합니다. 갑은 &nbsp;피자탑 (3)을 (1), (2)로 나눕니다. 그리고 2(=1*2) 만큼 즐거움을 얻습니다. 갑은 높이 2의 피자탑을 골라 나눕니다. 즉, 식탁 위의 (1), (2) 피자탑들을 (1), (1), (1)로 만들고, 1(=1*1)만큼의 즐거움을 누립니다. 이제 더 이상 식탁 위에 나눌 수 있는 피자탑이 없으므로, 최종적으로 갑은 총 3(1+2)만큼 즐겁게 놀았습니다.</p>

				</div>
				</div>','1
','0
','MATH'),
                                                                                                                (2520,'BAEKJOON','https://www.acmicpc.net/problem/14608',14608,'구분구적법 (Small)','1초','512 MB',6,'<p>어떤 함수의 적분값은 다음과 같이 근사가 가능하다.</p>

<p>\[\int_a^b{f(x) dx} \approx &nbsp;\sum_{k=0}^{n-1}{f(a + k \Delta x + \epsilon) \Delta x }\]\[\Delta x = \frac{b-a}{n} \]\[ 0 \le \epsilon \le \Delta x\]</p>

<p>(훈련소에서) 신나게 적분 계산을 하던 민규는 문득 ?을 잘 정해주면 이 근삿값이 실제 적분값과 일치하게 만들 수 있지 않을까 하는 생각이 들었다. 그런데 이를 확인하기 위해서는 소수점 계산이 필요하기 때문에 손으로 푸는 데는 한계가 있다는 것을 깨달았고, 여러분에게 이를 위한 프로그램을 만들어달라고 요청했다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 다항함수의 차수를 나타내는 양의 정수 K(K = 1) 가 주어진다. 두 번째 줄에는 최고차항부터 내림차순으로 각 항의 계수를 나타내는 정수 c<sub>i</sub> (0 ≤ c<sub>i</sub>&nbsp;≤ 10, 1 ≤ c<sub>1</sub> ≤&nbsp;10) 가 주어진다. 마지막 줄에는 적분 구간의 시작과 끝을 나타내는 두 양의 정수 a, b와 쪼개지는 구간의 개수 N 이 주어진다. (0 ≤ a < b ≤ 10, 1 ≤ N ≤ 10)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>구분구적법을 통해 계산한 근삿값이 적분값과 일치하게 만드는 ?을 한 줄에 출력한다.</p>

<p>근삿값과 실제 적분값의 절대오차 또는 상대오차가 10<sup>-4</sup>&nbsp;이하일 경우 정답으로 간주한다. 만약 그런 값이 존재하지 않을 경우 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>다항함수의 적분은 다음과 같이 계산한다.</p>

<p>\[\int_a^b{x^n dx} = \frac{b^{n+1} - a^{n+1}}{n+1}\]</p>

				</div>
				</div>','1
1 0
0 1 2
','0.2500
','MATH'),
                                                                                                                (2523,'BAEKJOON','https://www.acmicpc.net/problem/14609',14609,'구분구적법 (Large)','1초','512 MB',11,'<p>어떤 함수의 적분값은 다음과 같이 근사가 가능하다.</p>

<p>\[\int_a^b{f(x) dx} \approx &nbsp;\sum_{k=0}^{n-1}{f(a + k \Delta x + \epsilon) \Delta x } \]\[ \Delta x = \frac{b-a}{n} \]\[ 0 \le \epsilon \le \Delta x\]</p>

<p>(훈련소에서) 신나게 적분 계산을 하던 민규는 문득 ?을 잘 정해주면 이 근삿값이 실제 적분값과 일치하게 만들 수 있지 않을까 하는 생각이 들었다. 그런데 이를 확인하기 위해서는 소수점 계산이 필요하기 때문에 손으로 푸는 데는 한계가 있다는 것을 깨달았고, 여러분에게 이를 위한 프로그램을 만들어달라고 요청했다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 다항함수의 차수를 나타내는 양의 정수 K(1 ≤ K ≤&nbsp;10) 가 주어진다. 두 번째 줄에는 최고차항부터 내림차순으로 각 항의 계수를 나타내는 정수 c<sub>i</sub> (0 ≤ c<sub>i</sub>&nbsp;≤ 10, 1 ≤ c<sub>1</sub> ≤&nbsp;10) 가 주어진다. 마지막 줄에는 적분 구간의 시작과 끝을 나타내는 두 양의 정수 a, b와 쪼개지는 구간의 개수 N 이 주어진다. (0 ≤ a < b ≤ 10, 1 ≤ N ≤ 10)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>구분구적법을 통해 계산한 근삿값이 적분값과 일치하게 만드는 ?을 한 줄에 출력한다.</p>

<p>근삿값과 실제 적분값의 절대오차 또는 상대오차가 10<sup>-4</sup>&nbsp;이하일 경우 정답으로 간주한다. 만약 그런 값이 존재하지 않을 경우 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>다항함수의 적분은 다음과 같이 계산한다.</p>

<p>\[\int_a^b{x^n dx} = \frac{b^{n+1} - a^{n+1}}{n+1}\]</p>

				</div>
				</div>','1
1 0
0 1 2
','0.2500
','MATH'),
                                                                                                                (2511,'BAEKJOON','https://www.acmicpc.net/problem/14613',14613,'너의 티어는?','2초','256 MB',10,'<p dir="ltr">규환이는 최근에 오버워치에 흠뻑 빠졌다. 그의 랭크 점수는 현재 2000점이며, 그는 오늘 랭크게임을 20번 할 예정이다. 규환이는 게임을 시작하기 전 자신의 그동안 승률을 통해 자신이 브론즈, 실버, 골드, 플래티넘, 다이아에 갈 확률이 몇 퍼센트인지 궁금해졌다. 게임을 이길 경우 얻는 포인트는 50 Point, 질 경우 잃는 포인트도 50 Point, 비길 경우 Point의 변화는 없다. 랭크 점수에 따른 티어는 아래와 같다.</p>

<ul dir="ltr">
	<li>브론즈:&nbsp;1000~1499</li>
	<li>실버:&nbsp;1500~1999</li>
	<li>골드:&nbsp;2000~2499</li>
	<li>플래티넘:&nbsp;2500~2999</li>
	<li>다이아:&nbsp;3000~3499</li>
</ul>

<p>이때, 20경기를 진행하고 각 티어에 배정받을 확률을 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫째 줄에 게임에서 승리할 확률 W, 질 확률 L,비길 확률 D가 0 이상의 실수로 주어진다. (W+L+D=1) 입력은 소수점 둘째짜리까지 들어온다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p dir="ltr">브론즈, 실버, 골드, 플래티넘, 다이아에 배정받을 확률을 각 줄에 출력한다. (소수점 아래 9번째 자리에서 반올림하여 소수점 8자리까지 출력)</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','0.5 0.5 0
','0.00590897
0.40599251
0.56740379
0.02069378
0.00000095
','MATH'),
                                                                                                                (2517,'BAEKJOON','https://www.acmicpc.net/problem/14617',14617,'제3회 IUPC','2초','256 MB',15,'<p dir="ltr">세계적으로 권위 있는 대회 중 하나인 IUPC(International University student Product Contest, 세계 대학생 곱셈 대회)는 3인이 한 팀을 이뤄 다른 팀들과 큰 수의 곱셈을 얼마나 빠르고 정확하게 계산하는지 경쟁하는 대회다. 제1회 대회 대상은 인하대학교의 “I inha U” 팀이, 제2회 대회의 대상 또한 인하대학교의 “URF” 팀이 차지했다. 그리고 오늘, 제3회 IUPC가 개최된다.</p>

<p dir="ltr">이렇게 즐거운 날이지만 대회에 참가한 팀들은 마냥 즐겁지만은 않다. IUPC를 주관하는 CTP에서 매번 인하대학교에서 대상을 타는 것이 타 대학 팀들의 사기를 저하시킨다 생각하고 대회의 룰을 바꿔버렸기 때문이다.</p>

<p>기존의 대회는 큰 수 두 개를 주고 빠르게 곱하는 단순한 대회였다. 하지만 제3회 IUPC는 아래 방식과 같이 대회가 진행된다.</p>

<ol>
	<li>N개의 줄에 걸쳐 A, B, C가 차례대로 주어진다.</li>
	<li>i번째 줄에 주어진 A, B, C를 A<sub>i</sub> ,B<sub>i</sub> ,C<sub>i</sub> 라고 한다. 이때 모든 i에 대해 A<sub>i</sub>XB<sub>i</sub><sup>0</sup>,A<sub>i</sub>XB<sub>i</sub><sup>1</sup>,A<sub>i</sub>XB<sub>i</sub><sup>2</sup>,A<sub>i</sub>XB<sub>i</sub><sup>3</sup>, …. , A<sub>i</sub>XB<sub>i</sub><sup>C<sub>i</sub></sup>,을 계산하고 각각의 계산 결과를 대회 본부에서 나눠준 카드에 기록한다.</li>
	<li>
	<p dir="ltr">모든 계산을 마치면 $\sum_{i=1}^{n}{(C_i+1)}$개의 카드가 생긴다. 이렇게 만들어진 카드에 적힌 숫자가 같은 것들끼리 묶음을 만든다.</p>
	</li>
	<li>
	<p dir="ltr">3번 규칙에 의해 카드를 정리하고 나면 K개의 카드 묶음들이 생긴다. K는 N과 같을 수도 있고 N보다 작을 수도 있다. K를 가장 빠르게 계산하는 팀이 우승한다.</p>
	</li>
</ol>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 N(1 ≤ N ≤ 100)이 주어진다. 두 번째 줄부터 N개의 줄에 걸쳐 차례대로 A<sub>i</sub>, B<sub>i</sub>, C<sub>i</sub>가 공백을 구분으로 주어진다.(2 ≤ A<sub>i</sub>, B<sub>i</sub>&nbsp;≤ 100,000, 1 ≤ C<sub>i</sub>&nbsp;≤ 100,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 주어진 규칙대로 카드를 정리했을 때 생기는 묶음의 수 K를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
4 4 3
8 2 3
5 5 4
','11
','MATH'),
                                                                                                                (2528,'BAEKJOON','https://www.acmicpc.net/problem/14622',14622,'소수 게임','2초','256 MB',12,'<p dir="ltr">인하대학교에 다니는 대웅이는 정수론을 정말 좋아한다. 정수론을 광적으로 좋아하는 대웅이는 어느 순간부터 소수를 외우기 시작했고 어떤 수를 말하면 그 수가 소수인지 아닌지 판별할 수 있는 능력을 가지게 되었다. 인하대학교에 소수의 신이 있다는 소문이 퍼지자 인상대학교의 소수 마스터 규성이는 대웅이에게 도전장을 내밀었다.</p>

<p dir="ltr">둘은 누가 더 소수를 사랑하는지 내기를 하기로 하였다.</p>

<p dir="ltr">하지만 누가 더 소수를 사랑하는지에 대한 기준이 없으므로 소수 게임을 이용하기로 하였다.</p>

<p dir="ltr">소수게임의 규칙은 다음과 같다.&nbsp;</p>

<ol dir="ltr">
	<li>두 사람이 번갈아가며 소수를 말한다.</li>
	<li>소수가 아닌 수를 부르게 될 경우 상대방은 지금까지 상대방이 말한 소수중에서 3번째로 큰 수만큼 점수를 얻게 된다.(만약 상대방이 지금까지 말한 소수가 3개 미만이라면 상대방은 1000점을 얻게 된다.)</li>
	<li>만약 지금까지 한번이라도 등장한 소수를 말할 경우 해당 소수를 말한 팀이 -1000을 얻게 되며 해당 소수는 그 사람이 말한 소수로 기록되지 않는다.</li>
	<li>규성이는 도전자이므로 게임은 항상 대웅이부터 시작한다.</li>
	<li>두 사람이 말할 수 있는 소수는 항상 5000000 미만이다.</li>
</ol>

<p>다음과 같은 규칙으로 소수 게임을 진행할 때 승자를 출력하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p dir="ltr">입력의 첫째 줄에 두 사람이 대결을 하는 라운드 수 N이 주어진다. (5≤N≤100,000)</p>

<p>이 후 N개의 줄에 대웅이와 규성이가 말하는 정수가 공백으로 구분되어 주어진다. 두 사람이 말하는 정수는&nbsp;5,000,000보다 작은 자연수 또는 0이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>대웅이가 이길 경우 “소수의 신 갓대웅” 규성이가 이길 경우 “소수 마스터 갓규성”을 출력한다. 만약 비길 경우 “우열을 가릴 수 없음” 을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
2 3
4 9
2 10
7 37
11 3
','소수의 신 갓대웅
','MATH'),
                                                                                                                (2521,'BAEKJOON','https://www.acmicpc.net/problem/14623',14623,'감정이입','2초','256 MB',4,'<p dir="ltr">감정이입에 대해서 알고 있는가? 감정이입이란 자신의 감정을 특정 대상에 이입시키거나 특정 대상의 감정을 자신에게 이입시켜서 서로 공감하는 것이다. 이렇게 자신이 다른 대상이 됐다고 생각을 하면 그전에는 느끼지 못했던 감정을 느낄 수 있어 풍부한 사고를 할 수 있다. 감정이입에 몰입하게 되면 어떠한 단계에 이르게 된다. 이 단계에서는 자신이 감정이입을 하는 대상이 되어 사고를 할 수 있게 된다.</p>

<p dir="ltr">예로부터 많은 천재들이 이 단계에 다다라 많은 업적을 세웠다. 알베르트 아인슈타인은 빛이 되어 상대성 이론을 발견했고, 찰리 채플린은 자신이 연기하는 대상 그 자체가 되어 많은 사람들이 기억하는 희극배우가 됐다.</p>

<p dir="ltr">컴퓨터 공학에서도 이런 단계에 다다를 수 있을까? CPU가 되어서 주변 입/출력 장치를 제어하거나, 뉴럴 네트워크에 존재하는 수많은 뉴런들 중 한 뉴런이 되어 계산에 관여하는 상상을 할 수 있을까?</p>

<p>천 리 길도 한 걸음부터. 컴퓨터에서는 없어서 안될 ALU(Arithmetic Logic Unit)가 되는 상상을 해보자. ALU는 두 이진수의 산술 연산 혹은 논리 연산을 계산하는 회로다. 두 이진수가 주어졌을 때 덧셈은 가산기를, 뺄셈은 보수기와 가산기를 이용해 이루어진다. 그렇다면 두 이진수의 곱셈은 어떻게 이루어 질까? ALU가 되어 이 문제를 해결해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 이진수 B1이 주어진다. 두 번째 줄에 이진수 B2가 주어진다. 입력으로 주어지는 두 이진수의 길이는 1 이상 30 이하의 자연수이다. 또한 두 이진수들이 1로 시작하는 것이 보장된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 입력으로 주어진 두 이진수 B1, B2의 곱을 이진수로 출력한다. 출력하는 이진수 앞에 불필요한 0이 붙으면 안 됨에 주의해야 한다. 즉 출력하는 이진수의 시작은 항상 1이어야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1010
11
','11110
','MATH'),
                                                                                                                (2526,'BAEKJOON','https://www.acmicpc.net/problem/14650',14650,'걷다보니 신천역 삼 (Small)','2초','256 MB',9,'<p>욱제는 ‘삼’이란 음절을 참 좋아한다. 인삼, 홍삼, 해삼, 삼성, 이춘삼(李春森), 삼식이, 삼시세끼, ㄴㄴ 그거 안 삼, 삼과 죽음, 알았삼, 금강삼도 식후경, 걷다보니 신천역 삼, 그리고 특히 일이삼을 좋아한다. 그래서 욱제는 3을 가지고 놀아보기로 했삼.</p>

<p>3개 숫자(0, 1, 2)만 가지고 N자리 3의 배수를 만들어 보삼. 만드는 배수는 자연수 이삼. 0으로 시작하는 수는 만들 수 없는 수 이삼. 3의 배수가 몇 개나 나올 수 있삼?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>N을 입력 받으삼. (1 ≤ N ≤ 9)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>0, 1, 2만 가지고 만들 수 있는 N자리 3의 배수의 개수를 출력하삼.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','0
','MATH'),
                                                                                                                (2537,'BAEKJOON','https://www.acmicpc.net/problem/14651',14651,'걷다보니 신천역 삼 (Large)','2초','256 MB',10,'<p>욱제는 ‘삼’이란 음절을 참 좋아한다. 인삼, 홍삼, 해삼, 삼성, 이춘삼(李春森), 삼식이, 삼시세끼, ㄴㄴ 그거 안 삼, 삼과 죽음, 알았삼, 걷다보니 신천역 삼, 그리고 특히 일이삼을 좋아한다. 그래서 욱제는 3을 가지고 놀아보기로 했삼.</p>

<p>3개 숫자(0, 1, 2)만 가지고 N자리 3의 배수를 만들어 보삼. 만드는 배수는 자연수 이삼. 0으로 시작하는 수는 만들 수 없는 수 이삼. 3의 배수가 몇 개나 나올 수 있삼?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>N을 입력 받으삼 (1 ≤ N ≤ 33,333)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>0, 1, 2만 가지고 만들 수 있는 N자리 3의 배수의 개수를 출력하삼. 숫자가 너무 커질 수 있으니까 답을 10<sup>9</sup>+9(1,000,000,009)로 나눈 나머지를 출력하삼.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','0
','MATH'),
                                                                                                                (2529,'BAEKJOON','https://www.acmicpc.net/problem/14652',14652,'나는 행복합니다~','2초','256 MB',2,'<p>“나는 행복합니다~ 한화라서 행복합니다~”</p>

<p>행복한 이 노래 가사! 그렇다. 욱제는 한화 이글스의 열렬한 <!--[if gte vml 1]><v:shapetype id=" t75"
 coordsize="21600,21600" o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe"
 filled="f" stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="그림 %d 1" o:spid=" i1027"
 type="# t75" style=width:12pt;height:17pt;visibility:visible;
 mso-wrap-style:square>
 <v:imagedata src="file:////Users/baekjoon/Library/Group%20Containers/UBF8T346G9.Office/msoclip1/01/clip_image001.png"
  o:title=""/>
</v:shape><![endif]--><img src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14652/1.png" style="height:18px; width:12px">이다. 욱제는 여름방학을 맞아 치킨과 맥주를 챙겨 야구장을 방문했다! 하지만 이게 웬걸? 치맥에 정신이 팔린 욱제는 그만 자신의 관중석 위치가 담긴 티켓을 잃어버리고 말았다. 욱제가 유일하게 기억하는 것이라고는 자신의 관중석 번호 K뿐이다.</p>

<p>당신은 한화 이글스의 감독이다. 열혈<!--[if gte vml 1]><v:shape
 id="그림 %d 2" o:spid=" i1026" type="# t75"
 style=width:12pt;height:17pt;visibility:visible;mso-wrap-style:square>
 <v:imagedata src="file:////Users/baekjoon/Library/Group%20Containers/UBF8T346G9.Office/msoclip1/01/clip_image001.png"
  o:title=""/>
</v:shape><![endif]--><img src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14652/1.png" style="height:18px; width:12px">인 욱제의 방문에 깊은 감동을 받은 당신은 욱제가 잃어버린 자리를 찾아주려고 한다. 오늘 경기가 펼쳐지는 잠실구장은 세로 길이가 N, 가로 길이가 M인 N≤M 크기의 관중석을 가지고 있다. 관중석의 왼쪽 위는 (0, 0), 오른쪽 아래는 (N-1, M-1)으로 표시된다. 각 관중석에는 번호가 아래 그림처럼 매겨져있다. (0, 0)에서부터 0번으로 시작하여 오른쪽으로, 끝에 다다르면 그 아래에서 또 오른쪽으로 숫자가 증가해나가는 식이다.</p>

<p style="text-align: center;"><!--[if gte vml 1]><v:shape
 id="그림 %d 3" o:spid=" i1025" type="# t75"
 style=width:207pt;height:146pt;visibility:visible;mso-wrap-style:square>
 <v:imagedata src="file:////Users/baekjoon/Library/Group%20Containers/UBF8T346G9.Office/msoclip1/01/clip_image004.png"
  o:title=""/>
</v:shape><![endif]--><img src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14652/2.png" style="height:146px; width:207px"></p>

<p>당신은 관중석의 크기와 욱제 자리의 번호를 알고 있다. 욱제가 잃어버린 자리는 어디일까? 자리를 찾아서 욱제에게 알려주도록 하자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 관중석의 크기를 나타내는 N, M과 잃어버린 관중석 번호를 나타내는 K가 주어진다. (1 ≤ N, M ≤ 30,000, 0 ≤ K ≤ N×M-1)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>욱제의 잃어버린 자리를 찾아서, 잃어버린 자리의 좌표 (n, m)를 하나의 공백을 사이에 두고 숫자만 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 4 6
','1 2
','MATH'),
                                                                                                                (2530,'BAEKJOON','https://www.acmicpc.net/problem/14671',14671,'영정이의 청소','1초','512 MB',10,'<p>영정이는 숭실대 학교 앞, 원룸에서 자취를 한다. 원룸 자취방 방바닥에는 곰팡이가 서식하고 있는데, 곰팡이는 시간이 지날 때 마다 증식을 한다. 영정이의 자취방에서 서식하는 곰팡이는 특이한 방식으로 증식하는데, 어떤 한 지점에 곰팡이가 있었다면 그 위치에서 대각선 위 아래로 곰팡이가 증식되고 원래 곰팡이가 있던 자리는 곰팡이가 사라지게 된다. 아래 2번 그림과 같이 곰팡이가 사라지는 지점이자 다시 증식되는 지점이면 곰팡이는 증식된다.</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14671/1.png" style="height:65px; width:252px"></p>

<p style="text-align:center">1번 예</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14671/2.png" style="height:67px; width:254px"></p>

<p style="text-align:center">2번 예</p>

<p>영정이는 매우 게으름이 많아 미래에 이 곰팡이가 자신의 집을 모두 뒤덮는 시점이 한번이라도 생길 것으로 예측되면 대청소를 하려고 한다. 영정이의 집의 크기와, 현재 곰팡이의 위치가 주어질 때, 영정이가 청소를 해야 하는지 안 해도 되는지 알려주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>프로그램의 입력은 표준 입력으로 받는다. 입력의 첫 줄에는 영정이의 자취방 바닥의 크기 N과 M, 그리고 바닥에 있는 곰팡이의 개수 K가 주어진다. (2 ≤ N, M ≤ 1,000) (1 ≤ K ≤ 100,000) 둘째 줄부터 K줄에 걸쳐 현재 곰팡이의 위치 x, y가 주어진다. 좌표계는 행렬 좌표계와 일치한다. (1 ≤ x ≤ N) (1 ≤ y ≤ M) 곰팡이는 중복되지 않는 위치에 주어진다.</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14671/3.png" style="height:175px; width:189px"></p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>프로그램의 출력은 표준 출력으로 한다. 영정이가 청소를 해야 한다면 ‘YES’를 청소를 하지 않아도 된다면 ‘NO’를 출력하자.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 3 1
2 2
','NO
','MATH'),
                                                                                                                (2543,'BAEKJOON','https://www.acmicpc.net/problem/14672',14672,'윤호는 마법약 도둑','1초','512 MB',18,'<p>효빈이의 마법 공장에는 2번부터 N번까지의 제품번호를 가진 마법약을 팔고 있다. 윤호는 효빈이의 마법 공장에서 M개의 마법약을 사와 마법상점을 열기로 했다. 윤호의 정보원 영선이는 윤호에게 효빈이의 중요한 비밀을 알려준다. 그 비밀이란, 어떤 제품 A가 제품번호가 P1 P2 … Pk 인 마법약을 섞어 만들었다면 그 제품의 제품 번호는 P1×P2× …×Pk 로 결정 되고 여기에는 예외가 없다는 것이다. 이때, P1 P2 … Pk 들은 A의 재료가 된다. 하지만 똑똑한 효빈이는 이를 눈치채고 윤호와의 거래를 끊어버렸다! 이제 윤호에게 남은 것은 M개의 마법약뿐이다. 하지만 윤호에게는 아버지께서 물려주신 마법의 기계가 있다.</p>

<p>이 마법의 기계로 마법약 A를 분해할 수 있는데, 이 분해 작업을 하면 재료가 될 수 있는 가능성을 가진 마법약 P1 P2 … Pk 중 하나를 추출할 수 있다. 다만, 이 분해하는 작업을 할 경우에는 마법약 A는 파괴되어 버린다. 예를 들어, 12번 마법약을 분해 할 경우, 2, 3, 4, 6, 12번 마법약들 중 하나를 추출할 수 있다. 윤호는 최대한 다양한 효능을 내는 마법약을 만들고 싶다. 따라서 윤호가 추출한 제품들 중에서 어떤 약도 원료를 공유해서는 안 된다. 즉, 윤호가 q개의 마법약을 분해했을 때, 제품번호가 Y1 Y2 … Yq 인 마법약이 추출 됐다고 하자. 이때, 어떤 K번 마법약이 Yi약의 재료가 될 수도 있고, Yj의 재료도 될 수 있다면 이 추출은 실패한 추출이다. 예를 들어, 윤호가 사들인 효빈이의 약이 12번, 18번 약이었다고 치자. 이때, 12번을 분해해 4번약을 추출하고, 18번을 분해해 6번 약을 추출했다고 한다면, 2번이 4번과 6번 약의 재료가 될 수 있으므로 실패한 추출이다. 반면, 4번과 9번을 추출했다고 한다면 어떤 번호의 약도 동시에 재료가 될 수 없으므로 성공한 추출이다. 윤호가 실패하지 않으면서 추출할 수 있는 불안정한 마법약의 최대 개수를 구하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>프로그램의 입력은 표준 입력으로 받는다. 입력의 첫 줄에는 N과 M이 주어진다. (2 ≤ N ≤ 100,000,000) (1 ≤ M ≤ 1,000) 두 번째 줄에는 M개의 정수가 주어진다. 이 수들은 윤호가 효빈이에게 사온 마법약의 제품 번호이다. 각 수들은 N보다 작거나 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>프로그램의 출력은 표준 출력으로 한다. 윤호가 실패하지 않으면서 추출 할 수 있는 마법약의 최대 개수를 구 하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','20 2
12 18
','2
','MATH'),
                                                                                                                (2532,'BAEKJOON','https://www.acmicpc.net/problem/14679',14679,'영우와 ‘갓4’','1.5초','512 MB',16,'<p>게임을 좋아하는 영우는 오늘도 ‘갓4’ 라는 게임을 한다. ‘갓4’의 게임 시스템은 신기한데 우선 캐릭터와 몬스터는 각각 공격력(A), 방어력(D), 최대 체력(H)이 주어진다. ‘갓4’의 전투 시스템은 1:1 전투이며 다음과 같다.</p>

<ol>
	<li>자기의 턴이 오면 상대방을 공격할 수 있으며, [(자신의 공격력 ? 상대방의 방어력), 1] 중에 더 높은값만큼 상대방의 체력을 깎는다.</li>
	<li>공격이 끝나면 상대 턴으로 넘어간다.</li>
	<li>어느 한쪽의 체력이 0 이하로 떨어질 때까지 계속하며, 먼저 체력이 0 이하로 떨어진 쪽이 진다.</li>
	<li>모든 전투는 영우의 캐릭터가 먼저 공격한다.</li>
</ol>

<p>또한 몬스터와의 전투에서 승리하면 캐릭터는 몬스터의 능력치를 그대로 흡수한다. 즉 (5, 5, 5)의 능력치를 가진 캐릭터가 (1, 1, 1)의 능력치를 가진 몬스터와 싸워 승리하면 캐릭터는 (6, 6, 6)의 능력치를 가지게 되는 것이다. 또한 몬스터와의 전투에서 승리하면 캐릭터는 다시 체력을 최대치까지 회복한다. 영우는 총 N마리의 몬스터를 연속해서 지지않고 잡고 싶다. 즉 모든 몬스터와의 전투에서 이겨야 한다는 뜻이다. N마리 몬스터의 데이터를 모두 입력으로 주기에는 데이터의 크기가 너무 커지므로 다음과 같이 수식으로 대체하도록 했다.</p>

<p>k번째(k > 1) 몬스터의 공격력(A<sub>k</sub>), 방어력(D<sub>k</sub>), 최대 체력(H<sub>k</sub>)는 다음과 같다.</p>

<ul>
	<li>A<sub>k</sub> = ((A<sub>k-1</sub><sup>A<sub>p</sub></sup> + A<sub>a</sub>) % 100) + 1</li>
	<li>D<sub>k</sub> = ((D<sub>k-1</sub><sup>D<sub>p</sub></sup> + D<sub>a</sub>) % 3) + 1</li>
	<li>H<sub>k</sub> = ((H<sub>k-1</sub><sup>H<sub>p</sub></sup> + H<sub>a</sub>) % 1000) + 1</li>
</ul>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>프로그램의 입력은 표준 입력으로 받는다. 입력의 첫 줄에는 몬스터의 수 N이 주어진다. (1 ≤ N ≤ 50,000,000) 두 번째 줄에는 영우가 키우는 캐릭터의 공격력(A), 방어력(D), 최대 체력(H)이 차례대로 주어진다. (1 ≤ A ≤ 100) (1 ≤ D ≤ 3) (1 ≤ H ≤ 1000) 세 번째 줄에는 첫 번째 몬스터의 공격력(MA), 방어력(MD), 최대 체력(MH)이 차례대로 주어진다. (1 ≤ MA ≤ 100) (1 ≤ MD ≤ 3) (1 ≤ MH ≤ 1000) 넷째 줄에 몬스터의 능력치를 구하는데 사용되는 값(A<sub>p</sub>, A<sub>a</sub>, D<sub>p</sub>, D<sub>a</sub>, H<sub>p</sub>, H<sub>a</sub>)이 차례대로 주어진다. (1 ≤ A<sub>p</sub>, D<sub>p</sub>, H<sub>p</sub> ≤ 1,000,000,000) (0 ≤ A<sub>a</sub> ≤ 99) (0 ≤ D<sub>a</sub> ≤ 2) (0 ≤ H<sub>a</sub> ≤ 999)&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>프로그램의 출력은 표준 출력으로 한다. 영우가 N마리의 몬스터를 잡았을 때 갖는 최종 능력치를 1,000,000,007로 나눈 나머지를 공격력(A), 방어력(D), 최대 체력(H) 순으로 공백으로 구분하여 출력한다. 만약영우가 N마리의 몬스터를 연속해서 잡을 수 없다면 -1을 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
11 1 15
11 1 20
1 10 1 0 1 10
','77 7 108
','MATH'),
                                                                                                                (2534,'BAEKJOON','https://www.acmicpc.net/problem/14707',14707,'그림 그리기','2초','512 MB',22,'<p>상수는 N행 M열의 격자에 L가지 색으로 그림을 그린다. 1행에서 시작해서 N행까지, 같은 행에서는 1열에서 시작해서 M열까지 순서대로 칠하는데, 1번 색부터 시작해서 L번 색까지 순서대로 사용한 뒤 다시 1번 색부터 사용한다. i번째 행의 높이는 H<sub>i</sub>이고 j번째 열의 너비는 W<sub>j</sub>이다. 상수는 물감을 낭비하고 싶지 않기 때문에, 그림을 그리기 전에 각 색이 얼마나 필요한지가 궁금해졌다. 상수를 위해 각 색으로 칠할 넓이가 얼마나 되는 지 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 N, M, L가 주어진다. (1 ≤ N, M, L ≤ 123,456)</p>

<p>두 번째 줄에 각 행의 높이를 나타내는 N개의 자연수 Hi가 공백을 사이에 두고 주어진다. H<sub>i</sub>의 합은 10<sup>9</sup>을 넘지 않는다. (1 ≤ i ≤ N)</p>

<p>세 번째 줄에 각 열의 너비를 나타내는 M개의 자연수 Wj가 공백을 사이에 두고 주어진다. W<sub>j</sub>의 합은 10<sup>9</sup>을 넘지 않는다. (1 ≤ j ≤ M)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>L줄에 걸쳐 k번째 줄에 k번 색으로 칠할 넓이를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>상수가 그릴 그림은 다음처럼 생겼다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14707/1.png" style="height:317px; width:340px"></p>

				</div>
				</div>','4 5 3
2 4 3 4
2 4 1 2 5
','63
70
49
','MATH'),
                                                                                                                (2549,'BAEKJOON','https://www.acmicpc.net/problem/14708',14708,'정육면체를 사랑하는 사람','0.5초','512 MB',21,'<p>지학이는 정육면체를 정말 사랑한다. 정육면체 없이는 하루도 살아갈 수 없다. 그래서 자기 집에 정육면체를 산더미처럼 쌓아놓고 매일 그 정육면체들을 바라보며 행복한 인생을 살고 있다.</p>

<p>지학이가 자꾸 집에 정육면체를 들여놓자 집안이 엉망이 되어버려 화가 난 석환이는 지학이에게 특단의 조치를 내렸다. 집에 늘어놓은 정육면체들을 당장 정리하지 않으면 집에서 내쫓겠다는 것이다!</p>

<p>지학이는 가로, 세로, 높이가 1cm인 K개의 정육면체들을 직육면체의 박스 1개에 모두 담아 정리해야 한다. 게다가 석환이는 까다로운 성격이라 다음과 같은 조건을 요구했다: 정육면체들의 각 면이 박스의 각 면과 평행하도록 놓여야 하고, 정육면체들끼리는 서로 맞닿아 있을 수는 있지만 서로 겹치거나 박스의 테두리를 뚫고 나오도록 놓을 수는 없다. 정육면체들을 어떻게 쌓고 배열하냐에 따라 필요한 직육면체 박스의 크기가 바뀌게 된다는 것을 알 수 있다.</p>

<p>마지막 한 줄기 자비심이 남아있는 석환이는 정육면체들을 정리하는데 필요한 직육면체 박스를 직접 사다 주겠다고 했다. 대신 석환이의 돈을 쓰는 것이기 때문에 박스의 가격을 최소한으로 줄이는 방법을 알아내야 한다. 만약 가격이 최소가 아니라면 석환이는 박스를 사러 가지 않을 것이고 결국 지학이는 집에서 쫓겨나게 된다. 박스의 가격은 직육면체의 겉넓이에 비례하므로 결국 겉넓이가 최소가 되는 박스의 크기를 석환이에게 알려주어야 한다.</p>

<p>지학이가 집에서 쫓겨나게 되지 않도록 필요한 직육면체 박스의 겉넓이가 최소가 되는 크기를 구해 지학이에게 알려주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 자연수 1개가 주어지는데, 이는 정육면체의 개수 K (1 ≤ K ≤ 10<sup>18</sup>) 를 나타낸다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 가격이 최소가 되는 직육면체 박스의 가로, 세로, 높이를 cm 단위로 출력한다. 가격이 최소가 되는 직육면체 박스가 여러 개라면 (가로, 세로, 높이) 로 순서쌍을 만들었을 때 사전 순으로 제일 앞서는 것을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
','1 1 3
','MATH'),
                                                                                                                (2535,'BAEKJOON','https://www.acmicpc.net/problem/14710',14710,'고장난 시계','0.5초','512 MB',4,'<p>논산훈련소에 간 불쌍한 상언이는 첫날 훈련소에서 다쳐 먼 거리를 이동할 때 버스를 타고 다녔다. 어느 날 버스를 탄 상언이는 훈련소 버스 앞에 붙어있는 아날로그 시계를 보게 되었는데, 시계가 이상해 보인다는 사실을 관찰했다. 일반적인 시계라면 가리킬 수 없는 시간을 가리키고 있던 것이다. 이 시계를 본 상언이는 어떤 시계의 시침과 분침이 가리키는 방향을 보면 그 시계가 고장 났는지 정상인지 판단할 수 있을 거라 생각했지만, 귀찮아서 생각을 그만두기로 했다. 상언이를 대신해서 시계가 정상인지 이상한지 알려주자.</p>

<p>정상적인 시계는 12시 정각에 시침과 분침이 둘 다 정확히 12시 방향을 가리키며, 시침은 12시간에 한 바퀴, 분침은 1시간에 한 바퀴를 시계 방향으로 등속도로 움직인다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 시침의 각도 θ<sub>1</sub>, 분침의 각도 θ<sub>2</sub> (0 ≤ θ<sub>1</sub>, θ<sub>2</sub> ≤ 359)가 정수로 주어진다. 시침, 분침의 각도는 12시 방향을 기준으로 시계방향으로 잰다. 예를 들어 3시 방향은 90, 9시 방향은 270 이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 시계의 각도가 정상인 경우 O를, 그렇지 않을 경우 X를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 예시는 시침이 6시 방향을, 분침이 12시 방향을 가리키고 있는 상태로 6시 정각의 시계 모양이다.</p>

<p>두 번째 예시는 시침이 12시 방향을, 분침이 6시 방향을 가리키고 있는 상태로 정상적인 시계에선 나올 수 없는 모양이다.</p>

				</div>
				</div>','180 0
','O
','MATH'),
                                                                                                                (2536,'BAEKJOON','https://www.acmicpc.net/problem/14715',14715,'전생했더니 슬라임 연구자였던 건에 대하여 (Easy)','0.5초','512 MB',10,'<p>안녕? 내 이름은 ntopia!</p>

<p>나는 원래 지구에 살고 있던 평범한 20대 청년이었어. 어느 날 길을 걷다가 괴한의 칼에 찔려 죽어버렸어. 그런데 이게 무슨 일이람! 정신을 차려보니 이세계에 떨어져 버렸지 뭐야. 여기에서 나는 슬라임을 전문으로 연구하는 슬라임 연구자가 되어버린 것 같아. 나는 지금 아주 중요한 연구를 진행하고 있어. 이 연구가 성공하면 나는 내가 살던 세계로 돌아갈 수 있게 될 거야. 이 연구를 도와주지 않겠니?</p>

<p>이곳의 슬라임은 모두 슬라임 에너지라는 것을 갖고 있고 그 양은 2 이상의 자연수로 표현돼. 나는 슬라임을 분할했을 때 슬라임 에너지가 어떻게 변화하는지에 대해 연구하고 있어.</p>

<p>슬라임 분할 과정은 1마리를 분할해서 2마리를 만들어내는 식으로 이루어져. K만큼의 슬라임 에너지를 가진 슬라임이 있었다고 해보자. 이 슬라임을 적절히 분할하면 A만큼의 에너지를 갖는 슬라임과 B만큼의 에너지를 갖는 슬라임을 만들 수 있고 (A, B는 2 이상의 자연수), 항상 K = A × B 를 만족해. 이렇게 분할하다보면 언젠가는 분할이 되지 않는 슬라임도 생기겠지?</p>

<p>그리고 슬라임 분할 기술이 아직 완벽하지 않아서 슬라임을 분할할 때마다 흠집이 하나씩 생기게 돼. 구체적으로, 흠집이 T개인 슬라임을 분할하면 흠집이 T + 1개인 슬라임 2마리가 생기는 것이지.</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14715/1.png" style="height: 280.833px; width: 393.333px;"></p>

<p style="text-align:center">&nbsp;에너지가 24이고 흠집이 1개인 슬라임을 분할한 모습. 에너지가 4이고 흠집이 2개인 슬라임과 에너지가 6이고 흠집이 2개인 슬라임으로 분할되었다.</p>

<p>나에겐 지금 슬라임 에너지가 K이고 흠집이 하나도 없는 슬라임이 있어. 이 슬라임을 분할하고 또 분할해서 분할이 가능한 슬라임이 존재하지 않을 때까지 마구마구 분할해야해. 그렇게 다 분할하고나면 마지막에 남은 슬라임들에 흠집이 적당히 생겼겠지? (물론 생기지 않았을 수도 있어) 그 슬라임들 중에서 흠집이 제일 많이 생긴 녀석의 흠집 개수가 최소가 되도록 분할을 적절히 수행하는 것이 내 연구의 목표야.</p>

<p>내 연구를 도와줘! 부탁이야!!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 처음 주어진 슬라임의 에너지 K (2 ≤ K ≤ 1, 000, 000) 가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>슬라임을 끝까지 분할했을 때, 가장 많이 생긴 흠집의 개수의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>처음에 에너지가 24이고 흠집이 없는 슬라임이 있다. 이 슬라임을 에너지가 4인 슬라임과 6인 슬라임으로 분할할 수 있고 각각은 흠집이 1개가 된다.</p>

<p>에너지가 4이고 흠집이 1개인 슬라임은 에너지가 2이고 흠집이 2개인 슬라임 2마리로 분할할 수 있다.</p>

<p>에너지가 6이고 흠집이 1개인 슬라임은 에너지가 2이고 흠집이 2개, 에너지가 3이고 흠집이 2개인 슬라임으로 분할할 수 있다.</p>

<p>이렇게 분할하고 나면 더는 분할이 가능한 슬라임이 존재하지 않게 된다.</p>

<p>이때 가장 많이 생긴 흠집의 개수는 2개이다. 이보다 더 적게 되도록 분할하는 방법은 존재하지 않는다.</p>

				</div>
				</div>','10
','1
','MATH'),
                                                                                                                (2552,'BAEKJOON','https://www.acmicpc.net/problem/14717',14717,'앉았다','1초','256 MB',6,'<p>섰다는 화투를 이용하여 20장의 카드를 가지고 2명 이상이 경기를 하는 게임이다.</p>

<p>이러한 섰다의 규칙을 단순화한 게임이 바로 앉았다이다.</p>

<p>앉았다의 규칙은 1, 2, 3, ... , 9, 10이 쓰인 카드가 각 2장씩 주어지며 총 20장의 카드가 사용되며, 2명이 참가한다.</p>

<p>다음은 앉았다의 경기 방법이다.</p>

<ol>
	<li>두 명의 참가자는 순서대로 20장의 카드 중 무작위로 2장의 카드를 가져온다.</li>
	<li>상대방이 이미 가지고 간 카드를 중복해서 가져올 수는 없다. 그리고 자신은 어떤 카드를 가져왔는지 알 수 있지만, 상대방이 어떤 카드를 가져갔는지는 알 수 없다.</li>
	<li>서로의 패를 공개한다.</li>
	<li>강한 족보의 패를 가진 사람이 이긴다. 만약 두 참가자가 같은 족보의 패를 가졌다면 비긴다.</li>
</ol>

<p>족보 (위에 있는 족보일수록 더 강한 족보이다)</p>

<ul>
	<li>10땡: 두 패가 모두 10</li>
	<li>9땡: 두 패가 모두 9</li>
	<li>...</li>
	<li>2땡: 두 패가 모두 2</li>
	<li>1땡: 두 패가 모두 1</li>
	<li>9끗: 땡이 아니고, 두 패를 더했을 때 일의 자리의 수가 9</li>
	<li>8끗: 땡이 아니고, 두 패를 더했을 때 일의 자리의 수가 8</li>
	<li>...</li>
	<li>1끗: 땡이 아니고, 두 패를 더했을 때 일의 자리의 수가 1</li>
	<li>0끗: 땡이 아니고, 두 패를 더했을 때 일의 자리의 수가 0</li>
</ul>

<p>예를 들어, 영학이의 패가 1과 1이고, 상대의 패가 10과 9라고 하자.</p>

<p>그렇다면 영학이는 1땡이고, 상대는 9끗이다. 영학이가 더 강한 족보를 가졌으므로 영학이가 상대를 이긴다.</p>

<p>영학이는 자신이 어떤 패를 받았는지 보았고, 상대방의 패는 모르는 상태이다.</p>

<p>영학이는 영악해서 앉았다 게임에서 자신이 이길 확률이 높을 때만 돈을 베팅한다.</p>

<p>영악한 영학이를 위하여 영학이의 패가 입력으로 주어졌을 때 이길 수 있는 확률을 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>영학이의 패를 뜻하는 두 개의 정수 A, B가 주어진다. (1 ≤ A, B ≤ 10)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>영학이가 이길 확률을 소수점 이하 셋 째 자리까지 반올림해서 출력하시오.</p>

<p>반드시 뒤따르는 0도 출력해야 한다. 예를 들어, 0.700을 출력했다면 정답이고, 0.7을 출력했다면 오답이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1
','0.941
','MATH'),
                                                                                                                (2540,'BAEKJOON','https://www.acmicpc.net/problem/14723',14723,'이산수학 과제','1초','256 MB',4,'<p>민호는 이산수학 강의를 듣는다.</p>

<p>어느 날 교수님께서 Positive rational numbers are countable에 대해 증명해 주시고, 역시나 과제를 내주셨다.&nbsp;</p>

<p>양의 유리수는 다음 그림처럼 열거할 수 있다.</p>

<p><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14723/1.png" style="height:279px; width:295px"></p>

<p>첫 번째 유리수는 1/1, 두 번째 유리수는 2/1, 세 번째 유리수는 1/2, 네 번째 유리수는 3/1, 다섯 번째 유리수는 2/2, ... 이다.</p>

<p>1/1, 2/2, 3/3, ... 은 다르게 취급 하는것에 유의하여야 한다.</p>

<p>위 그림처럼 모든 유리수에 순차적으로 번호를 붙였을 때, N번째 유리수를 구하여라.</p>

<p>&nbsp;과제가 하기 싫은 민호는 컴공과답게 N번째 유리수를 구하는 프로그램을 만들려고 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 양의 정수 N이 주어진다. (1 ≤ N ≤ 1000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>N번째 유리수가 a/b일 때, 분자 a, 분모 b를 공백으로 구분하여 a, b를 출력하여라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>과제가 하기 싫었던 민호는 실제로 이 과제를 프로그램으로 만들어 식을 유도했다고 한다.</p>

				</div>
				</div>','1
','1 1
','MATH'),
                                                                                                                (2554,'BAEKJOON','https://www.acmicpc.net/problem/14726',14726,'신용카드 판별','1초','128 MB',4,'<p>신용카드는 총 16자리의 숫자로 구성되어 있다. 언뜻 보기에는 무작위로 된 숫자로 구성되어 있는 것 같이 보이지만 그 속에는 하나의 수학적 비밀이 숨겨져 있다. 그중 하나가 카드 번호가 유효 한지 유효하지 않은 지 검사하는 Luhn 공식이다. 그 공식은 다음과 같다.</p>

<ol>
	<li>신용카드의 16자리 숫자에서 맨 우측 수부터 세어 홀수 번째 수는 그대로 두고, 짝수 번째 수를 2배로 만든다.</li>
	<li>2배로 만든 짝수 번째 수가 10 이상인 경우, 각 자리의 숫자를 더하고 그 수로 대체한다.</li>
	<li>이와 같이 얻은 모든 자리의 수를 더한다.</li>
	<li>그 합이 10으로 나뉘면 “정당한 번호”(유효)이고 그렇지 않으면 “부당한 번호”(유효하지 않음)로 판정된다.</li>
</ol>

<p>다음 공식을 이용해 주어진 신용카드의 번호가 유효한지, 유효하지 않은 지 판단해라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 수 T(1 ≤ T ≤ 1000)이 주어진다.</p>

<p>그 다음 줄부터 테스트 케이스에 해당하는 신용카드 번호가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>신용카드의 번호가 유효하면 “T”, 유효하지 않으면 “F”를 한 줄 씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
2720992711828767
3444063910462763
6011733895106094
','T
F
T
','MATH'),
                                                                                                                (2542,'BAEKJOON','https://www.acmicpc.net/problem/14730',14730,'謎紛芥索紀 (Small)','1초','128 MB',6,'<p>성민이는 이번 학기에 미적분학 과목을 수강하고 있다. 다항함수의 미분 단원 과제를 하던 도중 미분을 하기가 귀찮아진 성민이는 미분하려는 함수 f(x)가 주어지면, 미분 된 함수 f’(x)를 자동으로 구해주는 프로그램을 만들어서 계산을 줄일 생각을 하였다. 우리도 성민이가 원하는 프로그램을 한번 같이 만들어보도록 하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 항의 개수 N(1 ≤ N ≤ 100)이 주어진다.</p>

<p>둘째 줄부터 N개 줄에 걸쳐서 항의 계수 C(-100 ≤ C ≤ 100, C ≠ 0)와 항의 차수 K(0 ≤ K ≤ 1000)가 항의 차수가 큰 순서대로 주어진다. 항의 차수가 같은 항은 2개 이상 존재하지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>f’(1)의 값을 첫째 줄에 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>f(x) = 3x<sup>3 </sup>+ 2x<sup>2 </sup>+ x를 미분하면, f’(x) = 9x<sup>2 </sup>+ 4x + 1이 된다.</p>

<p>그래서 f’(1) = 9*1*1 + 4*1 + 1 = 14가 된다.</p>

				</div>
				</div>','3
3 3
2 2
1 1
','14
','MATH'),
                                                                                                                (2555,'BAEKJOON','https://www.acmicpc.net/problem/14731',14731,'謎紛芥索紀 (Large)','3초','256 MB',10,'<p>성민이는 이번 학기에 미적분학 과목을 수강하고 있다. 다항함수의 미분 단원 과제를 하던 도중 미분을 하기가 귀찮아진 성민이는 미분하려는 함수 f(x)가 주어지면, 미분 된 함수 f’(x)를 자동으로 구해주는 프로그램을 만들어서 계산을 줄일 생각을 하였다. 우리도 성민이가 원하는 프로그램을 한번 같이 만들어보도록 하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 항의 개수 N(1 ≤ N ≤ <strong>100000</strong>)이 주어진다.</p>

<p>둘째 줄부터 N개 줄에 걸쳐서 항의 계수 C(<strong>0 < C ≤ 100</strong>)와 항의 차수 K(0 ≤ K ≤ <strong>10<sup>9</sup></strong>)가 <strong>항의 차수와 관계 없이 무작위로 </strong>주어진다. 항의 차수가 같은 항은 2개 이상 존재하지 않는다</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>f’(<strong>2</strong>)의 값을 <strong>10<sup>9</sup>+7로 나눈 나머지</strong>를 첫째 줄에 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>f(x) = 3x<sup>3 </sup>+ 2x<sup>2 </sup>+ x를 미분하면, f’(x) = 9x<sup>2 </sup>+ 4x + 1이 된다.</p>

<p>그래서 f’(2) = 9*2*2 + 4*2 + 1 = 45가 되고, f’(2)를 10<sup>9</sup>+7로 나눈 나머지는 45가 된다.</p>

				</div>
				</div>','3
3 3
2 2
1 1
','45
','MATH'),
                                                                                                                (2567,'BAEKJOON','https://www.acmicpc.net/problem/14786',14786,'Ax+Bsin(x)=C ②','2초','512 MB',13,'<p>A, B, C가 주어졌을 때,&nbsp;Ax+Bsin(x)=C를 만족하는 x를 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 A, B, C가 주어진다. (0 < B ≤ A ≤ 100,000, 0 < C ≤ 100,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 x를 출력한다. 정답과의 절대/상대 오차는 10<sup>-9</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1 20
','19.4417867100477812106
','MATH'),
                                                                                                                (2602,'BAEKJOON','https://www.acmicpc.net/problem/14842',14842,'재홍의 사다리','2초','512 MB',6,'<p>재홍이는 집 옥상에 올라가는 것을 매우 좋아한다. 하지만 지난밤 폭풍우에 옥상으로 가는 사다리가 모두 부셔져 버렸다. 그래서 재홍이는 지금 가지고 있는 2개의 긴 통나무를 지지대로 사용하고 다리는 추가으로 구입하여 설치할 사다리와 예비용 사다리, 총 두 개의 사다리를 만들려고 한다.&nbsp;</p>

<p>재홍이는 다음과 같이 사다리를 설계했다. 지금 가지고 있는 길이가 같은 통나무 두 개를 서로 중심에 교차시켜 각 끝 네 점이 직사각형을 이루도록 한다.&nbsp;그 후 사각형의 세로를 N등분 하여 두 통나무와 만나는 두 점을 잇는 선분을 사다리의 뼈대로 한다. 단, 두 점의 위치가 같으면 그 길이는 0이며, 사다리의 양끝 뼈대는 바닥에 닿는 부분이므로 사지 않는다. 알뜰살뜰한 재홍이를 위해 사다리의 뼈대가 될 나무의 길이를 구해주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>사각형의 가로 W(1 ≤ W ≤ 10000), 세로 H(1 ≤ H ≤ 10000)와&nbsp;N(2 ≤ N ≤ 10000000)이 순서대로 주어진다. W, H&nbsp;그리고 N 모두 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>필요한 나무의 길이를 출력한다. 통나무나 나무의 둘레나 굵기는 무시한다. 모든 나무는 썩어서 잘라진 부분이 없으며 오로지 온전한 나무만 존재한다. 정답과의 절대/상대 오차는 10<sup>-6</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14842/example.png" style="height:279px; width:348px"></p>

<p>모든 길이의 합 S는 S = A<sub>1</sub> + A<sub>2</sub> + A<sub>3</sub> + ... + A<sub>n-1</sub>이 된다.</p>

				</div>
				</div>','10 4 10
','16.000000
','MATH'),
                                                                                                                (2603,'BAEKJOON','https://www.acmicpc.net/problem/14843',14843,'정보갓 영훈이','2초','512 MB',6,'<p>* 이 문제는 실제 인물, 장소, 상황과는 관련이 없습니다. *</p>

<p>한 고등학생 영훈이가 있다. 영훈이는 자기 학교 같은 학년 중에서 최고로 정보과학을 잘 하는 학생 중 한 명이다. 그러나 영훈이는 자신은 그저 일개 프로그래밍 뉴비일 뿐이라며 현실부정을 하고 있다. 옆에서 본의 아니게 기만당한 우리의 주인공이 영훈이에게 현실을 알려주려고 한다.</p>

<p>과학 공부를 한다고 말해 놓고 오늘도 어김없이 자습 시간에 백준을 풀고 있는 영훈이. 우리의 주인공은 백준 문제들에 점수를 매겨서 그 점수를 가지고 영훈이가 정보갓(정보과학 + god)이라는 것을 증명하고자 마음먹었다.</p>

<p>영훈이를 위해 우리의 주인공은 각 문제들에 1개부터 100개까지의 별을 매겼다. 별 1개짜리가 가장 쉬운 문제, 100개짜리가 가장 어려운 문제이다. 별의 개수는 꼭 정수이지는 않다. 예를 들어, 10826번 문제는 별 35.55개짜리 문제이다. 한 문제를 맞혔을 때의 점수는 다음과 같이 주어진다. S는 각 문제의 별 개수, A는 영훈이의 시도 횟수, T는 영훈이 소스의 구동 시간, M은 그 문제의 해답 소스 중 가장 빠른 것의 구동 시간일 때,</p>

<p>\[(\text{점수}) = \frac{S(1+\frac{1}{A})(1 + \frac{M}{T})}{4}\]</p>

<p>(예를 들어, S = 75.12, A = 3, T = 68, M = 64일 때 점수는 48.6070588…점이다.)</p>

<p>정보과학 수업 때 배우는 Python이 영훈이가 사용하는 언어인데, Python이 그다지 빠르지 않은 관계로 구동 시간이 0ms로 표시되는 일은 없다.</p>

<p>보고서를 열심히 쓰고 있는 영훈이. 정보과학 숙제인 것 같다. 영훈이에게 다가가는 우리의 주인공.</p>

<ul>
	<li>우리의 주인공 : 이거 벌써 풀었어? 역시 정보갓은 다르구나…</li>
	<li>영훈이 : 내가 정보갓이라니? 나보다 잘하는 사람이 얼마나 많은데… (정보를 잘하는 다른 사람들의 이름을 나열한다)</li>
	<li>우리의 주인공 : 정보갓이 세상에 한 사람인 것도 아니잖아. 그럼 넌 상위 몇 퍼센트 정도 되어야 정보갓이라고 생각하는데?</li>
	<li>영훈이: 믕 상위 15% 정도? 하지만 난 거기 안 들어간다니까?</li>
</ul>

<p>갓이라는 것을 열심히 부정하는 영훈이. 그럼 영훈이의 기준에 맞춰서 영훈이의 백준 점수 총점이 상위 15% 이내이면 영훈이를 정보갓으로 부르도록 하자.</p>

<p>단, 상위 15% 이내라는 것은 등수가 사람수의 15% 이하라는 것을 의미한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 영훈이가 푼 문제의 수 N이 주어진다. (N은 자연수, 1 ≤ N ≤ 1,000)</p>

<p>둘째 줄부터 N개의 줄에 걸쳐 S, A, T, M이 공백으로 구분되어 주어진다. S를 제외한 다른 모든 값은 자연수이다. (1 ≤ S ≤ 100, 1 ≤ A ≤ 1,000, 1 ≤ M ≤ T ≤ 10,000)</p>

<p>그 다음 줄에는 비교 대상이 될 사람들의 수 P가 주어진다. (P는 자연수, 6 ≤ P ≤ 1,000)</p>

<p>그 다음 P개의 줄에는 P명의 사람들의 백준 총점 R이 주어진다. (1 ≤ R ≤ 1,000,000)</p>

<p>P명의 사람들 중 영훈이와 총점이 같은 사람은 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 영훈이의 점수를 소수점 아래 두 자리까지 나타내어 예제의 형식과 같이 출력한다. 만일 영훈이가 P+1명의 사람들(P명의 비교 대상 + 영훈이) 중에서 상위 15% 이내에 들었다면, Younghoon 대신 Younghoon "The God"이라는 표현을 사용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
27.19 2 88 62
9.81 1 66 60
55.55 3 250 68
7
71.49
264.98
144.32
10.19
404.04
38.92
64.10
','The total score of Younghoon is 50.30.
','MATH'),
                                                                                                                (2604,'BAEKJOON','https://www.acmicpc.net/problem/14847',14847,'수열과 변환','2초','512 MB',17,'<p>크기가 N인 수열 a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>N</sub>이 있다. 이 수열에 다음과 같은 변환 연산을 적용하려고 한다.</p>

<ol>
	<li>아래와 같은 방법으로 크기가 n인 새로운 수열 b<sub>1</sub>, b<sub>2</sub>, ..., b<sub>N</sub>을 만든다. \[b_i = \min_{j=1}^{n}{a_j - a_i + \sum_{j=1}^{n}{a_j}} (1 \le i \le n)\]</li>
	<li>&nbsp;수열 a를 b로 바꾼다. 즉, 모든 1 ≤ i ≤ n에 대해서, a<sub>i</sub>를 b<sub>i</sub>로 바꾼다.</li>
</ol>

<p>수열 a에 변환 연산을 총 K번 적용시켰다. 그 다음 \(q(r) = \max_{i=1}^{n}{r_i} - \min_{i=1}^{n}{r_i}\)를 계산한다. 여기서 r은 수열 a에 변환 연산을 k번 수행시킨 수열이다.</p>

<p>q(r)과 k를 알고 있을 때, 수열 c<sub>1</sub>, c<sub>2</sub>, ..., c<sub>N</sub>의 개수를 구하는 프로그램을 작성하시오. 이때, 수열 c<sub>1</sub>, c<sub>2</sub>, ..., c<sub>n</sub>은 다음과 같은 조건을 만족해야 한다.</p>

<ol>
	<li>1 ≤&nbsp;c<sub>i</sub> ≤ m (1 ≤ i ≤ n)</li>
	<li>q(d) = q(r) (d는 수열 c에 변환 연산을 k번 적용시킨 수열)</li>
</ol>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T (1 ≤ T ≤ 10000)가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있으며, 네 정수 n, m, q(r), k이 공백으로 구분되어져 있다. (1 ≤ n, m, q(r), k ≤ 1,000,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스마다 정답을 10<sup>9</sup>+7로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 1 1 1
2 2 1 1
2 3 1 1
','0
2
4
','MATH'),
                                                                                                                (2585,'BAEKJOON','https://www.acmicpc.net/problem/14848',14848,'정수 게임','2초','512 MB',13,'<p>재현이는 다음과 같은 정수 게임을 하려고 한다. 게임은 다음과 같이 이루어져 있다.</p>

<ol>
	<li>정수 N과 크기가 K인 배열 A을 정한다.</li>
	<li>1부터 N까지 정수를 모두 종이에 쓴다.</li>
	<li>배열 A의 가장 첫 수를 고르고, 그 수를 배열에서 제거한다. 고른 수를 x라고 했을 때, 종이에 적혀있는 수 중에 x의 배수를 지운다.</li>
	<li>배열이 비어있을 때 까지 3번을 반복한다.</li>
</ol>

<p>게임이 모두 완료된 이후에, 종이에 적혀있는 수의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 K가 주어진다. (1 ≤ N ≤ 1,000,000,000, 1 ≤ K ≤&nbsp;15)</p>

<p>둘째 줄에 배열 A의 내용이 순서대로 주어진다. 배열에 담겨있는 수는 100보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>게임이 모두 완료된 이후에, 종이에 적혀있는 수의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>종이에는 1, 3, 7, 9가 남아있게 된다.</p>

				</div>
				</div>','10 3
2 4 5
','4
','MATH'),
                                                                                                                (2605,'BAEKJOON','https://www.acmicpc.net/problem/14853',14853,'동전 던지기','2초','512 MB',24,'<p>구사과는 p의 확률로 앞면이 나오고, 1-p의 확률로 뒷면이 나오는 동전을 만드는 기계를 만들었다. 여기서 p는 0과 1사이의 수이다. 하지만, 이 기계에 확률 p를 설정할 수는 없다. 확률 p는 기계가 동전을 만들 때, 랜덤하게&nbsp;정해진다. 즉, p는 [0, 1] 범위에서 균등한 확률을 가진다.</p>

<p>구사과는 동전 두 개를 만들었다. 동전 1은 확률이 p이며, 동전 2는 확률이 q이다. p와 q는 모두 [0, 1] 범위에서 균등한 확률을 가지며 독립적이다. 하지만, 지금 확률 p와 q를 알 길은 없다.</p>

<p>동전 1을 n<sub>1</sub>번 던졌더니 앞 면이 m<sub>1</sub>번 나왔고, 동전 2를 n<sub>2</sub>번 던졌더니 앞 면이 m<sub>2</sub>번 나왔다. 이때, p < q일 확률을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T (1 ≤&nbsp;T ≤ 100,000)가 주어진다.</p>

<p>각 테스트 케이스는 한 줄로 이루어져 있으며, n<sub>1</sub>, m<sub>1</sub>, n<sub>2</sub>, m<sub>2</sub>가 공백으로 구분되어져 있다. (1 ≤ n<sub>1</sub>, n<sub>2</sub> ≤ 1,000, 0 ≤ m<sub>1</sub>, m<sub>2</sub> ≤ 50, 0 ≤&nbsp;m<sub>1</sub> ≤ n<sub>1</sub>, 0 ≤ m<sub>2</sub> ≤&nbsp;n<sub>2</sub>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 p < q일 확률을 출력한다. 정답과의 오차는 10<sup>-4</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
2 1 4 3
8 4 16 8
2 0 6 1
2 0 2 1
','0.7142857142
0.5000000000
0.5333333333
0.8000000000
','MATH'),
                                                                                                                (2586,'BAEKJOON','https://www.acmicpc.net/problem/14854',14854,'이항 계수 6','2초','512 MB',22,'<p>자연수 \(N\)과 정수 \(K\)가 주어졌을 때 이항 계수 \(\binom{N}{K}\)를 142857으로 나눈 나머지를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T (1 ≤ T ≤ 10<sup>5</sup>)가 주어진다.</p>

<p>각 테스트 케이스는&nbsp;한 줄로 이루어져 있으며,&nbsp;\(N\),&nbsp;\(K\)가 주어진다. (1 ≤ \(N\) ≤ 10<sup>9</sup>, 0 ≤ \(K\) ≤ \(N\))</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스 마다 한 줄에 하나씩&nbsp;\(\binom{N}{K}\)를 142857으로 나눈 나머지를&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
2 1
4 0
5 2
10 3
','2
1
10
120
','MATH'),
                                                                                                                (2587,'BAEKJOON','https://www.acmicpc.net/problem/14856',14856,'조금 똑똑한 뢰벗과 조금 잘생긴 사냐','1초','128 MB',12,'<p>*이 문제는 실제 인물과는 관련이 없습니다.*</p>

<p>옛날 먼 옛날, 사냐라는 사람이 살았습니다. 사냐라는 사람은 뢰벗이라는 친구가 있었는데, 둘은 매우 닮았지만, 뢰벗이 좀 더 똑똑하고, 사냐가 좀 더 잘생겼다고 합니다. 뢰벗은 오보워치(Ovorwatch) 라는 게임에서 500점으로 상위 100.00%였습니다. 사냐는 이러한 뢰벗을 놀리기를 좋아했습니다. 이에 열을 받은 뢰벗은, 사냐에게 자신이 오보워치 500점을 탈출한다면, 자신이 내는 문제를 평생 풀도록 하겠다는 내기를 했고, 사냐는 뢰벗이 설마 탈출하겠냐는 생각으로 수락했습니다.</p>

<p><strong>그런데 그 일이 벌어졌습니다.</strong></p>

<p>뢰벗은 오보워치 점수를 무려 600점대 까지 올렸고, 사냐는 내기 때문에 뢰벗이 내는 문제를 평생 풀어야 하게 되었습니다. 뢰벗은 사냐에게 자신이 주는 자연수를 연속하지 않은 피보나치 수들의 합으로 나타내게 시켰습니다. (피보나치 수열이란 F(1) = 1, F(2) = 2, F(n+2) = F(n+1) + F(n)으로 정의되는 수열입니다.) 멍청한 사냐는 피보나치 수열을 손으로 계산하는데, 시간이 너무 오래걸려 미칠것만 같아졌습니다. 이에 똑똑한 뢰벗은 그것도 계산 못하냐며 놀렸고, 사냐는 시무룩해졌습니다. 시무룩해진 사냐의 노동을 도와줄 프로그램을 짜봅시다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>자연수 N을 입력받는다. (N < 10<sup>18</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>자연수 N이 연속되지 않은 i<sub>1</sub> < i<sub>2</sub> < ... < i<sub>k</sub>에 대하여 F(i<sub>1</sub>) + F(i<sub>2</sub>) + ... + F(i<sub>k</sub>)로 나타내어 진다면, 첫째 줄에 k를 출력하고, 둘째 줄에 F(i<sub>1</sub>), F(i<sub>2</sub>), ... , F(i<sub>k</sub>)를 사이에 공백을 두고 출력하여라. 아니라면, 첫째 줄에 -1을 출력하여라. 만일 여러 가지 방법으로 연속하지 않은 피보나치 수들의 합으로 나타낼 수 있다면, 그 가운데 항의 수가 가장 많은 것을 출력하여라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10
','2
2 8
','MATH'),
                                                                                                                (2606,'BAEKJOON','https://www.acmicpc.net/problem/14857',14857,'모눈종이와 삼각형','2초','512 MB',17,'<p>너비가 w이고, 높이가 h인 모눈종이가 하나 있다. 모눈종이의 정수 좌표 (x, y) (0 ≤&nbsp;x ≤&nbsp;w, 0 ≤ y ≤&nbsp;h)에는 점이 찍혀져 있다. 즉, 모눈종이에는 총 (w+1)(h+1)개의 점이 있게 된다.</p>

<p>모눈종이의 점 세 개를 이어서 만들 수 있는 삼각형의 개수를 구하는 프로그램을 작성하시오.</p>

<p>삼각형은 다음과 같은 조건을 만족해야 한다.</p>

<ol>
	<li>점은 모두 정수 좌표를 가져야 한다.</li>
	<li>삼각형의 넓이는 양의 정수이어야 한다.</li>
</ol>

<p>삼각형 점의 순서가 다르면 다른 삼각형으로 센다. 예를 들어, (0, 0), (0, 2), (2, 2)로 만든 삼각형과 (0, 2), (0, 0), (2, 2)로 만든 삼각형은 다른 삼각형이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 w, h (1 ≤ w, h ≤ 4000)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제의 조건을 지키면서 만들 수 있는 삼각형의 개수를 10<sup>9</sup>+7로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 1
','36
','MATH'),
                                                                                                                (2608,'BAEKJOON','https://www.acmicpc.net/problem/14858',14858,'GCD 테이블과 연속 부분 수열','2초','512 MB',22,'<p>크기가 n×m인 행렬 G가 있다. G[i][j]에는 i와 j의 최대공약수가 저장되어져 있다. (1 ≤ i ≤ n, 1&nbsp;≤ j ≤&nbsp;m)</p>

<p>크기가 k인 수열 a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>k</sub>가 주어졌을 때, G에 이 수열이 연속 부분 수열로 등장하는지 안하는지 구하는 프로그램을 작성하시오. 즉, 모든 1 ≤ l ≤ k에 대해서, G[i][j+l-1] = a<sub>l</sub>인 1 ≤ i ≤ n, 1 ≤ j ≤ m-k+1가 존재하는지 아닌지를 구해야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n, m, k (1 ≤ n, m ≤ 10<sup>12</sup>, 1 ≤ k ≤&nbsp;10000)가 주어진다.</p>

<p>둘째 줄에는 a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>k</sub> (1 ≤ a<sub>i</sub> ≤&nbsp;10<sup>12</sup>)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>G에 주어진 수열이 연속 부분 수열로 등장하면 YES를, 아니면 NO를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1의 경우에 G[10][5]부터 G[10][9]까지가 일치한다.</p>

				</div>
				</div>','100 100 5
5 2 1 2 1
','YES
','MATH'),
                                                                                                                (2588,'BAEKJOON','https://www.acmicpc.net/problem/14859',14859,'세 쌍 서로소','2초','512 MB',19,'<p>크기가 n인 수열 a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>이 주어졌을 때, 1 ≤ i < j < k ≤ n 이면서, GCD(a<sub>i</sub>, a<sub>j</sub>, a<sub>k</sub>) = 1인 세 쌍 (i, j, k)의 개수를 구하는 프로그램을 작성하시오. 여기서 GCD는 최대공약수를 의미한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n (1 ≤ n ≤ 10<sup>5</sup>)이, 둘째 줄에 a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub> (1 ≤ a<sub>i</sub> ≤ 10<sup>6</sup>)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제의 조건에 맞는 쌍의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 2 3 4
','4
','MATH'),
                                                                                                                (2612,'BAEKJOON','https://www.acmicpc.net/problem/14860',14860,'GCD 곱','5초','512 MB',17,'<p>N과 M 이 주어졌을 때, GCD(1, 1)&nbsp;× GCD(1, 2)&nbsp;× ...&nbsp;× GCD(1, M)&nbsp;× GCD(2, 1)&nbsp;× GCD(2, 2)&nbsp;× ...&nbsp;× GCD(2, M) × ... × GCD(N, 1)&nbsp;× GCD(N, 2)&nbsp;× ...&nbsp;× GCD(N, M)을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 M이 주어진다. (1 ≤ N, M ≤&nbsp;15,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 곱을 10<sup>9</sup>+7로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 4
','96
','MATH'),
                                                                                                                (2611,'BAEKJOON','https://www.acmicpc.net/problem/14861',14861,'LCM 더하기','2초','512 MB',22,'<p>n, m이 주어졌을 때, 아래 두 조건을 만족하는 양의 정수 x, y의 최소공배수의 합을 구하는 프로그램을 작성하시오.</p>

<ol>
	<li>1 ≤&nbsp;x ≤&nbsp;n, 1 ≤&nbsp;y ≤ m</li>
	<li>x와 y가&nbsp;동시에 나누어 떨어지는&nbsp;z<sup>2</sup> (z > 1)가 존재하지 않아야 한다</li>
</ol>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T (1 ≤ T ≤ 200)가 주어진다. 다음 T개의 줄에는 두 정수 n과 m (1 ≤ n, m ≤ 4,000,000)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스마다 정답을 2<sup>30</sup>으로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
2 4
3 3
6 5
8 3
','24
28
233
178
','MATH'),
                                                                                                                (2589,'BAEKJOON','https://www.acmicpc.net/problem/14862',14862,'최대공약수 기댓값','2초','512 MB',21,'<p>크기가 K인 두 수열 A와 B가 주어진다. 수열 X는 A와 B를 이용해서 만들 수 있으며, X<sub>i</sub>는 A<sub>i</sub>보다 크거나 같고, B<sub>i</sub>보다 작거나 같은 정수 중에서 랜덤하게 고른다.&nbsp;</p>

<p>수열 A와 B가 주어졌을 때, GCD(X<sub>0</sub>, X<sub>1</sub>, ..., X<sub>K-1</sub>)의 기댓값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T (1 ≤&nbsp;T ≤&nbsp;50)가 주어진다.</p>

<p>각 테스트 케이스의 첫째 줄에는 K (2 ≤ K ≤&nbsp;5)가 주어진다. 다음 K개의 줄에는 A<sub>i</sub>와 B<sub>i</sub>가 한 줄에 하나씩 주어진다. (1 ≤ A<sub>i</sub> ≤ B<sub>i</sub> ≤ 200000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>문제의 정답이 P/Q인 경우에, 10<sup>9</sup>+7로 나누어 떨어지는 P+Q×N을 찾고, 그 때 N (0 ≤ N ≤ 10<sup>9</sup>+6)을 첫째 줄에 출력한다. 만약, N이 존재하지 않으면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
2
2 4
3 5
3
1 2
1 2
1 2
3
1 12
1 12
1 12
2
2700 2701
2612 2724
','333333334
875000005
722222226
314159265
','MATH'),
                                                                                                                (2609,'BAEKJOON','https://www.acmicpc.net/problem/14864',14864,'줄서기','2초','512 MB',14,'<p>N 명의 학생들이 앞뒤로 일렬로 서 있다. 각 학생은 1부터 N까지 서로 다른 번호가 적힌 카드들 중 하나를 가지고 있다. 학생들에게서 자신보다 뒤에 서있으면서 더 작은 번호의 카드를 가진 학생들의 명단을 하나도 빠짐없이 모두 받았다. 이 명단을 통해 학생들이 가지고 있는 카드의 번호를 알아내려고 한다.</p>

<p>예를 들어, 일렬로 서 있는 5명의 학생들을 앞에서부터 순서대로 “학생1, 학생2, 학생3, 학생4, 학생5”라고 하고, 학생들에게 받은 명단을 통해 다음과 같이 5개의 순서쌍이 만들어졌다고 하자. 순서쌍 (X,Y)는 학생Y 가 학생X 보다 뒤에 있으면서 더 작은 번호를 가지고 있다는 것을 의미한다.</p>

<p style="text-align:center">(1,2), (1,5), (3,4), (3,5), (4,5)</p>

<p>이 자료를 분석하면 학생1, 학생2, 학생3, 학생4, 학생5는 각각 3, 1, 5, 4, 2가 적힌 카드를 가지고 있음을 알 수 있다.</p>

<p>다른 예로 5명 학생들에게 받은 명단으로 다음과 같은 6개의 순서쌍이 만들어 졌다고 하자.</p>

<p style="text-align:center">(1,2), (1,3), (1,5), (2,5), (3,4), (3,5)</p>

<p>이 경우, 학생들이 잘못된 명단을 제시한 것이다. 순서쌍 (2,5)에 의하면 학생2는 학생5보다 큰 번호의 카드를 가지고 있다. 그런데 만일 학생4의 카드가 학생5의 카드보다 작은 번호라면 순서쌍 (2,4)가 존재해야 하고, 반대로 학생4의 카드가 학생5의 카드보다 큰 번호라면 순서쌍 (4,5)가 존재해야 한다. 그런데 둘 다 존재하지 않기 때문에 학생들이 잘못된 명단을 제시한 것이다.</p>

<p>학생들로부터 받은 명단으로 만들어진 순서쌍을 입력으로 받아, 학생들이 가지고 있는 카드 번호를 알아내는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>표준 입력으로 다음 정보가 주어진다. 첫 번째 줄에는 학생 수 N (1 ≤ N ≤ 100,000)과 순서쌍의 수 M (0 ≤ M ≤ 1,000,000)이 공백으로 분리되어 주어진다. 일렬로 서 있는 학생들을 순서대로 학생1, 학생2, ... , 학생N 이라고 하자. 다음 M개의 각 줄에는 두 개의 자연수 X와 Y가 공백으로 분리되어 주어진다. 이것은 학생Y가 학생X 보다 더 작은 번호가 적힌 카드를 가지고 있다는 것을 의미하는 순서쌍이다 (1 ≤ X < Y ≤ N). 입력에 중복된 순서쌍은 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>표준 출력으로, 주어진 순서쌍을 통해 학생들이 가지고 있는 카드 번호를 알 수 있으면 학생들이 서 있는 순서대로 카드번호를 공백으로 분리하여 출력한다. 그렇지 않으면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 5
1 2
1 5
3 4
3 5
4 5
','3 1 5 4 2
','MATH'),
                                                                                                                (2610,'BAEKJOON','https://www.acmicpc.net/problem/14877',14877,'순열 교환','2초','512 MB',22,'<p>1부터 n까지의 수로 이루어진 크기가 n인 순열이 있다. 이 순열은 1부터 n까지의 수가 한 번씩 등장한다. 오늘은 이 순열에서 교환 연산을 총 k (1 ≤ k < n)번 하려고 한다. 교환 연산은 서로 다른 위치에 있는 두 수를 바꾸는 것이다.</p>

<p>어떤 순열 A가 주어졌을 때, 교환 연산을 k번 사용해서 A를 만드는 서로 다른 순열의 개수를 구하는 프로그램을 작성하시오. 이때, k는 1부터 n-1까지 모든 정수에 대해서 구해야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n(2 ≤ n ≤ 10<sup>5</sup>)이 주어진다. 둘째 줄에는 순열 A가 주어지며, 각각의 정수는 공백으로 구분되어져 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>총 n-1개의 수를 출력한다. i번째 정수는 교환을 i번해서 순열 A를 만들 수 있는 서로 다른 순열의 개수를 10<sup>9</sup>+7로 나눈 나머지이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>(1, 3, 2), (2, 1, 3), (3, 2, 1)에서 교환을 1번 사용해서 (3, 1, 2)를 만들 수 있다.</p>

<p>(3, 1, 2), (2, 3, 1), (1, 2, 3)에서 교환을 2번 사용해서 (3, 1, 2)를 만들 수 있다.</p>

				</div>
				</div>','3
3 1 2
','3 3
','MATH'),
                                                                                                                (2613,'BAEKJOON','https://www.acmicpc.net/problem/14878',14878,'부분 수열 XOR합','2초','512 MB',22,'<p>총 n개의 수로 이루어진 수열 A = a<sub>0</sub>, a<sub>1</sub>, ..., a<sub>n-1</sub>가 있다. 수열의 부분 수열은 다음과 같이 정의할 수 있다.</p>

<p>0 ≤ i ≤ j < n이면서, a<sub>i</sub>, a<sub>i+1</sub>, ..., a<sub>j-1</sub>, a<sub>j</sub></p>

<p>예를 들어, n = 3인 경우 아래와 같은 6개의 부분 수열이 존재한다.</p>

<ol>
	<li>a<sub>0</sub></li>
	<li>a<sub>1</sub></li>
	<li>a<sub>2</sub></li>
	<li>a<sub>0</sub>, a<sub>1</sub></li>
	<li>a<sub>1</sub>, a<sub>2</sub></li>
	<li>a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub></li>
</ol>

<p>크기가 n인 수열 A가 주어졌을 때, 모든 부분 수열에 대해서 XOR 합을 구한다. XOR 합이란 수열에 포함되어있는 모든 수를 XOR한 것이다. 부분 수열은 총 n(n+1)/2개가 존재하기 때문에, XOR 합도 n(n+1)/2개가 존재하게 된다. 그 다음, 가장 많이 나오는 XOR 합이 몇 번 나오는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 수열 A의 크기 n(1 ≤ n ≤ 10<sup>5</sup>)이 주어진다. 둘째 줄에는 a<sub>0</sub>, a<sub>1</sub>, ..., a<sub>n-1</sub>이 주어진다. (1 ≤ a<sub>i</sub> < 2<sup>16</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 두 정수를 공백으로 구분해 출력한다. 첫 번째 정수는 XOR 합으로 가장 많이 등장한 정수이고, 두 번째 정수는 그 정수의 등장한 횟수이다. 만약, 가장 많이 등장한 정수가 여러 가지라면, 가장 작은 것을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
2 1 1 3
','1 3
','MATH'),
                                                                                                                (2592,'BAEKJOON','https://www.acmicpc.net/problem/14881',14881,'물통 문제','2초','512 MB',12,'<p>용량이 a, b 리터인 두 물통이 있다. 이때, 물을 적절히 부어서 정확하게 c리터를 만들 수 있는지 아닌지 구하는 프로그램을 작성하시오. 물은 무한히 많다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T(1 ≤&nbsp;T ≤ 10,000)가 주어진다.</p>

<p>둘째 줄부터 T개의 줄에는 테스트 케이스가 한 줄에 하나씩 주어진다. 각 테스트 케이스는 3개의 정수 a, b, c로 이루어져 있다. (1 ≤ a, b, c ≤&nbsp;10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스에 대해서, 정확하게 c리터를 만들 수 있으면 "YES", 없으면 "NO"를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 테스트 케이스의 경우에 다음과 같은 방법으로 4리터를 만들 수 있다.</p>

<ul>
	<li>a를 채운다. (a = 5, b = 0)</li>
	<li>a의 물을 b로 붓는다. (a = 2, b = 3)</li>
	<li>b에 들어있는 물을 버리고, a에 들어있는 물을 b로 붓는다. (a = 0, b = 2)</li>
	<li>a를 채운다. (a = 5, b = 2)</li>
	<li>a의 물을 b로 붓는다. (a = 4, b = 3)</li>
</ul>

				</div>
				</div>','2
5 3 4
3 6 4
','YES
NO
','MATH'),
                                                                                                                (2593,'BAEKJOON','https://www.acmicpc.net/problem/14882',14882,'다항식과 쿼리','10초','512 MB',22,'<p>차수가 N이고 계수가 정수인 다항식 f(x) = a<sub>0</sub> + a<sub>1</sub>x + a<sub>2</sub>x<sup>2</sup> + ... + a<sub>N</sub>x<sup>N</sup>이 주어진다.</p>

<p>K개의 정수 x<sub>1</sub>, x<sub>2</sub>, ..., x<sub>K</sub>가 주어졌을 때, f(x<sub>1</sub>), f(x<sub>2</sub>), ..., f(x<sub>K</sub>)를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 다항식의 차수 N(0 ≤ N ≤ 250,000)이 주어진다.</p>

<p>둘째 줄에는 N+1개의 정수가 주어진다. i번째 정수는 다항식의 계수 a<sub>i-1</sub>이다. (0 ≤ a<sub>i</sub> < 786,433)</p>

<p>셋째 줄에는 정수의 개수 K가 주어진다. (1&nbsp;≤ K ≤ 250,000)</p>

<p>넷째 줄에는 x<sub>1</sub>, x<sub>2</sub>, ..., x<sub>K</sub>가 주어진다. (0 ≤ x<sub>j</sub> < 786,433)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>총 K개의 줄을 출력한다. i번째 줄에는 f(x<sub>i</sub>)의 값을 786433로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1 2 3
3
7 8 9
','162
209
262
','MATH'),
                                                                                                                (2616,'BAEKJOON','https://www.acmicpc.net/problem/14886',14886,'직사각형 색칠','2초','512 MB',19,'<p>1×1크기의 칸으로 나누어져 있는 N×M크기의 그리드가 있다. 각각의 칸을 검정색이나 흰색으로 색칠하려고 한다. 이때, X×Y 크기의 직사각형이 모두 같은 칸으로 색칠되지 않아야 한다.</p>

<p>그리드를 색칠하는 방법의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, M, X, Y가 주어진다. (1 ≤ X ≤ 3, 2 ≤&nbsp;Y ≤&nbsp;M)</p>

<p>N과 M제한은 X값에 따라서 아래와 같이 달라진다.</p>

<ul>
	<li>X = 1인 경우: 2&nbsp;≤ N ≤ 1,000,000, 2&nbsp;≤ M ≤ 1,000</li>
	<li>X = 2인 경우: 2&nbsp;≤ N ≤ 1,000,000, 2&nbsp;≤&nbsp;M ≤ 7</li>
	<li>X = 3인 경우: 3&nbsp;≤ N ≤ 8, 2&nbsp;≤&nbsp;M ≤&nbsp;5</li>
</ul>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 경우의 수를&nbsp;1000000007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 2 1 2
','4
','MATH'),
                                                                                                                (2617,'BAEKJOON','https://www.acmicpc.net/problem/14887',14887,'짝수 부분 문자열','2초','512 MB',22,'<p>a부터 t까지의 알파벳으로만 이루어져 있는 문자열 S가 있다. 이때, 다음 쿼리를 수행하는 프로그램을 작성하시오.</p>

<ul>
	<li><code>k c<sub>1</sub> c<sub>2</sub>, ..., c<sub>k</sub></code>: s의 연속 부분 문자열 중에서, 알파벳 k개 c<sub>1</sub>, c<sub>2</sub>, ..., c<sub>k</sub>의 등장 횟수가 짝수인 부분 문자열의 개수를 출력</li>
</ul>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T(1 ≤ T ≤ 5)가 주어진다.&nbsp;</p>

<p>각 테스트 케이스의 첫째 줄에는 문자열 S가 주어진다. S의 길이는 100,000을 넘지 않으며, a부터 t까지의 알파벳으로만 이루어져 있다. 둘째 줄에는 쿼리의 개수 Q(1 ≤ Q ≤ 30,000)가 주어진다.</p>

<p>다음 Q개의 줄에는 쿼리가 한 줄에 하나씩 주어진다. 쿼리는 <code>k c<sub>1</sub> c<sub>2</sub> ... c<sub>k</sub></code>와 같은 형식이다. 여기서 k는 5보다 작거나 같은 자연수이고, c<sub>1</sub>, c<sub>2</sub>, ..., c<sub>k</sub>는 쿼리에 포함된 알파벳이다. 같은 알파벳이 여러 번 주어지는 경우는 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 쿼리마다 정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
cacca
5
3 c a b
2 c b
2 a b
3 c b a
2 a b
','2
7
6
2
6
','MATH'),
                                                                                                                (2619,'BAEKJOON','https://www.acmicpc.net/problem/14901',14901,'좋은 경로의 세 쌍','2초','512 MB',24,'<p>N개의 노드로 이루어진 트리가 주어진다. M을 단순 경로의 개수라고 했을 때, M = N(N-1)/2 이다.</p>

<p>단순 경로의 순서 없는 세 쌍은 총 M(M-1)(M-2)/6개가 있다. 좋은 경로의 세 쌍이란, 경로의 세 쌍 (A, B, C) 중에서 아래와 같은 조건 중 적어도 하나를 만족하는 세 쌍을 의미한다.</p>

<ul>
	<li>세 경로 A, B, C가 모두 서로 다른 노드로 이루어져 있다.</li>
	<li>세 쌍이 모두 교차한다. 즉, 경로 A, B가 적어도 한 정점을 공유하고, A, C도 적어도 한 정점을, B, C도 적어도 한 정점을 공유한다.</li>
</ul>

<p>트리가 주어졌을 때, 좋은 경로의 세 쌍의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(4&nbsp;≤ N ≤ 300,000)이 주어진다.</p>

<p>둘째 줄부터 N-1개의 줄에 트리의 간선을 나타내는 두 정점이 주어진다. 정점 번호는 1번부터 시작한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>좋은 경로의 세 쌍의 개수를 10<sup>9</sup>+7로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1의 경우 아래와 같은 세 쌍이 좋은 경로의 세 쌍이다.</p>

<ul>
	<li>(1, 2), (1, 3), (1, 4)</li>
	<li>(1, 2), (1, 3), (2, 3)</li>
	<li>(1, 2), (1, 3), (2, 4)</li>
	<li>(1, 2), (1, 4), (2, 3)</li>
	<li>(1, 2), (1, 4), (2, 4)</li>
	<li>(1, 2), (2, 3), (2, 4)</li>
	<li>(1, 3), (1, 4), (2, 3)</li>
	<li>(1, 3), (1, 4), (2, 4)</li>
	<li>(1, 3), (1, 4), (3, 4)</li>
	<li>(1, 3), (2, 3), (2, 4)</li>
	<li>(1, 3), (2, 3), (3, 4)</li>
	<li>(1, 3), (2, 4), (3, 4)</li>
	<li>(1, 4), (2, 3), (2, 4)</li>
	<li>(1, 4), (2, 3), (3, 4)</li>
	<li>(1, 4), (2, 4), (3, 4)</li>
	<li>(2, 3), (2, 4), (3, 4)</li>
</ul>

				</div>
				</div>','4
1 2
2 3
3 4
','16
','MATH'),
                                                                                                                (2620,'BAEKJOON','https://www.acmicpc.net/problem/14905',14905,'소수 4개의 합','2초','512 MB',13,'<p>모든 자연수를 4개의 소수의 합으로 나타낼 수 있을까? 이 물음에 대한 답은 8 이상의 모든 자연수에 대해 그렇다이지만, 데이빗은 그 사실을 알지 못했다. 데이빗은 프로그램을 돌려 4개의 소수의 합으로 표현할 수 없는 수를 찾아내 보기로 했다. 소수는 "두 개의 다른 자연수로만 나눠 떨어지는 자연수"이다. 예를 들어, 37은 37과 1로만 나눠 떨어지므로 소수이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력 파일에는 한 줄에 하나씩 1 이상 100,000,000 이하의 자연수가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력 라인에 맞춰, 주어진 조건에 맞는 4개의 소수를 한 줄에 출력한다. 입력된 수가 소수 4개의 합으로 표현될 수 없으면 “Impossible.”이라 출력한다. 답은 여러 개가 있을 수 있다. 하지만 더해서 입력된 수가 나오는 소수 4개라면 모두 정답이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','24
36
46
','3 11 3 7
3 7 13 13
11 11 17 7
','MATH'),
                                                                                                                (2597,'BAEKJOON','https://www.acmicpc.net/problem/14912',14912,'숫자 빈도수','2초','512 MB',6,'<p>1부터 n까지 차례대로 써 내려갈 때 특정 숫자(digit)의 빈도수를 구하여 출력하는 프로그램을 작성하시오.</p>

<p>예를 들어, n = 11 이고 숫자 1의 빈도수를 구하라고 하면, 1 2 3 4 5 6 7 8 9 10 11 에서 숫자 1은 1에서 한 번, 10에서 한 번, 11에서 두 번 나타나므로 1의 빈도수는 총 4 이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>자연수 n (1 ≤ n ≤ 100,000)과 한 자리 숫자 d(0~9)가 첫째 줄에 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 빈도수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','11 1
','4
','MATH'),
                                                                                                                (2598,'BAEKJOON','https://www.acmicpc.net/problem/14913',14913,'등차수열에서 항 번호 찾기','2초','512 MB',3,'<p>등차수열이란 다음과 같이 연속하는 두 수의 차이가 일정한 수열을 뜻한다.</p>

<ul>
	<li>1, 3, 5, 7, 9, ..., 2n-1</li>
	<li>2, 4, 6, 8, 10, ..., 2n</li>
	<li>1, 5, 9, 13, 17, ..., 4n-3</li>
	<li>-1, -3, -5, -7, -9, ..., -2n+1</li>
	<li>a, a+d, a+2d, a+3d, ,,,. a+(n-1)d</li>
</ul>

<p>등차수열에서 인접한 두 수의 차이를 공차라고 한다.</p>

<p>첫 항 a와 공차 d로 만든 등차수열에서 주어진 k가&nbsp;몇 번째 항인지 찾아서 출력하는 프로그램을 작성하시오</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 나란히 세 정수가 주어진다.</p>

<ul>
	<li>첫째 수: 첫 항 a (-1,000 < a < 1,000)</li>
	<li>둘째 수: 공차 d (-1,000 < d < 1,000, d ≠ 0)</li>
	<li>셋째 수: 찾는 수 k&nbsp;(-1,000,000 < k&nbsp;< 1,000,000)</li>
</ul>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>k가 몇 번째 항인지 출력한다. 만약, k가&nbsp;주어진 a와 d로 만들어진 등차수열의 수가 아니면 "X"를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 2 9
','5
','MATH'),
                                                                                                                (2630,'BAEKJOON','https://www.acmicpc.net/problem/14914',14914,'사과와 바나나 나눠주기','2초','512 MB',4,'<p>아름이는 친구들과 사과와 바나나를 많이 가지고 있지만, 과일을 좋아하지 않아서 자신의 분량을 남겨두지 않고 친구들에게 모두 나누어 준다. 아름이는 항상 공평하게 사과와 바나나를 나누어 주며, 절대 잘라서 주지 않는다.</p>

<p>예를 들어, 사과 8개와 바나나 4개를 가지고 있다면, 공평하게 나누어 주는 방법은 다음과 같이 3가지 경우 밖에 없다.</p>

<ul>
	<li>한 친구가 사과 8개와 바나나 4개를 모두 받는다.</li>
	<li>두 친구가 각각 사과 4개와 바나나 2개씩을 받는다.</li>
	<li>네 친구가 각각 사과 2개와 바나나 1개씩을 받는다.</li>
</ul>

<p>아름이가 나누어 줄 수 있는 모든 경우를 출력하는 함수를 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 사과의 개수 a와 바나나의 개수 b가 주어진다. (1 ≤ a, b ≤ 1,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>아름이가 나누어 줄 수 있는 경우를 모두 출력해야 하며, 각 경우마다 친구의 수, 사과 개수, 바나나 개수 차례로 한 줄에 각각 빈칸으로 구분하여 출력한다. 각 경우마다 중복없이 한 번만 출력되어야 하며, 경우의 순서는 친구의 수가 증가하는 순으로 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 8
','1 4 8
2 2 4
4 1 2
','MATH'),
                                                                                                                (2709,'BAEKJOON','https://www.acmicpc.net/problem/14915',14915,'진수 변환기','2초','512 MB',4,'<p>정수 m, n을 입력 받아, 10진수 m을 n진수로 바꾸어 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에서 정수&nbsp;m, n을 입력 받는다. (0 ≤ m ≤ 1,000,000, 2 ≤&nbsp;n ≤ 16)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>변환한 n진수의 수를 출력한다. 11~16 진수의 경우 10 이상의 수는 A~F 문자를 사용한다. 예를 들어, 10은 A, 11은 B, 12는 C, 13은 D, 14는 E, 15는 F를 사용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8 2
','1000
','MATH'),
                                                                                                                (2767,'BAEKJOON','https://www.acmicpc.net/problem/14916',14916,'거스름돈','2초','512 MB',6,'<p>춘향이는 편의점 카운터에서 일한다.</p>

<p>손님이 2원짜리와 5원짜리로만 거스름돈을 달라고 한다. 2원짜리 동전과 5원짜리 동전은 무한정 많이 가지고 있다. 동전의 개수가 최소가 되도록 거슬러 주어야 한다. 거스름돈이 n인 경우, 최소 동전의 개수가 몇 개인지 알려주는 프로그램을 작성하시오.</p>

<p>예를 들어, 거스름돈이 15원이면 5원짜리 3개를, 거스름돈이 14원이면 5원짜리 2개와 2원짜리 2개로 총 4개를, 거스름돈이 13원이면 5원짜리 1개와 2원짜리 4개로 총 5개를 주어야 동전의 개수가 최소가 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 거스름돈 액수 n(1 ≤&nbsp;n ≤ 100,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>거스름돈 동전의 최소 개수를 출력한다. 만약 거슬러 줄 수 없으면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','13
','5
','MATH'),
                                                                                                                (2745,'BAEKJOON','https://www.acmicpc.net/problem/14918',14918,'더하기','1초','512 MB',0,'<p>두 개의 정수 입력 a, b를 받아서 a+b를 출력하시오.</p>

<p>C 입출력 예제</p>

<pre>#include <stdio.h>
…
scanf(“%d%d”, &amp;a, &amp;b);
printf(“%d\n”, a+b);</pre>

<p>C++ 입출력 예제</p>

<pre>#include <iostream>
…
cin >> a >> b;
cout << a+b << endl;</pre>

<p>JAVA 입출력 예제</p>

<pre>import java.util.Scanner;
Scanner sc = new Scanner(System.in);
a = sc.nextInt();
b = sc.nextInt();
System.out.println((a+b));</pre>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>a b; a와 b는 -100,000과 100,000 사이의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>a+b</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 2
','3
','MATH'),
                                                                                                                (2746,'BAEKJOON','https://www.acmicpc.net/problem/14919',14919,'분포표 만들기','1초','512 MB',8,'<p>0과 1사이의 실수 a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>N</sub>이 입력으로 주어졌다고 하자.&nbsp; 구간 [0,1)을 다음과 같이 m개의 길이 L=1/m인 부분구간으로 나누자. 각 구간은 순서대로 b<sub>1</sub>, b<sub>2</sub>, ..., b<sub>m</sub>이다.</p>

<ul>
	<li>b<sub>1</sub>: 0 ≤ x < L,</li>
	<li>b<sub>2</sub>: L ≤&nbsp;x < 2L,</li>
	<li>...</li>
	<li>b<sub>m</sub>: (m-1)L ≤&nbsp;x < 1.</li>
</ul>

<p>입력된 실수중, 각 구간&nbsp;b<sub>1</sub>, b<sub>2</sub>, ..., b<sub>m</sub>에 포함되는 수의 개수를&nbsp;출력하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫줄에 m (1 ≤ m ≤ 1,000), 둘째 줄에 N (1 ≤ N ≤ 1,000,000)개의 실수 a<sub>1</sub>, …, a<sub>N</sub>이 빈칸으로 구분되어 입력된다. 실수는 소수점 여섯째 자리까지 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 구간 b<sub>1</sub>, b<sub>2</sub>, ..., b<sub>m</sub>에 포함된 수를&nbsp;빈 칸으로 구분해&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.7 0.7 0.8 0.9
','1 2 2 4 2
','MATH'),
                                                                                                                (2748,'BAEKJOON','https://www.acmicpc.net/problem/14920',14920,'3n+1 수열','1초','512 MB',3,'<p>다음의 점화식에 의해 정해지는 수열 C(n)을 생각하자:</p>

<pre>     C(n+1) = C(n)/2     (C(n)이 짝수일 때)
            = 3*C(n)+1   (C(n)이 홀수일 때)
</pre>

<p>초항 C(1)이 자연수로 주어지면, 이 점화식은 자연수로 이루어지는 수열을 정한다.&nbsp; 예를 들어, C(1)=26이면, 다음의 수열이 된다.</p>

<p>26, 13, 40, 20, 10, 5, 16, 8, 4, 2, 1, 4, 2, 1, 4, 2, 1, ...</p>

<p>이 경우, 수열의 뒷부분은 4, 2, 1 이 끝없이 반복된다.&nbsp;실제로 C(1)이 5×2<sup>60</sup>보다 작은 자연수인 모든 수열은 언젠가는 4, 2, 1로 끝나게 된다는 것이 알려져 있다.</p>

<p>주어진 입력 C(1)에 대하여 C(n)이 처음으로 1이 되는 n을 출력하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>C(1); 1 ≤ C(1) ≤ 100000</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>C(n)이 처음으로 1이 되는 n</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','26
','11
','MATH'),
                                                                                                                (2749,'BAEKJOON','https://www.acmicpc.net/problem/14922',14922,'부분평균','1초','512 MB',12,'<p>A를 길이 N인 양의 정수로 구성된 배열이라고 하자.(N>2) 정수 P, Q(0<=P<Q<N) 에 대해서 A의 부분평균 A(P, Q)를 다음과 같이 정의하자.</p>

<p>\[\frac{\sum_{i=P}^{Q}{A[i]}}{Q-P+1}\]</p>

<p>예를 들어 주어진 배열 A의 길이가 3이고</p>

<p>A[0]=3, A[1]=1, A[2]=2</p>

<p>라고 하면 A의 가능한 모든 부분평균은 다음과 같다.</p>

<p>A(0,1) = (3+1)/2 = 2</p>

<p>A(0,2) = (3+1+2)/3=2</p>

<p>A(1,2) = (1+2)/2=1.5</p>

<p>위와 같은 경우, 모든 부분평균 중&nbsp; 최솟값은 A(1,2)=1.5이다. 그렇다면 주어진 조건을 만족하는 임의의 배열 A가 주어지면 A의 부분평균 중 최솟값을 가지는 것을 A(u,v) 라고 할 때, u를 출력하는 프로그램을 작성하라. (답이 여러 개일 경우 가장 작은 u의 값을 출력한다.)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<pre>N

A[0], A[1], ..., A[N-1]</pre>

<p>2 ≤ N ≤ 1,000,000, 0 ≤ A[i]&nbsp;≤ 7×10<sup>8</sup></p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<pre>u</pre>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>P+1<Q 라면 P<K<Q 인 정수 K가 존재하여</p>

<p>\[\frac{\sum_{i=P}^{K}{A[i]}}{K-P+1} \le \frac{\sum_{i=P}^{Q}{A[i]}}{Q-P+1} \le \frac{\sum_{i=K+1}^{Q}{A[i]}}{Q-K}\]</p>

<p>혹은</p>

<p>\[\frac{\sum_{i=K+1}^{Q}{A[i]}}{Q-K} \le \frac{\sum_{i=P}^{Q}{A[i]}}{Q-P+1} \le \frac{\sum_{i=P}^{K}{A[i]}}{K-P+1}\]</p>

<p>이다.</p>

				</div>
				</div>','3
3 1 2
','1
','MATH'),
                                                                                                                (2771,'BAEKJOON','https://www.acmicpc.net/problem/14924',14924,'폰 노이만과 파리','1초','512 MB',2,'<p>역사상 최고의 천재중 하나인 폰 노이만에게는 다음과 같은 재밌는 일화가 있다.</p>

<p><em>그의 동료는 어느 날 폰 노이만의 천재성을 시험해보기 위해서 다음과 같은 질문을 던졌다. </em></p>

<p><em>“200마일 길이의 철로의 양쪽 끝에 서 있는 두 대의 기차가 시속 50마일의 속도로 서로를 향해 출발했습니다. 이때부터 두 기차가 서로 충돌할 때까지 파리가 시속 75마일의 속도로 두 기차사이를 왔다 갔다 했습니다. 파리가 이동한 거리는 모두 몇 마일일까요?”</em></p>

<p><em>폰 노이만은 문제를 듣고 1초의 지체도 없이 150마일이라고 답했다. 그의 동료는 크게 실망하며 말했다.</em></p>

<p><em>“역시 당신은 똑똑하군요. 보통 사람들은 이 문제를 무한급수를 이용해서 풀려고 하지만 그렇게 하면 매우 긴 시간이 걸리죠. 하지만 간단한 논리를 사용하면 순식간에 파리가 이동한 거리를 구할 수 있습니다. 당신도 그 논리를 이용한 것이죠?”</em></p>

<p><em>그러자 폰 노이만은 이렇게 답했다.</em></p>

<p><em>“아니요, 무한급수로 풀었는데요?”</em></p>

<p>이 문제를 무한급수를 통해 푸는 방법은 다음과 같다. &nbsp;수직선 위에 기차 A, B가 있다고 하자. &nbsp;파리와 같이 출발하는 기차를 A라 하고, 그 위치를 기준점으로 하면 기차 B는 기준점에서 200마일 만큼 떨어진 지점에 있다. 이때 시간 t에서 파리의 위치는 75t 이고 기차 B의 위치는 200 ? 50t 이다. 이를 이용하면 파리와 기차 B가 처음 만나는 위치는 기준점에서 120마일 떨어진 지점임을 알 수 있다. &nbsp;120마일은 파리의 첫 이동거리 이고 이를 a<sub>1</sub>이라고 하자. &nbsp;한편 이때 기차 A는 80마일 떨어진 지점에 위치한다 (기차 A의 속도는 파리의 속도의 2/3 이므로). &nbsp;그러므로 기차 A와 B의 사이가 40마일로 줄어들었고, 같은 식으로 파리의 두 번째 이동거리 a<sub>2</sub>는 (1/5)a<sub>1</sub>임을 알 수 있다. &nbsp;이와 같이 생각하면, a<sub>i+1</sub>은 (1/5)<sup>i</sup>a<sub>1</sub>이고, 파리의 총 이동거리는 Σ(1/5)<sup>i</sup>a<sub>1</sub> = 150 즉 150마일임을 알 수 있다.</p>

<p>이 문제를 푸는 “간단한 논리”는 다음과 같다.&nbsp; 두 기차는 200/(50*2) = 2 시간 후에 만난다.&nbsp; 파리는 2시간동안 시간당 75마일의 속도로 이동하므로 2*75 = 150 마일을 이동한다.</p>

<p>우리는 위에서 제시한 문제를 풀 수 있는 프로그램을 만들고 싶다. 하지만 우리의 컴퓨터는 안타깝게도 폰 노이만의 두뇌보다 성능이 좋지 못하기 때문에 무한급수를 이용하여 프로그램을 만들 수는 없다. &nbsp;위에서 말한 “간단한 논리”를 이용하여 기차의 속도 S,&nbsp; 파리의 속도 T, 그리고 처음 두 기차 사이의 거리 D가 주어졌을 때 두 기차가 만날 때까지 파리의 이동거리 F를 계산하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<pre>S T D </pre>

<ul>
	<li>각각 10,000보다 작거나 같은&nbsp;양의 정수, T>S, D는 2*S의 배수</li>
</ul>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<pre>F</pre>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','50 75 200
','150
','MATH'),
                                                                                                                (2772,'BAEKJOON','https://www.acmicpc.net/problem/14928',14928,'큰 수 (BIG)','2초','512 MB',1,'<p>제연이는 그의 생일(2000년 3월 3일)을 기념해 자신이 가장 좋아하는 수를 20000303으로 나눈 나머지를 구해 그 수만큼 잠을 자기로 했다. 제연이가 얼마나 잠을 잘 수 있을지 구하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 제연이가 가장 좋아하는 수&nbsp;N이 주어진다. (N ≤ 10<sup>1,000,000</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>N을 20000303으로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','20000303200003032000030320000303200003032000030320000303200003032000030320000303
','0
','MATH'),
                                                                                                                (2724,'BAEKJOON','https://www.acmicpc.net/problem/14929',14929,'귀찮아 (SIB)','2초(추가시간없음)','512 MB',6,'<p>\[\sum_{1 \le a < b \le n}{x_ax_b}\]</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>n과 x<sub>i</sub>가 주어짇나. n은 10만 이하ㅇ고, x<sub>i</sub>는 젗ㄹ댓값이 100이하인 정수디이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>위에서 구하란 걸 구하면 된ㄷ.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 -2 3
','-5
','MATH'),
                                                                                                                (2751,'BAEKJOON','https://www.acmicpc.net/problem/14931',14931,'물수제비 (SUJEBI)','2초','512 MB',10,'<p>급격한 기후변화로 최근 대곽나라의 많은 강에서 생태계 교란종이 나타나고 있다. 이에 대곽나라의 이기범 대통령은 국무회의를 주재해 정부 차원의 대책을 논의하게 되었다. 대통령, 국무총리, 환경부 장관은 물론 26부의 장관 및 차관이 모여 열띤 토론을 벌였다. 많은 좋은 의견이 나왔지만 그 중 단 한 계획만이 만장일치로 통과되었으니 일명 Flat Dumpling Plan (수제비 계획)으로, 강에서 돌로 물수제비를 해 여러 생태계 교란종을 맞춰 죽이는 계획이었다. 계획을 이행할 강의 강폭은 L(1 ≤ L ≤1,000,000)로 강을 L개의 연속한 칸으로 모델링할 수 있다. 환경부에서는 강의 1번 칸, 2번 칸, … L번 칸 각각에 살고 있는 생태계 교란종의 치명도에 따라 점수를 매겨 놨다. (고유종이 서식하는 곳도 있으므로 점수가 음수일 수도 있다.) 돌을 두 개 이상 던지기에는 팔이 아팠기에 오직 돌 하나로만 진행하기로 했다. 던져진 돌은 던진 파워에 따라서 일정 간격 d(1≤d≤L)로 뛴다. 즉, d번 칸, 2d번 칸, … [L/d]d번 칸을 지난다. 돌이 거친 칸들의 점수의 합을 최대로 하는 자연수 d를 찾아 정부에 보고하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 강폭 L이 주어진다.</p>

<p>둘째 줄에는 L개 칸의 점수가 주어진다. 모든 점수는 -50,000 이상 50,000 이하의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>점수를 최대로 하는 d 값과 그 때의 점수를 공백을 사이에 두고 출력한다. 만약 점수를 최대로 하는 d가 여럿 존재할 경우 가장 작은 d를 출력한다. 최대의 점수가 0 <strong>이하</strong>인 경우에는 계획을 시행하지 않는 것이 나으므로 0 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
2 -5 4 -4 6 2
','3 6
','MATH'),
                                                                                                                (2727,'BAEKJOON','https://www.acmicpc.net/problem/14933',14933,'보석 (GEM)','2초','512 MB',18,'<p>선홍이는 집 앞마당에 일렬로 배치된 N(≤100,000)개의 칸으로 구성된 화단을 가꾸면서 왼쪽부터 차례로 1, 2, 3, … N의 번호를 붙여주었다. 어느 날 선홍이는 자신의 화단에 보석이 묻혀 있을 지도 모른다는 찌라시를 접하고는 금속 탐지기를 통해 보석을 파악하기로 마음 먹게 된다. 선홍이의 금속 탐지기는 s와 e라는 두 숫자를 지정해주면 s번 화단부터 e번 화단까지 돌며 그 구간 안에 있는 보석의 총 개수를 알려준다. (1≤s≤e≤N) 선홍이는 금속 탐지기를 통해 자신의 화단을 M(≤100,000)번 테스트해보고 그 결과를 적어놓았다. 때마침 지나가던 영민이는 평소 선홍이에게 괴롭힘 당한 것에 대한 분풀이를 하기 위해 보석 개수를 조작해 일의 자릿수만을 남겨 놓았다. 이 사실을 알고 화가 난 선홍이는 영민이를 불러 이 자료만을 가지고 각 칸에 있는 보석 개수를 유추해오라는 지시를 내렸다. 불쌍한 영민이를 도와주자 ㅠㅠ</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 화단의 개수 N과 테스트한 횟수 M이 주어진다.</p>

<p>둘째 줄부터 M개의 줄에는 공백을 사이에 두고 s<sub>i</sub>, e<sub>i</sub>, c<sub>i</sub>가 주어진다. 이는 i번째 테스트에서 선홍이가 [s<sub>i</sub>, e<sub>i</sub>] 구간을 탐사했으며 그 구간의 보석 개수의 일의 자리 숫자가 c<sub>i</sub>임을 의미한다. (1≤s<sub>i</sub>≤e<sub>i</sub>≤N, 0≤c<sub>i</sub>≤9)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>테스트 결과에 부합하게끔 각 칸의 보석 개수를 출력한다. 답이 여러 개라면 아무거나 출력해도 좋으며, 입력 자체에 모순이 있는 경우 -1을 출력한다. 각 칸에 묻혀 있는 보석의 수는 0이상 100이하의 정수여야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>1번 예제에서는 4 0 0 1 2, 96 98 94 97 94 등도 답이 될 수 있다. 2번 예제를 만족하는 해는 없음을 쉽게 알 수 있으므로 -1을 출력한다.</p>

				</div>
				</div>','5 4
1 2 4
2 5 3
3 4 1
1 4 5
','16 28 4 7 64
','MATH'),
                                                                                                                (2752,'BAEKJOON','https://www.acmicpc.net/problem/14934',14934,'변치 않는 수','2초','512 MB',17,'<p>임의의 자연수 n에 대하여, 00???00 (0이 n개)에서 99???99(9가 n개)까지 10<sup>n</sup>개의 수를 생각하자. 이 중에서 원래 수를 제곱한 값의 뒷부분 n자리가 원래 수와 똑같은 경우 그 수를 ‘변치 않는 수’라고 하자. 자릿수 n이 주어졌을 때 ‘변치 않는 수’는 언제나 4가지가 존재한다. 그중 두 개는 00???00과 00???01이고, 나머지 두 개 중 하나는 일의 자리 숫자가 5이고 다른 하나는 6이다. 예를 들어 n=4일 때에는 다음 수들이 ‘변치 않는 수’이다.</p>

<p style="text-align: center;">0000<sup>2</sup> = 0000, 0001<sup>2</sup> = 0001, 0625<sup>2</sup> = 390625, 9376<sup>2</sup> = 87909376</p>

<p>자릿수 n이 주어졌을 때, 일의 자리 숫자가 5인 ‘변치 않는 수’와 일의 자리 숫자가 6인 ‘변치 않는 수’ 중에서 어느 쪽이 더 큰지를 출력하는 프로그램을 작성하는 것이 문제이다.</p>

<p>&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자릿수 n이 주어진다. (1 ≤&nbsp;n ≤ 10,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>일의 자리 숫자가 5인 ‘변치 않는 수’가 더 크다면 5를, 일의 자리 숫자가 6인 ‘변치 않는 수’가 더 크다면 6을 첫째 줄에 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
','6
','MATH'),
                                                                                                                (2773,'BAEKJOON','https://www.acmicpc.net/problem/14941',14941,'호기심','1초','128 MB',14,'<p>남규는 호기심이 많다. 호기심이 많은 남규는 a와 b 사이의 소수들의 합과 차를 이용한 특수한 함수 F를 만들었다. 남규는 이 특수한 함수의 결과값을 알고 싶다.</p>

<p>함수 F(a,b)는 a와 b 사이의 소수를&nbsp;순서대로 다음과 같은 규칙에 따라 계산하고, 그 값을 반환한다.</p>

<p>3×A<sub>1</sub> - A<sub>2</sub> + 3×A<sub>3</sub> - A<sub>4</sub> + 3×A<sub>5</sub> - A<sub>6</sub> ..... A<sub>n</sub> (a ≤ A<sub>1</sub> < … < A<sub>n</sub> ≤ b , A<sub>i</sub>는 소수이다.)</p>

<p>질문이 F(3, 7) 이라면 3과 7 사이에는 3, 5, 7 총 3개의 소수가 있고, 규칙에 따라 계산한 결과는</p>

<p>3×3 - 5 + 3×7 = 25 이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에는 질문의 개수 n이 주어진다. 다음 줄 부터 차례대로 함수의 입력 a, b가 주어진다. (1 ≤ a ≤ b ≤ 10<sup>5</sup>) 또한 남규는 호기심이 많기 때문에 매우 많은 질문을 한다. 따라서 질문의 수 n은 최대 10<sup>5</sup> 개이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>남규가 물어본 질문 a, b에 대한 답변 F(a, b)을 각 줄에 하나씩 순서대로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
3 7
5 7
','25
8
','MATH'),
                                                                                                                (2732,'BAEKJOON','https://www.acmicpc.net/problem/14949',14949,'외계 미생물','2초','256 MB',15,'<p>항상 B, C가 가득 찬 성적표를 보고 자신이 컴퓨터 공학에 크게 재능이 없다고 생각한 윤영이는 결국 전공을 바꾸어 항공우주학과와 생물학과를 복수전공 하였고, 외계 생물 연구가로 큰 성공을 거두었다.</p>

<p>그러던 중 어떤 행성에서 특이한 외계 미생물을 발견하게 되었고, 이를 신기하게 생각했던 윤영이는 몇 마리를 자신의 연구소로 가지고 왔다. 연구 결과 미생물은 다음과 같은 특징을 가지고 있음을 확인할 수 있었다.</p>

<ol>
	<li>미생물은 스스로 자식을 낳으며, 하루동안 모든 자식을 낳고 죽는다. 낳을 수 있는 자식의 수는 미생물이 자유롭게 정할 수 있다. 또한, 자식은 낳은 순서에 따라 구분된다. 자식은 태어난 다음날부터 새로운 자식을 낳을 수 있다.</li>
	<li>미생물은 자식 간의 지나친 경쟁이 생기는 것을 원하지 않는다. 그래서 현재 존재하는 미생물들이 낳은 자식의 수의 총 합이 일정 수 W이하가 되도록 서로 협력한다. (W는 세대가 변해도 일정하다고 가정한다.)</li>
	<li>각 미생물은 자식을 안 낳을 수도 있지만, 종족 유지를 위해 모든 미생물이 자식을 낳지 않는 경우는 생기지 않게 한다. (단, 자식을 낳지 않더라도 자신이 태어난 다음날 죽는다.)</li>
</ol>

<p>윤영이는 이 생물이 번식하는 양상을 재미있어 했고, 미생물 한 마리만 자신의 실험실에 가지고 와서 용기에 담아뒀다. 미생물은 자신이 존재하는 용기에서 (2)번 조건에서 말한 지나친 경쟁이 발생하지 않을 수 있는 최대 자식의 수의 합은 W라고 생각했고, 번식을 시작했다. H일 동안 생길 수 있는 번식 양상의 경우의 수를 구하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 H와 W가 주어진다. 0 ≤&nbsp;H ≤ 5, 1 ≤ W ≤ 200&nbsp;이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>생물이 H일이 지나는 동안 번식 할 수 있는 양상의 개수를 출력하시오. 경우의 수가 너무 커질 수 있기 때문에 1,000,000,007로 나눈 나머지를 출력하라. 계산 과정에서 32비트 정수 변수가 표현할 수 있는 범위를 넘어서 64비트 정수 변수 (long long)를 사용해야 할 수도 있음에 주의하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 입력2 의 경우에는 아래와 같은 예시가 있다.</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14949/1.png" style="height:116px; width:414px"></p>

				</div>
				</div>','2 3
','31
','MATH'),
                                                                                                                (2728,'BAEKJOON','https://www.acmicpc.net/problem/15306',15306,'구몬 알고리즘','1초','512 MB',20,'<p>학습지의 대명사 <em>구몬</em>에서는 요즘 화제인 4차 산업혁명의 물결을 따라 얼마 전 <em>구몬 알고리즘</em>&nbsp;학습지를 만들겠다고 발표했다. 아이들에게 코딩 교육을 어떻게 해야 좋을지 몰라 쩔쩔매던 학부모들은 이에 크게 열광했다.</p>

<p>카이스트의 자랑 구사과는 구몬 알고리즘 집필진 중 한 명으로 뽑히게 되었다. 평소 4차 산업혁명이란 말을 별로 탐탁지 않아했던 구사과는 처음에는 거절했지만, 한 문제당 5만원씩 주겠다는 구몬 측의 유혹에 홀라당 넘어가 버리고 말았다. 역시 자본주의 사회에서는 돈이 최고인 법...</p>

<p>그래프 알고리즘 분야를 맡게 된 구사과는 다음과 같은 문제를 생각해 냈다.</p>

<p><em>$1$부터 $N$까지의 순열 $P$에 대해, 정점이 $N$개인 그래프에서 모든 ($i$, $P_i$) 쌍에 대해 간선을 그은 무방향성 그래프를 $G(P)$라 하자. (셀프 루프, 중복 간선도 허용한다) 정점이 $N$개인 무방향성 그래프 $X$가 주어지면, $G(P)=X$인 $P$를 모두 구해라.</em></p>

<p>구사과는 문제의 답이 되는 순열이 너무 적지도, 많지도 않았으면 한다, 즉, $G(P)=X$인 $P$가 $l$개 이상 $r$개 이하인 $X$만 문제로 내고 싶다. 구사과는 돈을 많이 벌고 싶기 때문에 기준에 맞는 문제라면 모조리 낼 것이다. 구사과는 신사임당 지폐를 몇 장 받을 수 있을까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 세 개의 정수 $N$, $l$, $r$이 주어진다. ($1 \le N \le 200\, 000$, $1 \le l \le r \le 10^9$)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>구사과가 낼 수 있는 서로 다른 문제의 수를 $10^9+7$로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 1 2
','5
','MATH'),
                                                                                                                (2729,'BAEKJOON','https://www.acmicpc.net/problem/15309',15309,'스킬 트리','2초','512 MB',19,'<p>혁중이는 요즘 <em>리X 오브 레X드</em>에 빠져 <em>메X플스X리</em>를 소홀히 했다. 그러던 어느 날, 보스를 잡던 손맛이 그리워진 혁중이는 <em>메X플스X리</em>에 다시 접속했는데, 아니 이게 무슨 일인가! 자신이 모르던 사이에 이미 6차 전직이 업데이트 된 것이다.</p>

<p>6차 전직의 스킬트리는 무한히 큰 정삼각형 모양 격자 형태로, 가장 위 꼭짓점에 위치한 스킬을 배우는 데 $1$원이 들고, 임의의 칸의 스킬을 배우는 비용이 $k$원이라면 왼쪽 아래 칸은 $Ak$원, 오른쪽 아래 칸은 $Bk$원이 든다.</p>

<p>스킬트리에는 $N$개의 <strong>특별한 삼각형</strong>이 정해져 있다. 각 특별한 삼각형은 $x_i$, $y_i$, $m_i$의 세 가지 수로 나타내지며, 격자의 $x_i$번째 행의 왼쪽에서 $y_i$번째 칸을 위쪽 꼭짓점으로 하고, $m_i$개의 행을 포함하는 정삼각형을 의미한다. 각 특별한 삼각형 내의 스킬을 모두 배울 때마다 총 데미지가 2배씩 증가한다고 한다!</p>

<p>혁중이는 각 특별한 삼각형에 대해 그 안에 있는 스킬을 모두 배우는 데 얼마의 비용이 드는지 궁금해졌다. 혁중이를 도와주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 $A$와 $B$가 주어진다. (각각 $1$ 이상 $10^{9}$ 이하)</p>

<p>두 번째 줄에는 특별한 삼각형의 개수 $N$ ($1 \le N \le 100\, 000$) 이 주어진다.</p>

<p>다음 $N$개의 줄에는 각 특별한 삼각형을 나타내는 정수 $x_i$, $y_i$, $m_i$ 가 공백을 사이에 두고 주어진다. (모두 $1$ 이상 $10^{18}$ 이하)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 특별한 삼각형에 대해, 그 안에 있는 스킬을 모두 배우는 데 드는 비용을 $10^9+7$로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 3
3
1 1 2
2 2 3
4 3 2
','6
75
108
','MATH'),
                                                                                                                (2731,'BAEKJOON','https://www.acmicpc.net/problem/15311',15311,'약 팔기','1초','512 MB',16,'<p>약장수 강욱이는 오늘도 약을 판다. 짬에서 나오는 Vibe로 화려한 언변을 구사하는 강욱이는 최고의 약장수이다. 하지만 이런 그에게도 고민거리가 하나 있으니...</p>

<p>동규라는 단골 손님이 있는데, 그는 매일 약을 $1$알에서 $100$만알 사이의 랜덤한 자연수 개수만큼 원했다. 주문을 받은 강욱이는 약 상자에서 한 알씩 약을 세서 꺼내주곤 했는데, 그것이 답답했던 동규는 강욱이에게 매번 화를 냈던 것이다.</p>

<p>이러다 동규가 자기를 때리지 않을까 무서웠던 강욱이는 동규가 원하는 만큼의 약을 빨리 건네주기 위한 방법을 고민하기 시작했다. 그는 곧 소싯적에 공부했던 <strong>Algorithm</strong>을 이용해 다음과 같은 방법을 생각해 냈다.</p>

<p><em>약 봉지 여러 개에 각각 적절한 수의 알약을 담아서 일렬로 늘어 놓은 뒤, 동규가 약을 $k$알 달라고 하면 총 $k$알의 약이 들어있는 어떤 연속한 구간의 약 봉지들을 한 번에 집어 주면 되겠군!</em></p>

<p>아쉽게도, 강욱이의 약 판매대는 봉지를 일렬로 최대 2000개까지만 올려놓을 수 있다. 강욱이는 적은 수의 봉지에 알약을 적절히 담아서 동규가 $100$만 이하의 어떤 수를 부르든 그 수에 해당하는 만큼의 약을 줄 수 있었으면 한다. 하지만 물리 공부를 하느라 <strong>Algorithm</strong>&nbsp;공부를 열심히 하지 못한 강욱이는 어떻게 할지 몰라 쩔쩔매고 있다. 강욱이를 도와주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 동규의 최대 약 요구량을 나타내는 정수 N ($=1\, 000\, 000$) 이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에는 필요한 약봉지의 개수 K ($1 \le K \le 2\, 000$) 를 출력한다.</p>

<p>두 번째 줄에는 왼쪽부터 순서대로 각 약봉지에 들어있어야 하는 약의 수를 출력한다. 각 봉지에는 $1$알 이상 $100$만알 이하의 약이 있어야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
','3
1 3 2
','MATH'),
                                                                                                                (2753,'BAEKJOON','https://www.acmicpc.net/problem/15314',15314,'쿵! 쿵!','2초','512 MB',22,'<p>동규는 <em>고급시계</em>&nbsp;게임을 아주 좋아한다. 고급정보과학 프로젝트로 시계를 만들 정도이니 말 다했다. 하지만 동규가 고급시계를 플레이하는 모습을 지켜 보면 정말로 좋아하는 것이 맞는 건지 의심이 들기도 한다.</p>

<p><em>(쿵! 쿵! 딸깍딸깍딸깍) 아니 왜 거점을(쿵)! 안(쿵)! 들어와(쿵)! (딸깍딸깍)</em></p>

<p>그렇게 마우스를 쿵쿵 내리치며 고급시계를 열심히 하던 어느 날, 드디어 책상이 깨지고 말았다! 그런데 깨진 책상을 보고 어이없어하던 동규는 신기한 사실을 발견했다. 책상에 간 금은 모두 자신이 마지막으로 내리친 점을 지나는 직선 또는 원이었던 것이다. 그 모양이 너무 예뻐서 동규는 그 모습을 사진으로 찍었다.</p>

<p>사진을 찍은 뒤 동규는 무심결에 깨진 책상을 손으로 톡 건드렸는데, 그 순간 책상이 금을 따라 조각나며 무너져 버렸다! 동규는 급히 책상 조각들을 주워 담았지만, 모든 조각을 주워 담은 게 맞는지 확실치 않았다. 그래서 동규는 금이 간 책상이 총 몇 조각으로 나뉘었는지를 알고 싶어한다.</p>

<p>다행히도 금 간 모습을 사진으로 찍어두었지만, 동규는 그 사진을 보고 일일이 조각 수를 세고 있기는 너무 싫었다. 동규를 위해 책상 조각 수를 세 주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 원과 직선의 총 개수 $N$ ($1 \le N \le 3\, 000$) 이 주어진다. 다음 $N$개의 줄에는 원 또는 직선 각각을 나타내는 수 $3$개가 주어지는데, 의미는 다음과 같다.</p>

<p>$1$ $a$ $b$ : 두 점 ($0$, $0$)과 ($a$, $b$)를 지나는 직선을 나타낸다.&nbsp;</p>

<p>$2$ $a$ $b$ : 두 점 ($0$, $0$)과 ($a$, $b$)를 잇는 선분을 지름으로 하는 원을 나타낸다.</p>

<p>(둘 모두에서 $|a|, |b| \le 10^{6}$이고, a와 b 둘 중 하나는 0이 아님)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 원과 직선으로 나뉜 책상의 영역이 총 몇 개인지 출력한다.</p>

<p>책상은 충분히 커서 모든 원과 직선들의 교점이 책상 내부에 들어온다고 가정한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 1 1
1 -1 1
2 0 2
2 2 0
','10
','MATH'),
                                                                                                                (2689,'BAEKJOON','https://www.acmicpc.net/problem/15315',15315,'태풍의 아들 KDH','2초','512 MB',20,'<p><em>태풍의 아들 KDH(끄드흐라 읽는다)</em>가 학교 근처에 있는 수원 종합운동장에서 콘서트를 열기로 했다. 그의 별명 태풍의 아들에서 알 수 있듯이, 그의 넘쳐나는 인기는 그가 가는 모든 곳마다 태풍을 불러일으킨다. 그리고, 이 태풍은 곧 송죽동을 휩쓸고 지나갈 것이다!</p>

<p>송죽동은 $N$개의 노드로 이루어진 하나의 연결된 트리 모양이다. 경기과학고등학교, KT wiz 야구장, 홈플러스, 불로만, 설빙 등 다양한 장소들이 $N-1$개의 길을 통해 모두 서로 연결되어 있다. 송죽동은 매우 번성한 곳이기 때문에 임의의 두 지점을 잇는 경로에 대해 그 경로상의 모든 도로에 1만큼의 교통량이 가산된다.</p>

<p>KDH가 몰고 온 태풍이 송죽동을 휩쓸고 지나가면, 송죽동의 각 지점은 $p$의 확률로 붕괴된다. 송죽동의 두 지점을 잇는 임의의 경로에 대해, 양 끝 점을 포함해서 경로 상에 있는 마을 중 하나라도 붕괴된다면 그 경로에 대해서는 교통량이 가산되지 않는다.&nbsp;</p>

<p>태풍 때문에 교통량이 줄어들면, 콘서트 수익도 자연히 줄어들 것이다. 태풍 이후 송죽동 교통량의 기댓값을 정확히 알 수 있다면 손해를 미리 대비할 수 있을 것이다. KDH를 도와주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 송죽동의 지점 수 $N$ ($1 \le N \le 200\, 000$) 과 확률 $p$를 나타내는 두 정수 $a$와 $b$가 주어진다. ($p= \frac{a}{b}$, $a$와 $b$는 각각 $1$ 이상 $10^9$ 이하)</p>

<p>다음 $N-1$줄에는 각 도로가 잇는 두 지점 $u_i$, $v_i$가 주어진다. ($1 \le u_i, v_i \le N$)</p>

<p>입력은 연결된 트리 형태임이 보장된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 태풍이 분 이후 송죽동에 있는 모든 도로의 교통량 기댓값의 합을 나타내는 수를 출력한다.</p>

<p>즉, 구한 기댓값을 $\frac{x}{y}$라 할 때, $x \times y^{-1}$ (mod $10^9+7$)의 값을 출력한다. (단, $y^{-1}$은 $y$의 $10^9+7$에 대한 모듈러 역원(modular inverse))</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 출력은 $\frac{19}{8}$를 의미한다.</p>

				</div>
				</div>','5 1 2
1 2
1 3
2 4
2 5
','375000005
','MATH'),
                                                                                                                (2754,'BAEKJOON','https://www.acmicpc.net/problem/15318',15318,'새로운 수열','2초','512 MB',16,'<p>다음과 같은 수열 A가 주어졌을 때,</p>

<p style="text-align:center">A = {a<sub>0</sub>, a<sub>1</sub>, ..., a<sub>N-2</sub>, a<sub>N-1</sub>}</p>

<p>새로운 수열 B는 다음과 같이 정의된다.</p>

<p style="text-align:center">B = {b<sub>0</sub>, b<sub>1</sub>, ..., b<sub>N-2</sub>, b<sub>N-1</sub>}</p>

<p style="text-align:center">\[b_i = \sum_{k=0}^{N-1}{((-1)^k \times (k+1) \times a_{(i+k)\%N})}\]</p>

<p>수열 A가 주어지면, 수열 B를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 N(1 ≤ N ≤ 300,000)이 주어진다. 두 번째 줄에 N개의 정수 a<sub>i</sub> (|a<sub>i</sub>| ≤&nbsp;10<sup>9</sup>)가 공백으로 구분되어 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 수열 B를 구성하는 N개의 정수 b<sub>i</sub>를 공백으로 구분하여 출력한다. |b<sub>i</sub>| ≤ 10<sup>18</sup>인 입력만 주어진다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제1에서 의 B는 다음과 같이 구해진다.</p>

<ul>
	<li>b<sub>0</sub> = 4 ? 2 + (-9) = -7</li>
	<li>b<sub>1</sub> = 1 ? (-6) + 12 = 19</li>
	<li>b<sub>2</sub> = (-3) ? 8 + 3 = -8</li>
</ul>

				</div>
				</div>','3
4 1 -3
','-7 19 -8
','MATH'),
                                                                                                                (2690,'BAEKJOON','https://www.acmicpc.net/problem/15319',15319,'동혁이의 생일선물','2초','512 MB',12,'<p style="text-align:center"><img alt="" src="http://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/15319/1.png" style="height:150px; width:225px"></p>

<p>동혁이에게는 N명의 친구가 있다. 동혁이의 생일은 4월 14일인데, 친구들은 그 날 동혁이에게 수열을 선물하려 했다. 하지만 그 수열을 구성하는 숫자가 너무 많았기 때문에 수열 전체를 선물하는 대신에 수열을 만들 수 있는 숫자 x만 선물하였고, 동혁이에게 수열을 만드는 방법을 전수해 줬다. 이제 7월 1일인 오늘, 친구들은 동혁이가 자신들의 선물을 얼마나 소중히 여겼는지 확인하기 위해 선물한 수열의 K번째 수를 물어보려 한다. 동혁이가 제대로 대답을 하지 못한다면, 친구들은 실망하고 떠나갈 것이다. 하지만 동혁이는 돈도 안되는 수열엔 관심이 없었기 때문에 하나도 외우지 못했다. 동혁이가 지금 당장 친구들의 물음에 빠르게 답할 수 있도록 도와주자.</p>

<p>i번째 친구가 선물한 숫자 x_i로 만들 수 있는 수열 M<sub>i</sub> (1 ≤ i ≤ N)는 다음과 같은 규칙을 갖는다. 숫자 x<sub>i</sub>의 거듭제곱을 원소로 하는 집합을 A라 할 때 (A = {x<sub>i</sub><sup>0</sup>, x<sub>i</sub><sup>1</sup>, x<sub>i</sub><sup>2</sup>, …}), 집합 A의 공집합을 제외한 모든 부분집합을 A<sub>f</sub> (f ≥ 0, f ∈ \(\mathbb{Z}\))라 하자. 여기서 집합 A<sub>j</sub> (j ∈ f)의 모든 원소들의 합을 a<sub>j</sub>라 하면, 수열 M<sub>i</sub>는 a<sub>j</sub> (j ∈ f)로 구성된다. (단, M<sub>i</sub>는 중복되는 값을 갖지 않는 증가수열이다.)</p>

<p>수열 M<sub>i</sub>에 대해 좀 더 풀어서 설명하면 다음과 같다.</p>

<p>집합 A = {xi<sup>0</sup>, x<sub>i</sub><sup>1</sup>, x<sub>i</sub><sup>2</sup>, …} 의 공집합을 제외한 모든 부분집합을 다음과 같이 나열할 수 있다.</p>

<p style="text-align:center">A<sub>0</sub>, A<sub>1</sub>, A<sub>2</sub>, …</p>

<p>그리고 각각의 부분집합의 합은 다음과 같다.</p>

<p style="text-align:center">a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub>, …</p>

<p>이제 i번째 친구가 선물한 x<sub>i</sub>로 만들 수 있는 수열 M<sub>i</sub>는 a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub>, … 를 오름차순으로 정렬한 수열이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 친구의 수 N(1 ≤ N ≤ 100,000)이 주어진다. 그 후 N줄에 걸쳐 친구들이 선물한 숫자 x(2 ≤ x ≤ 1,000) 와 친구들이 질문하고 싶어하는 K(1 ≤ K ≤ 1,000,000,000)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>숫자 x<sub>i</sub> (1 ≤ i ≤ N)로 구성된 수열 M<sub>i</sub> (1 ≤ i ≤ N)의 K번째 수를 모두 구한 뒤, 전부 더한 값을 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
3 5
','10
','MATH'),
                                                                                                                (2637,'BAEKJOON','https://www.acmicpc.net/problem/15353',15353,'큰 수 A+B (2)','1초','256 MB',8,'<p>두 정수 A와 B를 입력받은 다음, A+B를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 A와 B가 주어진다. (0 < A,B < 10<sup>10000</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 A+B를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','9223372036854775807 9223372036854775808
','18446744073709551615
','MATH'),
                                                                                                                (2646,'BAEKJOON','https://www.acmicpc.net/problem/15439',15439,'베라의 패션','2초','256 MB',2,'<p>베라는 상의 N 벌과 하의 N 벌이 있다. i 번째 상의와 i 번째 하의는 모두 색상 i를 가진다. N 개의 색상은 모두 서로 다르다.</p>

<p>상의와 하의가 서로 다른 색상인 조합은 총 몇 가지일까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 아래와 같이 주어진다.</p>

<pre>N</pre>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>상의와 하의가 서로 다른 색상인 조합의 가짓수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','0
','MATH'),
                                                                                                                (2673,'BAEKJOON','https://www.acmicpc.net/problem/15488',15488,'나이트가 체스판을 벗어나지 않을 확률','2초','512 MB',11,'<p>크기가 N×N인 체스판 위에 나이트가 하나 있다. 나이트가 있는 곳의 좌표가 주어졌을 때, K번 이동한 후에 나이트가 체스판 위에 있을 확률을 구하는 프로그램을 작성하시오.</p>

<p>나이트가 체스판 밖으로 이동하면, 다시 체스판 안으로 들어올 수 없다.</p>

<p>체스판의 가장 윗 행은 1번 행, 가장 아랫 행은 N번 행이고, 가장 왼쪽 열은 1번 열, 가장 오른쪽 열은 N번 열이다. 체스판의 좌표는 (x, y)로 나타내고, x행 y열을 나타낸다.</p>

<p>나이트의 위치가 (x, y)인 경우에, 이동할 수 있는 방법은 (x+1,y+2), (x+2,y+1), (x+2,y-1), (x+1,y-2), (x-1,y-2), (x-2,y-1), (x-2,y+1), (x-1,y+2) 이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, 나이트의 좌표 x, y, 이동 횟수 K가 주어진다. (1 ≤ N ≤ 50, 1 ≤ x, y ≤ N, 0 ≤ K ≤ 50)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 K번 이동한 후 나이트가 체스판 위에 있을 확률을 출력한다. 절대/상대 오차는 10<sup>-9</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1 1 0
','1
','MATH'),
                                                                                                                (2635,'BAEKJOON','https://www.acmicpc.net/problem/15489',15489,'파스칼 삼각형','1초','512 MB',7,'<p>파스칼 삼각형은 아래와 같은 모양으로 이루어져 있다. 양 끝을 제외한 각 수는 자신의 바로 왼쪽 위의 수와 바로 오른쪽 위의 수의 합으로 되어있다.</p>

<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/15489/1.png" style="height: 211.667px; width: 333.333px;"></p>

<p>이때 R번째 줄, C번째 수를 위 꼭짓점으로 하는 한 변이 포함하는 수의 개수가 W인 정삼각형과 그 내부를 생각하자. 정삼각형의 변과 그 내부에 있는 수들의 합을 구하고 싶다. 예를 들면, 3번 째 줄, 1번 째 수를 꼭짓점으로 하고 한 변이 포함하는 수의 개수가 4인 정삼각형과 그 내부에 있는 수의 합은 1+(1+3)+(1+4+6)+(1+5+10+10) = 42 이다.</p>

<p>주어진 R, C, W에 대해서 그에 해당하는 합을 구하는 프로그램을 작성하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 양의 정수 R, C, W가 공백을 한 칸씩 두고 차례로 주어진다. (단, 2 ≤ R+W ≤ 30, 2 ≤ C+W ≤ 30, 1 ≤ W ≤ 29, C ≤ R)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 R번째 줄, C번째 수를 위 꼭짓점으로 하는 한 변이 포함하는 수의 개수가 W인 정삼각형과 그 내부에 있는 수들의 합을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 1 4
','42
','MATH'),
                                                                                                                (2655,'BAEKJOON','https://www.acmicpc.net/problem/15503',15503,'레벨 배치하기','1초','256 MB',18,'<p>취미로 게임 만드는 걸 좋아하는 현욱은 오늘 간단한 게임 기획을 하나 떠올렸다. 현욱이 생각한 게임에는 N개의 레벨이 있는데, 각 레벨을 클리어하면 플레이어는 일정량의 점수를 획득할 수 있다. 또, 각 레벨은 클리어 후 진행할 수 있는 다음 레벨이 몇 종류 정해져있고, 플레이어는 그 레벨들 중 하나를 골라 해당 레벨로 진행할 수 있다.</p>

<p>현욱이 만든 게임의 기획을 요약하면 다음과 같다.</p>

<ol>
	<li>시작 레벨이 하나 존재한다.</li>
	<li>시작 레벨에서 다른 레벨에 도달할 수 있는 방법은 항상 존재하며 유일하다.</li>
	<li>플레이어는 각 레벨을 클리어시 S<sub>i</sub>점을 획득할 수 있다.</li>
	<li>레벨 별로 K<sub>i</sub>점이 주어지는데, 이는 기획자가 의도한 해당 레벨을 클리어하고 난 후 플레이어의 누적 점수합이다.</li>
	<li>레벨 i가 레벨 j보다 이후에 클리어해야 하는 레벨이라면 반드시 S<sub>i</sub> > S<sub>j</sub>여야한다. 즉, 클리어시 획득하는 점수가 증가하는 방향으로만 게임이 진행돼야 한다.</li>
</ol>

<p>현욱은 기획을 끝내고 나서 문득, 위의 조건을 만족하는 레벨 배치를 얼마나 다양하게 만들 수 있을 지 궁금해졌다. 현욱을 도와 주어진 S<sub>i</sub>, K<sub>i</sub> 수치 조건을 만족하게 모든 레벨을 배치할 수 있는 경우의 수를 모두 구하는 프로그램을 작성해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 레벨의 개수 N(1 ≤ N ≤ 3 × 10<sup>5</sup>)이&nbsp;주어진다. 둘째 줄에 각 레벨에 대한 S<sub>i</sub>(1 ≤ S<sub>i</sub> ≤ 10<sup>9</sup>)가&nbsp;주어진다. 셋째 줄에 각 레벨에 대한 K<sub>i</sub>(1 ≤ K<sub>i</sub> ≤ 10<sup>9</sup>)가&nbsp;주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 주어진 S<sub>i</sub>, K<sub>i</sub>값을 만족하게 레벨을 배치할 수 있는 경우의 수를 10<sup>9</sup>&nbsp;+ 7로 나눈 나머지를 출력한다. 각 레벨 배치에서 모든 레벨에 대해, 그 레벨을 클리어한 후 진행할 수 있는 다음 레벨 목록이 동일하다면(순서는 상관 없음), 두 배치는 동일한 배치로 생각한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 입력에서, 조건을 만족하는 배치는 시작 레벨이 1레벨이고, 1레벨을 클리어한 후 2,3레벨 중 하나를 골라 진행할 수 있는 배치 하나 밖에 없다. 두 번째 입력에서 조건을 만족하게 배치할 수 있는 방법은 존재하지 않는다.</p>

				</div>
				</div>','3
2 6 4
2 8 6
','1
','MATH'),
                                                                                                                (2660,'BAEKJOON','https://www.acmicpc.net/problem/15552',15552,'빠른 A+B','1초(하단참고)','512 MB',2,'<p>본격적으로 for문 문제를 풀기 전에 주의해야 할 점이 있다. 입출력 방식이 느리면 여러 줄을 입력받거나 출력할 때 시간초과가 날 수 있다는 점이다.</p>

<p>C++을 사용하고 있고 <code>cin</code>/<code>cout</code>을 사용하고자 한다면, <code>cin.tie(NULL)</code>과 <code>sync_with_stdio(false)</code>를 둘 다&nbsp;적용해 주고, <code>endl</code> 대신 개행문자(<code>\n</code>)를 쓰자.&nbsp;단, 이렇게 하면 더 이상 <code>scanf</code>/<code>printf</code>/<code>puts</code>/<code>getchar</code>/<code>putchar</code>&nbsp;등 C의 입출력 방식을 사용하면 안 된다.</p>

<p>Java를 사용하고 있다면, <code>Scanner</code>와 <code>System.out.println</code> 대신 <code>BufferedReader</code>와 <code>BufferedWriter</code>를 사용할 수 있다.&nbsp;<code>BufferedWriter.flush</code>는 맨 마지막에 한 번만 하면 된다.</p>

<p>Python을 사용하고 있다면, <code>input</code>&nbsp;대신 <code>sys.stdin.readline</code>을 사용할 수 있다. 단, 이때는 맨 끝의 개행문자까지 같이 입력받기 때문에 문자열을 저장하고 싶을 경우 <code>.rstrip()</code>을 추가로 해 주는 것이 좋다.</p>

<p>또한 입력과 출력 스트림은 별개이므로, 테스트케이스를 전부 입력받아서 저장한 뒤 전부 출력할 필요는 없다. 테스트케이스를 하나 받은 뒤 하나 출력해도 된다.</p>

<p>자세한 설명 및 다른 언어의 경우는 <a href="http://www.acmicpc.net/board/view/22716">이 글</a>에 설명되어 있다.</p>

<p><a href="http://www.acmicpc.net/blog/view/55">이 블로그 글</a>에서 BOJ의 기타 여러 가지 팁을 볼 수 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트케이스의 개수 T가 주어진다. T는 최대 1,000,000이다. 다음 T줄에는 각각 두 정수 A와 B가 주어진다. A와 B는 1 이상, 1,000 이하이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트케이스마다 A+B를 한 줄에 하나씩 순서대로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1 1
12 34
5 500
40 60
1000 1000
','2
46
505
100
2000
','MATH'),
                                                                                                                (2677,'BAEKJOON','https://www.acmicpc.net/problem/15560',15560,'구간 합 최대? 1','1초','128 MB',14,'<p>길이&nbsp;<em>N</em>의 수열&nbsp;<em>K</em><sub>1</sub>,?<em>K</em><sub>2</sub>,?...,?<em>K</em><sub><em>N</em></sub>과 상수&nbsp;<em>U</em>,&nbsp;<em>V</em>가 주어진다.</p>

<p><em>Q</em>개의 쿼리가 주어지며, 그 종류는 두 가지가 있다.</p>

<ol>
	<li><em>A</em>,&nbsp;<em>B</em>가 주어지면,&nbsp;<em>max</em>(<em>U</em>?×?(<em>K</em><sub><em>i</em></sub>?+?<em>K</em><sub><em>i</em>?+?1</sub>?+?...?+?<em>K</em><sub><em>j</em></sub>)?+?<em>V</em>?×?(<em>j</em>?-?<em>i</em>))&nbsp;(<em>A</em>?≤?<em>i</em>?≤?<em>j</em>?≤?<em>B</em>)&nbsp;의 값을 구한다.</li>
	<li><em>A</em>,&nbsp;<em>B</em>가 주어지면,&nbsp;<em>K</em><sub><em>A</em></sub>의 값을&nbsp;<em>B</em>으로 바꾼다.</li>
</ol>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 정수&nbsp;<em>N</em>과&nbsp;<em>Q</em>,&nbsp;<em>U</em>,&nbsp;<em>V</em>가 입력된다.&nbsp;(1?≤?<em>N</em>,?<em>Q</em>?≤?10<sup>3</sup>,??-?5?≤?<em>U</em>,?<em>V</em>?≤?5)</p>

<p>두 번째 줄에 정수&nbsp;<em>K</em><sub>1</sub>,?<em>K</em><sub>2</sub>,?...,?<em>K</em><sub><em>N</em></sub>이 주어진다.&nbsp;(?-?10<sup>2</sup>?≤?<em>K</em><sub><em>i</em></sub>?≤?10<sup>2</sup>)</p>

<p>세 번째 줄부터 쿼리가 주어진다. 세 수&nbsp;<em>C</em>,&nbsp;<em>A</em>,&nbsp;<em>B</em>가 주어진다.&nbsp;(1?≤?<em>A</em>,?<em>B</em>?≤?<em>N</em>,?0?≤?<em>C</em>?≤?1)</p>

<p><em>C</em>가 0이면 첫 번째 쿼리를, 아니면 두 번째 쿼리를 수행한다. 첫 번째 쿼리일 경우&nbsp;1?≤?<em>A</em>?≤?<em>B</em>?≤?<em>N</em>&nbsp;이다. 두 번째 쿼리일 경우&nbsp;1?≤?<em>A</em>?≤?<em>N</em>,&nbsp;?-?10<sup>2</sup>?≤?<em>B</em>?≤?10<sup>2</sup>이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>한 줄마다 첫 번째 쿼리의 결과값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 3 2 4
1 1 1 1 1
0 1 5
1 3 -2
0 1 5
','26
20
','MATH'),
                                                                                                                (2678,'BAEKJOON','https://www.acmicpc.net/problem/15570',15570,'블록 2','1초','256 MB',15,'<p>여러 가지 블록들을 이용하여 직사각형 모양을 만들려고 한다. 우리에게는&nbsp;1?×?<em>N</em>&nbsp;블록,&nbsp;2?×?<em>N</em>&nbsp;블록, ...,&nbsp;<em>N</em>?×?<em>N</em>&nbsp;블록이 무한하게 있다. 이 블록들을 사용하여&nbsp;<em>N</em>?×?<em>M</em>&nbsp;모양을 만들고 싶다. 만들 수 있는 총 방법의 수를&nbsp;1999로 나눈 나머지를 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에&nbsp;<em>N</em>과&nbsp;<em>M</em>이 입력된다.&nbsp;(1?≤?<em>N</em>?≤?10<sup>2</sup>,?1?≤?<em>M</em>?≤?10<sup>10</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>총 가능한 경우의 수를 1999로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 12
','732
','MATH'),
                                                                                                                (2661,'BAEKJOON','https://www.acmicpc.net/problem/15576',15576,'큰 수 곱셈 (2)','2초','512 MB',20,'<p>두 정수 A와 B가 주어졌을 때, 두 수의 곱을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 A와 B가 주어진다. 두 정수는 0보다 크거나 같은 정수이며, 0을 제외한 정수는 0으로 시작하지 않으며, 수의 앞에 불필요한 0이 있는 경우도 없다. 또한, 수의 길이는 300,000자리를 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>두 수의 곱을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 2
','2
','MATH'),
                                                                                                                (2794,'BAEKJOON','https://www.acmicpc.net/problem/16123',16123,'피타고라스 쌍','2초(추가시간없음)','512 MB',24,'<p><strong>피타고라스 쌍</strong>은 <em>m</em> > <em>n</em>인 1 이상의 자연수 <em>m</em>, <em>n</em>에 대해</p>

<p style="margin-left: auto; margin-right: auto; width: 11ex;"><em>a</em> = <em>m</em><sup>2</sup> - <em>n</em><sup>2</sup><br>
<em>b</em> = 2<em>mn</em><br>
<em>c</em> = <em>m</em><sup>2</sup> + <em>n</em><sup>2</sup></p>

<p>인 (<em>a</em>, <em>b</em>, <em>c</em>)를 말합니다. 이때 (<em>a</em>, <em>b</em>, <em>c</em>)는 (<em>m</em>, <em>n</em>)으로부터 <strong>생성되었다</strong>고 얘기합니다.</p>

<p><strong>원시 피타고라스 쌍</strong>&nbsp;(<em>a</em>, <em>b</em>, <em>c</em>)는 피타고라스 쌍이면서 gcd(<em>a</em>, <em>b</em>, <em>c</em>) = 1인 것입니다. 당신은 <em>L</em>이 주어졌을 때, <em>n</em> < <em>m</em> ≤ <em>L</em>인 (<em>m</em>, <em>n</em>)으로부터 생성된 원시 피타고라스 쌍의 개수를 구해야 합니다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 5,000,000,000보다 작거나 같은 양의 정수 <em>L</em>이 주어집니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>정답을 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>다음과 같이 4개 있습니다:</p>

<ul>
	<li>(<em>m</em>, <em>n</em>) = (2, 1)인 경우 (<em>a</em>, <em>b</em>, <em>c</em>) = (3, 4, 5)</li>
	<li>(<em>m</em>, <em>n</em>) = (3, 2)인 경우 (<em>a</em>, <em>b</em>, <em>c</em>) = (5, 12, 13)</li>
	<li>(<em>m</em>, <em>n</em>) = (4, 3)인 경우 (<em>a</em>, <em>b</em>, <em>c</em>) = (7, 24, 25)</li>
	<li>(<em>m</em>, <em>n</em>) = (4, 1)인 경우 (<em>a</em>, <em>b</em>, <em>c</em>) = (15, 8, 17)</li>
</ul>

				</div>
				</div>','4','4','MATH'),
                                                                                                                (2795,'BAEKJOON','https://www.acmicpc.net/problem/16128',16128,'스눕시티','2초(추가시간없음)','512 MB',21,'<p>카젤은 도시 운영 게임을 플레이하고 있다. 이 게임에서는 2<sup><em>N</em></sup> × 2<sup><em>N</em></sup> 크기의 땅에 다양한 오브젝트를 배치할 수 있다. 땅에는 격자가 그려져 있고, 모든 오브젝트는 격자에 맞춰서 배치해야 한다. 즉 한 오브젝트가 차지하는 영역이 어떤 격자칸과 일부만 겹쳐서는 안 된다. 오브젝트는 원하는 방향을 향하도록 회전시켜서 배치할 수도 있다.</p>

<p>이 게임에는 매 시간마다 금화를 생산하는 건물 오브젝트와 도시의 아름다움 수치를 늘려 주는 꽃밭 오브젝트가 있다. 그 중 가장 효율이 좋은 건물 오브젝트는 1 × 1 정사각형 세 개가 ㄱ자 모양으로 변을 맞대고 있는 모양의 영역을 차지하며, 가장 효율이 좋은 꽃밭 오브젝트는 1 × 1 정사각형 모양의 영역을 차지한다. 카젤은 금화를 많이 벌고 싶어서 꽃밭 오브젝트는 한 개만 놓고 나머지 영역을 전부 건물 오브젝트로 채우기로 했다.</p>

<p>카젤은 분할정복 알고리즘을 공부한 적이 있기 때문에 꽃밭 오브젝트를 하나 배치했을 때 건물을 어떻게 배치해야 하는지도 잘 알고 있다.</p>

<ol>
	<li>땅을 2<sup><em>N</em>-1</sup> × 2<sup><em>N</em>-1</sup> 크기의 영역 4개로 분할한다. 이때 한 개의 영역은 꽃밭 오브젝트가 한 칸을 차지하고 있고, 나머지 세 영역은 비어 있을 것이다.</li>
	<li>건물 오브젝트를 비어 있는 세 개의 영역에 한 칸씩 걸치도록 가운데에 배치한다.</li>
	<li>각각의 영역에 오브젝트가 차지하고 있는 칸이 한 칸씩 있게 되므로 각 영역에 대해 같은 방법으로 건물을 배치하면 된다.</li>
</ol>

<p style="text-align:center;"><img alt="8 × 8 크기의 땅의 6번째 줄 2번째 칸에 꽃밭을 배치하는 경우" src="https://upload.acmicpc.net/31e4e6d7-fe95-4752-a206-939fa5ced33c/-/preview/" style="width: 338.333px; height: 83.3333px;"><br>
8 × 8 크기의 땅의 6번째 줄 2번째 칸에 꽃밭을 배치하는 경우</p>

<p>하지만 도시에 건물만 가득 차 있으면 너무 삭막해 보이므로, 게임에서는 꽃밭의 사용을 권장하기 위해 일일 퀘스트를 도입했다. 매일 아침 격자칸을 한 칸 지정해 주고, 해당 격자칸에 꽃밭을 배치하면 큰 보상을 주기로 한 것이다. 카젤은 일일 퀘스트를 깨고 싶었지만, 건물을 없앴다가 다시 짓는 것은 시간이 아주 오래 걸리기 때문에 어려움에 처했다.</p>

<p>그나마 다행인 점은 건물을 제자리에서 회전시키는 데에는 시간이 걸리지 않는다는 점이다. 유저는 건물 하나를 선택하고 해당 건물을 포함하는 2 × 2 정사각형 영역의 중심을 기준으로 시계 또는 반시계 방향으로 90도씩 회전시킬 수 있다. 물론 건물을 회전시켰을 때 다른 오브젝트가 차지하고 있는 영역과 겹치는 경우는 회전시킬 수 없다.</p>

<p style="text-align: center;"><img alt="건물 회전의 예시" src="https://upload.acmicpc.net/2924a2bf-364c-4754-9444-5c82a366b26a/-/preview/" style="width: 338.333px; height: 39.1667px;"><br>
건물 회전의 예시</p>

<p>카젤은 일일 퀘스트가 주어지면 기존의 꽃밭을 삭제하고 건물들을 열심히 회전시켜서 지정된 위치를 빈 칸으로 만든 뒤, 그 위치에 새로 꽃밭을 배치해서 퀘스트를 완료하려고 한다. 비록 건물을 회전시키는 데에 시스템상으로 시간이 걸리지는 않지만, 건물을 클릭하고 회전 버튼을 누르는 것은 너무 귀찮은 작업이기에 카젤은 되도록 적은 횟수의 회전으로 퀘스트를 완료하고 싶어한다.</p>

<p>최초의 꽃밭의 위치와 이후 <em>M</em>일간 일일 퀘스트로 지정된 격자칸들이 주어질 때, 카젤이 모든 일일 퀘스트를 순서대로 완료할 수 있는지, 가능하다면 최소 몇 번의 회전이 필요한지 구해 보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 땅의 크기를 의미하는 정수 <em>N</em>과 일일 퀘스트가 주어지는 날의 수를 의미하는 정수 <em>M</em>(1 ≤ <em>N</em> ≤ 40, 1 ≤ <em>M</em> ≤ 100,000)이 주어진다. 땅의 크기는 2<sup><em>N</em></sup> × 2<sup><em>N</em></sup>임에 유의하라.</p>

<p>둘째 줄에 최초의 꽃밭의 위치를 의미하는 두 개의 정수 <em>a</em>, <em>b</em>(1 ≤ <em>a</em>, <em>b</em> ≤ 2<sup><em>N</em></sup>)가 주어진다. 이는 땅에 그려진 격자의 <em>a</em>번째 줄 <em>b</em>번째 칸에 꽃밭 오브젝트가 있음을 의미한다.</p>

<p>세 번째 줄부터 <em>M</em>개의 줄에 걸쳐 각 줄에 각 날짜마다 일일 퀘스트로 주어진 칸의 위치를 의미하는 두 개의 정수가 둘째 줄과 같은 형식으로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>카젤이 <em>M</em>일간의 일일 퀘스트를 모두 순서대로 완료할 수 있다면 첫 줄에 모든 퀘스트를 완료하기 위해 필요한 최소 회전 횟수를 출력한다. 만약 불가능하다면 첫 줄에 <code>WA Machine</code>을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 예시는 건물이 하나뿐이며, 첫 날에는 시계 방향으로 한 번, 둘째 날에는 시계 또는 반시계 방향으로 두 번 회전시키면 된다.</p>

<p>두 번째 예시의 최초의 건물과 꽃밭의 배치는 다음과 같다.</p>

<p style="text-align: center;"><img alt="두 번째 예시의 최초의 건물과 꽃밭의 배치" height="140" src="https://upload.acmicpc.net/351284aa-b0bc-448e-8d59-87afc7df72e3/-/preview/" width="140"></p>

<p>1일차 일일 퀘스트는 아래와 같은 방법으로 완료할 수 있다.</p>

<p style="text-align: center;"><img alt="1일차 일일 퀘스트의 완료 방법" height="140" src="https://upload.acmicpc.net/9d866a3f-c1b3-4ee1-8afe-522d6026a6ac/-/preview/" width="675"></p>

<p>2일차 일일 퀘스트는 아래와 같은 방법으로 완료할 수 있다.</p>

<p style="text-align:center;"><img alt="2일차 일일 퀘스트의 완료 방법" height="140" src="https://upload.acmicpc.net/afe2420b-6b3c-4798-a37e-cd70aa0569f0/-/preview/" width="496"></p>

				</div>
				</div>','1 2
1 1
1 2
2 1','3','MATH'),
                                                                                                                (2796,'BAEKJOON','https://www.acmicpc.net/problem/16129',16129,'뚜루루 뚜루','0.5초(추가시간없음)','512 MB',20,'<p>최근 <strong>아기 석환</strong>이라는 노래가 큰 인기를 끌고 있다. 이 노래는 귀여운 아기 석환 캐릭터가 등장하는 동영상과 중독성 있는 <strong>뚜루루 뚜루</strong> 후렴구로 전국 각지의 학생들과 직장인들의 마음을 사로잡았다.</p>

<p>강남의 직장인 gs12117 역시 이 노래에 흠뻑 빠졌다. 특히 이 노래의 후렴구에 중독된 gs12117은 <em>R</em>줄 <em>C</em>칸으로 나뉘어진 종이에 <strong>뚜루루 뚜루</strong> 후렴구를 계속해서 적어 나가기 시작했다. 후렴구를 적을 때는 종이의 첫 줄 가장 왼쪽 칸에서부터 오른쪽으로 한 칸에 한 글자씩 <strong>뚜</strong>, <strong>루</strong>, <strong>루</strong>, <strong>뚜</strong>, <strong>루</strong>를 순서대로 적어 나가며, 한 줄의 가장 오른쪽 칸에 도달하면 다음 줄의 가장 왼쪽 칸으로 넘어간다.</p>

<p style="text-align:center;"><img alt="7×7 종이에서의 예시" src="https://upload.acmicpc.net/029ee55c-5dba-4f51-b5e4-690d13d4162e/-/preview/"><br clear="right">
7×7 종이에서의 예시 &nbsp;</p>

<p>gs12117은 이 종이에서 <strong>뚜루루 뚜루</strong> 경로를 많이 찾으려고 한다. <strong>뚜루루 뚜루</strong> 경로란 임의의 칸에서 출발해서 이미 방문한 칸을 다시 방문하지 않도록 상하좌우로 이동하면서 각 칸에 적힌 글자를 순서대로 읽었을 때, 그 결과가 정확히 <strong>뚜루루 뚜루</strong>가 되는 경로를 말한다.</p>

<p>종이의 크기가 주어졌을 때, gs12117이 찾을 수 있는 <strong>뚜루루 뚜루</strong> 경로의 개수를 구하여라. 어떤 두 경로가 같은 순서에 다른 칸을 방문할 경우 두 경로는 서로 다른 경로이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 종이의 줄 수와 칸 수를 의미하는 정수 <em>R</em>과 <em>C</em>(1 ≤ <em>R</em>, <em>C</em> ≤ 12,117)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 줄에 gs12117이 찾을 수 있는 <strong>뚜루루 뚜루</strong>&nbsp;경로의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 예시에서는 다음과 같은 경로들이 가능하다.</p>

<p style="text-align:center;"><img alt="3×4 종이에서의 예시" src="https://upload.acmicpc.net/489e66b2-1e2e-47dc-ab58-fe675f610efc/-/preview/"></p>

				</div>
				</div>','3 4','23','MATH'),
                                                                                                                (2797,'BAEKJOON','https://www.acmicpc.net/problem/16130',16130,'벌점 (DemeritPoints)','0.1초(추가시간없음)','32 MB',5,'<p>설곽인들은 벌점, 주로 의행관 벌점을 받으며 살아가고&nbsp;때때로 기숙사 생활의 꽃인 퇴사를 하기도 한다. 벌점을 받을 때마다 벌점 감량 프로그램을 할 수도 있지만, 4층 선배님의 방에서 재침을 하고 조회는 물론 1교시 물리 수업을 무단 결과하는 등 벌점을 한 번에 많이 받는 행동을 하면 벌점이 10점을 넘어&nbsp;퇴사를 당한다. 비록 그자가 수석이라 할지라도!</p>

<p>설곽인들은 잘 알고 있겠지만 설곽의 벌점과 퇴사 규칙은 다음과 같다.</p>

<ol>
	<li>벌점 X점을 받으면 누적 벌점에 X점이 추가된다.</li>
	<li>X점이 추가되어서 누적 벌점을 10으로 나눈 몫이 증가한 경우 퇴사를 당한다. 이 몫이 1, 2, 3인 경우 1, 2, 3주 퇴사, 4인 경우 <strong>무기 퇴사</strong>, 4보다 큰 경우 <strong>영구 퇴사</strong>를 당한다.</li>
	<li>무기 퇴사나 영구 퇴사를 당하면 의행관에 다시 들어올 수 없고 벌점도 더 받을 수 없다.</li>
</ol>

<p>이제 입력된 데이터로 벌점의 주인이 총 몇 주 동안 퇴사를 당하는지 주 단위로 계산해 보자. 단, 퇴사 기간 동안에는 벌점을 받지 않고, 퇴사가 끝난 이후 다시 벌점을 받기 시작한다고 가정한다.</p>

<p>참고로&nbsp;<code>0</code>~<code>9</code>의 아스키 코드는&nbsp;<code>48</code>~<code>57</code>이고,&nbsp;<code>A</code>~<code>Z</code>의 아스키 코드값은&nbsp;<code>65</code>~<code>90</code>이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 퇴사 기간을 계산해야 하는 학생의 수&nbsp;<em>N</em>&nbsp;(<em>N</em>&nbsp;≤ 20) 이 주어진다.</p>

<p>두 번째 줄부터 N개의 줄에 걸쳐 각 학생의 정보가 주어진다. 한 줄에 한 학생이 순서대로 받은 벌점이 공백 없는 문자열로 주어진다. 0점부터 9점까지의 벌점은 숫자&nbsp;<code>0</code>&nbsp;~&nbsp;<code>9</code>로, 10점부터 35점까지의 벌점은&nbsp;<code>A</code>&nbsp;~&nbsp;<code>Z</code>의 알파벳 대문자로 주어진다. 이 문자열의 길이는 30을 넘지 않는다.</p>

<p>가령, 입력으로&nbsp;<code>B1A4</code>가 주어진다면 11점, 1점, 10점, 4점의 순서로 벌점을 받은 것이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의&nbsp;학생들이 퇴사해 있는 총 기간을 주 단위로 한 줄에 한 명씩 출력하자.</p>

<p>무기 퇴사나 영구 퇴사를 당한 경우 퇴사 기간을 출력하고, 그 뒤에 무기 퇴사의 경우 (weapon)을, 영구 퇴사의 경우 (09)를 공백 없이, 괄호를 포함하여&nbsp;추가로 출력하고 이는 퇴사 기간에 포함하지 않는다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
SK
4796
XY
','2(weapon)
3
3(09)
','MATH'),
                                                                                                                (2798,'BAEKJOON','https://www.acmicpc.net/problem/16134',16134,'조합 (Combination)','1초(추가시간없음)','256 MB',15,'<p>준하는 기초통계학 수업에서 너비가 a, 높이가 ?????b인 격자판의 좌하단 점으로부터 우상단 점까지 최단경로로 가는 방법의 수를 구하라는 과제를 받았어. </p>

<p>알고 있겠지만 정답은  \(\begin{pmatrix}a+b\\b\end{pmatrix}\)이야. 보기만 해도 벌써 조합을 계산할 생각에 신이 나지? 사실 조합을 구하는 문제도 코딩으로 해결할 수 있대. 코딩으로 과제를 해결해주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p class="0" style="text-align:left">첫 줄에 <em>N</em>과 <em>R</em>이 주어진다. (0 ≤ <em>R</em> ≤ <i>N</i> ≤ 1,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p class="0" style="text-align:left">\(\begin{pmatrix}N\\R\end{pmatrix}\)의 값을 1,000,000,007로 나눈 나머지를 출력하자! (단, 1,000,000,007은 소수이다)</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 2
','6
','MATH'),
                                                                                                                (2800,'BAEKJOON','https://www.acmicpc.net/problem/16136',16136,'준하의 정수론 과제 (Divmaster)','1초(추가시간없음)','256 MB',19,'<p>준하는 3학년 2학기 때 들으려고 했던 정수론을 수강신청을 잘못하는 바람에 2학년 1학기&nbsp;때 신청하고 말았다!&nbsp;사악한 정수론 선생님은 자연수의 약수의 개수를 구하는 문제를 던지고, 이 문제들을 모두 풀지 못한 사람에게는 F학점을 주겠다는 끔찍한 소리를 하였다. 3학년들의 틈에서 멘탈이 나간 준하가 학점을 받을 수 있도록 코딩으로 과제를 해결해주자!</p>

<p>준하가 짜려고 했던 코드는 다음과 같다.</p>

<p>N개의 수에 대해서 Q번의 작업을 처리하는데, 작업은 2가지로 이루어져 있다.</p>

<ul>
	<li>1 S E : S번째 수부터 E번째 수를 모두 각 수의 약수의 개수로 바꾼다.</li>
	<li>2 S E : S번째 수부터 E번째 수까지의 합을 출력한다.</li>
</ul>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 수의 개수 <em>N</em>, 작업의 개수 <em>Q</em>가 주어진다. (1&nbsp;≤ <em>N, Q&nbsp;</em>≤ 100,000)</p>

<p>두 번째 줄에&nbsp;<em>N</em>개의 자연수&nbsp;<em>a<sub>1</sub>, a<sub>2</sub>, ... a<sub>N</sub></em>이 주어진다. (1&nbsp;≤ <em>a<sub>i</sub></em>&nbsp;≤ 1,000,000)</p>

<p>다음 <em>Q</em>개의 줄에는 각각 작업을 뜻하는 자연수 <em>T S E</em>가 주어진다. (1&nbsp;≤ <em>T</em>&nbsp;≤ 2, 1&nbsp;≤ <em>S</em>&nbsp;≤ <em>E</em>&nbsp;≤ N)&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>2번 작업에 대한 출력을 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7 6
6 4 1 10 3 2 4
2 1 7
2 4 5
1 3 5
2 4 4
1 5 7
2 1 7','30
13
4
22','MATH'),
                                                                                                                (2801,'BAEKJOON','https://www.acmicpc.net/problem/16140',16140,'정수론과 응용','0.2초(추가시간없음)','16 MB',19,'<p>정수론을 응용하자. 실수부와 허수부가 정수인 복소수를 가우시안 수라고 한다.</p>

<p>\begin{equation*}<br>
G=\left\{x+yi\::\:x,y\in\mathbb{Z}\right\},\qquad\text{where}\quad i^2=-1<br>
\end{equation*}</p>

<p>가우시안 수로&nbsp;정수에서의 약수, 공약수, 최대공약수의 개념이 확장이 가능하다.</p>

<ul>
	<li>두 가우시안 수 $n,m$에 대해 어떤 가우시안 수 $k\in G$가 존재해 $m=n\cdot k$를 만족할 때, $n$을 $m$의 <strong>약수</strong>라고 한다. $n$이 $m$의 약수라는 관계를&nbsp;$n\mid m$으로 적는다.</li>
	<li>두 가우시안 수 $n,m$에 대해, 가우시안 수 $d$가 $n$의 약수이자 $m$의 약수일 때, $d$를 $n$과 $m$의 <strong>공약수</strong>라고 한다.</li>
	<li>두 가우시안 수&nbsp;$n,m$의 공약수 $g$가 다른 모든 공약수 $d$에 대해 $d\mid g$를 만족할 때, $g$를 <strong>최대공약수</strong>라고 한다.</li>
</ul>

<p>두 가우시안 수가 주어졌을 때, 두 수의 모든 최대공약수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 개수 $T$가 주어진다. 테스트 케이스는 최대 1,000개 주어진다.</p>

<p>둘째 줄부터 $(T+1)$번째 줄에 걸쳐 각 줄마다 하나의 테스트 케이스가 주어진다. 각 테스트 케이스는 $-10^9$ 이상, $10^9$ 이하인 4개의 정수 $a,b,c,d$가 공백으로 구분해 주어진다. 이 입력은 가우시안 수 $n=a+bi$, $m=c+di$에 해당한다. $a=b=0$ 혹은 $c=d=0$인 경우는 주어지지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>가우시안 수 $x+yi$는 $x$를 출력하고 공백을 두고 $y$를 출력하는 방식으로 출력한다. 각 테스트 케이스마다 첫 줄에는 최대공약수의 수를 출력하고, 두 번째 줄에는 최대공약수들을 lexicographic order으로 출력한다. 즉, $a<c$ 혹은 $a=c$와 $b<d$일 때, $a+bi$를 $c+di$보다 먼저 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>최대공약수는 정수에서도 유일하지 않다. 예를들어 정수 $g$가 두 정수 $n,m$의&nbsp;최대공약수라면, $-g$도 $n,m$의 최대공약수이다.</p>

				</div>
				</div>','3
6 0 9 0
2 1 -2 -1
6 -7 3 5','4
-3 0 0 -3 0 3 3 0
4
-2 -1 -1 2 1 -2 2 1
4
-4 -1 -1 4 1 -4 4 1','MATH'),
                                                                                                                (2802,'BAEKJOON','https://www.acmicpc.net/problem/16141',16141,'정수론과 응용: 레시테이션','4초(추가시간없음)','512 MB',24,'<p>정수론과 응용 조교를 맡게 된 청응이는 바뻐 레시테이션 문제를 준비할 여를이 없었다. 수강생들이 이번 주 수업 때 오일러 피 함수(Eulers totient function, $\varphi$)를 배운 것을 알고 어떤 $n$을 주면 $\varphi(n)$을 구하라는 문제를 많이 내는 것으로 넘어가려고 했다.</p>

<p>\begin{equation*}<br>
\varphi(n)=\left|\left\{k\in\mathbb{N}\::\:k\leq n,\:\gcd(k,n)=1\right\}\right|<br>
\end{equation*}</p>

<p>그러나 이 문제는 소인수분해만 하면 구하는 공식이 너무 잘 알려져 있어 레시테이션 시간을 전부 넘기지 못한다는 것을 깨달았다. 그래서 오일러 피 함수를 일반화한 요르단 함수(Jordans totient function)를 구하라는 문제를 준비했다.</p>

<p>\begin{equation*}<br>
\varphi(n,v)=\left|\left\{(k_1,k_2,\cdots,k_v)\in\mathbb{N}^v\::\:\forall i,\:k_i\leq n,\:\gcd(k_1,k_2,\cdots,k_v,n)=1\right\}\right|<br>
\end{equation*}</p>

<p>그러나 이 문제도 너무 쉽게 풀릴 것이라는 고민에 빠졌다. 그래서 더 어려운 문제를 생각하던 도중 가우스와 관련된 유명한 일화가 생각났다.</p>

<p>"가우스가 어렸을 때, 가우스의 지도 교사였던 뷔트너 선생님이 $1$부터 $100$까지 수들의 합을 구하라고 했고, 가우스는 제일 빠르게 $5050$이라는 답을 냈다."</p>

<p>이에 영감을 받아 $\sum\limits_{i=1}^n\sum\limits_{u=1}^{v}\varphi(i,u)$를 구하라고 문제를 냈다. 이제 이 문제를 푸는 것은 여러분 몫이다. $n$과 $v$가 주어지면 $\sum\limits_{i=1}^n\sum\limits_{u=1}^{v}\varphi(i,u)$를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 한 줄만 주어지며 두 자연수 $n$과 $v$가 주어진다. 입력은 $1\leq n\leq 10^9$와&nbsp;$1\leq v\leq 10^2$을 만족한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>$\sum\limits_{i=1}^n\sum\limits_{u=1}^{v}\varphi(i,u)$를 출력한다. 답이 몹시 커질 수 있으니 $10^9+7$로 나눈 나머지를 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 2','16','MATH'),
                                                                                                                (2803,'BAEKJOON','https://www.acmicpc.net/problem/16144',16144,'드로잉','1초(추가시간없음)','256 MB',13,'<p>이번 학기에 드로잉 수강자가 너무 많아 담당 교수가 수강생을 감당할 수&nbsp;없게 되었다. 이에 따라 각 수강생이 드로잉 과제를 수행하고 과제물을 스캔해서&nbsp;BOJ에 제출하는 것으로 결정되었다. 너무 큰 그림은 채점하는데 오래 걸리기에&nbsp;색에 대한 정보는 명도만 0과 255&nbsp;사이의 자연수로 근사해서 인식한다.</p>

<p>첫 번째 수업은 단순히 선을 그어 스케치북을 채우는 것으로 명도 200을 넘긴 모든 학생을 통과시켰다.</p>

<p>두 번째 수업에는&nbsp;명도단계 연습을 진행하며, 과제는 스케치북을 $n$ 칸으로 나눠&nbsp;명도가 등차수열을 이루도록 선을 긋는 것이다. 스캔 과정에서 근사되기에&nbsp;어떤 실수 $a$와 양의 실수 $b$에 대해 $k$번째 칸의 명도가 $\lfloor a+bk\rfloor$을 만족하면 통과하는 것으로 통과 조건을 둔다. 여기서 $\lfloor\bullet\rfloor$은 버림을 의미한다.&nbsp;여러분은 채점 프로그램을 작성해야 한다.</p>

<p>즉, $n$칸의 명도가 주어지면 $1$과 $n$ 사이 모든 자연수 $k$에 대해 $k$번째 칸의 명도가 $\lfloor a+bk\rfloor$을 만족하는 실수 $a$와 양의 실수 $b$가 있는지 판정하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 칸의 수 $n$이 주어진다. $n$은&nbsp;$3\leq n\leq 100$을 만족한다.</p>

<p>두 번째 줄에&nbsp;$n$개의 명도&nbsp;$\beta_1,\cdots,\beta_n$이&nbsp;공백으로 구분되어 주어진다. 명도는 $0\leq\beta_i\leq 255$를 만족한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>조건을 충족한다면 "<code>pass</code>", 충족하지 않는다면 "<code>fail</code>"을 따옴표 없이 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 2 3 5','pass','MATH'),
                                                                                                                (2804,'BAEKJOON','https://www.acmicpc.net/problem/16154',16154,'배열과 가희','2초','512 MB',20,'<p>길이가 <em>N</em>인 배열 <i>S가</i>&nbsp;주어진다. 다음 쿼리를 수행하는 프로그램을 작성하라.</p>

<p><meta charset="utf-8"></p>

<ul dir="ltr">
	<li><em>u</em> <em>num</em> : <em>S<sub>u</sub></em>를 <em>num</em>으로 바꾼다. 그리고 GCD(<em>S<sub>i</sub></em>, <em>S<sub>j</sub></em>) > 1이면서&nbsp;<em>i</em> < <i>j</i>인 쌍의 개수를 출력한다. 단, GCD(<em>a</em>, <em>b</em>)는 <em>a</em>와 <em>b</em>의 최대공약수를 나타낸다.</li>
</ul>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 배열의 길이 <em>N</em>(1 ≤ <em>N</em>&nbsp;≤ 2 x 10<sup>5</sup>)과 쿼리의 개수 <em>Q</em>(1 ≤ <em>Q</em> ≤ 2 x 10<sup>5</sup>)가 공백으로 구분되어&nbsp;주어진다.</p>

<p>둘째 줄에 배열의 <em>i</em>(i = 0, 1, 2, ..., <em>N</em>-1)번째 원소를 나타내는 정수&nbsp;<em>S<sub>i</sub></em>(1 ≤ <em>S<sub>i</sub></em>&nbsp;≤ 10<sup>6</sup>)가 공백으로 구분되어 주어진다.</p>

<p>셋째 줄부터&nbsp;<em>Q</em>개의 각&nbsp;줄에는 쿼리를 의미하는 정수&nbsp;<em>u</em>(0 ≤ <em>u</em> ≤ <em>N</em>-1),&nbsp;num(1 ≤ <em>num</em> ≤ 10<sup>6</sup>)이 공백으로 구분되어&nbsp;주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p><em>Q</em>개의 각 줄에&nbsp;쿼리의&nbsp;정답을 순서대로&nbsp;한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 1
2 2 2 3
0 3
','2
','MATH'),
                                                                                                                (2805,'BAEKJOON','https://www.acmicpc.net/problem/16155',16155,'업힐과 가희','1초','256 MB',10,'<p>가희는 업힐과 다운힐을 좋아하는 자전거 라이더다. 가희는 위치 <em>X</em><sub>0</sub>, 높이 <em>H</em><sub>0</sub>인<sub>&nbsp;</sub>시작지점에서 출발하여&nbsp;위치 <em>X<sub>i</sub></em>와 높이 <em>H<sub>i</sub></em>가 서로 같거나&nbsp;다른 <em>N</em>개의 체크 포인트를&nbsp;주행할&nbsp;계획을 하고&nbsp;있다.&nbsp;각각의 체크 포인트는 시작지점과&nbsp;수평거리가 가까운 순서대로 1, 2, 3, ..., <em>N</em>이라고 불리우며, 시작지점을 포함한 인접한 체크 포인트들은 서로 일직선으로 연결되어 있다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/b22e77e9-8af0-4d28-918a-43c1761f8fb2/-/preview/" style="width: 352.5px; height: 78.3333px;"></p>

<p>가희는 안전한 라이딩을 위해서, 구간별 평균 기울기를 조사하려고 한다. 그래야 어느&nbsp;지점에서 브레이크를 어떤&nbsp;강도로 잡을지 계획을 세울 수 있기 때문이다.&nbsp;그런데 가희가 다니는 체크 포인트가&nbsp;수십 개나 되다 보니 조사하기가 몹시 귀찮았다. 가희가 조사하려는 어느&nbsp;한 구간의 시작 위치와 끝 위치가 주어졌을 때, 그 구간의 평균 기울기를 구하는 프로그램을 작성해서 가희를 도와주자!</p>

<p dir="ltr"><meta charset="utf-8"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p dir="ltr">첫째 줄에 체크 포인트의 개수&nbsp;<em>N</em>(1 ≤ <i>N</i>&nbsp;≤ 50)이 주어진다.</p>

<p dir="ltr">둘째 줄에 시작점의 위치 <em>X</em><sub>0</sub>와 높이 <em>H</em><sub>0</sub>가&nbsp;공백으로 구분되어 주어지며, 시작점의 위치는&nbsp;항상 0으로 주어진다.</p>

<p dir="ltr">셋째 줄부터 <em>N</em>+2번째 줄까지 각 줄에는&nbsp;체크 포인트 <em>i</em>의&nbsp;위치 <em>X<sub>i</sub></em>와&nbsp;높이 <em>H<sub>i</sub></em>가 공백으로 구분되어 주어진다. 시작점을&nbsp;포함하여 주어지는 위치와 높이는 모두&nbsp;0 이상 5,000 이하의 정수이며,&nbsp;항상 <em>X<sub>i</sub></em><sub>-1</sub>&nbsp;<&nbsp;<em>X<sub>i</sub></em>&nbsp;(단, <em>i</em> ≠&nbsp;0)를 만족한다.</p>

<p dir="ltr"><em>N</em>+3번째 줄에는 가희가 조사하려는 구간의 시작 위치&nbsp;<em>S</em>, 끝 위치&nbsp;<em>E</em>가 주어진다. (<em>X</em><sub>0</sub>&nbsp;≤&nbsp;<em>S</em> < <em>E</em>&nbsp;≤&nbsp;<em>X</em><sub>n</sub>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>가희가 조사하려는 구간의 평균 기울기의 절댓값을 출력하라. 만약 이 값이 정수라면 정수 값을 출력하고, 그렇지 않다면 기약분수 <code>p/q</code>의 형태로 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
0 10
3 4
5 0
0 4
','2
','MATH'),
                                                                                                                (2806,'BAEKJOON','https://www.acmicpc.net/problem/16158',16158,'회식구호','1초','256 MB',13,'<p>진영이는 동아리의 회장이 되어 회식자리에서&nbsp;누구보다 큰 목소리로 자신의&nbsp;각오를&nbsp;보여주고 싶었다. 하지만 구호 P!D!A! Oh! P!D!A! Oh!를 외쳤을 때, 동아리원들마다 생각하는 적절한 목소리 크기가 다르기 때문에,&nbsp;어떤 동아리원들은 진영이의 목소리가 너무 작다고 생각할 수도 있고 반대로&nbsp;시끄럽다고 생각하는 동아리원들도 있을 것이다. 진영이는&nbsp;결국 <em>X&nbsp;</em>이상의 만족도를 갖는 동아리원이 적어도 <em>K</em>명 이상인 목소리 크기&nbsp;중&nbsp;가장 작은 크기로 외치려고 한다. 진영이의 목소리 크기를 <em>D</em>. 동아리원 <em>i</em>가 생각하는&nbsp;적절한 목소리 크기를&nbsp;<em>P<sub>i</sub></em>라고 할 때, 동아리원 <em>i</em>의 만족도는 아래와 같이 정의된다.</p>

<p><meta charset="utf-8"></p>

<p dir="ltr" style="text-align: center;">만족도 = {(<em>P<sub>i</sub></em> - |<em>P<sub>i</sub></em> - <em>D</em>|) / <em>P<sub>i</sub></em>}&nbsp;* 100</p>

<p><em>X</em>이상의 만족도를 갖는 동아리원이 적어도 <em>K</em>명 이상인 목소리 크기&nbsp;중&nbsp;가장 작은 크기를 구하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 <em>N</em>(1 ≤ <em>N</em> ≤ 10<sup>5</sup>), <em>X</em>(1 ≤ <em>X</em> ≤ 100), <em>K</em>(1 ≤ <em>K</em> ≤ <em>N</em>)가&nbsp;공백으로 구분되어 주어진다.</p>

<p>둘째 줄에 동아리원 <em>i</em>가 생각하는 적절한 목소리 크기를 나타내는 <em>N</em>개의&nbsp;정수&nbsp;<em>P<sub>i</sub></em>(1 ≤ <em>P<sub>i</sub></em> ≤ 10<sup><span style="font-size: 10.8333px;">5</span></sup>)가 공백으로 구분되어 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p><em>X&nbsp;</em>이상의 만족도를 갖는 동아리원이 적어도 <em>K</em>명 이상인 목소리 크기&nbsp;중&nbsp;가장 작은 크기를 <em>ANS</em>라고 할 때, <i>ANS</i>가 정수라면 정수 값을 출력하고, 그렇지 않다면 기약분수 <code>p/q</code>의 형태로 출력하라. 만약 그러한 <em>ANS</em>가 존재하지 않는 경우 -1을 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 70 3
70 65 80 50 100
','49
','MATH'),
                                                                                                                (2807,'BAEKJOON','https://www.acmicpc.net/problem/16159',16159,'전광판의 숫자','1.5초','512 MB',10,'<p>신형이네 학교 식당 앞에는 서로 다른 <em>N</em>개의 숫자가 적혀 있고,&nbsp;세로&nbsp;7칸, 가로 6 x <em>N</em>칸으로 이루어진 직사각형 모양의&nbsp;전광판이 있다. 이 전광판의 각 칸에는 전구가 하나씩 들어 있으며, 세로 7칸, 가로 6칸 크기의 전구들을 이용해서&nbsp;숫자를 표현한다. 아래 그림은&nbsp;0부터 9까지의 숫자가 순서대로 적혀 있는 전광판의 모습이다. 검정색 칸은 켜져 있는 전구, 비어있는 칸은 꺼져있는 전구를 의미하며, 같은 숫자를 표현하는 다른 방법은 없다고 가정한다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/6078e13a-f26f-4d8f-bf15-912959dffb05/-/preview/" style="width: 361.667px; height: 44.1667px;"></p>

<p>전광판에 적힌 숫자들을 앞에서부터 순서대로 읽었을 때 나오는 순열을 <em>P</em>라고 하자. 신형이는 문득&nbsp;순열 <em>P</em>의 원소의 순서를&nbsp;바꿔서 얻을 수 있는 순열 중 사전순으로 <em>P</em> 다음에 오는 순열이 어떤 것일지&nbsp;궁금했고, 또 그 순열이 표현된 전광판은 어떤 모습일 지 알고 싶었다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/16e45c60-c719-4b4e-a773-9295abf145de/-/preview/" style="width: 270px; height: 107px;"></p>

<p>예를 들어, 위 그림에 적힌 숫자들을 순서대로 읽으면 {1, 4, 2}가 되고. 이 숫자들의 순서를 바꿔서 만들 수 있는 순열을 사전순으로 나열하면 아래와 같다.</p>

<p>{1, 2, 4}, {1, 4, 2}, {2, 1, 4}, {2, 4, 1}, {4, 1, 2}, {4, 2, 1}</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/88a0b688-982c-4d9e-883f-e9de44899af1/-/preview/" style="width: 270px; height: 107px;"></p>

<p>이 중, 사전순으로 {1, 4, 2} 다음에 오는 순열은 {2, 1, 4}이므로&nbsp;신형이가 궁금해하는 순열은 {2, 1, 4}가 된다. 그리고 이를 전광판으로 표현한 모습은 위와 같다. 학교 식당 앞 전광판의 모습이 주어졌을 때, 신형이가 궁금해하는 순열을 표현한&nbsp;전광판의&nbsp;모습을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p><em>N</em>(1 ≤ <em>N</em> ≤ 10)개의 숫자를 표현하고 있는 세로 7칸, 가로 6 x <em>N</em>칸&nbsp;크기의 전광판의 모습이 7줄에 걸쳐&nbsp;주어진다. 여기서 1은 켜져 있는 전구, 0은 꺼져 있는 전구를 의미한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>학교 식당 앞 전광판의 모습이 주어졌을 때, 전광판 숫자들의 순서를 바꿔서 만들 수 있는 순열 중 사전순으로 다음에 있는&nbsp;순열을 전광판에 표현한 모습을 출력하라. 만약, 사전순으로 다음에 있는 순열이 없다면 "<code>The End</code>"를 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','000000000000000000
000100000100011110
001100001100000010
000100010100011110
000100111110010000
000100000100011110
000000000000000000
','000000000000000000
011110000100000100
000010001100001100
011110000100010100
010000000100111110
011110000100000100
000000000000000000
','MATH'),
                                                                                                                (2812,'BAEKJOON','https://www.acmicpc.net/problem/16193',16193,'차이를 최대로 2','1초','512 MB',14,'<p>N개의 정수로 이루어진 배열 A가 주어진다. 이때, 배열에 들어있는 정수의 순서를 적절히 바꿔서 다음 식의 최댓값을 구하는 프로그램을 작성하시오.</p>

<p style="text-align: center;">|A[0] - A[1]| + |A[1] - A[2]| + ... + |A[N-2] - A[N-1]|</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N (3 ≤ N ≤ 1,000,000)이 주어진다. 둘째 줄에는 배열 A에 들어있는 정수가 주어진다. 배열에 들어있는 정수는 -100,000보다 크거나 같고, 100,000보다 작거나 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 배열에 들어있는 수의 순서를 적절히 바꿔서 얻을 수 있는&nbsp;식의 최댓값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
20 1 15 8 4 10
','62
','MATH'),
                                                                                                                (2823,'BAEKJOON','https://www.acmicpc.net/problem/16199',16199,'나이 계산하기','1초','128 MB',2,'<p>한국에서 나이는 총 3가지 종류가 있다.</p>

<ul>
	<li>만 나이: 국제적인 표준 방법이다. 한국에서도 법에서는 만 나이만을 사용한다.</li>
	<li>세는 나이: 한국에서 보통 나이를 물어보면 세는 나이를 의미한다.</li>
	<li>연 나이: 법률에서 일괄적으로 사람을 구분하기 위해서 사용하는 나이이다.</li>
</ul>

<p>만 나이는 생일을 기준으로 계산한다. 어떤 사람이 태어났을 때, 그 사람의 나이는 0세이고, 생일이 지날 때마다&nbsp;1세가 증가한다. 예를 들어, 생일이 2003년 3월 5일인 사람은 2004년 3월 4일까지 0세이고, 2004년 3월 5일부터 2005년 3월 4일까지 1세이다.</p>

<p>세는 나이는 생년을 기준으로 계산한다. 어떤 사람이 태어났을 때, 그 사람의 나이는 1세이고, 연도가 바뀔 때마다 1세가 증가한다. 예를 들어, 생일이 2003년 3월 5일인 사람은 2003년 12월 31일까지 1세이고, 2004년 1월 1일부터 2004년 12월 31일까지 2세이다.</p>

<p>연 나이는 생년을 기준으로 계산하고, 현재 연도에서 생년을 뺀 값이다. 예를 들어, 생일이 2003년 3월 5일인 사람은 2003년 12월 31일까지 0세이고, 2004년 1월 1일부터 2004년 12월 31일까지 1세이다.</p>

<p>어떤 사람의 생년월일과 기준 날짜가 주어졌을 때, 기준 날짜를 기준으로 그 사람의 만 나이, 세는 나이, 연 나이를 모두 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 어떤 사람이 태어난 연도, 월, 일이 주어진다. 생년월일은 공백으로 구분되어져 있고, 항상 올바른 날짜만 주어진다.</p>

<p>둘째 줄에 기준 날짜가 주어진다. 기준 날짜도 공백으로 구분되어져 있으며, 올바른 날짜만 주어진다.</p>

<p>입력으로 주어지는 생년월일은 기준 날짜와 같거나 그 이전이다.</p>

<p>입력으로 주어지는 연도는 1900년보다 크거나 같고, 2100년보다 작거나 같다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 만 나이, 둘째 줄에 세는 나이, 셋째 줄에 연 나이를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2003 3 5
2003 4 5
','0
1
0
','MATH'),
                                                                                                                (2814,'BAEKJOON','https://www.acmicpc.net/problem/16201',16201,'발코니 공사','2초','512 MB',15,'<p>앨버트는 공구점을 운영하는 친구로부터 1×2 크기의 타일을 매우 많이 받았다. 이 타일은 아래와 같이 가로로 긴 직사각형 형태이며, 두 개의&nbsp;정사각형 칸이 두 개 이어 붙여져 있다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/c0659975-ce96-49cf-a854-ea7cbdb1d9e1/-/preview/" style="width: 100px; height: 50px;"></p>

<p>마침 별장의 정원 발코니 바닥이 부서져서 수리하려던 참이라, 얻은 타일을 이용해 빈 공간을 채우려고 한다. 정원 발코니 바닥은 직사각형 모양이고, R×C개의 정사각형 칸으로 나누어져 있다. 아래 그림은 R = 4, C = 5인 경우이다. 1×2 타일을 이용하면 좌우로 인접한 두 칸을 완전히 덮어서 채울 수 있지만, 타일을 회전해서 상하 두 칸을 덮을 수는 없다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/5618eb32-5cf4-4ef6-8d7c-87b8d31db449/-/preview/" style="width: 250px; height: 200px;"></p>

<p>칠해져 있는 칸은 부서지지 않은 칸, 칠해져 있지 않은 칸은 부서진 칸이다. 위의 그림에서는 6개의 칸이 부서지지 않은 칸, 14개의 칸은 부서진 칸이다.</p>

<p>이제, 부서진 칸을 1×2 크기의 타일만 가지고 채워 넣어야 한다. 크기가 1×2이기 때문에, 모든 칸을 채울 수 없을 수도 있지만, 최대한 많은 칸에 타일을 채워 넣으려고 한다.&nbsp;</p>

<p>타일은 부서진 칸 두 칸을 모두 덮어야 하고, 두 타일이 겹치면 안 된다. 또한, 발코니의 경계선을 넘어가도 안되고, 부서지지 않은 칸을 덮어도 안 된다.</p>

<p>위의 그림의 경우에 6개의 타일을 이용해서&nbsp;부서진 칸을 최대한 많이 채울 수 있다. 모든 타일은 똑같이 생겨서 구분되지 않지만, 편의상 번호를 붙여 구분했다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/1b9bcc14-eeb5-49bf-84ce-1c56adca2d67/-/preview/" style="width: 250px; height: 200px;"></p>

<p>또 다른 두 가지 방법으로 아래와 같이 채우는 것도 가능하다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/cd139655-1613-410a-89cc-02b188b91c50/-/preview/" style="width: 250px; height: 200px;">&nbsp;&nbsp;<img alt="" src="https://upload.acmicpc.net/89356494-374a-43ef-8c55-64de13c4fe84/-/preview/" style="width: 250px; height: 200px;"></p>

<p>별장 발코니 바닥을 채울 수 있는 방법의 수를 구하는 프로그램을 작성하시오. 두 방법이 있을 때, 적어도 한 칸에 대해서 한 방법에선 타일로 채웠고, 다른 방법에선 채우지 않은 경우가 있다면, 두 방법은 다른 방법이라고 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 별장 발코니의 크기 R, C와 부서지지 않은 칸의 개수 K가 주어진다. (1 ≤ R ≤ 1,000,000,000, 2 ≤ C ≤ 1,000,000,000, 0&nbsp;≤ K ≤ 1,000)</p>

<p>둘째 줄부터 K개의 줄에는 부서지지 않은 칸의 위치가 공백으로 구분해 주어진다. 위치는 행과 열의 번호로 나타낸다. 행은 1부터 R까지, 열은 1부터 C까지이다. 똑같은 위치가 여러 번 주어지는 경우는 없다.</p>

<p>적어도 하나의 타일을 놓을 수 있는 경우만 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>총 두 개의 수를 출력해야 한다. 첫 번째 수는 가장 많은 타일을 사용한 경우에 사용된 타일의 수, 두 번째 수는 그때 방법의 수이다. 단, 방법의 수가 매우 클 수 있기 때문에, 1,000,000,007로 나눈 나머지를 출력한다. 타일의 수는 항상 10<sup>18</sup>이하이기 때문에, 나누지 않아야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 2 0
','2 1
','MATH'),
                                                                                                                (2815,'BAEKJOON','https://www.acmicpc.net/problem/16204',16204,'카드 뽑기','1초','512 MB',2,'<p>앞 면에 O와 X가 적혀있는 카드 N개가 있다. N개의 카드 중 M개의 카드의 앞면에는 O가 한 개 적혀있고, 나머지 N-M개의 카드의 앞면에는 X가 한 개 적혀있다. 카드의 뒷 면은 두 종류의 카드 모두&nbsp;같은 모양이라 구분할 수 없다.</p>

<p>카드의 뒷 면에 O나 X를 하나씩 적으려고 한다. 이 때, O는 K개, X는 N-K개 적으려고 한다.</p>

<p>앞 면과 뒷 면에 같은 모양이 적혀있는 카드의 최대 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, M, K가 주어진다. (1 ≤ N ≤ 1,000,000, 0 ≤ M, K ≤ N)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 앞 면과 뒷 면에 같은 모양이 적혀있는 카드의 최대 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 3 2
','3
','MATH'),
                                                                                                                (2817,'BAEKJOON','https://www.acmicpc.net/problem/16208',16208,'귀찮음','1초','512 MB',6,'<p>현우는 무슨 이유에선지 길이 a<sub>1</sub>, ..., a<sub>n</sub>의, 총 n개의 쇠막대가 필요해졌다. 하지만 그가 가진 것은 길이 a<sub>1</sub>+...+a<sub>n</sub>의 하나의 쇠막대뿐이었다. 현우는&nbsp;이 막대를 직접 잘라서 원래 필요하던&nbsp;n개의 쇠막대를 만들 것이다. 길이 x+y인 막대를 길이 x, y인 두 개의 막대로 자를 때에는 만들려 하는 두 막대의&nbsp;길이의 곱인 xy의 비용이 든다. 현우는 최소의 비용으로 이 쇠막대를 잘라서&nbsp;a<sub>1</sub>, ..., a<sub>n</sub>의&nbsp;n개의 쇠막대를 얻고 싶다.</p>

<p>그런데 현우는 이 비용이 얼마나 들지&nbsp;잘 모르겠다. 그래서 여러분이 막대를 자르는 최소 비용을 계산하는 프로그램을 작성해주면 코드잼 경시대회 점수를 30점 올려주겠다고 제안했다. 어떤가?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 현우가 원하는&nbsp;쇠막대의 수를 나타내는 정수&nbsp;n이 주어진다. (1 ≤ n ≤ 500,000)</p>

<p>둘째 줄에는 현우가 원하는&nbsp;쇠막대의 길이를 나타내는 정수 a<sub>1</sub>, ..., a<sub>n</sub>이 주어진다. (1 ≤ a<sub>i</sub>&nbsp;≤ 101)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>현우가 필요한&nbsp;n개의 쇠막대를 얻는 최소의 비용을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
3 5 4 2
','71
','MATH'),
                                                                                                                (2818,'BAEKJOON','https://www.acmicpc.net/problem/16214',16214,'N과 M','1초(추가시간없음)','1024 MB',21,'<p>임의의 자연수 N과 M이 주어져 있다. A^B를 A의 B승이라고 할 때, 수열 N, N^N, N^(N^N), N^(N^(N^N)), ... 의 수들을 M으로 나눈 나머지는 수열의 어느 지점부터 항상 일정한 값을 가진다. N과 M이 주어져 있을 때, 이 일정한 나머지 값을 계산하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 질의의 개수 T가 주어진다. 질의는 1개 이상 1000개 이하이다.</p>

<p>두 번째 줄부터 T+1번째 줄까지는 각 질의에 해당하는 자연수 N과 M이 주어진다. N과 M은 둘 다 10^9 이하이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 질의의 N과 M에 대해, N^(N^(N^(N^...))의 값을 M으로 나눈 나머지를 구하여라. 나머지의 값은 0 이상 M 미만이어야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 1
3 4
28 43
370 205','0
3
36
165','MATH'),
                                                                                                                (2819,'BAEKJOON','https://www.acmicpc.net/problem/16218',16218,'힘 겨루기','1초(추가시간없음)','4 MB',7,'<p>서기 2045년, 세상은 어마무시하게 발전해서 엄청나게 힘이 강한 AI가 널리 보급되었다. 헬스를 열심히 하던 junie는 자신의 힘을 확인하기 위해서 코드네임 “TEST_SUBJECT_107”과 힘 겨루기를 하기로 했다.</p>

<p>힘 겨루기는 총 N개의 라운드로 구성되어있고, i라운드에 junie는 A<sub>i</sub>의 힘을, TEST_SUBJECT_107는 B<sub>i</sub>의 힘을 준다. 둘 다 K 이상의 힘을 버티지 못하기 때문에 지금까지 준 힘 (누적힘)이 K보다 크거나 같아지면 상대가 타격을 받고 게임이 종료된다. 또한 junie가 TEST_SUBJECT_107보다 많은 누적힘을 주고 그 차이가 50 이상이 되면 인간의 고등한 능력을 사용한 한판승으로 게임이 끝난다.&nbsp;힘 겨루기의 승자는 후술할 규칙에 따라 결정된다.</p>

<p>junie는 TEST_SUBJECT_107를 못 이긴다는 생각에 비장의 필살기 "OverPower"를 준비했다. 이 필살기는 한 번만 사용할 수 있고, i번째 라운드에서 사용하면&nbsp;junie가 A<sub>i</sub> 대신 1.5A<sub>i</sub>의 힘을 줄 수 있다. 그 값이 정수가 아닐 경우 정수로 버림한다. 하지만&nbsp;이 필살기에는 부작용이 있어서, junie가 추가로 준 힘의 양만큼 다음 라운드에서 힘이 빠지게 된다.&nbsp;그 결과로 음수의 힘을 줄 수도 있으며, 이것도 누적힘에 반영된다.</p>

<p>예를 들어서, 첫 번째 라운드에 10, 두 번째 라운드에 18의 힘을 주고, 첫 번째 라운드에서 OverPower를 사용한다고 하자. 그러면 첫 번째 라운드에서 15의 힘을 주고, 두 번째 라운드에서 5의 힘을 뺀 13의 힘을 주게 된다.</p>

<p>힘 겨루기의 승자는 다음과 같이 결정된다. 한 쪽만 상대에게 타격을 주었을 경우 그 쪽이 승리한다.&nbsp;두 선수가 동시에 타격을 받으면 OverPower의 사용 유무에 따라&nbsp;승패가 달라진다. OverPower를 사용했을 경우 TEST_SUBJECT_107의 승리가 되며, 사용하지 않았을 경우 junie의 승리가 된다. 두 선수가 동시에 타격을 받지 않고 한판승으로 게임이 끝날 경우 junie가 승리한다. N라운드가 끝날 때까지&nbsp;아무도 타격을 주지 않고 한판승도 일어나지 않으면 무승부로 끝난다.</p>

<p dir="ltr">junie는 너무 똑똑해서 어떻게든 지지 않으려고 한다. 각 라운드마다 junie와 TEST_SUBJECT_107이 주는 힘이 주어질 때, 과연 힘 겨루기의 승자는 누가 될까?</p>

<p dir="ltr"><b>메모리 제한에 유의하라.</b></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>N(1&nbsp;≤&nbsp;??????N ≤&nbsp;400000)과 K(100 ≤&nbsp;K ≤&nbsp;1000)이 주어진다</p>

<p><meta charset="utf-8"></p>

<p dir="ltr"><span>다음 줄부터 N개의 줄에 junie와 TEST_SUBJECT_107의 힘이 주어진다. 모든 힘은 0 이상 60 이하이다.</span></p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>최종 승리자의 숫자를 출력한다.</p>

<p>junie의 승리는 1, TEST_SUBJECT_107의 승리는 -1, 무승부는 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 508
22 31
36 5
37 3','1','MATH'),
                                                                                                                (2820,'BAEKJOON','https://www.acmicpc.net/problem/16233',16233,'수학 문제','1초(추가시간없음)','1024 MB',15,'<p>현재 칠판에 합이 총 N인 숫자들이 적혀 있다. 종영이는 칠판에 적힌 모든 숫자의 합을 적으라고 선생님께 명령받았다. 하지만, 당당하게 N을 쓴 종영이는, N을 씀으로써 숫자들의 합이 늘어나서 혼이 나고 말았다. 결국&nbsp;종영이는 어이가 없어 때려치고 이 일을 당신에게 부탁하기로 했다. 종영이를 대신하여 이 문제를 해결하자.</p>

<p>즉 N에 대해서 <code>N+(X의 각 자리 숫자의 합) = X</code>를 만족하는 X 중 가장 작은 X를 구하면 된다. 한번은 너무 쉬우니까 T번 해결하여 선생님의 공격에 미리 대비하도록 하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 T가 주어진다. (1&nbsp;≤ T ≤&nbsp;10<sup>6</sup>)</p>

<p>T개의 줄에 걸쳐&nbsp;각&nbsp;문제의 N이 주어진다. (1&nbsp;≤ N ≤&nbsp;10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>공백으로 구분해, 순서대로 문제의 답을 출력한다. 만족하는 답이 없으면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
9
10
99','10 -1 100','MATH'),
                                                                                                                (2824,'BAEKJOON','https://www.acmicpc.net/problem/16237',16237,'이삿짐센터','2초','512 MB',7,'<p>알렉스는 이삿짐센터를 운영하고 있다. 오늘 이사해야 하는 집에는 무게가 1kg인 물건이 A개, 2kg인 물건이 B개, 3kg인 물건이 C개, 4kg인 물건이 D개, 5kg인 물건이 E개 있다.</p>

<p>물건을 운반하려면 바구니에 물건을 담아야 하는데, 바구니에는 최대 5kg까지 물건을 담을 수 있다. 알렉스는 모든 물건을 담는데 필요한 바구니 개수를 최소로 하려고 한다.</p>

<p>가방 하나에 담은 물건 무게의 합은 5kg을 넘을 수 없다.</p>

<p>물건의 무게가 주어졌을 때, 모든 물건을 담는데 필요한 바구니 개수의 최솟값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 A, B, C, D, E가 주어진다. (0 ≤ A, B, C, D, E ≤ 1,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 모든 물건을 담는데 필요한 바구니 개수의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 0 0 0 0
','1
','MATH'),
                                                                                                                (2928,'BAEKJOON','https://www.acmicpc.net/problem/16394',16394,'홍익대학교','1초','256 MB',1,'<p>홍익대학교는 1946년에 개교하였다.</p>

<p>특정 년도가 주어졌을 때, 그 해가 개교 몇 주년인지 출력하라.</p>

<p>단, 홍익대학교는 없어지지 않는다고 가정한다.</p>

<p>문제는 C, C++, JAVA 또는 Python3을 이용하여 해결한다.</p>

<ol>
	<li>C
	<ol type="a">
		<li>입력
		<ul>
			<li>scanf 사용</li>
			<li>정수 %d, 실수 %f, 문자열 %s 사용</li>
			<li>scanf("%d", &amp;var);</li>
		</ul>
		</li>
		<li>출력
		<ul>
			<li>정수 %d, 실수 %f, 문자열 %s 사용</li>
			<li>예) printf("%d", var);</li>
		</ul>
		</li>
		<li>필수 라이브러리 stdio.h</li>
	</ol>
	</li>
	<li>C++
	<ol type="a">
		<li>입력
		<ul>
			<li>cin 사용</li>
			<li>예) cin >> var;</li>
		</ul>
		</li>
		<li>출력
		<ul>
			<li>cout 사용</li>
			<li>예) cout << var;</li>
		</ul>
		</li>
		<li>필수 라이브러리 iostream</li>
		<li>권장사항
		<ul>
			<li>using namespace std;</li>
			<li>ios::sync_with_stdio(false);</li>
			<li>cin.tie(NULL);</li>
		</ul>
		</li>
	</ol>
	</li>
	<li>Java
	<ol type="a">
		<li>입력
		<ul>
			<li>Scanner 사용</li>
			<li>Scanner sc = new Scanner(System.in); 			정수: sc.nextInt(); 실수: sc.nextDouble(); 문자열: sc.nextLine(); 또는 sc.next();</li>
		</ul>
		</li>
		<li>출력
		<ul>
			<li>System.out.println(var);</li>
		</ul>
		</li>
		<li>필수 라이브러리 java.util.Scanner</li>
	</ol>
	</li>
</ol>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력으로 첫 줄에 특정 년도를 알리는 정수 N이 주어진다. 정수 N은 1,946 부터 1,000,000 사이의 값이다. (1,946 ≤ N ≤ 1,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력으로 홍익대학교의 개교 주년을 나타내는 정수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2018
','72
','MATH'),
                                                                                                                (2960,'BAEKJOON','https://www.acmicpc.net/problem/16395',16395,'파스칼의 삼각형','1초','256 MB',6,'<p>파스칼의 삼각형은 이항계수를 삼각형 형태로 배열한 것인데,&nbsp;블레즈 파스칼(1623-1662)을 따라&nbsp;이름 붙여졌다.</p>

<p>단순한 형태로, 파스칼의 삼각형은 다음과 같은 방법으로 만들 수 있다.</p>

<ol>
	<li>N번째 행에는 N개의 수가 있다.</li>
	<li>첫 번째 행은 1이다.</li>
	<li>두 번째 행부터, 각 행의 양 끝의 값은 1이고, 나머지 수의 값은 바로 위 행의 인접한 두 수의 합이다.</li>
</ol>

<p>예를 들어, n=3이면 3번째 행의 2번째 수는 위 행의 인접한 두 수 (1과 1)을 더해서 만든다.&nbsp;</p>

<p>n=6일 때, 파스칼 삼각형의 6번째 행의 10은 5번째 행의 인접한 두 수(4와 6)을 더해서 구한다.&nbsp;</p>

<p style="text-align: center;"><img alt="" src="https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/Pascal%27s_triangle_5.svg/540px-Pascal%27s_triangle_5.svg.png" style="width: 300px; height: 216px;"></p>

<p>같은 방식으로 n=11일 때, 다음과 같은 파스칼의 삼각형을 만들 수 있다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.wikimedia.org/wikipedia/commons/thumb/4/4b/Pascal_triangle.svg/588px-Pascal_triangle.svg.png" style="width: 340px; height: 145px;"></p>

<p>정수 n과 k가 주어졌을 때 파스칼의 삼각형에 있는 n번째 행에서 k번째 수를 출력하는 프로그램을 작성하시오. &nbsp;이때, 이 수는&nbsp;이항계수 C(n-1,k-1)임에 주의하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 n과 k가 빈칸을 사이에 두고 차례로 주어진다. 이 때, 1 ≤ k ≤ n ≤ 30을 만족한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 n번째 행에 있는 k번째 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 3
','6
','MATH'),
                                                                                                                (2931,'BAEKJOON','https://www.acmicpc.net/problem/16400',16400,'소수 화폐','1초','256 MB',11,'<p>소수나라는 특이하게 모든 소수(prime number)를 화폐 단위로 사용한다.</p>

<p>소수나라에 놀러 온 하나는 관광을 하다가 가격이 N인 물건을 발견하고 너무 마음에 들어&nbsp;999983원을 내고 구매하려고 했다. 하지만 상점 주인이 거스름돈이 없어 정확히 N원을 지불해달라고 하였다.</p>

<p>물건을 구매하려던 하나는 소수나라의 화폐를 이용하여 N원을 정확히 만들 수 있는 방법의 가짓수가 얼마나&nbsp;되는지 궁금해졌다.</p>

<p>하나를 도와 N원을 지불하기 위한 가짓수가 얼마나 되는지 구해보자.</p>

<p>단, 하나는 소수나라의 모든 화폐가 무한정 있다고 가정한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>구매하려고하는 물건의 값 N(2 ≤ N ≤ 40,000, N은 정수)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>소수나라의 화폐를 이용하여 지불할 수 있는 방법의 수를 출력한다.</p>

<p>단, 지불할 수 있는 방법의 수가 매우 크기때문에,&nbsp;123,456,789로 나눈 나머지 값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>8원짜리 물건은 아래와 같이 3가지 방법으로 구할 수 있다.</p>

<p>1. 2원 4개</p>

<p>2. 2원 1개, 3원 2개</p>

<p>3. 3원 1개, 5원 1개</p>

				</div>
				</div>','8
','3
','MATH'),
                                                                                                                (2943,'BAEKJOON','https://www.acmicpc.net/problem/16403',16403,'놀이동산','1초','256 MB',16,'<p>준용이는 ㅇㅇ신도시에 새로 오픈할 놀이동산인 Seungbum&nbsp;Amusement Park, 줄여서 SAP의 홍보팀 브레인이다. 준용이는 미리 입장권을 예약한 ㅇㅇ시 시민들에게 교통비를 제공하는 이벤트를 준비중이다. 하지만 깐깐한 SAP의 재무팀은 경비를 최소로 하지 않으면 이벤트를 진행할 수 없다는 입장이다. 이정도 계산은 준용이에게 너무 쉬운 문제지만 계산을 어려워하는 팀원을 위해 프로그램으로 만들려고 한다.</p>

<p>ㅇㅇ시는 0번부터 10,000번까지 순서대로 도로를 따라 있는 블록으로 이루어져 있고, 놀이동산은 0번 블록에 있다.</p>

<p>ㅇㅇ시의 교통수단은 택시와 셔틀버스 두 가지밖에 없다.</p>

<p>택시는 기본 요금 없이 한 블록을 이동할 때 마다 비용이 추가되는 완벽한 거리비례 요금제로서, 한 블록을 이동하는데 A원을 낸다. 하지만 이런 합리적인 요금제를 위해 비용을 절감한 결과 ㅇㅇ시의 택시는 손님이 한 명 밖에 탈 수 없는 크기가 되어버렸다.</p>

<p>셔틀버스는 거리에 상관 없이 B원을 내면 40명까지 사용 가능하다. 하지만 중간에 정차하지 않고 특정 블록에서 바로 놀이동산으로 이동한다.</p>

<p>예를 들어, 블록당 택시요금 A=1원, 버스요금 B=20원이고, 입장권을 예약한 7명의 사람이 각각 10번, 30번, 20번, 10번, 90번, 100번, 110번 블록에 산다고 하자. 7명의 사람이 모두 택시를 타고 이동하면 370원의 비용이 든다. 하지만 적절한 위치에 버스를 부르면 다음과 같이 비용을 줄일 수 있다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/749b07ab-fe78-4218-9839-4640cfe0cc23/-/preview/" style="width: 356.667px; height: 86.6667px;"></p>

<ol>
	<li>20번 블록에 사는 사람이 30번 블록으로 택시를 타고 간 후, 30번 블록에서 두 사람이 버스를 타고 놀이공원으로 이동한다. 그 비용은 총 30원이다.</li>
	<li>90번과 110번 블록에 사는 사람이 100번 블록으로 택시를 타고 간 후, 100번 블록에서 세 사람이 버스를 타고 놀이공원으로 이동한다. 그 비용은 총 40원이다.</li>
	<li>10번 블록에 사는 두 사람이 버스를 타고 이동한다. 그 비용은 총 20원이다. 두 명이 따로 택시를 타고 가도 20원으로 결과는 같다.</li>
</ol>

<p>위의 경우 총 90원의 비용으로 모두 놀이동산에 도착할 수 있다.</p>

<p>놀이동산을 예약한 시민의 수 N, 각 시민이 살고 있는 블록, 한 블록당 추가되는 택시비용 A, 버스 비용 B가 주어졌을 때 드는 경비의 최솟값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 놀이동산을 예약한 시민의 수 N(1 ≤ N ≤ 10000)이&nbsp;주어진다.</p>

<p>둘째 줄에는 한 블록당 추가되는 택시 비용 A와 버스를 예약할 때 드는 비용 B가 빈칸을 사이에 두고 차례로 주어진다. (0 ≤ A ≤ 1,000, 0 ≤ B ≤ 100,000)</p>

<p>셋째 줄에 각 시민이 사는 블록의 번호가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 모든 인원이 놀이동산으로 이동하는데 드는 총 경비의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7
1 20
10 30 20 10 90 100 110
','90
','MATH'),
                                                                                                                (2942,'BAEKJOON','https://www.acmicpc.net/problem/16412',16412,'Heir’s Dilemma','2초','512 MB',4,'<p>Your favorite uncle has passed away, leaving you a large estate. Bank account numbers, locations of safe deposit boxes, and GPS coordinates to buried treasures are all locked in an electronic safe in your uncle’s office behind a picture of dogs playing poker. One day he showed you the safe with its 9 digit keypad (digits 1 through 9). He told you he wasn’t worried about anyone breaking into his safe because it’s equipped with a self-destruct mechanism that will destroy the contents if anyone attempts a forced entry.</p>

<p>The combination is a sequence of six decimal digits. If an incorrect combination is entered the safe enforces a thirty-second delay before accepting another combination. So a brute-force effort to try all six-digit combinations could take months.</p>

<p>Your uncle had planned to give you, his sole heir, the combination one day, but due to an unfortunate hanggliding accident in Kansas, you now must rely on your deductive and programming skills to access the key to your inheritance.</p>

<p>Here’s what you know:</p>

<ul>
	<li>The combination c is a sequence of six non-zero decimal digits.</li>
	<li>Your mother recalls that she heard your uncle mention that all the digits are different.</li>
	<li>You remember that your uncle once said that the six digit number was divisible by each of its individual digits.</li>
</ul>

<p>An example satisfying these conditions is 123864: all six digits differ, and you can check that 123864 is divisible by each of 1, 2, 3, 8, 6 and 4.</p>

<p>Even with the helpful data, it could take a while to get to open the safe, so the task is likely to be split into several sessions with separate ranges being tested. How many combinations are there to try in the range given?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>The input is a line with two space-separated integers L and H, where 123 456 ≤ L < H ≤ 987 654</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>Print one integer, the total number of possible combinations to the safe, where each combination c must satisfy the three constraints above, and lie in the range L ≤ c ≤ H.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','123864 123865
','1
','MATH'),
                                                                                                                (2972,'BAEKJOON','https://www.acmicpc.net/problem/16430',16430,'제리와 톰','1초','128 MB',1,'<p>톰은 마트에서 치즈 1kg 을 사서 집으로 돌아왔습니다.</p>

<p>그런데 톰이 한눈을 판 사이 제리가 와서&nbsp;<em>A</em>/<em>B&nbsp;</em>kg&nbsp;만큼 훔쳐갔습니다.</p>

<p>제리가 치즈를 훔쳐 간 후 톰이 가지고 있는 치즈의 무게는 얼마인가요?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 두 정수 <em>A</em>, <em>B</em>&nbsp;(1 ≤&nbsp;<em>A</em> <&nbsp;<em>B</em> ≤ 9)&nbsp;가 주어집니다.&nbsp;</p>

<p><em>A</em>와 <em>B</em>는 서로소임이 보장됩니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>정답을 기약분수로 표현했을 때 <em>P</em>/<em>Q</em> kg 이라면 첫 번째 줄에 <em>P</em>와&nbsp;<em>Q</em>를 공백을 사이에 두고 출력합니다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 7
','5 7
','MATH'),
                                                                                                                (2977,'BAEKJOON','https://www.acmicpc.net/problem/16431',16431,'베시와 데이지','1초','128 MB',3,'<p>농부 존은 소 베시와 소 데이지를 키우고 있습니다.</p>

<p>두 소는 자유롭게 1,000 × 1,000 2차원 격자 목초지를 누비며 놀고 있습니다. 농부 존이 종을 치면 베시와 데이지가 농부 존이 있는 곳으로 달려갑니다.&nbsp;</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/9ede513c-e62e-464d-9ac9-e1d1408cf770/-/preview/" style="width: 335.833px; height: 124.167px;"></p>

<p style="text-align: center;">베시가 B에 있을 때 1초 후에 움직일 수 있는 칸과 데이지가 D에 있을 때 1초 후에 움직일 수 있는 칸을 나타낸 그림<br>
&nbsp;</p>

<p>베시는 1초 후에 꼭짓점을 공유하는 8개의 칸 중 하나로 이동할 수 있고 데이지는 1초 후에 변을 공유하는 4개의 칸 중 하나로 이동할 수 있습니다. 칸들은 충분히 넓어서 칸 하나에도 베시와 데이지 그리고 존이 같이 서 있을 수 있습니다.&nbsp;</p>

<p>베시와 데이지 두&nbsp;소 모두 최단 경로로 존에게 갈 때 어떤 소가 더 빨리 도착할까요?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 베시의 좌표 <em>B<sub>r</sub></em>, <em>B<sub>c</sub></em>&nbsp;(1 ≤ <em>B<sub>r</sub></em>, <em>B<sub>c</sub></em> ≤ 1,000) 이 주어집니다.</p>

<p>두 번째 줄에 데이지의 좌표 <em>D<sub>r</sub></em>, <em>D<sub>c</sub></em> (1 ≤ <em>D<sub>r</sub></em>, <em>D<sub>c</sub></em> ≤ 1,000) 이 주어집니다.</p>

<p>세 번째 줄에 존의 좌표 <em>J<sub>r</sub></em>, <em>J<sub>c</sub></em> (1 ≤ <em>J<sub>r</sub></em>, <em>J<sub>c</sub></em> ≤ 1,000) 이 주어집니다.</p>

<p>처음에 존이 있는 칸에는 베시와 데이지가 없음이 보장됩니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 베시가 더 빨리 도착하면 <code>bessie</code>, 데이지가 더 빨리 도착하면 <code>daisy</code>, 동시에 도착하면 <code>tie</code> 를 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 5
1 1
2 3','bessie','MATH'),
                                                                                                                (2971,'BAEKJOON','https://www.acmicpc.net/problem/16440',16440,'제이크와 케이크','1초','128 MB',16,'<p>제이크는 레이니콘으로부터 긴 모양의 케이크를&nbsp;선물 받았습니다.&nbsp;</p>

<p>케이크 위에는 <em>N</em>개의 과일 조각이 올려져 있는데 케이크 위에는 딸기 <em>N</em>/2개와 키위 <em>N</em>/2개가 일정한 간격을 두고 일렬로 올려져 있습니다. 여기서 <em>N</em>은 4의 배수입니다.</p>

<p>제이크는 케이크를 핀과 올려진 과일의 종류를&nbsp;포함하여 케이크를 정확히 절반씩 먹기 위해 받은 케이크를 잘라서 나누어 가지려고 합니다. 이때 제이크가 받은 딸기가 <em>N</em>/4개여야&nbsp;하며 키위도&nbsp;<em>N</em>/4개 있어야 합니다. 핀도 제이크와 같은 개수의 딸기와 키위를 받아야 합니다.</p>

<p>제이크와 핀은 케이크를&nbsp;자르기&nbsp;귀찮으므로 그&nbsp;횟수를 최소화하고자 합니다. 핀과 제이크가&nbsp;똑같이 나누어&nbsp;먹기 위해 케이크를 잘라야 하는 최소 횟수와 방법을 알려주세요.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 케이크 위에 있는 과일의 개수&nbsp;<em>N</em>&nbsp;(4 ≤&nbsp;<em>N</em> ≤ 200,000)&nbsp;이 주어집니다.</p>

<p>두 번째 줄에는 케이크의 정보가 담긴 길이가 <em>N</em>인 문자열이 주어집니다. <em>i</em>번째 문자가 <code>s</code>이면 <em>i</em>번째 칸에는 딸기가 <code>k</code>이면 키위가 올려져 있음을 의미합니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 최소 횟수 <em>k</em>&nbsp;(1 ≤ <em>k</em> ≤ <em>N&nbsp;</em>- 1)&nbsp;를 출력합니다.</p>

<p>두 번째 줄에는 <em>k</em>개의 정수 <em>c<sub>1</sub>, c<sub>2</sub>, ..., c<sub>k</sub></em>&nbsp;(1 ≤ <em>c<sub>1</sub></em>&nbsp;< <em>c<sub>2</sub></em>&nbsp;< ... < <em>c<sub>k</sub></em>&nbsp;&nbsp;≤ <em>N&nbsp;</em>- 1)&nbsp;를 출력합니다. 여기서 <em>c<sub>i</sub></em>는 <em>c<sub>i&nbsp;</sub></em>번째 과일이 있는 곳과 <em>c<sub>i&nbsp;</sub></em>+1번째 과일이 있는 곳 사이를 자른다는 의미입니다.</p>

<p>자르는 방법이 여러 개인 경우 그 중 하나만&nbsp;출력합니다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
skks','1
2','MATH'),
                                                                                                                (2975,'BAEKJOON','https://www.acmicpc.net/problem/16463',16463,'13일의 금요일','1초','512 MB',8,'<p>재운이는 이 구역의 소문난 오컬트 매니아다. 늘 도서관에서 오컬트 서적을 읽고&nbsp;외계문물 스터디에 참여하던 재운이는 어느 날 엄청난 소문을 듣게 되었다. 소문의 정체는 지구의 미래에 관한 예언이었는데, 그 예언에 따르면&nbsp;2019년부터 다가오는 13일의 금요일의 수를 세지 않으면&nbsp;지구가 멸망할 수 있다고 한다. 평소 배려심이 넘치는 재운이는&nbsp;자신 뿐만 아니라&nbsp;자신의 후세들을 위해&nbsp;앞으로 기원 후 100,000년 까지&nbsp;누적되는 13일의 금요일의 수를 매 년도마다 기록하기로 했다. 하지만 계산에 약한 재운이는 온갖 계산을&nbsp;우리에게 떠맡겼다. 재운이를 도와&nbsp;2019년부터 N년까지 누적되는 13일의 금요일의 수를 계산하여 알려주자.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 N이 입력된다. (2019&nbsp;≤ N ≤&nbsp;100,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 2019년부터 N년까지 누적되는 13일의 금요일의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<ul>
	<li>2019년 1월 1일은 화요일이다.</li>
	<li>2월이 29일까지 존재하는 해를 윤년이라고 한다.</li>
	<li>일반적으로 1월부터 12월은 각각 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31일까지 있다.&nbsp;윤년인 해에는, 2월이 28일까지가 아닌 29일까지 있다.</li>
	<li>400의 배수 연도는 윤년이다.</li>
	<li>400의 배수가 아니면서 100의 배수인 연도는 윤년이 아니다.</li>
	<li>100의 배수가 아니면서 4의 배수인 연도는 윤년이다.</li>
	<li>그 외의 연도는 윤년이 아니다.</li>
</ul>

				</div>
				</div>','2021
','5
','MATH'),
                                                                                                                (2976,'BAEKJOON','https://www.acmicpc.net/problem/16464',16464,'가주아','1초','512 MB',9,'<p>평소 도박을 즐겨하는 병규는 방학을 맞아, 한국 최대의 카지노 코스모스랜드를 찾았다. 일확천금의 꿈에 부풀어 여러 게임에 참여했지만, 입장 한 시간 만에 재산의 절반을 탕진하고 말았다.</p>

<p>평소 블랙잭에 자신이 있었던 병규는, 마지막 희망으로 블랙잭 테이블에 앉았다. 코스모스랜드에서는 일반 블랙잭과는 조금 다른 방식의 블랙잭인 "HY블랙잭" 이라는 게임을 만들어서 진행 중이었다. 규칙은 다음과 같다.</p>

<ul>
	<li>딜러가 로또 기계에서 2 이상의 정수가 써진 공을 하나 뽑는다. 이때 나온 수가 K라면 딜러의 수는 K가 된다.</li>
	<li>플레이어는 딜러의 수 K를 확인하고, 카드를 받아 그 합이 정확히 K가 되도록 하면 게임에서 승리하게 된다.</li>
	<li>각 카드에는 정수가 쓰여 있다. 일반 트럼프카드와 달리 1 이상 K-1 이하의 정수가 한 번씩 쓰여 있고, 오름차순으로 정렬되어 있다. 플레이어는 연속된 몇 장의 카드만 골라서 받을 수 있다.</li>
	<li>만약 연속된 카드의 합으로 딜러의 수 K를 만들 수 없을 경우, 플레이어가 패배한다.</li>
</ul>

<p>예를 들어, 딜러가 뽑은 공의 수가 9라면, 병규는 연속된 카드 2,3,4의 합으로 9를 만들 수 있으므로 병규의 승리가 된다. 하지만 딜러가 뽑은 공의 수가 4라면, 연속된 카드의 합으로 4를 만들 수 없으므로 병규의 패배가 된다.</p>

<p>K가 주어졌을 때, 병규가 이길 수 있는지 없는지 알려주는 프로그램을 작성하여 병규를 도와주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에, 테스트케이스의 수 N (1 ≤ N&nbsp;≤ 10<sup>3</sup>)이 주어진다. 그 다음 줄부터 N개의 줄에 테스트케이스가 한 줄에 하나씩 주어진다. 각 테스트케이스에는 딜러가 뽑은 공의 수 K (2 ≤ K ≤ 10<sup>9</sup>)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 경우마다 병규가 이길 수 있다면, "Gazua"를, 병규가 이길 수 있는 방법이 없다면 "GoHanGang"을 출력한다. (큰따옴표는 출력하지 않는다)</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
9
4
','Gazua
GoHanGang','MATH'),
                                                                                                                (2982,'BAEKJOON','https://www.acmicpc.net/problem/16467',16467,'병아리의 변신은 무죄','1초','512 MB',15,'<p>학교공부를 끝내고 집을 가던 다진이는 길가에서 병아리를 팔고 있는 아저씨를 발견했다. 병아리를 무척 사고 싶었던 다진이는 병아리의 상태를 확인하지도 않고 한 마리를 사서 집으로 향했다. 다음 날, 다진이는 병아리를 확인하려 방으로 갔는데 병아리 옆에는 웬 알이 하나 놓여져 있었다. 분명히 병아리만 산 다진이는 이상하다고 생각했지만 지각을 할 것 같아서 바로 학교로 갔다.&nbsp;</p>

<p>그날도 술을 먹고 바로 잔 다진이는 다음 날 일어났는데, 병아리가 2마리가 되어 있는 것을 보았다. 병아리들 옆에는 또 알이 하나가 놓아져 있었다. 병아리가 알을 낳는 것을 들은 적도 없었던 다진이는 그날부터 병아리를 관찰하기로 했다.&nbsp;</p>

<p>병아리는 매일마다 혼자서 알을 낳는다. 병아리가 낳은 알들은 K일 후에 다시 병아리로 태어난다. 병아리들은 죽지 않으며 병아리의 모습을 계속 유지한다.&nbsp;</p>

<p>병아리들은 관찰하던 다진이는 문득 N일 후에는 병아리가 몇 마리가 될 지 궁금해졌다.&nbsp;</p>

<p><img alt="" src="https://upload.acmicpc.net/87050431-899c-4bf0-b308-46749569792b/-/preview/" style="width: 347.5px; height: 115.833px;"></p>

<p>위의 그림은 K = 0일 때 상태를 나타낸다. K = 0이므로 병아리가 알을 낳자 마자 알은 병아리로 부화한다. 그림에서 사각형은 병아리를 나타낸다. 다진이를 도와 N일 후의 병아리의 수를 알아내어보자.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 테스트케이스의 수 T가 주어진다. (1 ≤ T&nbsp;≤ 100)</p>

<p>둘째 줄부터 T개의 줄에 테스트케이스가 한 줄에 하나씩 주어진다. 각 테스트케이스에는 정수 K와 N이 주어진다. (0 ≤ K&nbsp;≤ 10, 1 ≤ N&nbsp;≤ 100,000,000)&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트케이스마다 N일 후의 병아리의 수를 100,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p><img alt="" src="https://upload.acmicpc.net/a429494e-6b2f-42fd-b5c6-b34df0e28b48/-/preview/"></p>

<p>위의 그림은 K = 2일때의 상태를 나타낸다. K = 2이므로 병아리가 알을 낳은 후 2일이 지나면 병아리로 부화한다. 위의 그림에서 원은 알을 나타낸다.</p>

				</div>
				</div>','11
0 1
0 2
0 3
0 4
0 5
2 1
2 2
2 3
2 4
2 5
2 6
','2
4
8
16
32
1
1
2
3
4
6
','MATH'),
                                                                                                                (2979,'BAEKJOON','https://www.acmicpc.net/problem/16478',16478,'원의 분할','1초(추가시간없음)','512 MB',5,'<p>장난꾸러기 혁주는 어렸을 때부터 가위를 아주 잘 다루었다. 그래서 그는 색종이를 가위로 아무렇게나 자르는 것을 좋아한다. 혁주는 오늘 친구에게 원 모양의 색종이를 생일 선물로 받았다. 그가 색종이를 자르려는 순간, 어떤 친구가 "가위로 자를 때는 정확한 직선으로 자르면 더 깔끔해!"라고 했다. 그래서 혁주는 가위로 정확히 직선으로 두 번을 자르기로 했다. 예를 들어, 혁주는 아래와 같이 색종이를 자른다. (단, 한 번 자른 뒤, 색종이를 움직이지 않고 다시 한 번 자른다.)</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/d145b442-6d2d-46d1-af78-852ffe9808e2/" style="width: 202px; height: 194px;"></p>

<p>이때, 영역 a와 b를 구분하는 선분의 길이를 <em>p</em><sub>ab</sub>, b와 c를 구분하는 선분의 길이를 <em>p</em><sub>bc</sub>, c와 d를 구분하는 선분의 길이를 <em>p</em><sub>cd</sub>라고 한다. <em>p</em><sub>ab</sub>, <em>p</em><sub>bc</sub>, <em>p</em><sub>cd</sub>의 값이 주어지면, 영역 d와 a를 구분하는 선분의 길이를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 <em>p</em><sub>ab</sub>, <em>p</em><sub>bc</sub>, <em>p</em><sub>cd</sub>의 값이 사이에 공백을 한 개씩 두고 차례대로 주어진다. 주어지는 모든 값들은 10,000 이하의 양의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 영역 d와 a를 구분하는 선분의 길이를&nbsp;출력한다.&nbsp;절대/상대 오차는 10<sup>-6</sup>&nbsp;까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 5 5
','5','MATH'),
                                                                                                                (2978,'BAEKJOON','https://www.acmicpc.net/problem/16479',16479,'컵라면 측정하기','1초(추가시간없음)','512 MB',3,'<p>컵라면은 두 개의 밑면이 서로 평행하며, 원 모양인 원뿔대이다. 따라서 컵라면을 옆에서 본 모습은 아래&nbsp;그림과 같은 등변사다리꼴이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/d64aada2-3953-4dd1-90aa-27eca6cfbb35/" style="width: 140px; height: 144px;"></p>

<p>위&nbsp;등변사다리꼴에서 민수가 측정한 컵라면의 윗면의 지름은&nbsp;<i>D</i><sub>1</sub>, 아랫면의 지름은&nbsp;<i>D</i><sub>2</sub>이다. 민수가 아직 측정하지 않은 변의 길이는 <em>K</em>이다. 이때, (컵라면의 높이)<sup>2</sup>의 값을 알아내는 프로그램을 작성하시오. (단, 컵라면의 높이는 등변사다리꼴에서 평행한 두 변 사이의 거리로 정의한다.)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 <em>K</em>의 값이 주어진다. 둘째 줄에는 <em>D</em><sub>1</sub>과 <em>D</em><sub>2</sub>의 값이 사이에 공백을 한 개 두고 차례대로 주어진다. 단, <em>K</em>, <em>D</em><sub>1</sub>, <em>D</em><sub>2</sub>의 값은 양의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 (컵라면의 높이)<sup>2</sup>의&nbsp;값을 출력한다. 절대/상대 오차는 10<sup>-6</sup> 까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','14
12 12','196','MATH'),
                                                                                                                (2991,'BAEKJOON','https://www.acmicpc.net/problem/16480',16480,'외심과 내심은 사랑입니다','1초(추가시간없음)','512 MB',0,'<p>수진이는 외심과 내심 없이는 살 수 없다고 말할 정도로 외심과 내심을 사랑한다. 하지만, 갑자기 수진에게 어려운 일이 닥쳤다. 바로 평면에 있는 삼각형 ABC에서 외접원의 반지름의 길이 <em>R</em>이고, 내접원의 반지름의 길이 <em>r</em>일 때, (외심과 내심 사이의 직선 거리)<sup>2</sup>의 값을 구하는 것이다. 수진이가 포기를 하면, 외심과 내심을 더 이상 사랑하지 않을 수도 있기 때문에, 우리가 수진이를 도와주는 프로그램을 작성하자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 <em>R</em>과 <em>r</em>의 값이 사이에 공백을 한 개 두고 차례대로 주어진다. (단, <em>R</em>과 <em>r</em>의 값은 100,000 이하의 양의 정수이고, 2×<em>r</em>&nbsp;≤ <em>R</em>을 만족한다.)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 (외심과 내심 사이의 직선 거리)<sup>2</sup>의 값의 정수 부분을 출력한다. (단, 어떤 수의 정수 부분은 그 수를 넘지 않는 최대의 정수를 말한다.)</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 1
','8
','MATH'),
                                                                                                                (2925,'BAEKJOON','https://www.acmicpc.net/problem/16481',16481,'원 전문가 진우','1초(추가시간없음)','512 MB',0,'<p>원 전문가인 진우는 항상 자신의 친구들에게 원이 포함되어 있는 문제는 모두 풀 수 있다고 자랑한다. 어느 날, 진우를 시험해 보려고 하늘이가 문제를 냈다. 문제는 다음과 같다.</p>

<blockquote>
<p>평면에 있는 삼각형 ABC의 서로 다른 위치에 있는 세 방접원의 반지름의 길이가 <em>r</em><sub>1</sub>, <em>r</em><sub>2</sub>,&nbsp;<em>r</em><sub>3</sub>일 때, 삼각형 ABC의 내접원의 반지름을 구하시오.</p>
</blockquote>

<p>진우는 문제를 보자마자 마음속으로 포기했다. 그런데, 자랑을 너무 많이 해서 이 문제를 못 풀면 친구들에게 미움 받을 것 같다고 생각했다. 진우가 친구들에게 미움을 받지 않도록 진우를 도와 하늘이가 낸 문제를 푸는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 <em>r</em><sub>1</sub>, <em>r</em><sub>2</sub>, <em>r</em><sub>3</sub>의 값이 사이에 공백을 한 개씩 두고 차례대로 주어진다. 주어지는 모든 수는 1,000&nbsp;이하의 양의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제에서 요구하는 정답을 출력한다. 절대/상대 오차는 10<sup>-6</sup> 까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 4 4
','1.3333333333
','MATH'),
                                                                                                                (2839,'BAEKJOON','https://www.acmicpc.net/problem/16482',16482,'한 점에서 만나라!','1초(추가시간없음)','512 MB',0,'<p>영철이는 작도하는 것을 좋아한다. 특히, 삼각형을 이용해서 작도하는 것을 더 좋아한다. 영철이가 종이에 삼각형 ABC를 그리고, 변 AB의 길이를 <em>c</em>, 변 BC의 길이를 <em>a</em>, 변 CA의 길이를 <em>b</em>라고 정했다. 그 다음, 삼각형 ABC의 내부에 점을 한 개 찍고 그 점을 P라고 했다. 선분 AP의 연장선과 변 BC의 교점을 D, 선분 BP의 연장선과 변 CA의 교점을 E, 선분 CP의 연장선과 변 AB의 교점을 F라고 정했다. 즉, 세 선분 AD, BE, CF는 한 점 P에서 만난다.</p>

<p><em>a</em>,&nbsp;<em>b</em>,&nbsp;<em>c</em>의 값과 선분 AF, BD의 길이가 주어지면, 선분 CE의 길이를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 <em>a</em>, <em>b</em>, <em>c</em>의 값이 사이에 공백을 한 개씩 두고 차례대로 주어진다. 둘째 줄에는 선분 AF와 선분 BD의 길이가 사이에 공백을 한 개 두고 차례대로 주어진다. 단, 주어지는 값들은 모두 양의 정수이며, 주어지는 값들로 인해 문제의 상황이 만들어질 수 없는 경우는 주어지지 않음이 보장된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 선분 CE의 길이를 출력한다. 절대/상대&nbsp;오차는 10<sup>-6</sup>&nbsp;까지 허용한다.</p>
<!--<p>첫째 줄에 선분 CE의 길이를 소수점 아래의 셋째 자리에서 반올림하여 출력한다. (단, 절대/상대 오차는 10<sup>-2</sup>까지 허용하며, 정답이 3인 경우에는&nbsp;<code>3.00</code>, 정답이 6.9인 경우에는 <code>6.90</code>을&nbsp;출력해야 한다.)</p>-->
					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8 4 6
3 4','2','MATH'),
                                                                                                                (2846,'BAEKJOON','https://www.acmicpc.net/problem/16483',16483,'접시 안의 원','1초(추가시간없음)','512 MB',3,'<p>접시는 아래의 그림과 같이 중심이 같은 두 원이 겹쳐져 있는 형태이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/55d9d964-b8ac-428b-9fef-46e27fa5754e/" style="width: 181px; height: 181px;"></p>

<p>여기에서 작은 원의 접선이 큰 원과 만나는 두 점 사이의 거리를 <em>T</em>, 작은 원의 반지름을 <em>b</em>, 큰 원의 반지름을 <em>a</em>라고 한다. <em>T</em>의 값이 주어지면, <em>a</em><sup>2</sup>-<em>b</em><sup>2</sup>의 값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 양의 정수<em> T</em>의 값이 주어진다. 단, <em>T</em>의 값은 10,000&nbsp;이하이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p><em>a</em><sup>2</sup>-<em>b</em><sup>2</sup>의 값을 소수점 아래의 첫째 자리에서 반올림하여 정수로 출력한다. 예를 들어, <em>a</em><sup>2</sup>-<em>b</em><sup>2</sup>의 값이 1.91이면 <code>2</code>를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','17
','72
','MATH'),
                                                                                                                (2844,'BAEKJOON','https://www.acmicpc.net/problem/16484',16484,'작도하자! - ①','1초(추가시간없음)','512 MB',0,'<p>오늘 낮에 심심해서 작도 왕인 재원이가 종이에 원 하나를 그렸다. 그 다음, 원의 임의의 현 XY를 그렸다. 현 XY의 중점을 M이라고 한 뒤, M을 지나는 현 AB, CD를 그었다.&nbsp;그리고 선분 AD와 현 XY가 만나는 점을 P, 선분 CB와 현 XY가 만나는 점을 Q라고 한다. (단, 점 A와 D는 현 XY을 기준으로 서로 반대편의 위치에 있는 점이며, 여섯 개의 점 X, Y, A, B, C, D는 모두 서로 다른 점이다.)</p>

<p>현 XY의 길이 <em>n</em>과 선분 PM의 길이 <em>d</em>가 주어지면 선분 QY의 길이를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수 <em>n</em>과 <em>d</em>의 값이 사이에 공백을 한 개 두고 차례대로 주어진다. <em>n</em>과 <em>d</em>의 값은&nbsp;1,000&nbsp;이하의 양의 정수이고, <em>d</em>×2의 값은 <em>n</em>의 값보다 작다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>선분 QY의 길이를 소수점 아래의 둘째 자리에서 반올림하여 출력하다. 단, 소수점 오차는 허용하지 않으며, 예를 들어 정답이 8인 경우에는 <code>8.0</code>과 같이 출력해야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>재원이는 아래와 같이 작도를 한다. (단, 재원이가 작도한 결과는 A, B, C, D, X, Y의 위치와 <i>n</i>이나 <em>d</em>의 값으로 바뀔 수 있다.)</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/4036e728-9498-4003-9648-06a25c6e7b7e/-/preview/" style="height: 243px; width: 250px;"><br>
&nbsp;</p>

				</div>
				</div>','8 2
','2.0
','MATH'),
                                                                                                                (2845,'BAEKJOON','https://www.acmicpc.net/problem/16485',16485,'작도하자! - ②','1초(추가시간없음)','512 MB',4,'<p>작도왕인 재원이는 밖에 신나게 뛰어놀다 집에 들어왔는데, 할 일이 없어서 작도를 하기로 했다. 재원이는 먼저 종이에 삼각형 ABC를 그렸다. 그리고, 각 BAC의 이등분선과 변 BC의 교점을 M이라고 했다.</p>

<p>변 AB의 길이 <em>c</em>와 변 AC의 길이 <em>b</em>가 주어질 때, (선분 BM의 길이)÷(선분 CM의 길이)의 값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 <em>c</em>, <em>b</em>의 값이 사이에 공백을 한 개 두고 차례대로 주어진다. (<em>c</em>와 <em>b</em>의 값은 1,000,000,000&nbsp;이하의 양의 정수이다.)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제에서 요구한 답을 출력한다. 절대/상대 오차는 10<sup>-6</sup> 까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','9 3
','3
','MATH'),
                                                                                                                (2847,'BAEKJOON','https://www.acmicpc.net/problem/16486',16486,'운동장 한 바퀴','1초(추가시간없음)','512 MB',2,'<p>세연이네 학교 운동장은 아래와 같다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/2f29c6a0-5406-493c-a4d6-d2595c32be2e/"></p>

<p>위의 그림에서 영역 A와 B는 반원이며, 영역 C는 직사각형이다. 영역 C의 가로의 길이를&nbsp;<em>d</em><sub>1</sub>,&nbsp;영역 A의 반지름의 길이 <em>d</em><sub>2</sub>의 값이 주어지면 운동장의 한 바퀴 둘레를 알아내는 프로그램을 작성하시오. (단, 이 문제에서는 π&nbsp;(원주율)의 값을 3.141592라고 한다.)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 <em>d</em><sub>1</sub>의 값이 주어진다. 둘째 줄에는 <em>d</em><sub>2</sub>의 값이 주어진다. (<em>d</em><sub>1</sub>, <em>d</em><sub>2</sub>의 값은 100,000&nbsp;이하의 양의 정수)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제에서 요구하는 정답을 출력한다. 절대/상대 오차는 10<sup>-6</sup> 까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','13
8
','76.265472
','MATH'),
                                                                                                                (2848,'BAEKJOON','https://www.acmicpc.net/problem/16487',16487,'말 타기','1초(추가시간없음)','512 MB',0,'<p>지호는 말 타기를 매우 좋아한다. 그래서 학교에서 ‘말 타기 행사’가 열리는 날에 다른 친구들의 시범을 보이기로 했다. 그는 한 변의 길이가 <em>b</em>인 정사각형 모양의 운동장 내부 (테두리 포함)의 임의의 점 A까지 자신의 말을 몰고 갔다. 그 다음, 운동장의 네 꼭짓점 중 임의의 두 점을 선택하고, 그 두 점을 B와 C라고 했다. 지호는 운동장의 네 변 중 하나인 변 BC&nbsp;위에 선분 BD의 길이가 <em>m</em>이도록 점 D를 정했다.</p>

<p>이때, 그는 말을 점 A에서 D까지 일직선으로 이동하려고 한다. 선분 AB의 길이 <em>a</em>, 변 AC의 길이 <em>c</em>, 운동장의 한 변의 길이 <em>b</em>와 <em>m</em>의 값이 주어지면, (지호가 타는 말이 이동하는 거리)<sup>2</sup>의 값을 구하는 프로그램을 작성하시오. (단, 말이 이동한 거리는 점 A에서 D까지의 직선거리를 의미한다.)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 <em>a</em>, <em>b</em>, <em>c</em>의 값이 사이에 공백을 한 개씩 두고 차례대로 주어진다. 둘째 줄에는 <em>m</em>의 값이 주어진다. (단, 주어지는 값들은 모두 양의 정수이며, 점 A가 <em>b</em>, <em>c</em>의 값으로 인해 운동장의 내부에 있지 않은 경우는 없다.)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제에서 요구한 정답을 출력한다. 절대/상대 오차는 10<sup>-6</sup> 까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10 10 12
5
','97','MATH'),
                                                                                                                (2849,'BAEKJOON','https://www.acmicpc.net/problem/16488',16488,'피카츄가 낸 어려운 문제','1초(추가시간없음)','512 MB',7,'<p>맨날 학교 칠판에 이등변삼각형을 그리고 노는 피카츄가 어느 날, 칠판에 변 AB와 변 AC의 길이가 모두 <em>N</em>인 이등변 삼각형을 그린 다음, 친구들에게 아래와 같은 문제를 냈다.</p>

<blockquote>
<p>이등변삼각형 ABC에서 변 BC 위에 점 P<sub>1</sub>, P<sub>2</sub>, ··· , P<em><sub>K</sub></em>을 잡는다. (B ≠ P<sub>i</sub>&nbsp;≠ C (i = 1, 2, ··· , <em>K</em>))</p>

<p>i = 1, 2, ··· , <em>K</em>에 대하여 함수 F(i)를 (선분 AP<sub>i</sub>의 길이)²+(선분 BP<sub>i</sub>의 길이)×(선분 CP<sub>i</sub>의 길이)로 정의한다.</p>

<p>이때, F(1)+F(2)+···+F(<em>K</em>)의 값은 얼마인지 구하시오.</p>
</blockquote>

<p>피카츄의 친구들은 문제 조차도 이해를 못하고 있다! 우리가 대신해서 피카츄가 낸 문제를 해결해 보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 <em>N</em>과 <em>K</em>의 값이 사이에 공백을 한 개 두고 차례대로 주어진다. 단, <em>N</em>과 <em>K</em>는 100,000 이하의 양의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제에서 요구하는 정답을 <em>x</em>라고 할 때, <em>x</em>보다 크지 않은 최대의 정수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 7
','112
','MATH'),
                                                                                                                (2852,'BAEKJOON','https://www.acmicpc.net/problem/16489',16489,'삼각형 해커','1초(추가시간없음)','512 MB',0,'<p>서울특별시에는 삼각형의 정보를 캐는 <strong>삼각형 해커</strong>가 있다. <strong>삼각형 해커</strong>에게는 항상 예각삼각형의 세 변의 길이만 주어진다. 이때,&nbsp;<strong>삼각형 해커</strong>는 그 삼각형의 넓이 S, 외접원의 반지름의 길이 <em>R</em>, 내접원의 반지름의 길이 <em>r</em>, 외심과 내심 사이의 직선 거리 <em>d</em>, 외심에서 삼각형의 세 변에 내린 수선들의 길이의 합 <em>k</em>를 알고 싶어 한다. 우리도 <strong>삼각형 해커</strong>가 되어 <em>S</em>, <em>R</em>, <em>r</em>, <em>d</em>, <em>k</em>의 값을 알아내자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 삼각형의 세 변의 길이를&nbsp;나타내는 1,000 이하의 세 개의 양의 정수가 사이에 공백을 한 개씩 두고 차례대로 주어진다. 단, 주어지는 삼각형의 세 변의 길이로 인해 삼각형이 만들어지지 않는 경우는 입력으로 주어지지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에는 <em>S</em>, 두 번째 줄에는 <em>R</em>, 세 번째 줄에는 <em>r</em>, 네 번째 줄에는 <em>d</em>, 다섯 번째 줄에는 <em>k</em>의 값을 출력한다. 절대/상대 오차는 10<sup>-9</sup>&nbsp;까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 7 4','11.9765395670035
3.5068560300768
1.4090046549416
1.5542478163117
4.9158606850184
','MATH'),
                                                                                                                (2853,'BAEKJOON','https://www.acmicpc.net/problem/16490',16490,'외계인의 침투','1초(추가시간없음)','512 MB',0,'<blockquote>
<p><em>2118년, 태양계 밖에 살고 있는 외계인들이 대한민국 부산광역시에 도착했다!</em></p>
</blockquote>

<p>부산광역시의 시민들은 외계인들의 레이저 공격을 막기 위해 위에서 보았을 때&nbsp;원 모양인 성을 쌓았다. 그리고 그 성 위에 세 개의 점 A, B, C를 삼각형 ABC가 정삼각형이 되도록 잡고, 그 정삼각형의 테두리 위에 또 성을 쌓았다.&nbsp;</p>

<p>하지만, 외계인의 레이저는 너무 강력했다. 외계인들이 원 모양의 성 밖에서 레이저를 쏘았는데, 그 레이저가 정확히 점 A를 통과했다. 외계인들이 쏜 레이저와 원 모양의 성벽이 만난 점을 P, 레이저와 삼각형 ABC가 만난 점을 D라고 한다. (단, 점 P, D, A, B, C는 서로 다른 점이며, D는 변 BC 위에 있다.) 그리고, 선분 PA, PB, PC의 길이를 각각 <em>a</em>, <em>b</em>, <em>c</em>, 삼각형 ABC의 한 변의 길이를 <em>t</em>라고 한다.</p>

<p><em>a</em>와 <em>t</em>의 값이 주어지면, <em>b</em>×<em>c</em>의 값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 <em>a</em>와 <em>t</em>의 값이 사이에 공백을 한 개 두고 차례대로 주어진다. (단,&nbsp;<i>a</i>와 <em>t</em>의 값은 100 이하의 양의 정수이고, <em>a</em>와 <em>t</em>의 값으로 인해 문제의 상황이 만들어질 수 없는 경우는 주어지지 않는다.)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 <em>b</em>×<em>c</em>의 값을 소수점 아래의 첫째 자리에서 반올림하여 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>아래의 그림은 문제의 상황을 나타낸 것이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/dd5e4724-b87e-42a1-8102-b4c4c5c4be5d/-/preview/" style="height: 265px; width: 220px;"></p>

<p>단, 위의 그림에서 B와 C의 위치는 서로 바뀔 수 있으며, P와 D의 위치는 <em>a</em>와 <em>t</em>의 값으로 바뀐다.</p>

				</div>
				</div>','9 8
','17
','MATH'),
                                                                                                                (2854,'BAEKJOON','https://www.acmicpc.net/problem/16495',16495,'열 순서','2초','512 MB',5,'<p>엑셀 프로그램은 각 열의 순서를 알파벳 조합으로 구분한다. 예를 들어, 열의 순서와 각 열을 나타내는 문자열은 다음과 같다.</p>

<table class="table table-bordered">
	<tbody>
		<tr>
			<td>열 문자열</td>
			<td>A</td>
			<td>B</td>
			<td>C</td>
			<td>…</td>
			<td>X</td>
			<td>Y</td>
			<td>Z</td>
			<td>AA</td>
			<td>AB</td>
			<td>AC</td>
			<td>…</td>
			<td>AZ</td>
			<td>BA</td>
			<td>…</td>
		</tr>
		<tr style="height:24.75pt">
			<td>열 순서</td>
			<td>1</td>
			<td>2</td>
			<td>3</td>
			<td>…</td>
			<td>24</td>
			<td>25</td>
			<td>26</td>
			<td>27</td>
			<td>28</td>
			<td>29</td>
			<td>…</td>
			<td>52</td>
			<td>53</td>
			<td>…</td>
		</tr>
	</tbody>
</table>

<p>열 문자열이 주어졌을 때 이에 대한 열 순서를 반환하는 코드를 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 1개 이상의 알파벳 대문자로 이루어진 열 문자열이 주어진다. 입력 문자열의 길이는 10을 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 열 순서를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','X
','24
','MATH'),
                                                                                                                (2859,'BAEKJOON','https://www.acmicpc.net/problem/16502',16502,'그녀를 찾아서','2초','512 MB',8,'<p>그녀와 백화점을 가면 우리는 각자 따로따로 매장을 돌아다닌다. 중간에 그녀를 만나려면 어느 매장으로 가봐야 할까? 그녀는 백화점 쇼핑 중에는 전화벨로 방해받고 싶지 않아서 핸드폰을 꺼놓고 있다.</p>

<p>우리는 주어진 시간에 각 매장별로 그녀가 그 곳에 있을만한 확률을 보여주는&nbsp;프로그램을 만들려고 한다.</p>

<p>입력은 유한한 그래프와 양의 정수이다. 그래프는 그녀의 움직임을 모델한 것이고, 움직임은 10분 단위로 일어난다고 하자. 양의 정수는 백화점에서 헤어진지 몇 10분 째인지를 나타낸다. 그래프의 노드는 매장을 의미하고, 노드 사이의 화살표는 한 매장에서 다른 매장으로 이동하는 관계이고, 화살표에는 그 이동의 확률이 표현되어 있다. 한 노드에서 바깥으로 가는 화살표가 여럿 있을 수 있는데 그 화살표 들에 적혀있는 확률들의 합은 반드시 1이어야 한다. 그녀가 백화점으로 들어와서 처음으로 방문하는 매장은 주어진 매장들 중에 같은 확률로 (무작위로) 정해진다고 하자</p>

<p>예를 들어, 그래프가</p>

<p><img alt="" src="https://upload.acmicpc.net/ab89f897-3087-404c-b208-439896ab36ad/-/preview/" style="width: 190px; height: 181px;"><br>
이면, A매장에서 B매장으로 항상 가고, B매장에서는 30% 확률로 C매장으로 움직이고, 등등.</p>

<p>이 경우, 임의의 매장에서 쇼핑을 시작해서 그녀가 10분후에 각 매장에 있을 확률은 A 15%, B 25%, C. 7.5%, D 52.5% 이다. 20분후는 각각 4.5%, 15%, 7.5%, 73% 이다.</p>

<p>위와 같은 결과를 계산하는 프로그램을 작성하라. 매장은 네개(A, B, C, D)로 정해져 있다고 가정한다. 입력은 다섯 매장을 다니는 그녀의 움직임 그래프와 쇼핑시간 (단위: 10분) 이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 쇼핑 시간 (단위: 10분)이 주어진다. 쇼핑 시간은 10보다 작거나 같은 자연수이다.</p>

<p>둘째 줄에는 간선의 개수 M이 주어진다. (1 ≤ M ≤ 10)</p>

<p>셋째 줄부터 M개의 줄에는 간선의 정보가 주어진다. 간선의 정보는 시작 매장, 도착 매장, 그리고 확률이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 매장 A, B, C, D에 그녀가 있을 확률을 퍼센트 단위로 출력한다. 절대/상대 오차는 10<sup>-2</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
6
A B 1.0
B C 0.3
B D 0.7
C A 0.6
C D 0.4
D D 1.0
','4.50
15.00
7.50
73.00
','MATH'),
                                                                                                                (2855,'BAEKJOON','https://www.acmicpc.net/problem/16503',16503,'괄호 없는 사칙연산','1초','512 MB',3,'<p>사칙연산에서 곱셈과 나눗셈은 덧셈과 뺄셈보다 먼저 계산한다. 덧셈과 뺄셈을 먼저 계산하고 싶을 때는 보통 가장 큰 연산 우선순위를 가지는 괄호를 사용하여 연산 순서를 지정한다. 예를 들어, 아래의 식은 연산 순서에 따라 두 가지 다른 결과가 나올 수 있다.</p>

<ul>
	<li>(2 + 3) × 4 = 20</li>
	<li>2 + (3 × 4) = 14</li>
</ul>

<p>연산 우선순위가 같은 곱셈과 나눗셈 또는 덧셈과 뺄셈만 있는 식에서는 보통 왼쪽에서 오른쪽 순서로 연산을 한다. 하지만 이런 상황에도 연산 순서에 따라 아래와 같이 두 가지 다른 결과가 나올 수 있다.</p>

<ul>
	<li>(6 ÷ 2) × 3 = 9</li>
	<li>6 ÷ (2 × 3) = 1</li>
</ul>

<p>만약 곱셈, 나눗셈, 덧셈, 뺄셈의 4가지 연산자의 연산 우선순위가 동등하다고 할 때, 괄호 없는 식에서 서로 다른 연산 순서의 계산 결과를 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 <em>"K<sub>1</sub> O<sub>1</sub> K<sub>2</sub> O<sub>2</sub> K<sub>3</sub>"</em> 형태로 식이 주어진다. 정수 <em>K<sub>i</sub></em> (1 ≤ <em>K<sub>i</sub></em> ≤ 1,000)는 피연산자를, 문자열 <em>O<sub>i</sub></em>는 곱셈(*), 나눗셈(/), 덧셈(+), 뺄셈(-) 중 한 가지 연산자를 의미한다.</p>

<p>나눗셈 연산은 정수 나눗셈으로 몫만 취하며, 피연산자 중 하나가 음수이면 양수로 바꿔&nbsp;계산한 결괏값에 음수를 취한다. 또한, 계산 과정에서 0으로 나누어야 하는 식은 주어지지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>주어진 식에서 서로 다른 연산 순서의 계산 결과가 작은 것을 첫 번째 줄에, 큰 것을 두 번째 줄에 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 + 3 * 4
','14
20
','MATH'),
                                                                                                                (2857,'BAEKJOON','https://www.acmicpc.net/problem/16504',16504,'종이접기','1초','512 MB',3,'<p>종이접기와 수학을 좋아하는 주성이는 종이접기와 수학을 한꺼번에 할 수 있는 놀이를 찾아냈다. 바로 <em>N×N</em> 크기를 가지는 색종이의 각 칸에 수를 적어놓고, 색종이를 반으로 접을 때마다 겹치는 부분의 수들을 더하는 것이다. 그리고 이 작업을 색종이를 더는 접을 수 없을 때까지 반복했을 때, 가장 마지막에 남는 수를 구하는 놀이이다.</p>

<p>아래의 예시는 위에서 설명한 놀이의 과정을 2×2 크기의 색종이를 사용하여 상세하게 나타낸 그림이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/502c10b1-3915-4ee6-8027-5e37cadf4d42/-/preview/" style="height: 140.833px; width: 385.833px;"></p>

<ul>
	<li>색종이를 <strong>왼쪽</strong>에서 <strong>오른쪽</strong>으로 정확히 반을 접는다.</li>
	<li>겹치는 두 칸에 있는 수를 서로 더한다. 위 그림에서는 (1, 1)과 (1, 2)의 두 칸이 겹치고, (2, 1)과 (2, 2)의 두 칸도 겹치는 부분이다.</li>
	<li>더한 값을 색종이 위에 다시 적는다.</li>
</ul>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/b3c88296-8745-4929-b4d6-c4ac9a5ddc0d/-/preview/" style="height: 135px; width: 335.833px;"></p>

<ul>
	<li>색종이를 <strong>아래쪽</strong>에서 <strong>위쪽</strong>으로 정확히 반을 접는다.</li>
	<li>겹치는 두 칸에 있는 수를 서로 더한다. 위 그림에서는 (1, 1)과 (2, 1)의 두 칸이 겹치는 부분이다.</li>
	<li>더한 값을 색종이 위에 다시 적는다.</li>
</ul>

<p>색종이를 반으로 접으면서 두꺼워지는 것을 고려하지 않고, 색종이를 더는 접을 수 없을 때까지 위 과정을 반복했을 때 가장 마지막에 남는 수를 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 색종이의 가로, 세로 길이를 의미하는 정수 <em>N</em> (<em>N</em> = 2<em><sup>m</sup></em>, 1 ≤ <em>m</em> ≤ 10)이 주어진다.</p>

<p>두 번째 줄부터 마지막 줄까지는 <em>N×N</em> 크기의 색종이 정보가 주어지며, 색종이의 각 칸에는 정수 <em>K</em> (1 ≤ <em>K</em> ≤ 100,000)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>색종이를 반으로 접으면서 겹치는 부분의 수들을 더하는 과정을 반복했을 때, 가장 마지막에 남는 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
2 6 5 4
1 5 7 6
9 8 8 7
1 4 7 8
','88
','MATH'),
                                                                                                                (2860,'BAEKJOON','https://www.acmicpc.net/problem/16515',16515,'Euler’s Number','2초','512 MB',4,'<p>Euler’s number (you may know it better as just \(e\)) has a special place in mathematics. You may have encountered \(e\) in calculus or economics (for computing compound interest), or perhaps as the base of the natural logarithm, ln x, on your calculator.</p>

<p>While e can be calculated as a limit, there is a good approximation that can be made using discrete mathematics. The formula for \(e\) is:</p>

<p>\[e = \sum_{i=0}^{n}{\frac{1}{i!}} = \frac{1}{0!} + \frac{1}{1!} + \frac{1}{2!} + \frac{1}{3!} + \frac{1}{4!} + \cdots\]</p>

<p>Note that 0! = 1. Now as n approaches ∞, the series converges to \(e\). When n is any positive constant, the formula serves as an approximation of the actual value of \(e\). (For example, at n = 10 the approximation is already accurate to 7 decimals.)</p>

<p>You will be given a single input, a value of n, and your job is to compute the approximation of e for that value of n.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>A single integer n, ranging from 0 to 10 000.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>A single real number ? the approximation of e computed by the formula with the given n. All output must be accurate to an absolute or relative error of at most 10<sup>?12</sup>.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
','2.6666666666666665
','MATH'),
                                                                                                                (2883,'BAEKJOON','https://www.acmicpc.net/problem/16561',16561,'3의 배수','0.1초','128 MB',4,'<p>윤영이는 3의 배수 마니아이다. 그는 모든 자연수를 3개의 3의 배수의 자연수로 분해하는 것을 취미로 가지고 있다. 문득 그는 자신에게 주어진 수를 3개의 3의 배수로 분리하는 경우의 수가 몇 개인지 궁금해졌다. 하지만 윤영이는 마지막 학기이기&nbsp;때문에 이런 계산을 하기에는 너무 게을러졌다. 그래서 당신에게 이 계산을 부탁했다.</p>

<p>즉, 임의의 3의 배수 자연수 n이 주어졌을 때, 해당 수를 3의 배수의 자연수 3개로 분리하는 방법의 개수를 출력해라. 단 분해한 수의 순서가 다르면 다른 방법으로 간주한다. 예를 들어 12 = 3 + 6 + 3 과 12 = 3 + 3 + 6 은 다른 방법이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>임의의 3의 배수 자연수 n이 주어진다. (3&nbsp;≤ n&nbsp;≤ 3000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>자연수 n을 분해하는 방법의 개수를 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','9
','1
','MATH'),
                                                                                                                (2867,'BAEKJOON','https://www.acmicpc.net/problem/16563',16563,'어려운 소인수분해','2초','512 MB',12,'<p>지원이는 대회에 출제할 문제에 대해서 고민하다가 소인수분해 문제를&nbsp;출제해야겠다고 마음을 먹었다. 그러나 그 이야기를 들은 동생의 반응은 지원이의 기분을 상하게 했다.</p>

<blockquote>
<p>"소인수분해? 그거 너무 쉬운 거 아니야?"</p>
</blockquote>

<p>지원이는 소인수분해의 어려움을 알려주고자 엄청난 자신감을 가진 동생에게 2와 500만&nbsp;사이의 자연수 N개를 주고 소인수분해를 시켰다. 그러자 지원이의 동생은 기겁하며 쓰러졌다. 힘들어하는 지원이의 동생을 대신해서 여러분이 이것도 쉽다는&nbsp;것을&nbsp;보여주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 자연수의 개수 N&nbsp;(1 ≤ N&nbsp;≤ 1,000,000)이 주어진다.</p>

<p>둘째 줄에는&nbsp;자연수 k<sub>i</sub>&nbsp;(2 ≤ k<sub>i</sub>&nbsp;≤ 5,000,000, 1 ≤ i ≤ N)가 N개 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>N줄에 걸쳐서&nbsp;자연수 k<sub>i</sub>의 소인수들을&nbsp;오름차순으로 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
5 4 45 64 54
','5
2 2
3 3 5
2 2 2 2 2 2
2 3 3 3
','MATH'),
                                                                                                                (2870,'BAEKJOON','https://www.acmicpc.net/problem/16565',16565,'N포커','1초','256 MB',14,'<p>정연이는 트럼프 카드 (Playing Card)로 할 수 있는 새로운 게임을 만들기로 결심했다.</p>

<p>우선 이 게임은 딜러와 플레이어가 1:1로 플레이한다. 그리고 플레이어는 놓여진 52장의 트럼프 카드에서 N장의 카드를 뽑는다. 뽑은 카드들로 "포카드 (four of a kind)" 족보를 만들 수 있다면 플레이어의 승리, 만들 수 없다면 딜러의 승리로 게임이 끝난다. 그러나 정연이는 아직 공정한 게임을 위한, 뽑는 카드의 수 N을 결정하지 못하였다.</p>

<p>정연이가 쉽게 결정을 내릴 수 있도록, N개의 카드를 뽑았을 때 플레이어가 이기는 경우의 수를 출력하는 프로그램을 작성해주자.</p>

<p>트럼프 카드는 다음과 같은 52장의 카드로 구성된다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/64df8111-c7d3-4fca-82d0-13950a80294b/-/preview/" style="height: 149.167px; width: 347.5px;"></p>

<p style="text-align: center;"><em><b>Figure</b></em>:<b>&nbsp;</b>트럼프 카드 (Playing Card)의 구성</p>

<p style="text-align: center;"><em>문양 4개: ♥, ♠, ◆,&nbsp;♣, 숫자 13개: A, 2, 3, 4, 5, 6, 7, 8, 9, 10, J, Q, K</em></p>

<p style="text-align: center;"><em>총 4 x&nbsp;13 = 52장</em></p>

<p>포카드 (four of a kind)는 뽑은 N장의&nbsp;카드 중에 "같은 숫자를 가진, 다른 문양의 4장의 카드"가 존재하는 경우를 의미한다. 또한 플레이어가 이기는 경우의 수는 N장의 카드에 이러한 카드 조합을&nbsp;1쌍 이상 포함하고 있는 경우의 수를 의미한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 뽑는 카드의 수 N이&nbsp;주어진다.&nbsp;(1&nbsp;≤ N&nbsp;≤&nbsp;52)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 N장의 카드를 뽑았을 때, 플레이어가 이기는 경우의 수를 10,007로 나눈 나머지를 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
','13','MATH'),
                                                                                                                (2888,'BAEKJOON','https://www.acmicpc.net/problem/16673',16673,'고려대학교에는 공식 와인이 있다','0.1초','256 MB',3,'<p>다음은 고려대학교 포털에 나와 있는 고대 와인에 대한 글 일부이다.</p>

<div style="background:#eeeeee;border:1px solid #cccccc;padding:5px 10px;">개교 100주년 공식 와인 ‘라 까르돈느(La Cardonne) 2000년’의 뒤를 잇는 우당 박종구 회장 기부 와인 ’나파밸리 2000(Napa Valley 2000)‘, 고대와인 ’클라랑델 루즈2005(Calarendelle Rouge 2005)’,&nbsp;‘클라랑델 루즈 2009(Clarendelle Rouge 2009), ‘클라랑델 루즈 2011(Clarendelle Rouge 2011)을 판매하였으나,&nbsp;재고량 소진으로 인해 ㈜고대미래 크림슨스토어에서 독점 수입하여 선보이는 ‘라스토 랑데올 2014(Rasteau L’Andeol 2014)’ 와 ‘샤토 클락 2014(Chateau Clarke 2014)’ 로 변경하여 판매합니다.</div>

<p>이 글을 본 수빈이는 고려대학교 와인 콜렉팅이라는 목표를 가지게 되었다. 하지만 그냥 모으면 재미가 없으니 규칙을 가지고 와인을 수집하려고 한다.</p>

<p>와인을 사기로 마음먹은 해를 0년 차라고 정의하고, <em>n</em>년 차에는 <em>Kn+Pn<sup>2</sup></em> 만큼의 와인을 사는 것을 목표로 했다. <em>K</em>는 수빈이의 고려대 애착 정도를 나타내는 상수이고, <em>P</em>는 수빈이의 구매중독 정도를 나타내는 상수이다.&nbsp;</p>

<p>그렇게 수빈이는 <em>C</em>년 동안 열심히 와인을 모았다. (마지막 해에 산 와인의 수는 <em>KC + PC<sup>2</sup></em>가 된다.)</p>

<p>수빈이는 와인이 이제 방에 가득 쌓여, 자기가 얼마나 수집했는지 수를 세기 어려웠다.</p>

<p>여러분이 수빈이가 와인을 얼마나 수집했는지 계산해주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 수빈이가 와인을&nbsp;모은 년수, 수빈이의 고려대 애착 정도, 수빈이의 구매중독 정도를 의미하는 정수 <em>C</em>, <em>K</em>, <em>P</em>가 공백으로 구분되어 주어진다. (0&nbsp;≤ <em>C</em> ≤ 100, 0 ≤ <em>K</em> ≤&nbsp;1000,&nbsp; 0 ≤ <em>P</em> ≤&nbsp;100)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 수빈이가 <em>C</em>년 동안 수집한 와인 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 1 1
','20
','MATH'),
                                                                                                                (2912,'BAEKJOON','https://www.acmicpc.net/problem/16676',16676,'근우의 다이어리 꾸미기','1초','256 MB',4,'<p>곧 2018년이 끝나고, 2019년이 온다.</p>

<p>근우는 2019년에는 꼭 다이어리를 쓰기로 했다. 하지만, 처음 써보는 다이어리에 쓸 내용이 없어 고민하던 중 자신의 목표 연봉을 다이어리 앞에 쓰기로 했다.</p>

<p>다이어리를 쓰는 사람은 알겠지만 예쁜 다이어리의 핵심은 스티커다. 그렇기 때문에 근우는 목표 연봉을 손으로 쓰지 않고, 스티커로 붙이려고 한다. 목표연봉이 100이라면 [1] [0] [0]과 같이 붙이는 것이다. [1]이란 1이 써져있는 스티커로, 다른 숫자에 대해서도 동일한 규칙이 적용된다.</p>

<p>근우는 자신의 연봉 최댓값이 <em>N</em>임을 안다. 그렇기에 근우는&nbsp;0부터 <em>N</em>까지의 수를 하나씩 스티커를 통해 모두 표현하고자 한다. 최댓값 <em>N</em>이 10이면 만드는 과정은 다음과 같다.</p>

<ul>
	<li>스티커 더미에서 [0] 하나를 가져와 0을 표현한다 ([0]). 이후 사용한 스티커 [0]을 스티커 더미로 되돌린다.</li>
	<li>스티커 더미에서 [1] 하나를 가져와 1을 표현한다 ([1]). 이후 사용한 스티커 [1]을 스티커 더미로 되돌린다.</li>
	<li>9까지의 마찬가지 방법으로 표현할 수 있다.</li>
	<li>스티커 더미에서 [0] 하나와 [1] 하나를 가져와 10을 표현한다 ([1][0]). 이후 사용한 스티커 [0]과 [1]을 스티커 더미로 되돌린다.</li>
</ul>

<p>그러므로 <em>N </em>= 10 이면 스티커가 [0]부터 [9]까지 1개씩만 있으면 모두 표현할 수 있다.</p>

<p>필요한 스티커를 사러 고려대 하나스퀘어 유니스토어에 도착한 근우는 고민이 생겼다. 스티커 팩에는 [0]부터 [9]까지 스티커가 한 장씩 밖에 없으면서 생각보다 너무 비싼 것이다!</p>

<p>그렇기에 근우는 0부터 <em>N</em>까지 모든 수를 하나씩 표현할 수 있게 최소한의 스티커 팩만 사려고 한다.</p>

<p>근우는 매우 똑똑하지만, 스티커 팩 가격에 충격을 받아 계산할 수 없는 상태가 돼버렸다.</p>

<p>여러분이 근우의 최대 목표액 <em>N</em>이 주어졌을 때, 근우가 필요한 최소 스티커 팩의 개수를 구해주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 근우의 연봉 최댓값을 의미하는 정수 <em>N</em>이 주어진다. (0 ≤ <em>N</em> ≤ 1,000,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 근우가 0부터 <em>N</em>까지 스티커로 표현하기 위해 구매해야 하는 스티커 팩의 최소 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','88
','2
','MATH'),
                                                                                                                (2913,'BAEKJOON','https://www.acmicpc.net/problem/16680',16680,'안수빈수','0.5초','128 MB',17,'<p>자릿수의 합이란 무엇인가? 이는 수를 10진수로 나타내었을 때, 각 자리 숫자들의 합을 의미한다. 예를 들어, 1093의 자릿수의 합은 1 + 0 + 9 + 3 = 13이다.</p>

<p>우리는 자릿수의 합이 짝수인 양의 정수를 수빈수라고 부르기로 했다. 그리고 수빈수가 아닌 양의 정수를 안수빈수라고 부르기로 했다.</p>

<p>어떤 양의 정수 <em>N</em>이 주어졌을 때, <em>N</em>의 배수 중 안수빈수가 있는지 확인하고, 있다면 아무거나 하나를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트케이스의 개수 <em>T</em>가 주어진다. (1 ≤ <em>T</em>&nbsp;≤ 1,000)</p>

<p>두 번째 줄 부터 <em>T</em>개의 줄에 걸쳐, 각각의 테스트 케이스에 대한 <em>N</em>이 주어진다. (1 ≤ <em>N</em> ≤ 100,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 매 줄마다 아래와 같이 출력한다.</p>

<ul>
	<li><em>N</em>의 배수 중 안수빈수가 없다면 <code>-1</code>을 출력한다.</li>
	<li><em>N</em>의 배수 중 안수빈수가 있다면, 그 중 10<sup>18</sup>&nbsp;이하의 안수빈수를 <strong>아무거나 하나</strong> 출력한다.</li>
</ul>

<p>100,000,000 이하의 양의 정수 <em>N</em>에 대해,<em> N</em>의 배수 중 안수빈수가 있다면, 그 중 10<sup>18</sup>&nbsp;이하의 안수빈수가 존재함이 보장된다고 생각해도 좋다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1000
1234
13
9
','1000
7404
52
18
','MATH'),
                                                                                                                (2914,'BAEKJOON','https://www.acmicpc.net/problem/16685',16685,'XOR 포커','2초','512 MB',19,'<p>진벽이와 미야는 <strong>XOR 포커</strong>라는 게임을 하고 있다. 서로 정수가 적힌 카드를 <em>N</em>장 받고, 받은 카드 중 일부를 적절히 골라 점수를 계산하여 점수가 더 높은 쪽이 이기는 게임이다.</p>

<p>점수를 계산하는 방법은 다음과 같다.</p>

<ol>
	<li>주어진 카드 중 짝수 개의 카드를 고른다. (0개는 고를 수 없다)</li>
	<li>고른 카드에 적힌 수들의 XOR 값을 점수로 한다. (여러 정수의 XOR 값의 정의는 예제 밑의 노트에 나와 있다.)</li>
</ol>

<p>예를 들어서, 미야가 현재 {1, 2, 3, 3, 5}&nbsp;가 적힌 카드를 가지고 있다고 하자. {2, 3, 3, 5}&nbsp;을 고르면 2 $\oplus$&nbsp;3 $\oplus$ 3 $\oplus$ 5 = 7이 점수가 된다. 똑같이 7이 되는 {1, 3, 5}&nbsp;는 홀수개이기 때문에 고를 수 없다.</p>

<p>미야는 승부욕이 강해서 진벽이를 꼭 이기고 싶다. 미야가 승부에서 이길 수 있도록 도와주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 미야가 가진 카드의 개수 <em>N</em> 이 주어진다. (2 ≤&nbsp;<em>N</em> ≤&nbsp;100,000)</p>

<p>두 번째 줄부터 <em>N</em>개의 줄에 걸쳐 미야의 <em>i </em>번째 카드에 적힌 수 <em>a<sub>i</sub></em>가 주어진다. (0 ≤ <em>a<sub>i</sub></em> ≤ 10<sup>18</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 미야가 주어진 카드 XOR 포커를 할 때 만들 수 있는 점수의 최댓값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>양의 정수들 <em>x<sub>1</sub>, x<sub>2</sub>, ..., x<sub>N</sub></em> 의 XOR 값은 다음과 같이 정의된다.</p>

<p>XOR 값을 <em>X</em>라고 하자. <em>X</em>를 이진법으로 나타낼 때, <em>x<sub>1</sub>, x<sub>2</sub>, ..., x<sub>N</sub></em> 중 <em>2<sup>k</sup></em>의 자리가 1인 수가 홀수 개 있으면 <em>X</em>의 <em>2<sup>k</sup></em>의 자리는 1이며, 짝수 개 있으면 0이다.</p>

				</div>
				</div>','5
1
2
3
3
5
','7
','MATH'),
                                                                                                                (2919,'BAEKJOON','https://www.acmicpc.net/problem/16723',16723,'원영이는 ZOAC과 영원하고 싶다','1초','256 MB',10,'<p>이름부터 영과일 그 자체인 원(1)영(0)이는 ZOAC의 운영진이다. 많은 학회원들이 ZOAC에 참가하기를 원했던 원영이는 ZOAC에 참가하는 모든 참가자들에게 기념품을 나누어주려고 한다. 이때 원영이는 참가자들이 상품 배분에 대해 불만을 가지지 않게 하면서&nbsp;동시에 최대한 많은 참가자가&nbsp;ZOAC에 참가할 수 있도록 하기 위해&nbsp;다음과 같은 규칙들을 정하였다.</p>

<ol>
	<li>제t회 ZOAC의 기념품 수는 2t개이다.</li>
	<li>참가자의 수는 2t개의 기념품을 남김없이 동일한 개수로 나누는 2의 거듭제곱이다.</li>
	<li>2번 조건을 만족하는 참가자의 수들 중 가장 큰 수가 제t회 ZOAC의 참가자의 수이다.</li>
</ol>

<p>가령 제6회 ZOAC의 참가자 수는 총 2×6=12개의 기념품을 남김없이 동일하게 나눌 수 있는&nbsp;2의 거듭제곱 수들 중 가장 큰 값이 되는 것이다.&nbsp;12를 나누어 떨어지게 하는 2의 거듭제곱 수들은 2<sup>0</sup>, 2<sup>1</sup>, 2<sup>2</sup>가 있으므로 이 수들 중 가장 큰 값인 2<sup>2</sup>가&nbsp;제6회 ZOAC의 참가자 수가 된다.&nbsp;원영이는 위 규칙들을 만족하도록 대회의 참가자 수를 정할&nbsp;때&nbsp;회차에 따른 ZOAC의 참가자의 수가 궁금하였다.</p>

<p>원영이의 궁금증을 풀어주기 위해 ZOAC의 회차 수 N이 주어졌을 때, 제1회 ZOAC부터 제N회 ZOAC까지 참가자 수의 합을&nbsp;구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 자연수&nbsp;N(1&nbsp;≤ N&nbsp;≤ 1,000,000,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 제1회 ZOAC부터 제N회 ZOAC까지의 참가자 수의 합을&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
','16
','MATH'),
                                                                                                                (2934,'BAEKJOON','https://www.acmicpc.net/problem/16725',16725,'다항 계수','2초','256 MB',16,'<p><strong>다항 정리</strong>(multinomial theorem)는 다항식의 거듭제곱을 전개하는 정리이며, 전개식의 계수를 <strong>다항 계수</strong>(multinomial coefficient)라고 한다. 우리가 다룰 다항식은 모든 항의 계수가 1인 경우이고, 아래는 그 예시이다.</p>

<p style="text-align: center;">(1 + x + x<sup>2</sup>)<sup>3</sup> = 1 + 3x + 6x<sup>2</sup> + 7x<sup>3</sup> + 6x<sup>4</sup> + 3x<sup>5</sup> + x<sup>6</sup></p>

<p>다항정리를 일반화 하면, 다음과 같이 나타낼 수 있다.</p>

<p style="text-align: center;">(1 + x + ... + x<sup>n</sup>)<sup>m</sup> = a<sub>0</sub>x<sup>0</sup>&nbsp;+ a<sub>1</sub>x<sup>1</sup>&nbsp;+ ... + a<sub>nm</sub>x<sup>nm</sup></p>

<p>어떤 수 k(0 ≤ k ≤ n ×&nbsp;m)가 주어졌을 때 x<sup>k</sup>의 계수 a<sub>k</sub>를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 음이 아닌 정수 n(0 ≤ n ≤ 500), m(1&nbsp;≤ m ≤ 500), k가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 x<sup>k</sup>의 계수를 출력한다. 단, 수가 커질 수 있으므로 1,000,000,009로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>문제에 주어진 다항식을 푸는 방식 중 하나는 다음과 같다.</p>

<p><img alt="" src="https://upload.acmicpc.net/13decd85-0341-4980-b2c4-dc793fcd084f/-/preview/"></p>

<ol>
	<li>1+ x + x<sup>2</sup>의 계수를 표현</li>
	<li>x(1+ x + x<sup>2</sup>)의 계수를 표현</li>
	<li>x<sup>2</sup>(1+ x + x<sup>2</sup>)의 계수를 표현</li>
	<li>1~3의 각 열을 더함 ≡ (1 + x + x<sup>2</sup>)<sup>2</sup>의 계수</li>
	<li value="7">4~6의 각 열을 더함&nbsp;≡ (1 + x + x<sup>2</sup>)<sup>3</sup>의 계수</li>
</ol>

				</div>
				</div>','2 3 4
','6
','MATH'),
                                                                                                                (2944,'BAEKJOON','https://www.acmicpc.net/problem/16855',16855,'일해라, 류트!','2초','512 MB',17,'<p>디디포스 주식회사에 다니는 류트는 회사의 코딩 테스트를 출제하는 업무를 맡게 되었다. 그는 고양이 소개팅이란 문제를 출제했지만, 일하기 귀찮다는 이유로 정해를 짜지 않았고<sup>[1]</sup>&nbsp;디디에 의해 해고당했다.&nbsp;일자리를 잃은 류트는 러시아로 이사를 가서 새로운 직업을 찾게 되었다.</p>

<p>우여곡절 끝에 러시아의 화학 공학 기업에서 근무하게 된 류트는 블라디보스토크에서 모스크바로 몇 개의 파이프를 거쳐 여러 화학 약품을 옮기려고 한다. 블라디보스토크에서 모스크바로 화학 약품을 파이프를 통해 수송하려면 총 M개의 파이프 P<sub>1</sub>, P<sub>2</sub>, ..., P<sub>M</sub>을 차례로 거쳐야 한다. 각각의 i = 1, 2, ..., M 에 대하여 P<sub>i</sub>의 길이는 L<sub>i</sub>이다.</p>

<p>류트가 옮기려는 화학 약품은 총 N가지 종류이다. 편의상 이들에 1, 2, 3, ..., N의 번호를 붙이자. 참고로, 각각의 1&nbsp;≤ i < j&nbsp;≤ N에 대하여 화학 약품 i는 화학 약품 j 보다 먼저 수송되어야 한다.</p>

<p>각각의 i = 1, 2, ..., N에 대하여 화학 약품 i의 점성계수는 r<sub>i</sub>이다. 점성계수가 r인 화학 약품을 길이가 L인 파이프로 시각 t부터 흘려보내기 시작했다면, 이 화학 약품은 시각 t+rl 직전에 해당 파이프를 완전히 빠져나온다. 다시 말해, [t, t+rl) 동안 해당 파이프를 통과한다.</p>

<p>류트는 여러 화학 약품이 섞일 것을 염려하여, 각각의 i = 1, 2, ..., M에 대하여 하나의 화학 약품이 P<sub>i</sub>를 통과한 후, C<sub>i</sub> 만큼의 시간이 지나기 이전에는 다른 화학 약품이 P<sub>i</sub>에 들어오는 일이 없도록 하고자 한다. (이러한 C<sub>i</sub>들은 류트가 나름의 기준을 가지고 정해놓은 값으로 입력을 통해 주어질 것이다.)</p>

<p>또한, i = 1, 2, ..., M-1에 대하여 화학 약품이 P<sub>i</sub>를 빠져 나온 직후에 바로 P<sub>i+1</sub>로 들어가야한다. 다시 말해, 화학 약품이 파이프들을 거쳐 흘러가는 도중에 멈추어서는 안 된다.</p>

<p>류트가 시각 0부터 시작하여 화학 약품들을 파이프로 흘려보낸다고 하자. 류트는 최소 시간 안에 수송 작업을 완료하고자 한다. 류트가 최소 시간 안에 수송 작업을 완료할 경우 i = 1, 2, ..., N에 대하여 화학 약품 i가 P<sub>N</sub>을 빠져나오는 시각을 T<sub>i</sub>라 하자. 이 때, T<sub>1</sub>, T<sub>2</sub>, ..., T<sub>N</sub>을 구해보자.</p>

<hr>
<p><sup>[1]</sup> 실제로 정해를 짜지 않았습니다.?? 이를 한심하게 여긴 디디가 대신 풀어준 바람에 류트는 풀이도 모릅니다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에 N, M이 사이에 공백을 두고 주어진다.</p>

<p>입력의&nbsp;둘째 줄에 L<sub>1</sub>, L<sub>2</sub>, ..., L<sub>M</sub>이 사이에 공백을 두고 주어진다.</p>

<p>입력의 셋째 줄에 C<sub>1</sub>, C<sub>2</sub>, ..., C<sub>M</sub>이 사이에 공백을 두고 주어진다.</p>

<p>입력의 넷째 줄에 r<sub>1</sub>, r<sub>2</sub>, ..., r<sub>N</sub>이 사이에 공백을 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력의 첫 줄에 T<sub>1</sub>, T<sub>2</sub>, ..., T<sub>N</sub>을 사이에 공백을 두고 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 3
3848 3073 1988
73 67 76
3 21 46
','26727 198706 502312
','MATH'),
                                                                                                                (2930,'BAEKJOON','https://www.acmicpc.net/problem/16878',16878,'궁전','2초','512 MB',22,'<p>체스가 지겨워진 구사과는 새로운 체스 말을 만들었다.</p>

<p>새로 만든 체스말은 "궁전" 이다. 궁전은 룩의 이동 방법과 킹의 이동 방법을 모두 사용할 수 있다. 즉, 같은 행 또는 열에 있는 칸이나&nbsp;인접한 네 방향과 대각선 네 방향으로 이동할 수 있다.</p>

<p>크기가 N×N인 체스판 위에 궁전 N개를 놓는 방법을 구하는 프로그램을 작성하시오. 체스판 위에 놓인 궁전은 서로 공격할 수 없어야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T(1 ≤ T ≤ 1,000,000)가 주어진다. 각 테스트 케이스는 한 줄에 하나씩 주어지며, 체스판의 크기 N(1 ≤ N ≤ 10,000,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스마다 궁전 N개를 놓는 방법의 수를 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8
1
2
3
7
10
1000
10000
9999999
','1
0
0
646
479306
711794305
450342414
838796194
','MATH'),
                                                                                                                (2949,'BAEKJOON','https://www.acmicpc.net/problem/16886',16886,'나누기 게임','1초','512 MB',18,'<p>구사과와 큐브러버는 나누기 게임을 하려고 한다. 이 게임은 돌이 N개 포함되어 있는 돌 더미 1개에서 시작한다. 두 사람은 턴을 번갈아 가지며, 구사과가 턴을 먼저 갖는다. 각 턴마다 다음을 할 수 있다.</p>

<ul>
	<li>돌 더미 하나를 고르고, 돌 더미 k(k ≥ 2)개로 나눈다.</li>
	<li>새로 만든 돌 더미에 포함된 돌의 개수를 a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>k</sub>라고 했을 때, a<sub>1</sub> > a<sub>2</sub> > ... > a<sub>k</sub> > 0, a<sub>1</sub> - a<sub>2</sub> = a<sub>2</sub> - a<sub>3</sub> = ... = a<sub>k-1</sub> - a<sub>k</sub> = 1을 만족해야 한다.</li>
</ul>

<p>더 이상 나눌 돌 더미가 없는 사람이 게임에서 진다. 두 사람이 최적의 방법으로 게임을 진행했을 때, 누가 이기는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(1 ≤ N ≤ 100,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>구사과가 이기는 경우에는 첫 턴에서 구사과가 만든 돌 더미의 개수 k를 출력한다. 가능한 k가 여러가지인 경우에는 가장 작은 값을 출력한다. 큐브러버가 이기는 경우에는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
','2
','MATH'),
                                                                                                                (2932,'BAEKJOON','https://www.acmicpc.net/problem/16891',16891,'탄성 충돌','3초(추가시간없음)','256 MB',14,'<p>탄성 충돌은 운동 에너지가 보존되는 충돌이다. 일차원 상에서 질량이 <em>m</em><sub>1</sub>, <em>m</em><sub>2</sub>인 두 물체가 각각 속도(여기서 속도는 방향을 포함하는 양이다)&nbsp;<em>u</em><sub>1</sub>, <em>u</em><sub>2</sub>로 운동하다가 탄성 충돌하면 충돌 후 두 물체의 속도는 각각</p>

<p>$$ v_1 = \frac{m_1-m_2}{m_1+m_2}u_1 + \frac{2m_2}{m_1+m_2}u_2 $$</p>

<p>$$ v_2 = \frac{2m_1}{m_1+m_2}u_1 - \frac{m_1-m_2}{m_1+m_2}u_2 $$</p>

<p>이다. 예를 들어 질량 2<em>m</em>인 물체가 왼쪽에서 속도 <em>v</em>로 다가오고 질량 <em>m</em>인 물체가 오른쪽에서 속도 -<em>v</em>로 다가와 탄성 충돌하면 충돌 후 둘의 속도는 각각 -<em>v</em>/3과 5<em>v</em>/3이 된다. 여기서 속도의 부호는 왼쪽에서 오른쪽으로 운동하는 것을 (+)로 두었다. 한편 움직이지 않는 벽과 물체가 탄성 충돌하면 물체의 속력은 그대로이고 운동 방향만 반대가 된다. 즉, 속도의 부호만 달라진다.</p>

<p>이제 아래 그림과 같이 왼쪽이 벽으로 막힌 1차원 평면에서 운동하는 두 물체 <em>A</em>와 <em>B</em>를 생각하자. <em>A</em>의&nbsp;질량은 1이고 처음에는&nbsp;정지해 있다. <em>B</em>의 질량은 <em>N</em><sup>2</sup>이고 처음에는 <em>A</em>의 오른쪽에서 다가온다. 이때 총 충돌 횟수(<em>A</em>와 <em>B</em> 사이&nbsp;충돌과 벽과 <em>A</em> 사이 충돌을 모두 센다)는 몇 번일까? 모든 마찰은 무시하고 모든 충돌은 탄성 충돌이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/75f093d5-c232-4bc2-bbe2-018afbf963a4/-/preview/" style="width: 381px; height: 106px;"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 양의 정수 <em>N</em>이 입력된다. (1 ≤ <em>N</em> ≤ 500)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>총 충돌 횟수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>Python의 fractions 모듈 사용을 적극 권장한다.</p>

				</div>
				</div>','1','3','MATH'),
                                                                                                                (2933,'BAEKJOON','https://www.acmicpc.net/problem/16893',16893,'소수 제곱 게임','1초','512 MB',20,'<p>구사과와 큐브러버는 소수 제곱 게임을 하려고 한다. 소수 제곱 게임은 길이가 N인 수열&nbsp;A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>N</sub>을 이용한다. 두 사람이 턴을 번갈아 가지면서 게임을 진행한다.</p>

<p>각 턴이 되었을 때, 플레이어는 정수 p와 k를 선택한다. 이 때, p는 소수, k는 양의 정수가 되어야 한다. 또, p<sup>k</sup>는 수열에 포함되어 있는 정수 중 적어도 하나를 나눌 수 있어야 한다. 그 다음, 수열에서 p<sup>k</sup>로 나누어 떨어지는 모든 수는 p<sup>k</sup>로 나누어야 한다. p와 k를 선택할 수 없는 사람이 게임을 진다.</p>

<p>두 사람이 게임을 최적의 방법으로 진행했을 때, 누가 이기는지 구하는 프로그램을 작성하시오. 게임은 구사과가 먼저 턴을 갖는다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 수열의 크기 N(1 ≤ N ≤ 100)이 주어진다. 둘째 줄에는 A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>N</sub> (1 ≤ A<sub>i</sub> ≤ 10<sup>9</sup>)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>구사과가 이기는 경우에는 "koosaga", 큐브러버가 이기는 경우에는 "cubelover"를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 1 1 1
','cubelover
','MATH'),
                                                                                                                (2951,'BAEKJOON','https://www.acmicpc.net/problem/16894',16894,'약수 게임','2초','512 MB',13,'<p>구사과와&nbsp;큐브러버는 약수 게임을 하려고 한다. 약수 게임은 종이에 정수를 적으면서 진행하고, 두 사람은 턴을 번갈아 가진다.</p>

<p>가장 처음에 종이에는 정수 N이 적혀있다. 각자의 턴이 돌아올 때마다, 종이에 적힌 수를 지우고, 그 수의 약수를 다시 적는다.&nbsp;이 때, 약수는 1과 자기자신이 아닌 수가 되어야 한다. 더 이상 적을 수가 없는 사람이 게임을 이긴다.</p>

<p>두 사람이 최적의 방법으로 게임을 했을 때, 누가 이기는지 구하는 프로그램을 작성하시오. 게임은 구사과가 먼저 시작한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 N(1 ≤ N ≤ 10<sup>13</sup>)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>구사과가 이기는 경우에는 "koosaga"를, 큐브러버가 이기는 경우에는 "cubelover"를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
','cubelover
','MATH'),
                                                                                                                (2952,'BAEKJOON','https://www.acmicpc.net/problem/16896',16896,'더일곱이 게임','1초','512 MB',17,'<p>구사과와 큐브러버가 더일곱이 게임을 하려고 한다. 더일곱이 게임은 정수 1이 적혀있는 종이를 이용해 게임을 진행하고, N을 만드는 사람이 게임을 지게 된다.</p>

<p>두 사람은 턴을 번갈아 가지며 게임을 하고, 각 사람은 자신의 턴이 왔을 때, 종이에 적힌 수에 1을 더하거나, 2를 곱해야 한다. 정수는 N보다 커지면 안 된다.</p>

<p>게임은 구사과가 먼저 시작한다.</p>

<p>두 사람이 최적의 방법으로 게임을 진행했을 때, 누가 이기는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T(1 ≤ T ≤ 10,000)이 주어진다. 둘째 줄부터 T개의 줄에 테스트 케이스의 정보가 한 줄에 하나씩 주어진다. 정보는 정수 N(2 ≤ N ≤ 10<sup>15</sup>)로 이루어져 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스마다 이기는 사람을 출력한다. 구사과가 이기는 경우에는 "koosaga", 큐브러버가 이기는 경우에는 "cubelover"를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
2
3
4
5
','cubelover
koosaga
cubelover
cubelover
','MATH'),
                                                                                                                (2953,'BAEKJOON','https://www.acmicpc.net/problem/16904',16904,'집합과 쿼리','4초','512 MB',22,'<p>집합 S에 다음과 같은 쿼리를 수행해야 한다.</p>

<ul>
	<li>x: 집합 S에 x를 추가한다.</li>
	<li>-x: 집합 S에서 x를 제거한다.</li>
</ul>

<p>각각의 쿼리를 수행할 때마다 집합에 포함된 모든 값을 XOR한 결과가 가장 큰 S의 부분 집합 T를 찾아야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 쿼리의 개수 N(1&nbsp;≤ N ≤ 500,000)이 주어진다. 둘째 줄부터 N개의 줄에&nbsp;쿼리가 한 줄에 하나씩 주어진다. 집합에 추가되는 수는 2,000,000,000보다 작거나 같은 자연수이다.</p>

<p>집합에 이미 들어있는 수를 추가하는 쿼리와 집합에 없는 수를 제거하는 쿼리는 주어지지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 쿼리를 수행한 후에 T에 포함된 모든 값을 XOR한 결과를 출력한다. 쿼리를 수행한 후에 집합 S의 크기가 0인 경우에는 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
1
2
3
4
-2
-3
','1
3
3
7
7
5
','MATH'),
                                                                                                                (2954,'BAEKJOON','https://www.acmicpc.net/problem/16917',16917,'양념 반 후라이드 반','2초','512 MB',4,'<p>현진 치킨에서 판매하는 치킨은 양념 치킨, 후라이드 치킨, 반반 치킨으로 총 세 종류이다. 반반 치킨은 절반은 양념 치킨, 절반은 후라이드 치킨으로 이루어져있다. 양념 치킨 한 마리의 가격은 A원, 후라이드 치킨 한 마리의 가격은 B원, 반반 치킨 한 마리의 가격은 C원이다.</p>

<p>상도는 오늘 파티를 위해 양념 치킨&nbsp;최소 X마리, 후라이드 치킨 최소 Y마리를 구매하려고 한다. 반반 치킨을 두 마리 구입해 양념 치킨 하나와 후라이드 치킨 하나를 만드는 방법도 가능하다. 상도가 치킨을 구매하는 금액의 최솟값을 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 다섯 정수 A, B, C, X, Y가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>양념 치킨&nbsp;최소 X마리, 후라이드 치킨 최소 Y마리를 구매하는 비용의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1500 2000 1600 3 2
','7900
','MATH'),
                                                                                                                (2935,'BAEKJOON','https://www.acmicpc.net/problem/16921',16921,'로마 숫자 만들기 2','2초','512 MB',17,'<p>로마 숫자에서는 수를 나타내기 위해서 I, V, X, L을 사용한다. 각 문자는 1, 5, 10, 50을 의미하고, 이 문제에서 다른 문자는 사용하지 않는다.</p>

<p>하나 또는 그 이상의 문자를 이용해서 수를 나타낼 수 있다. 문자열이 나타내는 값은, 각 문자가 의미하는 수를 모두 합한 값이다. 예를 들어, XXXV는 35, IXI는 12를 의미한다.</p>

<p>실제 로마 숫자에서는 문자의 순서가 중요하지만, 이 문제에서는 순서는 신경쓰지 않는다. 예를 들어, 실제 로마 숫자에서 IX는 9를 의미하지만, 이 문제에서는 11을 의미한다.</p>

<p>로마 숫자를 N개 사용해서 만들 수 있는 서로 다른 수의 개수를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 사용할 수 있는 문자의 개수 N (1 ≤ N ≤ 1,000,000,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 로마 숫자 N개를 사용해서 만들 수 있는 서로 다른 수의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','4
','MATH'),
                                                                                                                (2936,'BAEKJOON','https://www.acmicpc.net/problem/16922',16922,'로마 숫자 만들기','2초','512 MB',8,'<p>로마 숫자에서는 수를 나타내기 위해서 I, V, X, L을 사용한다. 각 문자는 1, 5, 10, 50을 의미하고, 이 문제에서 다른 문자는 사용하지 않는다.</p>

<p>하나 또는 그 이상의 문자를 이용해서 수를 나타낼 수 있다. 문자열이 나타내는 값은, 각 문자가 의미하는 수를 모두 합한 값이다. 예를 들어, XXXV는 35, IXI는 12를 의미한다.</p>

<p>실제 로마 숫자에서는 문자의 순서가 중요하지만, 이 문제에서는 순서는 신경쓰지 않는다. 예를 들어, 실제 로마 숫자에서 IX는 9를 의미하지만, 이 문제에서는 11을 의미한다.</p>

<p>로마 숫자를 N개 사용해서 만들 수 있는 서로 다른 수의 개수를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 사용할 수 있는 문자의 개수 N (1 ≤ N ≤ 20)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 로마 숫자 N개를 사용해서 만들 수 있는 서로 다른 수의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','4
','MATH'),
                                                                                                                (2937,'BAEKJOON','https://www.acmicpc.net/problem/16936',16936,'나3곱2','2초','512 MB',11,'<p>나3곱2 게임은 정수 하나를 이용한다. 가장 먼저, 정수 x로 시작하고, 연산을 N-1번 적용한다. 적용할 수 있는 연산은 두 가지 있고, 아래와 같다.</p>

<ul>
	<li>나3: x를 3으로 나눈다. x는 3으로 나누어 떨어져야 한다.</li>
	<li>곱2: x에 2를 곱한다.</li>
</ul>

<p>나3곱2 게임을 진행하면서, 만든 수를 모두 기록하면 수열 A를 만들 수 있다. 예를 들어, x = 9, N = 6이고, 적용한 연산이 곱2, 곱2, 나3, 곱2, 나3인 경우에 A = [9, 18, 36, 12, 24, 8] 이다.</p>

<p>수열 A의 순서를&nbsp;섞은 수열 B가 주어졌을 때, 수열 A를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 수열의 크기 N(2 ≤ N ≤ 100)이 주어진다. 둘째 줄에는 수열 B가 주어진다. B에 포함된 원소는 10<sup>18</sup>&nbsp;보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>나3곱2 게임의 결과 수열 A를 출력한다. 항상 정답이 존재하는 경우에만 입력으로 주어지며, 가능한 정답이 여러가지인 경우에는 아무거나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
4 8 6 3 12 9
','9 3 6 12 4 8
','MATH'),
                                                                                                                (2955,'BAEKJOON','https://www.acmicpc.net/problem/16941',16941,'꼬리별','5초(추가시간없음)','256 MB',24,'<p>긴 꼬리를 남기며 밤하늘을 지나가는 꼬리별을 본 적이 있는가? 사실 이 꼬리는 먼지나 기체로 이루어진 것이 아니라, 별의 주민들이 생업으로 마법 가루를 만들어 뿌리고 있는 것이다. 이 별의 주민들은 족제비처럼 생겼으며, 정성을 다해 꼬리를 만든다는 의미로 스스로를 다꼬리라고 부른다.</p>

<p>꼬리별의 1년은 <em>P</em>일로 나뉘어 있으며, 별에는 1번부터 <em>P</em>번까지 번호가 붙은 <em>P</em>마리의 다꼬리가 살고 있다. 만들어야 하는 마법 가루의 양에 비해 다꼬리의 수가 부족하기 때문에, 다꼬리들은 다음과 같은 규칙으로 야근을 한다.</p>

<ul>
	<li>1번 다꼬리는 연봉 지급을 담당하는 다꼬리라서 매년 첫 날만 야근을 한다.</li>
	<li>그 외의 <em>i</em>(2 ≤ <em>i</em> ≤ <em>P</em>)번 다꼬리는 매년 <em>i</em>번째 날을 제외한 <em>i</em>의 배수 번째 날에 야근을 한다.</li>
</ul>

<p>위 규칙에 따르면 1년 중 몇몇 날은 모든 다꼬리가 정시 퇴근을 하게 되는데, 그런 날마다 그 날짜를 그 해의 연도만큼 거듭제곱한 값이 다꼬리들의 연봉에 누적된다. 이 값은 천문학적으로 큰 값이지만, 아쉽게도 다꼬리들이 받는 연봉은 이 값을 <em>P</em>로 나눈 나머지가 된다.</p>

<p>다꼬리들이 규칙에 따라 한 해 동안 열심히 일했을 때 받게 되는 연봉을 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 꼬리별의 한 해를 이루는 날의 수이자 별에 살고 있는 다꼬리들의 수를 의미하는 정수 <em>P</em>(2 ≤ <em>P</em> ≤ 10<sup>9</sup>, <strong><em>P</em>는 소수</strong>)와 올해 연도를 의미하는 정수 <em>Q</em>(0 ≤ <em>Q</em> ≤ 1,000)가 공백을 사이에 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 줄에 올 한 해 동안 일한 다꼬리들이 받게 되는 연봉을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7 1','3','MATH'),
                                                                                                                (2956,'BAEKJOON','https://www.acmicpc.net/problem/16943',16943,'숫자 재배치','2초','512 MB',10,'<p>두 정수 A와 B가 있을 때, A에 포함된 숫자의 순서를 섞어서 새로운 수 C를 만들려고 한다. 즉, C는 A의 순열 중 하나가 되어야 한다.&nbsp;</p>

<p>가능한 C 중에서 B보다 작으면서, 가장 큰 값을 구해보자. C는 0으로 시작하면 안 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 A와 B가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>B보다 작은&nbsp;C중에서 가장 큰 값을 출력한다. 그러한 C가 없는 경우에는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1234 3456
','3421
','MATH'),
                                                                                                                (2957,'BAEKJOON','https://www.acmicpc.net/problem/16968',16968,'차량 번호판 1','1초','512 MB',5,'<p>상도시의 차량 번호판&nbsp;형식이 주어졌을 때, 가능한 차량 번호판의 개수를 구해보자.</p>

<ul>
	<li>번호판에 사용할 수 있는 숫자는 0, 1, 2, ..., 8, 9이다.</li>
	<li>사용할 수 있는 문자는 a, b, c, d, ..., y, z이다.</li>
	<li>차량 번호판의 형식은 최대 4글자이고, c와 d로 이루어진 문자열로 나타낼 수 있다.</li>
	<li>c는 문자가 위치하는 자리, d는 숫자가 위치하는 자리이다.</li>
	<li>같은 문자 또는 숫자가 연속해서 2번 나타나면 안 된다.</li>
</ul>

<p>예를 들어, 형식이 "cd"이면, a1, d4, h5, k4 등이 가능하다. 형식이 "dd"인 경우에 01, 10, 34, 69는 가능하지만, 00, 11, 55, 66은 같은 숫자가 2번 연속해서 불가능하다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 차량 번호판의 형식이 주어진다. 형식은 길이가 4보다 작거나 같으며, c와 d로만 이루어져 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 가능한 차량 번호판의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','dd
','90
','MATH'),
                                                                                                                (2958,'BAEKJOON','https://www.acmicpc.net/problem/16969',16969,'차량 번호판 2','1초','512 MB',6,'<p>상도시의 차량 번호판&nbsp;형식이 주어졌을 때, 가능한 차량 번호판의 개수를 구해보자.</p>

<ul>
	<li>번호판에 사용할 수 있는 숫자는 0, 1, 2, ..., 8, 9이다.</li>
	<li>사용할 수 있는 문자는 a, b, c, d, ..., y, z이다.</li>
	<li>차량 번호판의 형식은 최대 1,000,000글자이고, c와 d로 이루어진 문자열로 나타낼 수 있다.</li>
	<li>c는 문자가 위치하는 자리, d는 숫자가 위치하는 자리이다.</li>
	<li>같은 문자 또는 숫자가 연속해서 2번 나타나면 안 된다.</li>
</ul>

<p>예를 들어, 형식이 "cd"이면, a1, d4, h5, k4 등이 가능하다. 형식이 "dd"인 경우에 01, 10, 34, 69는 가능하지만, 00, 11, 55, 66은 같은 숫자가 2번 연속해서 불가능하다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 차량 번호판의 형식이 주어진다. 형식은 길이가 1,000,000보다 작거나 같으며, c와 d로만 이루어져 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 가능한 차량 번호판의 개수를 1,000,000,009로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','dd
','90
','MATH'),
                                                                                                                (2970,'BAEKJOON','https://www.acmicpc.net/problem/16970',16970,'정수 좌표의 개수','2초','512 MB',10,'<p>2차원 좌표 평면 위에서 두 점을 골라 선분을 그었을 때, 지나가는 점의 개수가 K개인 선분의 수를 구해보자.</p>

<p>가능한 점의 좌표 (x, y)는 0 ≤ x ≤ N, 0 ≤ y ≤ M 이고, x와 y는 정수이다. 선분의 양 끝점도 선분이 지나가는 점이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, M, K가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 지나가는 점의 개수가 K개인 선분의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1 2
','6
','MATH'),
                                                                                                                (2966,'BAEKJOON','https://www.acmicpc.net/problem/16971',16971,'배열 B의 값','2초','512 MB',13,'<p>크기가 N×M인 배열 A가 있을 때, 다음과 같은 방법을 이용해서 크기가 (N-1)×(M-1)인 배열 B를 만들 수 있다.</p>

<ul>
	<li>B[i][j] = A[i][j] + A[i+1][j] + A[i+1][j+1] + A[i][j+1] (1 ≤ i < N, 1 ≤ j < M)</li>
</ul>

<p>배열의 값은 배열의 모든 원소를 합한 값이다.</p>

<p>배열 A에서 임의의 두 행이나 임의의 두 열의 위치를 교환할 수 있다. 배열 A에서 교환을 <strong>최대 1번</strong> 수행해서 만들 수 있는 배열 B의 값의 최댓값을 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 배열 A의 크기 N, M이 주어진다. 둘째 줄부터 N개의 줄에 배열의 원소가 주어진다. 배열은 정수로만 이루어져 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>만들 수 있는 배열 B의 값 중 최댓값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 3
9 8 7
3 2 1
6 5 4
','92
','MATH'),
                                                                                                                (3047,'BAEKJOON','https://www.acmicpc.net/problem/17073',17073,'나무 위의 빗물','1초','512 MB',11,'<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/96077f22-38dc-4cab-8122-1a693bc3928f/-/preview/" style="height: 282px; width: 300px;"><br>
&nbsp;</p>

<p>트리란, 사이클이 없는 연결 그래프를 의미한다. 위 그림은 1번 정점을 루트로 하는 어떤 트리를 나타낸 모습이다.</p>

<p>사실 이 트리는 영훈이가 뒷마당에서 기르고 있는 나무이다. 어제는 비가 왔기 때문에, 트리의 1번 정점에는 <em>W</em>만큼의 물이 고여 있다. 1번 정점을 제외한 모든 정점에는 아직 물이 고여 있지 않은 상태이다.</p>

<p>이제 매초마다 모든 정점은 아래의 작업을 순서대로 반복한다.</p>

<ul>
	<li>물을 가지고 있으며, 자식 정점이 있다면 자식 정점 중 하나를 골라 물을 1 준다. 자식 정점이 여러 개라면 동일한 확률로 그 중 하나를 고른다.</li>
	<li>만약 부모 정점이 자신에게 물을 흘려보냈다면 받아서 쌓아 둔다.</li>
</ul>

<p>이때, 위 작업은 순서대로 진행되므로 부모 정점에게 받은 물을 즉시 자식 정점에게 줄 수는 없다.</p>

<p>영훈이는 나무를 바라보면서 더 이상 물이 움직이지 않는 상태가 되었을 때 각 정점에 어느 정도의 물이 있게 될지 궁금해졌다. 더 이상 물이 움직이지 않을 때, <em>i</em>번 정점에 쌓인 물의 양의 기댓값을 <em>P<sub>i</sub></em>라 하자. 이때, <em>P<sub>i</sub></em>가 0보다 큰 정점들에 대해서 <em>P<sub>i</sub></em>들의 평균은 어느 정도가 될까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 트리의 노드의 수 <em>N</em>과 1번 노드에 고인 물의 양을 의미하는 정수&nbsp;<em>W</em>가 주어진다.&nbsp;(2 ≤ <em>N </em>≤ 500,000, 1 ≤ <em>W</em> ≤ 10<sup>9</sup>)</p>

<p>다음 <em>N-1</em>줄에 걸쳐, 트리에 존재하는 간선의 정보가 <em>U V</em>의 형태로 주어진다. (1 ≤ <em>U</em>,<em> V</em>&nbsp;≤<em> N</em>????,&nbsp;<em>U&nbsp;</em>≠ <em>V</em>)</p>

<p>이는 양 끝 정점이 각각 <em>U</em>와 <em>V</em>인 간선이 트리에 존재한다는 의미이다.</p>

<p>입력으로 주어지는 트리는 항상 올바른 연결 트리임이 보장되며, 주어지는&nbsp;트리의 루트는 항상 1번 정점이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>문제의 정답을 출력한다. 정답과의 차이가 10<sup>-3</sup> 이하인 값은 모두 정답으로 인정된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 20
5 3
3 4
2 1
1 3
','6.666666667','MATH'),
                                                                                                                (3048,'BAEKJOON','https://www.acmicpc.net/problem/17075',17075,'유물 복원','1초','512 MB',16,'<p>서울 Y모 대학에서 끊임없이 소음과 분진을 발생시키며 공사를 진행하던 중, 고대 유물로 추정되는 석판 하나가 발굴되었다. 이 석판은 <em>N</em>개의 행과 <em>M</em>개의 열로 나누어진 격자 형태로, 각 칸은 텅 빈 칸이거나 사람 한 명이 그려진 칸이었다. 석판은 아쉽게도 온전한 형태로 발굴되지는 않았으며, 칸들 중에는 일부가 부서져 있어 내용을 식별할 수 없는 칸도 있었다.</p>

<p>그 후 얼마 지나지 않아, 관련 자료를 통해 이 석판의 규칙을 알 수 있게 되었다. 이 석판에서 가능한 모든 부분 직사각형에 대해 내부의 사람 수를 구하고, 그 수들을 모두 더해서 얻는 값이 <em>K</em>의 배수여야 한다는 것이다. 0은 모든 수의 배수가 될 수 있다.</p>

<p>예를 들어, 2 × 2 크기의 아래 석판을 보자.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/2b85c7f5-9374-401e-b165-c241384bb758/-/preview/" style="height: 252px; width: 250px;"></p>

<p>위 석판에는 아래와 같이 9개의 부분 직사각형이 있다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/876880fe-94ac-4e3a-8247-5bd50a446957/-/preview/" style="height: 151px; width: 150px;"><img alt="" src="https://upload.acmicpc.net/ad277de5-15d1-41a4-b548-8ea5ab5d327d/-/preview/" style="height: 151px; width: 150px;"><img alt="" src="https://upload.acmicpc.net/824f9d3f-b6f4-4b6b-a0db-f4ed2e0787e4/-/preview/" style="height: 151px; width: 150px;"><img alt="" src="https://upload.acmicpc.net/7deb3b54-3ef6-4f9f-a98c-dbf007313cab/-/preview/" style="height: 151px; width: 150px;"><img alt="" src="https://upload.acmicpc.net/8154a029-55ed-47b7-855e-99fdf791b9ab/-/preview/" style="height: 151px; width: 150px;"><img alt="" src="https://upload.acmicpc.net/019957ae-3bd3-4494-a6c4-70fd6ebc6438/-/preview/" style="height: 151px; width: 150px;"></p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/8a9a7f71-61cc-4110-92b7-aeb79bbf7429/-/preview/" style="height: 151px; width: 150px;"><img alt="" src="https://upload.acmicpc.net/94cc0675-2390-49cf-9428-c5a622635a69/-/preview/" style="height: 151px; width: 150px;"><img alt="" src="https://upload.acmicpc.net/334dbb54-269a-4038-82fd-b5a586814632/-/preview/" style="height: 151px; width: 150px;"></p>

<p>각 부분 직사각형 내부의 합은 1, 0, 0, 1, 1, 1, 1, 1, 2가 되고, 이들의 총합은 8이 된다.</p>

<p>학교 측은 얻은 정보를 토대로 석판을 가능한 형태 중 하나로 복원하기 위해 연세대학교 컴퓨터과학과에 복원작업을 의뢰하었고, 자연스럽게 이 과제는 2019 교내 대회의 문제로 출제되게 되었다. 당신은 석판의 형태와 <em>K</em>를 입력으로 받아 석판의 복원이 가능한지 알아보고, 가능할 경우 조건을 만족하는 석판 하나를 복원해야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 석판의 행의 수 <em>N</em>과 열의 수 <em>M</em>, 문제에 제시된 <em>K</em>가 주어진다. (1 ≤ <em>N, M </em>≤ 50, 2 ≤ <em>K</em> ≤ 2500)</p>

<p>둘째 줄부터 <em>N+1</em>번째 줄까지, 각 줄에 <em>M</em>개의 정수 <em>a<sub>i,j</sub></em>가 공백으로 구분되어 주어진다. (<em>a<sub>i,j</sub></em>&nbsp;∈ { -1, 0, 1})</p>

<p><em>a<sub>i,j</sub></em>&nbsp; = -1일 경우 석판의 <em>i</em>번째 행 <em>j</em>번째 열이 부서져 있음을, <em>a<sub>i,j</sub></em>&nbsp; = 0 일 경우 해당 칸이 비어 있음을, <em>a<sub>i,j</sub></em>&nbsp; = 1일 경우 해당 칸에 사람 한 명이 그려져 있음을 의미한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>복원이 가능할 경우 첫 줄에 1을, 불가능할 경우 -1을 출력한다.</p>

<p>만약 첫 줄에 1을 출력했다면, 이어 <em>N</em>개의 줄에 <em>M</em>개의 정수로 행렬에 존재하는 모든 -1을 0 또는 1로 대체하여 문제의 조건에 맞게 복원한 석판 하나를 출력한다. 입력에서 -1이 아니었던 모든 칸은 입력과 동일해야 하며, -1인 모든 칸은 0 또는 1 중 하나로 복원되어야 한다.</p>

<p>조건을 만족하는 석판이 여러 가지라면 아무 것이나 하나만 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>부분 직사각형이란, 행을 위부터 1, 2, …, <em>N</em>으로 번호를 매기고 열을 왼쪽부터 1, 2, …, <em>M</em>으로 번호를 매길 때, 1<em> </em>≤<em> r<sub>1</sub> </em>≤<em> r<sub>2</sub>&nbsp;</em>≤<em> N, </em>1<em> </em>≤<em> c<sub>1</sub> </em>≤<em> c<sub>2</sub> </em>≤<em> M</em>인 어떤 <em>r<sub>1</sub>, r<sub>2</sub>, c<sub>1</sub>, c<sub>2</sub></em>에 대하여 행의 번호가 <em>r<sub>1</sub></em> 이상 <em>r<sub>2</sub></em> 이하이며, 열의 번호가 <em>c<sub>1</sub> </em>이상 <em>c<sub>2</sub></em> 이하인 모든 칸의 집합을 뜻한다. 가능한 모든 부분 직사각형이란, 부등식을 만족하는 모든 서로 다른 (<em>r<sub>1</sub>,c<sub>1</sub>,r<sub>2</sub>,c<sub>2</sub></em>)에 대해 한 번씩 직사각형을 만든 것을 뜻한다.</p>

				</div>
				</div>','2 2 8
1 0
0 -1
','1
1 0
0 1
','MATH'),
                                                                                                                (3049,'BAEKJOON','https://www.acmicpc.net/problem/17079',17079,'달콤새콤','1초','512 MB',20,'<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/5fc4a9e8-6e00-4b3f-8f07-84c09f026f08/-/preview/" style="height: 231.667px; width: 347.5px;"><br>
&nbsp;</p>

<p>세상에서 가장 달콤한 축제! 달콤새콤 올림픽이 개최되는 날이 되었다.</p>

<p>이번 올림픽에는 매년 그랬듯이&nbsp;세 개의 나라, 사탕 나라, 초콜릿 나라, 쿠키 나라 가 참가한다. 각 나라는 <em>N</em>명의 대표 선수를 선발했으며,&nbsp;모든 선수 <em>i</em>는 달콤함 <em>a<sub>i</sub></em>와 새콤함 <em>b<sub>i</sub></em>를 갖고 있다.&nbsp;모든&nbsp;값들은 사전에 미리 측정되어 있다.</p>

<p>올림픽의 종목은 축제의 이름에서 볼 수 있듯이 딱 두 가지이다. 하나는&nbsp;달콤 이며, 하나는 새콤 이다. 올림픽은 아래와 같은 방식으로 총 <em>N</em>경기를 진행한다.</p>

<ul>
	<li>각 나라는 <em>N</em>명의 선수들을 내보낼 순서를 정한다. 모든 선수가 정확히 한 번씩 경기에 참여해야 한다.</li>
	<li>이제 <em>N</em>라운드 동안, 매 라운드마다 공평한 동전을 하나 던져 앞면이면 달콤, 뒷면이면 새콤 을 진행한다.</li>
	<li>각 라운드에는 각 나라에서 해당 순서를 가진 한 명씩의 선수가 참여한다. 즉, 총 세 명이 경기를 하게 된다.</li>
	<li>달콤 경기에서는 달콤함이 가장 높은 선수를 내보낸 나라가 항상 승리하며, 새콤 경기에서는 새콤함이 가장 높은 선수를 내보낸 나라가 항상 승리한다.</li>
	<li>만약 동점이 발생한다면, 이번 올림픽의 개최지인 사탕 나라가 우선 순위를 가지며, 그 다음은 전년도 우승자인 초콜릿 나라, 마지막으로 쿠키 나라가 우선 순위를 갖는다.</li>
	<li>경기를 마친 후, 승리한 나라는 승점 1점을 얻는다. Tie Breaking이 있기 때문에, 항상 정확히 하나의 나라가 승점을 가져가게 된다.</li>
</ul>

<p>올림픽은&nbsp;각 라운드에 출전한 선수가 누구인지, 그리고 어떤 종목이 개최되었는지에 따라 총 (<em>N</em>!)<sup>3</sup>×2<em><sup>N</sup></em>&nbsp;가지 서로 다른 형태로 개최될 수 있으며,&nbsp;각 경우에 대해&nbsp;개최될 확률은&nbsp;모두 동일하다.</p>

<p>이번 개최지인 사탕 나라에서는 이번 올림픽에서 꼭 우승을 하고 싶어졌다. 이를 위해 연구에 몰두한 결과, <em>이상한 물약</em>을 개발하게 되었고, 이 약은 안전하며, 먹는 것이 올림픽 규정에 어긋나지 않는다는 것을 알고 있다. 사탕 나라에서는 자국의 대표 선수 중 일부에게 물약을 마시도록 하여 우승 확률을 높이려 한다.</p>

<p><em>이상한 물약</em>을 마신 선수는 달콤함이 <em>L</em><sub><em>a</em>&nbsp;</sub>이상 <em>R<sub>a</sub></em>&nbsp;이하의 정수로, 새콤함이 <em>L<sub>b</sub></em> 이상 <em>R<sub>b</sub></em> 이하인 정수로 임의로 변한다. 모든 조합이 선택될 확률은 동일하다.</p>

<p>사탕 나라는 자국의 선수들 중 일부를 뽑아 <em>이상한 물약</em>을 먹게 함으로써, 얻는 승점의 기댓값을 최대화하고 싶다.</p>

<p>개최지인 사탕 나라를 위해, 어떤 선수들에게 <em>이상한 물약</em>을 줘야 할&nbsp;지, 그리고 승점의 기댓값은 최대 얼마가 될 지 계산해보도록 하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 각 나라의 대표 선수의 수이자 경기가 진행될 라운드 수인 <em>N</em>과 물약의 효능에 관한 값 <em>L<sub>a</sub></em>, <em>R<sub>a</sub></em>, <em>L<sub>b</sub></em>, <em>R<sub>b</sub></em>가&nbsp;주어진다. (1 ≤ <em>N</em> ≤ 100,000, 1&nbsp;≤&nbsp;<em>L<sub>a&nbsp;</sub></em>≤&nbsp;<em>R<sub>a</sub></em><sub style="">&nbsp;</sub>≤&nbsp;1000, 1&nbsp;≤&nbsp;<i>L</i><sub style=""><i>b</i></sub>&nbsp;≤&nbsp;<em>R<sub>b</sub></em> ≤ 1000)</p>

<p>둘째 줄에 사탕 나라의 <em>N</em>명의 대표 선수의 달콤함 <em>a<sub>i</sub></em>가 공백으로 구분되어 주어진다. (1 ≤ <em>a<sub>i</sub></em>&nbsp;≤ 1000)</p>

<p>셋째 줄에 사탕 나라의 <em>N</em>명의 대표 선수의 새콤함 <em>b<sub>i</sub></em>가 공백으로 구분되어 주어진다. (1 ≤ <em>b<sub>i</sub></em>&nbsp;≤ 1000)</p>

<p>넷째 줄, 다섯째 줄에는 같은 형식으로 초콜릿 나라의 대표 선수들의 달콤함, 새콤함이 주어지며, 여섯째 줄, 일곱째 줄에는 쿠키 나라의 대표단에 대한 정보가 같은 방식으로 주어진다.</p>

<p>모든 달콤함과 새콤함은 1 이상 1000 이하의 정수이다.</p>

<p>입력으로 주어진 순서는 경기에 참여할 순서가 아닌, 각 나라가 (<em>N</em>!)가지 경우 중 하나를 선택하기 전의 상태임에 유의한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>사탕 나라가 <em>이상한 물약</em>을 마실 선수를 최적으로 선택했을 때, 사탕 나라가 이번 올림픽에서 얻을 승점의 기댓값을 기약분수&nbsp;<em>P</em>/<em>Q</em>라 하자. 이 값이 유리수임은 증명된다.</p>

<p>이때, <em>Q</em>의 998,244,353에 대한 곱셈 역원 <em>Q</em><sup>-1</sup>에 대해 첫 줄에&nbsp;<em>P</em>×<em>Q</em><sup>-1&nbsp;</sup>mod 998,244,353을 출력한다.</p>

<p>그리고 둘째 줄에는 승점의 기댓값이 최대가 되도록 하기 위해 <em>이상한 물약</em>을 마실 선수의 수 <em>K</em>를 출력한다. (0&nbsp;≤ <em>K</em>&nbsp;≤ <em>N</em>)</p>

<p><em>K</em>가 0보다 크다면, 셋째 줄에 공백으로 구분하여 <em>이상한 물약</em>을 마실 선수의 번호를 출력한다. 같은 번호가 두 번 이상 나오면 안 되며, 모든 번호는 1 이상 <em>N</em> 이하의 정수여야 한다. 각 선수의 번호는 입력으로 주어진 순서대로 1, 2, ..., <em>N</em>이다.</p>

<p>만일 승점의 기댓값을&nbsp;최대로 만드는&nbsp;선수의 집합이 여러 가지라면&nbsp;<strong><em>K</em>가 최소인 집합</strong>을 출력해야 하며, 이러한 집합도 여러 가지일 경우엔 아무 것이나 하나만 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p><em>X</em>의 <em>P</em>에 대한 곱셈 역원 <em>X</em><sup>-1</sup>이란, <em>X</em>×<em>X<sup>-1</sup></em>&nbsp;≡ 1 mod <em>P</em>를 만족하는 정수를 말한다.</p>

				</div>
				</div>','3 1 10 1 1
1 10 1
1 1 1
10 10 10
100 100 100
10 10 10
100 100 100
','798595483
2
1 3
','MATH'),
                                                                                                                (3078,'BAEKJOON','https://www.acmicpc.net/problem/17087',17087,'숨바꼭질 6','1초','512 MB',9,'<p>수빈이는 동생 N명과 숨바꼭질을 하고 있다. 수빈이는 현재 점 S에 있고, 동생은 A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>N</sub>에 있다.</p>

<p>수빈이는 걸어서 이동을 할 수 있다. 수빈이의 위치가 X일때 걷는다면 1초 후에 X+D나 X-D로 이동할 수 있다. 수빈이의 위치가 동생이 있는 위치와 같으면, 동생을 찾았다고 한다.</p>

<p>모든 동생을 찾기위해 D의 값을 정하려고 한다. 가능한 D의 최댓값을 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(1 ≤ N ≤ 10<sup>5</sup>)과 S(1 ≤ S ≤ 10<sup>9</sup>)가 주어진다. 둘째 줄에 동생의 위치 A<sub>i</sub>(1 ≤ A<sub>i</sub> ≤ 10<sup>9</sup>)가 주어진다. 동생의 위치는 모두 다르며, 수빈이의 위치와 같지 않다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>가능한 D값의 최댓값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 3
1 7 11
','2
','MATH'),
                                                                                                                (3079,'BAEKJOON','https://www.acmicpc.net/problem/17088',17088,'등차수열 변환','1초','512 MB',11,'<p>크기가 N인 수열 A = [A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>N</sub>]이 있을 때, 모든 1 ≤ i < N에 대해서, A<sub>i+1</sub>-A<sub>i</sub>가 모두 일치하면&nbsp;등차수열이라고 한다. 예를 들어, [3], [6, 6, 6], [2, 8, 14, 20], [6, 4, 2]는 등차수열이고, [4, 5, 4], [6, 3, 1]은 등차수열이 아니다.</p>

<p>수열 B = [B<sub>1</sub>, B<sub>2</sub>, ..., B<sub>N</sub>]을 등차수열로 변환하려고 한다. 각각의 수에는 연산을 최대 한 번 적용할 수 있다. 연산은 두 가지가 있는데, 1을 더하거나 1을 빼는 것이다. 수열 B를 등차수열로 변환하기 위해 필요한 연산 횟수의 최솟값을 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 수열 B의 크기 N(1 ≤ N ≤ 10<sup>5</sup>)이 주어진다. 둘째 줄에는 B<sub>1</sub>, B<sub>2</sub>, ..., B<sub>N</sub>(1 ≤ B<sub>i</sub> ≤ 10<sup>9</sup>)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>수열 B를 등차수열로 변화시키기 위한 연산 횟수의 최솟값을 출력한다. 등차수열로 변환시킬 수 없다면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
24 21 14 10
','3
','MATH'),
                                                                                                                (3051,'BAEKJOON','https://www.acmicpc.net/problem/17103',17103,'골드바흐 파티션','0.5초','512 MB',9,'<ul>
	<li>골드바흐의 추측: 2보다 큰 짝수는 두 소수의 합으로 나타낼 수 있다.</li>
</ul>

<p>짝수 N을 두 소수의 합으로 나타내는 표현을 골드바흐 파티션이라고 한다. 짝수 N이 주어졌을 때, 골드바흐&nbsp;파티션의 개수를 구해보자. 두 소수의 순서만 다른 것은 같은 파티션이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T (1 ≤ T ≤ 100)가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, 정수 N은 짝수이고, 2 < N ≤ 1,000,000을 만족한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스마다 골드바흐 파티션의&nbsp;수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
6
8
10
12
100
','1
1
2
1
6
','MATH'),
                                                                                                                (3052,'BAEKJOON','https://www.acmicpc.net/problem/17104',17104,'골드바흐 파티션 2','0.5초','512 MB',21,'<ul>
	<li>골드바흐의 추측: 2보다 큰 짝수는 두 소수의 합으로 나타낼 수 있다.</li>
</ul>

<p>짝수 N을 두 소수의 합으로 나타내는 표현을 골드바흐 파티션이라고 한다. 짝수 N이 주어졌을 때, 골드바흐&nbsp;파티션의 개수를 구해보자. 두 소수의 순서만 다른 것은 같은 파티션이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T (1 ≤ T ≤ 100,000)가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, 정수 N은 짝수이고, 2 < N ≤ 1,000,000을 만족한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스마다 골드바흐 파티션의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
6
8
10
12
100
','1
1
2
1
6
','MATH'),
                                                                                                                (3053,'BAEKJOON','https://www.acmicpc.net/problem/17105',17105,'골드바흐 트리플','2초','512 MB',22,'<ul>
	<li>골드바흐의 추측: 2보다 큰 짝수는 두 소수의 합으로 나타낼 수 있다.</li>
	<li>골드바흐의 약한 추측: 5보다 큰 홀수는 세 소수의 합으로 나타낼 수 있다.</li>
</ul>

<p>홀수 N을 세 소수의 합으로 나타내는 표현을 골드바흐 트리플이라고 한다. 홀수 N이 주어졌을 때, 골드바흐 트리플의 개수를 구해보자. 세&nbsp;소수의 순서만 다른 것은 같은 트리플이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T (1 ≤ T ≤ 100,000)가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, 정수 N은 홀수이고, 5&nbsp;< N ≤ 1,000,000을 만족한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스마다 골드바흐 트리플의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
9
11
17
19
1929
1999
','2
2
4
3
2093
3105
','MATH'),
                                                                                                                (3054,'BAEKJOON','https://www.acmicpc.net/problem/17118',17118,'갓 소수','-2초','512 MB',20,'<p>키파는 소수를 좋아한다. 키파가 제일 좋아하는 소수를 <em>p</em>라 하자. <em>a</em> = 860798509, <em>b</em> = 198609463, <em>N</em> = <em>p</em>, <i>x</i><sub>0</sub> = <em>n</em>으로 LCG를 돌려서 <em>x<sub>p</sub></em>의 값을 출력하라.</p>

<p>LCG(Linear Congruential Generator)의 정의는 다음과 같은 수열 {<em>x<sub>i</sub></em>}이다: 모든 자연수 <em>k</em>에 대해,</p>

<p style="text-align: center;"><em>x<sub>k</sub></em> = <em>ax<sub>k</sub></em><sub>-1</sub> + <em>b</em> (mod <em>N</em>), 0 ≤ <em>x<sub>k</sub></em> < <em>N</em>.</p>

<p>LCG는 다양한 곳에서 사용되는데, 예를 들어 C의 <code>rand()</code>, Java의 <code>Random.nextInt()</code>, 그리고 제1회 구데기컵의 <a href="https://www.acmicpc.net/problem/15636" target="_blank">이 문제</a>가 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p><i>n</i>이 주어진다.&nbsp;<code>int</code> 범위임이 보장된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>문제에 해당하는 답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1159672501','1','MATH'),
                                                                                                                (3055,'BAEKJOON','https://www.acmicpc.net/problem/17121',17121,'골드바흐 삼각형','3초','512 MB',20,'<ul>
	<li>골드바흐의 추측: 2보다 큰 짝수는 두 소수의 합으로 나타낼 수 있다.</li>
	<li>골드바흐의 약한 추측: 5보다 큰 홀수는 세 소수의 합으로 나타낼 수 있다.</li>
</ul>

<p>홀수 N을 세 소수의 합으로 나타내는 표현을 골드바흐 트리플이라고 한다. 세 소수가 홀수인 골드바흐 트리플 (a, b, c)가 있을 때, 세 변의 길이가 a, b, c인 삼각형을 만들 수 있다면, 골드바흐 삼각형이라고 한다. 홀수 N이 주어졌을 때, 골드바흐 삼각형의 개수를 구해보자. 세&nbsp;소수의 순서만 다른 것은 같은 트리플이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T (1 ≤ T ≤ 100,000)가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, 정수 N은 홀수이고, 5 < N ≤ 1,000,000을 만족한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스마다 골드바흐 삼각형의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
11
15
41
43
993
999
','1
2
5
4
167
176
','MATH'),
                                                                                                                (3056,'BAEKJOON','https://www.acmicpc.net/problem/17122',17122,'체스','2초','512 MB',4,'<p>일반적인 모양의 8x8 체스판이 있다.</p>

<p>하나의 체스 판은 총 64개의 칸으로 이루어 지며 각 칸은 (1부터 8까지 표시된) 8개의 행과 (A부터 H까지 표시된) 8개의 열을 통해 구분이 가능하다. 아래 그림에서처럼 하나의 체스보드에는 정확히 32개의 검은 칸과 (가령 A1과 H8) 정확히 32개의 흰색 칸이 있다 (가령 H1과 A8).&nbsp;</p>

<p>하나의 체스 칸을 표기하기 위해 아래와 같은 두 가지 방법을 사용할 수 있다.</p>

<ul>
	<li>표기법 1: 해당 칸의 열 번호를 대문자로 적고 행 번호를 적는 방법 (예를 들어 “A1”, “D4”, “H8”)</li>
	<li>표기법 2: 해당 칸의 고유한 번호로 표현하는 방법 (아래 우측 그림에서 각 칸에 적혀있는 번호)</li>
</ul>

<table class="table table-bordered" style="width:100%;">
	<tbody>
		<tr>
			<td style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/c4c872e6-7f7d-415e-a589-faf3e933f41c/-/preview/" style="width: 180px; height: 167px;"></td>
			<td style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/8278a127-37ee-4bbf-b002-bd1f9526988a/-/preview/" style="width: 180px; height: 169px;"></td>
		</tr>
	</tbody>
</table>

<p>위의 표기법을 이용하면 하나의 칸을 두 가지 다른 방법으로 표현할 수 있다. 가령 “A3” 와 “17”은 같은 칸을 가리킨다 (검은 색). 다른 예로, “38”과 “F5”은 같은 칸을 가리킨다 (흰 색).&nbsp;</p>

<p>표기법 1로 표현된 칸과 표기법 2로 표현된 칸이 주어졌을 때, 이 두 칸이 같은 색인지 아닌지 판단하는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 수 T가 주어진다 (1 <= T <= 10).</p>

<p>각 테스트 케이스는 한 줄에 두 개의 칸을 표현하는 문자열 하나와 수 하나로 주어진다 - 항상 표기법 1로 표현된 칸이 먼저 주어지고 공백이 하나 주어진 후 표기법 2로 표현된 칸이 주어진다.</p>

<p>(표기법 1로 표현된) 문자열은 언제나 길이가 2이며 첫 글자는 영대문자 A-H중 하나이며 두 번째 글자는 숫자 1-8중 하나이다. (표기법 2로 표현된) 수는 언제나 1이상 64이하의 정수이다.</p>

<p>잘못된 입력이 주어지는 경우는 없다고 가정해도 된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해, 주어진 두 칸이 같은 색이면 “YES”를, 아니면 “NO”를 출력하시오 (따옴표는 제외).&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<ul>
	<li>“A1” 과 “17”은 둘 다 검은 색 칸이다.</li>
	<li>“A1” 과 “1”은 같은 칸이며 당연히 같은 색이다.</li>
	<li>“B3” 은 흰 칸을 나타내고 &nbsp;“21” 은 검은 칸을 나타낸다.</li>
	<li>“G5” 은 검은 칸을 나타내고 “40” 은 흰색 칸을 나타낸다.</li>
</ul>

				</div>
				</div>','4
A1 17
A1 1
B3 21
G5 40
','YES
YES
NO
NO
','MATH'),
                                                                                                                (3057,'BAEKJOON','https://www.acmicpc.net/problem/17128',17128,'소가 정보섬에 올라온 이유','2초','256 MB',9,'<p>소 $N$마리가 정보섬에 올라왔다!</p>

<p>소들은 정보섬 1층 앞마당에서 $A_1, A_2, A_3, \dots, A_N, A_1$의 순서대로 동그랗게 앉아 쉬고 있다. 각 소들에게는 품질 점수 $A_i$가 적힌 스티커가 붙어 있다. 욱제는 소 떼 옆에서 효빈이가 계산해 둔 어떤 계산 식을 발견했는데, 그것은 아래와 같다.</p>

<p style="text-align: center;">$S = \sum_{i=1}^N(A_{i}×A_{i+1}×A_{i+2}×A_{i+3})$ (단, $A_{N+1}=A_{1}, A_{N+2}=A_{2}, A_{N+3}=A_{3}$)</p>

<p>풀어 쓰자면, 원형으로 둘러 앉은 소들에 대해서, 연속한 네 마리 소들의 품질 점수를 곱한 값을 모두 더한 것이다.</p>

<p>욱제는 효빈이가 학교를 떠나지 못하도록 심술부릴 작정이다. 욱제는 총 $Q$번에 걸쳐 어떤 $i$번째 소를 선택할 것이다. 그러고는 $A_i$가 적힌 스티커를 떼어내고, $A_i \times -1$이 적힌 스티커를 붙일 작정이다. 그러면 효빈이는 $Q$번에 걸쳐서 $S$를 다시 계산해야 한다. 한 번 바꾼 스티커는 다음에 또 다시 바꾸지 않는 이상 계속 유지된다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/46d9d347-cbae-4650-a391-b7c702663b10/-/crop/1456x1291/0,54/-/preview/" style="height: 332.5px; width: 375px;"> <img alt="" src="https://upload.acmicpc.net/01e9c0fd-90d8-4843-85e1-0d182a21deec/-/crop/1471x1293/0,79/-/preview/" style="height: 330px; width: 375px;"></p>

<p>효빈이의 절친인 당신은 악동 욱제에게 괴롭힘 받는 효빈이를 도와 주기로 했다. 효빈이를 도와 $S$를 계산해 보자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 소의 수를 나타내는 $N$과 욱제가 장난칠 횟수 $Q$가 주어진다.</p>

<p>둘째 줄에 $N$마리 소들의 품질 점수 $A_i$가 순서대로 주어진다.</p>

<p>셋째 줄에 욱제가 장난칠 $Q$개의 소의 번호 $Q_i$가 순서대로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>$Q$개의 줄에 걸쳐 다시 계산된 $S$의 값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8 5
-2 3 5 -6 10 -8 7 6
3 5 2 7 7
','-1080
1920
4224
2376
4224
','MATH'),
                                                                                                                (3058,'BAEKJOON','https://www.acmicpc.net/problem/17134',17134,'르모앙의 추측','2초','512 MB',20,'<ul>
	<li>골드바흐의 추측: 2보다 큰 짝수는 두 소수의 합으로 나타낼 수 있다.</li>
	<li>골드바흐의 약한 추측: 5보다 큰 홀수는 세 소수의 합으로 나타낼 수 있다.</li>
	<li>르모앙의 추측: 5보다 큰 홀수는 홀수 소수 하나와 짝수 세미소수 하나의 합으로 나타낼 수 있다. 세미소수는 두 소수를 곱한 수이다.</li>
</ul>

<p>홀수 N이 주어졌을 때, 홀수 소수 하나와 짝수 세미소수 하나의&nbsp;합으로 나타내는 방법의 수를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T (1 ≤ T ≤ 100,000)가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, 정수 N은 홀수이고, 5 < N ≤ 1,000,000을 만족한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스마다 홀수 소수 하나와 짝수 세미소수 하나의 합으로 나타내는 방법의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
9
11
17
19
1929
1999
','2
2
4
2
65
30
','MATH'),
                                                                                                                (3059,'BAEKJOON','https://www.acmicpc.net/problem/17137',17137,'사탕 놀이','2초','512 MB',15,'<p>수학 선생님 Albert는 사탕을 좋아하는 반 아이들을 위해 재미있는 놀이를 고안했다. 아이들은 아직 어려서 자연수만 알고 있고, 각 아이마다 알고 있는 자연수의 범위가 다르다. 편의상 아이들은 1부터 n까지 번호가 붙어있다고 하고, i번째 아이는 1이상 x[i] 이하의 자연수를 알고 있다고 가정하자.&nbsp;</p>

<p>놀이는 아래와 같은 규칙에 따라 진행된다.</p>

<ol>
	<li>각 턴이 시작되면 아이들은 각자 알고 있는 자연수 중 아무 수나 골라서 종이에 적는다.</li>
	<li>모두 원하는 수를 적었으면, Albert 선생님이 n장의 종이를 모은다.</li>
	<li>Albert 선생님은 이 수들을 비내림차순으로 정렬하여 길이 n인 수열을 만든다 (수열 A라고 하자).</li>
	<li>만약 수열 A가 이전 턴에 한 번이라도 만들어진 적이 있으면 수열은 버려지고 게임은 계속 진행된다.&nbsp;</li>
	<li>만약 수열 A가 이전 턴에 만들어진 적이 없다면, Albert선생님이 아이들에게 사탕을 하나씩 나누어주고 게임이 계속 진행된다.</li>
	<li>모든 가능한 (정렬된) 수열이 만들어진 후에 게임이 완전히 끝나게 된다.</li>
</ol>

<p>모든 아이들이 자연수의 일부만 알고 있기 때문에 이 게임은 언젠가 끝나게 된다. 하지만 Albert 선생님은 미리 사탕을 준비해야 하므로 최대 몇 개를 나눠줘야 할지 알고 싶다. 학생 수 n과 각 학생이 알고 있는 자연수의 범위가 주어졌을 때, Albert 선생님이 나눠줘야 하는 사탕의 최대 수를 구해서 선생님을 도와주도록 하자. 다만 이 수는 매우 클 수 있으므로 1,000,000,007로 나눈 나머지를 구해주기로 했다.</p>

<p>예를 들어 Albert선생님의 반에 두 명의 아이가 있고 이 두 아이는 각자 1이상 3이하의 자연수만 안다고 해보자. 이 경우 총 여섯 종류의 (비내림차순으로) 정렬된 수열을 얻을 수 있다: {1, 1}, {1, 2}, {1, 3}, {2, 2}, {2, 3}, {3, 3}. 각 수열에 대해 처음으로 만들어지는 턴에 Albert 선생님이 사탕 두 개를 나누어 주어야 하므로 총 12개의 사탕을 미리 준비해놔야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 수 T가 주어진다 (1 <= T <= 10).</p>

<p>각 테스트 케이스는 두 줄에 걸쳐서 주어진다. 첫 줄에 학생 수 n이 주어지고 (1 <= n <= 200) 둘째 줄에 배열 x[]를 표현하는 &nbsp;n개의 자연수가 공백으로 구분되어 주어진다. 각 i에 대해 1 <= x[i] <= 200을 만족한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 Albert선생님이 준비해야 하는 사탕의 최대 수를 1,000,000,007로 나눈 나머지를 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<ul>
	<li>케이스 1: 아이 한 명이 1이상 3이하의 수를 알기 때문에 정답은 3이다. 정렬된 수열은 {1}, {2}, 그리고 {3} 이렇게 세 가지 존재한다.</li>
	<li>케이스 2: 문제에서 예시로 사용되었다.</li>
	<li>케이스 3: 이 경우 총 다섯 개의 정렬된 수열이 존재한다: {1, 1, 1}, {1, 1, 2}, {1, 1, 3}, {1, 2, 2}, {1, 2, 3}. 학생이 세 명 있기 때문에 이 수열 각각이 처음으로 만들어지는 턴에 Albert는 사탕을 3개씩 나눠주어야 하므로 총 15개의 사탕을 준비해야 한다.</li>
	<li>케이스 4: 답이 매우 커질 수 있으므로 1,000,000,007로 나눈 나머지를 출력해야 함에 유의하자. 이 경우 총 1,604,563,870 가지의 정렬된 수열이 존재하고 여섯 명의 아이가 있으므로 사탕은 총 9,627,383,220 개 필요하다. 9,627,383,220 를 1,000,000,007 으로 나눈 나머지는 627,383,157이다.</li>
</ul>

				</div>
				</div>','4
1
3
2
3 3
3
1 2 3
6
95 96 97 98 99 100
','3
12
15
627383157
','MATH'),
                                                                                                                (3032,'BAEKJOON','https://www.acmicpc.net/problem/17173',17173,'배수들의 합','1초','512 MB',4,'<p>신원이는 백준에서 배수에 관한 문제를 풀다가 감명을 받아 새로운 문제를 만들어보았다. 자연수 N과 M개의 자연수 K<sub>i</sub>가 주어진다. K<sub>i</sub>중 적어도 하나의 배수이면서 1 이상 N 이하인 수의 합을 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 N과 M가 주어진다. (2 ≤ N ≤ 1000, 1 ≤ M < N)</p>

<p>그다음 줄에 M개의 정수 K<sub>i</sub>가 주어진다. (2 ≤ K<sub>i</sub> ≤ 1000)</p>

<p>동일한 K<sub>i</sub>는 주어지지 않으며, 오름차순으로 정렬되어있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>배수들의 합을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10 2
2 3
','42
','MATH'),
                                                                                                                (3033,'BAEKJOON','https://www.acmicpc.net/problem/17174',17174,'전체 계산 횟수','1초','512 MB',3,'<p>호근이는 한국에서 미국으로 유학을 하러 갔다. 그는 생활비로 쓰기 위해 가지고 온 원화를 전부 달러로 바꾸기 위해 환전소를 찾아갔다. 그런데 환전소에 1달러짜리 지폐를 제외하고는 다른 지폐가 없어서 전부 1달러 지폐로 바꾸어 숙소로 가져왔다. 환전한 금액을 알고 있지만 불안한 마음에 숙소에서 다시 한 번 얼마인지 세어 보려고 한다.</p>

<p>호근이는 우선 1달러 지폐를 한 장씩 세면서 M개의 지폐를 한 묶음으로 만든다. 그 다음에는 새로 만들어진 묶음을 하나씩 세면서 M개의 묶음을 다시 하나로 묶는다. 더 이상 묶음이 만들어지지 않을 때까지 이 과정을 반복한다. 이때 호근이가 묶음을 포함해 지폐를 센 전체 횟수를 구하여라.</p>

<p>예를 들어 N이 13이고 M이 10일 때, 13달러를 세기 위해서는 1달러씩 총 13번을 세고, 지폐 10장을 한 묶음으로 만들고, 한 개의 묶음을 다시 한 번 세어 총 14번을 세야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 환전한 금액 N과 묶음의 크기 M이 주어진다. (2 ≤ N ≤ 100,000, 2 ≤ M ≤ N)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>전체 센 횟수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','13 10
','14
','MATH'),
                                                                                                                (3034,'BAEKJOON','https://www.acmicpc.net/problem/17177',17177,'내접사각형 만들기','1초','512 MB',5,'<p>어떤 사각형의 네 꼭짓점이 원과 접할 때 이 사각형이 원에 내접한다고 한다. 세 선분의 길이가 주어지고 그중 가장 긴 선분의 길이가 내접할 원의 지름과 같을 때,&nbsp;나머지 한 선분의 길이를 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에&nbsp;세 변의 길이를 나타내는 세 정수&nbsp;<em>a, b, c</em>가 주어진다.&nbsp;(1 ≤&nbsp;<em>a, b, c</em>&nbsp;≤ 100) 세 선분은 내림차순으로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 나머지 한 변의 길이를&nbsp;출력한다. 원에 내접하는 사각형을 만들 수 없다면 -1을 출력한다. 단, 정답은 정수로 나오는 케이스만 주어진다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>톨레미의 정리에 따르면 다음과 같이 원에 내접한 사각형은&nbsp;마주 보는 두 쌍의 변의 곱의 합이 두 대각선의 곱과 같다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/8b70f09f-8fcb-4586-a960-6727a8b6883e/-/preview/"></p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/06cf225b-0767-4de3-a176-528d45773366/-/preview/"></p>

				</div>
				</div>','2 1 1
','1
','MATH'),
                                                                                                                (3063,'BAEKJOON','https://www.acmicpc.net/problem/17205',17205,'진우의 비밀번호','1초(추가시간없음)','256 MB',11,'<p>건망증이 심한 진우는 자기가 가입한 웹사이트의 비밀번호를 자주 까먹는다.&nbsp;이를 대비해 진우는 비밀번호를 오로지 영어&nbsp;소문자만을 이용하여 생성한다. 진우는 비밀번호를 까먹을 때마다&nbsp;비밀번호의 가능성이 있는&nbsp;문자열들을 사전 순으로 시도하여 맞는 비밀번호를 찾아낸다. 비밀번호의 가능성이 있는&nbsp;문자열이란, 영어 소문자로만 구성되어&nbsp;있고&nbsp;길이가 1 이상 N 이하인&nbsp;문자열을&nbsp;말한다. (N은 진우가 가입한 웹사이트에서 허용되는 최대 비밀번호 길이이다.) 이런 방식을 쓰기 때문에, 진우가&nbsp;비밀번호를 까먹었을 때 비밀번호를 맞힐&nbsp;때까지 얼마나&nbsp;시간이&nbsp;걸릴지&nbsp;아는&nbsp;것이&nbsp;매우 중요하다. 진우는 타자 속도가 매우 느리기 때문에 하나의 비밀번호를&nbsp;시도하는데 1초가 소요된다.</p>

<p>진우는 또다시 비밀번호를 까먹어버렸다. 진우가 비밀번호를 맞힐 때까지 몇 초가 걸릴지 계산해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의&nbsp;첫 번째 줄에 비밀번호의 최대 길이인 N(1 ≤ N ≤&nbsp;10)이 주어지며 두 번째 줄에 진우의&nbsp;비밀번호가 주어진다.</p>

<p>진우의&nbsp;비밀번호는 영어 소문자로만 구성되어&nbsp;있으며 길이는 1 이상 N 이하이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>비밀번호의&nbsp;가능성이 있는&nbsp;문자열들을 사전 순으로 시도할&nbsp;때, 진우가 비밀번호를 맞힐&nbsp;때까지 걸리는 시간(초)을 출력하면 된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
ba
','705
','MATH'),
                                                                                                                (3035,'BAEKJOON','https://www.acmicpc.net/problem/17206',17206,'준석이의 수학 숙제','0.5초','256 MB',5,'<p>준석이의 수학선생님은 간단한 수학 문제를 숙제로 내셨다. 그 문제는 어떤 자연수 N이 주어지면 N 이하의 3 또는 7의 양의 배수를 모두 더한 값을 구하는 문제다. 그러나 숫자를 손가락과 발가락으로 밖에 셀 줄 모르는 준석이는 N이 커지자 문제를 풀지 못했다. 준석이를 위해 우리가 정답을 구해주자. 문제는 중복될 수 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 문제의 수를 나타내는 T가 주어진다 (1 ≤ T ≤ 100,000)</p>

<p>그 다음 줄에 빈 칸으로 구분하여 T개의 자연수 N이 주어진다. (10 ≤ N ≤ 80,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 문제마다 답을 출력한다. 출력은 개행으로 구분한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
10 21
','25
105
','MATH'),
                                                                                                                (3036,'BAEKJOON','https://www.acmicpc.net/problem/17207',17207,'돌려막기','0.1초','256 MB',6,'<p>인서와&nbsp;준석 그리고&nbsp;정우, 진우 마지막으로 영기는 대회를 준비하느라 정신이 없다. 그러던 어느 날 급하게 처리해야 할 일이 생기고 말았다. 피자를 숟가락으로 떠먹는 등의 일로 바빴던 5명은 서로에게 일을 떠넘기기에 급급했다. 그러던 어느 날 더 이상 일을 미룰 수 없다고 판단한 다섯은&nbsp;일처리를 누가 맡을지 이야기하여, 아래와 같은 자신들의 계산법을 바탕으로 최종&nbsp;일량을 계산해 가장 일이&nbsp;바쁘지&nbsp;않은 사람에게 일처리를 맡기기로 하였다.</p>

<ol>
	<li>5개의 일이&nbsp;존재한다.</li>
	<li>인서는 1번, 준석이는 2번, 정우는 3번, 진우는 4번, 영기는 5번으로 각자에게 번호를 부여한다.</li>
	<li>행렬 A는 인서, 준석, 정우, 진우, 영기가 예상하는&nbsp;각 일의 난이도를 <strong>각 행</strong>에 일의 순서대로 나열한 5×5의 행렬이다. 즉, x행 y열의 값은 x번 사람이 예상한 y번째 일의 난이도이다. 예를 들어 <strong>2행 1열</strong>의 값은 2번인 준석이가 예상한 1번째 일의 난이도, <strong>5행 2열</strong>의 값은 5번인 영기가 예상한 2번째 일의 난이도이다.</li>
	<li>행렬 B는 인서, 준석, 정우, 진우, 영기가 예상한 각 일의 처리시간을 <strong>각 행</strong>에 일의 순서대로 나열한 5×5의 행렬이다. 즉, x행 y열의 값은 x번 사람이 예상한 y번째 일의 처리시간이다. 예를 들어 <strong>2행&nbsp;1열</strong>의 값은 2번인 준석이가 예상한 1번째 일의 처리시간, <strong>5행 2열</strong>의 값은 5번인 영기가 예상한 2번째 일의 처리시간이다.</li>
	<li>x번 사람의 y번째 일의 예상 일량은 아래와 같다.<br>
	$\left(x\text{번 사람의 }y\text{번째 일의 예상 일량}\right) = \sum_{i=1}^5 \left(\left(x\text{번 사람이 예상한 }i\text{번째 일의 난이도}\right) \times&nbsp;\left(i\text{번 사람이 예상한 }y\text{번째 일의 처리시간}\right)\right)$</li>
	<li>각자의 최종 일량은 1번째 일부터 5번째 일까지 그 사람의 예상 일량을 모두 합한 값이다.</li>
	<li>최종 일량이 가장 작은 사람이 가장 일이 바쁘지 않은 사람이다.</li>
</ol>

<p>이 계산법으로 작동하는 프로그램을 구현하여&nbsp;가장 일이 바쁘지 않은 사람을 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>5×5&nbsp;행렬 <em>A</em>의 값 <em>a<sub>1</sub>&nbsp;~ a<sub>25</sub></em>가 5줄에 걸쳐 순서대로 주어지며,&nbsp;이후&nbsp;5×5 행렬 <em>B</em>의 값<em>&nbsp;b<sub>1&nbsp;</sub>~ b<sub>25</sub></em>가 5줄에 걸쳐 순서대로 주어진다. 단, <em>a<sub>i</sub></em>는 1보다 크거나 같고 1000보다 작거나 같은 정수이며, <em>b<sub>i</sub></em>는 1보다 크거나 같고 100보다 작거나 같은 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>가장 일이 바쁘지 않은&nbsp;사람의 이름(Inseo, Junsuk, Jungwoo, Jinwoo, Youngki)을&nbsp;출력한다. 만약, 가장 일이 바쁘지 않은 사람이 둘 이상일 경우 Youngki, Jinwoo,&nbsp;Jungwoo,&nbsp;Junsuk,&nbsp;Inseo 순서로 가장&nbsp;앞서는 사람의 이름을&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p><img alt="행렬사진" src="https://upload.acmicpc.net/c8397d59-2e79-4c5a-a902-6f58ea2cbd8a/" style="width: 227px; height: 142px;"></p>

<p>위의 그림과 같이 행렬에서&nbsp;행은 가로줄, 열은 세로줄을 의미한다.</p>

				</div>
				</div>','40 50 20 70 10
80 20 20 20 50
50 20 10 30 60
90 10 30 20 40
10 30 60 10 70
10 30 20 20 20
50 10 10 10 10
30 10 10 10 40
60 10 10 10 10
10 20 40 10 10
','Jungwoo
','MATH'),
                                                                                                                (3064,'BAEKJOON','https://www.acmicpc.net/problem/17210',17210,'문문문','1초','256 MB',3,'<p>유신이는 여러개의 문을 통과해야 밖으로 나갈 수 있는 방에 갇혔다. 유신이를 가둔 재현이는 유신이가 탈출할 수 없도록 하기 위해 특이한 규칙을 만들어 문을 순서대로 규칙에 맞는 방법으로 열어야하도록 시스템을 구성하였다.</p>

<ul>
	<li>규칙 1 : 문을 여는 방법은 두가지가 있다. 밀어서 여는 법과 당겨서 여는 법이 있다.</li>
	<li>규칙 2 :연속 2번 같은 방법으로 문을 열 수 없다.</li>
	<li>규칙 3 : 2의 배수(2,4,6,...)번째 문들은 반드시 같은 방법으로 문을 열어야 한다. 예를 들어 2번째 통과하는 문을 밀어서 열었다면, 4번째 통과하는 문 또한 밀어서 열어야 한다.</li>
	<li>규칙 4 : 3의 배수(3,6,9,...)번째 문들은 반드시 같은 방법으로 문을 열어야 한다. 예를 들어 3번째 통과하는 문을 밀어서 열었다면, 6번째 통과하는 문 또한 밀어서 열어야한다.</li>
</ul>

<p>유신이는 위의 규칙 4가지를 모두 알고 있음에도 불구하고 탈출하지 못하고 있다. 유신이가 방을 탈출할 수 있도록 도와주는 프로그램을 만들어보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 총 문의 개수 N(2 ≤ N ≤ 2,500,000,000)이 주어진다.</p>

<p>둘째 줄에는 유신이가 첫 번째 문을 통과할 때 문을 연 방법이 주어진다. 밀어서 여는 법은 숫자 0, 당겨서 여는 법은 숫자 1로 표기된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>두 번째 문부터 문을 여는 방법을 한줄에 하나씩 출력한다. 만약 탈출이 불가능하다면 "Love is open door"를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
0
','1
0
1
','MATH'),
                                                                                                                (3065,'BAEKJOON','https://www.acmicpc.net/problem/17211',17211,'좋은 날 싫은 날','1초','256 MB',6,'<p>지은이가 건국한 나라인&nbsp;유애나에 살고 있는 재현이는 너무 단순한 나머지 매일이&nbsp;기분이 좋은&nbsp;날, 기분이 싫은&nbsp;날 두가지로 나누어진다.&nbsp;어느 날 지은이는 재현이에 대한&nbsp;놀라운 사실을 발견했다! 재현이의 오늘의 기분이&nbsp;내일의 기분에 영향을 준다는 것이었다. 문득 지은이는 N일 뒤의&nbsp;재현이의 기분이&nbsp;어떻게 될지 궁금하였다. 지은이를 위해 N일 뒤 재현이의 기분이 어떨지&nbsp;알려주는 프로그램을 만들어보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 N(1 ≤ N ≤ 100)과 현재 재현이의 기분(좋은&nbsp;날 0, 싫은&nbsp;날 1)이&nbsp;주어진다.</p>

<p>둘째 줄에 차례대로 재현이가 기분이 좋은 날의 다음 날도&nbsp;기분이 좋은 날일&nbsp;확률, 다음 날은&nbsp;기분이&nbsp;싫은 날일 확률, 기분이 싫은&nbsp;날의 다음 날이 기분이 좋은 날일 확률, 다음 날도 기분이 싫은 날일 확률이 주어진다. 확률은 소수점 둘째자리까지 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>N일 뒤의&nbsp;재현이의 기분이&nbsp;좋은 날일&nbsp;확률과 싫은 날일&nbsp;확률에 1,000을 곱해 소수점 첫째자리에서 반올림한 수를 차례대로 출력한다. 절대 오차는 10<sup>0</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>좋은 날은 IU 미니 3집&nbsp;Real의 타이틀 곡이고 싫은 날은 IU 정규 3집 Modern Times의 수록곡이다.</p>

				</div>
				</div>','2 1
0.70 0.30 0.50 0.50
','600
400
','MATH'),
                                                                                                                (3066,'BAEKJOON','https://www.acmicpc.net/problem/17213',17213,'과일 서리','1초','256 MB',9,'<p>민건이네 과일 농장은 N가지 종류의 과일을 재배하는 중이다. 평소 민건이에게 앙심을 품고 있던 지환이는 민건이를 골탕 먹이기 위하여 민건이네 과일 농장에서 과일들을 훔치기로 다짐했다. 지환이는 완벽한 범죄를 위하여 처음 생각한 개수 만큼만 훔치려고 한다. 이때 지환이가 훔칠 수 있는 경우의 수가 몇가지나 될 지 알아보자. 단,&nbsp;모든 종류의 과일을 적어도 1개는 훔친다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 과일의 종류 수 N(1 ≤ N ≤ 10)이 주어진다.</p>

<p>둘째 줄에&nbsp;훔치려&nbsp;하는&nbsp;과일의 개수 M(N&nbsp;≤ M ≤ 30)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 훔칠 수 있는 경우의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
10
','36
','MATH'),
                                                                                                                (3037,'BAEKJOON','https://www.acmicpc.net/problem/17214',17214,'다항 함수의 적분','1초','256 MB',12,'<p>다항식(polynomial)은 문자의 거듭제곱의 상수 배들의 합을 표현하는 수식이다. 예를 들어 x<sup>2</sup>+2x+3&nbsp;같은 식을 의미한다. 그중 변수가 하나인 것을 일변수 다항식이라고 하고 이는&nbsp;다음과 같이 표현한다.</p>

<p style="text-align: center;">f(x) = ax<sup>n</sup>&nbsp;+ bx<sup>n-1</sup>+...+cx+d</p>

<p>최대 일차 일변수 다항식이 주어졌을 때 그 함수를 적분한 결과를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 최대 일차 일변수 다항식이 주어진다. 항의 개수는 최대 2개이고, 변수는 항상 x로 주어지며, 각 항은 공백 문자로 구분되지 않는다. 주어지는 계수는 절댓값이 10,000을 넘지 않는 0이 아닌 2의 배수이고 주어지는 상수는 절댓값이 10,000을 넘지 않는 정수이다. 차수가 같은 항은 한 번만 주어진다. 단, 계수의 절댓값이 1인 경우에는 1을&nbsp;생략한다. 다항식은 차수가 큰&nbsp;것부터 작아지는 순서대로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>주어진 일변수 다항식을 적분한 결과를 입력 형식과 동일하게 출력한다. 적분상수는 "<code>W</code>"로 x<sup>2</sup>은 "<code>xx</code>"로 표현한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>문제에서 다루는 적분법은&nbsp;$∫{x^ndx} = \frac{1}{(n+1)}x^{n+1} + W$&nbsp;을 사용한다. (W는 적분상수) 또한 적분 가능 함수에 대하여 합의 법칙, $∫(f(x)+g(x))dx = ∫{f(x)dx} + ∫{g(x)dx}$&nbsp;가 성립한다.</p>

				</div>
				</div>','6x+6
','3xx+6x+W
','MATH'),
                                                                                                                (3070,'BAEKJOON','https://www.acmicpc.net/problem/17247',17247,'택시 거리','1초','256 MB',5,'<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/2151cf07-1489-4434-84e0-6f265e62be77/-/preview/" style="width: 348.333px; height: 231.667px;"></p>

<p>택시 거리는 바둑판 모양의 도로망을 가진 도시에서 점 A에서 B까지의 최단 거리를 구할 경우 도로를 따라서만 가는 가장 짧은 거리를 뜻한다.</p>

<p>위의 사진에서는 빨간색 선이 택시거리이다. 즉, 점 A의 좌표가 (x<sub>1</sub>, y<sub>1</sub>)이고 점 B의 좌표를 (x<sub>2</sub>, y<sub>2</sub>)라고 했을 때, 두 장소 사이의 택시 거리 D는 다음과 같다.</p>

<p>\(D = |x_2 - x_1| + |y_2 - y_1|\)</p>

<p>인접한 0과 0, 0과 1, 1과 1 사이의 거리를 1이라고 할 때, 두 1 사이의 거리를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄엔 문자열의 높이 N과 가로 M이 주어진다. (2 ≤ N, M ≤ 1,000) 이다.</p>

<p>두 번째 줄부터 M개의 숫자 0또는 1이 예제 입력과 같이 N개의 줄에 걸쳐 입력된다.</p>

<p>1는 항상 두 개만 입력된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>주어진 숫자들에서 1과 1사이의 택시 거리를 구하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 4
1 0 0 0
0 0 0 0
0 0 0 1
','5
','MATH'),
                                                                                                                (3071,'BAEKJOON','https://www.acmicpc.net/problem/17252',17252,'삼삼한 수','1초','256 MB',7,'<p>준하는 3의 거듭제곱인 수만 사용하여 만들 수 있는 수를 보면 삼삼한 느낌을 받는다.</p>

<p>이 느낌을 정확히 설명하자면, 3의 거듭제곱인 수들을 겹치지 않고 한번씩만 더해서 어떤 수&nbsp;x를 만들 수 있다면 그 수는 삼삼하다고 한다. 삼삼한 수는 3의 거듭제곱인 수가 반드시 하나 이상 포함되어야 한다.</p>

<p>예를 들어, 109는&nbsp;3<sup>0</sup>+3<sup>3</sup>+3<sup>4</sup>로 나타낼 수 있으므로 삼삼한 수이다. 하지만 7과 18은 삼삼하지 않다.</p>

<p>준하는 삼삼한 수가 얼마나 더 있는 지 알아보려고 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에&nbsp;2,147,483,647보다 작거나 같은 음이 아닌 정수&nbsp;N이 입력된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력된 수가 삼삼하다면 YES, 그렇지 않다면 NO를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','109
','YES
','MATH'),
                                                                                                                (3072,'BAEKJOON','https://www.acmicpc.net/problem/17253',17253,'삼삼한 수 2','1초','256 MB',9,'<p>준하는 3의 거듭제곱인 수만 사용하여 만들 수 있는 수를 보면 삼삼한 느낌을 받는다.</p>

<p>이 느낌을 정확히 설명하자면, 3의 거듭제곱인 수들을 겹치지 않고 한번씩만 더해서 어떤 수&nbsp;x를 만들 수 있다면 그 수는 삼삼하다고 한다. 삼삼한 수는 3의 거듭제곱인 수가 반드시 하나 이상 포함되어야 한다.</p>

<p>예를 들어, 109는&nbsp;3<sup>0</sup>+3<sup>3</sup>+3<sup>4</sup>로 나타낼 수 있으므로 삼삼한 수이다. 하지만 7과 18은 삼삼하지 않다.</p>

<p>준하는 삼삼한 수가 얼마나 더 있는 지 알아보려고 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에&nbsp;9,223,372,036,854,775,807보다 작거나 같은 음이 아닌 정수&nbsp;N이 입력된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력된 수가 삼삼하다면 YES, 그렇지 않다면 NO를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','109
','YES
','MATH'),
                                                                                                                (3073,'BAEKJOON','https://www.acmicpc.net/problem/17256',17256,'달달함이 넘쳐흘러','1초','256 MB',1,'<p>냉장고에서 맛있게 숙성되고 있는 마카롱은 심심한 나머지 새로운 수 체계를 생각해냈다. 마카롱은 이를 케이크 수라고 이름 붙이고, 다음과 같이 정의했다.</p>

<ul>
	<li>케이크 수는 3개의 자연수 x, y, z로 이루어진 순서쌍이다. (자연수는 1 이상의 정수를 의미한다)</li>
	<li>케이크 수 a는 (a.x, a.y, a.z)와&nbsp;같이 나타낼 수 있다.</li>
</ul>

<p>또한 마카롱은 케이크 수들을 비교하기 위해 등호 "<code>=</code>"도 새로 정의했다.</p>

<ul>
	<li>케이크 수 a, b에 대하여, a = b라는 것은 다음과 같다.</li>
	<li>a.x = b.x, a.y = b.y 그리고 a.z = b.z를 동시에 만족한다.</li>
</ul>

<p>아직 끝나지 않았다. 이 케이크 수는 기존의 수와 다르게 매우 특이한 연산을 적용할 수 있다. 연산의 이름은 ??이고 다음과 같이 정의된다!</p>

<p style="text-align: center;">a ?? b = (a.z + b.x, a.y × b.y, a.x + b.z)</p>

<p style="text-align: center;"><img alt="케이크와 마카롱 사진" src="https://upload.acmicpc.net/241defcd-0b6c-461f-b354-a2435f3ba56c/-/crop/1549x1071/0,0/-/preview/" style="height: 230.833px; width: 333.333px;"></p>

<p>SCCC의 회장 욱제는 케이크 수를 이용해 문제를 만들기로 했다. 마카롱과 욱제를 기쁘게 하기 위해서 문제를 풀어주자! 욱제가 만든 문제는 다음과 같다.</p>

<p>케이크 수 a, c 가 주어졌을 때, 다음을 만족하는 케이크 수 b를 계산하자.</p>

<p style="text-align: center;">a ?? b = c</p>

<p>a, c는 b가&nbsp;항상 유일하게 존재하도록 주어진다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에&nbsp;케이크 수 a를 구성하는 자연수 a.x, a.y, a.z 가 차례대로 주어진다. (1 ≤ a.x, a.y, a.z ≤ 100)</p>

<p>둘째 줄에&nbsp;케이크 수 c를 구성하는 자연수 c.x, c.y, c.z 가 차례대로 주어진다. (1 ≤ c.x, c.y, c.z ≤ 100)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>문제의 조건을 만족하는&nbsp;b.x, b.y, b.z를 하나의 공백을 사이에 두고 차례대로 출력한다.</p>

<p>b는 1 ≤ b.x, b.y, b.z ≤ 100 이고 반드시 유일하게 존재한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','15 16 17
19 32 90
','2 2 75
','MATH'),
                                                                                                                (3074,'BAEKJOON','https://www.acmicpc.net/problem/17257',17257,'불확정성이 넘쳐흘러','1초','256 MB',19,'<p>욱제는 대회 참가자들을 괴롭히기 위해 길이 N의 특이한 수열을 만들었다! 신기하게도, 이 수열의 원소들은 우리가 들여다보기 전까지는 확률적으로 존재할 뿐이며 여러 자연수들이 중첩된 상태로 존재한다. 이 수열의 원소들을 확정하기 위해서는&nbsp;<strong>관측</strong>이라는 특별한 과정이 필요하다.&nbsp;</p>

<p>자연수 <em>Y</em> ≥2 와 닫힌 구간 [ℓ, r] 에 대해, <strong>관측</strong> 및 <strong>관측의 결과값</strong>이 다음과 같이 정의된다.</p>

<p>수열의 ℓ번째 원소부터 r번째 원소를 각각 <em>A<sub>ℓ</sub>, A<sub>ℓ+1</sub>, ..., A<sub>r</sub></em>라는 확률변수로 놓자. 어떤 <em>A<sub>i</sub></em> 를 <strong>관측</strong>하는 순간, <em>A<sub>i</sub></em> 는 닫힌 구간 [1, <em>Y</em>]에 속한 임의의 자연수로 고정되어&nbsp;<em>B<sub>i</sub></em>가 된다. (어떤 자연수가 고정될 확률은 모두 1/Y로 같다) <strong>관측</strong>은 각 원소마다 독립적으로 시행하며, 이를 통해 <em>A<sub>ℓ</sub>, A<sub>ℓ+1</sub>, ..., A<sub>r</sub></em>에서 <em>B<sub>ℓ</sub>,, B<sub>ℓ+1</sub>, ..., B<sub>r</sub></em>를 얻어낼 수 있다. <strong>관측의 결과값</strong>이란 <em>B<sub>ℓ</sub></em>, <em>B<sub>ℓ+1</sub></em>,<em> ...</em> ,<em> B<sub>r</sub></em>의 최대공약수를 뜻한다. 관측된 원소들은 곧바로 원래 상태로 돌아가 다시 확률적으로만 존재하게 되며, 이후의 관측에 어떠한 영향도 주지 않는다.</p>

<p>욱제는 이 수열을 이용해서 다음과 같은 특이한 함수를 정의했다.</p>

<p style="text-align: center;">\[f_Y(i, j) = \begin{cases} 0 &amp; \text{if $i > j$} \\ \text{[i, j]를 관측한 결과가 Y와 서로소일 확률 } &amp; \text{otherwise} \end{cases}\]</p>

<p>이때 다음을 만족하는 정수 <em>Z</em>를 구해보자.</p>

<p style="text-align: center;">\[\sum\limits_{i=1}^{N}{\sum\limits_{j=1}^{N}{f_Y (i, j)}} = {Z\over Y^N}\]</p>

<p><em>Z</em>는 굉장히 커질 수 있으므로, 10<sup>9</sup> + 9로 나눈 나머지를 구해 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 수열의 길이 <em>N</em>, 자연수 <em>Y</em>가 주어진다. (1 ≤ N ≤ 10<sup>5</sup>, 2 ≤ Y ≤ 10<sup>9</sup> )</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>정수 <em>Z</em>를 10<sup>9</sup> + 9로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 3
','2
','MATH'),
                                                                                                                (3075,'BAEKJOON','https://www.acmicpc.net/problem/17268',17268,'미팅의 저주','1초','256 MB',13,'<p>인하대 컴퓨터 공학과에 재학 중인 이산이는 오랜만에 미팅을 나가 볼까 한다. 미팅은 <em>N</em>명이 원탁에 앉아서 진행된다고 한다. 질투가 난 이산이 친구 명기는 X의 저주를 걸었다. 그 저주는 <em>N</em>명이 동시에 2명씩 짝을 지어 악수할 때 사람의 팔이 교차되거나 한 사람이라도 악수를 하지 못하면 그 미팅은 실패하게 되는 저주다. 하지만 명기는 이산이에게 저주를 풀 기회를 주었다. 미팅에 성공할 경우의 수를 구하여 큰소리로 외치면 저주가 풀린다. 하지만 이산이는 계산 능력이 부족해서 당신에게 도움을 청했다. 이산이가 걸린 저주를 풀어주는 프로그램을 만들어주자.</p>

<p>미팅에 참가한 사람이 4명일 경우 미팅에 성공할 경우는 다음 그림과 같이 2가지이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/64896646-17dc-45ec-a2e9-6e26611f9825/-/preview/" style="height: 91.6667px; width: 337.5px;"></p>

<p>미팅에 참가한 사람이 6명일 경우 미팅에 성공할 경우는 다음 그림과 같이 5가지이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/8ae1f9a1-df3b-4a2f-b2e3-502b1651e805/-/preview/" style="width: 337.5px; height: 71.6667px;"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 미팅에 참가하는 사람의 수 <em>N&nbsp;</em>이 주어진다. 이 값은 10,000이하의&nbsp;짝수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>미팅에 성공하는 경우의 수를 987654321로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
','2
','MATH'),
                                                                                                                (3076,'BAEKJOON','https://www.acmicpc.net/problem/17269',17269,'이름궁합 테스트','1초','256 MB',5,'<p>시윤이는 좋아하는 이성이 생기면 가장 먼저 이름궁합부터 본다. 이름궁합을 보는 방법은 간단하다. 먼저 이름을 알파벳 대문자로 적는다. 각 알파벳 대문자에는 다음과 같이 알파벳을 적는데 필요한 획수가 주어진다. 예를 들어, 두 사람의 이름인 LEESIYUN, MIYAWAKISAKURA 를 같이 표현했을 때 다음과 같이 먼저 주어진 이름부터 한 글자씩 적는다.</p>

<table class="table table-bordered">
	<thead>
		<tr>
			<th>알파벳</th>
			<th>A</th>
			<th>B</th>
			<th>C</th>
			<th>D</th>
			<th>E</th>
			<th>F</th>
			<th>G</th>
			<th>H</th>
			<th>I</th>
			<th>J</th>
			<th>K</th>
			<th>L</th>
			<th>M</th>
			<th>N</th>
			<th>O</th>
			<th>P</th>
			<th>Q</th>
			<th>R</th>
			<th>S</th>
			<th>T</th>
			<th>U</th>
			<th>V</th>
			<th>W</th>
			<th>X</th>
			<th>Y</th>
			<th>Z</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<th>획수</th>
			<td>3</td>
			<td>2</td>
			<td>1</td>
			<td>2</td>
			<td>4</td>
			<td>3</td>
			<td>1</td>
			<td>3</td>
			<td>1</td>
			<td>1</td>
			<td>3</td>
			<td>1</td>
			<td>3</td>
			<td>2</td>
			<td>1</td>
			<td>2</td>
			<td>2</td>
			<td>2</td>
			<td>1</td>
			<td>2</td>
			<td>1</td>
			<td>1</td>
			<td>1</td>
			<td>2</td>
			<td>2</td>
			<td>1</td>
		</tr>
	</tbody>
</table>

<p>두 사람의 이름을 알파벳 대문자로 표현한 뒤, 한 글자씩 번갈아가며 적는다.</p>

<p>예시 : &nbsp;L M E I E Y S A I W Y A U K N I <strong>S A K U R A</strong></p>

<p>예시처럼 <strong>이름이 남을 경우엔 뒤에 남은 글자인 S A K U R A를 맨 뒤에 적는다.</strong> 그러고 나서 알파벳을 대응하는 숫자로 바꾸고 각 숫자와 그 숫자의 오른쪽 숫자와 더한 것을 밑에 적는다. 더한 숫자가 10이 넘을 경우엔 일의 자리 수만 남긴다. 이 과정을 반복하여 숫자가 2개만 남았을 때 남은 숫자가 두 사람의 궁합이 좋을 확률이 된다.</p>

<p>과정을 자세히 나타내면 다음과 같다.</p>

<pre>초기 상태 : 1 3 4 1 4 2 1 3 1 1 2 3 1 3 2 1 1 3 3 1 2 3
한번 수행 :  4 7 5 5 6 3 4 4 2 3 5 4 4 5 3 2 4 6 4 3 5
두번 수행 :   1 2 0 1 9 7 8 6 5 8 9 8 9 8 5 6 0 0 7 8
세번 수행 :    3 2 1 0 6 5 4 1 3 7 7 7 7 3 1 6 0 7 5
...
19번 수행 :                  5 7 0
20번 수행 :                   2 7
</pre>

<p>따라서 LEESIYUN와 MIYAWAKISAKURA이 궁합이 좋을 확률이 27%이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 이름의 길이 <em>N</em>과 <em>M</em>을 받는다. (2 ≤ <em>N</em>, <em>M</em> ≤ 100)</p>

<p>다음 줄에 이름 <em>A</em>와 <em>B</em>를 입력받는다. 이름은 반드시 알파벳 대문자만 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p><em>A</em>와 <em>B</em>의 이름궁합이 좋을 확률을 %로 출력한다. 단, 십의 자리가 0일 경우엔 일의 자리만 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8 14
LEESIYUN MIYAWAKISAKURA
','27%
','MATH'),
                                                                                                                (3077,'BAEKJOON','https://www.acmicpc.net/problem/17272',17272,'리그 오브 레전설 (Large)','3초','256 MB',15,'<p>규환이는 리그 오브 레전설이라는 게임을 좋아한다. 이 게임에서는 <em>N</em>초의 시간 동안 싸움을 하는데, 규환이가 플레이하는 캐릭터는 A, B 두 가지 스킬을 사용할 수 있다. &nbsp;A 스킬의 시전 시간은 1초고, B 스킬의 시전 시간은 <em>M</em>초이다. 규환이는 다양한 스킬 조합을 원하기 때문에 가능한 모든 스킬 조합을 알아보고 싶어 한다. 단, 시전 시간 동안은 다른 스킬을 사용할 수 없으며, 스킬을 안 쓰고 있는 시간은 없어야 한다.</p>

<p>예를 들어, <em>N</em>이 4초이고, <em>M</em>이 2초이면 가능한 스킬 조합은 AAAA, AAB, ABA, BAA, BB로 5가지가 가능하다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 싸움 시간 <em>N</em>과 B 스킬의 시전 시간 <em>M</em>이 주어진다. (<em>N</em>은 10<sup>18</sup>&nbsp;이하의 자연수, <em>M</em>은 2 이상&nbsp;100 이하의 자연수)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>가능한 조합의 수를 1,000,000,007로 나눈 나머지 값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 2
','5
','MATH'),
                                                                                                                (3094,'BAEKJOON','https://www.acmicpc.net/problem/17275',17275,'부족 전쟁','3초','512 MB',17,'<p>어느 행성에 N개의 작은 부족들이 살고 있다. 편의상 1부터 N까지 번호를 부여하자.</p>

<ul>
	<li>임의의 서로 다른 두 부족은 서로 동맹 관계이거나 서로 적대 관계이다. 이 관계는 대칭적이다. 즉, 부족 A는 부족 B를 동맹이라 생각하나 B는 A를 적이라 생각하는 경우는 없다.</li>
	<li>부족 A와 부족 B가 동맹이고, 부족 B와 부족 C가 동맹이라도 부족 A와 부족 C가 적대 관계일 수 있다.</li>
	<li>임의의 서로 다른 세 부족에 대하여, 세 부족이 서로 동맹 관계인 경우를 "삼자 동맹 관계"라 하고, 세 부족이 서로 적대 관계인 경우를 "삼자 적대 관계"라 하자.</li>
</ul>

<p>이 때, N개의 부족 내의 서로 다른 "삼자 동맹 관계"와 "삼자 적대 관계"들을 전부 합한 개수를 구하라.</p>

<p>예를 들어 N = 5이고 부족1-부족2, 부족1-부족3, 부족4-부족5가 서로 동맹 관계, 나머지 부족 쌍은 모두 적대 관계라고 가정하자. 이 경우 (2, 3, 4)와 (2, 3, 5) 가 "삼자 적대 관계"를 만족하고, "삼자 동맹 관계"는 없기 때문에 답은 2가 된다.</p>

<p>다른 예로&nbsp;N = 5이고 부족1-부족2, 부족2-부족3, 부족1-부족3이 동맹인 경우 (1, 2, 3)은 "삼자 동맹 관계"이고,&nbsp;(1, 4, 5), (2, 4, 5), (3, 4, 5)는 "삼자 적대 관계"이기 때문에 답은 4가 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 수 T가 주어진다 (1 ≤ T ≤ 10).</p>

<p>각 테스트 케이스 첫 줄에 N, M이 공백으로 구분 되어 주어진다.</p>

<p>다음 M줄에 걸쳐서 한 줄에 두 개의 정수 x, y가 주어지는데 이는 x와 y가 동맹임을 나타낸다.</p>

<p>입력으로 주어지는 동맹 관계는 언제나 1 ≤&nbsp;x < y ≤&nbsp;N을 만족하고, 같은 부족 쌍이 여러 번 주어지는 경우는 없다.</p>

<p><strong>입력으로 주어지지 않은 부족 쌍은 적대관계라고 가정한다.</strong></p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 한 줄에 동맹-반동맹 계수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
3 1
1 2
5 3
1 2
2 3
1 3
5 3
1 2
1 3
4 5
','0
4
2
','MATH'),
                                                                                                                (3099,'BAEKJOON','https://www.acmicpc.net/problem/17294',17294,'귀여운 수~ε?(?> ₃ <)?з','1초','512 MB',5,'<p>욱제는 귀여운 수~ε?(?> ₃ <)?з를 좋아한다. 귀여운 수~ε?(?> ₃ <)?з는 수를 이루는 각 자릿수가 등차수열[*]을 이루는 수이다. 당신은 욱제한테 귀여운 수~ε?(?> ₃ <)?з 하나를 선물해주고 싶다. 수 하나가 주어졌을 때 이 수가 귀여운지 판단하는 프로그램을 짜 보자.</p>

<p>[*] 등차수열을 이루는 숫자들은, 왼쪽에서 오른쪽으로 가면서&nbsp;일정한 크기(0일 수도 있음)만큼&nbsp;커지거나 일정한 크기만큼 작아진다. 뭔지 모르겠으면 예제를 보고 알아보자. ㅋㅋ!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>정수 k(1 ≤ k ≤ 10<sup>18</sup>)가&nbsp;주어진다. 입력은 0으로 시작하지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>수가 귀여우면 "<span class="emoji">?(?????)?..°♡</span> 뀌요미!!"를, 귀엽지 않으면 "흥칫뿡!! <(￣ ? ￣)>"를 따옴표 없이 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','630
','?(?????)?..°♡ 뀌요미!!
','MATH'),
                                                                                                                (3082,'BAEKJOON','https://www.acmicpc.net/problem/17301',17301,'NC 문자열','1초','512 MB',15,'<p>2019 shake!의 성사를 위해 바쁘게 뛰어다니던 준서는 문득 엔씨소프트의 <code>NC</code>가 무엇의 약자인지 궁금해졌다. <code>"Next Company"</code>, <code>"Next Cinema"</code> 등 자신이 아는 단어를 조합해봤지만, 정답이 무엇인지는 모른다. 어쩌면 <code>N</code>과 <code>C</code>로 시작하는 단어만 사용하는 게 아니라 <code>"nullpoiNter exCeption"</code>과 같은 이름도 가능하지 않을까?</p>

<p>고민하던 준서는 우선 자신이 알고 있는 단어 중 <code>N</code>이나 <code>C</code>가 들어간 단어를 목록으로 나열해보았다. 그 후 목록에 있는 총&nbsp;<em>N</em>개의 단어로 만들 수 있는 모든 <code>NC</code> 문자열을 적어&nbsp;엔씨소프트에 문의하기로 했다. 준서가 만들 수 있는 <code>NC</code> 문자열이란 다음과 같다.</p>

<ul>
	<li>준서의 목록 중 임의 개수만큼 단어를 고른다.</li>
	<li>한 문자열에서 같은 단어는 한 번만 사용할&nbsp;수 있다.</li>
	<li>고른 단어를 임의 순서로 배치하여 문자열을 만든다.</li>
	<li>만들어진 문자열에 <code>N</code>과 <code>C</code>가 등장하고, <code>N</code>보다 뒤에 등장하는 <code>C</code>가 있다면 이는 <code>NC</code> 문자열이다.</li>
</ul>

<p>예를 들어 준서가 알고 있는 단어가 {<code>"NEVER"</code>, <code>"ENDING"</code>, <code>"CHANGE"</code>, <code>"NCSOFT"</code>}라면 이 중 임의 단어를 선택해 배치한 <code>"NCSOFT"</code>, <code>"NEVER ENDING CHANGE"</code>&nbsp;등은 모두 <code>NC</code> 문자열이다. 하지만 <code>"CHANGE&nbsp;ENDING"</code>은&nbsp;<code>NC</code> 문자열이 아니다.</p>

<p>또한 <code>NC</code> 문자열은 단어 사이를&nbsp;띄어쓰기&nbsp;때문에 {<code>"NC"</code>, <code>"NCNC"</code>, <code>"NCNCNC"</code>}라는 단어가 있을 때 {<code>"NC NCNC"</code>, <code>"NCNC NC"</code>, <code>"NCNCNC"</code>}는 모두 다른 <code>NC</code> 문자열이다.</p>

<p>준서는 자신이 만들 수 있는 <code>NC</code> 문자열이 얼마나 많은지&nbsp;궁금해졌다. 준서가 만들 수 있는 <code>NC</code> 문자열의 총 개수를 세어보자. 단, 터무니없이 많은 조합이 생길 수 있으니 1,000,000,007로 나눈 나머지로 계산하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 준서가 알고 있는 단어의 개수 <em>N</em>(1 ≤ <em>N</em> ≤ 100,000)이 주어진다.</p>

<p>이후 <em>N&nbsp;</em>줄에 걸쳐 서로 다른 <em>N</em>개의 단어가 주어진다. 모든 단어의 길이는 1 이상 10 이하이며, 알파벳 대문자로만 구성되어있다. 하나의 단어는 적어도 하나 이상의 <code>N</code>이나 <code>C</code>를 포함한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>한 줄에 준서가 만들 수 있는 <code>NC</code> 문자열 총 가짓수를 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
NEVER
ENDING
CHANGE
NCSOFT
','55
','MATH'),
                                                                                                                (3104,'BAEKJOON','https://www.acmicpc.net/problem/17356',17356,'욱 제','1초','512 MB',2,'<p>오늘은 운명의 라이벌 권욱과 권제가 숙명의 대결을 펼치는 날이다. 대결 종목은 바로 2019년 천하제일 코딩대회 본선 문제 중 하나인 "<a href="https://www.acmicpc.net/contest/problem/438/8">욱 제</a>"를 더 빨리 푸는 것이다.</p>

<p>욱과 제는 "욱 제"를 빨리 푸는 능력, 일명 "욱제력"을 가지고 있다. 이 욱제력은 하나의 정수로 수치화할 수 있다. 욱의 욱제력이 A, 제의 욱제력이 B일 때, M을 $\frac{B-A}{400}$이라고 하자. 이때 욱이 제를 이길 확률은 $\frac{1}{1+10^M}$이다. 이 값은 얼마일까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>욱의 욱제력과 제의 욱제력이 한 줄에 주어진다. 욱제력은 0 이상 5,000 이하의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>욱이 제를 이길 확률을 출력한다. 정답과의 절대오차 또는 상대오차가 10<sup>-4</sup> 이하이면 정답으로 인정한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>소수의 거듭제곱을 계산하려면</p>

<ul>
	<li>C, C++의 경우 pow 함수를 사용하면 된다.</li>
	<li>Java의 경우 Math.pow 함수를 사용하면 된다.</li>
	<li>Python의 경우 ** 연산자를 사용하면 된다.</li>
</ul>

				</div>
				</div>','2000 1800
','0.7597469266479578
','MATH'),
                                                                                                                (3105,'BAEKJOON','https://www.acmicpc.net/problem/17357',17357,'자동차가 차주 김표준의 편을 들면?','1초','512 MB',7,'<p>길이 N인 수열 A<sub>1</sub>, A<sub>2</sub>, ...., A<sub>n</sub>이 주어진다. k = 1, 2, ..., N에 대해 다음을 차례대로 수행하는 프로그램을 작성하시오.</p>

<ul>
	<li>A<sub>i</sub>에서 시작하는 길이가 k인 구간 A<sub>i</sub>, A<sub>i+1</sub>, ..., A<sub>i+k-1</sub>의 표준편차를 σ<sub>i</sub>라고 할 때, σ<sub>i</sub>가 최대가 되는 i를 출력한다. 만약 그러한 i가 여러 개라면 그 중 가장 작은 i를 출력한다.</li>
</ul>

<p>예를 들어, 수열이 1, 3, 6, 10, 15이고 k = 2라면 4를 출력해야 한다. 길이가 2인 구간 중 표준편차가 최대인 구간은 10, 15이기 때문이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 수열의 길이 N이 주어진다. (1 ≤ N ≤ 1,000)</p>

<p>둘째 줄에 수열 A<sub>1</sub>, A<sub>2</sub>, ...., A<sub>n</sub>이 주어진다. (1 ≤ A<sub>i</sub> ≤ 1,000,000, A<sub>i</sub>는 정수)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>N개의 줄에 걸쳐 각각의 k에 대한 i의 값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>N개의 자료 값 $x_1, x_2, ..., x_n$이 있을 때,</p>

<p>평균 $m$은 $m=\frac{x_1?+x_2?+???+x_n}{n}?$</p>

<p>분산 $V$는 $V=\frac{(x_1-m)^2+(x_2-m)^2+???+(x_n-m)^2}{n}?$</p>

<p>표준편차 $\sigma$는 $\sigma=\sqrt{V}$이다.</p>

<p>"자동차가 차주 김표준의 편을 들다"를 네 글자로 줄이면 "표준편차"이다. (ㅎㅎ;; ㅈㅅ.. ㅋㅋ!!)</p>

				</div>
				</div>','5
5 4 6 1 10
','1
4
3
2
1
','MATH'),
                                                                                                                (3106,'BAEKJOON','https://www.acmicpc.net/problem/17358',17358,'복불복으로 지구 멸망','1초','512 MB',6,'<p>오늘은 즐거운 선린 축제날, 갑자기&nbsp;폭우가 쏟아지기 시작했다! 상민이는 비에 실망한 학우들을 위해 실내에서도 할 수 있는 복불복 게임을 준비했다.</p>

<p>상민이는 N개의 컵에 N개의 서로 다른 음료를 담았다. 그러고는&nbsp;아래와 같은 규칙에 따라 음료를 섞기로 했다.</p>

<ol>
	<li>1~N의&nbsp;번호가 메겨진 컵을 오름차순으로 일렬로&nbsp;배치한다.</li>
	<li>어떤 두&nbsp;컵을 골라 위치를 맞바꾼다. 이 작업을 N/2번 반복한다.</li>
	<li>모든 컵은 정확히 한 번씩 위치가 바뀌어야 한다. 자기 자신과는 위치를 바꿀 수 없다.</li>
</ol>

<p>이쯤 읽고 나니&nbsp;왠지 컵이&nbsp;배열되는&nbsp;경우의 수가&nbsp;몇 가지인지&nbsp;궁금해야 할 것 같다. 이걸 구하지 않으면 지구가 멸망한다고 한다. 이 문제를 풀고 지구의 용사가 되자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 음료의 개수 N이 주어진다. N은 항상 짝수이다.&nbsp;(2&nbsp;≤&nbsp;N ≤ 10<sup>5</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>컵이 배열되는&nbsp;경우의 수를 출력한다. 수가 커질 수 있으므로 10<sup>9</sup>+7로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
','3
','MATH'),
                                                                                                                (3087,'BAEKJOON','https://www.acmicpc.net/problem/17360',17360,'팰린드롬과 관련된 수열의 개수','0.25초(추가시간없음)','512 MB',11,'<p>N, M, K가 주어졌을 때, 다음 조건을 만족하는 수열 A의 개수를 세어보자.</p>

<ul>
	<li>A의 크기는 N이다.</li>
	<li>A는 M보다 작거나 같은 자연수로 이루어져 있다.</li>
	<li>A의 크기가 K인 부분 연속 수열은 모두 팰린드롬이다.</li>
</ul>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, M, K가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 수열 A의 개수를 10<sup>9</sup>+7로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1 1
','1
','MATH'),
                                                                                                                (3088,'BAEKJOON','https://www.acmicpc.net/problem/17362',17362,'수학은 체육과목 입니다 2','1초(추가시간없음)','1024 MB',2,'<p>이 사진을 기억하는가?</p>

<p><img alt="img1" src="https://upload.acmicpc.net/11eba1b1-183f-4519-b3ed-526e71dadfbe/-/preview/" style="display: block; margin-left: auto; margin-right: auto; width: 100%; max-width: 300px;"></p>

<p>이 사진은 오래전부터 인터넷에 돌아다니는 사진으로, 작년 전대프연 예선 A번에서는 수학을 정말 못 하는 고등학생인 성원이의 시험지로 소개되었다. 저작권이 있는 사진일 수 있어 알아보기 어렵게 가공했음을 양해 바란다.</p>

<p>예선 날짜가 다가오는데도 적당한 A번 문제를 생각하지 못한 출제진은 작년 전대프연 예선 A번을 응용해서 문제를 만들기로 했다. 이를 위해 사진 속 문제를 찾아본 출제진은 해당 문제가 2007학년도 6월 고등학교 1학년 전국연합학력평가 수리 영역 26번임을 알게 되었다.</p>

<p>시험지를 내려받고 문제들을 살펴보던 출제진은 아래와 같은 문제를 발견했다.</p>

<p><img alt="img2" src="https://upload.acmicpc.net/0e0c60fe-2bec-4f1e-85f2-57b5ba88fdb1/-/preview/" style="display: block; margin-left: auto; margin-right: auto; width: 350px; max-width: 420px; height: 322.5px;"></p>

<p>예상했겠지만, 여러분은 이제 위의 19번 문제 세 번째 줄에 등장하는 수 1000을 임의의 자연수로 바꾸었을 때 그에 해당하는 답을 출력하는 프로그램을 작성해야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 자연수 <em>n</em> (1 ≤ <em>n</em> ≤ 10<sup>9</sup>)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 19번 문제 세 번째 줄에 등장하는 수 1000을 자연수 <em>n</em>으로 바꾸었을 때 그에 해당하는 답의 번호를 출력한다. 즉, 1 이상 5 이하의 자연수 중 하나를 출력해야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
','3
','MATH'),
                                                                                                                (3089,'BAEKJOON','https://www.acmicpc.net/problem/17367',17367,'공교육 도박','1초(추가시간없음)','1024 MB',16,'<p>공교육의 수호자 수찬이는 공교육의 정수라고 할 수 있는 한국정보올림피아드의 문제를 가지고 게임을 하려고 한다. 수찬이는 2010년도 한국정보올림피아드 시·도 지역본선 중등부 1번 문제를 보고 영감을 받아 새로운 게임을 만들었다. 기존 게임은 1에서부터 6까지의 눈을 가진 3개의 주사위를 던져서 다음과 같은 규칙에 따라 상금을 받는 게임이다.</p>

<ol>
	<li>같은 눈이 3개가 나오면 10,000원+(같은 눈)*1,000원의 상금을 받게 된다.</li>
	<li>같은 눈이 2개만 나오는 경우에는 1,000원+(같은 눈)*100원의 상금을 받게 된다.</li>
	<li>모두 다른 눈이 나오는 경우에는 (그 중 가장 큰 눈)*100원의 상금을 받게 된다.</li>
</ol>

<p>예를 들어, 3개의 눈 3, 3, 6이 주어지면 상금은 1,000+3*100으로 계산되어 1,300원을 받게 된다. 또 3개의 눈이 2, 2, 2로 주어지면 10,000+2*1,000 으로 계산되어 12,000원을 받게 된다. 3개의 눈이 6, 2, 5로 주어지면 그중 가장 큰 값이 6이므로 6*100으로 계산되어 600원을 상금으로 받게 된다.</p>

<p>수찬이가 만든 새로운 게임의 룰은 다음과 같다.</p>

<ol>
	<li>게임이 시작되면 플레이어는 주사위를 여러 번 던진다.</li>
	<li>주사위를 던지다가 던진 눈의 값이 마음에 들면 언제든지 게임을 끝낼 수 있다. 그렇지 않다면 주사위를 한 번 더 던질 수 있다.</li>
	<li>주사위는 최소 세 번 던져야 하며 최대 <em>N</em>번까지 던질 수 있다.</li>
	<li>게임이 끝날 때 플레이어가 받는 상금은 가장 최근에 던진 주사위 세 번의 값을 가지고 기존 규칙에 따라 계산한다.</li>
</ol>

<p>만약 수찬이가 주사위를 여섯 번 던져서 6, 6, 6, 5, 1, 5가 나왔다면 상금은 1,000+5*100으로 계산되어 1,500원을 받게 된다.</p>

<p>수찬이는 받을 수 있는 상금의 기댓값이 최대가 되도록 게임을 플레이한다. <em>N</em>이 주어질 때 수찬이가 받는 상금의 기댓값을 구하는 프로그램을 작성하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 주사위를 던질 수 있는 최대 횟수 <em>N</em> (3 ≤ <em>N</em> ≤ 1,000)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 최선의 전략을 사용했을 때 수찬이가 얻을 수 있는 상금의 기댓값을 출력한다.</p>

<p>실제 정답과 절대/상대 오차가 10<sup>-6</sup> 이하이면 정답으로 간주한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
','1229.166666666667
','MATH'),
                                                                                                                (3107,'BAEKJOON','https://www.acmicpc.net/problem/17368',17368,'교점 세기','2초(추가시간없음)','1024 MB',21,'<p>자연상수 $e = 2.7182818284590452353602874\cdots$는 자연로그의 밑(base of the natural logarithm)으로, 아래와 같이 표현할 수 있음이 알려져 있다.</p>

<p>$$e = \lim_{t \rightarrow \infty} \left(1+\frac{1}{t}\right)^t = \sum_{k=0}^{\infty} \frac{1}{k!}$$</p>

<p>정의역이 집합 $X$이고 공역이 집합 $Y$인 함수 $f : X \rightarrow Y$의 그래프는 입력과 출력의 순서쌍으로 이루어진 집합, 즉</p>

<p>$$\left\{ \left(x, f(x)\right) : x \in X\right\}$$</p>

<p>로 정의된다. $X$와 $Y$가 모두 실수로 이루어진 집합이라면, 함수의 그래프에 속한 점들을 2차원 좌표평면 위에 나타낼 수 있다.</p>

<p>이 문제에서 다룰 함수는 "<code>y=e</code><span style="border: 1px solid black; padding-left: 5px; padding-right: 5px; font-size: 90%;">?</span><code>(ax)</code>"과 같은 꼴이다. 여기서 <span style="border: 1px solid black; padding-left: 5px; padding-right: 5px; font-size: 90%;">?</span>는 곱셈 연산자 <code>*</code>, 나눗셈 연산자 <code>/</code>, 거듭제곱 연산자 <code>^</code> 중 하나이고, <code>a</code>는 정수이다. 단, 연산자가 <code>/</code>인 경우 <code>a</code>는 0이 아님이 보장된다.</p>

<p>함수의 정의역은 <span style="border: 1px solid black; padding-left: 5px; padding-right: 5px; font-size: 90%;">?</span>가 <code>*</code> 또는 <code>^</code>인 경우 전체 실수 집합($\mathbb{R}$)이고, <code>/</code>인 경우 0을 제외한 모든 실수($\mathbb{R} \setminus \{0\}$)이다. 함수의 공역은 실수 집합($\mathbb{R}$)이다. 모든 경우에 대해 함수의 정의역과 공역은 실수로 이루어진 집합이므로, 이 문제에서 다룰 모든 함수는 좌표평면 위에 그래프를 그릴 수 있다.</p>

<p>아래 그림은 연산자 <span style="border: 1px solid black; padding-left: 5px; padding-right: 5px; font-size: 90%;">?</span>와 정수 <code>a</code>의 값에 따라 달라지는 함수의 그래프 몇 가지를 나타낸다.</p>

<p><img alt="img" src="https://upload.acmicpc.net/e1a4560d-b17a-480c-9910-4a6fdf39b16b/-/preview/" style="display: block; margin-left: auto; margin-right: auto; width: 375px; max-width: 450px; height: 173.333px;"></p>

<p>여러분은 위 그림과 같이 좌표평면 위에 주어진 함수들의 그래프를 모두 그렸을 때, 서로 다른 교점의 개수를 세는 프로그램을 작성해야 한다. 여기서 어떤 점이 <em><strong>교점</strong></em>이라는 것은 이 점이 주어진 함수 중 <u>2개 이상의 그래프에 동시에 포함</u>되어 있다는 것이다. 즉, 어떤 점이 3개 이상의 그래프에 동시에 포함되어 있더라도 한 번만 세어야 한다. 위 그림에서는 교점이 2개 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 함수의 개수 <em>n</em>(1 ≤ <em>n</em> ≤ 300,000)이 주어진다. 다음 <em>n</em>개의 줄에는 함수 <em>n</em>개의 정보가 한 줄에 하나씩 주어지며, 각 줄에는 연산자 <span style="border: 1px solid black; padding-left: 5px; padding-right: 5px; font-size: 90%;">?</span> (<code>*</code>, <code>/</code>, <code>^</code> 중 하나)와 정수 <code>a</code>(-10<sup>6</sup> ≤ <code>a</code> ≤ 10<sup>6</sup>)가 공백 하나를 사이로 두고 주어진다.</p>

<p>주어지는 모든 함수는 서로 다르며, 연산자 <span style="border: 1px solid black; padding-left: 5px; padding-right: 5px; font-size: 90%;">?</span>가 <code>/</code>라면 <code>a</code>는 0이 아니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 좌표평면 위에 주어진 모든 함수의 그래프를 그렸을 때 나타나는 교점의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
* 2
/ -3
^ -1
','2
','MATH'),
                                                                                                                (3108,'BAEKJOON','https://www.acmicpc.net/problem/17372',17372,'피보나치 수의 최대공약수의 합','1초','512 MB',24,'<p>피보나치 수는 다음과 같은 규칙으로 만들어지는 수열입니다.</p>

<p style="text-align: center;">$\begin{align*}F_{1} &amp;= 1 \\ F_{2} &amp;= 1 \\ F_{n+2} &amp;= F_{n+1} + F_{n}\end{align*}$</p>

<p>처음 몇 개의 항은 다음과 같습니다.</p>

<p style="text-align: center;">1, 1, 2, 3, 5, 8, 13 ...</p>

<p>다음과 같은 합을 구해봅시다.</p>

<p style="text-align: center;">$\sum_{i=1}^{n}\sum_{j=1}^{n} \gcd(F_{i}, F_{j})$</p>

<p>이때 gcd는 최대공약수를 의미합니다. 답이 매우 클 수 있으므로 1,000,000,007로 나눈 나머지를 출력합시다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 자연수 <em>n</em>이 주어집니다. (1 ≤ <em>n</em> ≤ 10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 구하는 합을 1,000,000,007로 나눈 나머지를 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
','52
','MATH'),
                                                                                                                (3109,'BAEKJOON','https://www.acmicpc.net/problem/17374',17374,'비트베리','1초(추가시간없음)','1024 MB',9,'<p>비트베리는 국내 최다 사용자를 확보하고 있는 간편암호화폐 지갑이다. 비트베리의 가장 큰 특징 중 하나는 카카오 계정으로 지갑을 만들고, 전화번호로 암호화폐를 주고받을 수 있는 점이다.</p>

<p><img alt="bitberry" src="https://upload.acmicpc.net/2b7fbb65-782b-4f87-bca1-552acc67ea81/-/preview/" style="display: block; margin-left: auto; margin-right: auto; margin-top: 15px; margin-bottom: 15px; width: 100%; max-width: 300px;"></p>

<p>페카즈는 비트베리의 특징을 이용해 자신이 보유한 다양한 종류의 암호화폐를 친구 빈센트와 상호 교환하고자 한다. 현재 페카즈의 비트베리 지갑 속에는 <em>P</em>개의 <em>비트</em>와 <em>Q</em>개의 <em>베리</em>가 들어 있다. 페카즈의 친구 빈센트는 엄청난 부자여서, 자신의 비트베리 지갑 속에 비트, 베리, 그리고 또 다른 단위인 <em>코인</em>과 <em>비트코인</em>을 각각 10<sup>100</sup>개씩 가지고 있다.</p>

<p>페카즈는 빈센트와 아래의 거래를 원하는 순서대로 원하는 만큼 반복할 수 있다.</p>

<ul>
	<li>빈센트에게 비트 <em>A</em>개를 주고 코인을 <em>B</em>개 받는다.</li>
	<li>빈센트에게 코인 <em>B</em>개를 주고 비트를 <em>A</em>개 받는다.</li>
	<li>빈센트에게 베리 <em>C</em>개를 주고 코인을 <em>D</em>개 받는다.</li>
	<li>빈센트에게 코인 <em>D</em>개를 주고 베리를 <em>C</em>개 받는다.</li>
	<li>빈센트에게 비트 1개와 코인 1개를 주고 비트코인을 1개 받는다.</li>
</ul>

<p>물론 거래를 하기 위해 빈센트에게 줘야 하는 암호화폐가 부족하다면 거래를 진행할 수 없다.</p>

<p>페카즈는 최선의 거래를 하여 자신이 갖고 있는 비트코인의 개수를 최대화하고자 한다. 페카즈가 만들 수 있는 비트코인의 최대 개수를 출력하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트 케이스의 수 <em>T</em> (1 ≤ <em>T</em> ≤ 1,000)가 주어진다.</p>

<p>다음 <em>T</em>개의 줄에는 테스트 케이스가 한 줄에 하나씩 주어진다. 각 줄에는 하나의 테스트 케이스를 구성하는 여섯 개의 정수 <i>P</i>, <em>Q</em>, <em>A</em>, <em>B</em>, <em>C</em>, <em>D</em> (0 ≤ <i>P</i>, <em>Q</em> ≤ 10,000, 1 ≤ <em>A</em>, <em>B</em>, <em>C</em>, <em>D</em> ≤ 10,000)가 공백 하나씩을 사이에 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스마다, 페카즈가 만들 수 있는 비트코인의 최대 개수를 한 개의 줄에 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
2019 8 3 11 16 13
2019 7 27 2019 8 3
8 3 2019 7 29 2018
','1584
1992
0
','MATH'),
                                                                                                                (3110,'BAEKJOON','https://www.acmicpc.net/problem/17376',17376,'룰렛','4초(추가시간없음)','1024 MB',23,'<p>종영이가 오랜 기간 동안 준비한 "옥토끼나라 놀이공원"이 곧 개장을 앞두고 있다. 이 놀이공원에는 <em>N</em>개의 놀이기구가 있고, 두 놀이기구 사이를 잇는 도로들이 <em>N</em>-1개 있다. 사람들은 이 도로들을 이용해 자신이 있는 놀이기구에서 다른 원하는 놀이기구로 반드시 이동할 수 있다. 또한 이 놀이공원에는 다음에 어떤 놀이기구를 탈지 고민하는 사람들을 위해 종영이의 야심작 "룰렛 시스템"이 도입되었다.</p>

<p>놀이공원의 각 놀이기구 옆에는 룰렛이 하나씩 있다. 룰렛은 여러 칸으로 나뉘어 있고, 각 칸에는 현재 놀이기구와 도로로 직접 연결된 다른 놀이기구나 집이 그려져 있다. 룰렛은 아주 정확해서 어떤 그림이 나올 확률은 그 그림이 그려진 칸의 수와 비례한다. 놀이기구를 타고 나온 사람들은 이 룰렛을 돌려서 다른 놀이기구가 나오면 그 놀이기구로 이동하고, 집이 나오면 더 이상 놀이기구를 타지 않고 집으로 돌아간다.</p>

<p>종영이는 더 많은 수익을 얻고자 놀이기구를 하나 골라서 그 옆에 식당을 짓기로 했다. 사람들은 집으로 돌아가기 전까지는 계속해서 놀이기구를 타기 때문에, 이 놀이기구를 끝으로 더 이상 놀이기구를 타지 않고 집에 돌아가는 사람이 많을수록 식당은 더 큰 수익을 낼 수 있을 것이다. 종영이는 식당이 낼 수 있는 수익이 너무 작다면 놀이공원의 입구를 바꾸는 것까지도 고려하고 있다.</p>

<p>따라서 식당과 입구의 위치를 잘 정하기 위해서는 입구로 들어온 사람이 식당 옆에 있는 놀이기구를 타고 나서 집에 돌아갈 확률을 구해야 한다. 종영이를 위해 두 개의 놀이기구의 번호 <em>S</em>, <em>E</em>가 주어지면 <em>S</em>번 놀이기구에서 출발했을 때 마지막으로 <em>E</em>번 놀이기구를 타고 집으로 돌아갈 확률을 구해주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 놀이기구의 수 <em>N</em>과 쿼리의 수 <em>Q</em>가 주어진다. (2 ≤ <em>N</em> ≤ 100,000, 1&nbsp;≤&nbsp;<em>Q</em> ≤ 500,000)</p>

<p>그 후 <em>N</em>개의 수가 주어지는데, <em>i</em>번째 수 <em>A<sub>i</sub></em>는 <em>i</em>번 놀이기구의 룰렛의 칸 수를 의미한다. (2 ≤ <em>A<sub>i</sub></em> ≤ 10<sup>8</sup>)</p>

<p>그 후 <em>N</em>-1개의 줄에 걸쳐 한 줄에 하나씩 <em>u</em>, <em>v</em>, <em>p<sub>1</sub></em>, <em>p<sub>2</sub></em>가 주어진다. 이는 <em>u</em>번 놀이기구와 <em>v</em>번 놀이기구를 잇는 도로가 있으며, <em>u</em>번 놀이기구의 룰렛에서 <em>v</em>번 놀이기구로 가는 결과가 나오는 칸의 수가 <em>p<sub>1</sub></em>이며, <em>v</em>번 놀이기구의 룰렛에서 <em>u</em>번 놀이기구로 가는 결과가 나오는 칸의 수가 <em>p<sub>2</sub></em>라는 뜻이다. (1 ≤ <em>p<sub>1</sub></em> < <em>A<sub>u</sub></em>, 1 ≤ <em>p<sub>2</sub></em> < <em>A<sub>v</sub></em>)</p>

<p>도로 정보들로 주어진 <em>i</em>번째 놀이기구에 있는 룰렛의 칸의 수의 합은 <em>A<sub>i</sub></em> 미만임이 보장되며, 합을 <em>S<sub>i</sub></em>라 했을 때 <em>i</em>번째 놀이기구에서 집으로 돌아가는 결과가 나오는 칸의 수는 <em>A<sub>i</sub></em>-<em>S<sub>i</sub></em>개다.</p>

<p>그 후 <em>Q</em>개의 줄에 걸쳐 한 줄에 하나씩 쿼리에 해당하는 <em>S</em>와 <em>E</em>가 공백으로 구분되어 주어진다. (1 ≤ <em>S</em>, <em>E</em> ≤ <em>N</em>)</p>

<p>어떠한 <em>S</em>와 <em>E</em>를 잡아도 쿼리의 답이 $\frac{p}{q}$(<em>p</em>와 <em>q</em>는 서로소인 정수) 꼴이라는 것을 증명할 수 있으며, 이때 $p, q \not\equiv 0 \pmod{10^{9}+7}$임이 보장되는 입력이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p><em>i</em>번째 답이 <em>B<sub>i</sub></em>일 때, $B_{i}=$$\frac{P_{i}}{Q_{i}}$ 꼴이라 하자. (<em>P<sub>i</sub></em>와 <em>Q<sub>i</sub></em>는 서로소인 정수)</p>

<p><em>Q</em>개의 답을 줄바꿈으로 구분하여 출력하는데, <em>i</em>번째 답으로는 $V \cdot$ $Q_{i} \equiv P_{i} \pmod{10^9+7}$을 만족하는 0 이상 10<sup>9</sup>+6이하의 정수 <em>V</em>를 출력한다. 입력 제약 조건을 만족하는 모든 입력에서 이러한 <em>V</em>가 유일하게 존재함을 증명할 수 있다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 4
2 3
1 2 1 1
1 1
1 2
2 1
2 2
','200000002
800000006
400000003
600000005
','MATH'),
                                                                                                                (3090,'BAEKJOON','https://www.acmicpc.net/problem/17378',17378,'공의 합집합','2초(추가시간없음)','1024 MB',23,'<p>3차원 좌표공간에 <em>n</em>개의 공(ball)이 있다. 이 중 <em>i</em> (1 ≤ <em>i</em> ≤ <em>n</em>)번째 공은 겉표면이 중심이 (<em>x<sub>i</sub></em>, 0, 0)이고 반지름은 <em>r<sub>i</sub></em>인 구 형태이며, 이 공이 차지하는 영역은 <em>S<sub>i</sub></em> = {(<em>x</em>, <em>y</em>, <em>z</em>) ∈ ?<sup>3</sup> : (<em>x</em> - <em>x<sub>i</sub></em>)<sup>2</sup> + <em>y</em><sup>2</sup> + <em>z</em><sup>2</sup> ≤ <em>r<sub>i</sub></em><sup>2</sup>}이다.</p>

<p>모든 공의 합집합 <em>S</em><sub>1</sub> ∪ <em>S</em><sub>2</sub> ∪ ··· ∪ <em>S<sub>n</sub></em>의 부피를 구하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 공의 개수 <em>n</em> (1 ≤ <em>n</em> ≤ 300,000)이 주어진다.</p>

<p>다음 <em>n</em>개 줄에는 공의 정보가 한 줄에 하나씩 주어지는데, 이 중 <em>i</em> (1 ≤ <em>i</em> ≤ <em>n</em>)번째 줄에는 두 개의 정수 <em>x<sub>i</sub></em> (0 ≤ <em>x<sub>i</sub></em> ≤ 10<sup>6</sup>)와 <em>r<sub>i</sub></em> (1 ≤ <em>r<sub>i</sub></em> ≤ 10<sup>6</sup>)가 공백 하나를 사이로 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>모든 공의 합집합 <em>S</em><sub>1</sub> ∪ <em>S</em><sub>2</sub> ∪ ··· ∪ <em>S<sub>n</sub></em>의 부피는 <em><sup>p</sup></em>?<em><sub>q</sub></em> π (단, <em>p</em>와 <em>q</em>는 서로소인 두 자연수)로 나타낼 수 있다. 이때, 첫 번째 줄에 <em>V</em> ? <em>q</em> ≡ <em>p</em> (mod 10<sup>9</sup> + 7)을 만족하는 0 이상 10<sup>9</sup> + 6 이하의 정수 <em>V</em>를 출력하라. 입력 제약 조건을 만족하는 모든 입력에서 이러한 <em>V</em>가 유일하게 존재함을 증명할 수 있다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
1 4
','333333421
','MATH'),
                                                                                                                (3091,'BAEKJOON','https://www.acmicpc.net/problem/17379',17379,'땅다람쥐','1초(추가시간없음)','1024 MB',26,'<p>근우는 땅다람쥐를 연구하고 있다. 근우가 연구하는 땅다람쥐는 흔히 알려진 땅다람쥐와는 달리, 단 하나의 커다란 굴을 파고 살아가며 아주 독립적인 동물이다. 편의상 땅이 격자로 나뉘어 있다고 가정할 때, 땅다람쥐가 파는 굴은 다음과 같은 특징을 가진다.</p>

<ul>
	<li>두 개의 칸이 상하좌우로 인접해 있으면 이동할 수 있다고 할 때, 땅다람쥐 한 마리의 굴에서 어떤 두 개의 칸을 고르더라도 같은 칸을 두 번 이상 방문하거나 굴을 벗어나지 않고 둘 사이를 이동하는 경로가 유일하게 존재한다.</li>
	<li>여러 마리의 땅다람쥐가 있을 때, 어떤 두 땅다람쥐의 굴도 같은 칸을 공유하지 않는다.</li>
</ul>

<p>근우는 땅에서 두 개의 칸을 골라 땅다람쥐를 한 마리씩 올려놓았다. 두 땅다람쥐는 각자 처음 놓인 칸에서 굴을 파기 시작해 인접한 칸들로 확장해 나갔다. 그러나 더 이상 확장할 수 없는 상태가 되었음에도 불구하고 어떤 굴에도 포함되지 않은 칸들이 남아 있었다.</p>

<p style="margin-top: 30px;"><img alt="prairie" src="https://upload.acmicpc.net/09e7a84a-70df-407b-96b1-88feadf8ba37/-/preview/" style="display: block; margin-left: auto; margin-right: auto; width: 100%; max-width: 320px;"></p>

<p style="margin-bottom: 30px; text-align: center;">두 땅다람쥐가 굴을 판 뒤</p>

<p>근우는 땅다람쥐들이 계획적으로 굴을 판다면 모든 칸이 두 땅다람쥐의 굴 중 하나에 포함될 수 있을 거라고 생각했다. 근우의 가설이 맞을지 확인해 보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 땅의 세로 길이와 가로 길이를 의미하는 정수 <em>N</em>과 <em>M</em>(2 ≤ <em>N</em>, <em>M</em> ≤ 100)이 주어진다.</p>

<p>두 번째 줄에 첫 번째 땅다람쥐를 올려놓은 위치를 의미하는 정수 <em>X</em>와 <em>Y</em>(1 ≤ <em>X</em> ≤ <em>N</em>, 1 ≤ <em>Y</em> ≤ <em>M</em>)가 주어진다. 이는 <em>X</em>번째 줄 <em>Y</em>번째 칸에 땅다람쥐를 올려놓았음을 의미한다.</p>

<p>세 번째 줄에 두 번째 땅다람쥐를 올려놓은 위치가 같은 형식으로 주어진다. 두 땅다람쥐의 위치는 서로 다르다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>만약 모든 칸을 두 땅다람쥐의 굴에 포함시킬 수 있다면 첫 줄에 <code>YES</code>를 출력한다.</p>

<p>다음 <em>N</em>개의 줄에 걸쳐 굴을 판 결과를 각 줄에 <em>M</em>글자의 문자열로 출력한다. 첫 번째 땅다람쥐의 굴에 속하는 칸은 <code>#</code>, 두 번째 땅다람쥐의 굴에 속하는 칸은 <code>.</code>으로 나타낸다. 가능한 답이 여러 개 있다면 그중 아무것이나 출력한다.</p>

<p>만약 모든 칸을 포함시키는 것이 불가능하다면 첫 줄에 <code>NO</code>를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 4
2 1
3 3
','YES
####
#..#
##.#
','MATH'),
                                                                                                                (3111,'BAEKJOON','https://www.acmicpc.net/problem/17392',17392,'우울한 방학','1초','512 MB',10,'<p>방학동안 기숙사에 홀로 남겨진 인호는 우울하고 고독하다. 다행히 인호는 <em>M</em>일의 방학 동안 <em>N</em>개의 약속이 잡혀있기에, 약속 날짜의 효율적인 배치를 통해 방학 내에 느낄 우울함의 합을 최소화하려고 한다.</p>

<p dir="ltr">인호의 기분은 정수로 표현 가능하며, 기분이 0 미만인 날에 (기분)<sup>2</sup> 만큼 우울함을 느낀다. 인호의 기분은 오늘 약속이 있다면 약속의 기대행복 값인 <em>H<sub>i</sub></em>이며, 약속이 없으면 어제의 기분에서 1을 뺀 값이다.</p>

<p dir="ltr">인호는 하루에 최대 한 개의 약속을 소화할 수 있으며, <em>N</em>개의 약속들의 순서는 주어진 순서대로여야 한다.</p>

<p dir="ltr">방학은 내일부터 시작이며, 오늘 인호의 기분은 0일 때, 약속을 적절히 배치하여 인호가 방학 동안 느낄 우울함의 합을 최소화하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 인호의 약속 개수인 음이 아닌 정수 <em>N</em>과 방학의 일수인 자연수 <em>M</em>이 공백으로 구분되어 주어진다. (0 ≤ <em>N</em> < <em>M</em> < 1000)</p>

<p>두 번째 줄에는 <em>N</em>개의 정수 <em>H<sub>1</sub></em>, <em>H<sub>2</sub></em>, ..., <em>H<sub>N</sub></em>이 공백으로 구분되어 주어진다. <em>H<sub>i</sub></em>는 <em>i</em> 번째 약속의 기대행복 값이다. (1 ≤ <em>H</em><sub><em>i</em></sub> < 100)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 인호가 방학 동안 느낄 우울함의 합의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 10
2 2 1
','2
','MATH'),
                                                                                                                (3112,'BAEKJOON','https://www.acmicpc.net/problem/17394',17394,'핑거 스냅','2초','512 MB',11,'<p>[어벤져스] 시리즈를 보지 않은 사람이라도 ‘인피니티 건틀렛’이 무엇인지는 다들 알 것이다. 그래도 모르는 사람들을 위해 설명을 하자면, 인피니티 스톤이 모두 모인 인피니티 건틀렛을 끼고 손가락을 튕기면, 사용자가 원하는 것을 할 수 있다. 그러나 반동이 매우 심하기 때문에 그리 많이는 사용할 수 없다.</p>

<p>정신 나간 수학자 Sonaht는 우연히 이 인피니티 건틀렛을 손에 넣게 된다. 그러나 이 인피니티 건틀렛에는 약간의 하자가 있어서, 핑거 스냅으로 할 수 있는 일이 몇가지 없다. 다음은, 핑거 스냅으로 할 수 있는 일을 나열한 것이다.</p>

<ol dir="ltr">
	<li>전 우주의 생명체 수를 현재의 절반으로 한다.</li>
	<li>전 우주의 생명체 수를 현재의 1/3로 한다.<br>
	(위의 두 경우에서, 나누어 떨어지지 않으면 몫만 남기고, 나머지는 버린다.)</li>
	<li>전 우주의 생명체 수를 현재보다 하나 늘린다.</li>
	<li>전 우주의 생명체 수를 현재보다 하나 줄인다.<br>
	(이미 전 우주의 생명체 수가 0이라면 할 수 없다.)</li>
</ol>

<p dir="ltr">Sonaht는 전 우주의 생명체 수를 목표치 <em>A </em>이상<em>&nbsp;B </em>이하로 줄이려 한다. 그러나 역시나 정신 나간 수학자답게, <i>A&nbsp;</i>이상<em> B</em> 이하인 수 중 소수로 만들려 한다.&nbsp;<strong>(어쩌면 A와 B 사이에 소수가 없을지도 모르지만 말이다.)</strong> 소수란, 서로 다른 약수가 1과 자기 자신밖에 없는 수를 의미한다. 그러나 인피니티 건틀렛은 반동이 심하기에, Sonaht는 최대한 적은 수의 핑거 스냅으로 이 목표를 달성하고자 한다. Sonaht가 최소 몇 번의 핑거 스냅을 해야 할지 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트 케이스의 개수 <em>T</em>가 주어진다. (1 ≤ <em>T</em> ≤ 10)</p>

<p>두 번째 줄부터 <em>T</em>개의 줄에 걸쳐, 현재 전 우주의 생명체 수인 자연수 <em>N</em>과, Sonaht의 목표 범위인 자연수 <em>A, B</em>가 공백으로 구분되어 주어진다. (2 ≤ <em>N</em> ≤ 1,000,000, 2 ≤ <i>A ≤ B</i>&nbsp;≤ 100,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>매 줄마다, 각 테스트 케이스에서 Sonaht가 전 우주의 생명체 수를 목표범위 내의 소수로 만드는 데 필요한 최소한의 핑거 스냅의 횟수를 출력한다.</p>

<p>만약 목표범위 내의 소수로 만들 수 없다면, <code>-1</code>을 출력한다.</p>

<p>매 테스트 케이스는 독립적으로 고려되어야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
9 2 4
100000 605 610
300 14 16
7 7 10
98765 500 550
','1
15
-1
0
12
','MATH'),
                                                                                                                (3092,'BAEKJOON','https://www.acmicpc.net/problem/17395',17395,'이진수 변환','1초','512 MB',11,'<p>당신에게 자연수 <em>x</em><sub>0</sub>와 <em>N</em>이&nbsp;주어졌다. 지금부터 당신은 이 자연수<em> x</em><sub>0</sub>를 <em>N</em>번의 변환을 통해 0으로 바꿀 것이다. 변환이란, 양의 정수를 이진법으로 표기하여, 1개 이상의 1을 0으로 바꾸는 작업이다. 예를 들어 9를 이진법으로 나타내면 1001<sub>(2)</sub>인데, 9는 0(<u>0</u>00<u>0</u><sub>(2)</sub>), 1(<u>0</u>001<sub>(2)</sub>), 또는 8(100<u>0</u><sub>(2)</sub>)로 변환될 수 있다. 바뀐 자릿수는 밑줄로 표기되었다. 여러분의 목표는 <em>x<sub>i</sub></em>를 변환하여 <em>x</em><sub><em>i</em>+1</sub>를 만드는 과정을 반복해, <em>x<sub>N</sub></em>을 0으로 만드는 것이다.</p>

<p>위 조건을 만족하는 수열 <em>X</em> = <em>x</em><sub>0</sub>, <em>x</em><sub>1</sub>, <em>x</em><sub>2</sub>, ..., <em>x<sub>N</sub></em>는 존재하지 않을 수도 있지만, 여러 개가 존재할 수도 있다. 만약 존재한다면, 각 수열별로 인접한 원소들의 차들의 집합 <em>D</em>(<em>X</em>) = {<em>x</em><sub>0</sub>-<em>x</em><sub>1</sub>, <em>x</em><sub>1</sub>-<em>x</em><sub>2</sub>, ..., <em>x<sub>N</sub></em><sub>-1</sub>-<em>x</em><sub><em>N</em></sub>}를 정의하자. 이 집합의 원소들의 최대값과 최소값의 차이를 최소화하도록, 수열 <em>X</em>를 만들고자 한다. 즉, 가능한 모든 수열 <em>X<sub>i</sub></em> 중 (<em>D</em>(<em>X<sub>i</sub></em>)에 속한 원소의 최댓값 - <em>D</em>(<em>X<sub>i</sub></em>)에 속한 원소의 최솟값)이 최소가 되는 <em>X<sub>i</sub></em>를 찾고자 한다.</p>

<p>이상해보일 수 있는 문제지만, 당신은 대답해야 한다. 과연 1초안에&nbsp;답할 수 있을까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 변환할 자연수와 변환 횟수를 의미하는 두 자연수 <em>x</em><sub>0</sub>과 <em>N</em>이 공백으로 구분되어 주어진다. (1 ≤ <em>x</em><sub>0</sub>&nbsp;≤ 10<sup>16</sup>, 1 ≤ <em>N</em> ≤ 50)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>만약 조건을 만족하는 수열이 존재하지 않으면 첫 번째 줄에 <code>-1</code>을 출력한다.</p>

<p>조건을 만족하는 수열이 존재한다면, 수열의 원소를 의미하는 <em>N</em>개의 정수 <em>x</em><sub>1</sub>, <em>x</em><sub>2</sub>, ..., <em>x<sub>N</sub></em>을 공백으로 구분하여 출력한다.</p>

<p>조건을 만족하는 수열이 여러 개 존재한다면, 아무 것이나 출력해도 좋다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','23 2
','16 0
','MATH'),
                                                                                                                (3113,'BAEKJOON','https://www.acmicpc.net/problem/17401',17401,'일하는 세포','1초','512 MB',16,'<p>사람의 세포 수, 약 37조 개. 세포들은 몸 속에서 오늘도 열심히 일하고 있다. 그중에서도 우리의 적혈구는 혈관을 타고 돌아다니며 산소와 영양소를 운반해주는 중요한 역할을 맡고있다.</p>

<p>적혈구는 심장이나 폐 같은 거점들을 돌아다니면서 산소와 영양분을 운반한다. 몸 속에는 총 <em>N</em>개의 거점이 있고, 몇몇 거점은 통로를 통해 서로 이어져 있다.&nbsp;거점 사이의 통로를 통과하는데는 1초가 걸린다. 하지만 혈관의 곳곳에는 판막이나 공사중인 부분들이 있기 때문에 매 초 거점 사이의 연결관계가 바뀐다. 그럼에도 불구하고 몸의 곳곳이 산소와 영양분을 필요로 하므로 적혈구는 가만히 있을 수 없으며, 매 초 통로를 무조건 하나 타야 한다. 일부 통로는 출발 거점과 도착 거점이 같을 수도 있다. 일부 거점의 특정 순간에는 나가는 통로가 없을 수도 있는데, 이 때는 도착한지 1초 후에 파괴되어 몸과 다시 하나가 된다. 잔혹하지만 우리의 몸은 이렇게 돌아간다.</p>

<p>우리의 적혈구는 매 순간 변하는 몸속 혈관 지도에 길을 헤매지만 그래도 최선을 다해서 하루하루 열심히 일을 하고 있다. 옆에 있던 백혈구가 길을 헤매는 적혈구를 보고 도와주고 싶다는 생각을 했다.</p>

<p>수십 시간의 유주 경험을 통해 백혈구는 몸속 혈관 지도가 <em>T&nbsp;</em>초를 주기로 반복된다는 것을 알게 되었다. 이 사실을 정리해서 적혈구가 거점 A에서 출발하여 정확히 <em>D</em>초 후 거점 B에 도달하게 되는 경우의 수를 모든 거점의 순서쌍에 대해 구해주고자 하지만 너무나도 단세포이기 때문에 머리가 나빠서 계산을 하지 못했다. 한 경로는, <em>D</em>초 동안 통과한 통로의 순열로 정의된다. 백혈구를 도와서 적혈구가 <em>D</em>초 동안 한 거점에서 다른 거점까지 움직일 수 있는 경우의 수를 구해주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p dir="ltr" id="docs-internal-guid-f0440523-7fff-2b5e-0a11-86c9ac1be5a4">첫 번째 줄에는 백혈구가 알아낸 혈관 지도들의 주기인 자연수 <em>T&nbsp;</em>와 거점의 개수인 자연수 <em>N</em>, 적혈구가 움직이는 시간인 정수 <em>D&nbsp;</em>가 공백으로 구분되어 주어진다. (1 ≤ <em>T</em> ≤ 100, 2 ≤ <em>N</em> ≤ 20, 0 ≤ <em>D</em> ≤ 10<sup>9</sup>)</p>

<p dir="ltr">그 뒤 거점 사이의 연결 관계를 나타내는 혈관 지도&nbsp;<em>T</em> 개가 순서대로 1번부터 <em>T </em>번까지 주어지는데, 혈관 지도가 주어지는 형식은 다음과 같다.</p>

<ul dir="ltr">
	<li>첫 번째 줄에는 거점 사이를 잇는 혈관의 개수인 자연수 <em>M<sub>i</sub>&nbsp;</em>가 주어진다. (0 ≤ <em>M<sub>i</sub></em> ≤ <em>N</em><sup>2</sup>)</li>
	<li>그 뒤 <em>M<sub>i </sub></em>개의 줄에 걸쳐 세 자연수 <em>a</em>, <em>b</em>, <em>c</em>가 공백으로 구분되어 주어진다. 이는 거점 <em>a&nbsp;</em>에서 거점 <em>b&nbsp;</em>로 가는 서로 다른 단방향 통로가 <em>c&nbsp;</em>개 있음을 의미한다. (1 ≤ <em>a</em>, <em>b</em> ≤ <em>N</em>, 1 ≤ <em>c</em> ≤ 1000)</li>
	<li>매 혈관 지도에 중복된 연결 관계는 주어지지 않는다.</li>
</ul>

<p dir="ltr"><em>i </em>초에서 (<em>i</em>+1)초 동안 이동할 때는 (<em>i</em> % <em>T</em> + 1)번 혈관 지도가 적용된다. <em>i</em> % <em>T</em>는 <em>i</em>를 <em>T</em>로 나눈 나머지를 의미한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p dir="ltr">출력은 <em>N</em>개의 줄로 구성되며, <em>i</em> 번째 줄에는 <em>N</em>개의 정수 <em>x<sub>i</sub></em><sub>1</sub>, <em>x<sub>i</sub></em><sub>2</sub>, ..., <em>x<sub>iN</sub></em>를 공백으로 구분하여 출력해야 한다. <em>x<sub>ij</sub></em>는 0초 때 거점 <em>i</em> 에서 출발하여 정확히 <em>D</em>초 때 거점 <em>j</em>에 위치하게 되는 경로의 수를 1,000,000,007로 나눈 나머지이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 2 4
2
1 1 2
2 2 3
','16 0
0 81
','MATH'),
                                                                                                                (3114,'BAEKJOON','https://www.acmicpc.net/problem/17405',17405,'피보나치 수의 최대공약수의 합처럼 보이지만...','2초','512 MB',27,'<p>피보나치 수는 다음과 같은 규칙으로 만들어지는 수열입니다.</p>

<p style="text-align: center;">$\begin{align*}F_{1} &amp;= 1 \\ F_{2} &amp;= 1 \\ F_{n+2} &amp;= F_{n+1} + F_{n}\end{align*}$</p>

<p>처음 몇 개의 항은 다음과 같습니다.</p>

<p style="text-align: center;">1, 1, 2, 3, 5, 8, 13 ...</p>

<p>다음과 같은 합을 구해봅시다.</p>

<p style="text-align: center;">$\sum_{i=1}^{n}\sum_{j=1}^{n} (\gcd(i, j))^{k}\gcd(F_{i}, F_{j})$</p>

<p>이때 gcd는 최대공약수를 의미합니다. 답이 매우 클 수 있으므로 1,000,000,007로 나눈 나머지를 출력합시다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 두 개의 정수 <em>n</em>과 <em>k</em>가 주어집니다. (1 ≤ <em>n</em> ≤ 10<sup>9</sup>, 0 ≤ <em>k</em> ≤ 4000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 구하는 합을 1,000,000,007로 나눈 나머지를 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 0
','52
','MATH'),
                                                                                                                (3115,'BAEKJOON','https://www.acmicpc.net/problem/17419',17419,'비트가 넘쳐흘러','1초(추가시간없음)','512 MB',7,'<p style="text-align: center;"><em>?? DJ욱제는 <strong>비트</strong>에 몸을 맡기는 중이다.&nbsp;??</em></p>

<p><em>DJ욱제</em>는 비트에 심취한 나머지, <em>비트를 비틀어 제껴버리는</em> 문제를 내 버렸다!</p>

<p><em>N</em>자리 이진수 <em>K</em>가 주어진다. <em>K</em>가 0이 아닐 때까지 아래의 연산을 적용했을 때, 연산이 일어나는 횟수를 구하시오.</p>

<ul>
	<li><em>K</em> = <em>K</em>-(<em>K</em>&amp;((~<em>K</em>)+1))</li>
</ul>

<p>아래는 위의 연산에 사용된 연산자에 대한 설명이다.</p>

<ul>
	<li>+는 산술 더하기 연산이다. (5 + 2 = 7)</li>
	<li>-는 산술 빼기 연산이다. (5 - 2 = 3)</li>
	<li>&amp;는 비트 AND 연산이다. (1101 &amp; 0111 = 0101)</li>
	<li>~는 비트 NOT 연산이다. 켜진 비트를 끄고, 꺼진 비트를 켜는 연산이다. (~1101 = 0010)</li>
</ul>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 <em>N</em>이 주어진다.</p>

<p>둘째 줄에&nbsp;<em>N</em>자리 이진수 <em>K</em>가 주어진다. <em>K</em>는 0으로 시작하지 않는다. 즉, leading zero는 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>연산이 일어나는 횟수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
10110
','3
','MATH'),
                                                                                                                (3116,'BAEKJOON','https://www.acmicpc.net/problem/17425',17425,'약수의 합','1초(추가시간없음)','512 MB',12,'<p>두 자연수 A와 B가 있을 때, A = BC를 만족하는 자연수 C를 A의 약수라고 한다. 예를 들어, 2의 약수는 1, 2가 있고, 24의 약수는 1, 2, 3, 4, 6, 8, 12, 24가 있다. 자연수 A의 약수의 합은 A의 모든 약수를 더한 값이고, f(A)로 표현한다. x보다 작거나 같은 모든 자연수 y의 f(y)값을 더한 값은 g(x)로 표현한다.</p>

<p>자연수 N이 주어졌을 때, g(N)을 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T(1 ≤ T ≤ 100,000)가 주어진다. 둘째 줄부터 테스트 케이스가 한 줄에 하나씩 주어지며 자연수 N(1 ≤ N ≤ 1,000,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스마다, 한 줄에 하나씩 g(N)를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1
2
10
70
10000
','1
4
87
4065
82256014
','MATH'),
                                                                                                                (3117,'BAEKJOON','https://www.acmicpc.net/problem/17427',17427,'약수의 합 2','0.5초(추가시간없음)','512 MB',9,'<p>두 자연수 A와 B가 있을 때, A = BC를 만족하는 자연수 C를 A의 약수라고 한다. 예를 들어, 2의 약수는 1, 2가 있고, 24의 약수는 1, 2, 3, 4, 6, 8, 12, 24가 있다. 자연수 A의 약수의 합은 A의 모든 약수를 더한 값이고, f(A)로 표현한다. x보다 작거나 같은 모든 자연수 y의 f(y)값을 더한 값은 g(x)로 표현한다.</p>

<p>자연수 N이 주어졌을 때, g(N)을 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수 N(1 ≤ N ≤ 1,000,000)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 g(N)를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','1
','MATH'),
                                                                                                                (3129,'BAEKJOON','https://www.acmicpc.net/problem/17428',17428,'K번째 괄호 문자열','0.25초(추가시간없음)','512 MB',16,'<p>괄호 문자열은 다음과 같이 정의한다.</p>

<ul>
	<li>빈 문자열은 괄호 문자열이다.</li>
	<li>S가 괄호 문자열일 때, (S)도 괄호 문자열이다.</li>
	<li>S와 T가 괄호 문자열이라면, ST도 괄호 문자열이다.</li>
	<li>모든 괄호 문자열은 위의 3개 규칙으로만 만들 수 있다.</li>
</ul>

<p>길이가 N인 괄호 문자열 중에 사전순으로 K번째인 문자열을 출력하는 프로그램을 작성하시오.&nbsp;사전순으로 가장 앞서는 괄호 문자열은 0번째이다. ‘(‘가 ‘)’보다 사전순으로 앞선다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수 N과 K가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 K번째 괄호 문자열을 출력한다. K번째 괄호 문자열이 없는 경우에는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 0
','(())
','MATH'),
                                                                                                                (3118,'BAEKJOON','https://www.acmicpc.net/problem/17431',17431,'게임','1.5초','256 MB',17,'<p>철수는 혼자서 자연수 게임을 하고 있다. 자연수 게임을 하려면 파란 종이 한 장과 빨간 종이 한 장이 필요하다. 가장 처음에&nbsp;두 종이에는 모두 1이 적혀있다.</p>

<p>게임은 두 종이 적힌 수의 합을 구하고, 그 값을 하나의 종이에 바꿔 적는 방식으로 진행된다. 이 과정 한 번을 "덧셈"이라고 부른다. "덧셈"을 반복해서 두 종이 중 하나에 철수가 원하는 수 x가 적히면 게임이 종료된다.</p>

<p>1보다 큰 정수 x에 대해서 게임을 할 때 계속 같은 색의 종이만 고른다면, 항상 x-1번의 덧셈 후에 게임이 끝난다. 철수는 x를 만드는 덧셈의 최소 횟수가 궁금해졌다. x가 주어졌을 때, 게임이 종료되는 덧셈의 최소 횟수를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 둘째 줄부터 T개의 줄에 x가 한 줄에 하나씩 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스마다 x를 만들기 위한 방법 중 덧셈 횟수가 최소인 것을 한 줄에 하나씩 출력한다.</p>

<p>x를 만드는 최소 덧셈 횟수가 M번인 경우에는 길이가 M인 문자열을 출력해야 하고, 파란 종이를 고른 것은 B, 빨간 종이를 고른 것은 R이다. 최소 덧셈 횟수를 만드는 방법이 여러가지인 경우에는 아무거나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>x = 5인 경우 아래와 같이 다양한 방법으로 5를 만들 수 있다. B는 파란 종이, R은 빨간 종이를 의미하고, 알파벳의 뒤에 적힌 수는 해당 종이에 적힌 수이다.</p>

<ul>
	<li>(B1, R1)&nbsp;→ B를 선택&nbsp;→ (B2, R1)&nbsp;→ R을 선택&nbsp;→ (B2, R3)&nbsp;→ B를 선택&nbsp;→ (B5, R3)&nbsp;→ 종료 (덧셈 3번)</li>
	<li>(B1, R1)&nbsp;→ B를 선택&nbsp;→ (B2, R1)&nbsp;→ B를 선택&nbsp;→ (B3, R1)&nbsp;→ B를 선택&nbsp;→ (B4, R1)&nbsp;→ B를 선택 → (B5, R1) → 종료 (덧셈 4번)</li>
</ul>

				</div>
				</div>','4
2
3
4
5
','B
RB
RRR
RBR
','MATH'),
                                                                                                                (3093,'BAEKJOON','https://www.acmicpc.net/problem/17433',17433,'신비로운 수','0.25초','256 MB',11,'<p>0이 아닌 정수 N개가&nbsp;주어졌을 때, 0이 아닌 정수 M이 다음 성질을 만족하면 M은 N개의 정수에 대해 신비로운 수라고 한다.</p>

<ul>
	<li>N개의 정수를 M으로 나눈 나머지가 모두 같다.</li>
</ul>

<p>임의의 N개의 정수에 대해 신비로운 수는 적어도 하나 이상 존재한다. 예를 들어, 1은 N개의 정수와 상관없이 항상 신비로운 수이다.</p>

<p>N개의 수가 주어졌을 때, N개의 정수에 대해 신비로운 수 중에서 가장 큰 수를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 두 줄로 이루어져 있고, 첫째 줄에 N, 둘째 줄에 N개의 정수가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스마다 N개의 정수에 대한 가장 큰 신비로운 수를 출력한다. 만약 신비로운 수가 무한대로 발산하는 경우 "<code>INFINITY</code>"를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>임의의 정수 p를 0이 아닌 임의의 정수 q로 나눈 나머지는 0 ≤ p&nbsp;- a×q&nbsp;< q를 만족하는 유일한 정수 a에 따라서 정해진다. 이때 나머지는 p&nbsp;- a×q이다.</p>

<p>예를 들어, p&nbsp;= 7, q&nbsp;= 3인 경우 나머지는 1, p&nbsp;= -7, q&nbsp;= 3인 경우 나머지는 2이다.</p>

				</div>
				</div>','4
5
2 4 6 8 10
5
162 72 54 63 57
5
-20 -30 -50 80 75
4
5 5 5 5
','2
3
5
INFINITY
','MATH'),
                                                                                                                (3119,'BAEKJOON','https://www.acmicpc.net/problem/17436',17436,'소수의 배수','0.25초(추가시간없음)','512 MB',13,'<p>N개의 소수와 자연수 M이 주어진다. M 이하의 자연수 중에서 N개의 소수 중 적어도 하나로 나누어 떨어지는 수의 개수를 세어보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(1 ≤ N ≤ 10)과 M(1 ≤ M ≤ 10<sup>12</sup>)이 주어진다. 둘째 줄에는 N개의 소수가 주어진다. 입력으로 주어지는 소수는 100보다 작거나 같으며, 같은 소수가 두 번 이상 주어지지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 M 이하의 자연수 중에서 N개의 소수 중 적어도 하나로 나누어 떨어지는 수의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 100
3
','33
','MATH'),
                                                                                                                (3120,'BAEKJOON','https://www.acmicpc.net/problem/17438',17438,'전생했더니 슬라임 연구자가 아니었던 건에 대하여','1초(추가시간없음)','1024 MB',24,'<p>이세계로 떨어져 슬라임 연구를 하던 ntopia를 기억하는가? 그는 슬라임 연구를 성공적으로 끝마치고 지구로 돌아갈 수 있게 되었다. 하지만 ntopia의 직업은 사실 슬라임 연구자가 아니었다. 그는 슬라임을 지구로 몰래 들여가 비싼 값에 팔 속셈으로 슬라임 연구자로 위장하고 이세계에 들어온 슬라임 밀수업자였다!</p>

<p>이세계의 슬라임은 빨간색, 파란색, 노란색의 세 가지 종류가 있다. 이들은 서로 다른 색의 두 슬라임이 합쳐지면 나머지 색의 슬라임 두 마리로 분열하는 성질을 가지고 있다. 예를 들어 빨간색 슬라임과 파란색 슬라임이 합쳐지면 노란색 슬라임 두 마리가 된다. 그러나 같은 색의 슬라임은 서로 합쳐질 수 없다.</p>

<p style="margin-top: 15px; margin-bottom: 15px;"><img alt="귀여운 슬라임" src="https://upload.acmicpc.net/7acea946-41f1-4027-b970-80aeb2b32950/-/preview/" style="display: block; margin-left: auto; margin-right: auto; width: 333.333px; max-width: 400px; height: 111.667px;"></p>

<p>ntopia는 격자 모양으로 칸이 나누어진 상자에 한 칸에 한 마리씩 슬라임을 잡아넣었다. ntopia의 의도를 눈치챈 슬라임들은 가치를 떨어뜨리기 위해 서로 합체와 분열을 반복해서 모두 같은 색이 되려고 한다. 그러나 슬라임들은 먼 거리를 점프할 수 없기 때문에 상하좌우로 인접한 칸에 있는 슬라임과만 합쳐질 수 있으며, 분열된 두 슬라임은 다시 원래 각자의 위치로 떨어진다. 게다가 ntopia는 곧 상자를 들고 지구로 출발할 예정이기 때문에 슬라임들에게는 최대 100만 번의 합체를 할 시간밖에 남아 있지 않다.</p>

<p>슬라임들의 배치가 주어질 때 슬라임들이 목표를 달성할 수 있을지 확인해 보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 상자의 세로 방향의 칸의 개수와 가로 방향의 칸의 개수를 의미하는 정수 <span style="font-style: italic;">N</span>과 <span style="font-style: italic;">M</span>(1 ≤ <span style="font-style: italic;">N</span>, <span style="font-style: italic;">M</span> ≤ 200)이 주어진다.</p>

<p>다음 <span style="font-style: italic;">N</span>개의 줄에 걸쳐 각 줄에 슬라임들의 배치를 의미하는 <span style="font-style: italic;">M</span>글자의 문자열이 하나씩 주어진다. 문자열은 문자 <code>R</code>, <code>B</code>, <code>Y</code>로만 이루어져 있으며, 각각 빨간색, 파란색, 노란색 슬라임을 의미한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>슬라임들이 목표를 달성할 수 있다면 첫 줄에 필요한 합체 횟수를 의미하는 정수 <span style="font-style: italic;">K</span>(0 ≤ <span style="font-style: italic;">K</span> ≤ 1,000,000)를 출력한다.</p>

<p>다음 <span style="font-style: italic;">K</span>줄에 걸쳐 각 줄에 합쳐지는 두 슬라임의 위치를 나타내는 네 개의 정수 <span style="font-style: italic;">x</span><sub>1</sub>, <span style="font-style: italic;">y</span><sub>1</sub>, <span style="font-style: italic;">x</span><sub>2</sub>, <span style="font-style: italic;">y</span><sub>2</sub>(1 ≤ <span style="font-style: italic;">x</span><sub>1</sub>, <span style="font-style: italic;">x</span><sub>2</sub> ≤ <span style="font-style: italic;">N</span>, 1 ≤ <span style="font-style: italic;">y</span><sub>1</sub>, <span style="font-style: italic;">y</span><sub>2</sub> ≤ <span style="font-style: italic;">M</span>)를 공백으로 구분하여 출력한다. 이는 <span style="font-style: italic;">x</span><sub>1</sub>행 <span style="font-style: italic;">y</span><sub>1</sub>열에 있는 슬라임과 <span style="font-style: italic;">x</span><sub>2</sub>행 <span style="font-style: italic;">y</span><sub>2</sub>열에 있는 슬라임이 합쳐짐을 의미한다.</p>

<p>슬라임들이 목표를 달성할 수 없다면 첫 줄에 <code>-1</code>을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 2
RB
BY
','4
1 1 1 2
1 1 2 1
1 1 1 2
2 1 2 2
','MATH'),
                                                                                                                (3121,'BAEKJOON','https://www.acmicpc.net/problem/17440',17440,'코포빵 토너먼트','5초','1024 MB',20,'<p>전 세계 초 인싸 PS 동아리 SNUPS는 매년 전 세계의 Codeforces 랭커들이 모여들어 코포빵 대결을 하며 자신들의 실력을 뽐내는 <strong>코포빵 토너먼트</strong> 대회를 개최한다.</p>

<p>코포빵 토너먼트를 개최하려면 일단 Codeforces 레이팅의 구간 [<em>A</em>, <em>B</em>]를 정해야 하는데, 그러면 레이팅이 그 구간에 속하고 모두 서로 다른 레이팅을 가진 <em>B</em>-<em>A</em>+1명의 사람을 선발해 대회를 진행하게 된다. 그러면 이제 [<em>A</em>, <em>B</em>] 구간에 해당하는 코포빵 토너먼트의 진행 과정을 살펴보자.</p>

<p>우선 <em>B</em>-<em>A</em>+1명의 참가자를 임의의 순서를 정해 한 줄로 세운다. (모든 가능한 순서가 선택될 확률이 동일하다.) 그리고 줄에 1명이 남을 때까지 다음의 과정을 반복한다:</p>

<ul>
	<li>줄의 앞에서부터 두 명씩 짝지은 뒤, 동시에 코포빵 대결을 한다.</li>
	<li>각 대결에서 진 사람(들)이 줄에서 빠진다.</li>
	<li>단, 줄에 홀수 명이 서 있었으면, 마지막 사람은 경기에 참여하지 않고 줄에 남아 있는다.</li>
</ul>

<p>코포빵 대결의 결과는 오직 두 선수의 Codeforces 레이팅에 의해서만 결정된다. 즉, 레이팅이 서로 다른 두 사람끼리 코포빵 대결을 하면 무조건 레이팅이 큰 사람이 이긴다.</p>

<p>동현이는 올해로 어느덧 <em>N</em>+1회를 맞은 코포빵 토너먼트에서 기록자를 맡게 되었다. 기록자는 매 대결이 이루어질 때마다 승자의 Codeforces 레이팅을 대진표에 적는 아주 중요한 역할을 맡는다. 기록자가 적게 되는 <strong>수</strong>의 개수는 항상 <em>B</em>-<em>A</em>개로 일정함을 알 수 있지만, 적게 되는 <strong>숫자</strong>의 개수는 처음에 참가자들이 어떤 순서로 줄을 서느냐에 따라 달라질 수 있다.</p>

<p>동현이는 예전 기록을 찾아보던 중, 1회부터 <em>N</em>회 대회까지에 해당하는 Codeforces 레이팅 구간이 모두 적힌 종이를 발견했다. 이 종이를 읽어 보던 동현이는 1회부터 <em>N</em>회까지의 각 대회에 대해, 그때의 기록자가 몇 개의 <strong>숫자</strong>를 적었을지가 궁금해졌다. 아쉽게도 전체 대진표가 남아있지 않아서 정확히는 알 수 없지만, 참가자들을 <strong>모든 가능한 순서가 선택될 확률이 동일하도록 임의의 순서로 세웠다</strong>고 할 때 적었을 <strong>숫자 개수의 기댓값</strong>은 구할 수 있을 것이다.</p>

<p>동현이의 궁금증을 해결해 주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 지금까지 열렸던 대회의 수 <em>N</em>이 주어진다. (1 ≤ <em>N</em> ≤ 100,000)</p>

<p>다음 <em>N</em>개의 줄에 걸쳐 <em>i</em>회 대회에 해당하는 참가자 Codeforces 레이팅 구간을 나타내는 두 정수 <em>A<sub>i</sub></em>, <em>B<sub>i</sub></em>가 주어진다. (1 ≤&nbsp;<em>A<sub>i</sub></em>&nbsp;≤&nbsp;<em>B<sub>i</sub></em>&nbsp;≤&nbsp;9,999,999)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p><em>i</em>회 대회에서 참가자들을 모든 가능한 순서가 선택될 확률이 동일하도록 임의의 순서로 세웠다고 할 때, 그 대회의 기록자가 적었을 숫자 개수의 기댓값은&nbsp; <span style="display: inline-block; position: relative; vertical-align: middle; letter-spacing: 0.001em; text-align: center;"><span style="display: block; padding: 0.1em;"><span style="font-style: italic;">P</span><sub><span style="font-style: italic;">i</span></sub></span> <span style="display: none; padding: 0.1em;">/</span> <span style="display: block; padding: 0.1em; border-top: thin solid black;"><span style="font-style: italic;">Q</span><sub><span style="font-style: italic;">i</span></sub></span></span> (<em>P<sub>i</sub></em>, <em>Q<sub>i</sub></em>는 서로소인 0 이상의&nbsp;정수,&nbsp;<em>Q<sub>i</sub></em>는 10<sup>9</sup>+7로 나누어떨어지지 않음) 꼴로 유일하게 표현된다.</p>

<p>또한, 10<sup>9</sup>+7로 나누어떨어지지 않는 임의의 정수 <em>X</em>에 대해, <em>XY</em> ≡ 1 (mod 10<sup>9</sup>+7) 이고 1 ≤&nbsp;<em>Y</em> < 10<sup>9</sup>+7인 정수 <em>Y</em>가 유일하게 존재한다. 그런 <em>Y</em>를 <em>X</em><sup>-1</sup>이라 하자.</p>

<p><em>N</em>개의 줄에 걸쳐 <em>i</em>번째 줄에는 <em>i</em>회 대회에 대한 기댓값을 나타내는 정수 <em>P<sub>i</sub></em>, <em>Q<sub>i</sub></em>에 대해 <em>P<sub>i</sub></em><em>Q<sub>i</sub></em><sup>-1</sup>을 10<sup>9</sup>+7로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>1회 대회에서는 모든 참가자의 레이팅이 한 자리 수였으므로 무조건 4개의 숫자를 적었을 것이다.</p>

<p>2회 대회에서는 레이팅이 10인 사람이 부전승했던 경우와 그렇지 않았던 경우로 나누어 생각해보면 기댓값이 <span style="display: inline-block; position: relative; vertical-align: middle; letter-spacing: 0.001em; text-align: center;"><span style="display: block; padding: 0.1em;">1</span><span style="display: none; padding: 0.1em;">/</span><span style="display: block; padding: 0.1em; border-top: thin solid black;">3</span></span> × 3+<span style="display: inline-block; position: relative; vertical-align: middle; letter-spacing: 0.001em; text-align: center;"><span style="display: block; padding: 0.1em;">2</span><span style="display: none; padding: 0.1em;">/</span><span style="display: block; padding: 0.1em; border-top: thin solid black;">3</span></span> × 4 = <span style="display: inline-block; position: relative; vertical-align: middle; letter-spacing: 0.001em; text-align: center;"><span style="display: block; padding: 0.1em;">11</span><span style="display: none; padding: 0.1em;">/</span><span style="display: block; padding: 0.1em; border-top: thin solid black;">3</span></span> 임을 알 수 있다.</p>

				</div>
				</div>','3
2 6
8 10
12 34567
','4
666666675
382409435
','MATH'),
                                                                                                                (3122,'BAEKJOON','https://www.acmicpc.net/problem/17441',17441,'파리채 만들기','1초(추가시간없음)','1024 MB',24,'<p>실버는 다각형 모양의 방에서 SNUPC 문제를 만들고 있었다. 문제 아이디어가 생각이 안 나서 문득 고개를 위로 들었는데, 그 순간 천장에 모기 두 마리가 붙어있는 걸 발견했다! 모기한테 당한 게 많은 실버는 모기와의 사투를 벌였지만, 끝내 잡지 못했다. 그런데 다음 날에도, 또 그다음 날에도 모기 두 마리가 천장에 붙어 있는 것이 아닌가? 실버는 이 모기 두 마리를 잡기 위해 맞춤형 DIY 파리채를 만들기로 했다.</p>

<p>파리채는 원형이며, 모기를 잡기에 완벽한 특수 소재로 이루어져 있어 살짝 닿기만 해도 모기를 바로 죽일 수 있다. 또한, 이 특수 소재는 잘 접히기 때문에 모기가 모서리나 꼭짓점에 있더라도 아무 문제 없이 모기를 잡을 수 있다. 하지만 한 번 천장에 파리채를 휘두르면, 파리채에 맞지 않은 모기는 도망가버리기 때문에, 두 모기를 한 방에 죽일 수 있도록 파리채의 지름은 최소 두 모기 사이의 거리만큼은 되어야 한다. 파리채를 만드는 특수 소재의 단가는 단위 넓이당 <span style="display: inline-block; position: relative; vertical-align: middle; letter-spacing: 0.001em; text-align: center;"><span style="display: block; padding: 0.1em;">4</span><span style="display: none; padding: 0.1em;">/</span><span style="display: block; padding: 0.1em; border-top: thin solid black;"><span style="font-style: italic;">π</span></span></span>이다. 즉, 두 모기 사이의 거리 <span style="font-style: italic;">d</span>에 대해 파리채를 만들기 위해 드는 비용은 <span style="font-style: italic;">d</span><sup>2</sup>이다.</p>

<p>파리채를 만들고 모기를 잡을 생각에 기분이 좋아진 실버는 문제를 만들었다! <strong>모기 두 마리가 천장의 임의의 위치에 있을 때, 파리채를 만들기 위해 드는 비용의 기댓값은 얼마일까?</strong> 단, 각 모기는 다각형(천장) 내의 임의의 점에 균일한 확률로 존재한다. 다시 말해, 다각형 <span style="font-style: italic;">D</span> 내의 임의의 "넓이를 가지는 영역" <span style="font-style: italic;">S</span>에 대해, 모기가 영역 <span style="font-style: italic;">S</span> 안에 위치할 확률은 |<span style="font-style: italic;">S</span>|/|<span style="font-style: italic;">D</span>|(여기서 |<span style="font-style: italic;">A</span>|는 도형 <span style="font-style: italic;">A</span>의 넓이)이다. 또한, 두 모기의 위치는 독립적으로 정해진다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 다각형의 꼭짓점의 수 <span style="font-style: italic;">N</span>이 주어진다. (3 ≤ <span style="font-style: italic;">N</span> ≤ 100,000)</p>

<p>다음 <span style="font-style: italic;">N</span>개의 줄에 걸쳐 한 줄에 하나씩 다각형의 꼭짓점의 <span style="font-style: italic;">x</span>좌표와 <span style="font-style: italic;">y</span>좌표가 공백을 사이에 두고 주어진다. (-10,000 ≤ <span style="font-style: italic;">x</span>, <span style="font-style: italic;">y</span> ≤ 10,000)</p>

<p>다각형의 꼭짓점은 반시계 방향으로 주어지며, 주어진 다각형은 단순다각형임이 보장된다. 즉, 다각형의 모든 선분들은 연속하는 두 선분의 교점을 제외하고는 교차하지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에, 파리채를 만들기 위해 드는 비용의 기댓값을 출력한다. 답과 10<sup>-6</sup> 이하의 절대 또는 상대오차가 있을 경우 정답으로 인정한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
0 0
1 0
1 1
0 1
','0.3333333333333333333333333333
','MATH'),
                                                                                                                (3128,'BAEKJOON','https://www.acmicpc.net/problem/17449',17449,'순위 계산','1초(추가시간없음)','1024 MB',14,'<p>SNUPC(Seoul National University Painting Contest)는 서울대학교 최고의 그림 대회이다. 참가자는 순서대로 한 명씩 심사위원 앞에서 제한된 시간 동안 제시된 단어에 맞는 그림을 그리고, 심사위원이 이를 채점하는 방식으로 대회가 진행된다.</p>

<p>단순히 그림을 잘 그리는지를 평가하는 것이 아니라 그리는 과정에서의 퍼포먼스, 주제어를 창의적으로 해석하는 능력 등 여러 가지 기준으로 채점하기 때문에 결과로 나오는 점수도 매우 복잡하여 그대로 외우기 힘들다. 참가자였던 탐레프는 자신의 정확한 점수를 기억하는 대신 자신이 받은 중간 순위만 기억하기로 했다.</p>

<p>한 명의 평가가 끝나면 지금까지 점수가 매겨진 참가자 중 자신보다 점수가 높은 사람의 수 + 1이 중간 순위가 된다. 즉, 자신보다 점수가 높은 사람이 세 명이라면 4위가 되고, 점수가 더 높은 사람이 없다면 1위가 되는 식이다. 이후 다음 참가자의 점수에 따라 순위가 밀릴 수도 있다.</p>

<p>탐레프는 자신이 받았던 중간 순위와 이후 참가자들이 받았던 순위를 기억하고 있다. 이 정보를 바탕으로 탐레프의 최종 순위가 어떻게 될 수 있는지를 계산하는 프로그램을 작성해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 정수 <span style="font-style: italic;">R</span>이 입력되며, 이는 탐레프가 평가 직후 받은 중간 순위를 의미한다. (1 ≤ <span style="font-style: italic;">R</span> ≤ 200,000)</p>

<p>다음 줄에 정수 <span style="font-style: italic;">N</span>이 입력되며, 이는 탐레프 이후 참가한 사람의 수를 의미한다. (1 ≤ <span style="font-style: italic;">N</span> ≤ 200,000)</p>

<p>이후 공백으로 구분된 <span style="font-style: italic;">N</span>개의 정수가 입력되며, <span style="font-style: italic;">i</span>번째 정수 <span style="font-style: italic;">R</span><sub><span style="font-style: italic;">i</span></sub>는 <span style="font-style: italic;">i</span>번째 참가자의 해당 시점 순위를 의미한다. (1 ≤ <span style="font-style: italic;">R</span><sub><span style="font-style: italic;">i</span></sub> ≤ 200,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>탐레프의 가능한 가장 높은(1등에 가까운) 순위와 가장 낮은 순위를 공백을 사이에 두고 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 예제의 경우, 탐레프의 심사 직후 순위는 3위이지만 이후 2위를 기록한 참가자에게 밀려 4위가 되고, 이후 5위를 기록한 참가자는 탐레프의 순위에 영향을 주지 않는다. 마지막으로 4위를 기록한 참가자가 탐레프와 동점이라면 탐레프의 순위는 그대로 4위가 되고, 탐레프보다 점수가 높다면 탐레프의 순위가 밀려서 5위가 된다.</p>

<p>두 번째 예제의 경우 첫 세 참가자의 순위는 첫 번째 예제와 같다. 이 시점에 가능한 탐레프의 순위는 4위 혹은 5위이다. 그런데 이때 탐레프의 순위가 4위라면 다음 순위는 5위가 될 수 없으므로(공동 4위가 두 명이므로 다음 순위는 최소 6위이다.) 세 번째 참가자의 평가 이후 탐레프의 순위는 5위여야 한다. 최종 순위는 마지막 참가자와 탐레프가 동점이라면 5위, 그렇지 않다면 6위가 된다.</p>

				</div>
				</div>','3
3
2 5 4
','4 5
','MATH'),
                                                                                                                (3097,'BAEKJOON','https://www.acmicpc.net/problem/17450',17450,'과자 사기','1초(추가시간없음)','1024 MB',3,'<p>남서네 집 앞 편의점에는 각각 <code>S</code>, <code>N</code>, <code>U</code>의 이름이 붙은 총 3가지의 과자를 판다. 진열대에는 한 봉지당 가격과 무게가 안내되어 있다. 같은 종류의 과자끼리는 봉지의 무게가 똑같다.</p>

<p>남서는 오늘 과자를 10봉지 사려고 한다. 편의점의 단골인 남서는 할인 쿠폰 하나를 가지고 있는데, 총 구매 금액이 5,000원 이상일 때 500원을 깎아 주는 쿠폰이다. 구매 금액이 5,000원 미만인 경우에는 할인 쿠폰을 쓸 수 없다. 또한 할인을 여러 번 적용할 수는 없다.</p>

<p>남서는 과자를 고를 때 <b>가성비</b>를 중요하게 생각한다. 남서가 생각하는 가성비란, 총 무게를 총 금액으로 나눈 값이다. 남서는 빨리 과자가 먹고 싶기 때문에, 한 종류의 과자만을 10봉지 골라 사 가려고 한다. 또, 다른 물건은 구매하지 않을 생각이다.</p>

<p><b>가성비</b>를 다시 한 번 수학적으로 표현하면 다음과 같다.</p>

<p style="text-align: center;">가성비 = <span style="display: inline-block; position: relative; vertical-align: middle; letter-spacing: 0.001em; text-align: center;"><span style="display: block; padding: 0.1em;">과자 10봉지의 무게의 합</span> <span style="display: none; padding: 0.1em;">/</span> <span style="display: block; padding: 0.1em; border-top: thin solid black;">쿠폰 사용을 고려했을 때 과자 10봉지를 사는 데 필요한 돈</span></span></p>

<p>진열대를 들여다 보던 남서는 신기하게도 세 과자의 가성비가 모두 서로 다르다는 사실을 깨달았다.</p>

<p>남서는 어떤 과자를 사게 될까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 총 3개의 줄로 이루어지며, 각 줄에는 <code>S</code>, <code>N</code>, <code>U</code>의 순서대로 한 봉지의 가격과 무게가 띄어쓰기를 사이에 두고 주어진다.</p>

<p>모든 입력값은 1&nbsp;이상 1,000&nbsp;이하의 정수이다.</p>

<p>세 종류의 과자의 가성비가 서로 다름이 보장된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 가장 가성비가 높은 과자의 이름(<code>S</code> 또는 <code>N</code> 또는 <code>U</code>)을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8 5
6 6
7 5
','N
','MATH'),
                                                                                                                (3096,'BAEKJOON','https://www.acmicpc.net/problem/17451',17451,'평행 우주','1초(추가시간없음)','1024 MB',8,'<p>서기 2XXX년, 지구가 소행성과 충돌할 위기에 처했다! 똑똑한 과학자 키파는 평행 우주를 누비며 지구를 대신할 행성을 찾는 막중한 임무를 맡게 되었다.</p>

<p>우리는 현재 지구(=행성 0)에 있다. 여러 요인을 고려한 결과, 행성 1, 행성 2, …, 행성 (<span style="font-style: italic;">n</span>-1)을 <strong>순서대로</strong> 확인하고 지구(=행성 <span style="font-style: italic;">n</span>)에 돌아오는 것이 비용상 최적임을 알아냈다. 모든 정수 1 ≤ <span style="font-style: italic;">i</span> < <span style="font-style: italic;">n</span>에 대해, 행성 <span style="font-style: italic;">i</span>은 지구가 아니다.</p>

<p>지구에는 "초고속 걷기 기계"라는, 속도를 원하는 만큼 올릴 수 있는 특수한 장치가 있다. 지구를 벗어나면 속도를 떨어뜨릴 수 있을 뿐 높일 수는 없다.</p>

<p>다음 지역에 가기 위해서는 원칙적으로는 필요한 속도를 정확히 맞춰야 하지만, 다행히도 평행 우주는 일정한 간격을 두고 있기 때문에 필요한 속도의 양의 정수 배로도 다음 지역으로 이동할 수 있다. 또한, 충분히 빠른 속도로 이동 중이며, 지구의 대체 행성으로 적합한지 아닌지는 도착한 뒤 바로 알 수 있기 때문에 어떤 행성에서는 도달한 뒤 속도를 유지한 채 다음 행성으로 이동할 수도 있다.</p>

<p>모든 1 ≤ <span style="font-style: italic;">i</span> ≤ <span style="font-style: italic;">n</span>에 대해, 행성 (<span style="font-style: italic;">i</span>-1)에서 행성 <span style="font-style: italic;">i</span>로 이동하는 데 필요한 (최소) 속도 <span style="font-style: italic;">v</span><sub><span style="font-style: italic;">i</span></sub>가 주어진다. 지구에서 올려야 하는 속도를 최소화하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 <span style="font-style: italic;">n</span>(1 ≤ <span style="font-style: italic;">n</span> ≤ 3·10<sup>5</sup>)이 주어진다.</p>

<p>둘째 줄에 <span style="font-style: italic;">n</span>개의 정수 <span style="font-style: italic;">v</span><sub>1</sub>, <span style="font-style: italic;">v</span><sub>2</sub>, …, <span style="font-style: italic;">v</span><sub><span style="font-style: italic;">n</span></sub>이 공백을 사이에 두고 주어진다. 모든 정수 1 ≤ <span style="font-style: italic;">i</span> ≤ <span style="font-style: italic;">n</span>에 대해 1 ≤ <span style="font-style: italic;">v</span><sub><span style="font-style: italic;">i</span></sub> ≤ 10<sup>9</sup>을 만족한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>수 하나를 출력한다. 이 수는 지구에서 올려야 하는 속도의 최솟값이다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>행성 1에 가기 위해 필요한 것보다 세 배의 속도로, 행성 2의 경우 두 배의 속도로 이동하면, 지구에서는 900의 속도만 쌓으면 된다.</p>

				</div>
				</div>','5
300 400 500 400 300
','900
','MATH'),
                                                                                                                (3098,'BAEKJOON','https://www.acmicpc.net/problem/17454',17454,'갓','1초(추가시간없음)','1024 MB',14,'<p>동현이와 현수와 승원이는 오랫동안 문제 풀이 갓(god)의 칭호를 달기 위해 실력을 쌓아 왔다. 어느덧 세 명 모두 갓이라고 불리기에 손색없는 실력이 되었으나, 하늘 아래 갓이 세 명일 수는 없는 법. 단 한 명의 <span style="font-style: italic;">진정한 갓</span>을 어떻게 가릴지 논의하던 세 사람은 결국 이름에 <span style="font-style: italic;">갓</span>을 붙였을 때 가장 잘 어울리는 사람을 진정한 갓으로 삼기로 결정했다.</p>

<p>그러나 어울린다는 것은 주관적이라서 여러 사람의 의견이 필요하다. 따라서 세 사람은 각자 자신의 친구들을 모아 투표를 진행하기로 했다. 이때 자기 자신이 후보에 들어 있으면 불공정한 투표가 될 수 있으므로, 각자 자기 자신은 후보에서 제외하고 투표를 진행했다. 투표가 끝나고 나면 각 사람은 다른 두 사람이 진행한 투표에서 자신이 받은 표를 가져가고, 이렇게 가져간 표가 가장 많은 사람이 진정한 갓이 된다. 만약 가장 많은 표를 받은 사람이 여러 명이라면 투표는 무효가 된다. 세 사람 모두 친구가 많기 때문에 각 투표에는 한 명 이상이 참가했음이 보장된다.</p>

<p style="margin-top: 15px;"><img alt="alt text" src="https://upload.acmicpc.net/6bd3f0f1-4b42-4e31-8239-d426071a7a51/-/preview/" style="display: block; margin-left: auto; margin-right: auto; width: 347.5px; max-width: 500px; height: 111.667px;"></p>

<p style="margin-bottom: 15px; text-align: center;">투표의 예시</p>

<p>오늘은 투표 결과가 공개되는 날이다. 그런데 세 사람은 서로를 견제하기 위해 전체 투표 결과를 내놓지 않고, 각자가 진행한 투표에서 두 후보가 받은 표의 비율만을 공개했다! 공개된 결과만 볼 때 동현이가 진정한 갓이 될 수 있을지 판단해 보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 투표를 진행한 횟수를 의미하는 정수 <span style="font-style: italic;">T</span>(1 ≤ <span style="font-style: italic;">T</span> ≤ 100,000)가 주어진다.</p>

<p>다음 <span style="font-style: italic;">T</span>개의 줄에 걸쳐 각 줄에 투표의 결과를 의미하는 6개의 정수 <span style="font-style: italic;">DH</span>, <span style="font-style: italic;">DS</span>, <span style="font-style: italic;">HD</span>, <span style="font-style: italic;">HS</span>, <span style="font-style: italic;">SD</span>, <span style="font-style: italic;">SH</span>(1 ≤ <span style="font-style: italic;">DH</span>, <span style="font-style: italic;">DS</span>, <span style="font-style: italic;">HD</span>, <span style="font-style: italic;">HS</span>, <span style="font-style: italic;">SD</span>, <span style="font-style: italic;">SH</span> ≤ 1,000)가 공백을 사이에 두고 주어진다.</p>

<ul>
	<li><span style="font-style: italic;">DH</span>, <span style="font-style: italic;">DS</span>는 동현이가 진행한 투표에서 <span style="font-style: italic;">갓현수</span>와 <span style="font-style: italic;">갓승원</span>이 받은 표의 비율을 의미한다. 두 수는 서로소임이 보장된다.</li>
	<li><span style="font-style: italic;">HD</span>, <span style="font-style: italic;">HS</span>는 현수가 진행한 투표에서 <span style="font-style: italic;">갓동현</span>과 <span style="font-style: italic;">갓승원</span>이 받은 표의 비율을 의미한다. 두 수는 서로소임이 보장된다.</li>
	<li><span style="font-style: italic;">SD</span>, <span style="font-style: italic;">SH</span>는 승원이가 진행한 투표에서 <span style="font-style: italic;">갓동현</span>과 <span style="font-style: italic;">갓현수</span>가 받은 표의 비율을 의미한다. 두 수는 서로소임이 보장된다.</li>
</ul>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p><span style="font-style: italic;">T</span>개의 줄에 걸쳐 각 줄에 각 투표에서 동현이가 진정한 갓이 될 수 있다면 <code>GOD</code>을, 불가능하다면 <code>KDH</code>를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>세 번째 예시에서는 다음과 같은 결과가 나오면 동현이가 진정한 갓이 될 수 있다.</p>

<p style="margin-top: 15px; margin-bottom: 15px;"><img alt="alt text" src="https://upload.acmicpc.net/50e9d2a5-6c95-4909-abed-ce2271ae6741/-/preview/" style="display: block; margin-left: auto; margin-right: auto; width: 100%; max-width: 400px;"></p>

				</div>
				</div>','3
3 2 3 2 2 1
2 3 1 2 1 3
1 1 2 3 1 2
','GOD
KDH
GOD
','MATH'),
                                                                                                                (2981,'BAEKJOON','https://www.acmicpc.net/problem/17471',17471,'게리맨더링','0.5초(추가시간없음)','512 MB',12,'<p>백준시의 시장 최백준은 지난 몇 년간 게리맨더링을 통해서 자신의 당에게 유리하게 선거구를 획정했다. 견제할 권력이 없어진 최백준은&nbsp;권력을 매우 부당하게 행사했고, 심지어는 시의 이름도 백준시로 변경했다. 이번 선거에서는 최대한 공평하게 선거구를 획정하려고 한다.</p>

<p>백준시는 N개의 구역으로 나누어져 있고, 구역은 1번부터 N번까지 번호가 매겨져 있다. 구역을 두 개의 선거구로 나눠야 하고,&nbsp;각 구역은 두 선거구 중 하나에&nbsp;포함되어야 한다.&nbsp;선거구는 구역을 적어도 하나 포함해야 하고, 한 선거구에 포함되어 있는 구역은 모두 연결되어 있어야 한다. 구역 A에서 인접한 구역을 통해서 구역 B로 갈 수 있을 때, 두 구역은 연결되어 있다고 한다. 중간에 통하는 인접한 구역은 0개 이상이어야 하고, 모두 같은 선거구에 포함된 구역이어야 한다.</p>

<p>아래 그림은 6개의 구역이 있는 것이고, 인접한 구역은 선으로 연결되어 있다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/08218f4c-2653-4861-a4c1-e7ce808f3a85/-/preview/" style="width: 220px; height: 195px;"></p>

<p>아래는 백준시를 두 선거구로 나눈 4가지 방법이며, 가능한 방법과 불가능한 방법에 대한 예시이다.</p>

<table class="table table-bordered" style="width: 100%;">
	<tbody>
		<tr>
			<td style="width: 25%; text-align: center;"><img alt="" src="https://upload.acmicpc.net/b82fcf21-6f4c-4797-bda6-215e14099d19/-/preview/" style="width: 220px; height: 195px;"></td>
			<td style="width: 25%; text-align: center;"><img alt="" src="https://upload.acmicpc.net/32947e26-4ec4-4b20-99f1-106d8386683d/-/preview/" style="width: 220px; height: 195px;"></td>
			<td style="width: 25%; text-align: center;"><img alt="" src="https://upload.acmicpc.net/f5dd6143-c013-46d3-ba4c-dadc48bdf5bc/-/preview/" style="width: 220px; height: 195px;"></td>
			<td style="width: 25%; text-align: center;"><img alt="" src="https://upload.acmicpc.net/548b1153-84de-4b85-9697-2561b019a02b/-/preview/" style="width: 220px; height: 195px;"></td>
		</tr>
		<tr>
			<td style="width: 25%; text-align: center;">
			<p>가능한 방법</p>

			<p>[1, 3, 4]와 [2, 5, 6]으로 나누어져 있다.</p>
			</td>
			<td style="width: 25%; text-align: center;">
			<p>가능한 방법</p>

			<p>[1, 2, 3, 4, 6]과 [5]로 나누어져 있다.</p>
			</td>
			<td style="width: 25%; text-align: center;">
			<p>불가능한 방법</p>

			<p>[1, 2, 3, 4]와 [5, 6]으로 나누어져 있는데, 5와 6이 연결되어 있지 않다.</p>
			</td>
			<td style="width: 25%; text-align: center;">
			<p>불가능한 방법</p>

			<p>각 선거구는 적어도 하나의 구역을 포함해야 한다.</p>
			</td>
		</tr>
	</tbody>
</table>

<p>공평하게 선거구를 나누기 위해 두 선거구에 포함된 인구의 차이를 최소로 하려고 한다. 백준시의 정보가 주어졌을 때, 인구 차이의 최솟값을 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 구역의 개수 N이 주어진다. 둘째 줄에 구역의 인구가 1번 구역부터 N번 구역까지 순서대로 주어진다. 인구는 공백으로 구분되어져 있다.</p>

<p>셋째 줄부터 N개의 줄에 각 구역과 인접한 구역의 정보가 주어진다. 각 정보의 첫 번째 정수는 그 구역과 인접한 구역의 수이고, 이후 인접한 구역의 번호가 주어진다. 모든 값은 정수로 구분되어져 있다.</p>

<p>구역 A가 구역 B와 인접하면 구역 B도 구역 A와 인접하다. 인접한 구역이 없을 수도 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 백준시를 두 선거구로 나누었을 때, 두 선거구의 인구 차이의 최솟값을 출력한다. 두 선거구로 나눌 수 없는 경우에는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>게리맨더링은 특정 후보자나 정당에 유리하게 선거구를 획정하는 것을 의미한다.</p>

				</div>
				</div>','6
5 2 3 4 1 2
2 2 4
4 1 3 6 5
2 4 2
2 1 3
1 2
1 2
','1
','MATH'),
                                                                                                                (2983,'BAEKJOON','https://www.acmicpc.net/problem/17496',17496,'스타후르츠','1초','256 MB',3,'<p>진수는 회사 생활에 지쳐 회사를 그만두고 귀농을 하여 작물들을 키우며 생활하고 있습니다. 진수는 작물 중에서도 스타후르츠 라는 작물을 제일 좋아합니다.</p>

<p>스타후르츠 씨앗을 심으면 자라는데 <em>T</em>일이 걸립니다. <em>i</em>일에 스타후르츠 씨앗을 심으면 <em>i+T</em>일에 수확할 수 있고 수확한 날에도 같은 칸에 씨앗을 또 심을 수 있습니다.</p>

<p>진수에게는 스타후르츠 씨앗을 심을 수 있는 빈 칸이 <em>C</em>개 있고 한 칸에 한 개의 스타후르츠를 심을 수 있습니다.</p>

<p>오늘은 여름 1일이고 <em>N</em>일까지 여름이 지속됩니다. 스타후르츠는 여름이 아닌 날에는 바로 시들어버리므로 <em>N</em>일이 지나면 더 이상 수확할 수 없습니다.</p>

<p>진수는 스타후르츠 한 개를 판매하면 <em>P</em>원을 벌 수 있습니다. 진수는 올해 여름 동안 얼마나 많은 돈을 벌 수 있을까요?</p>

<p>진수는 하루에 일을 원하는 만큼 할 수 있고, 씨앗도 충분히 가지고 있다고 가정합니다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 여름의 일 수 <em>N</em> (2 ≤ <em>N</em> ≤ 90) 과 스타후르츠가 자라는데 걸리는 일 수 <em>T</em> (1 ≤ <em>T</em> ≤ <em>N-1</em>) 와 스타후르츠를 심을 수 있는 칸의 수 <em>C</em> (1 ≤ <em>C</em> ≤ 300) 와 스타후르츠 개당 가격 정수&nbsp;<em>P</em> (1 ≤ <em>P</em> ≤ 1,000) 가 주어집니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 진수가 여름 동안 스타후르츠를 팔아 벌 수 있는 수익을 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7 3 2 750
','3000
','MATH'),
                                                                                                                (3015,'BAEKJOON','https://www.acmicpc.net/problem/17497',17497,'계산기','1초','256 MB',14,'<p>승주는 과제로 계산기를 만들고 있습니다.</p>

<p>계산기는 아직 미완성이므로 기능이 많지 않습니다.</p>

<p>계산기는 하나의 정수 <em>X</em>를 가지며, 총 4개의 버튼이 있습니다. 버튼의 기능은 아래와 같습니다.</p>

<ul>
	<li><code>[+]</code> : <em>X</em>에 2를 더합니다.</li>
	<li><code>[-]</code> : <em>X</em>에서 2를 뺍니다.</li>
	<li><code>[*]</code> : <em>X</em>에 2를 곱합니다.</li>
	<li><code>[/]</code> : <em>X</em>를 2로 나눕니다. (나머지는 버립니다.)</li>
</ul>

<p>버튼을 눌렀을 때 <em>X</em>가 음수가 되거나 2<sup>63</sup>-1 을&nbsp;초과하는 경우 계산기가 폭발합니다.</p>

<p>승주는 계산기가 잘 작동하는지 테스트하고 싶습니다.</p>

<p>초기에 <em>X</em>가 0일 때, 정수&nbsp;<em>N</em>이 주어지면 버튼을 잘 눌러 계산기를 폭발시키지 않고 <em>X</em>가 <em>N</em>이 되도록 해주세요.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 정수&nbsp;<em>N</em> (1 ≤ <em>N</em> ≤ 10<sup>13</sup>) 이 주어집니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 버튼을 누른 횟수 <em>K</em> (0 ≤ <em>K</em> ≤ 99) 를 출력합니다. 누른 횟수를 최소화 하지 않아도 됩니다. 단, 누른 횟수가 99번을 넘으면 안됩니다.</p>

<p>만약 99번 안에 <em>N</em>을 만드는 방법이 존재하지 않는다면 첫 번째 줄에 "<code>-1</code>" 하나만 출력하고 더 이상 아무것도 출력하지 않아야 합니다.</p>

<p>두 번째 줄에는 버튼들을 누른 순서대로 공백을 사이에 두고 출력합니다. 버튼은 "<code>[+]</code>", "<code>[-]</code>", "<code>[*]</code>", "<code>[/]</code>" 중 하나이어야 합니다. 각 버튼의 기능은 지문에&nbsp;서술되어 있습니다.</p>

<p>방법이 여러 가지인 경우 그 중 하나만 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>X가 계산 과정에서 32bit 정수형의 범위를 초과할 수 있음에 주의하세요.</p>

<p>C/C++의 경우 long long 타입, Java의 경우 long 타입을 사용하는 것을 권장합니다.</p>

				</div>
				</div>','14
','5
[+] [*] [*] [*] [-]
','MATH'),
                                                                                                                (2984,'BAEKJOON','https://www.acmicpc.net/problem/17499',17499,'수열과 시프트 쿼리','1초','256 MB',8,'<p>백준 온라인 저지를 여행하다 보면 하나의 수열이 주어지고 여기에 여러 가지 연산을 하는 문제들을 만나볼 수 있습니다.</p>

<p>진수는 백준 온라인 저지에서 문제를 풀다 다음과 같은 문제를 찾았습니다.</p>

<p>길이가 <em>N</em>인 정수 수열 [<em>a<sub>1</sub></em>, <em>a<sub>2</sub></em>, ..., <em>a<sub>N</sub></em>] 이 주어진다. 다음과 같은 연산들을 수행한 후 수열을 출력하는 프로그램을 작성하시오.</p>

<ul>
	<li><code>1 i x</code> : <em>a<sub>i</sub></em>에 정수&nbsp;<em>x</em>만큼 더한다.</li>
	<li><code>2 s</code> : 수열을 오른쪽으로 <em>s</em>칸 시프트한다.</li>
	<li><code>3 s</code> : 수열을 왼쪽으로 <em>s</em>칸 시프트한다.</li>
</ul>

<p>수열을 오른쪽으로 한 칸 시프트하면 수열 [<em>a<sub>1</sub></em>, <em>a<sub>2</sub></em>, …, <em>a<sub>N-1</sub></em>, <em>a<sub>N</sub></em>] 은 [<em>a<sub>N</sub></em>, <em>a<sub>1</sub></em>, <em>a<sub>2</sub></em>, …, <em>a<sub>N-1</sub></em>] 이 되고</p>

<p>수열을 왼쪽으로 한 칸 시프트하면 수열 [<em>a<sub>1</sub></em>, <em>a<sub>2</sub></em>, …, <em>a<sub>N-1</sub></em>, <em>a<sub>N</sub></em>] 은 [<em>a<sub>2</sub></em>, …, <em>a<sub>N-1</sub></em>, <em>a<sub>N</sub></em>, <em>a<sub>1</sub></em>] 이 된다.</p>

<p>진수는 빠르게 코딩하여 제출하였는데 <span style="color:#e74c3c;">시간 초과</span> 판정을 받았습니다.</p>

<p>진수가 작성한 코드는 시프트 연산을 수행할 때마다 반복문이 N번 실행되어 너무 느리기 때문입니다.</p>

<p>진수는 이 문제를 풀어 <span style="color:#009F6B;"><strong>맞았습니다!!</strong></span> 를 띄워줄 누군가를 기다리고 있습니다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 수열의 길이 <em>N</em> (2 ≤ <em>N</em> ≤ 200,000) 과 연산의 개수 <em>Q</em> (1 ≤ <em>Q</em> ≤ 200,000) 가 주어집니다.</p>

<p>두 번째 줄에는 정수&nbsp;<em>a<sub>1</sub></em>, <em>a<sub>2</sub></em>, ..., <em>a<sub>N</sub></em> (-10,000 ≤ <em>a<sub>i</sub></em> ≤ 10,000) 이 주어집니다.</p>

<p>다음 <em>Q</em>개의 줄에는 각 줄 마다 연산이 주어집니다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 <em>Q</em>개의 연산을 차례대로 수행한 후&nbsp;<em>a<sub>1</sub></em>, <em>a<sub>2</sub></em>, …, <em>a<sub>N</sub></em>&nbsp;을 공백을 사이에 두고 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 4
1 2 3 4 5
1 1 4
2 3
1 2 2
3 1
','6 5 5 2 3
','MATH'),
                                                                                                                (2985,'BAEKJOON','https://www.acmicpc.net/problem/17504',17504,'제리와 톰 2','1초','256 MB',6,'<p>톰은 마트에서 치즈 1kg 을 사서 집으로 돌아왔습니다.</p>

<p>그런데 톰이 한눈을 판 사이 제리가 와서&nbsp;$ \cfrac{1}{a_1 + \cfrac{1}{a_2 + \cfrac{1}{\ddots + \cfrac{1}{a_N}}}} $&nbsp;kg 만큼 훔쳐갔습니다.</p>

<p>제리가 치즈를 훔쳐 간 후 톰이 가지고 있는 치즈의 무게는 얼마인가요?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 정수 <em>N</em> (2 ≤ <em>N</em> ≤ 15) 가 주어집니다.</p>

<p>두 번째 줄에는 정수 <em>a<sub>1</sub></em>, <em>a<sub>2</sub></em>, ..., <em>a<sub>N</sub></em> (1 ≤ <em>a<sub>i</sub></em> ≤ 9) 이 주어집니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>정답을 기약분수로 표현했을 때 <em>P</em>/<em>Q</em> kg 이라면 첫 번째 줄에 <em>P</em>와 <em>Q</em>를 공백을 사이에 두고 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>정답이 32bit 정수형의 범위를 초과할 수 있음에 주의하세요.&nbsp;</p>

<p>C/C++의 경우 long long 타입, Java의 경우 long 타입을 사용하는 것을 권장합니다.</p>

				</div>
				</div>','4
2 7 1 8
','80 151
','MATH'),
                                                                                                                (2999,'BAEKJOON','https://www.acmicpc.net/problem/17633',17633,'제곱수의 합 (More Huge)','0.5초(추가시간없음)','512 MB',23,'<p>라그랑주는 1770년에 모든 자연수는 넷 혹은 그 이하의 제곱수의 합으로 표현할 수 있다고 증명하였다. 어떤 자연수는 복수의 방법으로 표현된다. 예를 들면, 26은 5<sup>2</sup>과 1<sup>2</sup>의 합이다; 또한 4<sup>2</sup> + 3<sup>2</sup>&nbsp;+ 1<sup>2</sup>으로 표현할 수도 있다. 역사적으로 암산의 명수들에게 공통적으로 주어지는 문제가 바로 자연수를 넷 혹은 그 이하의 제곱수 합으로 나타내라는 것이었다. 1900년대 초반에 한 암산가가 15663 = 125<sup>2</sup>&nbsp;+ 6<sup>2</sup> + 1<sup>2</sup> + 1<sup>2</sup>라는 해를 구하는데 8초가 걸렸다는 보고가 있다. 좀 더 어려운 문제에 대해서는 56초가 걸렸다: 11339 = 105<sup>2</sup> + 15<sup>2</sup> + 8<sup>2</sup> + 5<sup>2</sup>.</p>

<p>자연수 <em>n</em>이 주어질 때, <em>n</em>을 최소 개수의 제곱수 합으로 표현하는 컴퓨터 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 표준입력을 사용한다. 입력은 자연수 <em>n</em>을 포함하는 한 줄로 구성된다. 여기서, 1 ≤ <em>n</em> ≤ <strong>1,000,000,000,000,000,000</strong>이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 표준출력을 사용한다. 합이 <em>n</em>과 같게 되는 제곱수들의 최소 개수를 한 줄에 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','25
','1
','MATH'),
                                                                                                                (3000,'BAEKJOON','https://www.acmicpc.net/problem/17634',17634,'이상한 기계','4초','512 MB',17,'<p>고고학자들은 고대 문명이 남긴 이상한 기계를 발견하였다. 이 기계는 두 정수 x와 y를 출력하는 두 부분이 있다.</p>

<p>이 기계를 조사해보고, 고고학자들은 이 기계가 과거의 어느 시점부터 시작하여 시점 t에 대한 정보를 출력 하는 특별한 시계라는 결론을 내렸다. 시점 T에서 첫 번째 출력 부분에서는 정수 x = ((t + ?t/B? ) mod A)를 출력하고, 두번째 출력 부분에서는 정수 y = (t mod B)를 출력한다. (?x?는 x 이하이면서 가장 큰 정수를 나타낸다.)</p>

<p>분석을 해 보니 이 기계가 항상 동작하는 것은 아니며, n개의 연속된 구간 [l<sub>i</sub>, r<sub>i</sub>]에서만 동작하는 것을 알게 되었다. 향후 연구를 위해서, 고고학자들은 당신에게 이 기계가 출력하는 순서쌍 (x, y) 중 서로 다른 것이 모두 몇 개인지를 알아내는 프로그램을 작성하도록 부탁했다.</p>

<p>두 순서쌍 (x<sub>1</sub>, y<sub>1</sub>)와 (x<sub>2</sub>, y<sub>2</sub>)는 만약 x<sub>1</sub> ≠&nbsp;x<sub>2</sub>이거나 y<sub>1</sub> ≠&nbsp;y<sub>2</sub>이라면 서로 다르다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에는 세 정수 n, A, B가 주어진다. (1 ≤ n ≤ 10<sup>6</sup>; 1 ≤ A, B ≤ 10<sup>18</sup>).</p>

<p>다음 n줄의 각각에는 두 정수 l<sub>i</sub>와 r<sub>i</sub>가 주어지는데, 이 기계가 동작하는 구간 [l<sub>i</sub>, r<sub>i</sub>]의 시작 시점과 종료 시점을 나타낸다. (0 ≤ l<sub>i</sub> ≤ r<sub>i</sub> ≤ 10<sup>18</sup> , r<sub>i</sub> < l<sub>i+1</sub>).</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>이 기계가 동작하는 동안 출력하는 서로 다른 순서쌍 (x, y)의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 테스트에서, 이 기계는 시점 4에서 (2, 1)을, 시점 7에서 (0, 1)을, 시점 8에서 (1, 2)를, 시점 9 에서 (0, 0)를, 시점 17에서 (1, 2)를, 시점 18에서 (0, 0)를 출력한다. 따라서 서로 다른 네 개의 순서쌍 (0, 0),(0, 1),(1, 2),(2, 1)을 출력한다.</p>

				</div>
				</div>','3 3 3
4 4
7 9
17 18
','4
','MATH'),
                                                                                                                (3003,'BAEKJOON','https://www.acmicpc.net/problem/17646',17646,'제곱수의 합 2 (More Huge)','0.5초(추가시간없음)','512 MB',27,'<p>라그랑주는 1770년에 모든 자연수는 넷 혹은 그 이하의 제곱수의 합으로 표현할 수 있다고 증명하였다. 어떤 자연수는 복수의 방법으로 표현된다. 예를 들면, 26은 5<sup>2</sup>과 1<sup>2</sup>의 합이다; 또한 4<sup>2</sup> + 3<sup>2</sup>&nbsp;+ 1<sup>2</sup>으로 표현할 수도 있다. 역사적으로 암산의 명수들에게 공통적으로 주어지는 문제가 바로 자연수를 넷 혹은 그 이하의 제곱수 합으로 나타내라는 것이었다. 1900년대 초반에 한 암산가가 15663 = 125<sup>2</sup>&nbsp;+ 6<sup>2</sup> + 1<sup>2</sup> + 1<sup>2</sup>라는 해를 구하는데 8초가 걸렸다는 보고가 있다. 좀 더 어려운 문제에 대해서는 56초가 걸렸다: 11339 = 105<sup>2</sup> + 15<sup>2</sup> + 8<sup>2</sup> + 5<sup>2</sup>.</p>

<p>자연수 <em>n</em>이 주어질 때, <em>n</em>을 최소 개수의 제곱수 합으로 표현하는 컴퓨터 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 표준입력을 사용한다. 입력은 자연수 <em>n</em>을 포함하는 한 줄로 구성된다. 여기서, 1 ≤ <em>n</em> ≤ <strong>1,000,000,000,000,000,000</strong>이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 표준출력을 사용한다. 합이 <em>n</em>과 같게 되는 제곱수들의 최소 개수를 첫째 줄에 출력한다.</p>

<p>둘째 줄에는, 제곱의 합이 <em>n</em>과 같게 되는 수들을 첫째 줄에 출력한 갯수만큼 공백으로 구분하여 출력한다. 음의 정수는 출력해서는 안된다.</p>

<p>답이 여러개인 경우, 아무거나 출력해도 좋다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','25
','1
5
','MATH'),
                                                                                                                (3135,'BAEKJOON','https://www.acmicpc.net/problem/17827',17827,'달팽이 리스트','1초','256 MB',9,'<p>영진이는 달팽이를 좋아한다. 달팽이를 너무너무 좋아하기 때문에 특정한 모양의 단방향 연결리스트에 달팽이 리스트라는 이름을 붙여주었다.</p>

<p>일반적인 선형 단방향 연결리스트의 각 노드 번호를 연결된 순서대로 1, 2, ..., <em>N</em>이라 하자. 이때 <em>N</em>번 노드는 아무 노드도 가리키지 않는데, 여기서 <em>N</em>번 노드가 1번 노드를 제외한 임의의 노드를 가리켜 사이클을 이루게 되는 리스트를 달팽이 리스트라고 한다. 달팽이 리스트는 각 노드당 하나의 정수를 저장한다.</p>

<p>즉, 달팽이 리스트는 다음과 같이 생긴 연결리스트이다. 노드 안의 수는 저장된 값을&nbsp;뜻한다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/9c987950-3731-49c1-bab6-8e545e8d54bc/-/preview/" style="height: 295.833px; width: 389.167px;"></p>

<p>"달팽아 달팽아 1번 노드부터 한 칸씩 총 <em>K</em>번 이동해 도착한 노드엔 어떤 값이 있을까?"</p>

<p>영진이는 어두운 방 안에서 달팽이 리스트 하나를 쓱쓱 그리더니, 같은 말을 <em>K</em>만 바꿔가며 계속 중얼거렸다.</p>

<p>영진이의 상태가 심상치 않아 보인다... 상황이 더 악화되기 전에 영진이의 모든 질문에 대답해주도록 하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 노드의 개수 <em>N</em>(2 ≤ <em>N</em> ≤ 200,000), 질문의 횟수 <em>M</em>(1 ≤<em> M</em> ≤ 200,000), <em>N</em>번 노드가 가리키는 노드의 번호 <em>V</em>(2 ≤ <em>V</em> ≤ <em>N</em>)가 공백으로 구분되어&nbsp;주어진다.</p>

<p>둘째 줄에 <em>N</em>개의 정수 <em>C<sub>1</sub>, C<sub>2</sub>, …, C<sub>N</sub></em>이 공백으로 구분되어 주어진다. 이때 <em>C<sub>i</sub></em>는 <em>i</em>번 노드에 저장된 값을 뜻한다. (1 ≤ <em>C<sub>i</sub></em> ≤ 1,000,000)</p>

<p>셋째 줄부터 <em>M</em>개의 줄에 걸쳐 각 질문에 해당하는 <em>K</em>(1 ≤ <em>K</em> ≤ 10<sup>9</sup>)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p><em>M</em>개의 줄에 걸쳐 각 질문의 답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>물론 마지막 노드가 자기 자신을 가리키는 사이클을 가질 수도 있다.</p>

<p>영진이는 그런 달팽이 리스트를 민달팽이 리스트라고 부른다!</p>

				</div>
				</div>','10 10 3
13 2 5 11 7 8 2 4 9 10
1
2
3
8
9
10
11
16
17
49
','2
5
11
9
10
5
11
9
10
10
','MATH'),
                                                                                                                (3148,'BAEKJOON','https://www.acmicpc.net/problem/17830',17830,'이진수씨의 하루 일과','2초(추가시간없음)','256 MB',12,'<p>이진수 씨는 이진수를 사랑한다. 그의 하루 일과는 하루 종일 이진수 두 개를 생각해놓고, 그 두 수의 곱을 "오늘의 이진수"로 선정한다. 그리고 예쁜 종이를 한 장 사와 "오늘의 이진수"를 적은 후 액자에 전시한다. 그러나 그런 진수씨에게도 시련이 찾아왔으니, 종이를 사기 위해 나온 도중에 "오늘의 이진수"를 잊어버리고 만 것이다. 하지만, 진수 씨가 오늘 하루 생각해 놓은 두 이진수에 대해서는 어렴풋이 기억하고 있다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/5da7fe6a-e723-4223-9a21-2215d16a9469/-/preview/" style="height: 265.833px; width: 347.5px;"> &nbsp;</p>

<p>그 두 이진수를 A와 B라고 하자. 진수 씨가 기억하는 사실은 다음과 같다. A와 B는 <em>N</em>개의 비트로 이루어져 있다. A의 모든 비트는 1이다. 하지만 B의 일부 비트는 기억하지 못한다. 여기서 "오늘의 이진수"를 어느 정도 추측해 볼 수 있다.</p>

<p>예를 들어, <em>N</em> = 4라면 A = 1111이다. 여기서 B = ?00?라고 해보자. ?는 기억하지 못하는 비트를 의미한다. 그렇다면 B는 0000, 0001, 1000, 1001중 하나일 것이다. 따라서 이 경우 "오늘의 이진수"는 A×B, 즉 0, 1111, 1111000, 10000111중 하나일 것이다. B는 leading zero를 포함할 수 있지만, "오늘의 이진수"는 leading zero를 생략한다. 즉, B는 맨 앞 자리가 1이 아닐 수 있지만, 진수씨가 "오늘의 이진수"를 적을 때에는 A×B=0일 때를 제외하면 맨 앞자리가 반드시 1이 되도록 0을 생략한다.</p>

<p>진수 씨는 "오늘의 이진수"에 비해 너무 크거나 작은 종이를 사고 싶지 않다. 따라서 "오늘의 이진수"를 쓸 때, 가능한 최대 자릿수와 최소 자릿수를 구해보고자 한다. 하지만, 진수 씨는 그의 일생 동안의 경험으로 큰 이진수를 빠르게 곱하는 것은 매우 어렵다는 것을 알고 있다. 따라서 여러분이 그 답을 대신 구해주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트케이스의 개수 <em>T</em>(1 ≤ <em>T</em> ≤ 20)가 주어진다.&nbsp;</p>

<p>두 번째 줄부터 <em>T</em>개의 줄에 걸쳐, A와 B의 길이 <em>N</em>(1 ≤ <em>N</em> ≤ 1,000,000)과 <em>B</em>가 공백으로 구분되어 주어진다. <em>B</em>는 0, 1, ?로 이루어져 있으며, ?는 해당 비트를 기억하지 못함을 의미한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p style="text-align:justify; margin-bottom:11px"><em>T</em>개의 줄에 걸쳐, 각 테스트케이스에 대해 "오늘의 이진수"의 최대 자릿수와 최소 자릿수를 공백으로 구분하여 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p><img alt="" src="https://upload.acmicpc.net/da815b55-fffe-42b2-874d-af385dcfef5e/-/crop/409x478/377,165/-/preview/" style="height: 292px; width: 250px;"> &nbsp;</p>

<p>이진수의 곱셈 역시 십진수를 곱하는 것과 유사한 방식으로&nbsp;계산할 수 있다.</p>

				</div>
				</div>','2
4 0?1?
4 ?00?
','7 5
8 1
','MATH'),
                                                                                                                (3143,'BAEKJOON','https://www.acmicpc.net/problem/17834',17834,'사자와 토끼','1초','256 MB',15,'<p style="text-align: justify;">사자와 토끼는 전국적으로 인기를 끌고 있는 재밌는 보드게임이다. 사자와 토끼를 즐기기 위해서는 2명의 플레이어와 1명의 심판이 필요하다. 보드판은 <em>N</em>개의 수풀과 <em>M</em>개의 오솔길로 이루어져 있다. 오솔길은 서로 다른 두 수풀을 양방향으로 연결하며, 어떤 수풀에서 다른 수풀까지 1개 이상의 오솔길을 통하면 반드시&nbsp;도달 할 수 있다.</p>

<p style="text-align: justify;">게임은 다음과 같은 순서로 이루어진다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/526bc2c8-bf4b-4b1b-85ab-c1e0c7bf468b/-/preview/" style="width: 337.5px; height: 241.667px;"> &nbsp;</p>

<ol>
	<li>
	<p style="text-align: justify;"><strong>심판이 사자와 토끼의 초기 위치를 각각 어느 수풀로 할지 정한다.</strong> 사자와 토끼의 초기 위치는 같을 수 없으며, 사자의 위치는 사자 플레이어에게만, 토끼의 위치는 토끼 플레이어에게만 알려준다.</p>
	</li>
	<li>
	<p style="text-align: justify;"><strong>매 턴마다, 사자와 토끼는 현재 위치한 수풀에서 오솔길 1개를 따라 이동해야 한다.</strong> 두 플레이어는 자신의 말을 이동할 위치를 심판에게만 말한다. 이동하지 않을 수는 없다.</p>
	</li>
	<li>
	<p style="text-align: justify;"><strong>이동한 후, 사자와 토끼가 같은 수풀에 있다면 사자가 토끼를 잡아먹어 게임이 끝난다.</strong> 그렇지 않다면, 다시 2로 돌아가 턴을 계속하여 진행한다. 물론 게임이 끝나지 않는 이상, 이동 후에도 두 플레이어는 상대 말의 위치를 알 수 없다. 또한, 사자는 오솔길 위에서는 토끼를 볼 수 없기 때문에, 같은 오솔길을 통해 이동하여도&nbsp;서로 다른 수풀에 도착했다면 게임이 끝나지 않는다.</p>
	</li>
</ol>

<p style="text-align: justify;">이렇게 서로 심리전을 통해 토끼는 사자에게서 도망가고, 사자는 토끼를 찾아내는 게임이다. 그런데 보드의 모양과 사자와 토끼의 초기 위치에 따라서, 어떻게 움직여도 영원히 게임이 끝나지 않는 경우가 있다는 것을 발견했다. 예를 들어, 위의 그림과 같은 보드판에서는 게임이 끝나지 않는 (사자의 초기 위치, 토끼의 초기 위치)의 조합은 다음과 같이 8가지가 존재한다 : (1,2) (1,4) (2,1) (2,3) (3,2) (3,4) (4,1) (4,3). 이런 경우에는, 심지어 두 플레이어가 서로의 위치를 알고 일부러 게임을 끝내려고 해도 끝낼 수 없다!</p>

<p style="text-align: justify;">보드판의 모양이 주어질 때, 어떻게 움직여도 영원히 게임이 끝나지 않는 초기 위치의 경우의 수가 몇 가지가 있을지 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 수풀의 수 <em>N</em>(2 ≤ <em>N</em> ≤ 50,000)과 오솔길의 수 <em>M</em>(1 ≤ <em>M</em> ≤ 500,000)이 공백으로 구분되어 주어진다.</p>

<p>두 번째 줄부터 <em>M</em>개의 줄에 걸쳐, <em>u</em>, <em>v</em>(1 ≤&nbsp;<em>u</em>,<em>v</em> ≤&nbsp;<em>N</em>, <em>u&nbsp;</em>≠&nbsp;<em>v</em>)가 공백으로 구분되어 주어진다. 이는 <em>u</em>번 수풀과 <em>v</em>번 수풀이 오솔길로 연결되어 있음을 의미한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 어떻게 움직여도 영원히 게임이 끝나지 않는 초기 위치의 경우의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 4
1 2
2 3
3 4
4 1
','8
','MATH'),
                                                                                                                (3141,'BAEKJOON','https://www.acmicpc.net/problem/17840',17840,'피보나치 음악','1초','512 MB',15,'<p>작곡가 철수는 피보나치 수열을 이용하여 만든 피아노 곡을 우연히 유튜브에서 보게 되었다. 피보나치 수열이란 f<sub>1</sub> = 1, f<sub>2</sub> = 1, f<sub>n+2</sub> = f<sub>n+1</sub> + f<sub>n</sub> (모든 n ≥ 1에 대해)을 만족하는 수열이다.</p>

<p>이 곡은 피보나치 수열의 각 자리 숫자에 해당하는 건반을 눌러서 만들어졌다. 피보나치 수열의 첫 8개 항을 사용해 곡을 만든다면, 다음과 같이 건반을 총 10번 누르게 될 것이다.</p>

<p style="text-align: center;">1 → 1 → 2 → 3 → 5 → 8 → 1 → 3 → 2 → 1</p>

<p>철수는 자신도 이 방법을 사용해 보기로 마음먹었다. 그런데 피보나치 수열은 너무 빠르게 증가해서, 덧셈에 약한 철수가 계산하기에는 어려웠다.</p>

<p>그래서 철수는 방법을 조금 바꾸기로 했다. 철수는 어떤 수 M을 정한 후, 피보나치 수열의 각 항을 M으로 나눈 나머지를 구하고, 각 수의 각 자리 숫자로 <em>새로운 수열</em> 을 만들어 이에 따라 피아노 곡을 쓰려고 한다.</p>

<p>예를 들어 M=10일 때, <em>새로운 수열 </em>은 다음과 같다.</p>

<p style="text-align: center;">{1, 1, 2, 3, 5, 8, 3, 1, …}</p>

<p>따라서 철수는 1 →1 → 2 → 3 → 5 → 8 → 3 → 1 → 4 → … 순으로 건반을 누르게 된다.</p>

<p>이때, 철수는 어떤 N에 대해 N번째로 누르게 되는 건반의 번호(i.e. <em>새로운 수열 </em>의 N번째 항)가 궁금해졌다.</p>

<p>Q개의 N이 질의로 주어졌을 때, 각각의 질의에 대해 N번째로 누르게 되는 건반의 번호를 출력하는 프로그램을 작성하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 정수 Q와 M이 공백을 사이에 두고 주어진다.</p>

<p>두 번째 줄부터 Q개의 줄에 각각의 질의를 나타내는 정수 N이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 N에 대해, N번째로 누르게 되는 건반의 번호(새로운 수열의 <em>N</em> 번째 항)를 입력에 주어진 순서대로 총 Q개의 줄에 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 10
5
8
','5
1
','MATH'),
                                                                                                                (3142,'BAEKJOON','https://www.acmicpc.net/problem/17843',17843,'시계','1초','512 MB',6,'<p>어느 날, 할 것이 없던 윤표는 시계를 관찰하기 시작했다. 어느 순간 윤표는 시계가 하나의 원이라는 사실을 깨달았다. 또, 시계의 중심에서 시침, 분침, 그리고 초침의 방향으로 반직선을 그어 시계의 둘레와 만나는 점을 각각 A, B, C라고 하고, 시계의 중심점을 O라고 했을 때 OA, OB, OC 중 어느 두 반직선이 이루는 각들을 비교하다가 어떤 각이 가장 작은지 궁금해졌다. OA, OB, OC 중 어느 두 반직선이 이루는 각 중 최소 각을 출력하는 프로그램을 만드시오. 단, 각도의 단위는&nbsp;도(°)이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트 케이스 개수 T(1 ≤ T ≤ 3,000)가 주어지고 2번째 줄부터 T+1 번째 줄까지&nbsp;한 줄에 하나씩 h시 m분 s초(0 ≤ h&nbsp;≤&nbsp;11, 0 ≤ m ≤ 59, 0 ≤ s ≤ 59.&nbsp;h, m, s는 정수)가 공백으로 구분되어 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>T개의 테스트 케이스 각각에 대해 OA, OB, OC 중 어느 두 반직선이 이루는 각 중 최소의 각을 출력한다.</p>

<p>실제 정답과 출력 값의 절대오차 또는 상대오차가&nbsp;10<sup>-6</sup>&nbsp;이하이면 정답으로 처리된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
7 47 17
','50.058333
','MATH'),
                                                                                                                (3158,'BAEKJOON','https://www.acmicpc.net/problem/17938',17938,'퐁당퐁당 2','1초','256 MB',7,'<p>퐁당퐁당은 술게임 중 팀워크가 가장 중요한 MT 단골 게임이다. 매 차례마다 지정된&nbsp;수의&nbsp;팔을 동시에&nbsp;들어야 하는데,&nbsp;이를&nbsp;실패하면 팔을 들어야했던 사람과 실수로 팔을 든 사람&nbsp;모두 연좌제로 마셔야 하기 때문이다. 퐁당퐁당 게임의 규칙은 아래와 같다.</p>

<ol>
	<li>1번 사람부터 N번 사람까지 순서대로 총 N명의 사람들이 원 모양을 이루어 반시계방향으로&nbsp;둘러앉는다. 이 때 모든 사람들은 원의 중앙을 바라보고 앉는다.</li>
	<li>게임은 1번 사람의 왼팔부터 시작하여 원의 바깥에서 보았을 때 왼쪽에서 오른쪽으로 진행한다.&nbsp;</li>
	<li>첫 번째 차례 이후 매&nbsp;차례마다 가장 오른쪽 사람이 들었던 팔의&nbsp;다음 팔부터 진행하고,&nbsp;순서대로&nbsp;지정된 수만큼의 팔을 들어올린다.</li>
	<li>게임을 시작할 때 들어야 하는 팔의 갯수는 1개이다.&nbsp;시작하여 차례가 지날 때마다 들어야 하는팔의 개수는&nbsp;1씩 증가한다.</li>
	<li>들어야 하는 팔의 갯수가 2&nbsp;× N 개가 되었다면 다음 차례부터 1씩 감소시킨다.</li>
	<li>들어야 하는 팔의 갯수가 1개가 되었다면 다음 차례부터 다시 1씩 증가시킨다.<br>
	즉, 매 차례에 들어야 할 팔의 갯수는 1 이상 2 × N&nbsp;이하로 유지된다.</li>
</ol>

<p>엠티에서 퐁당퐁당 게임을 하던 휘수는 친구들이 너무 잘하는 것을 보고 재미가 없어져, 최대한 많은 사람을 먹이기 위해 자기가 해당하는 차례에 일부러 팔을 들지 않으려고 한다. 휘수는 매 차례마다 자기가 트롤을 해서 사람들과 다 같이 술을 먹을 수 있을지 알고 싶어 한다. 여러분이 휘수를 도와주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 게임에 참여하는 사람수 N이 정수로 주어진다. (2 ≤&nbsp;N ≤&nbsp;1,000)</p>

<p>두 번째 줄에는 휘수의 위치 P와 차례&nbsp;T가 정수로 주어진다. (1 ≤&nbsp;P ≤&nbsp;N, 1 ≤&nbsp;T ≤&nbsp;10,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>만약 T번째 차례에 휘수가 팔을 들어야 해서,&nbsp;휘수가 트롤을 성공할 수 있다면 “<code>Dehet YeonJwaJe ^~^</code>”을 출력하고, 휘수가 트롤을 할 수 없는 위치라면 “<code>Hing…NoJam</code>”을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
3 3
','Dehet YeonJwaJe ^~^
','MATH'),
                                                                                                                (3162,'BAEKJOON','https://www.acmicpc.net/problem/17943',17943,'도미노 예측','1초','256 MB',12,'<p>보드게임 카페에서 아르바이트를 하는 정기는 사장님 몰래 도미노 놀이를 하는 취미가 있다. 도미노 놀이는 줄지어 세운 도미노의 한쪽 끝을 밀어 다른 도미노들을 연속적으로 넘어트리는 놀이를 말하는데, 정기는 사장님이 가장 아끼는 숫자 도미노로 도미노 놀이를 하기 때문에 사장님에게 들키지 않으려 노력한다.</p>

<p>그러나, 어느 때와 마찬가지로 사장님 몰래 도미노 놀이를 즐기고 있던 정기는 도미노가 쓰러지는 모습을 넋 놓고 지켜보던 중 사장님에게 도미노 놀이를 하는 장면을 들키고 말았다.</p>

<p>자신의 숫자 도미노를 가지고 있는 정기를 보며 화를 내려던 사장님은 줄을 완벽하게 맞추며 쓰러진 숫자 도미노를 보고 정기에게 자신이 낸 질문을 모두 맞춘다면 이번 일은 눈감아 주겠다고 하였고, 숫자 도미노의 진정한 사용 방법을 알려주었다.</p>

<p>정기가 도미노 놀이에 사용한 숫자 도미노는 앞면과 뒷면에 같은 정수가 적혀있는데, 숫자 도미노를 통한 도미노 놀이는 이 숫자들을 이용하여 도미노의 숫자를 추측하는 방식으로 이루어진다.</p>

<p>첫 번째 도미노는 쓰러지며 두 번째 도미노를 덮고, 두 번째 도미노는 세 번째 도미노를 덮는다. 이런 식으로 i번째 도미노는 i+1번째 도미노를 덮는데, 질문자는 첫 번째 도미노부터 마지막의 바로 전 도미노까지 각각의 도미노와 도미노가 덮은 도미노의 수를 XOR한 값을 기록한다. 즉, 첫 번째 도미노 수와 두 번째 도미노 수의 XOR, 두 번째 도미노 수와 세 번째 도미노 수의 XOR, 이런 식으로 도미노의 개수 ? 1 개의 숫자를 기록한다.</p>

<p>이후 쓰러진 도미노를 치운 뒤 질문자는 플레이어에게 기록한 숫자를 보여주고, 두 가지 종류의 질문을 한다.</p>

<ol>
	<li>x번째 도미노의 수와 y번째 도미노의 수를 XOR한 값을 답하라.</li>
	<li>x번째 도미노의 수가 d일 때, y번째 도미노의 수를 답하라.</li>
</ol>

<p>숫자 도미노 놀이의 초보자인 정기를 위해 사장님의 질문에&nbsp;대신 답해줄 프로그램을 작성해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 숫자 도미노의 개수 N과 질문의 수 Q가 정수로 주어진다. (3 ≤ N ≤&nbsp;2 × 10<sup>5</sup>, 1 ≤&nbsp;Q ≤&nbsp;10<sup>5</sup>)</p>

<p>두 번째 줄에 사장님이 기록한 N-1개의 정수가 주어진다. (각각의 정수는 0 이상&nbsp;2<sup>31</sup>-1 이하이다.)</p>

<p>세 번째 줄부터 Q개의 줄에 걸쳐 각각의 줄에 사장님의 질문이 주어진다. 질문의 형식은 “0 x y” 또는 “1 x y d”이고, 순서대로 1번 질문과 2번 질문을 의미한다. ( 1 ≤&nbsp;x ≤&nbsp;y ≤&nbsp;N, 0 ≤&nbsp;d ≤&nbsp;2<sup>31</sup>-1)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>주어진 질문의 답을 Q개의 줄에 걸쳐 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 5
1 2 3 4
0 1 2
0 1 3
1 1 2 3
1 3 5 5
0 1 1
','1
3
2
2
0
','MATH'),
                                                                                                                (3163,'BAEKJOON','https://www.acmicpc.net/problem/17944',17944,'퐁당퐁당 1','1초','256 MB',3,'<p>퐁당퐁당은 술게임 중 팀워크가 가장 중요한 MT 단골 게임이다. 매 차례마다 지정된&nbsp;수의&nbsp;팔을 동시에&nbsp;들어야 하는데,&nbsp;이를&nbsp;실패하면 팔을 들어야했던 사람과 실수로 팔을 든 사람&nbsp;모두 연좌제로 마셔야 하기 때문이다. 퐁당퐁당 게임의 규칙은 아래와 같다.</p>

<ol>
	<li>1번 사람부터 N번 사람까지 순서대로 총 N명의 사람들이 원 모양을 이루어 반시계방향으로&nbsp;둘러앉는다. 이 때 모든 사람들은 원의 중앙을 바라보고 앉는다.</li>
	<li>게임은 1번 사람의 왼팔부터 시작하여 원의 바깥에서 보았을 때 왼쪽에서 오른쪽으로 진행한다.&nbsp;</li>
	<li>첫 번째 차례 이후 매&nbsp;차례마다 가장 오른쪽 사람이 들었던 팔의&nbsp;다음 팔부터 진행하고,&nbsp;순서대로&nbsp;지정된 수만큼의 팔을 들어올린다.</li>
	<li>게임을 시작할 때 들어야 하는 팔의 갯수는 1개이다.&nbsp;시작하여 차례가 지날 때마다 들어야 하는팔의 개수는&nbsp;1씩 증가한다.</li>
	<li>들어야 하는 팔의 갯수가 2&nbsp;× N 개가 되었다면 다음 차례부터 1씩 감소시킨다.</li>
	<li>들어야 하는 팔의 갯수가 1개가 되었다면 다음 차례부터 다시 1씩 증가시킨다.<br>
	즉, 매 차례에 들어야 할 팔의 갯수는 1 이상 2 × N&nbsp;이하로 유지된다.</li>
</ol>

<p>엠티에서 퐁당퐁당 게임을 하던 지원이는 게임을 못하는 친구들 때문에 술을 너무 많이 마셔서 각 차례마다 몇 개의 팔을&nbsp;들어야 하는지 계산하려고 한다. 지원이가 살아남을 수 있도록 해당 차례에서 사람들이 들어야 하는 팔의 개수를 정확히 계산해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 게임에 참여하는 사람 수 N과 계산해야하는 차례 T가 정수로 주어진다. (2 ≤&nbsp;N ≤&nbsp;1000, 1 ≤&nbsp;T ≤&nbsp;10<sup>7</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>해당 차례에 들어야 하는 정확한 팔의 개수를 계산하여 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 3
','3
','MATH'),
                                                                                                                (3165,'BAEKJOON','https://www.acmicpc.net/problem/17945',17945,'통학의 신','1초','256 MB',3,'<p>태현이는 매일 한양대로 통학하는 학생이다. 태현이가 집에서 나와서부터 건물까지 도착하는 데는 약 1시간 40분이 걸린다. 태현이는 올해부로 3년 째 통학하고 있다. 오늘 태현이는 학교를 가기 위해 1시간 40분 전에 출발했으나, 열차가 지연되어 아직 왕십리까지 오지도 못했다. 평소에도 통학이 지긋지긋했지만 오늘 태현이는 화가 머리 끝까지 났다. 이게 과연 받아들이고 말아야 할 일인가? 하루에 길바닥에 4시간을 버리다니! 매번 학교까지 오는데 에너지를 다 써버려서 수업을 들을 힘도 없다.</p>

<p>열차는 왜 매번 지연되고, 지하철엔 왜 이렇게 사람이 터지는가! 아침 통학길마다 태현이는 평생 사람과 이렇게 가까이 붙어본 적이 없다고 느낀다. 열차를 조금만 증설해 준다면 태현이의 통학길이 조금 편해질 텐데… 하지만 피곤에 쩐 태현이가 할 수 있는 것은 그렇게 많지 않았다.</p>

<p>너무 화가 난 태현이는 통학 동아리를 만들기로 했다. 매일 모여서 통학이 얼마나 힘든지에 대해 이야기하고 서로 위로를 해주는 동아리이다. 태현이에게 이 동아리는 큰 힘이 되었고, 힘든 통학길마다 서로를 격려해주며 하나의 힘이 되어나갔다.</p>

<p>태현이를 비롯한 통학 동아리 회원들을 가엾이 여긴 통학의 신은 자비를 베풀어 통학 동아리 사람 중, 단 한 명에게 학교를 왔다갔다 할 때 순간이동 할 수 있는 권한을 주어 통학의 고통에서 벗어나게 하려한다. 그는 이 행운을 자신이 만든 테스트를 통과한 회원들에게 하사하려 한다.&nbsp;</p>

<p>사실 통학의 신이 만든 테스트는 아니다. 통학의 신은 요즘 학습지를 풀고 있는데, 수학엔 영 젬병이라 힘들어 한다. 간단한 이차방정식의 근을 구하고 싶은데, 제대로 풀리지 않아 괜히 사람들에게 문제를 내서 학습지를 안 풀고 학습지 선생님께 칭찬을 받으려는 것이다.</p>

<p>태현이는 통학 동아리 회장이지만 이 엄청난 행운을 통해 통학 동아리에서 나가고 싶어한다. 태현이를 도와주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>x<sup>2</sup>&nbsp; + 2Ax + B = 0 의 두 계수 A, B가 주어진다. A, B는 정수이며, 이 방정식의 근은 항상 정수이다. (-1000 ≤ A, B ≤ 1000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 방정식의 근들을 모두 공백으로 분리해 오름차순으로 출력한다. 중근일 경우 하나만 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 3
','-3 -1
','MATH'),
                                                                                                                (3166,'BAEKJOON','https://www.acmicpc.net/problem/17946',17946,'피자는 나눌 수록 커지잖아요','1초','256 MB',4,'<p>새학기를 맞아 다이어트 중인 예찬이는 힘든 시간을 보내고 있다. 다이어트 중 너무 배가 고팠던 예찬이는 피자를 시켜 먹기로 한다. 피자 맛을 오래 느끼고 싶었던 예찬이는 피자를 k번 (1 ≤ k ≤ K) 의 칼질로 조각 낸 뒤, 조각을 하나하나 음미하려고 계획했다. 하지만 기다리던 피자가 도착하고 나서야 예찬이는 본인에게 칼이 없다는 사실을 알게 되었다. 때마침 칼이 있던 예찬이의 동기 윤희는 예찬이에게 다음과 같은 제안을 한다.&nbsp;</p>

<p><em>“칼을 쓰게 해줄게! 하지만 피자를 다 자른 뒤에 칼질 한 번마다, 나한테 피자를 한 조각씩 증가 시키면서 줘. 다시 말해 칼질을 1번 하면 1조각을, 2번 하면 추가로 2조각을 얹어서 3조각을, 3번 하면 추가로 3조각을 얹어서 6조각을 달란말이야”</em></p>

<p>어차피 다이어트 중이었던 예찬이는 윤희의 제안이 나쁘지 않다고 생각해서 그 제안을 받아들이기로 한다. 하지만, 예찬이는 피자 맛을 오래도록 느끼고 싶기 때문에, 자신이 먹는 피자 조각의 수를 최대로 하고자 한다. 단, 피자 조각의 크기는 중요하지 않고, 칼질은 직선으로만 가능하다.&nbsp;최대 칼질의 수 K가 주어질 때, 예찬이가 먹을 수 있는 최대 피자 조각 수를 구해주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 테스트 케이스의 수 N이 정수로&nbsp;주어진다.&nbsp;(1 ≤ N ≤ 1000)</p>

<p>다음 줄부터 N개의 줄에 테스트케이스가 한 줄에 하나씩&nbsp;주어지고 각 테스트케이스에는 칼질의 최대 숫자 K이 정수로 주어진다.&nbsp;(1 ≤ K ≤ 10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 예찬이가 먹을 수 있는 최대 피자 조각 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1
2
','1
1
','MATH'),
                                                                                                                (3167,'BAEKJOON','https://www.acmicpc.net/problem/17950',17950,'스노우볼','0.5초','256 MB',5,'<p>오늘도 과제산에서는 크고 작은 스노우볼들이 굴러가고 있다. 과제산 아래에서 살고 있는 정명이는 이 스노우볼이 너무 커져서 집을 무너뜨릴까 걱정이다. 시작은 아무리 작은 스노우볼이라도, 내려오면서 엄청나게 커지기 때문에 스노우볼에 대한 대비책이 필요했다. 정명이는 스노우볼들이 산에서 모두 굴러내려왔을 때 총량이 어느 정도일지 계산해보려고 한다. 스노우볼은 다음과 같은 규칙으로 성장한다.</p>

<ol>
	<li>과제산의 높이는 H cm이다.</li>
	<li>스노우볼은 해발고도 1cm 이상에서만 만들어지고, 처음 만들어진 크기는 1이다.</li>
	<li>만들어진 스노우볼은 1cm 내려올 때마다 이전 크기의 x배가 된다.</li>
</ol>

<p>스노우볼의 개수가 적었다면 정명이가 직접 계산할 수 있었겠지만, 오늘은 어째서인지 스노우볼이 너무 많이 내려오고 있다. 여러분이 정명이를 도와주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 과제산의 높이 H, 스노우볼이 커지는 정도 x가 정수로 주어진다. (1 ≤&nbsp;H ≤&nbsp;10<sup>6</sup>, 1 ≤&nbsp;x ≤&nbsp;100)</p>

<p>두번째 줄부터 H줄 동안 과제산에서 만들어진 스노우볼의 개수가 정수로 주어진다.&nbsp;i+1번째 줄의 수가 높이 i&nbsp;cm에서 만들어진 스노우볼의 개수 c<sub>i</sub>를 의미한다. (0 ≤&nbsp;c<sub>i&nbsp;</sub>≤ 100)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>과제산에서 모든 스노우볼이 내려왔을 때의 크기 합을 출력하라. 단 답이 너무 커질 수 있으니 10<sup>9</sup>&nbsp;+ 7로 나눈 나머지를 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 5
1
3
2
4
','2830
','MATH'),
                                                                                                                (3159,'BAEKJOON','https://www.acmicpc.net/problem/18016',18016,'더 어려운 계단 수','2초','1024 MB',26,'<p>45656이란 수를 보자.</p>

<p>이 수는 인접한 모든 자릿수의 차이가 1이 난다. 이런 수를 계단 수라고 한다.</p>

<p>그럼, 오늘도 역시 세준이는 0부터 B-1까지 모든 한 자리 숫자가 자릿수로 등장하면서, 길이가 N인 B진법 계단 수가 몇 개 있는지 궁금해졌다.</p>

<p>N,&nbsp;B, M이&nbsp;주어질 때, 길이가 N이면서 0에서 B-1까지&nbsp;모두 등장하는 B진법 계단 수의 개수를&nbsp;M으로 나눈 나머지를 구하는&nbsp;프로그램을 작성하시오. (0으로 시작하는 수는 없다.)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수&nbsp;N, B, M이&nbsp;주어진다. (1&nbsp;≤ N&nbsp;≤ 10<sup>6</sup>, 2&nbsp;≤ B&nbsp;≤&nbsp;10<sup>6</sup> , 10<sup>9</sup>&nbsp;≤ M ≤ 2×10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','14 12 1234567891
','16
','MATH'),
                                                                                                                (3160,'BAEKJOON','https://www.acmicpc.net/problem/18017',18017,'총알의 속도','0.5초','256 MB',0,'<p>철수는 총과 함께 과녁을 향해 초속 A미터로 달리고 있다. 달리는 도중에 철수는 (자신을 기준으로) 초속 B미터로 나가는 총알을 과녁 방향으로 발사 했다.</p>

<p>이 때, 총알은 과녁을 향해 초속 몇 미터로 날아가고 있는가?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 실수 A, B가 공백으로 구분되어 소숫점 둘째자리까지 주어진다. (0 < A, B ≤ 10<sup>8</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>총알은 과녁을 향해 초속 몇 미터로 날아가고 있는지를 출력하여라.</p>

<p>출력과 정답의 절대 혹은 상대 오차가 10<sup>-9</sup>이하일 경우, 정답으로 판단한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1.23 4.56
','5.79
','MATH'),
                                                                                                                (3260,'BAEKJOON','https://www.acmicpc.net/problem/18108',18108,'1998년생인 내가 태국에서는 2541년생?!','1초(추가시간없음)','1024 MB',1,'<p>ICPC Bangkok Regional에 참가하기 위해 수완나품 국제공항에 막 도착한 팀 레드시프트 일행은 눈을 믿을 수 없었다. 공항의 대형 스크린에 올해가 2562년이라고 적혀 있던 것이었다.</p>

<p>불교 국가인 태국은 불멸기원(佛滅紀元), 즉 석가모니가 열반한 해를 기준으로 연도를 세는 불기를 사용한다. 반면, 우리나라는&nbsp;서기 연도를 사용하고 있다. 불기 연도가 주어질 때 이를 서기&nbsp;연도로 바꿔 주는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>서기 연도를 알아보고 싶은 불기 연도 <em>y</em>가&nbsp;주어진다. (1000 ≤ <em>y</em> ≤ 3000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>불기 연도를 서기 연도로 변환한 결과를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2541
','1998
','MATH'),
                                                                                                                (3254,'BAEKJOON','https://www.acmicpc.net/problem/18117',18117,'분수','1초(추가시간없음)','1024 MB',16,'<p>임의의 정수 <em>i</em>가 주어졌을 때, 어떤 수의 소수점 위 또는 아래 <em>i</em>째 자리&nbsp;숫자를 계산하는 알고리즘이 존재한다면, 그러한 수를 "계산 가능한 수" (computable number)라고 한다.</p>

<p>반면에, 그러한 알고리즘이 존재하지 않는다면, 그러한 수를 "계산 불가능한 수" (uncomputable number)라고 한다. 예를 들어, 랜덤으로 생성된&nbsp;프로그램이 무한 루프를 돌지 않을 확률을 나타내는 카이틴 상수 (Chaitin constant)는 계산 불가능한 수이다. 즉, 어떠한 알고리즘으로도 이 수를&nbsp;임의의 정확도로&nbsp;계산할 수 없다.</p>

<p>준석이는 분모와 분자가 자연수인 분수는 모두&nbsp;계산 가능한 수인지 궁금해졌다. 준석이를 도와&nbsp;<em>a</em> / <em>b</em>의 소수점 아래 <em>i</em>째 자리 숫자를 계산하는 알고리즘을 작성하여 모든 유리수가 계산 가능한 수임을 증명하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 수 <em>T</em>가 주어진다. (1 ≤&nbsp;<em>T</em> ≤&nbsp;100)</p>

<p>각 테스트 케이스의 첫째 줄에 정수 <em>a</em>와 <em>b</em>가 공백으로 구분되어 주어진다. (1 ≤&nbsp;<em>a</em>, <em>b</em> ≤&nbsp;10<sup>18</sup>)</p>

<p>각 테스트 케이스의 둘째 줄에 정수 <em>i</em>와 <em>n</em>이 공백으로 구분되어 주어진다. (1 ≤ <em>i</em> ≤ 10<sup>18</sup>, 1 ≤&nbsp;<em>n</em> ≤&nbsp;100)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다, <em>a</em> / <em>b</em>를 소수로 표현했을 때, 소수점 아래 <em>i</em>째 자리부터 (<em>i&nbsp;</em>+ <em>n&nbsp;</em>- 1)째 자리까지 <em>n</em>개의 숫자를 출력하라.</p>

<p>소수를 표현하는 방법이 여럿 있는 경우에는, 소숫점 아래에 0이 무한히 많은 표현 방법을 선택한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
1 7
1 6
','142857
','MATH'),
                                                                                                                (3251,'BAEKJOON','https://www.acmicpc.net/problem/18120',18120,'대농부 김상혁','2초(추가시간없음)','1024 MB',17,'<p>상혁이는 부농이 되기 위해 낯선 나라의 한 황무지에 정착했다. 상혁이는 황무지에 농작물 <em>N</em>개를 심었다. 이 농작물은 물만 주면 매일매일 수확할 수 있는 신기한 작물이다.</p>

<p>농작물 <em>N</em>개를 심은 뒤에야 상혁이는 황무지를 농토로 개간하는 걸 계획하기 시작했다. 황무지를 2차원 평면으로 생각하자. 상혁이는 (0, 0)을 중심으로 반경 <em>r</em> 내의 모든 황무지를 개간하기로 했다. 이 개간된 농토를 관리하는데 매일 <em>A </em>×&nbsp;<em>r</em><sup>2</sup> 달러가 소비된다.</p>

<p>각 농작물 <em>i</em>는 (<em>x<sub>i</sub></em>, <em>y<sub>i</sub></em>)에 심겨 있고 <em>w<sub>i</sub></em>만큼의 가치를 가지고 있다. 황무지에 심어진 농작물에서는 아무것도 수확할 수 없다. 농토의 경계에 놓인 농작물도 수확할 수 있다.&nbsp;농토에 심어진 농작물의 수확량은 아래와 같이&nbsp;계산된다.</p>

<p style="text-align: center;">농작물로부터 농토 경계까지의 최단 거리를 <em>c<sub>i</sub></em> 라고 하면, 농작물마다 매일 <em>w<sub>i</sub></em> ×&nbsp;<em>c<sub>i</sub></em> 달러</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/da08b1c1-458c-469a-9bfa-eb56375038b7/-/preview/" style="height: 400px; width: 397.5px;"></p>

<p>위의 예시는 농작물들과 농토를&nbsp;2차원 좌표평면 상에 나타낸 그림이다. 초록색 원(<em>r&nbsp;</em>= 3)은 농토의 경계를 의미한다. 농작물&nbsp;밑에&nbsp;나온 수들은&nbsp;농작물의 가치이다. 이 때 농토 바깥에 있는 농작물들은 황무지에 있으므로 수확되지 않는다.</p>

<p>가치 30인 농작물에서 농토 경계까지의 최단 거리는 위의 빨간 선분으로 표시되어 있고 아래에 그 거리의 값이 소수점 아래 2번째 자리까지 나타나 있다. 이런 구성에서 <em>A&nbsp;</em>= 10 이라 할 때, 관리비용은 10 × 3 × 3 = 90, 농작물로부터 얻는 이득은 총 약 113.058936이다. 따라서 이 때 상혁이가 얻는 이득은 약 23.058936달러이다. (최대 이득은 아니다)</p>

<p><i>A</i>와 농작물들의 좌표, 가치들이 주어졌을 때, 농토 관리 비용과 농작물 총 수확량을 고려할 때 상혁이가 최대로 이득을 보기 위한 <em>r</em>을 결정해 주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 정수 <em>N</em>과 정수 <em>A</em>가 주어진다. (1 ≤ <em>N</em> ≤ 10<sup>5</sup>, 1 ≤ <em>A</em> ≤ 10<sup>3</sup>)</p>

<p>두 번째 줄부터 <em>N </em>+ 1번째 줄까지, 각&nbsp;줄마다 정수&nbsp;<em>x<sub>i</sub></em>, <em>y<sub>i</sub></em>, <em>w<sub>i</sub></em> 가 주어진다. (?10<sup><span style="font-size: 10.8333px;">3</span></sup>&nbsp;≤ <em>x<sub>i</sub></em>, <em>y<sub>i</sub></em> ≤ 10<sup>3</sup>, 1 ≤ <em>w<sub>i</sub></em> ≤ 200)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>상혁이가 황무지를 개간하여 얻을 수 있는 최대의 이득(달러)를 출력한다. 만약 아예 개간하지 않는 것이 최대 이득을 준다면 0을 출력한다.</p>

<p>상대/절대 오차가 10<sup>?6</sup> 이내인 경우에만 정답이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 10
1 1 30
-2 -1 50
-1 -2 20
2 -2 70
','325.558936
','MATH'),
                                                                                                                (3252,'BAEKJOON','https://www.acmicpc.net/problem/18122',18122,'색깔 하노이 탑','1초(추가시간없음)','1024 MB',16,'<p>하노이 탑 게임은 3개의 기둥과 여러 장의 크기가 모두 다른 원판을 이용한 게임이다. 처음에는 1번째 기둥에 크기가 큰 원판이 밑에 오도록 모든 원판이 크기 순서대로 놓여 있고, 다음 규칙을 지키면서 모든 원판을 3번째 기둥으로 옮겨야 한다.</p>

<ul>
	<li>작은 원판 위에 큰 원판이 올라올 수 없다.</li>
	<li>한 번에 1개의 원판만 옮길 수 있다.</li>
</ul>

<p>이 규칙을 토대로 원판의 색깔이 두 개인 하노이 탑 게임을 만들려고 한다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/d952ce38-90ae-4882-a9b4-5c4b23701599/-/preview/" style="width: 349.167px; height: 139.167px;"></p>

<p>처음에는 1번째 기둥에 크기 1인 빨간 원판, 크기 1인 검은 원판, 크기 2인 빨간 원판, 크기 2인 검은 원판, …, 크기 <em>N</em>인 빨간 원판, 크기 <em>N</em>인 검은 원판이 위에서부터 차례대로 놓여 있다.</p>

<p>위의 규칙을 지키면서 원판을 움직여 3번째 기둥에 크기 1인 빨간 원판, 크기 1인 검은 원판, 크기 2인 빨간 원판, 크기 2인 검은 원판, …, 크기 <em>N</em>인 빨간 원판, 크기 <em>N</em>인 검은 원판이 위에서부터 차례대로 오도록 놓아야 한다면,&nbsp;원판을 최소로 이동시킬 때&nbsp;총 몇 번 이동해야 할까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 정수 <em>N&nbsp;</em>(1 ≤ N ≤ 10<sup>6</sup>)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 원판의 최소 이동 횟수를 출력하여라. 수가 커질 수도 있으니, 최소 이동 횟수를 10<sup>9</sup> + 7로 나눈 나머지를 출력하여라.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>원판의 크기가 같다면, 색과 상관없이 어떤 원판을 위에 올려놓아도 무방하다. 단, 최종 상태는 위에서부터 빨강 원판 - 검정 원판 -&nbsp;빨강 원판 - 검정 원판 -&nbsp;… 순이어야 한다.</p>

				</div>
				</div>','1
','3
','MATH'),
                                                                                                                (3262,'BAEKJOON','https://www.acmicpc.net/problem/18124',18124,'치삼이의 종이 자르기','1초','1024 MB',8,'<p>치삼이는 정사각형의 종이 하나를 가지고 있다. 종이를 정확히 반으로 여러 번 잘라 같은 크기를 가진 종이를&nbsp;<em>N</em>개 가지고 싶다.</p>

<p>치삼이는 종이 크기의 종류가 두 가지가 넘으면 복잡해서 머리가 아프다. 따라서 치삼이가 자른 종이 크기의 종류는 두 가지를 넘을 수 없다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/6da9fc6b-d000-4796-accf-edab139ff1fa/-/preview/" style="height: 97.5px; width: 337.5px;"></p>

<p>위의 주어진 그림의 종이에 붙여진 숫자는 종이 크기의 종류를 의미한다. 같은 숫자가 붙은 종이는 같은 크기이다.</p>

<p>가장 오른쪽 그림은 치삼이가 가지고 있는 종이&nbsp;크기의 종류가 2가지를 넘어가서&nbsp;치삼이가 머리가 아프다.</p>

<p>종이는 한 번에 하나의 종잇조각만을 자를 수 있다.&nbsp;겹치거나 종이를 나란히 놓아 여러 개의 종잇조각을 한 번에 자를 수 없다.</p>

<p>같은 크기의 종이를&nbsp;최소 <em>N</em>개 얻고 싶을 때,&nbsp;치삼이가&nbsp;종이를잘라야 하는 횟수의 최솟값을&nbsp;구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>치삼이가 필요한 종이의 개수&nbsp;<em>N</em>이 주어진다. <em>N</em>은 양의 정수이다. (1 ≤&nbsp;<em>N</em>&nbsp;< 2<sup>32</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>종이를 자르는 최소&nbsp;횟수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','13
','14
','MATH'),
                                                                                                                (3253,'BAEKJOON','https://www.acmicpc.net/problem/18127',18127,'모형결정','1초','1024 MB',3,'<p>지윤이는 신기한 물질을 발견했다. 이 물질의 결정은 정다각형을 유지하며 온도가 1도 낮아질 때마다 각 변을 이루는 결정의 수가 1씩 증가한다. 최초의 결정은 섭씨 0도에서 1개의 결정으로 이루어진다. 이 결정을 최소 결정이라고 하자.</p>

<p>결정의 크기가 증가할 때의 규칙은 다음과 같다. 그림에서 기존 결정은 파란색으로, 각&nbsp;온도에서 새로 생긴 최소 결정은 노란색으로 표시하였다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/b2170e2c-5783-4a17-af3a-6de5dbe42bfc/-/preview/" style="height: 223.333px; width: 337.5px;"></p>

<ol>
	<li>정<em>A</em>각형 모양을 유지한다. 정<em>A</em>각형이란 정다각형의 변이 <em>A</em>개임을 의미한다.</li>
	<li>1도 낮아질 때 각 변을 이루는 최소 결정의 수가 1씩 증가한다.</li>
	<li>최대한 적은 개수의 최소&nbsp;결정들이 기존 결정에 붙는다.</li>
</ol>

<p>지윤이는 온도를 내려보지 않고도 해당 온도의 결정을 이루는 최소 결정의 개수를 알고 싶다.</p>

<p>지윤이를 도와 최소 결정의 개수를 출력해주는 프로그램을 작성해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수&nbsp;<em>A</em>(3 ≤ <i>A</i>&nbsp;≤ 50), <i>B</i>(0 ≤ B<em>&nbsp;</em>≤ 10,000,000)가&nbsp;주어진다. <i>A</i>는 결정의 모양이 <i>A</i>개의 변을 가진 정다각형임을, <i>B</i>는 온도가 섭씨 ?<i>B</i>도 임을 의미한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>결정이 <i>A</i>개의 변을 가진 정다각형이고, 온도가 섭씨 ?<i>B</i>도 일 때, 최소 결정의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 4
','15
','MATH'),
                                                                                                                (3257,'BAEKJOON','https://www.acmicpc.net/problem/18130',18130,'여름나기','1초','1024 MB',5,'<p>가톨릭대학교 다솔관에 살고있는 현석이가 여름을 나기 위해 손 선풍기를 사려고 바이마트에 도착했다. 손 선풍기는 1번부터 <em>N</em>번까지 총 <em>N</em>개가 진열되어 있고, 모두 특별한 작동방식을 가지고 있다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/2f10a8d8-46b6-49e2-9616-73eed9f58b03/" style="width: 347.5px; height: 231.667px;"></p>

<p>손 선풍기는 작동시킨 후 <em>K</em> 시간마다 비용을 추가 결제해야 손 선풍기가 계속 돌아가는데, 이때 손 선풍기가 요구하는 비용은 <em>K</em>시간이 흘렀을 때 <em>C</em>만큼의 비용을, 2?<em>K</em> 시간이 흘렀을 경우 2?<em>C</em>의 비용을, <em>T</em>를 자연수라고 할 때,<em>T</em>?<em>K</em> 초가 흘렀을 때 추가로 <em>T</em>?<em>C</em>의 비용을 내야 한다.</p>

<p>예를 들어 선풍기의 가격이 500원, 3시간마다 100원의 추가비용 값을 가지는 손 선풍기를 가지고 있고 집까지 12시간이 걸린다면, 3시간에서 100원이, 6시간에서 200원이, 9시간에서 300원이 12시간에는 집에 도착했으므로 추가비용이 발생하지 않고 손 선풍기를 끈다. 따라서 600원의 추가비용에 선풍기 가격 500원을 더해 1,100원의 비용이 발생한다.</p>

<p>현석이는 집으로 돌아갈 때 손 선풍기가 없다면 도저히 돌아갈 수 없다고 판단하여 무조건 한 개의 선풍기를 구매하려고 한다. 현석이가 집까지 돌아가는 시간을 알고 있을 때 집까지 돌아가는 동안 최소의 지출로 집까지 안전하게 돌아갈 수 있는 선풍기를 고르는 것을 도와주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 두 정수 진열된 손 선풍기의 개수 <em>N</em>(1 ≤ <em>N</em> ≤ 10,000) 와&nbsp;현석이가 집까지 가는데 걸어가는 시간 <em>Q</em>(1 ≤ <em>Q</em> ≤ 1,000,000)가 주어진다.</p>

<p>두 번째 줄부터 <em>N+1</em>번째 줄까지 세 정수 <em>P, K, C</em>가 주어지는데 <em>P</em>(0 ≤ <em>P</em> ≤ 100,000)는 손 선풍기의 가격, <em>K</em>(1 ≤ <em>K</em> ≤ 1,000,000)는 추가비용을 내야 하는 시간 간격, <em>C</em>(1 ≤ <em>C</em> ≤ 1,000,000)는 추가비용의 초기값을 의미한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p><em>N</em>개의 손 선풍기 중 현석이가 최소의 비용으로 집을 도착하기 위해 사야 하는 손 선풍기의 번호와 그때의 필요한 비용을 공백으로 구분하여 출력한다. 답이 여러 개라면 손 선풍기의 번호가 더 작은 것을 출력한다.</p>

<p>어떤 선풍기를 쓰더라도 필요한 비용은 2<sup>63</sup>-1 보다 작다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 12
100 2 100
200 3 100
0 10 500
0 10 600
1000 13 100
','3 500
','MATH'),
                                                                                                                (3255,'BAEKJOON','https://www.acmicpc.net/problem/18132',18132,'내 이진트리를 돌려줘!!!','2초','1024 MB',13,'<p>이진 트리는 각각의 노드가 최대 두 개의 자식 노드를 가지는 트리이다.</p>

<p>치삼이는 무한하게 연결되어있는 이진 트리를 하나 가지고 있었다. 그러나 밤새 자던 사이에 누군가 치삼이의 이진 트리의 모든 정점과 간선을 분리한&nbsp;후 <em>E</em>개를 제외한 모든 간선을 훔쳐갔다. 치삼이는 이제 무수히 많은 정점과&nbsp;<em>E</em>개의 간선만이 남아 있을 뿐이다. 치삼이는&nbsp;<em>E</em>개의 간선이라도 사용하여 하나의 이진 트리를 다시 만들려 한다. 이진 트리를 만들 때는 <em>E</em>개의 간선을 모두 사용하여 정점들을 연결해야 하고 이진 트리를 완성하고&nbsp;남은 정점들은 버린다.</p>

<p>서로 대칭 관계에 있는 두 트리는 서로 다른 경우라고 했을 때, 치삼이를 도와&nbsp;<em>E</em>개의 간선으로 만들 수 있는 이진 트리의 경우의 수를 구하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트케이스의 개수를 나타내는&nbsp;<em>T</em>(1 ≤&nbsp;<em>T</em>&nbsp;≤ 100)가 주어진다.</p>

<p>두 번째 줄부터 각 테스트케이스마다 간선의 개수를 나타내는&nbsp;<em>E</em>가 주어진다. (1 ≤&nbsp;<em>E</em>&nbsp;≤ 5,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 이진 트리의 경우의 수를 1,000,000,007로 나눈 나머지를 출력하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
2
4
5
','5
42
132
','MATH'),
                                                                                                                (3274,'BAEKJOON','https://www.acmicpc.net/problem/18184',18184,'분할하기','0.5초(추가시간없음)','512 MB',17,'<p>집합 $S$에 대하여, "$a,b \in S \Longrightarrow (a | b) \in S$"가 성립한다면 (또한 그러할 때에만) "$S$가 좋은 집합이다"라고 정의하자. 여기서 $|$는 Bitwise-or를 의미한다. 예를 들어, {1, 3}은 좋은 집합이다. (1|1) = 1, (1|3) = 3, (3|3) = 3은 모두 {1, 3}의 원소기 때문이다. 다만, (1|2) = 3이므로 {1, 2}는 좋은 집합이 아니다.</p>

<p>전체 집합 $U = \{ 0, 1, \cdots, 2^N - 1 \}$의 부분집합 $A$에 대하여, "$A$의 원소의 개수가 $K$고, $A$와 $(U \setminus A)$가 모두 좋은 집합"이면 (또한 그러할 때에만) $A$를 "$N, K$-분할"이라고 한다.</p>

<p>$N$과 $K$가 주어질 때, "$N, K$-분할"이 존재하는지 밝히고, 있다면 그러한 예를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 자연수 $N$과 $K$가 사이에 공백을 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>만약 "$N, K$-분할"이 존재하지 않다면 첫 번째 줄에 "<code>NO</code>"를 출력한다.</p>

<p>만약 "$N, K$-분할"이 존재한다면 첫 번째 줄에 "<code>YES</code>"를 출력한다. 또한 두번째 줄에 "$N, K$-분할"인 집합의 원소를 오름차순으로 출력한다.</p>

<p>"$N, K$-분할"인 집합이 여러 개 존재한다면, 아무거나 출력해도 정답으로 인정된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1
','YES
0
','MATH'),
                                                                                                                (3275,'BAEKJOON','https://www.acmicpc.net/problem/18187',18187,'평면 분할','1초(추가시간없음)','512 MB',9,'<p>무한한 크기의 이차원 평면에, 여러분은 최대 <em>N</em>개의 직선을 그릴 수 있다.</p>

<p>여러분은 기울기가 -1, 0, 1인 직선만 그릴 수 있다.</p>

<p>직선을 이용하여 평면을 최대 몇 개의 영역으로 분할할 수 있는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 그릴 수 있는 직선의 개수의 최댓값을 의미하는 자연수 <em>N</em>이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 최대 몇 개의 영역으로 분할할 수 있는지 그 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','2
','MATH'),
                                                                                                                (3276,'BAEKJOON','https://www.acmicpc.net/problem/18194',18194,'Bad Hair Day와 기댓값','2초(추가시간없음)','512 MB',20,'<p>농부 존에게는 <em>N</em>마리의 소가 있다. 소들의 키는 다양하며, 두 마리의 소의 키가 서로 같을 수 있다.</p>

<p>자신의 헤어스타일이 마음에 들지 않았던 소들은 일렬로 서서 서로의 헤어스타일을 확인해 주려고 한다.</p>

<p>각 소들은 자신의 오른쪽을 바라보면서 자신보다 키가 같거나 큰 소가 등장하기 전까지 나온 모든 소들의 헤어스타일을 확인할 수 있다. 더 정확하게는, 왼쪽에서 <em>i</em>번째에 서 있는 소의 키를 <em>H</em><sub><em>i</em></sub>라 하면, <em>i</em>번째 소는 다음 조건을 만족할 때 (또한 그러할 때에만) <em>j</em>번째 소를 볼 수 있다.</p>

<ul>
	<li><em>i</em>&nbsp;< <em>j</em>고, <em>H</em><sub><em>i</em></sub> > <em>H</em><sub><em>j</em></sub>다.</li>
	<li><em>i</em>&nbsp;<&nbsp;<em>k</em>&nbsp;<&nbsp;<em>j</em>고,&nbsp;<em>H</em><sub><em>i</em></sub> ≤ <em>H</em><sub><em>k</em></sub>를 만족하는 <em>k</em>가 존재하지 않는다.</li>
</ul>

<p>소들이 <em>N</em>마리 있으므로, 그들이 일렬로 설 수 있는 방법은 총 <em>N</em>!가지다. 농부 존은 헤어스타일을 확인할 수 있는 소들 쌍의 수의 기댓값이 궁금해졌다. 농부 존을 도와, 이 기댓값을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 소의 수를 나타내는 자연수 <em>N</em>이 주어진다.</p>

<p>두번째 줄에 <em>N</em>마리의 소의 키를 나타내는 <em>N</em>개의 자연수 <em>H</em><sub>1</sub>, ···, <em>H<sub>N</sub></em>가 사이에 공백을 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>어떤 서로소이고 음이 아닌 두 정수 $P$, $Q$가 존재하여, 헤어스타일을 확인할 수 있는 소들 쌍의 수의 기댓값이 $\displaystyle \frac{P}{Q}$와 같다고 하자. 이때, $P \equiv QX \pmod{10^{9} + 7}$를 만족하는 0&nbsp;이상 (10<sup>9</sup>&nbsp;+ 7)&nbsp;미만의 정수 $X$를 구하여 첫 번째 줄에 출력한다.</p>

<p>조건을 만족하는 $P$, $Q$, $X$는 반드시 존재한다. 또한 $X$는 유일하게 존재함이 보장된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 1 2 2
','333333337
','MATH'),
                                                                                                                (3277,'BAEKJOON','https://www.acmicpc.net/problem/18197',18197,'분수 계산','1초(추가시간없음)','512 MB',21,'<p>0 이상 1&nbsp;미만인 두 수 $x$, $y$에 대하여, 그 둘의 거리 $d(x, y)$를 다음과 같이 정의하자.</p>

<p style="text-align: center;">$\displaystyle d(x, y) = \min \left\{ | x-y | , 1 - | x-y | \right\}$</p>

<p>$0 \le A_1 \le A_2 \le \cdots \le A_N < 1$을 만족하는 길이 $N$의 수열 $A$에 대하여, 이의 분포 정도 $f(A)$를 다음과 같이 정의하자.</p>

<p style="text-align: center;">$\displaystyle f(A) = \sum_{1 \le i < j \le N} d(A_i, A_j)$</p>

<p>길이 $N$인 수열 $A$가 주어질 때, 길이가 $N$이면서 $A$보다 분포 정도가 큰 수열이 존재하는지 판별하는 프로그램을 작성하시오.</p>

<p>즉, $f(A) < f(B)$를 만족하는 길이 $N$의 수열 $B$가 존재하는지 여부를 판별하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 수열의 길이를 의미하는 자연수 $N$이 주어진다.</p>

<p>두번째 줄에 $N$개의 유리수 $A_1, A_2, \cdots, A_N$이 사이에 공백을 두고 주어진다.</p>

<p>하나의 유리수는 "$p$<code>/</code>$q$"&nbsp;형태로 주어지며, 이는 그 수가 $\displaystyle \frac{p}{q}$임을 의미한다. 여기서 $p$와 $q$는 정수며, $0 \le p < q \le 10^9$임이 보장된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>만약 길이가 $N$이면서 $A$보다 분포 정도가 큰 수열이 존재한다면, 첫 번째 줄에 "<code>YES</code>"를 출력한다.</p>

<p>만일 그렇지 않다면, 첫 번째 줄에 "<code>NO</code>"를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
0/1 1/2
','NO
','MATH'),
                                                                                                                (3192,'BAEKJOON','https://www.acmicpc.net/problem/18225',18225,'당구공을 넣자','1초','256 MB',15,'<p>가로의 길이가 <em>A </em>m, 세로의 길이가 <em>B </em>m인 직사각형 모양의 당구대가 있다.</p>

<p>당구대 위에는 크기가 무한히 작아 점으로 취급할 수 있는&nbsp;당구공 한 개가 놓여있다. 당구공의 위치는 왼쪽 변에서 <em>x&nbsp;</em>m, 아래쪽 변에서 <em>y&nbsp;</em>m만큼 떨어진 곳에 놓여 있다.</p>

<p>이후, 당구공은 일정 시간마다 오른쪽으로 <em>p</em> m, 위쪽으로 <em>q&nbsp;</em>m 움직이는 등속도 운동을 한다. 당구공이 당구대의 한 변에 닿으면, 입사각과 반사각이 같도록 반사된다. 그러다 꼭짓점에 닿았을 때 당구공이 멈춘다.</p>

<p>당구공이 멈출 때까지 변에 몇 번 부딪히는지를 계산하는 프로그램을 작성하여라. 단, 마지막에 꼭짓점에 닿은 순간도 변에 부딪혔다고 세어야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 당구대의 가로 길이, 세로 길이, 왼쪽 변과 당구공의 거리, 아래쪽 변과 당구공의 거리, 당구공의 오른쪽&nbsp;이동속도, 당구공의 위쪽 이동속도를 나타내는 6개의 정수 <em>A, B, x, y, p, q</em>가 공백으로 구분되어 주어진다.&nbsp;(2&nbsp;≤&nbsp;<em>A</em>,&nbsp;<em>B&nbsp;</em>≤&nbsp;1,000,000, 0 <&nbsp;<em>x&nbsp;</em><&nbsp;<em>A</em>, 0 <&nbsp;<em>y&nbsp;</em><&nbsp;<em>B</em>, 1&nbsp;≤&nbsp;<em>p, q&nbsp;</em>≤&nbsp;1,000,000, <em>p, q</em>는 서로소)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 당구공이 멈추기 전까지 변에 몇 번 부딪히는지를 출력하라. 단, 마지막에 꼭짓점에 닿은 순간도 변에 부딪혔다고 세어야 한다. 만약 당구공이 영원히 멈추지 않는다면 -1을 출력하여라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 4 1 1 1 1
','4
','MATH'),
                                                                                                                (3180,'BAEKJOON','https://www.acmicpc.net/problem/18226',18226,'안 읽은 사람은 누구?','1초','256 MB',18,'<p><em>N</em>명이 한 채팅 프로그램에서 대화 중에 있다. 이 채팅 프로그램은 각 메시지마다 누가 보냈는지, 그 메시지를 <em>N</em>명 중에서 몇 명이 읽지 않았는지 알려준다.&nbsp;<br>
이 채팅 프로그램은 읽지 않은 사람 수를 업데이트할 때 다음과 같은 규칙을 따른다:&nbsp;</p>

<ol>
	<li>한번 프로그램에 접속하면 그동안 읽지 않았던 모든 메시지와 접속한 이후 접속 종료 전까지 올라온 모든 메시지들을 읽은 것으로 간주한다.&nbsp;</li>
	<li>메시지를 보낸 사람은 그 메시지와 그 전의 모든 메시지들은 모두 읽은 것으로 간주한다.&nbsp;</li>
</ol>

<p>모든 메시지의 발신자와 안 읽은 사람의 수를 알고 있는 호준이는 각각 누가 어디부터 메시지를 읽지 않았는지를 따져 보고, 가능한 경우의 수가 몇 가지가 있는지 알아보려고 한다. 여기서 두 경우가 다르다는 뜻은, 어떤 메시지에 대해서 메시지를 읽은 사람의 집합이 각각의 경우에서 다르다는 것을 의미한다.&nbsp;</p>

<p>예를 들어, 이 채팅 프로그램에 4명이 참여 중이고, 차례대로 두 개의 메시지가 각각 1번, 2번 사람이 보냈으며, 각각 1명, 2명이 읽지 않았다고 하면&nbsp;</p>

<ul>
	<li>첫 번째 메시지를 읽지 않은 사람 = 3번 사람, 두 번째 메시지를 읽지 않은 사람 = 1번 사람과 3번 사람&nbsp;</li>
	<li>첫 번째 메시지를 읽지 않은 사람 = 3번 사람, 두 번째 메시지를 읽지 않은 사람 = 3번 사람과 4번 사람&nbsp;</li>
	<li>첫 번째 메시지를 읽지 않은 사람 = 4번 사람, 두 번째 메시지를 읽지 않은 사람 = 1번 사람과 4번 사람&nbsp;</li>
	<li>첫 번째 메시지를 읽지 않은 사람 = 4번 사람, 두 번째 메시지를 읽지 않은 사람 = 3번 사람과 4번 사람&nbsp;</li>
</ul>

<p>의 4가지가 가능하다.&nbsp;</p>

<p>호준이는 이 경우의 수가 매우 큰 값이 나올 수 있다는 걸 깨달았기에, 경우의 수를 10<sup>9</sup>+7로 나눈 나머지를 구하려고 한다. 호준이를 도와주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 두 정수 <em>N</em>과 <em>M</em>이 공백으로 구분되어 입력된다. (1 ≤ <em>N</em> ≤ 100,000, 1 ≤ <em>M</em> ≤ 1,000,000)</p>

<p>두 번째 줄부터 <em>M</em>개의 줄에 걸쳐 각 메시지에 대한 정보인 두 정수 <em>a</em>, <em>b</em>가 공백으로 구분되어 입력된다. 메시지는 시간 순서대로이며, 생략된 메시지는 없다고 가정한다.&nbsp;<em>a</em>는 어떤 사람이 이 메시지를 보냈는지, <em>b</em>는 그 메시지를 읽지 않은 사람이 몇 명인지를 나타낸다. (1 ≤&nbsp;<em>a</em> ≤&nbsp;<em>N</em>, 0 ≤ <em>b</em> < <em>N</em>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 누가 읽지 않았는지 가능한 경우의 수를 10<sup>9</sup>+7로 나눈 나머지를 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 2
1 1
2 2
','4
','MATH'),
                                                                                                                (3181,'BAEKJOON','https://www.acmicpc.net/problem/18236',18236,'행렬 곱셈 순서 2','1초','512 MB',30,'<p>크기가 N×M인 행렬 A와 M×K인 B를 곱할 때 필요한 곱셈 연산의 수는 총 N×M×K번이다. 행렬 N개를 곱하는데 필요한 곱셈 연산의 수는 행렬을 곱하는 순서에 따라 달라지게 된다.</p>

<p>예를 들어, A의 크기가 5×3이고, B의 크기가 3×2, C의 크기가 2×6인 경우에 행렬의 곱 ABC를 구하는 경우를 생각해보자.</p>

<ul>
	<li>AB를 먼저 곱하고 C를 곱하는 경우 (AB)C에 필요한 곱셈 연산의 수는 5×3×2 + 5×2×6 = 30 + 60 = 90번이다.</li>
	<li>BC를 먼저 곱하고 A를 곱하는 경우 A(BC)에 필요한 곱셈 연산의 수는 3×2×6 + 5×3×6 = 36 + 90 = 126번이다.</li>
</ul>

<p>같은 곱셈이지만, 곱셈을 하는 순서에 따라서 곱셈 연산의 수가 달라진다.</p>

<p>행렬 N개의 크기가 주어졌을 때, 모든 행렬을 곱하는데 필요한 곱셈 연산 횟수의 최솟값을 구하는 프로그램을 작성하시오. 입력으로 주어진 행렬의 순서를 바꾸면 안 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 행렬의 개수 N(1 ≤ N ≤ 20,000)이 주어진다.</p>

<p>둘째 줄부터 N개 줄에는 행렬의 크기 r과 c가 주어진다. (1 ≤ r, c ≤ 10,000)</p>

<p>항상 순서대로 곱셈을 할 수 있는 크기만 입력으로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 입력으로 주어진 행렬을 곱하는데 필요한 곱셈 연산의 최솟값을 출력한다. 정답은 2<sup>63</sup>-1 보다 작거나 같은 자연수이다. 또한, 최악의 순서로 연산해도 연산 횟수가 2<sup>63</sup>-1보다 작거나 같다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
5 3
3 2
2 6
','90
','MATH'),
                                                                                                                (3182,'BAEKJOON','https://www.acmicpc.net/problem/18237',18237,'행렬 곱셈 순서 3','1초','512 MB',30,'<p>크기가 N×M인 행렬&nbsp;A와 M×K인&nbsp;B를 곱할 때 필요한 곱셈 연산의 수는 총 N×M×K번이다. 행렬 N개를 곱하는데 필요한 곱셈 연산의 수는 행렬을 곱하는 순서에 따라 달라지게 된다.</p>

<p>예를 들어, A의 크기가 5×3이고, B의 크기가 3×2, C의 크기가 2×6인 경우에 행렬의 곱&nbsp;ABC를 구하는 경우를 생각해보자.</p>

<ul>
	<li>AB를 먼저 곱하고 C를 곱하는 경우 (AB)C에 필요한 곱셈 연산의 수는 5×3×2 + 5×2×6 = 30 + 60 = 90번이다.</li>
	<li>BC를 먼저 곱하고 A를 곱하는 경우 A(BC)에 필요한 곱셈 연산의 수는 3×2×6 + 5×3×6 = 36 + 90 = 126번이다.</li>
</ul>

<p>같은 곱셈이지만, 곱셈을 하는 순서에 따라서 곱셈 연산의 수가 달라진다.</p>

<p>행렬 N개의 크기가 주어졌을 때, 모든 행렬을 곱하는데 필요한 곱셈 연산 횟수의 최솟값을 구하는 프로그램을 작성하시오. 입력으로 주어진 행렬의 순서를 바꾸면 안 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 행렬의 개수 N(1 ≤ N ≤ 200,000)이 주어진다.</p>

<p>둘째 줄부터 N개 줄에는 행렬의 크기 r과 c가 주어진다. (1 ≤ r, c ≤ 10,000)</p>

<p>항상 순서대로 곱셈을 할 수 있는 크기만 입력으로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 입력으로 주어진 행렬을 곱하는데 필요한 곱셈 연산의 최솟값을 출력한다. 정답은 2<sup>63</sup>-1 보다 작거나 같은 자연수이다. 또한,&nbsp;최악의 순서로 연산해도 연산 횟수가 2<sup>63</sup>-1보다 작거나 같다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
5 3
3 2
2 6
','90
','MATH'),
                                                                                                                (3186,'BAEKJOON','https://www.acmicpc.net/problem/18247',18247,'겨울왕국 티켓 예매','1초','512 MB',3,'<p>정휘는 애니메이션계의 영원한 명작이자&nbsp;최고의 흥행작 겨울왕국 2를 자그마치 싱어롱으로 관람하려고 한다!</p>

<p>겨울왕국에 등장하는 캐릭터 중 엘사를 너무 좋아하는 정휘는 L4, 즉 L열의 네 번째 자리에 앉으려고 한다.</p>

<p>그러나 정휘가 가려는 영화관은 좌석&nbsp;번호가&nbsp;자연수&nbsp;하나로 표현되기 때문에 예매를 하기가 힘들다.</p>

<p>정휘가 겨울왕국을 관람하는&nbsp;영화관은 세로로 <em>N</em>칸, 가로로 <em>M</em>칸인 좌석들로 구성되어 있다.&nbsp;</p>

<p>좌석의 번호는 좌상단 끝에 있는 A열의 첫 번째 자리부터 1번으로 시작하여 오른쪽으로 번호가 하나씩 증가하다가&nbsp;끝에 다다르면 B열의 첫 번째 자리부터&nbsp;또 오른쪽으로, C열의 첫 번째 자리부터 또 오른쪽으로 진행하는 것을 반복하면서&nbsp;숫자가 증가해 나간다.</p>

<p>정휘가 좌석 L4를 빠르게 선점하여&nbsp;Show Yourself를 신나게 부를 수 있도록&nbsp;L열의 네 번째 자리의 좌석&nbsp;번호를 구해주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트 케이스의 개수 <em>T</em>(1 ≤ <em>T</em> ≤ 20)이 주어진다.</p>

<p>각 테스트 케이스는 한 줄로 구성되며,&nbsp;각각&nbsp;두 개의 자연수 <em>N</em>, <em>M</em>(1 ≤ <em>N</em> ≤ 26, 1 ≤ <em>M</em> ≤ 9)이 주어진다. <em>N</em>은 영화관 자리의 열 개수, <em>M</em>은 영화관 한 열에 속한 좌석&nbsp;개수를 의미한다.</p>

<p>아래 사진은 <em>N</em> = 4, <em>M</em> = 6인 경우이다.</p>

<p><img alt="" src="https://upload.acmicpc.net/2f8aa813-5fa1-4022-a3d6-55478030b9a2/-/preview/" style="height: 150px; width: 300px;"></p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해, 한 줄에 하나씩 L열의 네 번째 자리의&nbsp;좌석&nbsp;번호를 출력한다. 만약 영화관에 L열 네 번째&nbsp;자리가&nbsp;존재하지 않는다면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p><img alt="" src="https://upload.acmicpc.net/90113857-f281-4653-9342-c2e6625f831e/-/preview/"></p>

<p><strong>L4</strong></p>

<p>TMI) 출제자는 겨울왕국2를 아직도 보지 않았습니다.</p>

				</div>
				</div>','1
13 4
','48
','MATH'),
                                                                                                                (3196,'BAEKJOON','https://www.acmicpc.net/problem/18286',18286,'직사각형 색칠 2','1초','512 MB',18,'<p>단위 정사각형으로 나누어져 있는 N×M 크기의 직사각형이 주어졌을 때, 아래 조건을 만족하게 색칠하는 방법의 수를 구하는 프로그램을 작성하시오.</p>

<ul>
	<li>모든 칸은 검정색 또는 흰색 중 하나로 색칠해야 한다.</li>
	<li>같은 색으로 이루어진 2×2 크기의 정사각형이 없어야 한다.</li>
</ul>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/fdddd240-0eee-4363-891b-8cea411d42fc/-/preview/" style="width: 392.5px; height: 125px;"></p>

<p style="text-align: center;">N = 3, M = 3인 경우 올바른 색칠 방법</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/26ba28b2-9239-4c12-9b5c-5d72e7a32eca/-/preview/" style="width: 393.333px; height: 125px;"></p>

<p style="text-align: center;">N = 3, M = 3인 경우 올바르지 않은 색칠 방법</p>

<p>N, M이 주어졌을 때,&nbsp;N×M 크기의 직사각형을 올바르게 색칠하는 방법의 수를 1,000,000,007로 나눈 나머지를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N (1 ≤ N ≤ 10<sup>18</sup>), M (1 ≤ M ≤ 5)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 N×M 크기의 직사각형을 올바르게 색칠하는 방법의 수를&nbsp;1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 2
','14
','MATH'),
                                                                                                                (3193,'BAEKJOON','https://www.acmicpc.net/problem/18287',18287,'체스판 이동','2초','512 MB',18,'<p>크기가 N×M인 체스판이 있다. 체스판의 행 번호는 위에서부터 1, 2, ..., N이고, 열 번호는 왼쪽에서부터 1, 2, ..., M이다. 체스판의 각 칸은 (i, j)로 표현하고, i는 행 번호, j는 열 번호이다.</p>

<p>체스판의 각 칸은 흰색 또는 검정색으로 색칠되어 있다. (i+j)가 2로 나누어 떨어지면 칸 (i, j)의 색은 검정색, 그 외에는 흰색이다. 두 칸이 변이나 점을 공유하면 인접한 칸이다. 칸의 색상과 행&nbsp;번호에 따라서 이동할 수 있는 방법이 다르다. 이동은 행 번호가 증가하는 쪽으로만 이동할 수 있다.</p>

<ul>
	<li>행 번호가 홀수인 경우
	<ul>
		<li>검정색 칸에 있으면, 인접한 검정색 칸으로 이동할 수 있다.</li>
		<li>흰색 칸에 있으면, 인접한 흰색 칸으로 이동할 수 있다.</li>
	</ul>
	</li>
	<li>행 번호가 짝수인 경우
	<ul>
		<li>인접한 칸으로 이동할 수 있으며, 홀수 행과는 다르게 색상과 관련된 제한은 없다.</li>
	</ul>
	</li>
</ul>

<p>1번 행에서 출발해서 N번 행에 도착하는 방법의 수를 구해보자. 이동은 1번 행에 있는 칸 중 임의의 하나에서 출발할 수 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N (1 ≤ N ≤ 10<sup>9</sup>), M(1 ≤ M ≤ 30)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>1번 행에서 출발해서 N번 행에 도착하는 방법의 수를 10<sup>9</sup>+7로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 5
','5
','MATH'),
                                                                                                                (3194,'BAEKJOON','https://www.acmicpc.net/problem/18289',18289,'팀 연습 더','1초','512 MB',19,'<p>A, B, C 세 사람이 다가오는 ICPC 대회를 위해 팀 연습을 하려고 한다. ICPC 대회는 팀 대회이기 때문에, 어떤 사람이 어떤 문제를 풀지 결정하는 것도 중요하다. 따라서, 오늘 연습은 세 사람이 모두 풀 수 있는 문제 N개를 풀 것이다. 문제는 1번부터 N번까지 번호가 매겨져 있다.</p>

<p>세 사람이 문제 N개를 푸는 방법은 다음과 같다.</p>

<ul>
	<li>문제는 1번부터 문제 번호가 증가하는 순서대로 해결해야 한다.</li>
	<li>각 문제를 푸는 사람은 세 사람 중 한 명이다.</li>
	<li>A가 해결한 문제의 수는 K의 배수가 되어야 한다.</li>
	<li>B는 문제를 연속해서 풀 수 없다.</li>
	<li>C는 한 문제 이상 해결해야 한다.</li>
</ul>

<p>N과 K가 주어졌을 때, 문제를 푸는 사람을 정하는 방법의 수를 모두 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N (1 ≤ N ≤ 10<sup>18</sup>), K (0 ≤ K ≤ 10)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제 N개를 모두 푸는 사람을 정하는 방법의 수를 1,000,000,007로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 0
','3
','MATH'),
                                                                                                                (3195,'BAEKJOON','https://www.acmicpc.net/problem/18291',18291,'비요뜨의 징검다리 건너기','1초','256 MB',11,'<p>비요뜨는 지금 강 앞에 서 있다. 강 위에는 징검다리가 놓여 있다.</p>

<p>징검다리는 비요뜨가 있는 방향에서부터 반대 방향까지 차례로 1번, 2번, ..., <em>N</em>번의 번호를 가지고 있다.</p>

<p>비요뜨는 1번 징검다리 위에 올라갔다. 그리고 아래 두 가지 규칙을 지키며&nbsp;징검다리를 건너려고 한다.</p>

<ul>
	<li>1 ≤&nbsp;<em>X</em>&nbsp;≤ <em>N</em>&nbsp;인 임의의 정수 <em>X</em>에 대해, 현재 있는 징검다리의 번호를&nbsp;<em>i</em>번이라고 할 때 <em>i+X</em>번 징검다리로 뛸 수 있다.</li>
	<li><em>N</em>번째 징검다리를 지나쳐선 안 되고, 정확히 도착해야 한다</li>
</ul>

<p>비요뜨는 자신의 특기인 코딩을 살리기 위해 노트북을 켰지만, 실수로 노트북을 강에 빠뜨리고 말았다.</p>

<p>비요뜨를 대신해 강을 건너는 경우의 수를 구해 주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에&nbsp;테스트 케이스의 수 <em>T</em>가 주어진다. (1&nbsp;≤ <em>T</em>&nbsp;≤ 1000)</p>

<p>각 테스트 케이스는 한 줄로 구성되며, 징검다리의 개수를 의미하는 <em>N</em>이 주어진다.&nbsp;(1 ≤ <em>N</em>&nbsp;≤ 10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해, 한 줄에 하나씩&nbsp;규칙을 만족하면서 징검다리를 건너는 경우의 수를 10<sup>9</sup>+7로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
4
','4
','MATH'),
                                                                                                                (3205,'BAEKJOON','https://www.acmicpc.net/problem/18310',18310,'안테나','1초','256 MB',8,'<p>일직선 상의 마을에 여러 채의 집이 위치해 있다. 이중에서 특정 위치의 집에 특별히 한 개의 안테나를 설치하기로 결정했다. 효율성을 위해 안테나로부터 모든 집까지의 거리의 총 합이 최소가 되도록 설치하려고 한다. 이 때 안테나는 집이 위치한 곳에만 설치할 수 있고, 논리적으로 동일한 위치에 여러 개의 집이 존재하는 것이 가능하다.</p>

<p>집들의 위치 값이 주어질 때, 안테나를 설치할 위치를 선택하는 프로그램을 작성하시오.</p>

<p>예를 들어 <em>N</em>=4이고, 각 위치가 1, 5, 7, 9일 때를 가정하자.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/4da9d177-d4d8-4cf7-9f91-a75d5a6ec5e6/-/preview/" style="height: 65px; width: 347.5px;"></p>

<p>이 경우 5의 위치에 설치했을 때, 안테나로부터 모든 집까지의 거리의 총 합이 (4+0+2+4)=10으로, 최소가 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 집의 수 <em>N</em>이 자연수로 주어진다.&nbsp;(1≤<em>N</em>≤200,000) 둘째 줄에 <em>N</em>채의 집에 위치가 공백을 기준으로 구분되어 1이상 100,000이하의 자연수로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 안테나를 설치할 위치의 값을 출력한다. 단, 안테나를 설치할 수 있는 위치 값으로 여러 개의 값이 도출될 경우 가장 작은 값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
5 1 7 9
','5
','MATH'),
                                                                                                                (3229,'BAEKJOON','https://www.acmicpc.net/problem/18345',18345,'순례자의 기억과 감명받은 신','8초','1024 MB',24,'<p>순례자는 영원히 끝나지 않을 것만 같은 순례를 계속하고 있다. 지상에는 총 $N^2$ 개의 성지가 있다. 이 성지들은 $N \times N$ 격자 모양으로 배치가 되어있으며, 위쪽에서 $i$번째, 왼쪽에서 $j$번째 성지를 $(i, j)$번 성지라고 한다. 성지에 도착한 순례자는 <strong>흑색 시련</strong>과 <strong>백색 시련</strong>&nbsp;둘 중 하나를 반드시 받게 된다. 흑색 시련이란 본인의 업을 치르게 되는 "카르마에 의한 시련"이고, 백색 시련은 본인의 격을 높이기 위한 "상승을 위한 시련"이다.</p>

<p>순례자는 "현세"를 뜻하는 $(1, 1)$번 성지에서 시련을 받는 것으로 순례를 시작한다. $(i, j)$번 성지의 시련을 받은 순례자는 $(i+1, j)$번 성지와 $(i, j+1)$번 성지 중 하나로 이동하여 시련을 계속 받는 것을 반복한다. 그렇게 "해탈"을 뜻하는 $(N, N)$번 성지에 도달하여 마지막 시련을 받아, 총 $2N-1$ 개의 성지를 방문한 한 번의 순례가 끝난다.</p>

<p>이런 방식으로 총 $\binom{2N-2}{N-1}$가지의 서로 다른 순례를 할 수 있다. 그렇게 순례자는 해탈의 경지에 도달하기 위하여, 모든 방식의 순례를 정확히 한 번씩 시행했다.</p>

<p>모든 순례가 끝나 잠시 쉬고 있는 순례자는 이번 순례의 기억을 되새기고 있다. 순례자의 기억은 순례자가 순례 중 이동할 수 있는 가능성이 있는 순서대로 한 개 이상의 성지를 나열한 것이다. 정확히 말해서, $l$ 개의 성지 $(i_1,j_1)$, $(i_2,j_2)$, $\cdots$, $(i_l,j_l)$로 이루어진 기억은, $i_1 \le i_2 \le \cdots \le i_l$, $j_1 \le j_2 \le \cdots \le j_l$, $(i_{k-1},j_{k-1})\neq(i_k,j_k)$ ($2 \leq k \le l$)의 모든 조건을 만족해야 한다.</p>

<p>예를 들면, $N=2$일 때, 순례자가 떠올릴 수 있는 기억은 다음과 같이&nbsp;총 $4 + 5 + 2 = 11$가지가 있다.</p>

<p>&nbsp;</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/ed166dbc-1972-4b01-8318-c0c3dc008c5d/-/preview/" style="height: 209.167px; width: 385.833px;"><br>
&nbsp;</p>

<p>자애롭고 전지전능하신 신께서는 이 모든 것을 지켜보았고, 큰 감명을 받았다. 신은 어떤 성지에서 시련을 받았느냐보다도 어떤 시련을 받았느냐를 더 중요히 여기기 때문에, 순례자의 기억에 등장하는 성지를 모두 그 성지에 대응되는 시련으로 바꿔 인식한다. 신은 순례자의 기억을 모두 보고 나서, 한 번 이상 등장하는 기억에 대해, 이 기억이 총 $X$번 등장한다면 $X^2+1$만큼 감명받는다. 이렇게 신이 감명하는 정도의 총합을 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에, 격자의 크기를 의미하는 자연수&nbsp;$N$이 주어진다.</p>

<p>다음 $N$ 개의 줄의 $i$ 번째 줄에, 길이 $N$의 <code>0</code>과 <code>1</code>로만 구성된 문자열이 주어진다. $j$번째 문자가 <code>0</code>이라는 것은, $(i, j)$번 성지에서 흑색 시련을 받는다는 것을 의미하고, <code>1</code>이라는 것은 $(i, j)$번 성지에서 백색 시련을 받는다는 것을 의미한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에, 신이 감명하는 정도를 구하여 $10^9+7$로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
00
00
','48
','MATH'),
                                                                                                                (3221,'BAEKJOON','https://www.acmicpc.net/problem/18346',18346,'업과 격의 그래프','1초','1024 MB',25,'<p>순례자는 영원히 끝나지 않을 것만 같은 순례를 계속하고 있다. 순례자는 반복되는 순례에서 대륙 서부에 있는 지역과 대륙 동부에 있는 지역의 전통 차이를 알게 되었다. 대표적으로, <strong>업과 격의 그래프</strong>를 칠하는 방법이 서로 다르다는 점이 있다.</p>

<p>업과 격의 그래프란 그래프의 각 정점에 업을 의미하는 색인 검은색 혹은 격을 의미하는 색인 하얀색을 칠해둔 것인데, 대륙의 모든 도시는 신을 기리기 위한 의미로 업과 격의 그래프 하나를 도시 중앙에 두고 있다. 그리고 가끔&nbsp;그래프의 정점들을 새롭게 칠하는 축제를 열면서, 신에 대한 믿음을 더욱 공고히 한다.</p>

<p>업과 격의 그래프에 담긴 의미 때문에, 정점을 칠하는 방법은 특별해야 한다. 그리고 놀랍게도, 정점을 칠하는 방법은 대륙 서부와 대륙 동부가 서로 다르다.</p>

<ul>
	<li>대륙 서부에서는, 어떤 간선으로 연결된 두 정점의 색이 같을 때 두 정점의 색을 모두 반대&nbsp;색으로 칠하는 방식으로만 정점을 색칠한다.</li>
	<li>대륙 동부에서는, 어떤 간선으로 연결된 두 정점의 색이 같을 때 두 정점 중 한 정점의 색을 반대&nbsp;색으로 칠하는 방식으로만 정점을 색칠한다.</li>
</ul>

<p>여기서 당연하게도 검은색의 반대&nbsp;색은 하얀색이고, 하얀색의 반대&nbsp;색은 검은색이다.</p>

<p>어떤 업과 격의 그래프가 주어질 때, 이 그래프의 정점들이 칠해질 수 있는 서로 다른 방법이 총 몇 가지 있는지 대륙 서부의 방식과 대륙 동부의 방식 각각에 대해 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에,&nbsp;주어지는 그래프의 정점 개수와 간선 개수를 나타내는 정수 $N$과 $M$이 주어진다. 그래프의 각 정점에는 $1$에서 $N$까지의 번호가 붙는다.</p>

<p>두 번째 줄에,&nbsp;각 정점에 칠해진 색을 의미하는 문자열 $C$가 주어진다. 문자열은 <code>0 </code>또는 <code>1</code>로 이루어져 있으며, $i$번째 문자가 <code>0</code>이면 $i$번 정점이 검은색으로 칠해져 있고, <code>1</code>이면 $i$번 정점이 하얀색으로 칠해져 있다.</p>

<p>다음 $M$ 개의 줄의 각 줄에는 간선으로 연결된 두 정점을 나타내는 자연수 $x,y$ ($1 \leq x, y \leq N$, $x \neq y$)가 주어진다. 같은 두 정점 쌍을 연결하는 간선이 여러 번 주어지지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에, 대륙 서부의 방식과 대륙 동부의 방식으로 그래프의 정점을 칠할 때 그래프의 정점들이 칠해질 수 있는 서로 다른 방법의 개수를 공백 하나로 구분하여 출력한다. 칠하는 방법이 매우 많을 수 있으므로, 둘 다 $1\ 000\ 000\ 007$로 나눈 나머지를 출력하도록 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 1
11
1 2
','2 3
','MATH'),
                                                                                                                (3212,'BAEKJOON','https://www.acmicpc.net/problem/18347',18347,'완벽한 순례','1초','1024 MB',22,'<p>순례자는 영원히 끝나지 않을 것만 같은 순례를 계속하고 있다. 순례자는 위치한 성지에서 다른 성지로 이동하고, 성지에 도착할 때마다 신께 기도를 드린다.</p>

<p>지상의 중앙에는 <strong>대성지</strong>가 있어, 대성지를 기준으로 성지들이 일정한 간격으로 나열되어 있다. 어떤 성지의 위치는 $(X,Y)$로 나타낼 수 있는데, 이 성지가 대성지로부터 동쪽으로 $X$마일 ($X < 0$인 경우, 서쪽으로 $-X$마일), 북쪽으로 $Y$마일 ($Y < 0$인 경우, 남쪽으로 $-Y$마일) 떨어진 곳에 있다는 뜻이다. 여기서 마일이란, 신이 천 걸음 걸었을 때 이동한 거리를 뜻한다.</p>

<p>그렇게 $-2^{31} \leq X,Y < 2^{31}$인 모든 정수 $X,Y$에 대해 $(X,Y)$에 성지가 존재하며, 지상에는 정확히 $2^{64}$ 개의 성지가 있게 된다.</p>

<p>순례자는 이 중 $N$ 개의 성지를 선택하여 순서대로 순례한 다음 처음으로 선택한 성지로 돌아오려고 한다. 이 성지들의 위치는, 완벽한 신이 가장 좋아하는 완벽한 모양인 정$N$각형을 본떠서 선택할 것이다. 정$N$각형의 특징은 매우 많지만, 대표적으로 다음과 같은 것이 있다.</p>

<ul>
	<li>볼록 다각형이다.</li>
	<li>모든 변의 길이가 같다.</li>
	<li>모든 각의 크기가 같다.</li>
</ul>

<p>순례자는 선택한 성지들이 정$N$각형 모양을 이루도록 하고 싶었지만, 문제점이 있었다. $i$번째로 선택한 성지의 위치를 $(X_i, Y_i)$로 표현할 때, $X_i, Y_i$가 모두 정수이기 때문에 정$N$각형을 완벽히 만들지 못할 수도 있다는 사실을 깨달았기 때문이다.</p>

<p>그래서 그 대신 조건을 완화하여 다음의 조건을 만족하도록 성지를 선택하려고 한다. 편의를 위해서 $N+i$번째 성지와 $i$번째 성지를 같은 것으로 생각한다.</p>

<ul>
	<li>$i$ 번째, $i+1$ 번째, $i+2$ 번째 성지가 반시계방향으로 위치해 있다.</li>
	<li>$i$ 번째와 $i+1$ 번째 성지간의 유클리드 거리를 $L_i = \sqrt{(X_i - X_{i+1})^2 + (Y_i - Y_{i+1})^2}$ 라고 하자. 이 때, $1$ 이상 $N$이하의 정수 $i$에 대해, $L_i = L_1$을 만족하는 $i$가 $K$ 개 이상 존재해야 한다.</li>
	<li>$2$ 이상 $N-2$ 이하의 $k$에 대해, $i$ 번째 성지와 $i+1$ 번째 성지를 연결하는 선분과, $i+k$ 번째 성지와 $i+k+1$ 번째 성지를 연결 하는 선분은 서로 만나서는 안된다.</li>
</ul>

<p>순례자가 조건을 만족하면서 $N$ 개의 성지를 선택할 수 있는지 없는지의 여부를 구하고, 선택할 수 있다면 어떤 위치에 있는 성지들을 어떤 순서로 선택해야 하는지 구하여라</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에, 선택할 성지의 개수와 성지의 거리에 대한 조건을 나타내는 두 자연수 $N$, $K$ ($3 \le N \le 2\ 500, 1 \le K \le N$)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 조건을 만족하면서 $N$ 개의 성지를 선택할 수 있는지 없는지의 여부를 <code>YES</code>혹은 <code>NO</code>로 출력한다.</p>

<p>성지를 선택할 수 있는 경우, 다음 줄부터 시작하여 $N$ 개의 줄에 걸쳐 선택한 성지들의 위치를 출력한다. $i$ 번째 줄에는 $i$ 번째로 선택된 성지의 위치를 나타내는 두 정수 $X_i$와 $Y_i$를 공백으로 구분하여 출력한다. 출력된 모든 위치에 성지가 존재해야만 정답으로 인정된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 3
','YES
0 0
13 0
8 12
5 12
','MATH'),
                                                                                                                (3210,'BAEKJOON','https://www.acmicpc.net/problem/18348',18348,'질서와 혼돈','1초','1024 MB',22,'<p>순례자는 영원히 끝나지 않을 것만 같은 순례를 계속하고 있다. 순례자는 위치한 성지에서 다른 성지로 이동하고, 성지에 도착할 때마다 신께 기도를 드린다.</p>

<p>지상에는 총 $N$ 개의 성지가 있어 $1$에서 $N$사이의 번호가 붙어있고, $i$번 성지에는 성직자가 $i$명 있다. 순례자는 적당한 순서를 정해서, 모든 성지를 정확히 한 번씩 방문해서 시작했던 성지로 돌아오는 순례 계획을 세우고 있다.</p>

<p>순례자가 $i$번 성지에서 $j$번 성지로 이동할 때, $i$번 성지에 있는 성직자와 $j$번 성지에 있는 성직자 총 $i+j$ 명이 순례자와 순례의 안녕을 기원하는 정신적인 의식을 거행한다. 순례자는 $N$번 이동하기 때문에 의식은 총 $N$번 열리는데, 각각의 의식에 몇 명이 모였는지에 따라 의식은 질서의 성질 혹은 혼돈의 성질을 갖게 된다.</p>

<p>성직자 $x$명의 정신을 일렬로 세우지 않고 직사각형 모양으로 배치 할 수 있다면, $x$를 <strong>질서의 수</strong>라고 한다. 즉, $x = pq$인 1보다 큰 자연수 $p$와 $q$가 존재하면 $x$를 질서의 수라고 한다. 그리고 질서의 수가 아닌 자연수들은 <strong>혼돈의 수</strong>이다. 질서의 수의 예로는 $420$, $123$ 등이 있고 혼돈의 수의 예로는 $2$, $3$, $7$, $1\ 000\ 000\ 007$ 등이 있다.</p>

<p>어떤 의식에 모인 사람의 수가 질서의 수가 되면, 그 의식은 <strong>질서의 의식</strong>이 된다. 그것이 아니라면 사람의 수가 혼돈의 수가 되기 때문에, 그 의식은 <strong>혼돈의 의식</strong>이 된다.</p>

<p><strong>질서의 순례자</strong>는 순례하는 과정에서 질서의 의식이 최대한 많았으면 좋겠다고 생각하고, <strong>혼돈의 순례자</strong>는 순례하는 과정에서 혼돈의 의식이 최대한 많았으면 좋겠다고 생각한다. 각 순례자를 위해서 어떤 순서로 성지를 순례해야 하는지 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에, 문자열 $S$와 성지의 개수를 나타내는 자연수 $N$이 공백으로 구분되어 주어진다. $S$는 <code>order</code>혹은 <code>chaos</code>이다. $S$가 <code>order</code>인 경우에는 질서의 순례자가 순례하고, <code>chaos</code>인 경우에는 혼돈의 순례자가 순례한다는 것을 의미한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에, 순례자가 성지를 방문하는 순서를 의미하는 $N$ 개의 수를 공백으로 구분하여 출력하라. 가능한 방문 순서가 여럿 있을 경우 그중 아무거나 하나를 출력해도 좋다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','chaos 4
','1 2 3 4
','MATH'),
                                                                                                                (3211,'BAEKJOON','https://www.acmicpc.net/problem/18350',18350,'순례의 끝','1초','1024 MB',25,'<p>순례자는 영원히 끝나지 않을 것만 같은 순례를 계속하고 있다. 순례자는 위치한 성지에서 다른 성지로 이동하고, 성지에 도착할 때마다 신께 기도를 드린다. 그리고 이것을 계속 반복한다.</p>

<p>지상에는 총 $N$ 개의 성지가 있어 $1$에서 $N$사이의 번호가 붙어있다. 순례자가 $i$번 성지에서 $j$번 성지로 이동하는 데는 정확히 $L_{i,j}$분이 걸리며,&nbsp;서로 다른 두 성지를 오가는 데 드는 시간은 다를 수 있다. 이동을 마쳐 순례자가 $i$번 성지에 도착하면 정확히 $P_i$분 간 신께 기도를 드린다.</p>

<p>기도를 마친 순례자는 신의 계시에 따라 그 어떤 지체도 없이 다음 성지로 이동한다. 신은 순례자가 위치한 성지를 제외한 나머지 $N-1$ 개의 성지 중 하나를 모두 동일한 $\frac{1}{N-1}$의 확률로 선택하여 순례자에게 알려주고, 순례자는 즉시 그곳으로 이동한다. 신은 전능하고, 순례자는 아주 기민하므로 이동과 기도, 기도와 이동 사이에 드는 시간은 지연 없이 0분이다.</p>

<p>순례자가 도착한 성지에서 기도를 마쳤을 때, 가장 최근에 들린 $N$ 개의 성지가 모두 서로 다른 곳이라면, 그의 숭고한 여정이 드디어 끝을 맺어 신이 예비하신 나라에 들어설 수 있게 된다.</p>

<p>이제 순례자가 가장 최근에 들린 성지 $N$ 개가 순서대로 주어진다. 순례자가 현재 위치한 성지에서 기도를 마치고 다시 이동을 시작하는 시점부터, 순례가 끝을 맺는 데 드는 시간의 기댓값을 구하여라.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에, 성지의 개수를 나타내는 자연수 $N$ 과 <strong>소수</strong> $X$ ($10^9 \leq X \leq 10^9 + 10^4$)가 주어진다. $X$의 용도는 출력 부분을 참고하면 된다.</p>

<p>두 번째 줄에, 각 성지에서 기도하는 데 드는 시간을 나타내는 자연수 $P_1, P_2, \cdots, P_N$ ($1 \leq P_i \leq 10^6$)가 주어진다.</p>

<p>다음 $N$ 개의 줄의 $i$ 번째 줄에, 각 성지를 이동하는 데 드는 시간을 나타내는 음이 아닌 정수 $L_{i,1}, L_{i,2}, \cdots, L_{i,N}$ ($0 \leq L_{i,j} \leq 10^6$, $L_{i,i}=0$)이 주어진다.</p>

<p>다음 줄에는 기댓값을 구해야 하는 횟수 $Q$ ($1 \leq Q \leq 10^5$)가 주어진다.</p>

<p>다음 $Q$ 개의 줄의 각 줄에는 $N$ 개의 자연수 $M_1, M_2, \cdots, M_N$ ($1 \leq M_i \leq N$, $M_{i-1} \neq M_i$)이 주어진다. $M_1$이 가장 오래전에 방문한 성지 번호, $M_N$이 가장 최근에 방문한 성지 번호다. $M$이 주어진 순서대로 성지를 방문했을 때, $M_N$번 성지에서 기도를 마치고 다시 이동을 시작하는 시점부터, 순례가 끝을 맺는 데 드는 시간의 기댓값을 구해 출력해야 한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>$Q$ 개의 줄에 걸쳐 정답을 출력한다. 이 문제에서 주어질 수 있는 모든 입력에 대해 기댓값이 유리수임이 증명되어 있으므로&nbsp;다음과 같은 방식으로 출력한다.</p>

<p>$i$번째로 주어진 방문 순서에 대한 기댓값을 기약분수로 나타냈을 때, $\frac{P_i}{Q_i}$ 라고 하자. $i$번째 줄에는 $P_i \equiv Q_i R_i (mod \; X)$을 만족하는 $0$이상 $X$미만의 정수 $R_i$를 출력하면 된다. 이 문제에서 주어질 수 있는 모든 입력에 대해 이런 $R_i$가 유일하게 존재함이 확인되어 있다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 1000000007
1 4 9
0 1 2
3 0 4
5 6 0
3
1 2 3
2 1 2
3 2 1
','0
666666688
0
','MATH'),
                                                                                                                (3214,'BAEKJOON','https://www.acmicpc.net/problem/18354',18354,'다항식과 쿼리 2','5초','512 MB',24,'<p>차수가 N이고 계수가 정수인 다항식 f(x) = a<sub>0&nbsp;</sub>+ a<sub>1</sub>x + a<sub>2</sub>x<sup>2</sup>&nbsp;+ ... + a<sub>N</sub>x<sup>N</sup>이 주어진다.</p>

<p>K개의 정수 x<sub>1</sub>, x<sub>2</sub>, ..., x<sub>K</sub>가 주어졌을 때, f(x<sub>1</sub>), f(x<sub>2</sub>), ..., f(x<sub>K</sub>)를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 다항식의 차수 N(0 ≤ N ≤ 250,000)이 주어진다.</p>

<p>둘째 줄에는 N+1개의 정수가 주어진다. i번째 정수는 다항식의 계수 a<sub>i-1</sub>이다. (0 ≤ a<sub>i</sub>&nbsp;< 1,030,307)</p>

<p>셋째 줄에는 정수의 개수 K가 주어진다. (1 ≤ K ≤ 250,000)</p>

<p>넷째 줄에는 x<sub>1</sub>, x<sub>2</sub>, ..., x<sub>K</sub>가 주어진다. (0 ≤ x<sub>j</sub>&nbsp;< 1,030,307)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>총 K개의 줄을 출력한다. i번째 줄에는 f(x<sub>i</sub>)의 값을 1,030,307로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1 2 3
3
7 8 9
','162
209
262
','MATH'),
                                                                                                                (3220,'BAEKJOON','https://www.acmicpc.net/problem/18380',18380,'전자식 계산기 (Calculator)','1초(추가시간없음)','1024 MB',19,'<p>오늘 알고리즘 과목의 기말고사가 있는 메시는 시험을 위해 컴퓨터를 들고 오라는 말을 들었다. 메시는 계산기도 컴퓨터 아님?이라고 생각하여 시험 날 집에서 계산기 하나를 들고 시험장으로 향했다. 시험에는 단 한 문제가 출제되었는데, KMP 알고리즘을 구현하면 되는 문제였다. 그러나 메시는 사칙연산밖에 할 수 없는 계산기로 KMP를 짤 수 없어 절망에 빠져 있었다.</p>

<p>다행히도 이 시험은 주어진 입력에 대해서 답만 맞으면 정답 처리된다고 한다. 메시를 위해 계산기로 문자열 검색 프로그램을 만들어 주자.</p>

<p>메시의 계산기에서 사용하는 수는 998,244,353진법으로 한 자리 수이다. 이 계산기는 mem[0]부터 mem[10<sup>5</sup> - 1]까지 10<sup>5</sup>개의 저장소를 가지고 있으며, 주어진 프로그램에 적힌 명령어를 순차적으로 실행한다. 프로그램의 입력은 크기가 N인 수열 A와 크기가 M인 수열 B로, 저장소는 초기에 mem[1]부터 mem[N]까지는 수열 A가, mem[N + 1]부터 mem[N + M]까지는 수열 B가 저장되어 있고, 나머지 저장소는 0으로 되어있는 상태이다. 수열 A와 B을 이루는 수들은 모두 0&nbsp;이상 9&nbsp;이하의 정수이다. 프로그램이 끝났을 때 mem[0]에는 A[i...i + M - 1]=B[1...M]인 1 ≤&nbsp;i&nbsp;≤&nbsp;N - M + 1의 개수가 저장되어 있어야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>1번째 줄에 수열 A의 크기&nbsp;N과 수열 B의 크기&nbsp;M이 공백으로 구분되어 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>메시에게 필요한 프로그램을 출력한다. 프로그램은 다음과 같은 명령어를 최대 10<sup>6</sup>개 사용할 수 있다.</p>

<ul>
	<li>set a&nbsp;b&nbsp;: mem[a]를 b로 바꾼다. (0&nbsp;≤&nbsp;a < 10<sup>5</sup>, 0&nbsp;≤&nbsp;b < 998,244,353)</li>
	<li>add a&nbsp;b&nbsp;c&nbsp;: mem[a]를 mem[b] + mem[c]로 바꾼다. (0&nbsp;≤&nbsp;a, b, c < 10<sup>5</sup>)</li>
	<li>sub a&nbsp;b&nbsp;c&nbsp;: mem[a]를 mem[b] - mem[c]로 바꾼다. (0&nbsp;≤&nbsp;a, b, c < 10<sup>5</sup>)</li>
	<li>mul a&nbsp;b&nbsp;c&nbsp;: mem[a]를 mem[b] × mem[c]로 바꾼다. (0&nbsp;≤&nbsp;a, b, c < 10<sup>5</sup>)</li>
	<li>div a&nbsp;b&nbsp;c&nbsp;: mem[a]를 ?mem[b] / mem[c]?로 바꾼다. (0 ≤ a, b, c < 10<sup>5</sup>)</li>
</ul>

<p>add, sub, mul 명령어에서 연산의 결과가 998,244,353&nbsp;이상이거나 0&nbsp;미만일 경우 998,244,353으로 나눈 나머지가 대신 저장되며, div 명령어에서 mem[c] = 0일 경우 오답 처리된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1
','sub 3 1 2
set 4 100
set 5 99
add 3 3 3
add 3 3 3
add 3 3 3
add 3 3 3
add 3 3 3
add 3 3 3
add 3 3 3
add 3 3 3
add 3 3 3
add 3 3 3
add 3 3 5
div 3 3 4
add 3 3 5
div 3 3 4
add 3 3 5
div 3 3 4
add 3 3 5
div 3 3 4
add 3 3 5
div 3 3 4
set 6 1
sub 0 6 3
','MATH'),
                                                                                                                (3219,'BAEKJOON','https://www.acmicpc.net/problem/18381',18381,'XOR과 집합과 트리와 쿼리','2초(추가시간없음)','1024 MB',21,'<p>양의 정수를 원소로 갖는 유한집합 S에 대해, f(S)를&nbsp;아래&nbsp;조건을 만족하는 유한집합 중 가장 크기가 작은 집합으로&nbsp;정의하며,&nbsp;이러한 집합은&nbsp;유일하게 존재한다.</p>

<ul>
	<li>S ⊆ f(S).</li>
	<li>임의의 양의 정수 x, y에 대해 x, y ∈ f(S), x ≠ y이면&nbsp; x ? y ∈ f(S)이다. (단, ?는 Bitwise-XOR)</li>
	<li>임의의 양의 정수 x에 대해 x ∈ f(S)이고&nbsp;x <&nbsp;2<sup>1000</sup>이면 2x&nbsp;∈ f(S)이다.</li>
	<li>임의의 양의 정수 x에 대해 2x ∈ f(S)이고&nbsp;x <&nbsp;2<sup>1000</sup>이면&nbsp;x ∈ f(S)이다.</li>
</ul>

<p>점이 N개인 트리가 있다. 1&nbsp;≤ i&nbsp;≤ N인 모든 i에 대해, i번 정점에는 양의 정수 A<sub>i</sub>가 적혀있다. 이 때, 아래와&nbsp;같은 Q개의 쿼리를 처리해야 한다.</p>

<p>쿼리 u, v에 대해, u번 정점에서 v번 정점에 이르는 최단경로에 포함되는 점들의 집합을 P라고 하자. 이 때 집합 f({ A<sub>r</sub> | r&nbsp;∈ P&nbsp;})의 원소 중 최솟값을 출력해야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>1번째 줄에 정점의 개수 N, 쿼리의 개수 Q가 공백으로 구분되어 주어진다.</p>

<p>2번째 줄에 각 정점에 적힌 양의 정수 A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>N</sub>이 공백으로 구분되어 주어진다.</p>

<p>3번째 줄부터 N - 1개의 줄에 트리의 간선이 연결하는 두 정점의 번호 a,&nbsp;b가 공백으로 구분되어 주어진다.</p>

<p>N + 2번째 줄부터 Q개의 줄에 쿼리를 나타내는 두 정수 u, v가 공백으로 구분되어 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>쿼리가 주어질 때마다 쿼리의 답을 한 줄에 하나씩, 총 Q개 줄에 걸쳐 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 2
15 8 39
1 2
1 3
3 2
1 3
','1
5
','MATH'),
                                                                                                                (3332,'BAEKJOON','https://www.acmicpc.net/problem/18791',18791,'N의 배수 (2)','1초(추가시간없음)','512 MB',24,'<p>$2N-1$개의 수가 주어진다. 이 중 합이 $N$으로 나누어 떨어지는 수 $N$개를 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 $N$이 주어진다. ($1 \le N \le 5\ 000$)</p>

<p>둘째 줄에 $0$이상 $N$미만의 수 $2N-1$개가 공백으로 구분되어 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에, 조건을 만족하는 수 $N$개를 공백으로 구분하여 출력한다.</p>

<p>답을 만족하는 경우가 여럿 있는 경우, 그 중 임의의 하나를 출력하면 정답으로 인정된다. 출력하는 수들의 순서는 관계 없다.</p>

<p>답을 만족하는 수들이 존재하지 않는 경우 <code>-1</code>을 출력하여라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 2 3 0 1 2 3
','1 1 3 3
','MATH'),
                                                                                                                (3333,'BAEKJOON','https://www.acmicpc.net/problem/18792',18792,'N의 배수 (3)','1초(추가시간없음)','512 MB',26,'<p>$2N-1$개의 수가 주어진다. 이 중 합이 $N$으로 나누어 떨어지는 수 $N$개를 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 $N$이 주어진다. ($1 \le N \le 50\ 000$)</p>

<p>둘째 줄에 $0$이상 $N$미만의 수 $2N-1$개가 공백으로 구분되어 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에, 조건을 만족하는 수 $N$개를 공백으로 구분하여 출력한다.</p>

<p>답을 만족하는 경우가 여럿 있는 경우, 그 중 임의의 하나를 출력하면 정답으로 인정된다. 출력하는 수들의 순서는 관계 없다.</p>

<p>답을 만족하는 수들이 존재하지 않는 경우 <code>-1</code>을 출력하여라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 2 3 0 1 2 3
','1 1 3 3
','MATH'),
                                                                                                                (3334,'BAEKJOON','https://www.acmicpc.net/problem/18793',18793,'팰린드롬 덧셈','0.5초(추가시간없음)','256 MB',30,'<p>팰린드롬이란 거꾸로 읽어도 제대로 읽는 것과 같은 수를 의미한다.</p>

<p>예를 들어, 10진법 수 <samp>0</samp>, <samp>3</samp>, <samp>77</samp>, <samp>12321</samp>는&nbsp;모두 팰린드롬이다. 다만, 10진법 수 <samp>10</samp>, <samp>610</samp>는 팰린드롬이 아니다. 어떤 수가 팰린드롬인지 그 여부를 따질 때에는 Leading zeros를 생각하지 않기로 하자.</p>

<p>팰린드롬이 아닌 7진법 수 <samp>610</samp>를 보자. 이는 팰린드롬인 7진법 수 <samp>535</samp>, <samp>33</samp>, <samp>6</samp>의 합으로 표현할 수 있다.</p>

<p>이처럼 <em>B</em>진법의 <em>N</em>자리 수 <em>K</em>가 주어질 때, 이를 팰린드롬인 <em>B</em>진법 수 세 개의 합으로 표현하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>총 <em>T</em>개의 테스트 케이스가 입력으로 주어진다.</p>

<p>각 테스트 케이스마다 하나의 줄에 <em>B</em>와 <em>K</em>가 사이에 공백을 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 하나의 줄에 답을 출력한다.</p>

<p>만약, <em>B</em>진법 수 <em>K</em>를 팰린드롬인 <em>B</em>진법 수 세 개의 합으로 표현할 수 없다면, "<samp>-1</samp>"(따옴표 제외)를 출력한다.</p>

<p>만일 표현할 수 있다면, 그 세 개의 수를 사이에 공백을 두고 출력한다. 세 개의 수는 모두 <strong>음이 아닌</strong> 올바른 <em>B</em>진법 수여야 하며, Leading zero가 있어서는 안된다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>충분히 큰 진법에 대하여, 아래의 숫자를 10진법의 수로 변환하면 다음과 같다:</p>

<ul>
	<li><samp>0</samp> = 0<sub>(10)</sub></li>
	<li><samp>9</samp>&nbsp;= 9<sub>(10)</sub></li>
	<li><samp>A</samp>&nbsp;= 10<sub>(10)</sub></li>
	<li><samp>Z</samp>&nbsp;= 35<sub>(10)</sub></li>
	<li><samp>a</samp>&nbsp;= 36<sub>(10)</sub></li>
	<li><samp>z</samp>&nbsp;= 61<sub>(10)</sub></li>
</ul>

				</div>
				</div>','1
7 610
','535 33 6
','MATH'),
                                                                                                                (3335,'BAEKJOON','https://www.acmicpc.net/problem/18795',18795,'이동하기 3','2초','512 MB',4,'<section id="description">
<p>준규는 (N+1)×(M+1)&nbsp;크기의 미로에 갇혀있다.&nbsp;미로는 1×1크기의 방으로 나누어져 있다.&nbsp;미로의 가장 왼쪽 윗 방은&nbsp;(0, 0)이고, 가장 오른쪽 아랫 방은&nbsp;(N, M)이다.</p>

<p>준규는 현재 (0, 0)에 있고, (N, M)으로 이동하려고 한다. 준규가 (r, c)에 있으면, 문을 통해서 (r+1, c), (r, c+1)로 이동할 수 있다. 또,&nbsp;미로 밖으로 나갈 수는 없다.</p>

<p>이번에는 문틈 사이에&nbsp;쓰레기가&nbsp;놓여 있다. 그래서 (r, c) 에서 (r+1, c)로 움직이거나, (r, c) 에서 (r, c+1)로 움직일 때 문틈에 놓여져있는 쓰레기를 모두 가져가야 한다. (r, c) 에서 (r+1, c) 로 움직일 때는 A<sub>r</sub>, (r, c+1) 로 움직일 때는 B<sub>c</sub> 개의 쓰레기를&nbsp;가져가야 한다.</p>

<p>준규가 (N, M)으로 이동할 때, 가져와야 하는 쓰레기의 최솟값을&nbsp;구하시오.</p>
</section>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<section id="input">
<p>첫째 줄에 미로의 크기 N, M이 주어진다. (1 ≤ N, M ≤ 500,000)</p>

<p>다음 줄에 N개의 정수 A<sub>i</sub>가 주어진다. (1 ≤ A<sub>i</sub>&nbsp;≤ 10<sup>9</sup>)</p>

<p>다음 줄에 M개의 정수 B<sub>i</sub>가 주어진다. (1 ≤ B<sub>i</sub>&nbsp;≤ 10<sup>9</sup>)</p>
</section>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<section id="output">
<p>첫째 줄에 준규가&nbsp;(N, M)으로 이동할 때, 가져와야 하는 쓰레기의 양을&nbsp;출력한다.</p>
</section>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 4
60 20 90
10 90 80 70
','420
','MATH'),
                                                                                                                (3336,'BAEKJOON','https://www.acmicpc.net/problem/18806',18806,'와일드 카드','2.5초','256 MB',26,'<p>알파벳 소문자와&nbsp;<code>?</code>,&nbsp;<code>*</code>&nbsp;로 이루어진 두 문자열 S, T가 주어진다.</p>

<p><code>?</code>과 <code>*</code>는 와일드 카드 문자로&nbsp;<code>?</code>는 임의의 알파벳 소문자로 대체할 수 있고,&nbsp;<code>*</code>는 임의의 알파벳 소문자로 이루어진 문자열로 대체할 수 있다. 단, 대체하는 문자열의 길이는 0일수도 있다.</p>

<p>와일드 카드를 포함한 두 문자열에서 각각의 와일드 카드 문자를 적절히 대체했을 때 두 문자열을 같게 만들 수 있다면 두 문자열이 <strong>유사하다</strong>고 하자.</p>

<p>당신은&nbsp;두 문자열 S, T를 유사하게 만들기 위해서 S또는 T에 다음과 같은 연산을 할 수 있다.</p>

<ul>
	<li>문자열의 임의의 위치에 문자 하나를 삽입한다. 이 때 삽입하는 문자는 알파벳 소문자 또는 <code>?</code> 또는 <code>*</code> 여야 한다.</li>
	<li>문자열의 임의의 위치에 있는 문자 하나를 삭제한다.</li>
	<li>문자열의 임의의 위치에 있는 문자 하나를 다른 문자로 치환한다. 이 때 치환되어 새로 생기는 문자는 알파벳 소문자 또는 <code>?</code> 또는&nbsp;<code>*</code> 여야 한다.</li>
</ul>

<p>이러한 연산을 최소 몇 번 시행해야&nbsp;두 문자열 S, T를 유사하게 만들 수 있는지 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 문자열 S가, 둘째 줄에 문자열<b>&nbsp;</b>T가 주어진다. (1&nbsp;≤ |S|, |T| ≤ 250,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에&nbsp;S와&nbsp;T를 유사하게 만들기 위해 필요한 연산의 최소 횟수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','ab?a
bba
','1
','MATH'),
                                                                                                                (3341,'BAEKJOON','https://www.acmicpc.net/problem/18821',18821,'홀수와 짝수의 대결','1초','512 MB',21,'<p>1 이상 n 이하의 자연수 중 짝수가 더 많을까, 홀수가 더 많을까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 테스트케이스의 개수 T(0 이상 1,000,000 이하)가 주어진다. 각각의 테스트케이스는 한 줄로 이루어져 있으며, 그 줄에 1 이상 10<sup>9</sup> 이하의 자연수 n이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트케이스마다 한 줄씩, 짝수가 홀수보다 <s>많으면</s> <strong>적지 않으면</strong> O, 아니면 E를 출력한다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/22e23701-eff7-434c-8fed-d793313b0e6f/" style="width: 400px; height: 197px;"></p>

<p style="text-align: center;"><em>네, 참으로 올바르시겠어요...</em></p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>문제가 너무 쉽기 때문에 그나마 구데기스럽게 만들기 위해 예제를 숨겼다.</p>

<div class="headline">
<h2>출처</h2>
</div>

<div style="line-height: 1.6;">
<p style="font-size: 13px;"><a href="/category/45">Contest </a> > <a href="/category/420"> 구데기컵 </a> > <a href="/category/detail/2207">진짜 최종 구데기컵 2</a> ??번</p>

<ul>
	<li style="font-size: 13px;">문제를 만든 사람: jh05013</li>
</ul>
</div>

<div class="headline" style="margin: 20px 0 25px 0;">
<h2>채점</h2>
</div>

<ul>
	<li style="font-size: 13px;">예제는 채점하지 않는다.</li>
</ul>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<div class="headline">
<h2>진짜 노트</h2>
</div>

<p>일반적인 정의와 달리 이 문제에서는 홀수와 짝수를 다음과 같이 정의한다.</p>

<p>1 이상의 자연수 k는 소수의 곱으로 표현할 수 있고, 그 표현 방법은 소수의 순서를 바꾸는 경우를 제외하면 유일하다. 이때 사용된 소수의 개수가 2의 배수가 아니면 k는 짝수, 아니면 k는 홀수이다. (k = 1일 때는 소수 0개의 곱이고, 0은 2의 배수이다.) 같은 소수가 여러 번 사용되었을 경우, 사용될 때마다 하나씩&nbsp;세어야 한다.</p>

				</div>
				</div>','0
','','MATH'),
                                                                                                                (3340,'BAEKJOON','https://www.acmicpc.net/problem/18831',18831,'문제를 푸는 문제','3초(추가시간없음)','512 MB',25,'<p>이 문제는 다섯 개의 서로 다른 문제로 이루어져 있다. 각 문제의 입력이 차례대로 주어질 때, 각 문제의 출력을 차례대로 출력하는 프로그램을 작성해야 한다.</p>

<ul>
	<li>문제 1: Dequery</li>
	<li>문제 2: 박승원</li>
	<li>문제 3: 미니 앨범</li>
	<li>문제 4: 주령구</li>
	<li>문제 5: 잘못 구현한 오일러 회로</li>
</ul>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>각 문제의 입력이 차례대로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 문제의 정답을 차례대로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
2 2 3
1 3 2
5 2
3 1
5 2
5
2 1 2 0 0
5 3 1 1 1
2 4 2 1 0
4 4 1 1 1
10 10 4 3 3
10 3 8 2 9 3
QR 퍼즐헌트
(L)5R
7 8
1 4
1 6
4 2
6 2
2 5
2 7
5 3
7 3
','3
2
4
21
305
36
6910035
5137799
대결!
6
1 3 4 5 6 7
','MATH'),
                                                                                                                (3343,'BAEKJOON','https://www.acmicpc.net/problem/18864',18864,'모든 것이 새롭다','1초','1024 MB',23,'<p>욱제에게 모든 수학 문제는 2ez다. 리만가설 같이 현재까지 전 인류가 못 푼 난제를 물어봐도 욱제는 2ez라고 답할 것이다.&nbsp;이때 욱제의 특징은 구체적인 풀이를 물어보면 졸렬하게 너무 쉬워서 대답할 가치가 없다고 답을 회피한다는 것이다.&nbsp;이 스킬은 그가 풀이를 모른다는 게 사실상 너무 뻔하지만, 그렇다고 그걸&nbsp;또 완벽히 입증할 수는 없다는 것 때문에 특유의 킹받는 욱제식 어그로가 된다. 하지만 이런 욱제에게도 약점은 있다. 바로 아예 틀린 전제로 사람을 낚는 낚시 문제이다. 이런 문제에 2ez를 시전하는 순간, 욱제는 그를 노리는 즈탈즐러같이 똑같이 할 일 없는 사람에게 저거 틀렸는데 어떻게 증명함 엌ㅋㅋㅋㅋㅋ 같은 핀잔을 듣는 것이다.&nbsp;</p>

<p>즈탈즐러는 욱제를 노리고 욱차원 슬라이딩 퍼즐이라는 걸 만들어 욱제에게 인편으로 보냈다. 이 퍼즐은 가끔씩 볼 수 있는 2차원 슬라이딩 퍼즐을 6차원으로 확장한 것이다. 구체적으로, $a \times b \times c \times d \times e \times f$ 짜리 욱차원 슬라이딩 퍼즐은 6차원에 있는 총 $N = a b c d e f$개 칸으로 구성되어 있다. 이때 각 칸의 위치는 6개 좌표 $(i, j, k, l, m, n)$ 으로 나타낼 수 있고, 이때 $1 \leq i \leq a$, $1 \leq j \leq b$, $1 \leq k&nbsp;\leq c$,&nbsp;$1 \leq l \leq d$, $1 \leq m&nbsp;\leq e$,&nbsp;$1 \leq n&nbsp;\leq f$&nbsp;의 조건을 만족한다. 즉 좌표계는 1 이상, 최대 크기 이하의 자연수로 표시된다. 초기 상태에서는 빈 칸 $(a, b, c, d, e, f)$를 뺀 모든 칸에 각각 해당하는 조각이 하나씩 위치해 있다.</p>

<p>이 퍼즐에서는 빈 칸과 인접한 위치에 있는 조각을 빈 칸으로 이동할 수 있다. 즉, 빈 칸이 있는 좌표 $p_0 = (i_0, j_0, k_0, l_0, m_0, n_0)$에 대해, $p_0$과 딱 하나의 좌표값만 정확히 1 차이나고 나머지 좌표값들은 다 똑같은 좌표 $p_1 = (i_1, j_1, k_1, l_1, m_1, n_1)$ 위에 있는 조각을 $p_0$으로 옮길 수 있다 (다르게 쓰면 $|i_0 - i_1|, |j_0 - j_1| \cdots$ 중 딱 하나만 1이고 나머지는 다 0이라는 것이다). 이때 $p_1$에 있던 조각이 $p_0$으로 이동했으므로 새로운 빈 칸은 $p_1$에 위치하게 된다. 퍼즐의 목표는 섞여진 조각들의 상태가 주어질 때, 조각들을 초기 상태의 순서로 맞추는 것이다.</p>

<p>퍼즐을 받은 욱제는 역시나 퍼즐을 풀 생각은 안 하고 2ez를 시전하기로 했다. 그러나 이 퍼즐은 아예 초기 상태로 돌릴 수 없을 수도 있다. 즉, 즈탈즐러가 보낸 퍼즐을 규칙에 맞게 푸는 게 아예 불가능할 수도 있는 것이다. 욱제는 즈탈즐러에게 전화해 인편으로 받은 퍼즐을 푸는 게 가능하면 2ez, 불가능하면 eokkkkkk를 시전할 예정이다. 욱제가 핀잔을 듣지 않고 어그로를 끌 수 있도록 욱제의 전화통화를 도와주자.<br>
&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째&nbsp;줄에 퍼즐의 크기를 나타내는 수 $a, b, c, d, e, f$가 순서대로 주어진다.</p>

<p>둘째 줄에&nbsp;퍼즐의 각 칸에 위치한 조각을 나타내는 $N = abcdef$개의 수가 주어진다. 각 수는 $0$ 이상 $N-1$ 이하이고, 서로 다 다르다. $0$은 빈 칸을, $1$ 이상의 수는 각각의 조각을 나타낸다. 조각들은 좌표값의 사전순으로 주어진다. 즉, 조각들이 좌표&nbsp;<br>
\begin{align*}<br>
(1, 1, 1, 1, 1, 1), (1, 1, 1, 1, 1, 2), &amp; \cdots, (1, 1, 1, 1, 1, f), \\<br>
(1, 1, 1, 1, 2, 1), (1, 1, 1, 1, 2, 2), &amp; \cdots, (1, 1, 1, 1, 2, f), \\<br>
                                                      \cdots &amp; \cdots \cdots \\<br>
(1, 1, 1, 1, e, 1), (1, 1, 1, 1, e, 2), &amp; \cdots, (1, 1, 1, 1, e, f), \\<br>
(1, 1, 1, 2, 1, 1), (1, 1, 1, 2, 1, 2), &amp; \cdots, (1, 1, 1, 2, 1, f), \\<br>
                                                      \cdots &amp; \cdots \cdots \\<br>
&amp; \vdots \\<br>
(a, b, c, d, e, 1), (a, b, c, d, e, 2), &amp; \cdots, (a, b, c, d, e, f)<br>
                                                      \end{align*}<br>
의 순으로 주어진다. 퍼즐을 맞춘 상태는 이 표기법으로 $1, 2, \cdots, N-1, 0$ 으로 나타내어 진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>퍼즐을 맞추는 게&nbsp;가능하면 2ez를, 아니면 eokkkkkk를 출력한다 (따옴표 제외).</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1 1 1 4 4
1 2 3 4 5 6 7 8 9 10 11 12 13 15 14 0
','eokkkkkk
','MATH'),
                                                                                                                (3347,'BAEKJOON','https://www.acmicpc.net/problem/18865',18865,'이제 다시 시작이다','1초','1024 MB',20,'<p>논산에 도착한 욱제는 <a href="https://www.acmicpc.net/problem/17423">DJ욱제였던 시절</a>의 기억들을 회상하고 있다.</p>

<p>욱제는 훈련소에서 새로운 시작을 하기 전에 마지막으로 자신의 예술을 알리기 위한 광역디제잉을 준비했다.</p>

<ol>
	<li>논산은 2차원 격자로 표현되며, 두 점 (x<sub>1</sub>, y<sub>1</sub>), (x<sub>2</sub>, y<sub>2</sub>)의 거리는 | x<sub>1</sub>&nbsp;- x<sub>2</sub>&nbsp;| + | y<sub>1</sub>&nbsp;- y<sub>2</sub>&nbsp;|이다.</li>
	<li>훈련소는 축에 평행한 직사각형으로,&nbsp;왼쪽 아래 끝점의 좌표는 (sx, sy)이며,&nbsp;오른쪽 위&nbsp;끝점의 좌표는 (ex, ey)이다.</li>
	<li>볼륨이 V이면, 각&nbsp;스피커의 음악은 그 스피커와의 거리가 V 이하인 모든 점에서 들을 수 있다.</li>
	<li>볼륨은 정수 단위로만 조작 가능하며, <strong>모든 스피커의 볼륨은 같다.</strong></li>
	<li>『 <strong>예술은 볼륨이다.</strong> 』</li>
</ol>

<p>욱제는 예술의 경지에 다다르기 위한 실험으로&nbsp;다음과 같은 쿼리를 Q개 준비했다.</p>

<ul>
	<li>1 x<sub>i</sub>&nbsp;y<sub>i</sub>&nbsp;: (x<sub>i</sub>, y<sub>i</sub>)에 스피커를 하나 설치한다.&nbsp;욱제는 아직 훈련소에&nbsp;들어가지 않았기 때문에&nbsp;<strong>모든 스피커는&nbsp;훈련소의 오른쪽 위 바깥에만 설치된다</strong>. 즉,&nbsp;ex < x<sub>i</sub>, ey < y<sub>i</sub> 가 항상 만족된다.</li>
	<li>2 V<sub>i</sub>&nbsp;: 현재까지 설치된 스피커의 개수가 k개이고, 이들&nbsp;스피커의 볼륨이 모두 V<sub>i</sub>일 때, (훈련소 내부에서&nbsp;1번 스피커의 음악이&nbsp;들리는 영역의 넓이) +&nbsp;(훈련소 내부에서 2번 스피커의 음악이&nbsp;들리는 영역의 넓이) + ... + (훈련소 내부에서 k번 스피커의 음악이&nbsp;들리는 영역의 넓이) 를 계산하라. 이 값이 정수가 아닐 수도 있으므로, <strong>계산한&nbsp;값의 2배를 출력하라</strong>. 합집합이 아니기 때문에, 한 영역에서 여러 스피커의 소리를 들을 수 있으면 여러 번 센다는 것에 유의하라.</li>
</ul>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/3a8e1038-286b-44d5-9608-ec8c6800ad24/" style="width: 376.667px; height: 259.167px; margin-left: 0px; margin-right: 0px;"></p>

<p>실험들을 해결하고 욱제의 예술(볼륨)을 온 몸으로 느껴보자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 훈련소를 나타내는 직사각형의 왼쪽 아래 끝점 (sx, sy)와&nbsp;오른쪽 위&nbsp;끝점 (ex, ey)가 주어진다.</p>

<p>둘째 줄에 쿼리의 개수 Q가 주어진다.</p>

<p>셋째 줄부터 Q개의 줄에 걸쳐, i + 2번째 줄에 i번째 쿼리가 주어진다. 2번 쿼리는 한 번 이상 등장한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>2번 쿼리가 주어질 때마다&nbsp;한 줄에 하나씩 답을 출력한다. 이 값은 항상 정수이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','-2 -5 0 0
10
1 1 1
2 2
2 3
2 4
2 6
1 1 4
1 5 5
1 3 10
2 6
2 200402
','0
1
4
12
13
80
','MATH'),
                                                                                                                (3344,'BAEKJOON','https://www.acmicpc.net/problem/18867',18867,'편지 꼭 해다오','0.1초(추가시간없음)','1024 MB',9,'<p>욱제는 2020년 04월 02일 목요일 14시 00분에 논산 육군훈련소에 입소했다. 욱제는 2020년 04월 29일 수요일에 사회로 돌아온다. 욱제에게 격려의 메세지를 남겨주자.</p>

<p>단, 편지의 내용은 아래의 조건을 만족해야 한다.</p>

<ol>
	<li>답안은 [<em>A-Za-z0-9&nbsp;</em>] ASCII 문자로&nbsp;구성하는 것을 권장하며, 이를 이용해 문제를 해결할 수 있음이 보장된다. 단, 문제의 체커(<a href="https://upload.acmicpc.net/b7c4146f-3ed5-44bc-94f5-18f080788f5b/">#</a>)를 보고 이해한다면, 한글, 이모지 등&nbsp;어떤 문자를&nbsp;제출해도 상관이 없다.</li>
	<li>답안의 크기는 990316<em>byte</em> 이하여야 한다.</li>
	<li>채점기는 답안을 1<em>byte</em> 단위로 끊어서 읽는다.</li>
	<li><em>i</em>번째 <em>byte</em>를 <i>int</i>로 캐스팅한 정수값을 <em>x<sub>i</sub></em>라고 하자.</li>
	<li><em>x<sub>i</sub></em><sup>814</sup>을 모두 더하여 20200429로 나눈 나머지를 <em>y</em>라고 하자.</li>
	<li><em>y</em> = 20200402을 만족하면 정답이다.</li>
</ol>

<p>ㅎㅎ;; ㅈㅅ.. ㅋㅋ!!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>욱제에게 인터넷 편지를 보낼 수 있는 정보들이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>사랑 가득한 편지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>대회 중에 이 문제에 제출한 기록이 있으면서,&nbsp;욱제에게 인터넷 편지를 보낸&nbsp;기록이 있는 참가자 중 가장 감동적인 편지를 작성한 참가자 1명에게 [ ?? ] 가 주어진다.</p>

<p>대회 중에 이 문제에 <strong>코드를 제출한 기록</strong>이 없거나, 욱제가 사회에 나오기 전까지<strong> 인터넷 편지를 보낸 기록</strong>이 없는 참가자는 상품 수령&nbsp;대상에서&nbsp;제외된다. 인터넷 편지를 보낼 때에는 본인의 BOJ 아이디를 기입해야 한다. 편지는 <strong>4월 8일 수요일</strong>부터 <strong>육군 훈련소 > 내 자녀 찾기</strong>(<a href="http://www.katc.mil.kr/katc/community/children.jsp">http://www.katc.mil.kr/katc/community/children.jsp</a>)&nbsp;에서 보낼 수 있다.</p>

<p>문제에 제출한 답안과 인터넷 편지의 내용이 같을&nbsp;필요는 없다.</p>

				</div>
				</div>','이름: 권욱제
입소일: 2020년 04월 02일
생년월일: 1999년 03월 16일
훈련소: 논산 육군훈련소
','홍콩 풍수전문가에 의하면 올해 4월과같은달은 우리인생에서 다시오지 않는다 합니다.
왜냐하면 월요일이4일,화요일4일,수요일4일,목요일4일,금요일4일,토요일4일,일요일4일 즉 모든요일이 4일로 구성되있어서 입니다.
그리고 욱제가 훈련소를 간 달입니다.
이런4월은 814년에 한번씩 발생합니다.
이를 엄청난부자달이라 부릅니다.
그래서 최소5명이나 5그룹과 이 내용을 공유하면 4일이내에 돈이 도착합니다.
중국풍수에 근거하면 이글을 읽은후 814분이내에 공유해야 한다합니다.
모두들~ 대박나세요~
','MATH'),
                                                                                                                (3352,'BAEKJOON','https://www.acmicpc.net/problem/18893',18893,'남현욱','2초','1024 MB',27,'<section id="description">
<p><a href="https://www.acmicpc.net/problem/1086">남현욱은&nbsp;이 문제를 풀지 못했다.</a></p>

<p>길이 n의 모든 순열&nbsp;중, 길이 3의 증가 부분 수열 (increasing subsequence) 이 정확히 m개인 순열의 개수를 998,244,353 으로 나눈 나머지를 출력하라.</p>

<p>하지만, <a href="https://www.acmicpc.net/problem/18835">남현욱은&nbsp;이 문제를 풀지 못했다.</a></p>

<p>따라서 남현욱은&nbsp;수열의 개수가 아니라, 그러한 수열들의 반전 수 (inversion) 의 합을 계산하려고 한다.</p>

<p>남현욱이&nbsp;바꾼 문제의 정답을 998,244,353으로 나눈 나머지로 출력하는 프로그램을 작성하시오.&nbsp;</p>
</section>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 n, m이 주어진다. (1 ≤ n ≤ 100000, 0 ≤ m ≤ 3)&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 0
','1
','MATH'),
                                                                                                                (3364,'BAEKJOON','https://www.acmicpc.net/problem/18917',18917,'수열과 쿼리 38','2초','256 MB',8,'<p>처음에 0이 하나 포함되어있는 배열 A가 있다. 이때, 다음 쿼리를 수행해야 한다.</p>

<ul>
	<li><code>1 x</code>: A의 가장 뒤에 <code>x</code>를 추가한다.</li>
	<li><code>2 x</code>: A에서 <code>x</code>를 제거한다. A에 <code>x</code>가 두 개 이상 있는 경우에는 가장 앞에 있는 하나만 제거한다. 항상 A에 <code>x</code>가 있는 쿼리만 주어진다.</li>
	<li><code>3</code>: A에 포함된 모든 원소를 더한 값을 출력한다.</li>
	<li><code>4</code>: A에 포함된 모든 원소를 XOR한 값을 출력한다.</li>
</ul>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 쿼리의 개수 M이 주어진다. 둘째 줄부터 다음 M 개의 줄에 쿼리가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>3번 혹은 4번 쿼리가 등장할 때마다, 답을 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','12
1 3
1 1
1 4
3
4
1 1
3
4
2 1
2 4
3
4
','8
6
9
7
4
2
','MATH'),
                                                                                                                (3365,'BAEKJOON','https://www.acmicpc.net/problem/18918',18918,'피보나치 수의 최대공약수의 합처럼 보이지만... ×25','2초','256 MB',27,'<p>피보나치 수는 다음과 같은 규칙으로 만들어지는 수열입니다.</p>

<p style="text-align: center;">$\begin{align*}F_{1} &amp;= 1 \\ F_{2} &amp;= 1 \\ F_{n+2} &amp;= F_{n+1} + F_{n}\end{align*}$</p>

<p>처음 몇 개의 항은 다음과 같습니다.</p>

<p style="text-align: center;">1, 1, 2, 3, 5, 8, 13 ...</p>

<p>다음과 같은 합을 구해봅시다.</p>

<p style="text-align: center;">$\sum_{i=1}^{n}\sum_{j=1}^{n} (\gcd(i, j))^{k}\gcd(F_{i}, F_{j})$</p>

<p>이때 gcd는 최대공약수를 의미합니다. 답이 매우 클 수 있으므로 1,000,000,007로 나눈 나머지를 출력합시다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫번째 줄에 두 개의 정수 <em>n</em>과 <em>k</em>가 주어집니다. (1 ≤ <em>n</em> ≤ 10<sup>9</sup>, 0 ≤ <em>k</em> ≤ 100,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫번째 줄에 구하는 합을 1,000,000,007로 나눈 나머지를 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 0
','52
','MATH'),
                                                                                                                (3368,'BAEKJOON','https://www.acmicpc.net/problem/18936',18936,'신기한 공놀이','0.5초','256 MB',23,'<p>주머니 안에&nbsp;A개의 공이 있고, 그중에&nbsp;정확히 B개의 빨간색 공이 있다. (A&nbsp;≥ B&nbsp;≥ 1, A ≠ 1)</p>

<p>공놀이를 하려 주머니에서 공을 꺼내던 현이는 우연히도 무작위로 두 개의 공을 뽑았을 때 적어도 하나는 빨간색이 아닐 확률이 자연수 N에 대해 정확히 1/N<sup>2</sup>이 됨을 알고 신기해했다.&nbsp;</p>

<p>현이는 주어진 N에 대해 이 조건을 만족하는 자연수의 쌍 (A, B)이 무한히 많음을 곧 깨달았고, 그중 A가 M번째로 작은 쌍은 무엇인지 궁금해졌다.</p>

<p>현이는 공놀이를 자주 해서 궁금증 또한 자주 생길 것이다. 당신은 궁금증을 해소해 주기 위해 현이가 공놀이를 Q번 하는 동안 모두 답을 해주어야 한다!&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 공놀이를 하는 횟수 Q가 주어진다.&nbsp;</p>

<p>두 번째 줄부터 Q+1번째 줄까지 각 줄마다 자연수 N, M이 공백으로 구분되어 주어진다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>Q개의 줄에 각 줄마다 조건을 만족하는 자연수의 쌍 (A, B)중 A가 M번째로 작은 쌍을&nbsp;공백으로 구분하여 출력한다. 수가 매우 커질 수 있으니 10<sup>9</sup>+7로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
2 1
','8 7
','MATH'),
                                                                                                                (3372,'BAEKJOON','https://www.acmicpc.net/problem/18939',18939,'경비병 세우기 게임','1초','256 MB',22,'<p>Yuto 와 Platina가 보초 세우기 게임이라는 새로운 게임을 해보려고 한다. 이 게임은 <em>N </em>× <em>M</em>의 가로가 긴 격자판에서 진행된다.</p>

<p>게임은 항상 Yuto부터 시작하며, 둘은 번갈아 가면서 자신의 턴에 원하는 빈 위치에 경비병을 세운다.</p>

<p>이 게임에서 안전상태라는 것은 격자판 안에 완벽히 포함되는 어떤 <i>K </i>× <i>K </i>크기의 정사각형에도 1명 이상의 경비병이 있는 상태를 의미한다.</p>

<p>안전상태가 된 순간 게임은 종료되고, 가장 최근 턴을 플레이 한 사람이 이기게 된다.</p>

<p>둘은 이 게임도 너무 재미있기 때문에 <em>T</em>판을 진행하려고 한다.</p>

<p>둘 다 최선의 플레이를 할 때, 모든 게임에 대해서 누가 이길지 예측해보자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 둘이 플레이 할 게임의 수 <i>T</i>가 주어진다.  </p>

<p>이후 <em>T</em>개의 줄에 각 게임의 게임판의 세로 길이와 가로길이, 그리고 정사각형의 크기를 나타내는 양의 정수 <em>N</em>, <em>M</em>, <em>K</em>가 순서대로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 케이스마다 한 줄에 걸쳐 이기게 될 플레이어의 이름 Yuto 혹은 Platina를 출력한다. </p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1 2 1
3 3 2
','Platina
Yuto
','MATH'),
                                                                                                                (3350,'BAEKJOON','https://www.acmicpc.net/problem/19530',19530,'숭고한 마라톤 대회','2초','512 MB',22,'<p>숭고한 연합에서는 알고리즘 마라톤 대회를 개최하기 위해 적당한 장소를 선정했다. 이 장소는 N개의 교차로와 N-1개의 양방향 도로들로 이루어져 있고, 모든 서로 다른 교차로 쌍 사이에 정확히 하나의 경로가 존재한다. (다시 말해, 이 장소는 트리 구조이다.)</p>

<p>명색이 알고리즘 마라톤이므로 주자들이 머릿속으로 최단경로 알고리즘을 돌리면서 달릴 수 있도록 다양한 코스가 존재하면 좋을 것이다. 따라서 서로 다른 두 교차로를 잘 골라서 각각 시작 교차로와 끝 교차로로 선정했을 때, 숭실대/고려대/한양대 세 학교가 시작 교차로에서 끝 교차로로 가는 겹치지 않는 세 개의 경로를 정할 수 있도록 하는 것이 목표이다. 어떤 두 경로가 겹치지 않으려면 시작 교차로와 끝 교차로를 제외하고는 공유하는 교차로가 없어야 한다.</p>

<p>목표를 달성할 수 있게 장소에 정확히 2개의 도로를 추가할 것이다. 어떤 도로들을 추가할지 정하는 방법이 몇 가지나 있는지 알려주자. 방법의 수가 너무 많을 수 있으므로 10<sup>9</sup>+7로 나눈 나머지를 출력하라. 도로 추가 이후 두 교차로 사이에는 최대 하나의 도로만 존재해야 하고, 어떤 도로도 양 끝 교차로가 같아서는 안 된다. (다시 말해, 단순 그래프이어야 한다.)</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/e05f6cef-caf8-4e91-95ee-879b11cf79f5/-/preview/" style="height: 117.5px; width: 360px;"></p>

<p>방법 1의 경우: 2를 시작 교차로로, 3을 끝 교차로로 정하면 3개의 서로 겹치지 않는 경로가 생긴다.</p>

<p>방법 2의 경우: 1을 시작 교차로로, 2를 끝 교차로로 정하면 3개의 서로 겹치지 않는 경로가 생긴다.</p>

<p>방법 3의 경우: 2를 시작 교차로로, 4를 끝 교차로로 정하면 3개의 서로 겹치지 않는 경로가 생긴다.</p>

<p>따라서 주어진 트리에서 가능한 방법은 3가지이고 정답은 3이 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 교차로의 개수 N이 주어진다. (4 ≤&nbsp;N ≤&nbsp;500,000)</p>

<p>두 번째 줄부터 N-1개의 줄에 걸쳐 각 도로가 연결하는 두 교차로의 번호 a,b가 공백으로 구분되어 주어진다. (1 ≤&nbsp;a,b ≤&nbsp;N)</p>

<p>주어지는 입력은 트리임이 보장된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>목표를 달성할 수 있게 도로 2개를 정하는 방법의 수를 10<sup>9</sup>+7로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 2
2 3
2 4
','3
','MATH'),
                                                                                                                (3353,'BAEKJOON','https://www.acmicpc.net/problem/19532',19532,'수학은 비대면강의입니다','1초(추가시간없음)','1024 MB',4,'<p>수현이는 4차 산업혁명 시대에 살고 있는 중학생이다. 코로나 19로 인해, 수현이는 버추얼 학교로 버추얼 출석해 버추얼 강의를 듣고 있다. 수현이의 버추얼 선생님은 문자가 2개인 연립방정식을 해결하는 방법에 대해 강의하고, 다음과 같은 문제를 숙제로 냈다.</p>

<div style="border: 1px solid #e4e9f0; padding: 2px 8px;">다음 연립방정식에서 $x$와 $y$의 값을 계산하시오.<br>
\[\begin{cases}ax+by=c\\dx+ey=f\end{cases}\]</div>

<p>4차 산업혁명 시대에 숙제나 하고 앉아있는 것보다 버추얼 친구들을 만나러 가는 게 더 가치있는 일이라고 생각했던 수현이는 이런 연립방정식을 풀 시간이 없었다. 다행히도, 버추얼 강의의 숙제 제출은 인터넷 창의 빈 칸에 수들을 입력하는 식이다. 각 칸에는 $-999$ 이상 $999$ 이하의 정수만 입력할 수 있다. 수현이가 버추얼 친구들을 만나러 버추얼 세계로 떠날 수 있게 도와주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>정수 $a$, $b$, $c$, $d$, $e$, $f$가 공백으로 구분되어 차례대로 주어진다. ($-999 \leq a,b,c,d,e,f \leq 999$)</p>

<p>문제에서 언급한 방정식을 만족하는 $\left(x,y\right)$가 유일하게 존재하고, 이 때 $x$와 $y$가 각각 $-999$ 이상 $999$ 이하의 정수인 경우만 입력으로 주어짐이 보장된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>문제의 답인 $x$와 $y$를 공백으로 구분해 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 3 -1 4 1 7
','2 -1
','MATH'),
                                                                                                                (3354,'BAEKJOON','https://www.acmicpc.net/problem/19533',19533,'길이 문자열','3초(추가시간없음)','1024 MB',23,'<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/8f1d7a1c-3000-4561-be45-b4783a452a17/-/preview/" style="width: 343.333px; height: 113.333px;"></p>

<p>길이 문자열은 숫자 0∼9와 하이픈(‘-’)으로만 이루어진 문자열 중 다음 조건을 만족하는 것을 가리킨다.</p>

<ul>
	<li>‘-’이 $2$개 이상 연속해서 등장하지 않는다.</li>
	<li>문자열의 첫 문자는 ‘0’이 아니다.</li>
	<li>문자열의 마지막 문자는 ‘-’이 아니다.</li>
	<li>‘-’의 다음 문자로 ‘0’이 등장하지 않는다.</li>
	<li>문자열의 숫자로만 이루어진 접미사 중 가장 긴 것을 $10$진법의 수로 해석하면 문자열의 길이와 같다. 이 때 그러한 접미사가 빈 문자열이면 0으로 해석한다.</li>
	<li>문자열에 ‘-’이 등장한다면 문자열의 처음부터 가장 마지막에 등장하는 ‘-’ 앞까지의 부분 문자열이 길이 문자열이다.</li>
</ul>

<p>임의의 음이 아닌 정수 $n$에 대해 길이가 $n$인 길이 문자열은 유일하게 한 개 존재한다. 다음은 각각 길이 $5$, $8$, $13$인 길이 문자열의 예시이다.</p>

<p style="text-align: center;"><code>1-3-5</code><br>
<code>-2-4-6-8</code><br>
<code>1-3-5-7-10-13</code></p>

<p>자연수 $a$와 음이 아닌 정수 $b$가 주어졌을 때 길이가 $a\times 10^b$인 길이 문자열을 찾아보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째줄에 테스트 케이스의 개수 $T$가 주어진다. ($1 \leq&nbsp;T \leq&nbsp;100\ 000$)</p>

<p>각 테스트 케이스마다 두 개의 정수 $a$, $b$가 공백으로 구분되어 한 줄에 주어진다. ($1 \leq&nbsp;a \leq 10^9$, $0 \leq&nbsp;b \leq&nbsp;10^6$)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 길이 $a\times 10^b$인 길이 문자열을 출력한다. 이때 $a\times 10^b \geq 21$이면 문자열의 맨 앞의 $17$글자만 출력 예시와 같은 형식으로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
5 0
8 0
13 0
','1-3-5
-2-4-6-8
1-3-5-7-10-13
','MATH'),
                                                                                                                (3358,'BAEKJOON','https://www.acmicpc.net/problem/19535',19535,'ㄷㄷㄷㅈ','2초(추가시간없음)','1024 MB',13,'<p>어느 날, 트리를 물끄러미 보고 있던 동현이는 엄청난 사실을 하나 발견했다. 바로 정점이 네 개인 트리는 ‘ㄷ’과 ‘ㅈ’의 두 종류밖에 없다는 사실이다!</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/255cb1ee-1778-4c09-bdd9-202f25422d24/-/preview/" style="width: 337.5px; height: 123.333px;"></p>

<p>정점이 네 개 이상 있는 임의의 트리에 대해, 그 트리에서 정점 네 개로 이루어진 집합을 고르자. 전체 트리의 간선들 중 집합에 속한 두 정점을 잇는 간선만을 남겼을 때, 네 개의 정점이 하나의 트리 형태로 이어지게 된다면 ‘ㄷ’ 모양이거나 ‘ㅈ’ 모양일 것이다. 트리에서 ‘ㄷ’의 개수와 ‘ㅈ’의 개수를 각각 트리에서 ‘ㄷ’ 모양, ‘ㅈ’ 모양을 이루는 정점 네 개짜리 집합의 개수라고 하자.</p>

<p>이제, 동현이는 세상의 모든 트리를 다음과 같은 세 종류로 나누었다.</p>

<ul>
	<li>D-트리 : ‘ㄷ’이 ‘ㅈ’의 $3$배보다 많은 트리</li>
	<li>G-트리 : ‘ㄷ’이 ‘ㅈ’의 $3$배보다 적은 트리</li>
	<li>DUDUDUNGA-트리 : ‘ㄷ’이 ‘ㅈ’의 정확히 $3$배만큼 있는 트리</li>
</ul>

<p>신이 난 동현이는 트리만 보이면 그 트리에 있는 ‘ㄷ’과 ‘ㅈ’이 몇 개인지 세고 다니기 시작했다. 하지만 곧 정점이 $30$만 개나 있는 트리가 동현이 앞에 나타났고, 동현이는 그만 정신을 잃고 말았다. 동현이를 대신해 주어진 트리가 D-트리인지 G-트리인지 아니면 DUDUDUNGA-트리인지 알려주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 트리의 정점 수 $N$이 주어진다. ($4 \leq&nbsp;N&nbsp;\leq&nbsp;300\ 000$)</p>

<p>두 번째 줄부터 $N-1$개의 줄에 트리의 각 간선이 잇는 두 정점의 번호 $u$, $v$가 주어진다. ($1 \leq&nbsp;u,&nbsp;v&nbsp;\leq&nbsp;N$)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 주어진 트리가 D-트리라면 <span style="color:#e74c3c;"><code>D</code></span>, G-트리라면 <span style="color:#e74c3c;"><code>G</code></span>, DUDUDUNGA-트리라면 <span style="color:#e74c3c;"><code>DUDUDUNGA</code></span>를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 2
2 3
3 4
','D
','MATH'),
                                                                                                                (3384,'BAEKJOON','https://www.acmicpc.net/problem/19539',19539,'사과나무','1초(추가시간없음)','1024 MB',11,'<p>이하는 최근 사과나무 씨앗을 구매하여 농장 뒷뜰에 일렬로 $1$번부터 $N$번까지 심었다. 이 나무들의 초기 높이는 모두 $0$이다.</p>

<p>사과나무를 무럭무럭 키우기 위해 이하는 물뿌리개 $2$개를 준비했다. 한 물뿌리개는 나무 하나를 $1$만큼 성장시키고, 다른 물뿌리개는 나무 하나를 $2$만큼 성장시킨다. 이 물뿌리개들은 동시에 사용해야 하며, 물뿌리개를 나무가 없는 토양에 사용할 수는 없다. 두 물뿌리개를 한 나무에 사용하여 $3$만큼 키울 수도 있다.</p>

<p>물뿌리개 관리 시스템을 전부 프로그래밍한 이하는 이제 사과나무를 키워보려고 했다. 그 순간, 갊자가 놀러와서 각 사과나무의 높이가 이런 배치가 되었으면 좋겠다고 말했다. 이제 이하는 약간 걱정이 되기 시작했는데, 갊자가 알려준 사과나무의 배치를 이 프로그램 상으로 만들어내지 못할 수도 있기 때문이다.</p>

<p>이하는 이제 프로그램을 다시 수정하느라 바쁘기 때문에, 두 물뿌리개를 이용해 갊자가 알려준 사과나무의 배치를 만들 수 있는지의 여부를 판단하는 과정은 여러분의 몫이 되었다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 자연수 $N$이 주어진다. ($ 1 \leq N \leq 100\ 000$) 이는 이하가 뒷뜰에 심은 사과나무의 개수를 뜻한다.</p>

<p>두 번째 줄에는 $N$개의 정수 $h_1,h_2,\cdots,h_N$이 공백으로 구분되어 주어진다. ($ 0 \leq h_i \leq 10\ 000$) $h_i$는 갊자가 바라는 $i$번째 나무의 높이이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 모든 나무가 갊자가 바라는 높이가 되도록 물뿌리개를 통해 만들 수 있으면 “<span style="color:#e74c3c;"><code>YES</code></span>”를, 아니면 “<span style="color:#e74c3c;"><code>NO</code></span>”를 따옴표를 제외하고 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
0
','YES
','MATH'),
                                                                                                                (3385,'BAEKJOON','https://www.acmicpc.net/problem/19544',19544,'함수 복원','1.5초(추가시간없음)','1024 MB',16,'<p>자연수 $N$이 주어질 때, $1$ 이상 $N$ 이하의 자연수 $i$에 대해 정의되는 함수 $f$가 있다. 모든 $i$에 대해 $f\left(i\right)$ 또한 $1$ 이상 $N$ 이하의 자연수다.</p>

<p>$f$에 대한 함수 그래프를 정점 $i$에서 정점 $f\left(i\right)$로 향하는 단방향 간선들로 이루어진 그래프라 부르자. 이 그래프는 $f$에 따라 유일하게 결정됨을 알 수 있다.</p>

<p>우리는 함수 $f$를 알지 못하지만, $f$에 대한 함수 그래프에서 모든 정점에 대한 도달 가능성 정보를 가지고 있다. 정점 $u$에서 정점 $v$에 도달 가능하다는 것은 $0$개 이상의 간선을 통해 정점 $u$에서 정점 $v$로 갈 수 있다는 뜻이다.</p>

<p>함수 $f$로 가능한 경우의 수를 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 $N$이 주어진다. ($1 \leq N \leq 500$)</p>

<p>그 후, $N$개의 줄에 걸쳐 $f$에 대한 함수 그래프에서 도달 가능성 정보가 공백으로 구분되어 주어진다. $i$번째 줄의 $j$번째 수는 $i$에서 $j$에 도달 가능하면 $1$, 그렇지 않으면 $0$이다. 가능한 함수 $f$가 존재하지 않는 경우는 주어지지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>함수 $f$로 가능한 경우의 수를 $10^9 + 7$로 나눈 나머지를 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
1 1 1 1 0 0
0 1 1 1 0 0
0 1 1 1 0 0
0 1 1 1 0 0
1 1 1 1 1 0
0 0 0 0 0 1
','6
','MATH'),
                                                                                                                (3388,'BAEKJOON','https://www.acmicpc.net/problem/19549',19549,'레이저 연구소','2초(추가시간없음)','1024 MB',26,'<p>아무도 모르는 외딴 섬에서 ahgus89와 Sait2000은 레이저 연구를 하고 있다. 이 섬에는 다양한 연구 구역이 있고, 그 중 레이저 연구 구역은 $N \times M$ 모양의 직사각형 영역이다. 이 영역은 $NM$개의 $1 \times &nbsp;1$ 정사각형으로 쪼개져 있다. 각 정사각형의 꼭짓점에는 건물이 하나씩 세워져 있으며, 각 정사각형의 변에는 건물을 잇는 벽이 하나씩 세워져 있다. 따라서 총 $\left(N+1\right)\left(M+1\right)$개의 건물과 $2NM+N+M$개의 벽이 있다.</p>

<p>ahgus89와 Sait2000은 레이저의 성능을 시험하기 위해 건물에서 건물로 레이저를 쏘아 보려고 한다. 이들은 가능한 모든 시작점과 끝점에 대해 레이저를 쏠 것이다. 하지만 레이저는 직선으로만 나가기 때문에 건물과 벽이 레이저를 가로막을 수 있다.&nbsp;</p>

<p>ahgus89는 출력을 강하게 하여 건물과 벽에 구멍을 내어서라도 실험을 하려고 한다. 시작점과 끝점에 있는 건물을 포함하여, 경로 상에 있는 모든 건물과 벽에 구멍이 뚫린다. 레이저가 정확히 건물을 통과할 경우, 그 건물에 붙어 있는 벽에는 구멍이 뚫리지 않는다. 다만 레이저를 $x$축이나 $y$축에 평행하게 쏠 경우 아예 벽이 무너져 버리기 때문에 이런 경우는 제외하고 레이저를 쏠 것이다.&nbsp;</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/7979c0c1-969c-4b34-b0ef-9b7a88c3caf3/-/preview/" style="width: 360px; height: 360px;"></p>

<p>위 그림은 $N=7$, $M=7$인 경우 $\left(0, 0\right)$에서 $\left(6, 4\right)$로 레이저를 쏜 모습이다. $3$개의 건물과 $6$개의 벽에 구멍이 뚫린다.</p>

<p>또한, 레이저를 한 번 쏘고 나면 구멍이 뚫린 건물과 벽을 전부 수리할 것이다. 건물을 수리하는 데에는 $A$원, 벽을 수리하는 데에는 $B$원이 든다. 수리를 완료해야 다음 레이저를 쏠 수 있다.</p>

<p>ahgus89의 계획을 들은 Sait2000은 수리비가 얼마나 들 지 생각하며 고민에 빠졌다. Sait2000을 위해 총 수리비를 구해주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 $N$, $M$, $A$, $B$가 공백으로 구분되어 주어진다. ($1 \leq N, M, A, B \leq 10^{9}$)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>실험을 완료한 뒤의 총 수리비를 출력한다. 단, 답이 너무 커질 수 있으니&nbsp;$10^{9}+7$로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p><strong>예제 1</strong>의 상황은 다음과 같다.</p>

<p>$\left(0, 0\right)$에서 $\left(1, 1\right)$로 쏘고 나면 $2$개의 건물을 수리한다.</p>

<p>$\left(1, 0\right)$에서 $\left(0, 1\right)$로 쏘고 나면 $2$개의 건물을 수리한다.</p>

<p>$\left(0, 1\right)$에서 $\left(1, 0\right)$로 쏘고 나면 $2$개의 건물을 수리한다.</p>

<p>$\left(1, 1\right)$에서 $\left(0, 0\right)$로 쏘고 나면 $2$개의 건물을 수리한다.</p>

<p>따라서 총 $8$개의 건물을 수리하므로, 총 수리비는 $40$원이다.</p>

<p><strong>예제 2</strong>에서 $\left(0, 0\right)$에서 $\left(2, 2\right)$로 쏘고 나면 $3$개의 건물만을 수리함에 유의하라.</p>

				</div>
				</div>','1 1 5 6
','40
','MATH'),
                                                                                                                (3390,'BAEKJOON','https://www.acmicpc.net/problem/19563',19563,'개구리 1','1초','256 MB',4,'<p>좌표평면의 원점 위에 개구리가 한 마리 있다. 개구리는 한 번 점프할 때마다 인접한 네 칸 중 하나로 이동한다. 예를 들어, 초기에 개구리가 원점 $O(0, 0)$ 위에 있다면, 개구리는 한 번 점프한 뒤 $(0, 1)$, $(0, -1)$, $(1, 0)$, $(-1, 0)$ 중 하나에 위치하게 된다.</p>

<p>muse는 개구리의 이동을 관찰한 뒤, 원점 위에 있던 개구리가 $c$번의 점프 뒤 $(a, b)$ 위로 이동했다는 사실을 기록했다. 하지만 muse는 이 기록이 정확한지 의문을 갖게 되었다. 개구리가 정확히 $c$번 점프한 뒤 $(a, b)$ 위에 있을 수 있는지 판별하는 프로그램을 작성하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>세 정수 $a$, $b$, $c$가 공백을 사이에 두고 주어진다. ($-10^9 \le a, b \le 10^9$, $0 \le c \le 2 \cdot 10^9$)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>문제의 조건대로 개구리가 이동하는 것이 가능하면 <code>YES</code>, 불가능하면 <code>NO</code>를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 3 7
','YES
','MATH'),
                                                                                                                (3391,'BAEKJOON','https://www.acmicpc.net/problem/19567',19567,'개구리 2','1초','256 MB',16,'<p>개구리가 좌표평면 위로 돌아왔다. 이번에는 $(x, y)$ 위에 개구리 $N$마리가 점프할 준비를 하고 있다. 개구리는 한 번 점프할 때마다 인접한 네 칸 중 하나로 이동한다. 예를 들어, 초기에 개구리가 원점 $O(0, 0)$ 위에 있다면, 개구리는 한 번 점프한 뒤 $(0, 1)$, $(0, -1)$, $(1, 0)$, $(-1, 0)$ 중 하나에 위치하게 된다. muse가 잠시 게임을 하던 사이, 개구리들은 제멋대로 점프를 했다. muse는 좌표평면으로 돌아온 뒤, 처음에 자신이 개구리를 어디에 위치해 놓았는지 궁금해졌다.</p>

<p>다행히 muse는 개구리의 이동에 관해 몇 가지 정보를 알아내는 데 성공했다. $i$번째 개구리는 총 $c_i$번의 이동을 했으며, 이동을 모두 마친 현재 $(a_i, b_i)$ 위에 있다는 것이다. 이 정보를 바탕으로, 개구리들이 처음에 어디에 있었는지 알아내는 프로그램을 작성해 보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 개구리의 수 $N$이 주어진다. ($1 \le N \le 10^5$)</p>

<p>둘째 줄부터 $N+1$번째 줄까지, $i+1$번째 줄에는 정수 $a_i$, $b_i$, $c_i$가 차례로 주어진다. ($-10^9 \le a_i, b_i \le 10^9$, $0 \le c_i \le 2 \cdot 10^9$)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>개구리들의 초기 위치를 $(x, y)$라고 할 때, $x$와 $y$를 공백을 사이에 두고 출력하자.</p>

<p>만약 초기 위치로 가능한 격자점이 없다면 <code>NO</code>를 출력한다.</p>

<p>만약 초기 위치로 가능한 점이 여러 개라면 $x$값이 가장 작은 점을 출력하며, 이러한 점도 여러 개라면 $y$값이 가장 작은 점을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
3 3 5
0 0 3
','-1 2
','MATH'),
                                                                                                                (3393,'BAEKJOON','https://www.acmicpc.net/problem/19568',19568,'직사각형','1초','256 MB',19,'<p>당신은 $30 \times 30$ 크기의 표에 0 이상 $10^6$ 이하의 정수를 채워야 한다.</p>

<p>다음을 만족하는 정수 $i$를 찾을 수 있다고 하자. 표에 존재하는 $(\frac{30 \times 31}{2})^2$개의 직사각형 중, 그 안에 쓰인 수들의 합이 정확히 $i$인 것이 존재한다.</p>

<p>당신의 목표는 1부터 50000까지의&nbsp;수들을 찾을 수 있게 하는 것이다. 이 조건을 만족하는 표를 찾아 출력하자.</p>


<div class="headline">
<h2>입력</h2>
</div>
<div id="problem_input" class="problem-text">
<p>이 문제는 입력이 없다.</p>

</div>

<div class="headline">
<h2>출력</h2>
</div>
<div id="problem_output" class="problem-text">
<p>당신이 만든 표에 적힌 수를 한 줄에 30개씩, 30줄로 출력하여라. 정확한 형식은 예제 출력을 참고하자.</p>

</div>

<div class="headline">
<h2>힌트</h2>
</div>
<div id="problem_hint" class="problem-text">

</div>
</div>','','1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
','MATH'),
                                                                                                                (3394,'BAEKJOON','https://www.acmicpc.net/problem/19569',19569,'돌멩이 게임','3초','256 MB',18,'<p>당신은 muse와 함께 아래 규칙으로 게임을 해, 승리해야 한다.</p>

<ul>
	<li>처음에 $N$개의 돌이 있으며, 게임은 당신부터 시작한다.</li>
	<li>맨 처음에 당신은 무조건 돌을 한 개 가져가야 한다.</li>
	<li>그 다음 차례부터는 돌을 1개 이상 ${x+1}$개 이하로 가져갈 수 있다. 이때, $x$는 전 차례에 상대방이 가져간 돌멩이의 개수이다.</li>
	<li>마지막 돌을 가져가는 사람이 이긴다.</li>
</ul>

<p>그런데, 사악한 muse는 돌의 개수 $N$을 자신이 이길 수밖에 없게 설정해 놓기도 한다! 따라서 당신은 돌의 개수를 보고, 이길 수 없다고 판단되면 첫 수를 두기 전에 게임을 끝내야 한다. muse는 이길 수 있는 경우에서 항상 최선의 수를 둔다. 이때,&nbsp;게임에서 이길 수 있겠는가?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>돌의 개수 $N$이 주어진다. ($2 \le N \le 10^5$)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>먼저, 돌의 개수를 보고 당신이 이길 수 있는지 판단하여라. 이길 수 없다고 판단될 경우 NO를 출력하고 프로그램을 바로 종료해야 한다. 이길 수 있다고 판단될 경우 YES를 출력하고 게임을 진행한다.</p>

<p>수를 둘 때는 가져갈 돌의 개수를 정수로 출력해야 한다. 이때 출력하고 난 뒤, 줄을 바꾸고 버퍼를 비워야 한다.</p>

<p>당신이 수를 두고 나면 muse 역시 수를 둔다. muse가 가져간 돌의 개수를 입력받아 저장한 뒤, 다시 당신이 수를 두면 된다.</p>

<p>게임이 끝나거나 당신이 잘못된 수를 둘 경우 (예: 가져간 돌의 개수가 음수이거나, 현재 있는 돌의 개수보다 많은 경우) 다음 수에서 프로그램은 즉시 종료되며, 문제를 틀리게 된다. 당신이 이겼을 경우, 프로그램은 즉시 종료되어야 한다. 그렇지 않으면, 시간 초과 등 예상치 못한 채점 결과를 받을 수 있다.</p>

<p>이길 수 없는 게임을 이길 수 있다고 판단하고 게임을 시작할 경우, 즉시 오답 판정을 받는 것이 아닌, 게임이 모두 진행된 뒤에 오답 판정을 받는 것임에 유의하자.&nbsp;muse는 이길 수 있는 상황에서 항상 최선의 수를 둔다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>이 문제는 muse와 게임을 하는 문제이다. 따라서 muse가 당신이 어떤 수를 두었는지 확인하려면, 당신은 출력을 할 때마다 버퍼를 비워 줘야 한다.&nbsp;출력을 한 번 할 때마다 출력 명령문 바로 아래 줄에 다음과 같은 문장을 추가하면 된다.</p>

<ul>
	<li>C / C++의 경우: <code>fflush(stdout);</code></li>
	<li>python의 경우: <code>sys.stdout.flush()</code></li>
</ul>

				</div>
				</div>','6


2
　
','
YES
1

3
','MATH'),
                                                                                                                (3395,'BAEKJOON','https://www.acmicpc.net/problem/19570',19570,'삼각 분할','2.5초','256 MB',24,'<p>muse는 정$N$각형 $P_{1}P_{2}\cdots P_{N}$을 가지고 있다. muse는 이 다각형을 삼각 분할하려고 한다. 여기서 삼각 분할이란, 정$N$각형에 대각선을 적절히 그어 삼각형 $N-2$개로 나누는 것을 말한다. 대각선들은 끝점을 제외하고는 서로 교차하지 않는다.</p>

<p>삼각 분할의 가짓수는 매우 많다. muse는 이 삼각 분할의 가짓수를 구하고자 한다.</p>

<p>하지만 여기서 문제가 끝나면 재미없으니, muse는 삼각 분할된 다각형의 각 삼각형에 빨간색 또는 파란색으로 색칠을 하려고 한다. 이때 변으로 맞닿아 있는 인접한 삼각형은 서로 다른 색으로 색칠해야 하고, 정$N$각형의 한 변 $P_{1}P_{2}$가 포함된 삼각형은 빨간색으로 칠해야 한다.</p>

<p>muse는 가능한 모든 삼각 분할 색칠을 그려 놓았다. 이때, 빨간색 영역의 개수는 총 몇 개일까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>$N$이 주어진다. ($3 \le N \le 10^5$)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>삼각 분할 색칠의 가능한 모든 경우에 대해, 빨간색 영역의 개수의 합을 $998\ 244\ 353$(소수)로 나눈 나머지를 출력하여라.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
','1
','MATH'),
                                                                                                                (3396,'BAEKJOON','https://www.acmicpc.net/problem/19572',19572,'가뭄(Small)','1초(추가시간없음)','1024 MB',3,'<p>가뭄에 찌든 신촌을 위해서 국렬이는 세 칸으로 구성되어 있는 신촌에 비를 내릴 것이다. 그러나 국렬이는&nbsp;무능해서 각 칸마다 비를 내리지 못하고, 두 칸에 동일하게 비를 내리는 것만 할 수 있다.</p>

<p>1번째 칸, 2번째 칸에 동시에 뿌리는 비의 강수량을 <em>a</em> cm,&nbsp;1번째 칸, 3번째 칸에 동시에 뿌리는 비의 강수량을 <em>b</em> cm, 2번째 칸, 3번째 칸에 동시에 뿌리는 비의 강수량을 <em>c</em> cm라고 하자. <em>a</em>, <em>b</em>, <em>c</em>는 모두 양의 실수여야 한다. 가뭄에 찌든 신촌이라도 비가 너무 많이 오면 상당히 곤란하고, 비가 너무 조금 와도 곤란하다. 그래서 각 칸에 해당하는 지역은 강수량이 정확히 <em>d<sub>i</sub></em>&nbsp;cm가 되어야 한다. 이때&nbsp;정확한 <em>a</em>, <em>b</em>, <em>c</em>의 값을 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>3개의 양의 정수가 입력으로 들어온다. 각각은 <em>d</em><sub>1</sub>, <em>d</em><sub>2</sub>, <em>d</em><sub>3</sub>을 의미한다.&nbsp;(1&nbsp;≤ <em>d</em><sub>1</sub>, <em>d</em><sub>2</sub>, <em>d</em><sub>3</sub>&nbsp;≤ 10<sup>6</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>조건에 맞게 비를 내릴 수 없다면 <code><span style="background-color:#dddddd;">-1</span></code>을 출력한다.</p>

<p>조건에 맞게 비를 내릴 수 있다면 <code><span style="background-color:#dddddd;">1</span></code>을 출력하고, 다음 줄에&nbsp;<i data-stringify-type="italic">a</i>,&nbsp;<i data-stringify-type="italic">b</i>,&nbsp;<i data-stringify-type="italic">c</i>를 소수 첫째 자리까지 반올림한 것을 공백으로 구분하여 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 4 4
','1
2.0 2.0 2.0
','MATH'),
                                                                                                                (3397,'BAEKJOON','https://www.acmicpc.net/problem/19574',19574,'케이크 커팅','1초(추가시간없음)','1024 MB',20,'<p>원기둥 모양의 치즈 케이크가 있다. 치즈 케이크의 중심의 좌표는 (0, 0)이다.</p>

<p>생쥐들이 케이크의 일부를 먹었다. 생쥐들은 원기둥 모양으로 바닥까지 모두 파먹었고, 생쥐들이 먹은 부분은 서로 겹치지 않는다.</p>

<p>케이크의 한 부분은 페퍼민트로 장식되어 있다. 생쥐는 페퍼민트 향을 싫어하기 때문에 그 부분은 생쥐가 먹지 않는다.</p>

<p>밑면에 수직인 평면 모양으로 칼질을 하려고 한다. 칼질을 정확히 한 번만 해서 페퍼민트로 되어 있는 부분을 지나고 케이크의 양이 정확히 반이 되도록 나누어라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫번째 줄에는 케이크의 반지름 <em>R</em>(1 ≤ <em>R</em> ≤ 1,000)과&nbsp;페퍼민트의 좌표 <em>x<sub>p</sub></em>, <em>y<sub>p</sub></em>가 주어진다. <em>R</em>과 페퍼민트의 좌표는 정수이고, 페퍼민트가 케이크 안에 있음이 보장된다.</p>

<p>다음 줄에는&nbsp;생쥐의 수 <em>N</em>(1 ≤ <em>N</em> ≤ 100)이&nbsp;주어진다.</p>

<p>다음 <em>N</em>줄에는 각&nbsp;생쥐가 먹은 케이크의 중심 좌표 <em>x<sub>i</sub></em>, <em>y<sub>i</sub></em>와 반지름 <em>r<sub>i</sub></em>가 주어진다. 모든 좌표와 반지름은 정수이고, 원기둥은 케이크에&nbsp;완전히 포함되며 서로 겹치지 않는다. 페퍼민트는 생쥐가 파먹은 어떤 원기둥에도 포함되지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>칼질한 평면을 위에서 바라보면 직선 모양이 된다. 이 직선의 각도를 <em>x</em>축에서 반시계 방향으로 재어 라디안 단위로 출력한다.&nbsp;출력한 각도대로 잘랐을 때 한 부분의 넓이를 <em>A</em>, 전체 넓이의 절반을 <em>B</em>라고 할 때, <em>A</em>와 <em>B</em>의 절대/상대 오차가 10<sup>?6</sup>&nbsp;이하이면 정답이다. 출력값의 범위는 지정되어 있지 않지만, 정확한 채점을 위해 ?2π 이상 2π 이하의 값을 출력하는 것을 권장한다.</p>

<p>만약 어떤 방식으로도 정확히 절반을 자를 수 없다면 <tt><span style="background-color:#dddddd;">NO</span></tt>를&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','100 -50 0
1
0 0 10
','0.0000000000
','MATH'),
                                                                                                                (3403,'BAEKJOON','https://www.acmicpc.net/problem/19576',19576,'약수','1초(추가시간없음)','1024 MB',13,'<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/df42c885-c32c-4461-bb06-83af823de8c2/-/preview/" style="width: 347.5px; height: 219.167px;"></p>

<p style="text-align: center;">♪ 한가람 구비구비 유구하네 / 와우의 푸른 기슭에 높이 솟은 진리의 전당 ♪<br>
(홍익대학교 교가 / 이은상 작사, 김동진 작곡)</p>

<p>홍익대학교 바로 뒤편에 위치한 와우산의 와우약수터는 현재 폐쇄되어있다. 와우산의 정기가 그대로 흘러나오는 약수를 다시 회복하기 위한 “와우 프로젝트”가 시작되었다. 와우산의 지하수에는 여러 가지 미네랄 성분이 포함되어있다. 만약 지하수에 포함된 모든 미네랄 성분의 함량들의 관계가 약수면, 약수다.</p>

<p>다시 말해 모든 미네랄 성분의 함량의 쌍이&nbsp;항상 약수(divisor)-배수 관계가 될 때, 이 지하수는 약수(mineral water)가 될 수 있다. 엄밀하게 표현하면, 지하수에 포함된 서로 다른 임의의 두 미네랄 성분의 함량&nbsp;<em>x</em>, <em>y</em>에 대해 항상 <em>x</em>가 <em>y</em>로 나누어 떨어지거나 <em>y</em>가 <em>x</em>로 나누어 떨어져야한다.</p>

<p>당신은 “와우매직”이라는 특별한 마법을 사용하여, 지하수에 포함되어있는 미네랄 성분을 하나 골라 그 함량을 원하는 양의 정수로 바꿀 수 있다. “와우매직”을 최소한으로 사용하여 와우산의 지하수를 약수로 바꿔보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 와우산의 지하수에 포함되어있는 미네랄 성분의 개수 <em>N</em>이 주어진다. (1 ≤&nbsp;<em>N&nbsp;</em>≤ 5,000)</p>

<p>두 번째 줄에 각 미네랄 성분의 함량을 나타내는 정수 <em>a</em><sub>1</sub>, <em>a</em><sub>2</sub>, …, <em>a<sub>N</sub></em>이 주어진다. (1 ≤ <em>a</em><sub><em>i</em>&nbsp;</sub>≤ 10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>와우산의 지하수를 약수로 바꾸기 위해 “와우매직”을 최소 몇 번 사용해야 하는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
24 10 4 6 3
','2
','MATH'),
                                                                                                                (3401,'BAEKJOON','https://www.acmicpc.net/problem/19577',19577,'수학은 재밌어','1초(추가시간없음)','1024 MB',16,'<p>오일러는 수학을 정말 좋아해서 하루 종일 수학 공부만 하는 수학쟁이이다.</p>

<p>어느 날 오일러는 수학 공부를 하기 위해서 수학 책을 읽고 있던 중에 오일러 피 함수에 대해서 설명하는 부분을 보게 되었다. 오일러 피 함수는 다음과 같이 설명이 되어 있었다.</p>

<blockquote>
<p>오일러 피 함수란 <em>φ</em>(<em>n</em>)으로 표기하며 1부터 <em>n</em>까지의 양의 정수 중에서 <em>n</em>과 서로소인 수의 개수를 나타내는 함수이다.</p>

<p>예를 들면 <em>φ</em>(6)은 1부터 6까지의 수 중 6과 서로소인 수의 개수를 말하는데 이는 1과 5로 두 개가 있으므로 <em>φ</em>(6)&nbsp;= 2이다.</p>
</blockquote>

<p>오일러는 책의 내용을 곰곰이&nbsp;읽던 중 어떤 문제가&nbsp;떠올랐다. 문제의&nbsp;내용은 다음과 같다.</p>

<blockquote>
<p>어떤 양의 정수&nbsp;<em>n</em>이 있다고 할 때,&nbsp;<em>xφ</em>(<em>x</em>) =&nbsp;<em>n</em>을 만족하는 양의 정수&nbsp;<em>x</em>가 존재하는가?</p>
</blockquote>

<p>고민에 빠진 오일러를 본 당신은 오일러의 궁금증을 해결해주기 위해서 직접 문제를 풀기로 결심했다. 그러므로 당신은&nbsp;<em>xφ</em>(<em>x</em>) =&nbsp;<em>n</em>을 만족하는&nbsp;<em>x</em>를 구하는 프로그램을 작성하면 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에&nbsp;<em>n</em>이 입력으로 주어진다. (1&nbsp;≤ <i>n</i>&nbsp;≤ 10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p><em>xφ</em>(<em>x</em>) = <em>n</em>을 만족하는 양의 정수 <em>x</em>가 존재하면 최소의 <em>x</em>를, 존재하지 않으면 ?1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
','2
','MATH'),
                                                                                                                (3402,'BAEKJOON','https://www.acmicpc.net/problem/19587',19587,'객실 배치','1초(추가시간없음)','1024 MB',15,'<p>성민이는 한 층에 2개의 객실이 있는 <em>N</em>층짜리 호텔을 운영하고 있다. (물리적으로 어떻게 가능한지는 무시하도록 하자)</p>

<p>각 호실은 자연수 번호를 가지고 있으며, 100으로 나눈 몫은 층수를 나타내고, 나머지는 1 또는 2이다. 한 층에 있는 두 방은 나머지가 서로 다르다. 나머지가 같으면서 몫이 1 차이 나는 두 방은 위아래로 인접하게 배치되어 있다. 예를 들어 1층에는 101호실과 102호실, 2층에는 201호실과 202호실이 존재한다.</p>

<p>어느 날 정부에서 전염병의 악화로 인한 <strong>“사회적 거리두기”</strong>를 선포하면서, 성민이는 호텔에 투숙하려는 고객들을 안내할 때 좀 더 경각심을 두고 조심스럽게 안내해야 한다.</p>

<p>호텔에서 객실을 배정할 때, 아래와 같은 조건들을 고려해야 한다.</p>

<ol>
	<li>사회적 거리를 두기 위해, 같은 층에 고객을 동시에 배치하면 안 된다. 예를 들어 101호와 102호에 동시에 고객을 배치할 수 없다.</li>
	<li>전염병은 공기를 통해 퍼질 수 있기 때문에, 고객을 위아래로 인접하게 배치하면 안 된다. 예를 들어 101호와 201호에 동시에 고객을 배치할 수 없다.</li>
</ol>

<p><em>N</em>층의 호텔을 운영하는 성민이가 고객을 배치할 수 있는 경우의 수는 몇 가지일까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>성민이가 운영하는 호텔의 층수인 정수 <em>N</em>이 입력으로 주어진다. (1&nbsp;≤ <em>N</em>&nbsp;≤ 10<sup>18</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>성민이가 객실에 고객을 배치할 수 있는 경우의 수를 10<sup>9</sup> + 7로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','3
','MATH'),
                                                                                                                (3404,'BAEKJOON','https://www.acmicpc.net/problem/19592',19592,'장난감 경주','1초(추가시간없음)','256 MB',6,'<p>당신을 포함한 N명의 참가자가 각자 자신의 장난감 자동차를 이용해 경주를 하는데, 트랙의 길이는 X 미터이다.</p>

<p>참가자는 1번부터 N번까지 번호가 매겨져 있고, 당신의 참가 번호는 N번이다.</p>

<p>i번 참가자의 자동차의 일반적인 속도는 V[i] meters per sec (m/s)&nbsp;이며, 당신을 제외한 모든 참가자의 자동차는 출발점 부터 도착점까지 항상 일정한 속도로 움직인다.</p>

<p>단, 당신의 장난감 자동차는 특수 부스터가 있기 때문에, 처음 1초간 Z m/s 로 움직이도록 설정할 수 있다 (이 때 트랙의 나머지 거리는 V[N] m/s 로 일정한 속도로 움직인다).</p>

<p>경주 시작 전 정수 Z값을 고를 수 있으며, 이 값은 반드시 부스터 속도 한계치인 Y m/s 이하이어야 한다 (Z ≤ Y).&nbsp;</p>

<p>당신은 꼭 이 경주에서 단독 1등을 하고 싶은데, 부스터를 지나치게 사용하면 의심 받을 수 있으니 단독 우승이 가능토록 하는 최소의 Z값을 구하고 싶다.</p>

<p>예를 들어 N = 3, X = 12, Y = 11 이라하고, V = [3, 2, 1] 이라 하자.</p>

<ul>
	<li>1번 참가자의 자동차는 3 m/s의 일정한 속도로 움직여서 4초만에 경주를 마친다.</li>
	<li>2번 참가자의 자동차는 2 m/s의 일정한 속도로 움직여서 6초만에 경주를 마친다.</li>
	<li>3번 참가자인 당신의 경우 여러 가지 가능성이 있다.
	<ul>
		<li>부스터를 사용하지 않으면 1 m/s의 일정한 속도로 움직여서 12초만에 경주를 마친다.</li>
		<li>부스터를 최대치로 사용하면 (Z = Y) 첫 1초간 11m를 이동하고, 나머지 1m를 1초간 주행해서 2초만에 경주를 마치며 단독 우승 할 수 있다.</li>
		<li>부스터를&nbsp;조금 덜 사용하여 Z = 10미터를 1초만에&nbsp;이동하면, 나머지 2m는 원래 속도로 이동하여 총 3초가 걸리고, 단독&nbsp;우승할 수 있다.</li>
		<li>그보다 조금 덜 사용하여 Z = 9미터를 1초만에 이동하면, 나머지 3m는 원래 속도로 이동하여 총 4초가 걸리고, 1번 자동차와 같은 시간만큼 걸린다 (공동 우승).</li>
	</ul>
	</li>
</ul>

<p>위의 예제의 경우 단독 우승을 하기 위해&nbsp;최소 10미터를 부스터를 사용하여 이동하여야 하므로, 원하는 답이 10이다.</p>

<p>입력으로 N, X, Y, 그리고 각 장난감 자동차의 속도 V가 주어졌을 때 단독 우승을 하기 위해 부스터를 사용해서 이동해야하는 최소한의 거리를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 수 T가 주어진다.</p>

<p>각 테스트 케이스의 첫 줄에 N, X, Y가 공백으로 구분되어 주어진다.</p>

<p>둘째 줄에 N개의 정수가 공백으로 구분되어 주어지는데 이는 각 장난감 자동차의 속도 V[i]를 나타낸다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 단독 우승을 위해 부스터를 사용해서 이동해야하는 최소한의 거리를 출력한다.</p>

<p>만약 부스터를 쓰지 않고도 단독 우승이 가능하다면 0을 출력한다.</p>

<p>부스터를 최대치로 사용하고도 단독 우승이 불가능하다면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
3 12 11
3 2 1
3 12 9
3 2 1
3 12 10
3 4 5
3 80 80
80 60 70
3 80 80
70 50 60
','10
-1
0
-1
72
','MATH'),
                                                                                                                (3405,'BAEKJOON','https://www.acmicpc.net/problem/19595',19595,'소수 게임','1초(추가시간없음)','256 MB',14,'<p>Alice와 Bob은 "소수 게임"을 즐겨한다.</p>

<p>소수 게임에서는 두 사람이 먼저&nbsp;일정한 양의 정수 구간 (interval)을 먼저 고르고, 해당 구간에 속한 모든 정수 각각에 대해 미니 게임을 한 번씩 플레이 한다.</p>

<p>정확한 규칙은 아래와 같다.</p>

<ul>
	<li>먼저, Alice가 두 개의 정수 A, k를 고른다 (이 때&nbsp;2 ≤ k ≤ A-1&nbsp;을 만족해야 한다).<br>
	k는 미니 게임을 몇 번 할지를 결정하고, A는 정수 구간의 상한값을 결정한다.</li>
	<li>다음으로 Bob이 2 ≤ x ≤ A + 1 - k를 만족하는 정수 x를 고른다.<br>
	x는 정수 구간의 하한값을 결정한다. 즉, x ≤ 정수구간 ≤ A가 된다.&nbsp;</li>
	<li>두 사람은 이제 미니 게임을 k번 플레이 하는데, x이상 x+k-1 이하의 정수 각각에 대하여 아래 미니 게임을 플레이한다 (각각의 미니 게임에서 고른 정수를 N이라 하자).
	<ul>
		<li>먼저, N을 종이에 적는다 (x ≤ N ≤ x+k-1).&nbsp;그리고 Alice와 Bob이 번갈아 플레이 한다.</li>
		<li>Alice가 먼저 시작하여&nbsp;종이에 적힌 숫자보다 크지 않은 수 중 소수 (prime) P를 고른다.</li>
		<li>종이에 적힌 수가 X라면, 이를 지우고 X-P를 종이에 새로 적는다.&nbsp;</li>
		<li>Bob의 차례가 되어 이를 반복한다.</li>
		<li>만약 자신의 차례가 되었을 때 종이에 적힌 수가 0이나 1이라면 진다. (다시 말해, X-P를 종이에 적을 때 이 값이 0이나 1이면 이긴다.)</li>
	</ul>
	</li>
</ul>

<p>예를 들어 N = 8 이라면, Alice가 자신의 처음 차례에 7을 고르면 이긴다.</p>

<p>N = 10이라면 Alice가 자신의 차례에 고를 수 있는 소수는 2, 3, 5, 7 중 하나이다.</p>

<ul>
	<li>2를 고른 경우, Bob이 자신의 차례에 받는 수는 8이고 이 때 7을 고르면 Bob이 이긴다.</li>
	<li>3을 고른 경우, Bob이 자신의 차례에 받는 수는 7이고, 이 때 7을 고르면 Bob이 이긴다.</li>
	<li>5를 고른 경우, Bob이 자신의 차례에 받는 수는 5이고, 이 때 5를 고르면 Bob이 이긴다.</li>
	<li>7을 고른 경우, Bob이 자신의 차례에 받는 수는 3이고, 이 때 3을 고르면 Bob이 이긴다.</li>
</ul>

<p>따라서 N = 10인 경우, Bob이 최선을 다한다면 Alice가 이길 방법은 없다. (두 사람은 언제나 최선을 다해서 플레이 한다고 가정하자.)</p>

<p>Bob은 A, k가 주어졌을 때 x를 잘 골라서 자신의 승률을 최대화 하기로 했다. 만약 승률을 최대화 하는 x값이 여럿이라면 그 중 가장 작은 x를 찾기로 했다. Bob을 도와주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 수 T가 주어진다.</p>

<p>각 줄에 A와 k가 공백으로 구분되어 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 두 개의 정수를 공백으로 구분하여 출력한다.</p>

<p>첫 수는 k번의 게임 중 Bob이 최대 몇 번을 이길 수 있는지 나타내고, 두 번째 수는 이를 위해 Bob이 선택해야하는 x값 중 최소 값을&nbsp;나타낸다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
12 2
12 3
12 4
100 11
1000 15
','2 9
2 8
2 7
3 25
4 885
','MATH'),
                                                                                                                (3407,'BAEKJOON','https://www.acmicpc.net/problem/19601',19601,'이진 삼진 탐색 놀이 3','2초','256 MB',12,'<p>오늘도 서준이는 아빠와 함께&nbsp;알고리즘 놀이를 하고 있다.&nbsp;서준이는 이진 탐색, 아빠는 삼진 탐색 놀이를&nbsp;하고 있다.</p>

<p>서로 다른 정수가&nbsp;오름차순으로 정렬된 크기가 N인 배열 A가 있다. 이진 탐색,&nbsp;삼진 탐색으로&nbsp;배열 A의 i번째 원소 A<sub>i</sub>를 찾을 때,&nbsp;A<sub>i</sub>를 찾기 전에 참조해야 하는 배열 A의 원소 개수를 각각 B<sub>i</sub>&nbsp;, T<sub>i</sub> 라고 하자. 서준이는 아빠로 부터 B<sub>i</sub>&nbsp;, T<sub>i</sub>&nbsp;최대값을 공백을 사이에 두고 한줄에&nbsp;출력하는 Q개의 질의를 받았다. n과 Q가 커서 괴로워 하는 우리 서준이를 도와주자.</p>

<p>크기가 N인 배열에서 이진 탐색 알고리즘 의사 코드는&nbsp;다음과 같다.</p>

<pre>binary_search(A[0..N-1], value, left, right) {
    mid = (left + right) / 2
    if (A[mid] == value)
        return mid
    else if (value < A[mid])
        return binary_search(A, value, left, mid - 1)
    else
        return binary_search(A, value, mid + 1, right)
}</pre>

<p>크기가 N인 배열에서 삼진&nbsp;탐색 알고리즘 의사 코드는&nbsp;다음과 같다.</p>

<pre>ternary_search(A[0..N-1], value, left, right) {
    left_third = left + (right - left) / 3
    right_third = right - (right - left) / 3
    if (A[left_third] == value)
        return left_third
    else if (A[right_third] == value)
        return right_third
    else if (value < A[left_third])
        return ternary_search(A, value, left, left_third - 1)
    else if (value < A[right_third])
        return ternary_search(A, value, left_third + 1, right_third - 1)
    else
        return ternary_search(A, value, right_third + 1, right)
}</pre>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 쿼리의 수 Q(1&nbsp;≤ Q&nbsp;≤ 500,000)가&nbsp;주어진다. 둘째 줄부터 Q + 1줄까지 배열 A의 크기&nbsp;N이&nbsp;주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫번째 쿼리부터 Q번째 쿼리까지 각각의 쿼리 결과를 한줄씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
5
','2 2
','MATH'),
                                                                                                                (3426,'BAEKJOON','https://www.acmicpc.net/problem/19698',19698,'헛간 청약','1초','1024 MB',2,'<p>농부 존은 소들을 위해 새로운 헛간을 지었다. 소들의 리더인 암소 베시는 새로운 헛간에 입주할 소들을 추첨으로 정하기로 했다. 소들은 그동안 모아 왔던 건초 더미를 담보로 추첨에 응모했다.</p>

<p>이번 추첨에는 총 $N$마리의 소가 응모했다. 헛간은 $W \times H$ 크기의 직사각형이다. 베시는 소 한 마리당 $L \times L$ 크기의 공간을 배정할 계획이다.</p>

<p>베시는 헛간을 최대한 효율적으로 나누어 최대한 많은 소를 입주 시키려고 한다. 헛간에는 최대 몇 마리의 소들이 입주할 수 있는지 출력하라.&nbsp;소들이 입주하는 공간의 각 변은 직사각형의 각 변에 대해 수평 혹은 수직이여야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>소들의 수 $N$, 헛간의 크기 $W \times H$를 나타내는 두 정수 $W$와 $H$, 그리고&nbsp;소들에게 배정되는 공간의 크기 $L$이 순서대로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>헛간에 최대 몇 마리의 소들이 입주할 수 있는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7 17 11 5
','6
','MATH'),
                                                                                                                (3429,'BAEKJOON','https://www.acmicpc.net/problem/19699',19699,'소-난다!','1초','1024 MB',9,'<p>지난 번 헛간 청약의 당첨우(牛)가 발표됐다. 청약에 당첨된 소들은 날아갈 듯이 기뻐하다가 진짜로 하늘을 날았다. 하지만 이후로 소들은 날 수 없었다. 그러던 어느 날, 꿀벌에게 쏘이면 잠깐 하늘을 날 수 있다는 사실을 깨달았다. 이 사실이 퍼지자 소들은 다시 자유롭게 하늘을 날기 시작했다.</p>

<p>소들이 하늘을 날며 우(牛)통사고가 빈번해지자, 농부 존은 소들이 하늘을 나는 것에 제한을 두었다. 소들은 항의했지만 소들의 항의는 받아들여지지 않았다.</p>

<p>농장에는 $N$마리의 소가 있다. 농부 존은 소들의 몸무게의 합이 소수(prime)가 되도록 $M$마리의 소를 선별할 계획이다. 농부 존의 계획에 맞게 소를 선별했을 때 나올 수 있는 몸무게의 합을 모두 출력하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 농장에 있는 소들의 수 $N$, 선별할 소의 수 $M$이 주어진다.</p>

<p>둘째 줄에 소들의 몸무게 $H_i$가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>$M$마리 소들의 몸무게 합으로 만들 수 있는 모든 소수를 오름차순으로 출력한다. 만약 그러한 경우가 없다면 $-1$을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 3
2 4 10 5 8
','11 17 19 23
','MATH'),
                                                                                                                (3428,'BAEKJOON','https://www.acmicpc.net/problem/19702',19702,'친구','1초','1024 MB',21,'<p>선린인터넷고등학교에는 $N$명의 학생들이 있다. $N$명의 학생들 가운데 일부는 서로를 좋아한다. 신기한 사실이 있는데, 학생들 간에 일방적으로 좋아하는 경우는 없고, 반드시 서로 좋아하거나, 혹은 서로 좋아하지 않는다고 한다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/b0288522-7329-4f8f-9a38-751ad97f3c15/" style="width: 369.167px; height: 343.333px;"></p>

<p>어느 날, $N$명의 학생들이 둥근 원탁 위에 앉아 식사를 하고자 한다. 원탁 주위에는 $N$개의 자리가 있으며, 위 그림과 같이 원형으로 배치되어 있다.</p>

<p>어떤 학생이 자리 배치를 만족스럽게 느낄 조건은 자신의 양 옆에 자신이 좋아하는 학생이 앉아있는 것이라 한다. 모든 학생들이 만족스럽게 자리를 배치할 수 있을지 알아보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>학생 수를 나타내는 정수 $N$이 주어진다. 편의상 학생에 번호를 붙여 생각하자.</p>

<p>각 $i$ ($1 \le i \le N$)에 대해 $i+1$번째 줄에는 $N$개의 정수 $a_{i, 1}, \dots, a_{i, N}$ 이 주어진다. $a_{i, j}$가 $1$이라면 학생 $i$가 학생 $j$를 좋아함을 의미하고, $0$이라면 학생 $i$가 학생 $j$를 좋아하지 않음을 의미한다.</p>

<p>참고로, &nbsp;$a_{i, i} = 0$이며, 문제의 조건에 의해 $a_{i, j} = a_{j, i}$이다.&nbsp;</p>

<p>그리고 각 $i(1 \le i \le N)$에 대해 $\displaystyle \sum_{j=1}^{N} a_{i, j} \ge {N \over 2}$임이 보장된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>모든 학생이 만족스럽게 자리를 배치할 방법이 존재한다면, $1$번 자리에 앉는 학생의 번호부터 $N$번 자리에 앉는 학생의 번호까지 사이에 공백을 두고 출력하라.</p>

<p>만약 모든 학생이 만족스럽게 자리를 배치할 방법이 존재하지 않는다면, $-1$을 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
0 1 1
1 0 1
1 1 0
','2 1 3
','MATH'),
                                                                                                                (3398,'BAEKJOON','https://www.acmicpc.net/problem/19847',19847,'여우 신탁','1초(추가시간없음)','1024 MB',14,'<p><span style="font-style: italic;">“여우신님, 여우신님, 번호 하나만 내려 주세요…”</span></p>

<p>누구나 1 이상 45 이하의 정수 여섯 개를 잘 골라서 인생이 달라지거나, 혹은 1 이상 10,000 이하의 정수 하나를 잘 골라서 <span style="font-weight: bold; color: #009874;">맞았습니다!!</span>를 받는 헛된 꿈을 꾼다. 이렇듯 일상 생활에서 신기가 담긴 수가 필요한 상황은 얼마든지 일어난다. 이는 여우 마을의 여우들에게도 마찬가지다. 다만 여우 마을과 현실의 차이점은, 여우 마을에서는 여우신에게 부탁을 드리면 실제로 여우신께서 신탁으로 수를 하나 내려 주신다는 점이다.</p>

<p>여우 마을의 여우들은 수를 셀 때 0부터 세기 때문에, <span style="font-style: italic;">X</span>개의 수 중 하나가 필요할 때는 여우신에게 “0 이상 <span style="font-style: italic;">X</span> <strong>미만</strong>의 수를 하나 내려 주세요”와 같이 부탁을 드린다. 그러면 여우신은 0 이상 <span style="font-style: italic;">X</span> ? 1 이하의 정수 하나를 <strong>균일한</strong> 확률로 골라서 신탁으로 내려 준다.</p>

<p>그러나 너무 많은 여우들이 여우신을 찾게 되자, 여우신은 매번 새로운 수를 고르기가 귀찮아졌다. 그래서 여우신은 여우들이 올린 부탁을 여러 개 모아서 한꺼번에 처리하기로 했다. 첫 번째 여우에게는 제대로 수를 골라서 내려 주고, 그 다음부터는 바로 전에 내려 줬던 수를 새로 부탁받은 값으로 나눈 <strong>나머지</strong>를 내려 주기로 한 것이다.</p>

<p>예를 들어 여우 세 마리가 차례대로 10개의 수 중 하나, 3개의 수 중 하나, 5개의 수 중 하나를 필요로 할 경우 여우신은 다음과 같은 방법으로 신탁을 내린다.</p>

<ol>
	<li>0 이상 9 이하의 정수를 균일한 확률로 하나 골라서 첫 번째 여우에게 내려 준다.</li>
	<li>첫 번째 여우에게 내려 준 수를 3으로 나눈 나머지를 두 번째 여우에게 내려 준다.</li>
	<li>두 번째 여우에게 내려 준 수를 5로 나눈 나머지를 마지막 여우에게 내려 준다.</li>
</ol>

<p>물론 신탁을 받는 여우들은 눈치채지 못하겠지만, 이렇게 내려 주는 신탁은 공정한 신탁이 아닐 수 있다. 여우신이 반성하고 다시 제대로 신탁을 내릴 수 있도록, 마지막 여우가 받게 되는 수의 분포를 계산해서 보여 주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 신탁을 요청한 여우의 수를 의미하는 정수 <span style="font-style: italic;">N</span>이 주어진다.</p>

<p>다음 줄에는 <span style="font-style: italic;">N</span>개의 정수 <span style="font-style: italic;">x</span><sub>1</sub>, <span style="font-style: italic;">x</span><sub>2</sub>, …, <span style="font-style: italic;">x</span><sub><span style="font-style: italic;">N</span></sub>이 공백을 사이에 두고 차례대로 주어진다. <span style="font-style: italic;">x</span><sub><span style="font-style: italic;">i</span></sub>는 <span style="font-style: italic;">i</span>번째 여우가 <span style="font-style: italic;">x</span><sub><span style="font-style: italic;">i</span></sub>개의 수 중 하나를 필요로 함을 의미한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>마지막 여우가 받게 되는 수의 기댓값을 출력한다. 절대 또는 상대 오차가 10<sup>?9</sup> 이하면 정답으로 처리된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
6
','2.5
','MATH'),
                                                                                                                (3400,'BAEKJOON','https://www.acmicpc.net/problem/19849',19849,'문제지 나르기','2초(추가시간없음)','1024 MB',19,'<p>교준이는 온라인으로 진행되는 SNUPC 2020에 아쉬움이 남아, $N$명의 대회 참가자들의 집으로 문제지를 직접 배달해주기로 했다.</p>

<p>여러분이 익히 알고 있듯 이 우주는 <span style="font-style: italic;">11차원이기 때문에</span>, 참가자들의 집은 11차원 좌표의 한 점 $\mathbf{x} = (x_{1}, x_{2}, \cdots, x_{11})$로 나타낼 수 있다. 이 우주에서 이동하기 위해서는 좌표축을 따라 나 있는 도로를 타고 이동해야 하기 때문에, 두 점 $\mathbf{x}$, $\mathbf{y}$ 사이를 이동하는 데 필요한 거리는 아래와 같다.</p>

<p>$$ \mathrm{dist}(\mathbf{x},\mathbf{y}) = \sum_{k=1}^{11} \lvert x_{k} - y_{k} \rvert $$</p>

<p>교준이는 문제지를 실은 차를 한 곳에 주차해둔 뒤 문제지를 나를 것이다. 11차원 세계에는 $Q$개의 주차장이 있고, 주차장 역시 11차원 좌표계의 한 점 $\mathbf{y} = (y_{1}, \cdots, y_{11})$으로 나타낼 수 있다.</p>

<p>문제지를 직접 들고 나르는 일은 힘들기 때문에, 교준이는 각 주차장의 위치에 대해 가장 멀리 떨어진 참가자의 집까지 거리를 알고 싶어한다. 교준이는 이 문제가 나쁘지 않다고 생각했는지, 문제지에 이 문제까지 적어서 여러분에게 가져다주려고 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫째 줄에는 참가자의 수 $N$, 주차장의 수 $Q$가 공백을 사이에 두고 주어진다.</p>

<p>둘째 줄부터 $N$개의 줄에 걸쳐 각 참가자의 집 좌표 $(x_{i,1}, \cdots, x_{i,11})$가 주어진다. 구체적으로, $(i+1)$번째 줄에는 $i$번째 참가자의 집 좌표를 나타내는 $11$개의 정수 $x_{i,1}$, $\cdots$, $x_{i,11}$가 공백을 사이에 두고 주어진다.</p>

<p>$N+2$번째 줄부터 $Q$개의 줄에 걸쳐 주차장의 좌표 $(y_{i,1}, \cdots, y_{i,11})$가 주어진다. 구체적으로, $(N+1+i)$번째 줄에는 $i$번째 주차장의 집 좌표를 나타내는 $11$개의 정수 $y_{i,1}$, $\cdots$, $y_{i,11}$가 공백을 사이에 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>$Q$개의 줄에 걸쳐 답을 출력한다. $i$번째 줄에는 $i$번째 주차장과 가장 멀리 떨어진 참가자의 집까지 거리를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 2
0 1 2 3 4 5 6 7 8 9 10
0 -1 -2 -3 -4 -5 -6 -7 -8 -9 -10
3 8 -4 2 4 6 0 -9 5 2 7
10 34 2 -38 17 55 -23 30 -19 41 22
','87
312
','MATH'),
                                                                                                                (3406,'BAEKJOON','https://www.acmicpc.net/problem/19939',19939,'박 터뜨리기','0.25초(추가시간없음)','512 MB',7,'<p>$K$개의 팀이 박 터트리기 게임을 한다. 각 팀은 하나의 바구니를 가지고 있고, 바구니에 들어있는 공을 던져서 자기 팀의 박을 터트려야 한다.</p>

<p>우리는 게임을 준비하기 위해서, $N$개의 공을 $K$개의 바구니에 나눠 담아야 한다. 이때, 게임의 재미를 위해서 바구니에 담기는 공의 개수를 모두 다르게 하고 싶다. 즉, $N$개의 공을 $K$개의 바구니에 빠짐없이 나누어 담는데, 각 바구니에는 1개 이상의 공이 있어야 하고, 바구니에 담긴 공의 개수가 모두 달라야 한다.</p>

<p>게임의 불공정함을 줄이기 위해서, 가장 많이 담긴 바구니와 가장 적게 담긴 바구니의 공의 개수 차이가 최소가 되도록 담을 것이다.</p>

<p>공을 바구니에 나눠 담기 위한 규칙을 정리하면 다음과 같다.</p>

<ol>
	<li>$N$개의 공을 $K$개의 바구니에 빠짐없이 나누어 담는다.</li>
	<li>각 바구니에는 1개 이상의 공이 들어 있어야 한다.</li>
	<li>각 바구니에 담긴 공의 개수는 모두 달라야 한다.</li>
	<li>가장 많이 담긴 바구니와 가장 적게 담긴 바구니의 공의 개수 차이가 최소가 되어야 한다.</li>
</ol>

<p>위의 규칙을 모두 만족하며 $N$개의 공을 $K$개의 바구니에 나눠 담을 때, 나눠 담을 수 있는지 여부를 결정하고, 담을 수 있는 경우에는 가장 많이 담긴 바구니와 가장 적게 담긴 바구니의 공의 개수 차이를 계산해서 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 공의 개수를 나타내는 $N$과 팀의 수를 나타내는 정수 $K$가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>$N$개의 공을 $K$개의 바구니에 문제의 규칙을 만족하면서 나눠 담을 수 있다면, 가장 많이 담긴 바구니와 가장 적게 담긴 바구니의 공의 개수 차이를 출력한다. 나눠 담을 수 없는 경우에는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 3
','-1
','MATH'),
                                                                                                                (3410,'BAEKJOON','https://www.acmicpc.net/problem/19940',19940,'피자 오븐','0.25초(추가시간없음)','256 MB',11,'<p>피자를 굽는 전자식 오븐이 있다. 이 오븐에 재료는 넣고 정확히 $N$분 동안 동작을 시키고자 한다. 그런데 이 오븐에 준비된 버튼은 아래와 같은 동작을 하는 5가지이다. 즉, 각각의 버튼은 동작 시간을 추가시키거나 감소시킨다. 처음에 피자 오븐의 첫 시간은 0분으로 정해져 있다. 시간을 감소시키는 버튼을 눌러서 시간이 0분보다 작아지는 경우에는 0분으로 설정된다.&nbsp;$t$가 현재 오븐에 세팅된 시간, $t$은 버튼을 누른 뒤의 시간을 의미할 때, 각 버튼은 다음과 같은 기능을 가지고 있다.</p>

<ul>
	<li><code>ADDH</code>: $t = t + 60$</li>
	<li><code>ADDT</code>: $t = t + 10$</li>
	<li><code>MINT</code>: $t = t -&nbsp;10$</li>
	<li><code>ADDO</code>: $t = t + 1$</li>
	<li><code>MINO</code>: $t = t - 1$</li>
</ul>

<p>예를 들어, 58분을 설정하고 싶으면, <code>ADDO</code> (+1분) 버튼을 58번 눌러도 된다. 하지만, <code>ADDH</code>&nbsp;(+60분) 버튼을 한 번 누른 뒤에&nbsp;<code>MINO</code> (-1분) 버튼을 2번 누르면 3번의 작업으로 58분을 만들 수 있다. 42분을 설정하고 싶은 경우에는 버튼을 <code>ADDH</code>, <code>MINT</code>, <code>MINT</code>, <code>ADDO</code>, <code>ADDO</code> 순서로 5번 눌러서 만들 수 있다. <code>ADDT</code>, <code>ADDT</code>, <code>ADDT</code>, <code>ADDT</code>, <code>ADDO</code>, <code>ADDO</code> 순서로 6번 눌러서 만들 수 있지만, 버튼은 최소 횟수로 누르려고 한다.</p>

<p>설정해야 할 시간이 주어졌을 때, 그 시간을 만들기 위해 눌러야 하는 버튼의 최소 횟수와 그 방법을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력을 $T$개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 한 줄로 이루어져 있고, 설정해야 하는 시간 $N$이 분 단위의 정수로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각각의 테스트 케이스마다 5개의 정수를 한 줄에 공백으로 구분해서 출력한다. 이 정수는 입력으로 주어진 시간을 만들기 위해서 <code>ADDH</code>, <code>ADDT</code>, <code>MINT</code>, <code>ADDO</code>, <code>MINO</code>&nbsp;버튼을 누르는 횟수를 출력한 것이다. 최소 횟수로 누르는 방법이 여러가지인 경우에는 사전 순으로 가장 앞서는 방법을 출력한다.</p>

<p>작업 횟수가 동일한 방법이 여러가지가 있을 때, ADDH를 누르는 횟수가 적은것이 사전 순으로 앞서는 것이고, <code>ADDH</code>를 누르는 횟수가 동일하면, <code>ADDT</code>를 누르는 횟수가 적은것이 먼저이다. <code>ADDT</code>를 누르는 횟수가 동일하면 <code>MINT</code>를 누르는 횟수가 적은것이,&nbsp;<code>MINT</code>를 누르는 횟수가 동일하면 <code>ADDO</code>를 누르는 횟수가 적은것이,&nbsp;<code>ADDO</code>를 누르는 횟수가 동일하면 <code>MINO</code>를 누르는 횟수가 적은것이 사전 순으로 앞서는 것이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
5
12
27
','0 0 0 5 0
0 1 0 2 0
0 3 0 0 3
','MATH'),
                                                                                                                (3412,'BAEKJOON','https://www.acmicpc.net/problem/19945',19945,'새로운 언어 CC','1초','512 MB',5,'<p>C언어는 int형 변수를 32개의 bit를 이용하여 2의 보수 방식을 따라서&nbsp;이진수의 형태로 저장한다.</p>

<p>즉, 정수&nbsp;10은 0000 0000 0000 0000 0000 0000 0000 1010으로 저장된다.</p>

<p>하지만 세상을 뒤흔들 새로운 언어 CC는 메모리를 줄이기 위해 int형 변수를 저장할 때&nbsp;앞에서부터 연속된 0은 저장하지 않는다. 즉, 정수&nbsp;10은 1010으로 저장된다. 그 외에 저장하는 방법은 C언어와 같다.</p>

<p>정수&nbsp;<em>n</em>을 CC에 저장하는데 필요한 bit의 개수를 출력하여라. 단,&nbsp;<em>n</em>이 0일 때는 1개의 bit를 사용하여 0을 저장한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>언어 CC에 저장할&nbsp;<em>n</em>이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>변수&nbsp;<em>n</em>을 저장하는데 필요한 bit의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10
','4
','MATH'),
                                                                                                                (3411,'BAEKJOON','https://www.acmicpc.net/problem/19946',19946,'2의 제곱수 계산하기','1초','512 MB',4,'<p>태영이의 취미는 2의 제곱수를 계산하는 것이다.</p>

<p>태영이는 2<sup>64</sup>&nbsp;= 18,446,744,073,709,551,616 이라는 것을 알고 있고 직접 2<sup>0</sup>부터 2씩 곱해서 2<sup>64</sup>을 구할 것이다.</p>

<p>하지만 태영이는 2씩 곱하는 와중에 1을 빼버리는 실수를 딱 한 번 해버리고 말았다. (실수는 단 한 번만 하며, 그 후에는 2로 곱하는 계산을 정확하게 수행한다.)</p>

<p>예를 들어, 2<sup>1 </sup>=&nbsp;2로 계산을 잘 하다가 2<sup>2</sup>&nbsp;= 3으로 계산해버리는 어이없는 실수를 해버리는 것이다.</p>

<p>그렇게 된다면 2<sup>3&nbsp;</sup>= 6 , 2<sup>4</sup>&nbsp;= 12 ... 로 계산하여 점점 오차가 커진다.</p>

<p>태영이가 구한 2<sup>64</sup>인 <em>N</em>이&nbsp;주어졌을 때, 태영이가 처음으로 실수한 구간을 찾아주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>양의 정수&nbsp;<em>N</em>이 주어진다.</p>

<p><em>N</em>은 태영이가 2<sup>64</sup>를 계산했을 때&nbsp;나올 수 있는 수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>태영이가 처음으로 실수한 구간을 찾아주자.</p>

<p>2<sup>K</sup>&nbsp;= 2<sup>K</sup>-1로 계산해버렸을 때의 <i>K</i>를 출력하면 된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','18446744073709551615
','64
','MATH'),
                                                                                                                (3413,'BAEKJOON','https://www.acmicpc.net/problem/19953',19953,'영재의 산책','1초','512 MB',12,'<p>영재는 알고리즘 문제를 푸는 것을 좋아한다. 하지만 잘 풀지는 못하는 영재는 집중이 되지 않을 때 산책을 한다. 오늘도 집중이 되지 않아 영재는 동네를 산책한다. 영재의 동네는 2차원 좌표로 이루어져 있다.</p>

<p><meta charset="utf-8"></p>

<p dir="ltr">아무 규칙 없이 걷는 것은 흥미롭지 않다고 느낀 영재는 일정한 규칙을 갖고 걷기로 하였다.</p>

<p dir="ltr">만약&nbsp;<em>t</em>초에&nbsp;<em>v</em>의 속력으로 걷는다면 1초 동안 <i>v</i>의 속력으로 걷는다. 그리고&nbsp;<em>t</em>+1초가 된 순간&nbsp;오른쪽으로 90도 회전한 후&nbsp;(<em>v</em>×<em>m</em>)%10의 속력으로 걷는다. 초기 속력&nbsp;<em>v</em><sub>0</sub>,&nbsp;<em>m</em>, 총 산책 시간&nbsp;<em>t</em>가 주어졌을 때, 영제의 최종 위치를 출력하여라. 영재의 처음 위치는 (0, 0)이고, 처음 방향은 북쪽이다.</p>

<p dir="ltr">북쪽은 y좌표가 커지는 방향이고, 동쪽은 x좌표가 커지는 방향이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>초기 속력&nbsp;<em>v</em><sub>0</sub>,&nbsp;<em>m</em>, 총 산책 시간&nbsp;<em>t</em>가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>산책이 끝난 후 영재의 위치를 출력하여라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1 3
','1 0
','MATH'),
                                                                                                                (3421,'BAEKJOON','https://www.acmicpc.net/problem/19954',19954,'바나나킥을 잡아라!','1초','512 MB',16,'<p>IGRUS 회장 현정이는&nbsp;동아리원들이 더욱 열심히 문제를 풀기를 바라는 마음으로 바나나킥을 뿌립니다! IGRUS 회장은 운동장에 바나나킥 <em>X</em> 개를 뿌려 놓았습니다. 처음에 바나나킥은 모두 칸의 중앙에 놓여&nbsp;있습니다.</p>

<p>운동장은 겉면이 벽으로 둘러싸인&nbsp;<em>N</em> 행 <em>M</em> 열의 행렬의 형태이며, 각 바나나킥은 항상 왼쪽 혹은 오른쪽으로 초당 한 칸의 속도로 움직입니다.</p>

<p>만약 바나나킥이 운동장의 벽에 부딪힌다면 방향을 반대로 바꾸어 움직입니다. 예를 들어서, 바나나킥이 2 행 1 열의 중앙에 존재하고 왼쪽으로 움직이고 있었다면 1초 후에는 같은 위치에 존재하고 오른쪽으로 움직이는 상태가 됩니다. 바나나킥끼리 서로 충돌하게 된다면 방향을 반대로 바꾸어 움직이게 됩니다. 또한, 바나나킥이 충돌하는 순간에는 한 칸에 두 개의 바나나킥이 존재할 수 있습니다.</p>

<p>운동장의 첫 번째 행의 모든 칸의 중앙에는 각각 IGRUS 회원들이 한 명씩 바나나킥을 먹기 위해 대기하고 있습니다. IGRUS 회원들은 1초에 한 번씩 상, 하, 좌, 우로 인접한 칸의 중앙으로 이동하거나, 아예 이동을 하지 않을 수도 있습니다.</p>

<p>IGRUS 회원들은 한 번 이동할 때마다 1의 에너지를 소모합니다. 이동하지 않는다면 에너지를 소모하지 않습니다. 그리고 이동한 칸에 바나나킥이 존재한다면 바로 바나나킥을 먹어서 없애버립니다. 이동하는 중에는 달리느라 바빠서 바나나킥을 만나도 먹지 못하고 스쳐 지나갑니다.(한 칸에 여러 명이 몰리게 된다면 시작한 열의 번호가 가장 작은 사람이 바나나킥을 먹게 됩니다.)</p>

<p>IGRUS 회원들의 목적은 바나나킥을 최대한 많이 먹는 것이 1순위이며 소모한 에너지를 최소화시키는 것이 2순위입니다.<br>
IGRUS 회원들은 목적을 최대한 잘 수행하기 위해 항상 최선의 방법으로 움직입니다.</p>

<p>운동장의 크기와 바나나킥들의 시작 상태가 주어졌을 때, 목적을 가장 잘 수행한 사람이 먹는 바나나킥의 개수와 소모한 에너지를 계산해 주세요.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 양의 정수&nbsp;<em>N, M, X&nbsp;</em>가 각각 공백을 두고 주어집니다.</p>

<p>그 후 <i>X&nbsp;</i>개의 줄에 걸쳐 바나나킥의 정보가 주어진다. 각 줄은 <em>i</em> 번째 바나나킥의 위치를 나타내는&nbsp;3개의 양의 정수&nbsp;<em>A<sub>i</sub>, B<sub>i</sub>, C<sub>i</sub></em>&nbsp;가 주어집니다.</p>

<p><em>i&nbsp;</em>번째 바나나킥이&nbsp;<em>A<sub>i</sub>&nbsp;</em>행 <i>B</i><em><sub>i</sub></em>&nbsp;열의 정중앙에&nbsp;존재한다는 뜻이며,&nbsp;<em>C<sub>i</sub>&nbsp;</em>가 1이면 오른쪽으로 움직인다는 뜻이고 -1이면 왼쪽으로 움직인다는 뜻입니다.</p>

<p>시작하는 순간에 모든 바나나킥은 서로 다른 칸에 존재합니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>목적을 제일 성공적으로 수행한 사람이 먹은 바나나킥의 개수와 소모한 에너지의 양을 공백으로 구분하여 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>이해를 돕기 위한 설명</p>

<p>(<em>x, y</em>)는 <em>x&nbsp;</em>행 <em>y&nbsp;</em>열을 의미합니다.&nbsp;</p>

<p><img alt="" src="https://upload.acmicpc.net/dee996ca-95f0-4e1a-a277-b67b47fd3e69/-/preview/"><br>
0초 - (2,1)에 바나나킥 하나 (2,2)에 바나나킥이 하나 있는 상황입니다. 둘 다 왼쪽으로 움직이는 상황입니다.</p>

<p><img alt="" src="https://upload.acmicpc.net/9ef0d569-bee2-47c6-8d92-b35713c989de/-/preview/"><br>
0.5초 -&nbsp;(2,1)에 있던 바나나가 벽에 부딪혀서 방향을 바꿉니다.</p>

<p><img alt="" src="https://upload.acmicpc.net/874e75b7-f866-4a1b-be49-1d1afc65297b/-/preview/"><br>
1초 - 두 바나나가 (2,1)에서 충돌합니다. 만약 이때 (2,1)에 도착하는 회원이 있다면 두 바나나킥을 모두 먹습니다.</p>

<p>&nbsp;</p>

<p><img alt="" src="https://upload.acmicpc.net/ec27d2ae-3403-4593-b88f-a1a1bb306b31/-/preview/"><br>
2초 - (2,1)과 (2,2)에 있는 바나나킥 모두 오른쪽을 향하게 됩니다.</p>

<p>&nbsp;</p>

				</div>
				</div>','3 5 3
3 1 1
3 2 -1
2 4 -1
','2 2
','MATH'),
                                                                                                                (3423,'BAEKJOON','https://www.acmicpc.net/problem/20000',20000,'20000 바이트 챌린지','1초','1024 MB',26,'<p>Baekjoon Online Judge에 많은 문제들이 추가되어 어느덧 20000번 문제가 나오게 되었다. 숏코딩을 좋아하는 실버는 20000번 문제를 기념하여 20000 바이트 챌린지를 열었다!</p>

<p>풀어야 하는 문제는 간단하다. <a href="https://u.acmicpc.net/a921f42a-9e94-4fa7-a7bc-58608c92a1cf/challenge.zip">이 링크</a>에 있는 challenge0.out부터 challenge9.out까지의 파일에 여러분의 프로그램이 출력해야 하는 내용이 들어있다. 여러분의 프로그램은 정수 N을 입력받아서 N번째 파일에 있는 내용을 <strong>그대로</strong> 출력하면 된다. 단, 코드 길이는 20,000 바이트를 넘지 않아야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 정수 N이 주어진다. (0 ≤ N ≤ 9)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>challengeN.out의 내용을 출력한다. 예를 들어 N=3인 경우 challenge3.out의 내용을 출력하면 된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','0
','BOJ 20000
','MATH'),
                                                                                                                (3425,'BAEKJOON','https://www.acmicpc.net/problem/20003',20003,'거스름돈이 싫어요','1초','512 MB',10,'<p>프로불편러 지수는 딱 떨어지지 않는 수는 질색이다. 거스름돈이 남는 것도 딱 질색이다. 지수가 아이템을 사려 하는데, 아이템의 가격은 다 분수로 이루어져 있다. 지금은 가령, 3/2코인을 사려고 2코인을 적립하고 결제하면 1/2코인이 남아버리는 것이다. 그래서 개발사에게 모든 아이템을 딱 떨어지게&nbsp;나눌 수 있는 가격 단위를 건의하기 위해, 새로운 가격 단위는 최대 몇 코인인지를 구하려고 한다.</p>

<p>N개의 종류의 아이템을 딱 떨어지게 나눌 수 있는 코인 단위를 구하라. 이때 아이템과 코인은 모두 분수 형태로 나와야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 아이템의 개수 N (1 ≤ N ≤ 50)이 주어진다.</p>

<p>두 번째 줄부터는 한 줄에 분자 A, 분모 B (1 ≤ A, B ≤ 40) 쌍이 주어진다. 이는 기약분수 형태가 아닐 수도 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>새로운 코인 단위의&nbsp;분자, 분모를 공백으로 구분하여 출력한다. 단, 기약분수 형태이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
1 4
2 5
','1 20
','MATH'),
                                                                                                                (3430,'BAEKJOON','https://www.acmicpc.net/problem/20004',20004,'베스킨라빈스 31','1초','512 MB',7,'<p>베스킨라빈스 게임은 1부터 31까지의 수를 순차적으로 한번에 1개 이상, 3개 이하&nbsp;연달아 부를 수 있으며, 마지막 31을 부른 사람이 지는 게임이다. 시온이와 민우는 베스킨라빈스 게임을 하기로 했지만 이 게임이 너무 유명한 나머지 시온이와 민우 모두 필승 방법을 알고 있었다. 평소에 항상 운이 없던 시온이는 가위바위보를 져 민우에게 선공을 빼았기게 되었고 이대로 게임을 한다면 질 수밖에 없는 상황이다. 그래서 시온이는 1개 이상, N개 이하의 수를 부를 수 있는 규칙의 게임으로 변형하자고 말하였고 민우도 수락했다.</p>

<p>이 경우 시온이가 게임을 이길 수 있는 모든 n(1 ≤ n ≤ A)을 출력하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 A이 주어진다. (1 ≤ A ≤ 31)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 줄에 시온이가 게임을 이길 수 있는 n을 한 줄에 하나씩 오름차순으로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','1
','MATH'),
                                                                                                                (3436,'BAEKJOON','https://www.acmicpc.net/problem/20054',20054,'트리 가짓수 세기','2초','256 MB',16,'<p>이진 검색 트리(BST, Binary Search Tree)는 모든 노드가 최대 $2$개의 자식 노드를 가지고 있는 트리이다. 만약 어떤 노드에 쓰여 있는 수가 $X$라면, 그 노드의 왼쪽 서브트리에는 $X$보다 작은 수, 오른쪽 서브트리에는 $X$보다 큰 수만 저장되어 있어야 한다.</p>

<p>다음은 BST의 삽입하는 함수를 수도-코드(pseudo code)로 작성한 것이다.</p>

<pre>insert(number X, node N)
    if X가 노드 N에 있는 수보다 작다면
        if N의 왼쪽 자식이 없다면
            X를 포함하는 새 노드를 만든 뒤, N의 왼쪽 자식으로 만든다
        else
            insert(X, N의 왼쪽 자식)
    else (X가 노드 N에 있는 수보다 크다면)
        if N의 오른쪽 자식이 없다면
            X를 포함하는 새 노드를 만든 뒤, N의 오른쪽 자식으로 만든다
        else
            insert(X, N의 오른쪽 자식)</pre>

<p>첫 번째로 삽입하는 수를 루트로 놓고, 그 뒤로 삽입하는 모든 수 X에 대해서 insert(X, root)를 호출하게 된다.</p>

<p>트리의 높이는 루트 노드로부터 리프 노드까지의 경로 중 가장 긴 경로 위에 존재하는 노드의 개수를 뜻한다. (리프 노드는 자식 노드가 없는 것을 의미한다.)</p>

<p>$1$부터 $N$까지의 수를 BST에 삽입하려고 한다. 삽입 순서를 자유롭게 정할 수 있을 때 만들어지는 높이가 $K$ 이하인 BST의 가짓수를 구해보자. (BST의 루트 노드는 높이가 1로 가정한다.)</p>

<p>$2$ $1$ $3$ 순으로 넣었을 때 생성되는 BST와 $2$ $3$ $1$ 순으로 넣었을 때 생성되는 BST는 같은 경우이고, $3$ $2$ $1$ $4$와 $2$ $1$ $3$ $4$ 순으로 넣었을 때 생성되는 BST는 서로 다른 경우이다.</p>

<p>구하려는 경우의 수는 매우 커질 수 있으므로 답을 $10^9+7$로 나눈 나머지를 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 두 정수 $N$, $K$이 공백으로 구분되어 주어진다. ($1 \leq N \leq 3500,\, 1 \leq K \leq 12$)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>만들어지는 BST의 경우의 수를 $10^9+7$로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1
','1
','MATH'),
                                                                                                                (3445,'BAEKJOON','https://www.acmicpc.net/problem/20116',20116,'상자의 균형','1초','256 MB',8,'<p>진수에게는 총 <em>n</em>개의 상자가 있다. 모든 상자는 <em>2L</em> × <em>2L</em> 크기의 정사각형 모양이고, 상자의 밀도는 균일하다.</p>

<p>진수는 이 상자들을 바닥에서부터 차곡차곡 쌓아올린다. 바닥은 y=0 이다.</p>

<p>이 상자들을 바닥에 가까이 있는 있는 상자부터 각각 1번, 2번, ...,&nbsp;<em>n</em>번 상자라고 보았을 때 i번 상자의 중심은 (x<sub>i</sub>, <em>2L</em>×<em>i&nbsp;</em>- <em>L</em>) 이 되고, 이는 i번 상자 1개의 무게 중심과 같다.</p>

<p>위에서 상자의 밀도는 균일하다고 가정하였으므로, 상자 여러 개의 무게 중심을 구하면 각각의 상자들의 무게 중심을 평균 낸 값이 된다.</p>

<p>진수는 원하는 중심 좌표에 상자들을 쌓아올릴 때 무너지지 않고 균형을 이루는 지를 알고 싶다.</p>

<p>모든 1 ≤ <em>i</em> < <em>n</em> 에 대하여 <em>i+1</em>, <em>i+2</em>, ..., <em>n</em> 번 상자들의 무게 중심의 x좌표가 <em>i</em>번 상자의 구간 안에 포함되면 박스 전체가 균형을 이루게 된다. <em>i</em>번 상자의 구간는 <em>x<sub>i</sub>-L</em>과 <em>x<sub>i</sub>+L</em> 사이로 정의하며, <em>x<sub>i</sub>-L</em>, <em>x<sub>i</sub>+L</em>은 포함하지 않는다. 따라서 상자 모서리에 걸쳐 있는 경우는 균형을 이루지 않는 것으로 한다.</p>

<p><em>n</em>개의 상자들의 중심 좌표가 주어지면, 해당 상자들이 균형을 이루는지 알아내보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 상자의 개수 <em>n</em> (1 ≤&nbsp;<em>n</em> ≤ 200,000) 과 상자의 사이즈 <em>L</em> (1 ≤&nbsp;<em>L</em> ≤&nbsp;10<sup>9</sup>) 이 주어진다.</p>

<p>두 번째 줄에는 진수가 원하는 각각의 상자들의 무게 중심&nbsp;x좌표 <em>x<sub>1</sub></em>, <em>x<sub>2</sub></em>, ..., <em>x<sub>n</sub></em> (-10<sup>9</sup>&nbsp;≤&nbsp;<em>x<sub>i</sub></em> ≤&nbsp;10<sup>9</sup>) 이&nbsp;주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 해당 상자들이 균형을 이룬다면 "<code>stable</code>", 그렇지 않다면 "<code>unstable</code>" 을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 10
0 10 9
','stable
','MATH'),
                                                                                                                (3446,'BAEKJOON','https://www.acmicpc.net/problem/20121',20121,'카드 셔플','1초','256 MB',17,'<p>마술사 견습생 진수에게는 <em>N</em> (<em>N</em>은 홀수) 장의 카드가 있고 진수는 두 가지 셔플을 할 줄 안다.</p>

<p>첫 번째 셔플을 X-셔플이라고 하고 셔플을 하는 방법은 다음과 같다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/8ac7f509-d217-47ef-980a-686b7eae7511/-/preview/"></p>

<p>앞 부분의 <em>(N+1)/2</em> 개와 뒷 부분 <em>(N-1)/2</em> 개로 나눈다.</p>

<p>뒷 부분을 순서대로 앞 부분 사이사이에 끼워넣는다.</p>

<p>두 번째 셔플을 Y-셔플이라고 하고 셔플을 하는 방법은 다음과 같다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/b2230350-6c44-449c-8b7b-3aaf7c998a34/-/preview/"></p>

<p>앞 부분의 <em>(N-1)/2</em> 개와 뒷 부분 <em>(N+1)/2</em> 개로 나눈다.</p>

<p>앞 부분을 순서대로 뒷 부분 사이사이에 끼워넣는다.</p>

<p>처음 카드팩을 뜯으면 카드는 앞 부분 부터 차례대로 1번, 2번, ..., <em>N</em>번 카드가 순서대로 있다.</p>

<p>진수는 위의 두 셔플을 사용하여 <em>A</em>번 카드를 앞에서 <em>B</em>번째로 보내는 마술을 하고자 한다.</p>

<p>하지만 카드가 많아질수록 머리가 복잡하여 힘들어 고민하고 있다. 진수를 도와 최소 셔플 방법을 구하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트 케이스 개수 <em>T</em> (1 ≤&nbsp;<em>T</em> ≤ 100) 가 주어진다.</p>

<p>다음 <em>T</em>개 줄에는 각 줄 마다 <em>N</em>, <em>A</em>, <em>B</em> (3 ≤ <em>N</em> < 10<sup>9</sup>, 1 ≤ <em>A</em>, <em>B</em> ≤&nbsp;<em>N</em>, <em>A</em> ≠&nbsp;<em>B</em>, <em>N</em>은 홀수) 가 주어진다.</p>

<p>항상 방법이 존재하는 입력만 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p><em>i</em>번째 줄에는 <em>i</em>번째 테스트 케이스의 최소 횟수로 셔플하는 방법을 나타내는 문자열 <em>S</em> = <em>s<sub>1</sub>s</em><sub><em>2</em> ...&nbsp;</sub><em>s<sub>K</sub></em> (<em>s<sub>j</sub></em> = <code>X</code> or <code>Y</code>) 를 출력한다.</p>

<p><em>s<sub>j</sub></em>는 <em>j</em>번째 셔플이 X-셔플인지 Y-셔플인지를 의미한다.</p>

<p>방법이 여러 가지인 경우 그 중 하나만 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
9 6 7
3 1 2
','XYX
Y
','MATH'),
                                                                                                                (3447,'BAEKJOON','https://www.acmicpc.net/problem/20133',20133,'모래시계 2','1.5초','1024 MB',20,'<p>모래시계 가공업자 택희의 뒤를 이어서 국렬이가 좌표평면 위에 주어진 점들을 받아서 그 안에서 모래시계를 추출하는 작업을 한다.</p>

<p>모래시계는 아래와 같이 생겼다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/98609f29-cedc-4b2a-8804-fd391c4c581a/-/preview/"></p>

<p style="text-align: center;">[그림] 모래시계</p>

<p>좀 더 정확히 말하면, 다음의 조건을 만족하는 것을 모래시계라고 할 것이다.</p>

<ol>
	<li>삼각형 2개로 두 삼각형이 한 점을 공유한 상태여야 한다.</li>
	<li>삼각형들끼리 서로 겹치면 안 된다.</li>
</ol>

<p>만일 어떤 두 모래시계에 대해, 두 모래시계에 속한 정점과 간선의 합집합이 두 모래시계 중 한쪽과 동일할 때, 이 두 모래시계는 동일한 모래시계라고 한다. 이 조건을 만족하지 않는 모든 두 모래시계는 서로 다른 모래시계이다.</p>

<p>택희처럼 국렬이도 모래시계의 개수를 빠르게 세고 싶다. 국렬이가 택희에게 도전할 수 있게 도와주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>다음과 같이 입력이 주어진다.</p>

<div style="background:#eeeeee;border:1px solid #cccccc;padding:5px 10px;"><em>N</em><br>
<i>x<sub>1</sub></i>&nbsp;<i>y<sub>1</sub></i><br>
. . .<br>
<i>x<sub>N</sub></i>&nbsp;<i>y<sub>N</sub></i></div>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>만들 수 있는 모래시계의 개수를 출력하여라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1 2
-2 1
-3 -2
2 -3
0 0
','6
','MATH'),
                                                                                                                (3448,'BAEKJOON','https://www.acmicpc.net/problem/20134',20134,'소가 연세로를 건너간 이유','5초','1024 MB',20,'<p>소가 왜 길을 건너는지에 대한 문제는 유명한 문제로, 농부 존의 소들이 길을 자주 건넌다는 것은 잘 알려진 사실이다. 그래서 존의 소들이 연세대학교에 와서 연세로를 건너려고 한다.</p>

<p>연세로 양쪽에 동서로 목초지가 평행하게 일렬로 1번부터 <em>N</em>번까지 있다. 서쪽의 <em>i</em>번 목초지에는 <em>l<sub>i</sub></em>번 소를, 동쪽의 <em>i</em>번 목초지에는 <em>r<sub>i</sub></em>번 소를 방목한다.&nbsp;2017년 백금색의 길에 있는 목초지처럼 종별로 목초지 구조가 너무 달라서 한 목초지에는 정해진 종의 소만 방목할 수 있다. 즉, <em>i</em>번 목초지에는 <em>i</em>번 소만 방목할 수 있다. 소가 자신의 종을 방목하는 반대편의 목초지로 이동할 때 연세로를 건넌다고 한다.</p>

<p>목초지의 순서가 뒤죽박죽이어서, <em>a</em>&nbsp;종의 소와 <em>b</em>&nbsp;종의 소가 건너는 길이 겹칠 수도 있다. 존이 목초지 건설에 주의를 기울이지 않은 탓이다. 이때 (<em>a</em>,&nbsp;<em>b</em>)를 "가로지르는 쌍"이라고 하자.</p>

<p>존은 가로지르는 쌍의 수를 계산하기에 앞서, 2017년 백금색의 길을 건널 때랑 조금 다른 방법을 고안했다. 0 ≤ <em>k<sub>1</sub></em>, <em>k<sub>2</sub></em> < N인 정수 <em>k<sub>1</sub></em>, <em>k<sub>2</sub></em>에 대해서 한쪽 목초지에서 맨 뒤에 있는 목초지 <em>k<sub>1</sub></em>개를 맨 앞으로 옮기고, 다른 쪽 목초지에서 맨 뒤에 있는 <em>k<sub>2</sub></em>개를 맨 앞으로 순서 변경 없이 옮기는 것이다. 하지만, 존은&nbsp;<em>k<sub>1</sub>과&nbsp;k<sub>2</sub></em>를 무엇으로 할지 아직 정하지 않았다.</p>

<p>모든 0 ≤&nbsp;<em>k<sub>1</sub></em>, <em>k<sub>2</sub></em> < <em>N</em>에 대해서 가로지르는 쌍의 개수의 합을 1,000,000,009로 나눈 나머지를 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>다음과 같이 입력이 주어진다.</p>

<div style="background:#eeeeee;border:1px solid #cccccc;padding:5px 10px;"><em>N</em><br>
<i>l<sub>1</sub></i>&nbsp;. . .&nbsp;<i>l<sub>N</sub></i><br>
<i>r<sub>N</sub></i>&nbsp;. . .&nbsp;<i>r<sub>N</sub></i></div>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>가로지르는 쌍의 개수의 합을 1,000,000,009로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 2 3
3 2 1
','15
','MATH'),
                                                                                                                (3449,'BAEKJOON','https://www.acmicpc.net/problem/20153',20153,'영웅이는 2의 거듭 제곱을 좋아해! 영웅이는 2의 거듭 제곱을 좋아해!','2.2초','222 MB',9,'<p>영웅이는 2의 거듭제곱을 좋아해서&nbsp;<em>A</em>를 최대한 많은 항의 2의 거듭제곱의 합으로 표현한다. 표현된 2의 거듭제곱은 지수가 0 이상의 서로 다른 정수이다.</p>

<p>예를 들어 31은 5개의 항으로 표현된다. 우리는 이것을 영웅이의 표현법이라고 부를 것이다.</p>

<p>N개의 자연수&nbsp;<em>A<sub>1</sub></em>,&nbsp;<em>A</em><sub><em>2</em>,&nbsp;</sub>...,&nbsp;<em>A<sub>N</sub></em>이 주어진다. 이 중 최대 한 개의 자연수를 제거하고, 나머지를 영웅이의 표현법으로 나타내자.</p>

<p>그 후 각 정수 x에 대해 2<sup>x</sup>가 홀수 개 존재하면 2<sup>x</sup>를 더하고, 짝수 개 존재하면 더하지 않는다. 이렇게 했을 때 얻을 수 있는 최대 합을 2번 출력하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 자연수 <em>N&nbsp;</em>(1 ≤ <em>N</em> ≤ 2,222,222)이 주어지고,&nbsp;둘째 줄에는 <em>N</em>개의 자연수&nbsp;<em>A&nbsp;</em>(1 ≤ <em>A</em> ≤ 2,222,222)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>최댓값을 2번 연속해서 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
5 7 11
','1414
','MATH'),

                                                                                                                (3451,'BAEKJOON','https://www.acmicpc.net/problem/20157',20157,'화살을 쏘자!','1초','1024 MB',11,'<p>호준이는 요즘 활 쏘기에 푹 빠져 있다. 열심히 활 쏘기를 연습하던 호준이는 쏠 때 마다 10점이 나오는 경지에 이르렀다. 이렇다 보니 한 방향으로 있는 과녁에 쏘는 것에 실증을 느낀 호준이는 새로운 방식의 활 쏘기를 시도해 보기로 하였다.</p>

<p>화살이 꽂힌 위치에 따라 점수를 얻는 기존의 방식과 다르게 2차원의 넓은 공터에 풍선을 (<em>x, y</em>)지점에 설치해 두고 지정된 위치 (0, 0) 에서 원하는 방향으로 화살을 쏜다. 화살은 진행 방향으로 무한히 뻗어 나갈 수 있으며, 이 화살이 날아가며 터트린 풍선의 수만큼 점수를 얻기로 했다. 풍선 한 개당 점수는 1점으로 동일하고 같은 위치에 2개 이상의 풍선을 둘 수 없다. 또한 호준이가 서있는 (0, 0)에도 풍선을 둘 수 없다.</p>

<p>호준이는 신중하게 방향을 설정해 한발을 쐈고, 자신이 선택하여 쏜 방향이 최선의 방향인지 궁금해진 호준이는 화살 하나로 얻을 수 있는 최대 점수가 궁금해졌다. 활쏘기 연습하느라 바쁜 호준이를 대신해서 풍선의 위치가 주어진다면 화살 한 개를 쏘아 얻을 수 있는 가장 높은 점수를 알려주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫번째 줄에 풍선의 개수 정수&nbsp;<em>N</em>(1&nbsp;≤&nbsp;<em>N</em>&nbsp; ≤ 100,000)이 주어진다.</p>

<p>다음&nbsp;<em>N</em>개의 줄에는 풍선의 위치인 두 정수&nbsp;<em>x</em>,<em> y</em> (-1,000,000 ≤ <em>x</em>, <em>y</em> ≤ 1,000,000)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫번째 줄에 화살 한 개를 쏘아 얻을 수 있는 최대 점수를 구해 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
8 16
10 -3
2 4
7 10
1 2
','3
','MATH'),
                                                                                                                (3452,'BAEKJOON','https://www.acmicpc.net/problem/20186',20186,'수 고르기','1초(추가시간없음)','512 MB',7,'<p>N개의 자연수가 좌우로 배열되어 있다. 여러분은 이 중 K개를 골라야 한다. 고를 때는 K개 모두를 한번에 골라야 한다.</p>

<p>여러분이 고른 수 각각에 대해서 그 수의 점수를 계산할 것이다. 점수는 자신의 수에서 자신의 왼쪽에 있는 수 중 선택된 수의 개수를 뺀 값이다. 이렇게 고른 수 각각에 그 점수를 계산한 후 전체점수는 계산된 점수들의 합이다. 여러분은 전체점수가 최대가 되도록 K개의 수를 골라야 한다.</p>

<p>예를 들어서, N = 5개의 자연수가 순서대로 2 3 1 2 1 로 주어지고, K = 3이라고 하자. 만약 첫 번째 2와 두 개의 1을 골랐다면, 각 수의 점수를 계산해서 나열하면 2 0 ?1과 같다. 따라서 전체 점수는 1이다. 만약 첫 번째 2와 3, 그리고 두 번째 2를 고르고, 각 수의 점수를 계산해서 나열하면, 2 2 0과 같다. 따라서 전체점수는 4이다. 이 예에서 전체점수의 최댓값은 4이다.</p>

<p>N개의 자연수 배열과 양의 정수 K가 주어질 때, 전체점수의 최댓값을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 N과 K가 공백 하나를 사이로 두고 주어진다. 두 번째 줄에 N개의 자연수가 공백 하나를 사이에 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 주어진 N개의 수 중 K개의 수를 고를 때, 전체점수의 최댓값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 3
2 3 1 2 1
','4
','MATH'),
                                                                                                                (3453,'BAEKJOON','https://www.acmicpc.net/problem/20188',20188,'등산 마니아','2초','512 MB',16,'<p>동네 뒷 산에는 등산로가 있다. 등산로는 N개의 작은 오두막들이 N ?1개의 오솔길로 이어진 형태이다. 한 오솔길은 두 개의 오두막을 양 방향으로 연결한다. 한 오솔길의 길이는 1이다. 어떤 오두막에서도 다른 모든 오두막으로 하나 이상의 오솔길을 따라 이동하는 것이 가능하다. 오두막들은 1번부터 N번까지 번호가 붙어 있으며, 1번 오두막이 산 정상에 있다. 1번 오두막에서 다른 오두막으로 가는 가장 짧은 길을 따라 가면서 거치는 모든 오솔길들은 항상 산을 내려가는 방향이다.</p>

<p>철수는 등산 마니아이다. 철수가 한 오두막에서 다른 오두막으로 갈 때는 항상 <strong>산 정상을 거치는 가장 짧은 길</strong>을 따라 간다. 이렇게 간 길의 다양성은 길에 포함된 오솔길의 개수로 정의된다. 두 번 이상 지나간 오솔길은 <strong>한 번만</strong> 센다는 것에 주의하라.</p>

<p>아래 그림은 가능한 하나의 상황을 보여 준다. 산 정상에 1번 오두막이 있고 3번 오두막과 4번 오두막이 오솔길로 이어져 있다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/12b4c39d-c5cc-47ec-9bed-88696fa063ea/-/preview/" style="width: 338px; height: 253px;"></p>

<p>아래 그림은 2번 오두막에서 7번 오두막으로 가는 가장 짧은 길을 보여준다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/eeb25e07-2313-4eeb-8b94-7395d7724d0b/-/preview/" style="width: 355px; height: 232px;"></p>

<p>아래 그림은 2번 오두막에서 7번 오두막으로, 정상을 거쳐서 가는 가장 짧은 길을 보여 준다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/28038a0d-0133-4bd3-94c9-c179e917ff1f/-/preview/" style="width: 362px; height: 232px;"></p>

<p>등산로의 구성을 입력으로 받아 모든 가능한 i, j의 쌍에 대해서(1 ≤ i < j ≤ N), 철수가 i번 오두막에서 j번 오두막으로 가는 길의 다양성의 총 합을 계산하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 N이 주어진다. 다음 N ?1개의 줄에 오두막 번호 두 개가 공백 하나를 사이에 두고 주어진다. 두 오두막이 오솔길로 이어져 있다는 뜻이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 문제의 정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 2
2 3
','5
','MATH'),
                                                                                                                (3454,'BAEKJOON','https://www.acmicpc.net/problem/20189',20189,'사탕 돌리기','2초','512 MB',19,'<p>원기둥 형태의 뚜껑이 없는 깡통 N개가 원형으로 배열되어 있다. 각 깡통에는 시계 방향 순서대로 1번부터 N번까지의 자연수 번호가 붙어 있으며, 각 깡통에는 사탕이 K개씩 들어 있다. 따라서, 총 N ×K개의 사탕이 있는 것이다.</p>

<p>모든 사탕은 1 이상 N 이하의 자연수로 표현되는 색깔을 가진다. 모든 색 c (1 ≤ c ≤ N)에 대해, 깡통에 들어 있는 총 N × K개의 사탕 중 색깔이 c인 사탕은 정확히 K개 있다. 각 깡통에 들어 있는 사탕의 색이 무엇인지는 입력으로 주어진다.</p>

<p>이때 <strong>사탕 돌리기</strong>라는 연산은 아래와 같이 사탕을 하나씩 옮기는 N개의 작업을, 아래에 주어진 순서대로 수행하는 것을 말한다.</p>

<ul>
	<li>1번 깡통에서 임의로 사탕을 하나 꺼내 2번 깡통에 넣는다.</li>
	<li>2번 깡통에서 임의로 사탕을 하나 꺼내 3번 깡통에 넣는다.</li>
	<li>3번 깡통에서 임의로 사탕을 하나 꺼내 4번 깡통에 넣는다.</li>
	<li>.......</li>
	<li>(N ? 1)번 깡통에서 임의로 사탕을 하나 꺼내 N번 깡통에 넣는다.</li>
	<li>N번 깡통에서 임의로 사탕을 하나 꺼내 1번 깡통에 넣는다.</li>
</ul>

<p>당신은 주어진 초기 상태에서 사탕 돌리기를 정확히 Q번 반복 수행할 것이다. 수행한 이후에 당신은 c의 색깔을 가지는 모든 사탕이 c번 깡통에 들어가도록 하고 싶다. 즉, 1번 깡통에는 1번 색깔의 사탕만이 존재하고, 2번 깡통에는 2번 색깔의 사탕만이 존재하고, ...., 마지막으로 N번 깡통에는 N번 색깔의 사탕만이 존재하도록 하고자 한다. 이러한 상태를 <strong>올바른 상태</strong>라고 하자.</p>

<p>입력으로 각 깡통에 들어 있는 사탕의 상황이 주어질 때, 초기 상태에서 사탕 돌리기를 정확히 Q번 반복 수행한 후 위에서 설명한 올바른 상태를 이룰 수 있는지 판단하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 N, K, Q가 공백 하나를 사이로 두고 주어진다.</p>

<p>이어지는 N개의 줄의 각 i (1 ≤ i ≤ N)번째 줄에는 1 이상 N 이하인 K개의 정수가 공백 하나씩을 사이로 두고 주어지며, 이는 초기 상태에서 i번 깡통에 들어 있는 K개의 사탕의 색깔들을 의미한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어진 초기 상태에서 사탕 돌리기를 정확히 Q번 반복 수행하여 올바른 상태로 만들 수 있다면 숫자 1을, 아니면 숫자 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 1 1
2
3
1
','1
','MATH'),
                                                                                                                (3455,'BAEKJOON','https://www.acmicpc.net/problem/20206',20206,'푸앙이가 길을 건너간 이유','1초','512 MB',10,'<p>흑석동은 최근 뉴타운&nbsp;공사로 인하여 지나가면 안되는 위험 지역이 존재한다. 이 지역은&nbsp;X축, Y축과 평행한 직사각형 형태로 이루어져 있다.</p>

<p>중앙대의 마스코트인 푸앙이는&nbsp;직선 상의 경로를 따라서 흑석동을 통과하고&nbsp;있다. 이 때&nbsp;흑석동의 망령 호민이는 푸앙이가&nbsp;위험지역에 지나갈 것 같다는 생각이 들었다. 따라서&nbsp;푸앙이가 위험 지역을 지나가는지 여부를 알아내어서&nbsp;푸앙이가 해당 지역을 지나가지 못하도록 조치를 취할 예정이다.</p>

<p>호민이를 위해 푸앙이가 위험 지역을 지나는 지&nbsp;알려주는 프로그램을 작성해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 정수&nbsp;A, B, C (-10,000 ≤&nbsp;A, B ≤ 10,000, -100,000&nbsp;≤ C ≤ 100,000)가 주어진다. 해당 숫자들은 좌표 평면 상에서 Ax+By+C=0 형태로 표현되는 푸앙이가 지나가는&nbsp;직선 상의 경로을 나타낸다. (단 A, B 모두가 0인 경우는 직선의 방정식이 아니므로 주어지지 않는다.)</p>

<p>둘째 줄에는 정수&nbsp;X<sub>1</sub>, X<sub>2</sub>, Y<sub>1</sub>, Y<sub>2&nbsp;</sub>(-100,000 ≤ X<sub>1</sub> < X<sub>2</sub> ≤ 100,000, -100,000 ≤ Y<sub>1</sub> < Y<sub>2</sub>&nbsp;≤ 100,000) 이 주어진다. 직사각형의&nbsp;테두리들은&nbsp;x = X<sub>1</sub>, x = X<sub>2</sub>, y = Y<sub>1</sub>,&nbsp;y = Y<sub>2&nbsp;</sub>에 해당하는 직선에 포함된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p style="text-align:justify; margin-bottom:11px">첫째 줄에 푸앙이가 위험지역을 통과하면 “Poor”를, 통과하지 않으면 “Lucky”을 출력하라. 위험 지역의 모서리만&nbsp;통과하거나, 테두리 위로만&nbsp;지나가는 경우는 위험지역을 통과하지 않는 것으로 간주한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 4 5
-1 0 -1 0
','Poor
','MATH'),
                                                                                                                (3456,'BAEKJOON','https://www.acmicpc.net/problem/20296',20296,'폰친구','1초(추가시간없음)','1024 MB',17,'<p>사탕을 배달하다 지친 윤제는 집에 돌아와 잠자리에 들었다.</p>

<p>사탕처럼 달콤한 꿈속에서 윤제는 가상의 친구 ‘폰친구’들을 사귀었다. 폰친구들은 사탕을 좋아하지만, 사탕 배달을 요구하는 일은 없다. 대신 윤제가 있는 곳으로 직접 와주기 때문에 가만히 서서 사탕을 나누어 주기만 하면 된다!</p>

<p>꿈속에서 윤제는 같은 종류의 사탕 $K$개를 $N$명의 폰친구들에게 남김없이 나누어 주려고 한다. 폰친구들은 사탕을 어떻게 나누어 주어도 윤제를 떠나지 않지만, 각자 최소 $m$개 이상의 사탕을 받기를 원한다. 또한, 자신을 제외한 누군가가 $M$개보다 많은 사탕을 받는 것을 원하지 않는다.</p>

<p>윤제는 사탕을 $Nm$개 이상, $NM$개 이하로 갖고 있다. 윤제가 모든 폰친구들을 만족시키면서 사탕을 나누어 줄 수 있는 경우의 수를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 $N$, $m$, $M$, $K$이 주어진다. ($2 \leq N \leq 1\ 000$, $0 \leq m \leq M \leq 1\ 000$, $Nm \leq K \leq NM$)</p>

<p>$N$은 폰친구의 수, $K$는 윤제가 가진 사탕의 개수이다. $m$은 각 친구가 받아야 할 최소 사탕의 개수, $M$은 각 친구가 받을 수 있는 최대 사탕의 개수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>윤제가 폰친구들에게 조건에 맞게 사탕을 나누어 줄 수 있는 경우의 수를 출력한다. 너무 많은 경우가 있을 수 있으므로 경우의 수를 $10^9+7$로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 0 4 4
','5
','MATH'),
                                                                                                                (3457,'BAEKJOON','https://www.acmicpc.net/problem/20302',20302,'민트 초코','1초(추가시간없음)','1024 MB',12,'<p>상원이는 아주 특별한 방법으로 디저트를 고른다.</p>

<p>상원이는 정수의 곱셈과 나눗셈으로만 이뤄진 임의의 수식을 적고, 그 결과가 정수이면 “민트 초코”를, 정수가 아닌 유리수이면 “치약”을 먹기로 했다.</p>

<p>상원이가 적은 수식이 주어졌을 때, 어떤 디저트를 먹게 될지 맞혀보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 수식을 이루는 수의 개수 $N$이 주어진다. ($1 \leq N \leq 100\ 000$)</p>

<p>둘째 줄에 수식이 주어진다. 수식은 정수와 연산자(<span style="color:#e74c3c;"><code>*</code></span>, <span style="color:#e74c3c;"><code>/</code></span>)가 공백으로 구분되어 주어진다. 수식은 정수와 연산자가 번갈아 주어지며, 항상 정수로 시작해서 정수로 끝난다. 수식을 이루는 모든 정수는 $-100\ 000$ 이상 $100\ 000$ 이하이다.</p>

<p>올바른 수식만 주어지고, $0$으로 나누는 경우는 주어지지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>상원이가 고른 디저트가 “민트 초코”인 경우 <code><span style="color:#e74c3c;">mint chocolate</span></code>, “치약”인 경우 <code><span style="color:#e74c3c;">toothpaste</span></code>를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
1 * 2 / 3 / 4 * 5 * 6
','mint chocolate
','MATH'),
                                                                                                                (3458,'BAEKJOON','https://www.acmicpc.net/problem/20306',20306,'블랙홀','1초','1024 MB',20,'<p>평화로운 도시에 갑자기 블랙홀이 생겼다. 블랙홀은 점점 커지며 도시의 건물을 전부 집어삼킬 것이다.</p>

<p>블랙홀은 다음과 같은 특징이 있다.</p>

<ul>
	<li>블랙홀은 평면 위의 $N$개의 점을 꼭짓점으로 갖는 볼록다각형으로 나타낼 수 있다. $N$개의 점 중 어느 세 점도 한 직선 위에 있지 않다.</li>
	<li>블랙홀 경계를 포함하지 않는 내부에는 특이점이 하나 존재하며, 처음에 블랙홀을 이루는 점들은 블랙홀이 생긴 지 $t$초가 되는 시점에 이 특이점으로부터 $\left(t+1\right)$배 멀어져 있다.</li>
	<li>블랙홀은 블랙홀의 내부와 경계에 있는 건물을&nbsp;집어삼킨다.</li>
</ul>

<p>도시에는 $M$개의 건물이 있으며, 각 건물은 평면 상의 점으로 나타낼 수 있다.</p>

<p>당신은 매 초마다 블랙홀이 지금까지 집어삼킨 건물의 수를 세면서 블랙홀이 $K$개 이상의 건물을 집어삼켰으면 대피하려고 한다. 특이점, 블랙홀, 건물의 정보가 주어졌을 때에 대피하게 되는 시간을 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 $N$, $M$, $K$가 주어진다. ($3 \le N \le 100\ 000$, $1 \le K \le M \le 100\ 000$)</p>

<p>둘째 줄에 블랙홀의 특이점의 좌표가 주어진다.</p>

<p>셋째 줄부터 $N$개 줄에 걸쳐 블랙홀의 꼭짓점들의 좌표가 반시계방향 순서로 주어진다.</p>

<p>다음 $M$개 줄에 걸쳐 각 건물의 좌표가 주어진다.</p>

<p>모든 점의 좌표는 $-10^9$ 이상 $10^9$ 이하의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>대피 시간을 정수로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 4 3
0 0
1 1
-1 1
-1 -1
1 -1
2 0
3 0
4 4
-5 5
','3
','MATH'),
                                                                                                                (3459,'BAEKJOON','https://www.acmicpc.net/problem/20309',20309,'트리플 소트','1초','1024 MB',8,'<p>알고리즘 수업을 듣고 감명받은 윤이는 자신만의 정렬 알고리즘을 만들기로 했다. 윤이가 만든 정렬 알고리즘 "트리플 소트"는 다음과 같이 동작한다.</p>

<ul>
	<li>배열에서 <strong>연속한 위치</strong>에 있는 세 원소를 임의로 고른다.</li>
	<li>세 원소의 순서를 뒤집는다. 예를 들어 세 원소가 순서대로 $a, b, c$이면 뒤집은 뒤에는 $c,b,a$가 된다.</li>
	<li>배열이 오름차순으로 정렬될 때까지 위 과정을 반복한다.</li>
</ul>

<p>하지만 윤이는 트리플 소트로 모든 배열을 정렬할 수 없다는 사실을 깨닫고 실망했다. $1$부터 $N$까지의 정수가 한 번씩 등장하는 배열이 주어졌을 때, 트리플 소트로 정렬할 수 있는지 판별하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 배열의 크기를 나타내는 정수 $N$이 주어진다.</p>

<p>두 번째 줄에 배열의 원소가 공백을 사이에 두고 순서대로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>트리플 소트로 주어진 배열을 오름차순으로 정렬할 수 있으면 <samp>YES</samp>, 그렇지 않으면 <samp>NO</samp>를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1 4 5 2 3
','YES
','MATH'),
                                                                                                                (3460,'BAEKJOON','https://www.acmicpc.net/problem/20312',20312,'CPU 벤치마킹','1초','1024 MB',9,'<p>윤이는 Uni-COM에서 컴퓨터 부품을 판매하고 있다. 윤이는 다양한 성능의 CPU를 취급하는데, 손님들이 CPU의 성능을 손쉽게 비교할 수 있도록 벤치마크 표를 만들려고 한다.</p>

<p>모든 CPU 쌍을 직접 비교하는 일은 번거로우므로, 윤이는 CPU를 성능이 낮은 것부터 높은 것까지 정렬한 뒤 이웃한 CPU의 성능이 몇 배 차이가 나는지 측정했다. 그러면 다른 CPU 쌍의 성능 차이도 쉽게 계산할 수 있기 때문이다. 예컨대 CPU <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D44B TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="2"><mjx-c class="mjx-c1D44C TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="2"><mjx-c class="mjx-c1D44D TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>X</mi><mo>,</mo><mi>Y</mi><mo>,</mo><mi>Z</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$X, Y, Z$</span></mjx-container>에 대해 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D44B TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>X</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$X$</span></mjx-container>가 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D44C TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>Y</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$Y$</span></mjx-container>보다 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D44E TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>a</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$a$</span></mjx-container>배 빠르고 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D44C TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>Y</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$Y$</span></mjx-container>가 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D44D TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>Z</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$Z$</span></mjx-container>보다 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D44F TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>b</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$b$</span></mjx-container>배 빠르다면 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D44B TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>X</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$X$</span></mjx-container>는 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D44D TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>Z</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$Z$</span></mjx-container>보다 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D44E TEX-I"></mjx-c></mjx-mi><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D44F TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>a</mi><mi>b</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$ab$</span></mjx-container>배 빠르다는 사실을 알 수 있다.</p>

<p>윤이는 측정한 자료를 통해 모든 CPU 쌍의 성능 차이를 계산해서 벤치마크 표에 적었다. 구체적으로는, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c></mjx-mn><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c2264"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="4"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3C"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="4"><mjx-c class="mjx-c1D457 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c2264"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="4"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>1</mn><mo>≤</mo><mi>i</mi><mo><</mo><mi>j</mi><mo>≤</mo><mi>N</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$1\le i<j\le N$</span></mjx-container>을&nbsp;만족하는 모든 순서쌍 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="2"><mjx-c class="mjx-c1D457 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo stretchy="false">(</mo><mi>i</mi><mo>,</mo><mi>j</mi><mo stretchy="false">)</mo></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$(i, j)$</span></mjx-container>에 대해 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D457 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>j</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$j$</span></mjx-container>번째 CPU가 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>i</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$i$</span></mjx-container>번째 CPU보다 몇 배 빠른지를 표에 적었다. 윤이가 표에 적은 수를 전부 더한 값을 계산하시오. 단, 계산 결과가 커질 수 있으므로 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msup><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c><mjx-c class="mjx-c30"></mjx-c></mjx-mn><mjx-script style="vertical-align: 0.393em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c39"></mjx-c></mjx-mn></mjx-script></mjx-msup><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c2B"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="3"><mjx-c class="mjx-c37"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mn>10</mn><mn>9</mn></msup><mo>+</mo><mn>7</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$10^9+7$</span></mjx-container>으로 나눈 나머지를 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 CPU의 개수 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>N</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$N$</span></mjx-container>이 주어진다.</p>

<p>두 번째 줄에 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="3"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>N</mi><mo>?</mo><mn>1</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$N-1$</span></mjx-container>개의 양의 정수&nbsp;<mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45A TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>m</mi><mi>i</mi></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$m_i$</span></mjx-container>가 공백으로 구분되어 주어진다. <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c2B"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="3"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>i</mi><mo>+</mo><mn>1</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$i+1$</span></mjx-container>번째 CPU의 성능이&nbsp;<mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>i</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$i$</span></mjx-container>번째 CPU의 성능의&nbsp;<mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45A TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>m</mi><mi>i</mi></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$m_i$</span></mjx-container>배임을 의미한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>윤이가 벤치마크 표에 적은 수의 합을 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msup><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c><mjx-c class="mjx-c30"></mjx-c></mjx-mn><mjx-script style="vertical-align: 0.393em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c39"></mjx-c></mjx-mn></mjx-script></mjx-msup><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c2B"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="3"><mjx-c class="mjx-c37"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mn>10</mn><mn>9</mn></msup><mo>+</mo><mn>7</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$10^9+7$</span></mjx-container>으로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 2 3
','20
','MATH'),
                                                                                                                (3461,'BAEKJOON','https://www.acmicpc.net/problem/20363',20363,'당근 키우기','1초','1024 MB',7,'<p>꽉꽉나라의 농부&nbsp;오리는 당근을 키우려고 한다. 꽉꽉나라에서는&nbsp;씨앗이&nbsp;<em>X</em>만큼의 온기와&nbsp;<em>Y</em>만큼의 수분을 가지면&nbsp;당근으로 자란다고 한다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/631c490a-f8a2-4c00-968f-b01772f280b6/-/preview/"></p>

<p>씨앗은 햇빛을 1번 받을 때마다&nbsp;1만큼의 온기가 증가하고, 햇빛을 10번 받을 때마다 1만큼의 수분이 감소한다.</p>

<p>씨앗은 물을&nbsp;1번 받을 때마다&nbsp;1만큼의 수분이 증가하고, 물을&nbsp;10번 받을 때마다 1만큼의 온기가 감소한다.</p>

<p>만약, 감소되어야 하는 온기&nbsp;혹은 수분이&nbsp;이미 0이라면&nbsp;감소되지 않는다. 즉, 온기와&nbsp;수분은&nbsp;음수가 되지&nbsp;않는다. 맨 처음&nbsp;씨앗의 온기와 수분은 0이다.</p>

<p>오리는 당근을 효율적으로 키우기 위해, 당근이&nbsp;자랄 때까지 햇빛과 물을 주는&nbsp;횟수의 합을&nbsp;최소화하려고 한다. 예를 들어, <em>X&nbsp;</em>= 10, <em>Y&nbsp;</em>= 10이라고 하자.</p>

<p>씨앗에 햇빛을 10번 주면&nbsp;온기&nbsp;10, 수분 0이 된다. 그리고, 물을&nbsp;10번 주면 온기 9. 수분 10이 된다. 마지막으로 햇빛을 1번 주면 온기 10, 수분 10으로 당근이 자라게 된다. 이때, 햇빛과 물을&nbsp;준 횟수의&nbsp;합은&nbsp;21이고&nbsp;위 예제에서의 최솟값이다.</p>

<p><em>X</em>와 <em>Y</em>가 주어졌을 때, 당근이&nbsp;자랄 때까지 햇빛과 물을 주는&nbsp;횟수의 합의 최솟값을 구하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 <em>X</em>와 <em>Y&nbsp;</em>(0 ≤ <em>X</em>, <em>Y</em> ≤ 10<sup>9</sup>)를 의미하는 정수가 공백으로 구분되어 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>당근이&nbsp;자랄 때까지&nbsp;햇빛과 물을 주는&nbsp;횟수의 합의 최솟값을 나타내는 정수를&nbsp;출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10 10
','21
','MATH'),
                                                                                                                (3462,'BAEKJOON','https://www.acmicpc.net/problem/20411',20411,'추첨상 사수 대작전! (Normal)','1초','512 MB',6,'<p><u><strong>입력 제한 외 난이도에 따른 문제의 차이는 없다.</strong></u></p>

<p>APC는 매년 교내 참가자들에게 추첨상을 지급하고 있다. 올해 추첨상은 공정한 추첨을 위해 준표가 직접 작성한 난수생성기를 통해 추첨을 하고자 한다. <a href="https://ko.wikipedia.org/wiki/%EB%82%9C%EC%88%98%EB%B0%9C%EC%83%9D%EA%B8%B0" rel="nofollow">난수생성기</a>란, 이론적으로 예측을 더 할 수 없도록 일련의 숫자나 심볼을 생성하는 장치이다.</p>

<blockquote>
<p>주헌 : 형이 짠 난수생성기가 공정하다는 걸 어떻게 알아 ?</p>

<p>준표 : 걱정 마! c언어에서 ANSI 표준으로 사용하는 선형합동법(Linear Congruential) 을 구현할 거니까 ~</p>

<p>주헌 : 선형합동법이 뭔데 ?</p>

<p>준표 : 그게 뭐냐면 ..</p>
</blockquote>

<p>준표의 설명을 간단히 정리해보면,</p>

<p><strong>X<sub>1</sub> = (a × Seed + c) % m</strong></p>

<p><strong>X<sub>2</sub> = (a × X<sub>1</sub> + c) % m</strong></p>

<p>...</p>

<p><strong>X<sub>n + 1</sub> = (a × X<sub>n</sub> + c) % m</strong></p>

<p>이런 식으로 준표가 몰래 정하는 <em>a</em>, <em>c</em>, <em>m</em> 와 참가자들이 정하는 <em>Seed</em> 값을 바탕으로 위 공식에 따라 난수를 생성한다는 것이었다.</p>

<blockquote>
<p>주헌 : 음... <em>a</em>, <em>c</em>, <em>m</em>을 아무렇게나 잡으면 안 되지 않을까 ?</p>

<p>준표 : 응. Hull-Dobell 정리에 따르면 그게 맞아. 그런데 귀찮아서 그냥 <em>m을</em> 대충 내가 좋아하는 소수로 하려구.</p>

<p>주헌 : (형이 좋아하는 소수..? 씨익..)</p>
</blockquote>

<p>사실 주헌이는 올해에는 추첨상을 반드시 받아내겠다는 야망이 있었다! 위 대화는 그를 위한 초석이었던 것이다! 주헌이는 준표를 너무 잘 알기 때문에 준표가 좋아하는 소수를 이미 알고 있었고, 준표가 자신이 직접 작성한 난수생성기에 문제가 없음을 참가자들에게 알려주기 위해 실제 추첨 전 난수생성기가 잘 작동한다는 것을 모두의 앞에서 시연하기로 되어있었다.</p>

<p>주헌이는 계략을 짰다. 주헌이는 시연 중 참가자들이 정한 <em>Seed</em>와 이를 이용해 만들어진 <em>X<sub>1</sub></em>, <em>X<sub>2</sub></em> 를 이용해 준표가 몰래 정한 <em>a</em>, <em>c</em>를 찾아낼 것이다. 만약 주헌이가 추첨상을 받지 못한다면, 찾아낸 <em>a</em>, <em>c</em>를 폭로해 모든 것이 조작되었다고 주장하며 추첨 자체를 무효로 만들 계략이다! 주헌이는 <em>a</em>, <em>c</em>를 자동으로 찾아주는 프로그램을 만들고자 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>한 줄에 걸쳐 준표가 좋아하는 소수 <em>m</em>, 참가자들이 정한 Seed, 시연으로 공개된 <em>X<sub>1</sub></em>, <em>X<sub>2</sub></em> 이 주어진다. 항상 가능한 상황만 입력으로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>준표가 비밀리에 선정한 정수 <em>a</em>, <em>c</em>를 출력한다. 가능한 답이 여러 개라면, 그중 아무거나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>c언어에서의 rand() 함수는 위와 비슷하지만 <em>X<sub>n</sub></em> 의 상위 16개 비트를 반환하도록 구현되어있다.</p>

				</div>
				</div>','13 5 2 9
','2 5
','MATH'),
                                                                                                                (3463,'BAEKJOON','https://www.acmicpc.net/problem/20412',20412,'추첨상 사수 대작전! (Hard)','1초','512 MB',14,'<p><u><strong>입력 제한 외 난이도에 따른 문제의 차이는 없다.</strong></u></p>

<p>APC는 매년 교내 참가자들에게 추첨상을 지급하고 있다. 올해 추첨상은 공정한 추첨을 위해 준표가 직접 작성한 난수생성기를 통해 추첨을 하고자 한다. <a href="https://ko.wikipedia.org/wiki/%EB%82%9C%EC%88%98%EB%B0%9C%EC%83%9D%EA%B8%B0" rel="nofollow">난수생성기</a>란, 이론적으로 예측을 더 할 수 없도록 일련의 숫자나 심볼을 생성하는 장치이다.</p>

<blockquote>
<p>주헌 : 형이 짠 난수생성기가 공정하다는 걸 어떻게 알아 ?</p>

<p>준표 : 걱정 마! c언어에서 ANSI 표준으로 사용하는 선형합동법(Linear Congruential) 을 구현할 거니까 ~</p>

<p>주헌 : 선형합동법이 뭔데 ?</p>

<p>준표 : 그게 뭐냐면 ..</p>
</blockquote>

<p>준표의 설명을 간단히 정리해보면,</p>

<p><strong>X<sub>1</sub> = (a × Seed + c) % m</strong></p>

<p><strong>X<sub>2</sub> = (a × X<sub>1</sub> + c) % m</strong></p>

<p>...</p>

<p><strong>X<sub>n + 1</sub> = (a × X<sub>n</sub> + c) % m</strong></p>

<p>이런 식으로 준표가 몰래 정하는 <em>a</em>, <em>c</em>, <em>m</em> 와 참가자들이 정하는 <em>Seed</em> 값을 바탕으로 위 공식에 따라 난수를 생성한다는 것이었다.</p>

<blockquote>
<p>주헌 : 음... <em>a</em>, <em>c</em>, <em>m</em>을 아무렇게나 잡으면 안 되지 않을까 ?</p>

<p>준표 : 응. Hull-Dobell 정리에 따르면 그게 맞아. 그런데 귀찮아서 그냥 <em>m을</em> 대충 내가 좋아하는 소수로 하려구.</p>

<p>주헌 : (형이 좋아하는 소수..? 씨익..)</p>
</blockquote>

<p>사실 주헌이는 올해에는 추첨상을 반드시 받아내겠다는 야망이 있었다! 위 대화는 그를 위한 초석이었던 것이다! 주헌이는 준표를 너무 잘 알기 때문에 준표가 좋아하는 소수를 이미 알고 있었고, 준표가 자신이 직접 작성한 난수생성기에 문제가 없음을 참가자들에게 알려주기 위해 실제 추첨 전 난수생성기가 잘 작동한다는 것을 모두의 앞에서 시연하기로 되어있었다.</p>

<p>주헌이는 계략을 짰다. 주헌이는 시연 중 참가자들이 정한 <em>Seed</em>와 이를 이용해 만들어진 <em>X<sub>1</sub></em>, <em>X<sub>2</sub></em> 를 이용해 준표가 몰래 정한 <em>a</em>, <em>c</em>를 찾아낼 것이다. 만약 주헌이가 추첨상을 받지 못한다면, 찾아낸 <em>a</em>, <em>c</em>를 폭로해 모든 것이 조작되었다고 주장하며 추첨 자체를 무효로 만들 계략이다! 주헌이는 <em>a</em>, <em>c</em>를 자동으로 찾아주는 프로그램을 만들고자 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>한 줄에 걸쳐 준표가 좋아하는 소수 <em>m</em>, 참가자들이 정한 Seed, 시연으로 공개된 <em>X<sub>1</sub></em>, <em>X<sub>2</sub></em> 이 주어진다. 항상 가능한 상황만 입력으로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>준표가 비밀리에 선정한 정수 <em>a</em>, <em>c</em>를 출력한다.&nbsp;가능한 답이 여러 개라면, 그중 아무거나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>c언어에서의 rand() 함수는 위와 비슷하지만 <em>X<sub>n</sub></em> 의 상위 16개 비트를 반환하도록 구현되어있다.</p>

				</div>
				</div>','13 5 2 9
','2 5
','MATH'),
                                                                                                                (3464,'BAEKJOON','https://www.acmicpc.net/problem/20438',20438,'출석체크','0.1초','1024 MB',9,'<p>코로나 바이러스로 인해 H 대학은 비대면 강의를 실시하고 있다. 조교를 담당하게 된 지환이는 출석체크 방식을 바꾸려고 한다.</p>

<p>학생들은 접속 순서대로 3번부터 N&nbsp;+ 2번까지 입장 번호를 받게 된다.</p>

<p>지환이가 한 학생에게 출석 코드를 보내게 되면, 해당 학생은 본인의 입장 번호의 배수인 학생들에게 출석 코드를 보내어 해당 강의의 출석을 할 수 있게끔 한다.</p>

<p>하지만, K명의 졸고 있는 학생들은 출석 코드를 제출하지 않고, 다른 학생들에게 보내지&nbsp;않는다.</p>

<p>지환이는 무작위로 한 명의 학생에게&nbsp;출석 코드를 보내는 행위를 Q번 반복한 뒤, 출석부 정리를 위해 특정 구간의 입장 번호를 받은 학생들 중에서 출석이 되지 않은 학생들의 수를 구하고 싶다.</p>

<p>많은 인원을 담당해서 바쁜 지환이를 위해 프로그램을 만들어주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>1번째 줄에 학생의 수 N, 졸고 있는 학생의 수 K, 지환이가 출석 코드를 보낼 학생의 수 Q, 주어질 구간의 수 M이&nbsp;주어진다. (1 ≤ K, Q&nbsp;≤ N&nbsp;≤ 5,000, 1&nbsp;≤ M&nbsp;≤ 50,000)</p>

<p>2번째 줄과 3번째 줄에 각각 K명의 졸고 있는 학생의 입장 번호들과 Q명의 출석 코드를 받을 학생의 입장 번호들이 주어진다.</p>

<p>4번째 줄부터 M개의 줄 동안&nbsp;구간의 범위 S, E가 공백을 사이에 두고&nbsp;주어진다. (3 ≤ S&nbsp;< E&nbsp;≤ N&nbsp;+ 2)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>M개의 줄에 걸쳐서 각 구간에 대해서&nbsp;출석이 되지 않은 학생들의 수를 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10 1 3 1
7
3 5 7
3 12
','4
','MATH'),
                                                                                                                (3465,'BAEKJOON','https://www.acmicpc.net/problem/20443',20443,'배드민턴 대회','1초','1024 MB',14,'<p>운동 동아리 회장을 맡고 있는 현아는 동아리 배드민턴 대회를 열려고 한다.</p>

<p>현아는 4의 배수를 좋아하여 참가자의 수가 4로 나누어 떨어지기를 바란다.</p>

<p>따라서, 참가자들의 인원이 4의 배수가 아닌 경우, 4의 배수가 되도록 무작위로 3명 이하의 참가자를 추첨에서 제외하고 상대 추첨을 시작한다.</p>

<p>참가자들은 각자 1번부터 N번까지의 번호가 매겨져 있으며, 상대 추첨은 아래와 같이 진행된다.</p>

<ol>
	<li>추첨에서 제외되지 않은&nbsp;참가자들의 번호표를 상자에 넣고 섞는다.</li>
	<li>각자 상자에서 무작위로 번호표를 하나씩 뽑아 자신의 상대 번호를 확인한다.</li>
</ol>

<p>이 때, 현아는 무작위로 3명 이하의 참가자를 추첨에서 제외한 후, 참가자들이 모두 본인의 번호가 아닌 번호표를 뽑는 경우의 수가 궁금하다.</p>

<p>참가 인원이 많아 피곤한 현아를 위해 모든 경우의 수를 구하는 프로그램을 만들어주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 N이 주어진다.&nbsp;(4&nbsp;≤&nbsp;N ≤ 100)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 답을 1,000,000,007으로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>참가자는 본인이 뽑은 상대와 한 경기, 본인을 뽑은 상대와&nbsp;경기를 진행하게 된다.</p>

<p>서로를 뽑았을 경우, 같은 상대와 두 경기를 진행하게 된다.</p>

				</div>
				</div>','4
','9
','MATH'),
                                                                                                                (3466,'BAEKJOON','https://www.acmicpc.net/problem/20444',20444,'색종이와 가위','0.1초','1024 MB',11,'<p>오늘도 역시 준성이는 어김없이 <a href="https://www.acmicpc.net/problem/18246">색종이와 쿼리</a>를 푸는 데 실패하였다!!</p>

<p>색종이에 열등감을 느낀 준성이는 가위로 눈에 보이는 색종이를&nbsp;모두&nbsp;잘라 버리려고 한다!!</p>

<p>색종이를 자를 때는 다음과 같은 규칙을 따른다.</p>

<ol>
	<li>색종이는 직사각형이며, 색종이를 자를 때는 한 변에 평행하게 자른다.</li>
	<li>자르기 시작했으면, 경로 상의 모든 색종이를 자를 때까지 멈추지 않는다.</li>
	<li>이미 자른 곳을 또&nbsp;자를 수 없다.</li>
</ol>

<p>분노에 찬 가위질을 하던 준성이는 갑자기 하나의 색종이를 정확히&nbsp;<em>n</em>번의 가위질로 <em>k</em>개의 색종이 조각으로&nbsp;만들 수 있는지 궁금해졌다.<br>
궁금하지만&nbsp;화가 나서 코딩에 집중할 수 없는 준성이 대신 코드를 작성해주도록 하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 정수&nbsp;<em>n</em>,&nbsp;<i>k</i>가 주어진다. (1 ≤&nbsp;<em>n&nbsp;</em>≤ 2<sup>31</sup>-1,&nbsp;1 ≤&nbsp;<em>k&nbsp;</em>≤ 2<sup>63</sup>-1)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 줄에 정확히&nbsp;<em>n</em>번의 가위질로&nbsp;<em>k</em>개의 색종이 조각을 만들 수 있다면 <code>YES</code>, 아니라면 <code>NO</code>를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 9
','YES
','MATH'),
                                                                                                                (3467,'BAEKJOON','https://www.acmicpc.net/problem/20492',20492,'세금','1초','1024 MB',1,'<p>선린인터넷고등학교의 한 학생은 프로그래밍 대회에 참가하여 거액의 상금을 수상하는 영광을 누리게 되었다. 하지만, 이 학생이 상금 금액의 전부를 수령하게 되는 것은 아니다. 상금의 일부를 제세공과금으로 납부하고, 나머지 금액을 수령하게 된다.</p>

<p>일반적으로, 대회에서 상금을 받으면 전체 금액의 22%를 제세공과금으로 국가에 납부하고, 나머지 금액을 수령하게 된다. 하지만, 상금의 80%를 필요 경비로 인정하게 되면, 나머지 20% 중 22%만을 제세공과금으로 납부해도 된다.</p>

<p>대회 상금의 금액이 주어질 때, 다음 두 경우 각각에 대해 이 학생이 실제로 수령하는 금액을 구해보자.</p>

<ol>
	<li>전체 상금의 22%를 제세공과금으로 납부하는 경우</li>
	<li>상금의 80%를 필요 경비로 인정받고, 나머지 금액 중 22%만을 제세공과금으로 납부하는 경우</li>
</ol>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>상금의 금액을 나타내는 하나의 정수 $N$이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>1번 경우에 대한 답과 2번 경우에 대한 답을 사이에 공백을 두고 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10000000
','7800000 9560000
','MATH'),
                                                                                                                (3468,'BAEKJOON','https://www.acmicpc.net/problem/20499',20499,'Darius님 한타 안 함?','1초','512 MB',2,'<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/7e511773-be18-4dcc-a516-00dc87dda2f4/-/preview/" style="width: 394.167px; height: 32.5px;"></p>

<p>아무래도 우리 팀 다리우스가 고수인 것 같다. 그의 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D43E TEX-I"></mjx-c></mjx-mi><mjx-texatom texclass="ORD"><mjx-mo class="mjx-n"><mjx-c class="mjx-c2F"></mjx-c></mjx-mo></mjx-texatom><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D437 TEX-I"></mjx-c></mjx-mi><mjx-texatom texclass="ORD"><mjx-mo class="mjx-n"><mjx-c class="mjx-c2F"></mjx-c></mjx-mo></mjx-texatom><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D434 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>K</mi><mrow data-mjx-texclass="ORD"><mo>/</mo></mrow><mi>D</mi><mrow data-mjx-texclass="ORD"><mo>/</mo></mrow><mi>A</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$K/D/A$</span></mjx-container>를 보고 그가 「<strong>진짜</strong>」인지 판별해 보자.</p>

<p><mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;">?<mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D43E TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c2B"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="3"><mjx-c class="mjx-c1D434 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3C"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="4"><mjx-c class="mjx-c1D437 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>K</mi><mo>+</mo><mi>A</mi><mo><</mo><mi>D</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$K+A < D$</span></mjx-container>이거나, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D437 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="4"><mjx-c class="mjx-c30"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>D</mi><mo>=</mo><mn>0</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$D = 0$</span></mjx-container>이면 그는 「<strong>가짜</strong>」이고, 그렇지 않으면 「<strong>진짜</strong>」이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p><mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;">?<mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D43E TEX-I"></mjx-c></mjx-mi><mjx-texatom texclass="ORD"><mjx-mo class="mjx-n"><mjx-c class="mjx-c2F"></mjx-c></mjx-mo></mjx-texatom><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D437 TEX-I"></mjx-c></mjx-mi><mjx-texatom texclass="ORD"><mjx-mo class="mjx-n"><mjx-c class="mjx-c2F"></mjx-c></mjx-mo></mjx-texatom><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D434 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>K</mi><mrow data-mjx-texclass="ORD"><mo>/</mo></mrow><mi>D</mi><mrow data-mjx-texclass="ORD"><mo>/</mo></mrow><mi>A</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$K/D/A$</span></mjx-container>가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>그가 「<strong>진짜</strong>」이면 <em>gosu</em>, 「<strong>가짜</strong>」이면 <em>hasu</em>를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','0/5/3
','hasu
','MATH'),
                                                                                                                (3470,'BAEKJOON','https://www.acmicpc.net/problem/20506',20506,'Kaisar - 생존','1초','1024 MB',15,'<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/f87417b6-be3b-4490-b7fb-4e2d6968b47c/-/preview/" style="height: 172.5px; width: 385.833px;"></p>

<p>준원이(0/5/3)는 생존해있는 카이사(2/7/0)를 찾으러 소환사의 협곡을 수색하고 있다. 협곡은 정점이 N개 있는 트리 모양이고, 정점은 1번 정점에서 N번 정점까지 번호 붙여져 있다. 준원이는 모든 정점 쌍 x, y에 대해 x번 정점과 y번 정점의 LCA를 방문해보고, 방문한 정점의 번호들을 모두 배열에 적어두었다. 여러 번 방문하면 여러 번 적었다.</p>

<p>하지만, 카이사는 없었다.</p>

<p>준원이는 탈주하고, 이 배열을 정렬한 뒤, 배열의 짝수번째 원소들의 합과 홀수번째 원소들의 합을 구하려 한다.</p>

<p><strong>참가자</strong> - 생존</p>

<p><strong>참가자</strong> - 생존</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 트리의 정점의 개수 N이 주어진다.</p>

<p>둘째 줄에는, 1번부터 N번까지 각 정점의 부모 정점의 번호를 나타내는 N개의 정수가 차례대로 주어진다. 루트 정점은 부모가 없으므로, 루트 정점의 차례에는 0이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>준원이가 정렬한 배열의 짝수번째 원소들의 합과 홀수번째 원소들의 합을 차례대로 공백을 사이에 두고 출력한다. <strong>출력하는 수가 32비트 정수 자료형의 범위를 넘을 수 있다는 점에 유의하라.</strong></p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>트리에서, 두 정점 u, v의 LCA(Lowest Common Ancester)는,&nbsp;u의 조상이기도 하고 v의 조상이기도 한 정점들 가운데 가장 깊이가 깊은(아래에 있는) 정점이다.</p>

<p>예를 들어, 예제 2의 입력에 해당하는 트리에서,</p>

<ul>
	<li>1번과 5번 정점의 LCA는 12번 정점</li>
	<li>8번과 11번 정점의 LCA는 3번 정점</li>
	<li>5번과 7번 정점의 LCA는 9번 정점</li>
	<li>4번과 12번 정점의 LCA는 12번 정점</li>
	<li>2번과 2번 정점의 LCA는 2번 정점</li>
</ul>

<p>이다.</p>

				</div>
				</div>','5
0 1 1 2 2
','19 22
','MATH'),
                                                                                                                (3471,'BAEKJOON','https://www.acmicpc.net/problem/20531',20531,'인간관계','1초','1536 MB',16,'<p>S인터넷고등학교에는 $N$명의 학생이 있다. 이들 사이에 몇몇은 서로 친구 관계를 맺고 있다. 친구 관계는 다음 세 가지 조건을 만족한다.</p>

<ol>
	<li>모든 학생은 자기 자신의 친구이다.</li>
	<li>학생 $x$가 학생 $y$의 친구이면, 학생 $y$도 학생 $x$의 친구이다.</li>
	<li>학생 $x$와 학생 $y$가 친구이고, 학생 $y$와 학생 $z$가 친구이면, 학생 $x$와 학생 $z$도 친구이다.</li>
</ol>

<p>S인터넷고등학교의 김준원 선생님은 학생들의 친구 관계에 대해 알고 싶다. 다행히, 일부 학생 간의 친구 관계에 대한 정보는 이미 주어져있다. 김준원 선생님을 위해&nbsp;전체 학생들의 친구 관계로 가능한 경우의 수를 구해보자.</p>

<p>두 친구 관계가 다름은 하나의 친구 관계에서는 친구지만, 다른 친구 관계에서는 친구가 아닌 두 학생이 존재함을 의미한다.</p>

<p>입력이 특수한 방식으로 주어지니, 입력과 출력 부분의 설명을 자세히 읽는 것을 권장한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>학생의 수 $N$과 정수 $M$이&nbsp;사이에 공백을 두고 주어진다.</p>

<p>이후 $M$개의 줄 중 $i (1 \le i \le M)$번째 줄에는 두 정수 $x_i, y_i $가&nbsp;주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>$M$개의 줄에 걸쳐 총 $M$개의 문제에 대한 답을 출력한다.</p>

<p>$i(1 \le i \le M)$번째 줄에는 $(x_1, y_1), (x_2, y_2), \cdots, (x_i, y_i)$의 (총 $i$개의 쌍의)&nbsp;학생이 친구 관계에 있음을 알&nbsp;때,&nbsp;전체 친구 관계로 가능한 경우의 수를 $10^9+7$로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 4
1 1
1 1
1 2
2 3
','5
5
2
1
','MATH'),
                                                                                                                (3472,'BAEKJOON','https://www.acmicpc.net/problem/20532',20532,'정점 간 통신 네트워크','1초','1536 MB',17,'<p>주식으로 엄청난 돈을 벌어들인 영욱이는 그 돈으로 나라를 세우고&nbsp;나라의 통신을 담당하는&nbsp;통신탑을 설치했다.</p>

<p>다들 알다시피 영욱이의 나라는 $N$개의 지역과 이를 잇는 $N-1$개의 도로로 이루어진 트리 형태이다. 각 지역에는 $1$번부터 $N$번까지의 번호가 붙어 있다. $1$번 지역이 영욱이가 살고 있는 지역으로, 이 나라의 수도이자&nbsp;트리의 루트이다. 영욱이의 나라의 각 지역에는&nbsp;통신탑이 하나씩&nbsp;있어서, 트리에서 조상과 자손 관계인 두 지역의 통신탑끼리&nbsp;정보를 교환할 수 있다.</p>

<p>그러나 이를 본&nbsp;적국의 다니엘이&nbsp;통신방해전파를 쏘아올리기 시작했다!&nbsp;통신방해전파 때문에&nbsp;이제 일부&nbsp;통신탑끼리만&nbsp;통신을 할 수 있게 되었다. 통신탑에는 주파수가 하나씩 배정되어 있는데, 주파수가&nbsp;서로 약수 또는 배수 관계인 통신탑끼리만 통신을 할 수 있다.</p>

<p>우리는 영욱이의 나라에서 통신이 가능한 서로 다른 두 통신탑&nbsp;쌍의 개수를 구해야 한다.&nbsp;단,&nbsp;다른 통신탑을 거쳐서 간접적으로 통신하는 것은 허용되지 않는다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에&nbsp;영욱이의 나라를 구성하는 지역의 개수 $N$이 주어진다.</p>

<p>두 번째 줄에&nbsp;영욱이의 나라의 $1, \cdots, N$번&nbsp;지역에 있는 통신탑의 주파수&nbsp;$A[i]$가 각각 주어진다.</p>

<p>세 번째 줄에는 $i$번&nbsp;지역의 부모 노드에 위치한&nbsp;지역의&nbsp;번호 $P[i]$가 $i=2, \cdots, N$에 대해 순서대로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>통신이 가능한 서로 다른 두 통신탑&nbsp;쌍의 개수를 구하여 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 2 3 4
1 2 2
','4
','MATH'),
                                                                                                                (3473,'BAEKJOON','https://www.acmicpc.net/problem/20545',20545,'다트게임','2초','512 MB',18,'<p>승규와 의석이는 다트게임을 즐겨한다. 다트게임은 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-cD7"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="3"><mjx-c class="mjx-c1D440 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>N</mi><mo>×</mo><mi>M</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$N \times M$</span></mjx-container> 형태의 격자모양 다트판에서 이뤄지며 승규와 의석이가 던지는 다트는 항상 다트판에 꽂힌다. 다트판은 1×1크기의 정사각형 칸 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-cD7"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="3"><mjx-c class="mjx-c1D440 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>N</mi><mo>×</mo><mi>M</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$N \times M$</span></mjx-container>개로 나누어져 있다. 각각의 칸은 (<mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="2"><mjx-c class="mjx-c1D466 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>x</mi><mo>,</mo><mi>y</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$x, y$</span></mjx-container>)로 나타내며 x는 위에서 몇 번째 칸인지를 의미하고 y는 왼쪽에서 몇 번째 칸인지를 의미한다. <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>x</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$x$</span></mjx-container>와 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D466 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>y</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$y$</span></mjx-container>는 1부터 시작한다. 다트게임의 한 라운드는&nbsp;다음과 같이 진행되며 승규와 의석이는 총 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D43E TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>K</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$K$</span></mjx-container> 라운드를 진행한다.&nbsp;(<mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D445 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>R</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$R$</span></mjx-container> 은 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D445 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>R</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$R$</span></mjx-container> 번째 라운드를&nbsp;의미한다.)</p>

<ol>
	<li>승규가 다트를 던진다. 승규가 던지는 다트는 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D434 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D445 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-msub space="2"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D435 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D445 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo stretchy="false">(</mo><msub><mi>A</mi><mi>R</mi></msub><mo>,</mo><msub><mi>B</mi><mi>R</mi></msub><mo stretchy="false">)</mo></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$(A_R, B_R)$</span></mjx-container>에 꽂히고 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D44B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em; margin-left: -0.024em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D445 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>X</mi><mi>R</mi></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$X_R$</span></mjx-container>&nbsp;의 가중치를 가진다.</li>
	<li>의석이가 다트를 던진다. 던진 다트는 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D436 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em; margin-left: -0.045em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D445 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-msub space="2"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D437 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D445 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo stretchy="false">(</mo><msub><mi>C</mi><mi>R</mi></msub><mo>,</mo><msub><mi>D</mi><mi>R</mi></msub><mo stretchy="false">)</mo></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$(C_R, D_R)$</span></mjx-container>에 꽂힌다.</li>
	<li>의석이가 점수를 얻는다.</li>
</ol>

<p>의석이가 얻는 점수의 계산법은 다음과 같다.</p>

<ul>
	<li>
	<p><mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;">?<mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D453 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="2"><mjx-c class="mjx-c1D457 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D434 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-msub space="3"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D436 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em; margin-left: -0.045em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D457 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub><mjx-msup><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-script style="vertical-align: 0.363em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msup><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c2B"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D435 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-msub space="3"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D437 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D457 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub><mjx-msup><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-script style="vertical-align: 0.363em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msup></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>f</mi><mo stretchy="false">(</mo><mi>i</mi><mo>,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mi>i</mi></msub><mo>?</mo><msub><mi>C</mi><mi>j</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><msub><mi>B</mi><mi>i</mi></msub><mo>?</mo><msub><mi>D</mi><mi>j</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$ f(i,j)=(A_i - C_j)^2 + (B_i - D_j)^2$</span></mjx-container> 일 때,</p>
	</li>
	<li>
	<p>R&nbsp;라운드에서 의석이가 얻는 점수는 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-munderover limits="false"><mjx-mo class="mjx-sop"><mjx-c class="mjx-c2211 TEX-S1"></mjx-c></mjx-mo><mjx-script style="vertical-align: -0.285em; margin-left: 0px;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D445 TEX-I"></mjx-c></mjx-mi><mjx-spacer style="margin-top: 0.277em;"></mjx-spacer><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-texatom></mjx-script></mjx-munderover><mjx-texatom space="2" texclass="ORD"><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D453 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="2"><mjx-c class="mjx-c1D445 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-cD7"></mjx-c></mjx-mo><mjx-msub space="3"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D44B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em; margin-left: -0.024em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo></mjx-texatom><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo stretchy="false">(</mo><munderover><mo data-mjx-texclass="OP">∑</mo><mrow data-mjx-texclass="ORD"><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>R</mi></munderover><mrow data-mjx-texclass="ORD"><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>i</mi><mo>,</mo><mi>R</mi><mo stretchy="false">)</mo><mo>×</mo><msub><mi>X</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><mo stretchy="false">)</mo></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$ (\sum_{i=1}^R{(f(i,R) \times X_i)})&nbsp;$</span></mjx-container> 이다</p>
	</li>
</ul>

<p>게임이 끝난 후 승규가 화장실에 간 틈을 타 의석이는 점수를 조작하려고 한다.<br>
의석이는 자신이 던진 다트중에서 최대 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D43F TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>L</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$L$</span></mjx-container>&nbsp;개&nbsp;다트의 좌표를 바꿀 수 있다.(좌표가 바뀐 다트는 다트판 위에 존재해야 한다.)<br>
의석이는 자신이 얻는&nbsp;원래 점수, 조작해서 얻을 수 있는 최대 점수, 조작해서 얻을 수 있는 최소 점수를 알고싶다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/a8df7fbe-3a8f-4c31-864a-1ea22d9ec110/-/preview/" style="width: 363.333px; height: 300.833px;"></p>

<p>예를 들어, 위와 같은 상황을 보자. 붉은색 다트는 승규가 던진 다트이고, 검은색 다트는 의석이가 던진 다트이다.&nbsp; 다트 위에 써져있는 숫자는 다트가 던져진 라운드를 의미한다. (가중치는 모두 1로 동일하다.) 위 상황에서 1라운드에서 의석이가 얻는 점수는 1점이고, 2라운드에서 의석이가 얻는 점수는 3점이다. 즉 의석이가 원래 얻는 총점은 4점이다. 여기서 의석이가 자신의 2라운드 다트를 (3,3)으로 옮기게 된다면 의석이가 얻을 수 있는 최대 총점인 14점을 얻게 된다. 혹은 여기서 의석이가 자신의 2라운드 다트를 (1,1)로 옮기게 된다면 의석이가 얻을 수 있는 최소 총점인 2점을 얻게 된다.</p>

<p>우리의 목적은 계산을 손가락으로밖에 못하는&nbsp;의석이를 위해 대신 계산을 해주는 것이다. 의석이가 얻는 원래 점수, 조작해서 얻을 수 있는 최대 점수, 조작해서 얻을 수 있는 최소 점수를 구해주자. 단, 값이 너무 커질 수 있으므로 1,000,000,007로 나눈 나머지를 구해주자</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 양의 정수 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="2"><mjx-c class="mjx-c1D440 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="2"><mjx-c class="mjx-c1D43E TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="2"><mjx-c class="mjx-c1D43F TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>N</mi><mo>,</mo><mi>M</mi><mo>,</mo><mi>K</mi><mo>,</mo><mi>L</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$N, M, K, L$</span></mjx-container> 이 빈 칸을 사이에 두고 주어진다. <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>N</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$N$</span>?</mjx-container><em>&nbsp;</em>은 다트판의 세로 크기, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D440 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>M</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$M$</span>?</mjx-container><em>&nbsp;</em>은 다트판의 가로 크기, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D43E TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>K</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$K$</span>?</mjx-container><em>&nbsp;</em>는 진행할 라운드 수, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D43F TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>L</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$L$</span>?</mjx-container><em>&nbsp;</em>은 바꿀 수 있는 다트의 수다. 둘째 줄부터 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D43E TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>K</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$K$</span></mjx-container> 개의 줄에 걸쳐 라운드의 순서대로 각 줄에 라운드의 정보인 양의 정수 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D434 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D445 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-msub space="2"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D435 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D445 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-msub space="2"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D44B TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em; margin-left: -0.024em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D445 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-msub space="2"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D436 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em; margin-left: -0.045em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D445 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-msub space="2"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D437 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D445 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>A</mi><mi>R</mi></msub><mo>,</mo><msub><mi>B</mi><mi>R</mi></msub><mo>,</mo><msub><mi>X</mi><mi>R</mi></msub><mo>,</mo><msub><mi>C</mi><mi>R</mi></msub><mo>,</mo><msub><mi>D</mi><mi>R</mi></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$A_R, B_R, X_R,&nbsp;C_R, D_R$</span></mjx-container>&nbsp;이 빈 칸을 사이에 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>의석이의 원래 점수, 조작해서 얻을 수 있는 최대 점수, 조작해서 얻을 수 있는 최소 점수 각각을 한 줄에 하나씩 출력한다. 출력 할 때에는 1,000,000,007로 나눈 나머지를 출력해야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 3 2 1
1 1 1 1 2
2 1 1 2 2
','4
14
2
','MATH'),
                                                                                                                (3474,'BAEKJOON','https://www.acmicpc.net/problem/20548',20548,'칠리소스','1초','512 MB',7,'<p>용광이는 72칠리 소스를 좋아한다. 용광이는 어떤 칠리 소스를 살지 고민중이다. 이 칠리 소스는 1단계부터 727,272단계까지의 매운맛이 있다. 72칠리 소스는 인하대학교 72호관에 있는 공장에서 제조되는데, 한 병의 소스는 7의 제곱수만큼의 베이스 캡사이신의 조합으로 이루어진다. 그리고 각 베이스 캡사이신은 최대 두 번 사용할 수 있다. 각&nbsp;단계는 한 개 혹은 여러 개의 서로 다른 7의 제곱수를 각각 최대 두 번&nbsp;더한 만큼의 캡사이신 함유량으로 결정된다. 캡사이신 함유량이&nbsp;매운맛 단계임을 의미하는 것은 아니다. 단, 72칠리 소스에 함유된 캡사이신 양이 증가할수록 매운맛 단계가 높아진다. 예를 들어&nbsp;7의 0제곱수만큼의 캡사이신이 함유된 베이스 캡사이신 한 번과 7의 1제곱수만큼의 캡사이신이 함유된 베이스 캡사이신 두 번의 조합으로 15만큼의 캡사이신이 함유된 72칠리 소스를 만들 수 있다. 그리고 이 소스의 매운맛 단계는 7이다. 1단계 매운맛의 경우 1만큼의 캡사이신이 함유된다.</p>

<p>&nbsp;</p>

<p>앗! 용광이가 칠리 소스를 골랐다! 우리는 용광이가 고른 칠리 소스의 캡사이신 함유량을 알고 있다. 몇 단계의 매운맛인지 맞혀보자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 캡사이신 함유량 c가 주어진다. 727,272단계의 매운맛을 초과하는 캡사이신 함유량은 주어지지 않으며, 칠리소스 공장에서 72칠리 소스를 제조하는&nbsp;공정에는 오차가 발생하지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 칠리 소스의 매운 맛이 몇 단계인지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7
','3
','MATH'),
                                                                                                                (3475,'BAEKJOON','https://www.acmicpc.net/problem/20552',20552,'거리의 기댓값','4초','1024 MB',24,'<p>$N$개의 정점으로 이루어진 트리 $T_{N}$를 다음과 같은 방법으로 생성한다.</p>

<ul>
	<li>$T_{1}$은 1번 정점만으로 이루어진 트리다.</li>
	<li>2 이상의 $i$에 대해&nbsp;$T_{i}$는 $T_{i-1}$에 $i$번 정점을 $T_{i-1}$의 정점 중 하나와 간선으로 이어 추가한 트리다. $i$번 정점과 연결된 정점이 $j$번 정점이 될 확률은 $\frac{a_j}{a_1+ \cdots + a_{i-1}}$이다. $i$번 정점과 연결된 정점이 $j$번 정점이라면 그 간선의 길이는 $c_i + c_j$이다.</li>
</ul>

<p>$Q$개의 쿼리가 주어진다. 각 쿼리로 $u$와 $v$가 주어질 때마다 $T_{N}$에서 $u$번 정점과 $v$번 정점의 거리의 기댓값을 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 $N$과 $Q$가 주어진다. $(2 \leq N,Q \leq 300\,000)$</p>

<p>두 번째 줄에 $N-1$개의 정수 $a_1,a_2, \cdots, a_{N-1}$이 공백으로 구분되어 주어진다. $(1 \leq a_i \leq 2\,000)$</p>

<p>세 번째 줄에 $N$개의 정수 $c_1,c_2, \cdots, c_N$이 공백으로 구분되어 주어진다. $(1 \leq c_i \leq 2\,000)$</p>

<p>이후 $Q$개의 줄에 걸쳐 쿼리들이 주어진다. 각 줄에는 $u$와 $v$가 공백으로 구분되어 주어진다. $(1 \leq u,v \leq N)$</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>$i$번째 쿼리의 답을 $ans_i=\frac{p_i}{q_i}$라 하자. ($p_i$, $q_i$는 서로소인 음이 아닌 정수) $i$번째 줄에는 $p_i \equiv q_i x_i \pmod{10^9+7}$를 만족하는 $0$ 이상 $10^9+7$ 미만의 정수 $x_i$를 출력한다. 이 수는 유일하게 존재함을 증명할 수 있다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 7
1 1 1 1
1 2 4 8 16
1 3
2 5
4 3
1 5
3 3
4 5
1 2
','7
666666697
15
666666697
0
333333366
3
','MATH'),
                                                                                                                (3476,'BAEKJOON','https://www.acmicpc.net/problem/20557',20557,'복잡한 쿼리','2.5초','1024 MB',22,'<p>출제진은 여러분들이 고통받는 모습을 즐기기에 여러분들이 그다지 보고 싶지 않은 주제들을 합쳐서 문제를 내기로 했다. NP 문제인 최장 경로 문제, XOR, 쿼리가 합쳐진 이 문제를 풀어보자!</p>

<p>$N$개의 정점과 $M$개의 가중치 있는 무방향 간선들로 이루어진 연결그래프 $G$가 있다. $G$에서 경로의 가중치는 일반적인 경우와 다르게 계산되는데, 지난 간선들의 가중치들을 XOR한 값이다. 한 간선을 여러 번 지나는 것이 허용되며, 이 경우 그 횟수만큼 XOR해야 함에 유의하자.</p>

<p>정점 $u$와 $v$에 대해 $u$에서 $v$로 가는 최대 가중치의 경로를 $u$에서 $v$로 가는 최장 경로라고 한다. 이 때, 최장 경로의 가중치를 $d(u,v)$라고 하자. $Q$번 다음과 같은 쿼리를 해결해야 한다.</p>

<ul>
	<li>$l$ $r$: $l \leq i < j \leq r $인 모든 $i$와 $j$에 대해, $d(i,j)$ 값들을 XOR한 값을 구한다.</li>
</ul>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 $N$, $M$, $Q$가 주어진다. $(1 \leq N,M,Q \leq 100\,000)$</p>

<p>이후 $M$개의 줄에 걸쳐 간선의 정보가 $u$, $v$, $w$가 주어진다. 이는 정점 $u$와 $v$를 잇는 가중치 $w$의 간선이라는 뜻이다. 양 끝점이 같은 간선이 있을 수 있으며 같은 정점 쌍을 잇는 간선이 여럿 있을 수 있음에 유의하라. $(1 \leq u,v \leq N, 0 \leq w < 2^{30})$</p>

<p>이후 $Q$개의 줄에 걸쳐 쿼리의 정보 $l$, $r$이 주어진다. $(1 \leq l < r \leq N)$</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 쿼리의 답을 순서대로 줄바꿈으로 구분하여 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8 10 7
1 2 662784558
3 2 195868257
3 4 294212653
4 5 299265014
6 5 72652580
6 7 29303370
7 8 183954825
2 1 752722885
5 3 197591314
8 4 877461873
4 8
5 7
6 7
2 3
7 8
3 4
2 7
','0
713437792
738051848
716356296
736682272
1003204975
987493236
','MATH'),
                                                                                                                (3477,'BAEKJOON','https://www.acmicpc.net/problem/20653',20653,'롯데 자이언츠와 가희','0.5초','512 MB',17,'<p>작년 7월 28일, 야구 시즌에는 항상 그랬듯, 가희는 롯데 야구를 보고 있었습니다. 그런데 갑자기,&nbsp;TV 화면에 수학 문제&nbsp;<strong><em>T</em></strong> 개가 나타났습니다.</p>

<p>9회 말이 막 시작해서&nbsp;당황한 가희는 여러분들에게 TV 화면에 나타난 [문제]<strong>&nbsp;<em>T</em> </strong>개를&nbsp;빠르게 풀어 달라고 요청하였습니다.</p>

<p>[문제] 조건을 만족하는 수열의 개수를 구해주세요.</p>

<ul>
	<li>수열의 길이는&nbsp;<em>n</em>&nbsp;입니다.</li>
	<li>수열에 있는&nbsp;모든 수는 <strong>0보다 큰&nbsp;자연수</strong>입니다.</li>
	<li>수열에 있는 수들의&nbsp;최대공약수는&nbsp;<em>G</em>&nbsp;입니다.</li>
	<li>수열에 있는 수들의&nbsp;최소공배수는&nbsp;<em>L</em>&nbsp;입니다.</li>
</ul>

<p>[문제]는 TV 화면에서 <code>n G L</code> 1줄로 표시됩니다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 TV 화면에 나타난 문제의 수&nbsp;<em>T&nbsp;</em>가 주어집니다.</p>

<p>둘째 줄부터&nbsp;<em>T+1&nbsp;</em>번째 줄까지, TV 화면에 나타난 문제에 대한 정보가 <code>n G L</code>의 형식으로 입력됩니다. 이 수들은 <strong>공백으로 구분</strong>됩니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 문제에 대한 답을 10<sup>9</sup>+7 (1,000,000,007)로 나눈 나머지를 한 줄에 하나씩 출력하세요.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
2 6 12
3 12 10
','2
0
','MATH'),
                                                                                                                (3478,'BAEKJOON','https://www.acmicpc.net/problem/20658',20658,'파이썬은 너무 느려','5초','1024 MB',22,'<p>재현이는 Python 3으로 큰 수 연산에 관한&nbsp;간단한 프로그램을 구현했다.</p>

<pre><code>N = int(input())
S = input()
integerAsString = "0"
answer = 0</code>

<code>for i in range(0, N):
    if S[i] != -:
        integerAsString += S[i]
    else:
        integerAsString = integerAsString[:-1]

    answer += int(integerAsString)</code>

<code>print(answer)</code>
</pre>

<p>이 프로그램은 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>N</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$N$</span></mjx-container> 이 적당히 작을 때는 빠르게 작동했으나, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>N</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$N$</span></mjx-container>이 50만 정도 되니까 1분 안에도 답이 안 나오기 시작했다.</p>

<p>누가 봐도 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D442 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$O(N)$</span></mjx-container> 시간 복잡도를 가지고 있는 이 프로그램이 느린 이유를 곰곰히 생각해 보다가, 재현이는 파이썬이라는 언어가 느리다는 사실을 기억해 냈다. 아마&nbsp;더 빠른 언어를 쓰면 5초 안에도 답이 나올 수 있지 않을까? 같은 연산을 5초 안에 수행하는 프로그램을 작성하여 재현이의 호기심을 해결해 주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 정수 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>N</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$N$</span></mjx-container> 이 주어진다. (<mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c></mjx-mn><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c2264"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="4"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c2264"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="4"><mjx-c class="mjx-c35"></mjx-c><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c30"></mjx-c></mjx-mn><mjx-mstyle><mjx-mspace style="width: 0.167em;"></mjx-mspace></mjx-mstyle><mjx-mn class="mjx-n"><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c30"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>1</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>500</mn><mstyle scriptlevel="0"><mspace width="0.167em"></mspace></mstyle><mn>000</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$1 \le N \le 500\,000$</span></mjx-container>)</p>

<p>두 번째 줄에 길이 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>N</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$N$</span></mjx-container> 의 문자열 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D446 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>S</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$S$</span></mjx-container> 가 주어진다. <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D446 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>S</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$S$</span></mjx-container> 의 각 문자는 "0", "1", ..., "9", "-" 중 하나이다.</p>

<p>임의의 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>i</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$i$</span></mjx-container> 에 대해서 (<mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c></mjx-mn><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c2264"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="4"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c2264"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="4"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>N</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$1 \le i \le N$</span></mjx-container>), <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D446 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>S</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$S$</span></mjx-container> 의 맨 처음 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>i</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$i$</span></mjx-container> 개의 문자 중 "-" 라는 문자는 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mfrac><mjx-frac><mjx-num><mjx-nstrut></mjx-nstrut><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi></mjx-num><mjx-dbox><mjx-dtable><mjx-line></mjx-line><mjx-row><mjx-den><mjx-dstrut></mjx-dstrut><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-den></mjx-row></mjx-dtable></mjx-dbox></mjx-frac></mjx-mfrac></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mfrac><mi>i</mi><mn>2</mn></mfrac></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$\frac{i}{2}$</span></mjx-container> 개 이하이다. 즉, <code>integerAsString&nbsp;</code>문자열이 빈 문자열이 되는 경우는 존재하지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>위 알고리즘이&nbsp;<code>print(answer)</code>을 실행했을 때 출력하는 문자열을 출력하라.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
0-
','0
','MATH'),
                                                                                                                (3479,'BAEKJOON','https://www.acmicpc.net/problem/20672',20672,'대세는 바이러스야','2초','512 MB',22,'<p>준표는 던전을 클리어하고자 한다. 던전은 트리구조이며, 던전을 클리어하기 위해선 보스방에 사는 던전의 보스를 죽여야 한다. <strong>보스방은 언제나 1번 정점에 있다.</strong></p>

<p>보스방을 제외한 던전의 모든 단말정점에는 던전에 입장할 수 있는 입구가 있으며, <strong>보스방에 들어가는 문은&nbsp;유일하다. 즉 1번 정점에는 오직 하나의 간선만이&nbsp;연결되어있다.</strong></p>

<p>던전에는 보스 외에도 몬스터가 산다. 던전의 각 방마다 최대 한 마리의 몬스터가 서식할 수 있고, 준표가 보스방에 도달하기 위해선 경로를 막고있는 몬스터를 모두 죽여야 한다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/888083a6-d8d5-467c-b920-3a8f8168ec86/-/preview/" style="width: 349.167px; height: 249.167px;"></p>

<p style="text-align: center;"><그림 1> 던전의 예시</p>

<p>보스를 제외한 몬스터들은 던전에서 <strong>하나의 군집</strong>을 이루고 있어 던전의 <strong>연속된 일부분</strong>을 차지하고 있다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/e9780f3c-a4f8-42d3-92e3-d863c5bd4a32/-/preview/" width="100%" style="width: 347.5px; height: 148.333px;"></p>

<p style="text-align: center;"><그림 2> 예제 1의 가능한 군집들. 빨간 사각형의 군집은 던전의 연속된 일부분을 차지하지 않아 있을 수 없는 군집이다.</p>

<p>준표에게는 무시무시한 병기가 있는데, g번 바이러스를 사용하면 유전자 g를 가지는 모든 몬스터들을 죽일 수 있는 생화학 병기다.</p>

<p>각 몬스터의 유전자는 하나의 양의 정수로 나타낼 수 있으며, 유전자 g를 가진다는 의미는 몬스터의 유전자가 g로 나누어떨어진다는 뜻이다.</p>

<p>즉, 죽이고자 하는 몬스터들의 "유전자의 공약수" 번 바이러스를 사용하면 모든 몬스터가 죽는다.</p>

<p>당연하지만 모든 유전자는 1로 나누어떨어지기 때문에 1번 바이러스를 사용하면 모든 몬스터를 죽일 수 있을 것이다.</p>

<p>하지만 번호가 낮을수록 가격이 비싸기 때문에 준표는 가능하면 가장 높은 번호의 바이러스를 사용한다. 즉, 준표는 죽이고자 하는 몬스터들의 "유전자의 최대공약수" 번 바이러스를 사용한다.</p>

<p>준표가 어떤 군집의 던전을&nbsp;클리어하기 위해 사용하는 바이러스 번호를 <strong>치트키</strong>라고 하자. 준표는 가능한 모든 군집의&nbsp;<strong>치트키</strong>의 총합을 구하고자 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 던전의 크기 <em>N</em>이 입력된다. (2 ≤&nbsp;<em>N</em>&nbsp;≤ 100,000)</p>

<p>두 번째 줄에 던전의&nbsp;i번 방에 서식할 수 있는 몬스터의 유전자 <em>g<sub>i</sub></em> 가 순서대로 입력된다. (1 ≤&nbsp;<i>g<sub>i</sub></i>&nbsp;≤ 1,000,000,000)</p>

<p>세 번째 줄부터 <em>N</em> - 1줄에 걸쳐&nbsp;던전의 구조가 <em>u v</em> 형태로 입력된다. 이는 <em>u</em>번 방과 <em>v</em>번 방을 잇는 통로가 있다는 의미이다. (1 ≤ <em>u</em><i>, v</i>&nbsp;≤ <em>N</em>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 입구에서 출발했을 때 가능한 모든 군집의 <strong>치트키</strong>의 총합을 공백으로 구분하여<strong>&nbsp;정점 번호순</strong>으로 출력한다.</p>

<p>매우 큰 수가 될 수 있으므로&nbsp;10<sup>9</sup>+7 로 나눈 나머지로&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
12 3 6 9
1 2
2 3
2 4
','42 39
','MATH'),
                                                                                                                (3480,'BAEKJOON','https://www.acmicpc.net/problem/20932',20932,'약수 의식','1.75초(추가시간없음)','1024 MB',16,'<p>홍익대학교 바로 뒤편에 위치한 와우산의 와우약수터는 아직도 폐쇄되어있다. 와우산의 정기가 그대로 흘러나오는 약수를 다시 회복하기 위한 "와우 프로젝트"의 일원으로 파견된 당신은, 와우산의 산신령을 소환하기 위한 "약수 의식"을 준비했다. 약수 의식은 다음과 같은 순서로 이루어진다.</p>

<ol>
	<li>$1$~$9$의 숫자가 적혀있는 $N$장의 카드를 준비하고, 모든 카드를 잘 섞어 뒤집어 놓는다.</li>
	<li>뒤집히지 않은 카드 중, 하나의 카드를 무작위로 골라 뒤집는다. 이것을 뒤집힌 카드가 딱 한 장 남을 때까지 반복한다.</li>
	<li>지금까지 뒤집은 카드의 숫자들을 뒤집은 순서대로 읽었을 때 나오는 정수를 $x$라고 하자. 예를 들어 $1, 2, 3$을 순서대로 뽑았다면, $x = 123$이 된다.</li>
	<li>마지막으로 뒤집혀있는 한 장의 카드를 마저 뒤집는다. 이 카드에 적혀있는 수가 $x$의 약수여야, 이 의식은 성공이다.</li>
</ol>

<p>과연 약수 의식이 성공할 확률은 얼마나 될까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 카드의 개수 $N$ ($2 \le N \le 16$)이 주어진다. &nbsp;</p>

<p>다음 줄에 각 카드에 적혀있는 숫자 $a_1, a_2, \dots, a_N$ ($1 \le a_i \le 9$)이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>약수 의식이 성공할 확률을 출력한다. 절대 오차 또는 상대 오차가&nbsp;$10^{-6}$ 이하면 정답으로 간주한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 2 3
','0.6666666667
','MATH'),
                                                                                                                (3481,'BAEKJOON','https://www.acmicpc.net/problem/20938',20938,'반짝반짝','2초(추가시간없음)','1024 MB',16,'<p>이제 조금밖에 남지 않은 겨울 기분을 만끽하고 싶은 수현이는 지금부터라도 크리스마스 트리를 장식하려고 한다.</p>

<p>크리스마스 트리는 전구 스트립으로 두른다. 전구 스트립에는 전구 $N$개가 일(一)자로 설치되어 있고, 왼쪽에 전원을 넣는다. 특이하게도 이 전구 스트립은 전구 하나가 고장 나면 고장 난 전구를 시작으로 오른쪽에 설치되어 있는 모든 전구에 불이 들어오지 않게 된다.</p>

<p>수현이는 반짝반짝한 걸 좋아한다. 따라서 전구 스트립을 최대 $K$개의 토막으로 자르고,&nbsp;왼쪽에&nbsp;전원을 각각 다시 넣어서 트리를 장식할&nbsp;것이다. 이렇게 해서 불이 들어온 전구의 개수의 기댓값이 최대가 되게 하고&nbsp;싶다. 각각의 전구가 고장 날 확률이 주어질 때 불이 들어온 전구의 개수의 기댓값의 최댓값을 계산하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>다음과 같이 입력이 주어진다.</p>

<div style="background:#eeeeee;border:1px solid #cccccc;padding:5px 10px;">
<p>$N\ K$</p>

<p>$p_1\ p_2\,\dots\ p_N$</p>
</div>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>불이 들어온 전구의 개수의 기댓값의 최댓값을 출력한다.</p>

<p>출력한 값과 정답과의 절대 오차 또는 상대 오차가 $10^{-6}$ 이하여야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 1
0.50 0.50 0.50 0.50 0.50
','0.96875
','MATH'),
                                                                                                                (3482,'BAEKJOON','https://www.acmicpc.net/problem/20940',20940,'시철이가 사랑한 수식','1초(추가시간없음)','1024 MB',22,'<blockquote>
<p><em><strong>Q1.</strong> 코끼리를 냉장고에 넣는 방법은?</em></p>

<p><em><strong>A1.</strong> 대학원생을 시킨다.</em></p>

<p><em><strong>Q2.</strong> 수식의 값을&nbsp;알아내는 방법은?</em></p>

<p><em><strong>A2.</strong> 대학원생을 시킨다.</em></p>
</blockquote>

<p>연희동 최고의 대학원생&nbsp;시철이는 마치 한강이 흐르듯 수식을 전개하고, 그 끝마침이 대양과도 같았다.&nbsp;</p>

<p>화려한 수식 전개로 전 세계인의 마음을 훔치던 시철이는, 어느덧 수식을 사랑하는&nbsp;교수님의 눈에 띄게 되었다.</p>

<p>$$&nbsp;\displaystyle\sum_{n=1}^N \sum_{i=1}^n \sum_{j=1}^n&nbsp;\mathrm{gcd}\left(i,j\right)\times\mathrm{lcm}\left(i,j\right) &nbsp;$$</p>

<p>$$ \displaystyle\sum_{n=1}^N \sum_{i=1}^n \sum_{j=1}^n \mathrm{gcd}\left(i,j\right)&nbsp;\times&nbsp;\displaystyle\sum_{n=1}^N \sum_{i=1}^n \sum_{j=1}^n\mathrm{lcm}\left(i,j\right) $$</p>

<p>교수님은 두 식의 값을 알고 싶었지만 쉽지 않았다.&nbsp;그래서 교수님은 시철이에게 두 식의 값을&nbsp;구해&nbsp;달라고 부탁했다.&nbsp;</p>

<p>처음에 시철이는 마지못해 수식을 전개하기 시작했지만, 결국 교수님 때문에&nbsp;두 식을 사랑하게 되었다.</p>

<p>하지만 시철이는 졸업논문 준비로 너무 바빴고, 본인의 대학원 동기 민수에게 나머지를 떠넘겼다. 민수는 두 식의 값이 클 수 있다고 생각해, 값을 $K$로 나눈 나머지를 교수님께&nbsp;알려주려고 한다.&nbsp;</p>

<p>민수와 함께 두 식의 값을 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>다음과 같이 입력이 주어진다.</p>

<div style="background:#eeeeee;border:1px solid #cccccc;padding:5px 10px;">$N$ $K$</div>



					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 첫 번째 식의 값을 출력한다.</p>

<p>둘째 줄에 두 번째 식의 값을 출력한다.</p>

<p>값이 클 수 있으니 $K$로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>교수님의 눈에 띈 민수는 박사 과정까지 함께했다.</p>

				</div>
				</div>','1 1000000007
','1
1
','MATH'),
                                                                                                                (3483,'BAEKJOON','https://www.acmicpc.net/problem/20943',20943,'카카오톡','2초(추가시간없음)','1024 MB',12,'<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/9d9f1301-dbd8-444a-8f0d-0519f5e5d1c3/-/preview/"></p>

<p>카카오톡은 주식회사 카카오가 2010년 3월 18일 서비스를 시작한 글로벌 모바일 인스턴트 메신저로, 2020년 기준 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mn class="mjx-n"><mjx-c class="mjx-c34"></mjx-c></mjx-mn><mjx-mstyle><mjx-mspace style="width: 0.167em;"></mjx-mspace></mjx-mstyle><mjx-mn class="mjx-n"><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c30"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>4</mn><mstyle scriptlevel="0"><mspace width="0.167em"></mspace></mstyle><mn>000</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$4\,000$</span></mjx-container>만 명의 사용자가 등록돼 있고 시장 점유율이 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mn class="mjx-n"><mjx-c class="mjx-c39"></mjx-c><mjx-c class="mjx-c36"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>96</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$96$</span></mjx-container>%로 사실상 거의 모든 국민이 사용할 정도로 점유율이 매우 높다.</p>

<p>카카오의 지원하에 국렬이는 카카오톡의 특이한 오픈톡방에 대한 실험을 진행했다. 그에 대한 실험 내용은 다음과 같다. 실험에 대한 내용은 다음과 같다.</p>

<ol>
	<li><mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;">?<mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>N</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$N$</span></mjx-container>명의 유저가 모인 특이한 오픈톡방이 있다.</li>
	<li>특이한 오픈톡방은&nbsp;하나의 좌표 평면으로 구성되어 있으며, 각각 유저들은 좌표 평면 상의 서로 다른 직선 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>1</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$1$</span></mjx-container>개를 할당받는다.</li>
	<li>각 유저들이 서로의 톡을 보기 위해서는 각 유저들의 직선이 서로 만나야 한다. 서로 만나지 않는다면 서로의 톡을 볼 수 없다.</li>
</ol>

<p>이때, 국렬이는 특이한 오픈톡방 내에서 서로의 톡을 확인할 수 있는 유저의 쌍의 수를 구해야 한다. 국렬이는 너무 게을러서 이 실험을 대회에 떠넘겨버렸다. 당신은 상금을 위해 이 문제를 해결해야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>다음과 같이 입력이 주어진다.</p>

<div style="background:#eeeeee;border:1px solid #cccccc;padding:5px 10px;">
<p><mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;">?<mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>N</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$N$</span>?</mjx-container></p>

<p><mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;">?<mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D44E TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>a</mi><mn>1</mn></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$a_1$</span></mjx-container> <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D44F TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>b</mi><mn>1</mn></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$b_1$</span></mjx-container> <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D450 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>c</mi><mn>1</mn></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$c_1$</span>?</mjx-container></p>

<p>...</p>

<p><mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;">?<mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D44E TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>a</mi><mi>N</mi></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$a_N$</span></mjx-container> <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D44F TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>b</mi><mi>N</mi></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$b_N$</span></mjx-container> <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D450 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>c</mi><mi>N</mi></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$c_N$</span>?</mjx-container></p>
</div>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>서로의 톡을 확인할 수 있는 유저의 쌍의 수를 출력하여라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 2 3
2 4 5
1 3 6
3 9 7
','4
','MATH'),
                                                                                                                (3484,'BAEKJOON','https://www.acmicpc.net/problem/20946',20946,'합성인수분해','1초(추가시간없음)','1024 MB',11,'<p>소인수분해란 어떤 자연수를 소수의 곱으로 나타내는 것이다. 정수론을 끔찍하게 싫어하는 연두는 소수만 보면 치가 떨려, 대신에 자연수를 합성수의 곱으로 나타내는 “합성인수분해”라는 것을&nbsp;만들었다.</p>

<p>자연수 $N$의 합성인수분해는 다음의 조건을 모두 만족하는 수열 $A$로 정의한다.</p>

<ul>
	<li>$A$의 모든 원소는 합성수이다. (합성수란 $1$과 자기 자신 이외의 다른 약수를 가지는 정수이다.)</li>
	<li>$A$의 모든 원소의 곱은 $N$이다.</li>
</ul>

<p>하지만&nbsp;연두는 $N$의 합성인수분해가&nbsp;여러 개이거나 존재하지 않을 수도 있다는 것을 깨달았다.&nbsp;연두를 대신해 $N$을 합성인수분해 해주는 프로그램을 만들어보자. 만약 가능한 결과가 여러 개일 경우, 사전 순으로 가장 앞서는 것을 선택해야 한다.</p>

<ul>
</ul>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>다음과 같이 입력이 주어진다.</p>

<div style="background:#eeeeee;border:1px solid #cccccc;padding:5px 10px;">$N$&nbsp;</div>


					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>$N$의 합성인수분해 중 사전순으로 가장 앞서는 수열의&nbsp;원소들을 순서대로 공백으로 구분하여 출력한다.</p>

<p>합성인수분해가 불가능하다면 대신에 <span style="color:#e74c3c;"><code>-1</code></span>을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>수열 $A = a_1, a_2, \dots, a_n$가 수열 $B = b_1, b_2, \dots, b_m$보다 사전 순으로 앞선다는 것의 엄밀한 정의는, 다음 중 하나를 만족한다는 것이다.</p>

<ul>
	<li>$a_1=b_1,\ a_2=b_2,\ \dots,\ a_{i-1}=b_{i-1}$이고 $a_i < b_i$인 $i$가 존재한다.</li>
	<li>$a_1=b_1,\ a_2=b_2,\ \dots,\ a_n=b_n$이고 $n<m$이다.</li>
</ul>

				</div>
				</div>','3
','-1
','MATH'),
                                                                                                                (3485,'BAEKJOON','https://www.acmicpc.net/problem/20952',20952,'게임 개발자 승희','1초','1024 MB',12,'<p>승희는 최근 369 게임에 푹 빠졌다. 369 게임을 하던 승희는 놀라 자빠질 수밖에 없었다. 369 게임을 잘하는 자기 자신이 너무 대견하였기 때문이다. 369 게임이 식상해진 승희는 369 게임을 변형한 71421 게임을 개발하였다. 369 게임에서는 3, 6, 9가 들어가는 수에 손뼉을 치지만, 71421 게임에서는 7의 배수에 손뼉을 친다. 승희는 71421 게임을 널리 퍼트리기로 결심하였다.</p>

<p>71421 게임은 최근 대학생들 사이에서 큰 인기를 끌고 있다. 369 게임에 이어 71421 게임도 식상해진 승희는 수열을 이용한 새로운 게임을 개발하였다.</p>

<p>승희의 수열 게임은 혼자서 즐길 수 있는 재미난 게임이다. 시작하기에 앞서 길이가 N인 수열 A와 길이가 M인 수열 B를 준비한다. 이후 수열 A에 대하여 M번의 연산을 수행한다. i(1 ≤ i ≤ M)번째 연산은 수열 A의 모든 원소에 B<sub>i</sub>를 더한 후 7의 배수인 원소들을 제거하는 연산이다. 단, 연산을 수행한 결과 수열 A의 모든 원소가 제거된다면 해당 연산은 수행하지 않는다.</p>

<p>수열 A와 B가 주어졌을 때, M번의 연산을 수행한 결과를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 수열 A의 길이 N과 수열 B의 길이 M이 주어진다.</p>

<p>두 번째 줄에 N개의 정수 A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>N</sub>이 주어진다.</p>

<p>세 번째 줄에 M개의 정수 B<sub>1</sub>, B<sub>2</sub>, ..., B<sub>M</sub>이 주어진다.</p>

<p>모든 입력은 공백으로 구분되어 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 M번의 연산을 수행한 후 수열 A의 길이 K를 출력한다.</p>

<p>두 번째 줄에 K개의 정수 A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>K</sub>를 공백으로 구분하여 출력한다. 답이 매우 커질 수 있으므로 10<sup>9</sup> + 7로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>입력과 출력의 양이 방대하므로 빠른 입출력을 사용할 것을 권장한다.</p>

				</div>
				</div>','7 3
1 2 3 4 5 6 7
1 2 3
','4
8 9 11 13
','MATH'),
                                                                                                                (3486,'BAEKJOON','https://www.acmicpc.net/problem/20953',20953,'고고학자 예린','1초','1024 MB',4,'<p>예린은 고고학자이다. 예린은 강원대학교 백록관 지하에서 고인돌이 발견되었다는 소식을 듣고 누구보다 빠르게 백록관에 도착하였다. 고인돌을 본 순간 예린은 놀라 자빠질 수밖에 없었다. 고인돌에 의미를 알 수 없는 문자들이 가득 새겨져 있었기 때문이다. 예린은 이 문자들을 누구보다 빠르게 그리고 남들과는 다르게 해석하기로 결심하였다.</p>

<p>열심히 연구한 결과 예린은 이 문자들이 어셈블리 언어의 함수 코드를 의미함을 발견하였다. 아래 코드는 고인돌의 어셈블리 언어 코드와 동일한 기능을 하는 C 코드이다.</p>

<pre>int dolmen(int a, int b) {
    int sum, i, j, k;
    sum = 0;
    for (i = 0; i < a + b; i++) {
        for (j = 0; j < a + b; j++) {
            for (k = 0; k < j; k++) {
                sum++;
            }
        }
    }
    return sum;
}
</pre>

<p>정수 a와 b가 주어졌을 때, 함수 dolmen(a, b)의 실행 결과를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트 케이스의 수 T가 주어진다.</p>

<p>이후 T개의 줄에 걸쳐 정수 a와 b가 공백으로 구분되어 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대한 답을 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>입력과 출력의 양이 방대하므로 빠른 입출력을 사용할 것을 권장한다.</p>

				</div>
				</div>','3
1 2
2 3
3 4
','9
50
147
','MATH'),
                                                                                                                (3487,'BAEKJOON','https://www.acmicpc.net/problem/20954',20954,'택배 기사 민서','1초','1024 MB',9,'<p>민서는 택배 기사이다. 활기차게 월요일을 맞은 민서는 놀라 자빠질 수밖에 없었다. 코로나19 사태로 인하여 비대면 활동이 확산되면서 택배 물량이 급증하였기 때문이다. 민서에게 배정된 택배는 거의 무한개에 가까웠고 이대로라면 과로사를 피할 수 없을 것이다. 민서는 건강을 위하여 오늘까지만 열심히 일하고 내일부터는 택배 기사 대신 교수를 하기로 결심하였다.</p>

<p>민서가 사는 동네는 수직선으로 표현할 수 있으며, 민서는 수직선의 원점, 즉 수직선의 좌표 0에서 배달을 준비하고 있다. 각 택배에는 0번부터 차례대로 번호가 매겨져 있으며, 택배의 목적지는 수직선 위의 좌표로 표현할 수 있다. i번 택배의 목적지 D<sub>i</sub>는 다음과 같다.</p>

<p>$$D_i=(-1)^i×2^{\left\lfloor\frac{i}{2}\right\rfloor}$$</p>

<p>여기서 ?x?는 바닥 함수로, x보다 크지 않은, 즉 x 이하의 정수 중 가장 큰 정수를 의미한다. 예를 들어, 3번 택배의 목적지 D<sub>3</sub>은 다음과 같이 계산할 수 있다.</p>

<p>$$D_3=(-1)^3×2^{\left\lfloor\frac{3}{2}\right\rfloor}=-2$$</p>

<p>민서는 수직선의 원점에서 출발하여 0번 택배부터 차례대로 배달을 시작한다. 택배를 배달하기 위해서는 현재 위치로부터 택배의 목적지까지 이동해야 한다. 민서는 현재 좌표에서 인접한 좌표로, 즉 현재 좌표에서 1만큼 차이 나는 좌표로 이동할 수 있으며, 이때 1초의 시간이 소요된다. 또한 민서는 항상 최단 경로로 이동한다.</p>

<p>민서는 온종일 쉬지도 않고 열심히 택배를 배달하고 있다. 문득 민서는 수직선 위의 특정 좌표 x에 처음으로 도달하는 시점이 언제인지 궁금해졌다.</p>

<p>좌표 x가 주어졌을 때, 해당 좌표에 처음으로 도달하는 시점을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트 케이스의 수 T가 주어진다.</p>

<p>이후 T개의 줄에 걸쳐 정수 좌표 x가 한 줄에 하나씩 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대한 답을 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>입력과 출력의 양이 방대하므로 빠른 입출력을 사용할 것을 권장한다.</p>

<p>답이 32비트 정수 자료형의 표현 범위를 초과할 수 있음에 유의하라.</p>

				</div>
				</div>','5
0
1
2
3
4
','0
1
6
15
16
','MATH'),
                                                                                                                (3488,'BAEKJOON','https://www.acmicpc.net/problem/20957',20957,'농부 비니','1초','1024 MB',13,'<p>타고난 농사꾼 비니는 최근 숫자 공부에 푹 빠졌다. 열심히 숫자 공부를 하던 비니는 놀라 자빠질 수밖에 없었다. 숫자 7이 비니가 가장 아끼는 낫과 비슷하게 생겼기 때문이다. 옛말에 낫 놓고 7자도 모른다고 하였다. 문득 비니는 수를 구성하는 모든 숫자의 합과 곱이 7의 배수인 수가 몇 개인지 궁금해졌다. 비니는 답을 구하기 위하여 열심히 농사를 짓기로 결심하였다.</p>

<p>N이 주어졌을 때, N자리 양의 정수 중 수를 구성하는 모든 숫자의 합과 곱이 7의 배수인 수의 개수를 구하는 프로그램을 작성하시오. 수는 0으로 시작할 수 없다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트 케이스의 수 T가 주어진다.</p>

<p>이후 T개의 줄에 걸쳐 정수 N이 한 줄에 하나씩 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대한 답을 한 줄에 하나씩 출력한다. 답이 매우 커질 수 있으므로 10<sup>9</sup> + 7로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>2자리 수 중 조건을 만족하는 수는 70과 77이 있다.</p>

<p>4자리 수 중 조건을 만족하는 수는 2237 등이 있다. 2237의 경우 숫자들의 합은 2+2+3+7=14, 숫자들의 곱은 2×2×3×7=84이며, 14와 84는 모두 7의 배수이다.</p>

				</div>
				</div>','4
1
2
3
4
','1
2
54
692
','MATH'),
                                                                                                                (3489,'BAEKJOON','https://www.acmicpc.net/problem/20958',20958,'아린과 슬롯머신','1초','1024 MB',16,'<p>아린은 강원랜드로 휴가를 떠났다(아린은 감염병 예방을 위한 정부의 방역지침을 준수한다). 강원랜드에서 가장 인기 있는 게임은 슬롯머신이다. 슬롯머신을 구경하던 아린은 놀라 자빠질 수밖에 없었다. 잭팟이 터질 경우 거액의 당첨금을 받을 수 있다는 정보를 입수하였기 때문이다. 아린은 잭팟을 터트려 집도 사고 차도 사고 맛있는 것도 많이 먹기로 결심하였다.</p>

<p>아린은 칸의 개수가 N개인 슬롯머신을 가지고 있다. 슬롯머신의 레버를 당길 때마다 각 칸에는 임의의 양의 정수가 표시된다. 이때 모든 칸에 7이 표시되면 잭팟이 터졌다고 하며, 잭팟이 터지면 거액의 당첨금이 지급된다.</p>

<p>하지만 슬롯머신을 작동시키기 위해서는 돈이 필요하다. 검소하기로 유명한 아린은 슬롯머신 따위에 돈을 낭비하지 않는다. 슬롯머신을 작동시키는 대신, 아린은 슬롯머신의 각 칸에 대하여 다음과 같은 연산을 무한히 수행할 수 있다. 구간 [i, i + M)과 7이 아닌 소수 p를 선택한다. 그리고 구간에 속하는 수 중 p로 나누어떨어지는 모든 수를 p로 나눈다. 즉, S<sub>i</sub>, S<sub>i+1</sub>, ..., S<sub>i+M-1</sub> 중 p로 나누어떨어지는 모든 수를 p로 나눈다. (1 ≤ i ≤ N - M + 1, p ≠ 7)</p>

<p>슬롯머신의 상태가 주어졌을 때, 잭팟을 터트리기 위하여, 즉 모든 수를 7로 바꾸는 데 필요한 최소 연산 횟수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 슬롯머신의 칸의 개수 N과 구간의 길이 M이 주어진다.</p>

<p>두 번째 줄에 슬롯머신의 각 칸에 표시된 N개의 정수 S<sub>1</sub>, S<sub>2</sub>, ..., S<sub>N</sub>이 주어진다.</p>

<p>모든 입력은 공백으로 구분되어 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 잭팟을 터트리기 위하여 필요한 최소 연산 횟수를 출력한다. 모든 수를 7로 바꿀 수 없다면 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>입력의 양이 방대하므로 빠른 입력을 사용할 것을 권장한다.</p>

				</div>
				</div>','5 3
14 21 70 105 35
','3
','MATH'),
                                                                                                                (3490,'BAEKJOON','https://www.acmicpc.net/problem/21275',21275,'폰 호석만','1초','512 MB',9,'<p>폰 호석만은 진법 변환의 달인이다. 어떤 진법의 수가 주어져도 모든 다른 진법으로의 변환이 가능한 폰 호석만은 새로운 문제를 내기로&nbsp;했다. 폰 호석만이 내는 문제는 다음과 같이 진행된다.</p>

<p>먼저 폰 호석만은 수 3개 X, A, B를 결정한다(0&nbsp;≤ X < 2<sup>63</sup>, 2&nbsp;≤ A ≤ 36, 2 ≤&nbsp;B ≤ 36, A ≠ B). 이 때 X는 10진법이다. 그 다음에 X를 A진법으로 표현한 수와 B진법으로 표현한 수를 종이에 써 놓는다.</p>

<p>그 다음에 종이에 써져 있는 두 개의 수를 여러분에게 보여주게 된다. 주어진 두 개의 수를 통해 원래 숫자인 X, A, B를 계산해주자. 만약 조건을 만족하는 (X, A, B)로 가능한 조합이 여러 개라면 "Multiple"을 출력하고, 가능한 조합이 없다면 "Impossible"를 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫번째 줄에&nbsp;X를 A진법으로 표현한 값과 X를&nbsp;B진법으로 표현한 값이 공백으로 구분되어 주어진다. 각 자리수는 0 이상 z 이하이다. a부터&nbsp;z 는 10부터&nbsp;35 를 의미한다.</p>

<p>단, 0을 제외한 각 수는&nbsp;0&nbsp;으로 시작하지 않으며, 길이는 최대 70&nbsp;이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>만약 문제의 조건에 맞는 X, A, B가 유일하게 존재한다면, X를 십진법으로 표현한 수와 A와 B를 공백으로 나누어 출력하라. 만약 만족하는 경우가 2가지 이상이라면 "Multiple"을, 없다면 "Impossible"을 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>C++의 long long type과 Java의 Long 타입 변수가 가질 수 있는 값의 범위는 -2<sup>63</sup>&nbsp;이상 2<sup>63</sup> 미만 입니다.</p>

				</div>
				</div>','ep jh
','473 32 24
','MATH'),
                                                                                                                (3491,'BAEKJOON','https://www.acmicpc.net/problem/21296',21296,'팩토리얼','1초','512 MB',26,'<p>여러분은 다음과 같은 문제를 본 적이 있을 것이다.</p>

<table border="1" cellpadding="0" cellspacing="0" class="table table-bordered" style="width: 500px;">
	<tbody>
		<tr>
			<td>TODO: 여기에 1984번 문제 입력</td>
		</tr>
	</tbody>
</table>

<p>(2)나 (3)은 쉬우므로 우리는 특히 (1)에 집중한다.</p>

<p>겉보기에는 로그를 잘 더해서 계산하면 될 것 같지만, 코드를 단순히 그렇게 작성할 경우 실수 오차가 걱정된다.</p>

<p>키파는 이 문제를 세팅하고 있으며, (1)을 풀 때&nbsp;실수 오차가 잘 날 수 있는 경우를 테스트 케이스로 작성해서 넣으려 한다.</p>

<p>키파를 도와 주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>양의 정수를 하나 출력한다. 출력하는&nbsp;정수는 7 이상 100000000000000 이하여야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','','7
','MATH'),
                                                                                                                (3492,'BAEKJOON','https://www.acmicpc.net/problem/21312',21312,'홀짝 칵테일','1초','1024 MB',3,'<p>정진이는 특별한 음료를 가지고 있다. 음료들은 정수로 표현되는 고유 번호를 가지고 있다. 정진이는 이 음료들을 섞어 만든 칵테일을 만든다. 이 칵테일은 홀짝 칵테일이라 부르는데, 홀짝 칵테일은 칵테일에 들어가는 음료들의 고유 번호의 곱에 해당하는 맛을 가진다.</p>

<p>정진이는 여러 가지 칵테일을 맛본 결과, 맛이 홀수인 칵테일이 맛이 짝수인 칵테일보다는 무조건 맛있다고 느낀다. 또한, 똑같이 홀수이거나 짝수인 맛을 가진 칵테일끼리는 맛이 더 큰 칵테일을 더 맛있다고 느낀다.</p>

<p>음료 셋의 고유 번호가 주어졌을 때 정진이가 이 음료들을 조합해 만들 수 있는 칵테일 중 가장 맛있다고 느끼는 칵테일의 맛을 알려주자.</p>

<p>칵테일을 만들 때는, 반드시 모든 음료를 사용할 필요는 없지만, 적어도 하나의 음료는 사용해야 한다. 하나의 음료만 사용하는 경우 칵테일의 맛은 사용한 음료의 고유 번호와 같다.</p>

<p>또한, 주어지는 세 음료는 서로 다른 고유 번호를 가지고 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 주어진 세&nbsp;음료의 고유번호&nbsp;<em>A</em>,&nbsp;<em>B</em>,&nbsp;<em>C가</em>&nbsp;주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 만들 수 있는 홀짝 칵테일 중 가장 정진이가 맛있다고 느끼는&nbsp;홀짝 칵테일의 맛을&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 3 5
','15
','MATH'),
                                                                                                                (3493,'BAEKJOON','https://www.acmicpc.net/problem/21322',21322,'격자 돌리기','2초','1024 MB',15,'<p>태영이는 격자를 좋아한다. 그래서 컨베이어 벨트로 이루어진&nbsp;<em>N&nbsp;</em>×&nbsp;<em>N</em>&nbsp;모양의 격자를 만들었다.&nbsp;각 칸은 (r, c)로 나타낼 수 있으며 r은 맨 위에서 몇 번째 칸인지&nbsp;의미하고 c는 맨 왼쪽에서 몇 번째 칸인지 의미한다. 각 칸에는 숫자가 하나씩 올려져 있다.<br>
태영이가 만든 격자는 바깥에서부터&nbsp;여러 컨베이어 벨트가 중첩되어 있는 형태이다. 8 × 8형태의 격자를 예로 들어보자.</p>

<p><img alt="" src="https://upload.acmicpc.net/7d939870-4432-4809-b4c0-43d32c7394a1/-/preview/"><br>
같은 색은 같은 컨베이어 벨트에 포함된다는 것을 뜻한다.</p>

<p>그런데 격자를 싫어하는 호석이는 태영이의 격자를 마구마구 돌려버리려고 한다. 더군다나 격자를 마구마구 돌리고 나서는 어떤 칸에 어떤 수가 놓여있는지 물어보기까지 한다.<br>
호석이의 행동은 3가지로 정리해볼 수 있다.</p>

<ul>
	<li>1 <em>a b</em> 가 입력으로 주어진다.<br>
	바깥에서&nbsp;<em>a</em>번째 위치한 컨베이어 벨트를 시계 방향으로&nbsp;<em>b</em>칸 만큼 회전시킨다.</li>
	<li>2 <em>c d</em> 가 입력으로 주어진다.<br>
	(<i>c</i>,&nbsp;<em>d</em>),&nbsp;(<em>c</em>,&nbsp;<em>d + 1</em>),&nbsp;(<em>c + 1</em>,&nbsp;<em>d</em>),&nbsp;(<em>c + 1</em>,&nbsp;<em>d + 1</em>) 4개의 칸으로&nbsp;이루어진 2 × 2 정사각형을 시계 방향으로 한 칸 회전시킨 모양으로 바꾼다. 이 행동은 컨베이어 벨트에는 영향이 없고 컨베이어 벨트 위에 올려진 수에만 영향이 있다.<br>
	예를 들어, 순서대로 1, 2, 3, 4 의 수가 올려져 있었다면 순서대로 3, 1, 4, 2 의 수가 올려져 있는 형태가 된다.</li>
	<li>3 <em>e f</em> 가 입력으로 주어진다.<br>
	(<i>e</i>,&nbsp;<em>f</em>) 칸 위에 올려져 있는 수를 물어본다. 태영이는 이 질문에 정확하게 답을 해야 한다.</li>
</ul>

<p>태영이를 도와 호석이의 질문에 답을 해주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>1번째 줄에 격자의 크기를 의미하는 양의 정수&nbsp;<em>N</em>과&nbsp;호석이의&nbsp;행동의 개수를 의미하는&nbsp;<em>M</em>이 주어진다.<br>
2번째 줄부터 <em>N</em> + 1번째 줄까지 각 줄에&nbsp;<em>N</em>개의 양의 정수가 공백을 사이에 두고 주어진다. <em>x</em> + 1번째 줄의 <em>y</em>번째 정수는 격자의 (<em>x</em>,&nbsp;<em>y</em>) 칸에 올려져 있는 수를 의미한다.<br>
<em>N</em> + 2번째 줄부터 <em>N</em> + <em>M</em> + 1번째 줄까지 각 줄에&nbsp;호석이의&nbsp;행동 순서대로&nbsp;호석이의&nbsp;행동을 의미하는 3개의 정수가 공백을 사이에 두고 주어진다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>호석이가 3번 행동을 할 때 마다 거기에 맞는 답을 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 5
0 1 2 3 4 5
6 7 8 9 10 11
12 13 14 15 16 17
18 19 20 21 22 23
24 25 26 27 28 29
30 31 32 33 34 35
3 1 1
1 1 1
3 1 1
2 1 1
3 1 1
','0
6
12
','MATH'),
                                                                                                                (3494,'BAEKJOON','https://www.acmicpc.net/problem/21395',21395,'연속한 소수 만들기','1초(추가시간없음)','512 MB',9,'<p>Albert는 최근 소수 (prime)에 대해 배웠다. 1보다 큰 양의 정수 p의 약수가 1과 p뿐인 경우 p를 소수라 한다. 만약 n개의 소수&nbsp;p[1], p[2], ..., p[n] 이 아래 조건을 만족하면 이는 "연속한 소수" 라고 한다:</p>

<ul>
	<li>p[1], ..., p[n]이 n개의 고유한 (서로 다른) 소수이며</li>
	<li>min(p[1], ..., p[n]) <= q&nbsp;<= max(p[1], ..., p[n]) 을 만족하는 모든 정수 q에 대해 q가 소수이면 p[1], ..., p[n]중 하나와 같다.</li>
</ul>

<p>예를 들어 [5, 3, 2, 7]과 [11, 7, 5, 13]은&nbsp;연속한 소수이며 [2, 5, 7]이나 [5, 13, 17] 혹은 [2, 2, 3, 5]는&nbsp;연속한 소수가 아니다.</p>

<p>Albert는&nbsp;혼자 할 수 있는 놀이를 생각하던 중, 소수 만들기 라는 게임을 해보기로 했다.</p>

<p>먼저 임의의 양의 정수 n개를 선택한다 (편의상 x[1], x[2], ..., x[n] 이라 하자). 이를 연속한 소수 n개로 바꾸고 싶은데, 아래와 같은 제약이 따른다.</p>

<ul>
	<li>각 정수 x[i]를 임의의 소수로 바꿀 수 있고, x[i]가 이미 소수인 경우라도 다른 소수로 바꿀 수 있다. (x[i]가 이미 소수인 경우, 바꾸지 않아도 된다.)</li>
	<li>어떤 정수 y를 임의의 소수 p로 바꾸는데 | p - y&nbsp;| 만큼의 벌점이 발생한다.</li>
</ul>

<p>예를 들어 n = 3 이고 x = [7, 13, 3]이라 하자.</p>

<ul>
	<li>이미 모든 수가 소수이지만, 연속한 소수가 아니다.</li>
	<li>이 세 정수를 [5, 7, 11]로 바꾸는 경우 벌점은&nbsp;|5 - 7| + |7 - 13| + |11 - 3| = 16이 발생한다.</li>
	<li>다른 방법으로, x[2]를 13에서 11로 바꾸고 (벌점 2 발생) x[3]을 3에서 5로 바꾸면 (벌점 2 발생) 총 벌점은 4가 발생하고, 	결과로 [7, 11, 5]를 얻게 되는데 이는 연속한 소수이다 (순서는 상관 없음에 유의하자).</li>
</ul>

<p>다른 예로, n = 3 이고 x = [2, 2, 2]라 하자.</p>

<ul>
	<li>가령 첫 수를 3으로 바꾸고 마지막 수를 5로 바꾸면&nbsp;벌점이 4 발생하고 결과로 [3, 2, 5]를 얻게 된다.</li>
</ul>

<p>입력으로 Albert가 처음에 고른 n개의 정수 x[1], ..., x[n]이 주어졌을 때, 이를 n개의 연속한 소수로 바꾸기 위해 필요한 최소한의 벌점을 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 수 T가 주어진다.</p>

<p>각 테스트 케이스는 두 줄에 나누어 주어지는데 첫 줄에 n이 주어지고 다음 줄에 n개의 정수가 공백으로 구분되어 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 입력으로 주어진 정수를 연속된 소수로 바꾸기 위해 필요한 최소한의 벌점을 각 줄에 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
3
2 2 2
4
5 7 12 12
3
7 13 3
7
74 79 7 16 46 68 71
','4
2
4
106
','MATH'),
                                                                                                                (3495,'BAEKJOON','https://www.acmicpc.net/problem/21397',21397,'긴 수','1초(하단참고)','512 MB',14,'<p>Albert는 최근 등차 수열 (arithmetic sequence)에 흥미를 느껴 여러 가지 문제를 만들어보고 있다.</p>

<p>먼저, 임의의 양의 정수 a, b를 고른 후 등차수열 x를 정의한다:&nbsp; <strong>x<sub>i</sub>&nbsp;:= a + b * (i-1)</strong>. 즉, x<sub>1</sub> = a 이며 x<sub>2</sub> = a+b, x<sub>3</sub> = a+b*2, 이런 식으로 무한히 진행된다.</p>

<p>Albert는 별 생각없이 x1, x2, x3, ... 을 공백 없이 (좌측에서 우측으로)&nbsp;계속 이어 적었는데, 적다 보니 엄청나게 긴 수를 만들어버렸다. 그 와중에 가장 왼쪽에서부터 c 번째에 적힌 숫자는 무엇인지 궁금해졌다.</p>

<p>예를 들어 a = 1, b = 1 인 경우, Albert가 적은 긴 수는 아래와 같다 (등차 수열을 구성하는 처음 21개의 수까지 적었을 경우): 123456789101112131415161718192021...</p>

<p>이 중 좌측에서 15번째 숫자는&nbsp;"2"가 이고 ("12"의 2) 16번째 숫자는&nbsp;1이다 ("13"의 1).</p>

<p>다른 예로, a = 3, b = 7 인 경우 긴 수는 아래와 같다 (등차 수열을 구성하는 처음 11개의 수까지 적었을 경우): 310172431384552596673...</p>

<p>이 중 좌측에서 15번째 숫자는&nbsp;2 이며 ("52"의 2) 16번째 숫자는&nbsp;5이다 ("59"의 5).</p>

<p>입력으로 a, b, c 가 주어졌을 때, Albert가 등차수열 x<sub>i</sub> = a + b * (i-1)을 공백없이 연속으로 적었을 경우 c번째 숫자가 무엇인지 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 수 T가 주어진다.</p>

<p>각 테스트 케이스는 한 줄에 걸쳐 a, b, c 가 공백으로 구분되어 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스의 답을 한 줄에 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8
1 1 15
1 1 16
3 7 15
3 7 16
21 1 15
21 1 16
4 3 1000000000
400 300 100000000
','2
1
2
5
2
8
4
1
','MATH'),
                                                                                                                (3496,'BAEKJOON','https://www.acmicpc.net/problem/21558',21558,'전쟁 준비하기','2초','256 MB',10,'<p>이번에 폴리매스 왕국은 이웃 나라인 사이언스보드를 정복하기 위해 전쟁을 치르려고 합니다. 당신은 전쟁에서 사용할 방진을 짜 달라는 부탁을 받아 방진을 연구하고 있습니다.</p>

<p>전쟁 지역의 지형상 가장 효율적인 방진은 직사각형 구조일 것으로 보입니다. 즉 $X$행 $Y$열의 직사각형을 정확히 $XY$명의 병사가 채우고 있는 형태를 말합니다. 병사의 수가 정확히 떨어지지 않아 몇 명이 남거나 부족한 경우에는 이러한 방진을 짤 수 없습니다.</p>

<p>폴리매스 문명은 예전에도 강력한 군사력으로 주변의 약소국을 다수 복속시켰으므로, 군대에도 서로 다른 $N$개의 민족이 섞여 있습니다. 특히, 이번 전쟁에 참가하게 될 병사들 중 $i$번째 민족 출신인 병사는 정확히 $A_i$명인 것으로 집계되었습니다.</p>

<p>출신 민족에 따라 계급이 존재하기 때문에, 병사들의 위치를 아무렇게나 정할 수 없습니다. 특히 $i<j$일 때 $i$번째 민족 출신인 병사는 항상 $j$번째 민족 출신인 병사보다 앞에 서야 합니다. 이 때 $a$행 $b$열에 위치한 병사가 $a$행 $b$열에 위치한 병사보다 앞에 선다는 말은 다음 둘 중 하나가 성립함을 의미합니다.</p>

<ul>
	<li>$a<a$</li>
	<li>$a=a$이고 $b<b$</li>
</ul>

<p>그러나 이 방식에는 약간의 문제가 있는데, 서로 다른 민족인 병사끼리 양옆으로 인접해 있다면 싸움이 벌어질 것입니다. 이 때 $a$행 $b$열에 위치한 병사와 $a$행 $b$열에 위치한 병사가 양옆으로 인접해 있다는 말은 $a=a$이고 $|b-b|=1$임을 뜻합니다.</p>

<p>당신이 이러한 문제점을 보고하자, 왕국의 육군 장교들은 싸움을 막기 위해 평화의 돌을 사용하기로 했습니다. 평화의 돌의 힘을 사용하면 서로 다른 민족인 병사가 인접해 있더라도 싸움이 나는 것을 막을 수 있지만, 한 개의 돌 당 하나의 싸움밖에 막을 수 없습니다. 즉 평화의 돌을 $k$개 가지고 있다면 민족이 다르고 서로 인접한 병사의 쌍이 $k$쌍 이하여야 싸움이 일어나지 않는 것입니다.</p>

<p>군대의 장교들은 방진이 옆으로 넓을수록, 즉 $Y$가 최대한 클수록 군대가 강하다고 생각합니다. 따라서 당신은 위 조건을 만족하는 방진 중 가장 큰 $Y$값을 가지는 방진을 찾아내야 합니다. 그러나 평화의 돌에 관련된 정보는 왕국의 기밀 사항이기 때문에, 당신은 정확히 몇 개의 평화의 돌이 있는지 알지 못합니다. 따라서 당신은 $0 \le k \le N-1$인 모든 정수 $k$에 대해서 가능한 $Y$의 최댓값을 모두 구하기로 했습니다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에는 민족의 수 $N$이 주어집니다.</p>

<p>다음 줄에는 각 민족의 병사 수 $A_1, A_2, \cdots, A_N$이 주어집니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 줄에 $0 \le k \le N-1$인 모든 정수 $k$에 대해 가능한 $Y$의 최댓값을 각각 공백으로 구분하여 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
3 1 2 1 1
','1 1 2 4 8
','MATH'),
                                                                                                                (3497,'BAEKJOON','https://www.acmicpc.net/problem/21567',21567,'숫자의 개수 2','1초(추가시간없음)','128 MB',4,'<p>세 개의 자연수 A, B, C가 주어질 때 A × B × C를 계산한 결과에 0부터 9까지 각각의 숫자가 몇 번씩 쓰였는지를 구하는 프로그램을 작성하시오.</p>

<p>예를 들어 A = 150, B = 266, C = 427 이라면&nbsp;A × B × C = 150 × 266 × 427 = 17037300 이 되고,&nbsp;계산한 결과 17037300 에는 0이 3번, 1이 1번, 3이 2번, 7이 2번 쓰였다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 A, 둘째 줄에 B, 셋째 줄에 C가 주어진다. A, B, C는 모두 1,000,000보다 작은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에는 A × B × C의 결과에 0 이 몇 번 쓰였는지 출력한다. 마찬가지로 둘째 줄부터 열 번째 줄까지 A × B × C의 결과에 1부터 9까지의 숫자가 각각 몇 번 쓰였는지 차례로 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','150
266
427
','3
1
0
2
0
0
0
2
0
0
','MATH'),
                                                                                                                (3498,'BAEKJOON','https://www.acmicpc.net/problem/21601',21601,'수건 돌리기','0.25초','256 MB',16,'<p>$N$명의 사람이 원형으로 앉아 수건 돌리기 게임을 합니다. 각 사람의 번호는 시계 방향으로 1번, 2번, ..., $N$번입니다. 처음에 1번 사람이 수건을 건네받습니다.</p>

<p>수건을 가진 사람은 자리에서 일어나서, 시계 방향으로 돌다가 처음으로 사람을 만나면 지나치고, 그 다음으로 만나게 되는 사람에게 수건을 건네줍니다. 수건을 건네주고 난 뒤 그 사람은 게임에서 퇴장합니다.</p>

<p>예를 들어 $N=5$라면, 처음에 1번 사람은 2번을 건너뛰고 3번 사람에게 수건을 건네고 퇴장합니다. 3번은 4번을 건너뛰고 5번에게, 5번은 2번을 건너뛰고 4번에게, 4번은 2번을 건너뛰고 다시 2번을 만나 수건을 전달합니다. $N$명이 게임을 할 때, $K$번째로 수건을 받는 사람의 번호를 구해 봅시다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 두 정수 $N$과 $K$가 주어집니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>$K$번째로 수건을 건네받는 사람의 번호를 출력합니다. 이때, 1번 사람도 셉니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 3
','5
','MATH'),
                                                                                                                (3499,'BAEKJOON','https://www.acmicpc.net/problem/21606',21606,'아침 산책','3초','256 MB',13,'<p>아침 산책을 즐기는 서현이는 서울과학고에 입학해서도 아침 산책을 즐기려고 합니다. 서현이는 산책을 위해 서울과학고의 지리를 분석했고, 그 결과 서울과학고를 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>N</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$N$</span></mjx-container>개의 장소를 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="3"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>N</mi><mo>?</mo><mn>1</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$N-1$</span></mjx-container>개의 길이 잇는 트리 형태로 단순화시킬 수 있었습니다. 트리 구조이므로, 모든 장소를 몇 개의 길을 통해 오고갈 수 있습니다.</p>

<p>아침 산책은 시작점과 도착점을 정하고, 시작점에서 도착점까지 트리 위의 단순 경로(같은 점을 여러 번 지나지 않는 경로)를 따라 걷게 됩니다. 트리 위의 두 점 사이의 경로는 유일하므로 시작점과 도착점이 정해지면 경로는 유일하게 결정됩니다.</p>

<p><mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;">?<mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>N</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$N$</span></mjx-container>개 장소 중에 일부 장소는 실내이며, 나머지 장소는 실외입니다. 서현이는 산책을 시작하기 전부터 운동을 하는 것을 원치 않기 때문에, 산책의 시작점과 끝점은 모두 실내여야 합니다. 또한, 산책 도중에 실내 장소를 만나면 산책을 그만두고자 하는 욕구가 생기기 때문에, 산책 경로 위에 시작점과 끝점을 제외하고 실내 장소가 있으면 안 됩니다.</p>

<p>서현이는 매일 다른 산책 경로를 걷고자 합니다. 서로 다른 산책 경로가 몇 가지 있는지 구해 봅시다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에는 정점의 수 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>N</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$N$</span></mjx-container>이 주어집니다.</p>

<p>둘째 줄에는 1과 0으로 이루어진 길이 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>N</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$N$</span></mjx-container>의 문자열 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D434 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>A</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$A$</span></mjx-container>가 주어집니다. <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>i</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$i$</span></mjx-container>번째 문자 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D434 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>A</mi><mi>i</mi></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$A_i$</span></mjx-container>가 1일 경우 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>i</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$i$</span></mjx-container>번 장소는 실내이며, 0인 경우 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>i</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$i$</span></mjx-container>번 장소는 실외입니다.</p>

<p>셋째 줄부터 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D441 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c2B"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="3"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>N</mi><mo>+</mo><mn>1</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$N+1$</span></mjx-container>번 줄까지는 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c2B"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="3"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>i</mi><mo>+</mo><mn>2</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$i+2$</span></mjx-container>번 줄에 트리의 각 간선을 나타내는 두 정수 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D462 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>u</mi><mi>i</mi></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$u_i$</span></mjx-container>, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D463 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>v</mi><mi>i</mi></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$v_i$</span></mjx-container>가 주어집니다. 이는 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>i</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$i$</span></mjx-container>번째 간선이 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D462 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>u</mi><mi>i</mi></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$u_i$</span></mjx-container>번 정점과 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D463 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mi class="mjx-i" size="s"><mjx-c class="mjx-c1D456 TEX-I"></mjx-c></mjx-mi></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>v</mi><mi>i</mi></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$v_i$</span></mjx-container>번 정점을 연결한다는 의미입니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>가능한 서로 다른 산책 경로의 수를 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
10111
1 2
2 3
2 4
4 5
','8
','MATH'),
                                                                                                                (3500,'BAEKJOON','https://www.acmicpc.net/problem/21739',21739,'펭귄 네비게이터','1초(추가시간없음)','1024 MB',14,'<p>펭귄은 현재 ($1$, $1$)에 있다. 펭귄은 집까지 가고 싶다. 펭귄의 집은 ($2$, $N$)이다. 하지만 누군가에 의해 얼음길이 다 깨져 집에 갈 수 없게 되었다. 현진이는&nbsp;펭귄들을 위해 얼음길을 만들어줄 예정이다. 얼음길은 $2 \times N$ 크기이며&nbsp;얼음마다 중복하지 않고 $1$부터 $2N$까지의 번호를 붙일 수 있다. 이&nbsp;펭귄들에겐 특이한 습성이 있다. 펭귄은 현재 위치의 우측이나 아래로만 이동한다. 하지만 이동한 곳의 번호가 원래 위치의 숫자보다 커야만 한다. 펭귄이 어떤 움직임을 하든지 무조건 집으로 갈 수 있게 만드는 얼음길의 개수를 구하는 프로그램을 작성해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 얼음길&nbsp;가로의 길이&nbsp;$N$ ($ 1 \leq N \leq 10\,000$)이&nbsp;주어진다.<br>
&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 만들어지는 얼음길의 개수를 $10^9+7$로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
','5
','MATH'),
                                                                                                                (3501,'BAEKJOON','https://www.acmicpc.net/problem/21756',21756,'지우개','1초','512 MB',4,'<p>$N$개의 칸에 $1$ 부터 $N$ 까지의 수들이 왼쪽부터 순서대로 저장되어 있다. 또, 각 칸은 왼쪽부터 $1$ 부터 $N$까지 순서대로 번호가 붙어 있다. 즉, 처음에는 각 칸의 번호와 각 칸에 저장된 수가 같다.</p>

<p>아래 그림은 $N = 7$일 때의 예이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/1587dd00-130c-42a0-af6e-68b3b484a1b8/-/preview/" style="width: 361px; height: 90px;"></p>

<p>다음 작업을 수가 정확히 하나가 남을 때 까지 반복한다.</p>

<p>(A) 홀수번 칸의 수들을 모두 지운다 (B) 남은 수들을 왼쪽으로 모은다.</p>

<p>제일 첫 작업의 (A) 단계가 끝나면 칸들의 상태는 다음과 같을 것이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/1bedbcf7-ee56-4bb0-a83b-d6abbb34ae46/-/preview/" style="width: 361px; height: 90px;"></p>

<p>(B) 단계가 끝나면 다음과 같을 것이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/7f311585-5dd0-4033-ada3-5fb9aa0df18b/-/preview/" style="width: 361px; height: 90px;"></p>

<p>두번째 작업이 진행되면 칸들은 아래 두 그림과 같이 바뀔 것이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/e070dc76-59fc-4fa6-a0b3-bf310f78dccd/-/preview/" style="width: 361px; height: 90px;"></p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/e7c0cbf8-ab7d-4b7c-bdac-28b433c83c95/-/preview/" style="width: 361px; height: 90px;"></p>

<p>이제 수가 하나 남았으므로 작업은 더 이상 진행되지 않는다.</p>

<p>$N$을 입력으로 받아 위와 같이 작업을 진행했을 때 마지막으로 남는 수를 계산하는 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 정수 $N$이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>마지막으로 남는 수를 한 줄에 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
','1
','MATH'),
                                                                                                                (3502,'BAEKJOON','https://www.acmicpc.net/problem/21760',21760,'야구 시즌','1초','512 MB',6,'<p>KOI 야구 리그에는 $N$개의 지역리그가 존재하고 각 지역리그에는 $M$개의 팀이 존재해서, 리그 전체로는 $N \times M$개의 팀으로 운영되고 있다.</p>

<p>한 시즌에 각 팀은 같은 지역리그 팀뿐만 아니라 다른 지역리그 팀과도 경기를 해야 한다. 같은 지역리그 팀과의 팀당 경기 수는 $A$로 같은 지역리그 팀들에 대해서 모두 동일하다. 즉, 한 팀 $X$는 같은 지역리그에 있는 모든 팀 $Y$ ($\ne X$)와 각각 $A$번의 경기를 한다. 또한 다른 지역리그 팀과의 팀당 경기 수는 $B$로 다른 지역리그 팀들에 대해서 모두 동일하다. 즉, 한 팀 $X$는 다른 지역리그에 있는 모든 팀 $Z$($\ne X$)와 각각 $B$번의 경기를 한다. 단, $A$와 $B$는 $A = k \times B$ ($k$는 $1$ 이상의 정수)를 만족해야 한다.</p>

<p>세계적 판데믹의 영향으로 올해 KOI 야구 리그는 시즌을 단축하여, 리그의 전체 경기 수가 $D$개 이하 이면서 $D$에 가장 가깝게 되도록 정하기로 했다. 따라서 같은 지역리그 팀과의 팀당 경기 수 $A$와 다른 지역리그 팀과의 팀당 경기 수 $B$를 새롭게 결정해야 한다. 물론, $A = k \times B$를 만족해야 하고, $k$는 변함없이 유지되어야 한다. 또한 각 팀은 다른 팀과 적어도 한 번이상은 경기를 해야 한다. 다시 말해서, $A \ge 1$, $B \ge 1$을 만족해야 한다.</p>

<p>예를 들어, $N = 2$, $M = 3$, $k = 3$일 때, 경기 수 제한 $D = 60$이면, $A = 6$, $B = 2$일 때, 다른 지역리그 팀들과의 총 경기 수는 $18$이고, 같은 지역리그 팀들과의 총 경기 수는 $36$이다. 따라서 리그 전체 경기 수는 $54$로 $D$에 가장 가까운 새로운 경기 수이다.</p>

<p>지역리그의 개수 $N$, 각 지역리그에 속하는 팀 수 $M$, 그리고 위에서 $A = k \times B$를 만족하는 정수 $k$, 새로운 경기 수 제한 $D$가 주어질 때, $D$ <strong>이하</strong>이면서 $D$에 <strong>가장 가까운</strong> 리그 전체 경기 수를 계산해서 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트 케이스의 개수 $T$가 주어진다.</p>

<p>다음 $T$개의 줄에 각 테스트 케이스의 정보가 한 줄에 하나씩 주어진다.</p>

<p>각 테스트 케이스는 하나의 줄에 네 개의 정수 $N$, $M$, $k$, $D$가 공백 하나를 사이로 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>$T$개의 각 줄에 각 테스트 케이스에 대해 리그 <strong>전체 경기 수</strong>를 출력한다.</p>

<p>만약 조건을 만족하는 경기 수가 존재하지 않으면 $-1$을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
2 3 3 60
2 2 1 18
2 2 1 4
','54
18
-1
','MATH'),
                                                                                                                (3503,'BAEKJOON','https://www.acmicpc.net/problem/21761',21761,'초직사각형','1초','512 MB',16,'<p>1차원 공간에서의 선분, 2차원 공간에서의 직사각형, 3차원 공간에서의 직육면체를 생각해 보자.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/c139786a-1938-4d67-ab0b-167a9fefcb1f/-/preview/" style="width: 349.167px; height: 204.167px;"></p>

<p>선분의 크기는 변수 $A$로, 직사각형의 크기는 두 개의 변수 $A$와 $B$로, 직육면체의 크기는 세 개의 변수 $A$, $B$, $C$로 표현할 수 있다. 선분의 길이는 $A$, 직사각형의 넓이는 $A \cdot B$, 직육면체의 부피는 $A \cdot B \cdot C$이다.</p>

<hr>
<p>4차원 공간에 네 개의 변수 $A$, $B$, $C$, $D$로 크기를 표현할 수 있는 초직사각형이 있다. 4차원 초직사각형의 부피는 $A \cdot B \cdot C \cdot D$이다.</p>

<p>처음에 변수 $A$의 값은 $A_0$, 변수 $B$의 값은 $B_0$, 변수 $C$의 값은 $C_0$, 변수 $D$의 값은 $D_0$이다.</p>

<p>이 초직사각형의 크기를 바꿀 수 있는 카드가 $N$장 있다. 이 중 $i$ ($1 \le i \le N$)번째 카드에는 문자 $T_i$ 와 자연수 $U_i$가 적혀 있다. $T_i$는 <code>A</code>, <code>B</code>, <code>C</code>, <code>D</code> 중 하나이며, 값을 바꿀 변수의 이름을 의미한다. $i$번째 카드를 사용하면, $T_i$에 해당하는 변수의 값이 $U_i$만큼 증가한다. 사용한 카드는 즉시 소멸하므로, 각각의 카드는 최대 한 번씩만 사용할 수 있다.</p>

<p>당신은 4차원 초직사각형의 부피를 <strong>최대화</strong>하고자 하며, 이를 위해 주어진 카드 중 <strong>정확히</strong>&nbsp;$K$장을 골라서 원하는 순서대로 사용할 수 있다. 어떤 카드를 어떤 순서대로 사용해야 하는지를 구하여 출력하는 프로그램을 작성하라.</p>

<p>부피를 최대화하는 사용 방법이 여러 가지 있을 경우 그 중 하나만 구하여 출력하면 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 두 개의 정수 $N$과 $K$가 공백 하나를 사이로 두고 주어진다.</p>

<p>두 번째 줄에 네 개의 정수 $A_0$, $B_0$, $C_0$, $D_0$가 공백 하나씩을 사이로 두고 주어진다.</p>

<p>다음 $N$개의 줄에는 카드들에 대한 정보가 주어진다. 이 중 $i$ ($1 \le i \le N$)번째 줄에는 $T_i$와 $U_i$가 공백 하나를 사이로 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>$K$개의 줄에 선택한 카드들을 사용할 순서대로 입력 형식과 같은 방식으로 한 줄에 한 카드씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 3
1 1 1 1
A 1
A 1
A 2
A 2
','A 2
A 1
A 2
','MATH'),
                                                                                                                (3505,'BAEKJOON','https://www.acmicpc.net/problem/21864',21864,'이산로그가 장난이냐?','10초','512 MB',24,'<p>BOJ에서 <a href="https://www.acmicpc.net/problem/21094" target="_blank">어떤 문제</a>를 풀었던 Sait2000은 입력 범위를 늘려서 장난 아니고 이산로그를 구해야 하는 문제를 만들기로 했습니다.</p>

<p><em>M</em> = 10<sup>18</sup> + 31은 소수이고, <em>g</em> = 42는 <em>M</em>의 원시근입니다. 즉, <em>g</em><sup>1</sup> mod <em>M</em>, <em>g</em><sup>2</sup> mod <em>M</em> ... <em>g</em><sup><em>M</em> - 1</sup> mod <em>M</em>은 각각 서로 다른 [1; <em>M</em>) 범위의 정수입니다. <em>f</em>(<em>x</em>)를 <em>g</em><sup><em>p</em></sup> mod <em>M</em> = <em>x</em>를 만족하는 최소의 양의 정수 <em>p</em>로 정의합니다. 그러면 <em>f</em>는 [1; <em>M</em>)에서 [1; <em>M</em>)으로 가는 전단사함수(일대일 대응)입니다.</p>

<p>수열 {<em>a</em><sub><em>n</em></sub>}을 다음과 같이 정의합니다.</p>

<ul>
	<li><em>a</em><sub>0</sub> = 960002411612632915</li>
	<li><em>a</em><sub><em>i</em> + 1</sub> = <em>f</em>(<em>a</em><sub><em>i</em></sub>)</li>
</ul>

<p><em>n</em>이 주어졌을 때, <em>a</em><sub><em>n</em></sub>을 찾아봅시다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫번째 줄에 정수 <em>n</em>이 주어집니다. (0 ≤ <em>n</em> ≤ 2 × 10<sup>6</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p><em>a</em><sub><em>n</em></sub>을 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','0
','960002411612632915
','MATH'),
                                                                                                                (3506,'BAEKJOON','https://www.acmicpc.net/problem/21868',21868,'미적분학 입문하기','0.5초(추가시간없음)','1024 MB',9,'<blockquote>
<p><mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;">?<mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mstyle><mjx-munder><mjx-row><mjx-base style="padding-left: 0.218em;"><mjx-mo class="mjx-n"><mjx-c class="mjx-c6C"></mjx-c><mjx-c class="mjx-c69"></mjx-c><mjx-c class="mjx-c6D"></mjx-c></mjx-mo></mjx-base></mjx-row><mjx-row><mjx-under style="padding-top: 0.239em;"><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2192"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c30"></mjx-c></mjx-mn></mjx-script></mjx-msub></mjx-texatom></mjx-under></mjx-row></mjx-munder><mjx-mi class="mjx-i" space="2"><mjx-c class="mjx-c1D453 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="4"><mjx-c class="mjx-c1D43F TEX-I"></mjx-c></mjx-mi></mjx-mstyle></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mstyle displaystyle="true" scriptlevel="0"><munder><mo data-mjx-texclass="OP" movablelimits="true">lim</mo><mrow data-mjx-texclass="ORD"><mi>x</mi><mo accent="false" stretchy="false">→</mo><msub><mi>x</mi><mn>0</mn></msub></mrow></munder><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>L</mi></mstyle></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$\displaystyle \lim_{x \to x_0} f(x) = L$</span></mjx-container> : For a given <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D716 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3E"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="4"><mjx-c class="mjx-c30"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>?</mi><mo>></mo><mn>0</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$\epsilon > 0$</span></mjx-container>, there exists a <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D6FF TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3E"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="4"><mjx-c class="mjx-c30"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>δ</mi><mo>></mo><mn>0</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$\delta > 0$</span></mjx-container> such that <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mn class="mjx-n"><mjx-c class="mjx-c30"></mjx-c></mjx-mn><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3C"></mjx-c></mjx-mo><mjx-mrow space="4"><mjx-mo class="mjx-n"><mjx-c class="mjx-c7C"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-msub space="3"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c30"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c7C"></mjx-c></mjx-mo></mjx-mrow><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3C"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="4"><mjx-c class="mjx-c1D6FF TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>0</mn><mo><</mo><mrow data-mjx-texclass="INNER"><mo data-mjx-texclass="OPEN">|</mo><mi>x</mi><mo>?</mo><msub><mi>x</mi><mn>0</mn></msub><mo data-mjx-texclass="CLOSE">|</mo></mrow><mo><</mo><mi>δ</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$0 < \left| x- x_0&nbsp;\right| < \delta$</span></mjx-container>, then <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mrow><mjx-mo class="mjx-n"><mjx-c class="mjx-c7C"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D453 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="3"><mjx-c class="mjx-c1D43F TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c7C"></mjx-c></mjx-mo></mjx-mrow><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3C"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="4"><mjx-c class="mjx-c1D716 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mrow data-mjx-texclass="INNER"><mo data-mjx-texclass="OPEN">|</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>?</mo><mi>L</mi><mo data-mjx-texclass="CLOSE">|</mo></mrow><mo><</mo><mi>?</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$\left| f(x) - L \right| < \epsilon$</span>?</mjx-container></p>
</blockquote>

<p>이공계 대학생들은 대학교에&nbsp;입학하면 반드시 입실론-델타 논법을&nbsp;배운다. 위의 식은 입실론-델타 논법을 이용한 극한의 정의다.</p>

<p>21학번 신입생들이 수강하고 있는&nbsp;연세대학교 공학수학 I의&nbsp;2차 퀴즈가 저번 주에 있었다. 국렬이는 연세대학교 신입생들에게&nbsp;극한의 정의에 관한&nbsp;내용을 되새겨주기 위해서 이 문제를 출제했다.</p>

<p>문제는 간단하다. 양수 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D716 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>?</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$\epsilon$</span></mjx-container>과 정수 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c30"></mjx-c></mjx-mn></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>x</mi><mn>0</mn></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$x_0$</span></mjx-container>, 그리고 일차 이하의 다항함수 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D453 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$f(x)$</span></mjx-container>가 주어졌을 때, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mstyle><mjx-munder><mjx-row><mjx-base style="padding-left: 0.218em;"><mjx-mo class="mjx-n"><mjx-c class="mjx-c6C"></mjx-c><mjx-c class="mjx-c69"></mjx-c><mjx-c class="mjx-c6D"></mjx-c></mjx-mo></mjx-base></mjx-row><mjx-row><mjx-under style="padding-top: 0.239em;"><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2192"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c30"></mjx-c></mjx-mn></mjx-script></mjx-msub></mjx-texatom></mjx-under></mjx-row></mjx-munder><mjx-mi class="mjx-i" space="2"><mjx-c class="mjx-c1D453 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo></mjx-mstyle></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mstyle displaystyle="true" scriptlevel="0"><munder><mo data-mjx-texclass="OP" movablelimits="true">lim</mo><mrow data-mjx-texclass="ORD"><mi>x</mi><mo accent="false" stretchy="false">→</mo><msub><mi>x</mi><mn>0</mn></msub></mrow></munder><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mstyle></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$\displaystyle \lim_{x \to x_0} f(x)$</span></mjx-container>의 값인 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D43F TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>L</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$L$</span></mjx-container>을&nbsp;찾고, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mrow><mjx-mo class="mjx-n"><mjx-c class="mjx-c7C"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D453 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="3"><mjx-c class="mjx-c1D43F TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c7C"></mjx-c></mjx-mo></mjx-mrow><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3C"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="4"><mjx-c class="mjx-c1D716 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mrow data-mjx-texclass="INNER"><mo data-mjx-texclass="OPEN">|</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>?</mo><mi>L</mi><mo data-mjx-texclass="CLOSE">|</mo></mrow><mo><</mo><mi>?</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$\left| f(x) - L \right| < \epsilon$</span></mjx-container>을&nbsp;만족하는 양수 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D6FF TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>δ</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$\delta$</span></mjx-container>의 최댓값을&nbsp;구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 양수 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D716 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>?</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$\epsilon$</span></mjx-container>을 분수로 표현했을 때의&nbsp;분자와 분모가&nbsp;공백으로 구분되어 주어진다. 각 분자와 분모는 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>1</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$1$</span></mjx-container> 이상 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c><mjx-c class="mjx-c30"></mjx-c></mjx-mn><mjx-mstyle><mjx-mspace style="width: 0.167em;"></mjx-mspace></mjx-mstyle><mjx-mn class="mjx-n"><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c30"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>10</mn><mstyle scriptlevel="0"><mspace width="0.167em"></mspace></mstyle><mn>000</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$10\,000$</span></mjx-container> 이하의 자연수다.</p>

<p>두 번째 줄에는 일차 이하의 다항함수 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D453 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$f(x)$</span></mjx-container>의 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>x</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$x$</span></mjx-container>의 계수와 상수가&nbsp;공백으로 구분되어 주어진다.&nbsp;<mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>x</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$x$</span></mjx-container>의 계수와 상수는 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mo class="mjx-n"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c><mjx-c class="mjx-c30"></mjx-c></mjx-mn><mjx-mstyle><mjx-mspace style="width: 0.167em;"></mjx-mspace></mjx-mstyle><mjx-mn class="mjx-n"><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c30"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>?</mo><mn>10</mn><mstyle scriptlevel="0"><mspace width="0.167em"></mspace></mstyle><mn>000</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$-10\,000$</span></mjx-container> 이상 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c><mjx-c class="mjx-c30"></mjx-c></mjx-mn><mjx-mstyle><mjx-mspace style="width: 0.167em;"></mjx-mspace></mjx-mstyle><mjx-mn class="mjx-n"><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c30"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>10</mn><mstyle scriptlevel="0"><mspace width="0.167em"></mspace></mstyle><mn>000</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$10\,000$</span></mjx-container> 이하의 정수다.</p>

<p>마지막 줄에는 정수 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c30"></mjx-c></mjx-mn></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>x</mi><mn>0</mn></msub></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$x_0$</span></mjx-container>이 주어진다. (<mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mo class="mjx-n"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c><mjx-c class="mjx-c30"></mjx-c></mjx-mn><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="2"><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c30"></mjx-c></mjx-mn><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c2264"></mjx-c></mjx-mo><mjx-msub space="4"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c30"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c2264"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="4"><mjx-c class="mjx-c31"></mjx-c><mjx-c class="mjx-c30"></mjx-c></mjx-mn><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="2"><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c30"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>?</mo><mn>10</mn><mo>,</mo><mn>000</mn><mo>≤</mo><msub><mi>x</mi><mn>0</mn></msub><mo>≤</mo><mn>10</mn><mo>,</mo><mn>000</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$-10,000 \le x_0 \le 10,000$</span></mjx-container>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 극한값&nbsp;<mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D43F TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>L</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$L$</span></mjx-container>을 출력한다.</p>

<p>두 번째 줄에&nbsp;양수 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D6FF TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>δ</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$\delta$</span></mjx-container>의 최댓값을 분수로 표현했을 때의&nbsp;분자와 분모를 공백으로 구분해서 출력한다. 해당 분수가 기약분수일 필요는 없으나, 분자와 분모는 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msup><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c><mjx-c class="mjx-c30"></mjx-c></mjx-mn><mjx-script style="vertical-align: 0.393em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c38"></mjx-c></mjx-mn></mjx-script></mjx-msup></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mn>10</mn><mn>8</mn></msup></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$10^8$</span></mjx-container> 이하의 자연수여야 한다. 만약에&nbsp;양수 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D6FF TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>δ</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$\delta$</span></mjx-container>의 최댓값이 존재하지 않거나 최댓값을 분수로 표현했을 때의 분자, 분모를&nbsp;<mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-msup><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c><mjx-c class="mjx-c30"></mjx-c></mjx-mn><mjx-script style="vertical-align: 0.393em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c38"></mjx-c></mjx-mn></mjx-script></mjx-msup></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mn>10</mn><mn>8</mn></msup></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$10^8$</span></mjx-container> 이하의 자연수로 표현할 수 없다면&nbsp;<span style="color:#e74c3c;"><code>0 0</code></span>을 출력한다.</p>

<p>답이 여러 가지 존재하는 경우, 그 중 하나만 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1
1 1
1
','2
1 1
','MATH'),
                                                                                                                (3507,'BAEKJOON','https://www.acmicpc.net/problem/21870',21870,'시철이가 사랑한 GCD','1초(추가시간없음)','1024 MB',11,'<blockquote>
<p><em><strong>Q1.</strong> 사막에서 바늘을 찾는&nbsp;방법은?</em></p>

<p><em><strong>A1.</strong> 대학원생을 시킨다.</em></p>

<p><em><strong>Q2.</strong>&nbsp;신촌에서 자취방을 구하는&nbsp;방법은?</em></p>

<p><em><strong>A2.</strong> 대학원생을 시킨다.</em></p>
</blockquote>

<p>연희동 최고의 대학원생 시철이는 오늘도 바쁘다. 그런 시철이도 이번 주말만큼은 꼭 해야 하는 일이 있었는데, 바로 자취방을 구하는&nbsp;일이다!</p>

<p>시철이는 신촌에서 가장 아름다운 자취방을 구하고 싶다. 하지만 시철이는 매우 바빴기 때문에 직접&nbsp;방을 찾아다닐&nbsp;수 없었다. 그래서 시철이는 인터넷에서 본&nbsp;매물번호와 $GCD$(Greatest Common Divisor, 최대공약수)를 이용해 자취방의 아름다움을 예측하려&nbsp;했다. 아름다움을 측정하는 자세한 방법은 다음과 같다.</p>

<ol>
	<li>매물번호를 나타내는&nbsp;정수 배열 $S$가 있다. ($|S| = N$, $|S|$는 $S$의 원소의 개수)</li>
	<li>배열 $S$의 원소를&nbsp;왼쪽부터 $\lfloor \frac{|S|}{2} \rfloor$개 선택하거나, 오른쪽부터 $\lceil \frac{|S|}{2} \rceil$개 선택한다. 만약&nbsp;$S$의&nbsp;원소가 단 한 개라면 그 원소를&nbsp;선택한다.</li>
	<li>선택한 원소들의 $GCD$를 구한다.</li>
	<li>선택하지 않은 원소의 배열 $S$을&nbsp;다시 $2$번부터 반복한다.&nbsp;</li>
	<li>이때, 자취방의 아름다움은 $3$번에서 구한 $GCD$의 합의 최댓값으로 정의한다.</li>
</ol>

<p>교수님의 과제로 쉴 날 없는 시철이는, 그나마 더 나은 삶을 위해 자취방을 빨리 구하려고 한다. 매물번호를 이용해 자취방의 아름다움을 계산해보자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 $N$이 주어진다. ($1 \leq N \leq 200\,000$)</p>

<p>둘째 줄에 자취방의 매물번호를 의미하는 정수 $a_1, a_2, \cdots, a_N$이&nbsp;주어진다. ($1 \leq a_i&nbsp;\leq 200\,000$)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>자취방의 아름다움을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
4 4 4 4
','12
','MATH'),
                                                                                                                (3508,'BAEKJOON','https://www.acmicpc.net/problem/21871',21871,'화석 발굴 이벤트','0.5초(추가시간없음)','1024 MB',15,'<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/b018cbaa-dba0-4175-9747-1e2cebd044fb/-/preview/" style="width: 341.667px; height: 294.167px;"></p>

<p style="text-align: center;">[그림] <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="4"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>n</mi><mo>=</mo><mn>1</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$n=1$</span></mjx-container>,&nbsp;<mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D458 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="4"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>k</mi><mo>=</mo><mn>2</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$k=2$</span></mjx-container>인&nbsp;운동장 상태</p>

<p>국렬이는 연세대학교 신입생 프로그래밍 경진대회를 개최한 기념으로 공학관 근처&nbsp;운동장에서 화석 발굴&nbsp;이벤트를 진행하려고 했다. 화석 발굴 이벤트는 공학관 근처 운동장에&nbsp;묻힌 화석을&nbsp;찾는 이벤트이다. 그러나 공학관 내의&nbsp;실험으로 인해&nbsp;운동장의 일부가 인체에 매우 위험한 물질로&nbsp;오염되었다.</p>

<p>이로 인해 국렬이는 화석 발굴 이벤트의 일정을&nbsp;미루고,&nbsp;오염되지 않은 운동장의 흙을 다른 곳으로 퍼가서 이벤트를 진행하려고 한다. 국렬이는 외부 업체에게 이를 맡길 계획이기 때문에 흙을 옮기는 비용을 미리 알아야 했고, 이를 계산하기 위해서는&nbsp;오염되지 않은 흙이 있는&nbsp;칸 수를 알아야 했다.</p>

<p>운동장은 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mo class="mjx-n"><mjx-c class="mjx-c5B"></mjx-c></mjx-mo><mjx-mo class="mjx-n"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="2"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c5D"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-cD7"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c5B"></mjx-c></mjx-mo><mjx-mo class="mjx-n"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="2"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c5D"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo stretchy="false">[</mo><mo>?</mo><mi>n</mi><mo>,</mo><mi>n</mi><mo stretchy="false">]</mo><mo>×</mo><mo stretchy="false">[</mo><mo>?</mo><mi>n</mi><mo>,</mo><mi>n</mi><mo stretchy="false">]</mo></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$[-n,n] \times [-n,n]$</span></mjx-container>의 격자로 구성되어 있으며, 맨 왼쪽 아래 칸이 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mo class="mjx-n"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="2"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo stretchy="false">(</mo><mo>?</mo><mi>n</mi><mo>,</mo><mo>?</mo><mi>n</mi><mo stretchy="false">)</mo></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$(-n,-n)$</span></mjx-container>, 맨 오른쪽 위&nbsp;칸이 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="2"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo stretchy="false">(</mo><mi>n</mi><mo>,</mo><mi>n</mi><mo stretchy="false">)</mo></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$(n,n)$</span></mjx-container>이다. 만약 어떤 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>x</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$x$</span></mjx-container>, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D466 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>y</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$y$</span></mjx-container>가&nbsp;<mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mo class="mjx-n"><mjx-c class="mjx-c6D"></mjx-c><mjx-c class="mjx-c61"></mjx-c><mjx-c class="mjx-c78"></mjx-c></mjx-mo><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mrow><mjx-mo class="mjx-n"><mjx-c class="mjx-c7C"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c7C"></mjx-c></mjx-mo></mjx-mrow><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mrow space="2"><mjx-mo class="mjx-n"><mjx-c class="mjx-c7C"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D466 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c7C"></mjx-c></mjx-mo></mjx-mrow><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c2260"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c6D"></mjx-c><mjx-c class="mjx-c61"></mjx-c><mjx-c class="mjx-c78"></mjx-c></mjx-mo><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mrow><mjx-mo class="mjx-n"><mjx-c class="mjx-c7C"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c7C"></mjx-c></mjx-mo></mjx-mrow><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mrow space="2"><mjx-mo class="mjx-n"><mjx-c class="mjx-c7C"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D466 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="3"><mjx-c class="mjx-c1D458 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c7C"></mjx-c></mjx-mo></mjx-mrow><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo data-mjx-texclass="OP" movablelimits="true">max</mo><mo stretchy="false">(</mo><mrow data-mjx-texclass="INNER"><mo data-mjx-texclass="OPEN">|</mo><mi>x</mi><mo data-mjx-texclass="CLOSE">|</mo></mrow><mo>,</mo><mrow data-mjx-texclass="INNER"><mo data-mjx-texclass="OPEN">|</mo><mi>y</mi><mo data-mjx-texclass="CLOSE">|</mo></mrow><mo stretchy="false">)</mo><mo>≠</mo><mo data-mjx-texclass="OP" movablelimits="true">max</mo><mo stretchy="false">(</mo><mrow data-mjx-texclass="INNER"><mo data-mjx-texclass="OPEN">|</mo><mi>x</mi><mo data-mjx-texclass="CLOSE">|</mo></mrow><mo>,</mo><mrow data-mjx-texclass="INNER"><mo data-mjx-texclass="OPEN">|</mo><mi>y</mi><mo>?</mo><mi>k</mi><mo data-mjx-texclass="CLOSE">|</mo></mrow><mo stretchy="false">)</mo></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$\max(\left| x \right|, \left| y&nbsp;\right|) \ne \max(\left| x \right|, \left| y-k&nbsp;\right|)$</span></mjx-container>를&nbsp;만족한다면&nbsp;<mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="2"><mjx-c class="mjx-c1D466 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo stretchy="false">(</mo><mi>x</mi><mo>,</mo><mi>y</mi><mo stretchy="false">)</mo></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$(x,y)$</span></mjx-container>에 있는 흙은 오염되지 않은 깨끗한 흙이고,&nbsp;그렇지 않으면 오염된 흙이다. 예를 들어, [그림]과 같이 운동장의 상태가 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="4"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>n</mi><mo>=</mo><mn>1</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$n=1$</span></mjx-container>, <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D458 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="4"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>k</mi><mo>=</mo><mn>2</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$k=2$</span></mjx-container>로&nbsp;주어진다면, 오염되지 않은 흙이&nbsp;있는 칸 수는 총&nbsp;6칸이다.</p>

<p><mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;">?<mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>n</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$n$</span></mjx-container>과 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D458 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>k</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$k$</span></mjx-container>가 주어질 때, 오염되지 않은 흙이 있는&nbsp;칸 수를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>n</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$n$</span></mjx-container>과 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D458 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>k</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$k$</span></mjx-container>가 주어진다. (<mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c></mjx-mn><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c2264"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="4"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="2"><mjx-c class="mjx-c1D458 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c2264"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="4"><mjx-c class="mjx-c31"></mjx-c></mjx-mn><mjx-mstyle><mjx-mspace style="width: 0.167em;"></mjx-mspace></mjx-mstyle><mjx-mn class="mjx-n"><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c30"></mjx-c></mjx-mn><mjx-mstyle><mjx-mspace style="width: 0.167em;"></mjx-mspace></mjx-mstyle><mjx-mn class="mjx-n"><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c30"></mjx-c></mjx-mn><mjx-mstyle><mjx-mspace style="width: 0.167em;"></mjx-mspace></mjx-mstyle><mjx-mn class="mjx-n"><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c30"></mjx-c><mjx-c class="mjx-c30"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>1</mn><mo>≤</mo><mi>n</mi><mo>,</mo><mi>k</mi><mo>≤</mo><mn>1</mn><mstyle scriptlevel="0"><mspace width="0.167em"></mspace></mstyle><mn>000</mn><mstyle scriptlevel="0"><mspace width="0.167em"></mspace></mstyle><mn>000</mn><mstyle scriptlevel="0"><mspace width="0.167em"></mspace></mstyle><mn>000</mn></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$1 \le n, k \le 1 \, 000 \, 000 \, 000$</span></mjx-container>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>오염되지 않은 흙이 있는&nbsp;칸 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 1
','5
','MATH'),
                                                                                                                (3509,'BAEKJOON','https://www.acmicpc.net/problem/21919',21919,'소수 최소 공배수','1초','512 MB',8,'<p>행복이는 길이가 $N$인 수열 $A$에서 소수들을 골라 최소공배수를 구해보려고 한다.</p>

<p>행복이를 도와 이를 계산해주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 수열 $A$의 길이 $N$이 주어진다. $(1 \le N \le 10,000)$</p>

<p>그 다음줄에는 수열 $A$의 원소 $A_{i}$가 공백으로 구분되어 주어진다. $(2 \le A_{i} \le 1,000,000)$</p>

<p>답이&nbsp;2<sup>63&nbsp;</sup>미만인 입력만 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 소수들의 최소공배수를 출력한다.</p>

<p>만약 소수가 없는 경우는 -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
2 3 5 6 8
','30
','MATH'),
                                                                                                                (3510,'BAEKJOON','https://www.acmicpc.net/problem/21920',21920,'서로소 평균','1초','512 MB',7,'<p>효성이는 길이가 $N$인 수열&nbsp;$A$에서 $X$와 서로소인 수들을 골라 평균을 구해보려고 한다.</p>

<p>효성이를 도와 이를 계산해주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 입력될 수들의 개수 $N$이 주어진다. $(2 \le N \le 500,000)$</p>

<p>두 번째 줄에는 수열 $A$를 이루는 자연수 $A_{i}$ 가 공백으로 구분되어 주어진다. $(2 \le A_{i}&nbsp;\le&nbsp;1,000,000)$</p>

<p>수열 $A$에 $X$와 서로소인 수가 최소 1개 이상 존재한다.</p>

<p>마지막 줄에는 $X$가 주어진다. $(2\le&nbsp;X \le&nbsp;1,000,000)$</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 수열 A에서 X와 서로소인 수들의 평균을 출력한다.</p>

<p>절대/상대 오차는 10<sup>-6</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
4 2 8 5 7
4
','6
','MATH'),
                                                                                                                (3511,'BAEKJOON','https://www.acmicpc.net/problem/21968',21968,'선린의 터를','1초','512 MB',8,'<p style="text-align: center;"><em>드높은 남산 위에 우뚝 선</em></p>

<p style="text-align: center;"><em>(중략)</em></p>

<p style="text-align: center;"><em>세워라 반석 위에</em></p>

<p style="text-align: center;"><em><strong>선린의 터를</strong></em></p>

<p>1899년, 여러분들은 대한제국 고종 황제의 칙령을 받아 한국 최초의 실업교육기관인 <strong>관립상공학교</strong>를 세울 터를 선택해야 한다.</p>

<p>대한제국에서 학교를 지을만한 터는 여러 개 있는데, 각 터는 서로 다른 자연수를 번호로 갖고 있다. 특히, <em>선린의 터</em>의 번호는 $3^k$꼴의 자연수가 최대 한 번씩 더해진 자연수이다(단, $k \ge 0$). 즉, <em>선린의 터</em>의 번호는 $1(=3^0), 3(=3^1), 9(=3^2), 27(=3^3), 81(=3^4), 90(=3^2+3^4), 91(=3^0+3^2+3^4)$ 등이 있다.</p>

<p>여러분은 $N$번째로 작은 <em>선린의 터</em>를 탐색하라는 명령을 받았다. $N$번째 <em>선린의 터</em>를 구하는 프로그램을 작성하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 여러분들이 찾아야 하는 <em>선린의 터</em>의 개수 $T$가 주어진다.</p>

<p>두 번째 줄부터 $T$개의 줄에 여러분들이 찾아야 하는 <em>선린의 터</em>에 대한 정보 $N$이 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>여러분들이 찾아야 하는 <em>선린의 터</em>의 번호를 한 줄에 하나씩 차례대로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>입력으로 주어지는 수와 출력해야 하는 정답이 매우 크기 때문에 64비트 자료형(C/C++은 long long, Java는 long, %lld로 출력)을 사용해야 한다.</p>

				</div>
				</div>','3
1
2
123456789123
','1
3
217523656249693825
','MATH'),
                                                                                                                (3512,'BAEKJOON','https://www.acmicpc.net/problem/21980',21980,'비슷한 번호판','1초(하단참고)','512 MB',9,'<p>Albert가 다니는 회사의 주차장에 지금 자동차 n대 일렬로 (좌에서 우로) 주차되어있다. 편의상 차는 좌측부터 순서대로 1번에서 n번까지 번호로 나타내자. i번 차의 번호판에 적힌 문자열을 x[i]라 하자. n개의 문자열은 서로 다르며, 영어 대/소문자 (a-z와 A-Z)로만 구성된 길이 k인 문자열이다. 즉, 모든 번호판의 길이는 같다.</p>

<p>임의의 두 자동차 i, j 에 대하여 번호판 x[i] 와 x[j]가 아래 조건을 모두 만족하면 두 자동차는 비슷한 번호판을 가졌다고 한다:</p>

<ul>
	<li>26가지의 각 알파벳에 대하여, 대/소문자를 무시했을 때 해당 알파벳이 x[i]에 적힌 횟수와 x[j]에 적힌 횟수가 같다 (이 조건은 각 알파벳에 대해 만족해야 한다).</li>
	<li>x[i]에 적힌 대문자의 개수와 x[j]에 적힌 대문자의 개수가 같다.</li>
</ul>

<p>예를 들어, n = 4, k = 3 이고 x = ["AtY", "YtA", "aTy", "Ayt"]라 하자.</p>

<ul>
	<li>1번차와 2번차의 번호판은 비슷하다: 두 번호판 모두 A/a 1개, T/t 1개, Y/y 1개씩을 포함하고 대문자는 3글자 중 2글자이다.</li>
	<li>3번차와 4번차의 번호판은 비슷하다: 두 번호판 모두 A/a 1개, T/t 1개, Y/y 1개씩을 포함하고 대문자는 3글자 중 1글자이다.</li>
	<li>1번차와 3번차의 번호판은 비슷하지 않다: 1번차는 대문자 2개, 3번차는 대문자 1개를 포함한다 (단, 첫 번째 조건은 만족한다).</li>
</ul>

<p>입력으로 n, k 그리고 x[1], ..., x[n]이 주어졌을 때, 비슷한 번호판 쌍의 수를 구해서 Albert에게 알려주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 수 T가 주어진다.</p>

<p>각 테스트 케이스의 첫 줄에는 n과 k개 공백으로 구분되어 주어진다.</p>

<p>두 번째 줄에는 길이가 k인 문자열 n개가 공백으로 구분되어 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스의 정답을 각 줄에 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
4 3
AtY YtA aTy Ayt
4 4
AAaa AaAa aaAA AaaA
5 4
AAAA aaaa AAaa AAAa Aaaa
10 1
A a B b C c D d E e
2 10
ABCDEabcde abcdeEDCBA
','2
6
0
0
1
','MATH'),
                                                                                                                (3513,'BAEKJOON','https://www.acmicpc.net/problem/21981',21981,'고장난 시계','3초(하단참고)','512 MB',17,'<p>Albert는 n개의 전자 탁상&nbsp;시계를 가지고 있다 (편의상 1, 2, ..., n으로 번호가 붙어있다).</p>

<p>각 시계는 현재 시각을&nbsp;"HH:MM:SS"의 방식으로 시:분:초로 보여주는데 항상 0 ≤ HH < 24, 0 ≤ MM < 60, 0 ≤ SS < 60을 만족한다. 만약 HH, MM, SS 값이 10 미만인 경우 선행0을 표시하여 각 시계에는 언제나 6개의 숫자가 표시된다. 예를 들어, "00:00:01" 은 자정에서 1초가 지난 시각이고, "12:00:00"는 정오를 나타내며, "18:05:05"는 저녁 6시에서 5분 5초가 지난 시각을 나타낸다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/9249188d-4e1f-4be0-8c27-6154923f25ab/-/preview/" style="width: 350px; height: 35px;"></p>

<p>각 시계는 현재 가리키는 시각도 제각각이고, 고장난 것도 있어서 매초 1초가 아닌 다른 시간만큼 진행되기도 한다. 구체적으로, i번째 시계가 현재 가리키고 있는 시각을 T[i]라 하고 매초 이 시계는&nbsp;D[i]초 이후의 시각을 보여&nbsp;준다 하자 (즉, 1초마다&nbsp;D[i]초씩 증가한다).</p>

<p>예를 들어, n = 3이고 T = [ "11:12:00", "11:12:20", "11:12:40" ] 그리고 D = [4, 2, 0]이라 하자.</p>

<ul>
	<li>현재 각 시계는 다른 시각을 보여주고 있다.</li>
	<li>현재로부터 5초가 지난 후, 1번 시계는 "11:12:20", 2번 시계는 "11:12:30", 3번 시계는 "11:12:40"을 보여&nbsp;준다.</li>
	<li>현재로부터 10초가 지난 후, 세 시계는 모두 "11:12:40"을 보여 준다 (이 때 n개의 시계가 모두 "동기화" 되었다고 한다).</li>
	<li>현재로부터 43210초가 지난 후, 세 시계는 한 번 더 동기화 된다.</li>
</ul>

<p>이 예제의 경우, 24시간 동안 세 시계는 정확히 두 번 동기화 된다.</p>

<p>Albert는 n개의 탁상 시계가 현재 가리키는 시각과 각 시계가 매초 몇초씩 진행하는지 정보를 이용하여, 앞으로 24시간 (=86400초) 동안 n개의 시계가 정확히 몇 번 동기화 될지 계산해보고 싶다. (힌트 참고)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 수 T가 주어진다.</p>

<p>각 테스트 케이스는 세 줄에 나누어 주어진다.</p>

<p>테스트 케이스의 첫 줄에는 n이 주어진다.</p>

<p>둘째 줄에는 n개의 시계가 현재 보여주는 시각이 (T[i]) 공백으로 구분되어&nbsp;"HH:MM:SS" 형식의 문자열로 주어진다.</p>

<p>셋째 줄에는 n개의 시계가 매초 몇 초씩 진행하는지 (D[i]) 공백으로 구분되어 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스의 정답을 각&nbsp;줄에 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>이 문제는 임의의 24시간 (= 86400초) 동안 n개의 시계가 동기화 되는 회수를 세면 된다. 현재 시각을 "0초 후"라 보면 0초 후&nbsp;부터 86399초 후 까지 n개의 시계가 동기화 되는 회수를 세어도 되고 (예제 3, 4 참고) 혹은 1초 후 부터 86400초 후 까지 n개의 시계가 동기화 되는 회수를 세어도 된다. 마찬가지로 s초 후 부터 (s+86399)초 후 까지 n개의 시계가 동기화 되는 회수를 세어도 된다. 어떤 방법을 택하더라도 정답은 같다.</p>

				</div>
				</div>','6
3
11:12:00 11:12:20 11:12:40
4 2 0
2
00:00:00 23:59:59
1 1
2
00:00:00 00:00:00
90000 3600
2
11:00:00 11:00:00
1 -1
3
11:00:00 11:00:00 23:00:00
1 -1 0
3
15:19:59 16:07:49 15:44:54
966 392 667
','2
0
86400
2
1
1
','MATH'),
                                                                                                                (3514,'BAEKJOON','https://www.acmicpc.net/problem/22021',22021,'자동분무기','1초','512 MB',17,'<p>어떤 농장은 다음 그림과 같이 가로 세로 8×8의 단위 구역으로 나누어져 있다. 이 농장에는 많은 곡식을 생산하기 위하여 비료액 또는 제초제를 뿌리는 자동분무기가 단위 구역에 설치되어 있다. 이 자동분무기는 놓인 위치에서 상하좌우 4방향으로 액체를 뿌린다. 예를 들어 X 구역에 자동분무기가 놓여있다면 그 장치로 부터 액체가 뿌려지는 단위 구역은 {X,a, b,c,d,e,f,g,h,i,j,k,l,m,n}이다. 만일 Y 구역에 자동분무기가 놓여있다면 액체가 뿌려지는 단위 구역은 {Y,A,B,c,C,D,E,F,G,H, I,J,k,K,L}이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/e39eeb7a-fb67-4e84-bb30-4c5dfa9230e8/-/preview/" style="width: 296px; height: 282px;"></p>

<p>자동분무기를 설치하지 않았을 때에는 각 단위 구역의 생산량은 모두 정확하게 같고, 이를 기본 생산량이라고 하자. 자동분무기를 설치한 후, 비료액이 뿌려진 단위 구역은 생산량이 1씩 증가하고, 제초제가 뿌려진 단위 구역은 잡초와 해충은 제거되지만 생산량이 1씩 감소한다. 기본 생산량이 30이라고 하자. X 구역에 비료액 자동분무기를, 그리고 Y 구역에 제초제 자동분무기를 설치하면 최종 생산량은 다음과 같다. </p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/c4ee88bc-c002-4ade-a1d0-e2603b455538/-/preview/" style="width: 303px; height: 306px;"></p>

<p>단, 한 단위 구역에 배치될 수 있는 자동분무기는 최대 1대이다. 따라서 한 단위 구역에 제초제 자동분무기와 비료액 자동분무기가 동시에 배치되거나 같은 종류의 자동분무기가 2대 이상 설치될 수 없다. </p>

<p>기본 생산량이 M인 8×8 농장의 최종 생산량 자료가 주어졌을 때, 자동분무기가 놓인 위치와 종류를 찾아내는 프로그램을 작성하시오. </p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에는 기본 생산량 M (30 ≤ M ≤ 40)이 주어진다. 그 다음에는 전체 8×8 농장의 최종 생산량이 위에서 아래로 한 줄씩 총 8줄에 걸쳐서 주어진다. 같은 줄에 있는 8개의 단위 구역의 생산량은 빈칸을 사이에 두고 구분된다. 모든 값은 양의 정수이다. </p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>파일의 각 줄에는 입력에서 읽은 순서대로, 각 단위 구역마다 자동분무기의 유무와 종류 정보를 총 8줄에 출력한다. 비료액 자동분무기가 놓인 단위 구역은 ‘<code>+</code>’ 기호로, 제초제 자동분무기가 놓인 단위 구역은 ‘<code>-</code>’(마이너스) 기호로,  자동분무기가 없는 단위 구역은 ‘<code>.</code>’ 기호로 표현한다. 같은 줄에 있는 단위 구역 정보는 하나의 빈칸을 사이에 두고 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','30
30 30 31 30 29 30 30 30
30 30 31 30 29 30 30 30
29 29 30 29 29 29 29 29
30 30 31 30 29 30 30 30
30 30 31 30 29 30 30 30
31 31 31 31 30 31 31 31
30 30 31 30 29 30 30 30
30 30 31 30 29 30 30 30
','. . . . . . . .
. . . . . . . .
. . . . - . . .
. . . . . . . .
. . . . . . . .
. . + . . . . .
. . . . . . . .
. . . . . . . .
','MATH'),
                                                                                                                (3515,'BAEKJOON','https://www.acmicpc.net/problem/22222',22222,'지애 상수','22.222초','222 MB',29,'<p style="text-align: center;"><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/JqgGVtGRZpE" title="YouTube video player" width="560"></iframe></p>

<p>저명한 한국의 수학자 무민 유지애 선생은 시에르핀스키 삼각형에 대한 업적으로 잘 알려져 있다.&nbsp;시에르핀스키 삼각형은 다음과 같이 정삼각형을 계속 반씩 나눠가며 얻을 수 있는 도형이다. (설명 및 그림은&nbsp;<a href="https://ko.wikipedia.org/w/index.php?title=%EC%8B%9C%EC%97%90%EB%A5%B4%ED%95%80%EC%8A%A4%ED%82%A4_%EC%82%BC%EA%B0%81%ED%98%95&amp;oldid=29354267">Wikipedia</a>를 약간 수정)&nbsp;</p>

<p style="text-align: center;"><a href="https://commons.wikimedia.org/wiki/File:Sierpinsky_triangle_(evolution).png" title="시에르핀스키 삼각형"><img alt="시에르핀스키 삼각형" src="https://upload.acmicpc.net/f572a7e6-b1a4-4fda-8d50-b39f71cc9c97/-/preview/" style="width: 512px; height: 99px;"></a></p>

<ol>
	<li>변의 길이가 1인 정삼각형 하나에서 시작한다.</li>
	<li>각 정삼각형의 세 변의&nbsp;중점을&nbsp;이으면 원래의 정삼각형 안에 작은 정삼각형이 만들어진다. 이 작은 정삼각형을 제거해 각 정삼각형 당 3개의 더 작은 정삼각형을 만든다.</li>
</ol>

<p>2번 과정을 무한히 반복하면 모양이 위 그림처럼&nbsp;시에르핀스키 <a href="https://www.youtube.com/watch?v=soxoyx5zMkQ" style="text-decoration:none"><span style="color:#555;">삼각형</span></a>으로 수렴한다.</p>

<p>시에르핀스키 삼각형에서 점 두 개를 독립적으로&nbsp;균등하게 (independent, uniformly distributed) 잡자. 무민 유지애 선생은 두 점 사이의&nbsp;삼각형 내부 거리, 즉 두 점을 양 끝점으로 가지고&nbsp;시에르핀스키<span style="color:#555;"> </span><a href="https://www.youtube.com/watch?v=B-izrXbgfCI" style="text-decoration: none"><span style="color:#555;">삼각형</span></a><span style="color:#555;"> </span>안의 모든 구멍을 피하는&nbsp;삼각형&nbsp;내부 최단 경로의 길이의 기댓값이 466/885임을 발견해내었다. 그러나 이 결과는&nbsp;서양의 수학자에 의해&nbsp;먼저 <a href="https://zbmath.org/?q=an:01488860">알려져 있었기 때문에</a> 애석하게도 학계에 발표되지는 못했다.</p>

<p>이에 무민 유지애 선생은 지애 상수라는 값을 고안했다.&nbsp;<strong>지애 상수</strong>는&nbsp;시에르핀스키 삼각형에서 독립적으로&nbsp;균등하게 잡은 점 두 개의&nbsp;<em>평면에서의</em>&nbsp;거리의 기댓값이다. 정확하게는 다음과 같다.</p>

<p>좌표평면의 점 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D434 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mn class="mjx-n"><mjx-c class="mjx-c30"></mjx-c></mjx-mn><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="2"><mjx-c class="mjx-c30"></mjx-c></mjx-mn><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="2"><mjx-c class="mjx-c1D435 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c></mjx-mn><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mn class="mjx-n" space="2"><mjx-c class="mjx-c30"></mjx-c></mjx-mn><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="2"><mjx-c class="mjx-c1D436 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mfrac><mjx-frac><mjx-num><mjx-nstrut></mjx-nstrut><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-num><mjx-dbox><mjx-dtable><mjx-line></mjx-line><mjx-row><mjx-den><mjx-dstrut></mjx-dstrut><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-den></mjx-row></mjx-dtable></mjx-dbox></mjx-frac></mjx-mfrac><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mfrac space="2"><mjx-frac><mjx-num><mjx-nstrut></mjx-nstrut><mjx-msqrt size="s"><mjx-sqrt><mjx-surd><mjx-mo class="mjx-n"><mjx-c class="mjx-c221A"></mjx-c></mjx-mo></mjx-surd><mjx-box style="padding-top: 0.164em;"><mjx-mn class="mjx-n"><mjx-c class="mjx-c33"></mjx-c></mjx-mn></mjx-box></mjx-sqrt></mjx-msqrt></mjx-num><mjx-dbox><mjx-dtable><mjx-line></mjx-line><mjx-row><mjx-den><mjx-dstrut></mjx-dstrut><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-den></mjx-row></mjx-dtable></mjx-dbox></mjx-frac></mjx-mfrac><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>A</mi><mo stretchy="false">(</mo><mn>0</mn><mo>,</mo><mn>0</mn><mo stretchy="false">)</mo><mo>,</mo><mi>B</mi><mo stretchy="false">(</mo><mn>1</mn><mo>,</mo><mn>0</mn><mo stretchy="false">)</mo><mo>,</mo><mi>C</mi><mo stretchy="false">(</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>,</mo><mfrac><msqrt><mn>3</mn></msqrt><mn>2</mn></mfrac><mo stretchy="false">)</mo></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$A(0,0), B(1,0), C(\frac{1}{2},\frac{\sqrt{3}}{2})$</span></mjx-container>로 정의된 정삼각형 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D434 TEX-I"></mjx-c></mjx-mi><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D435 TEX-I"></mjx-c></mjx-mi><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D436 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>A</mi><mi>B</mi><mi>C</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$ABC$</span></mjx-container>에서 시작하여 만든 시에르핀스키 삼각형에서 임의의 두 점 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D443 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-msub space="2"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D466 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="2"><mjx-c class="mjx-c1D444 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-msub space="2"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D466 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>P</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>,</mo><mi>Q</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo>,</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">)</mo></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$P(x_1, y_1), Q(x_2, y_2)$</span></mjx-container>를 선택한다. 이 때 지애 상수는 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D443 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>P</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$P$</span></mjx-container>와 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D444 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>Q</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$Q$</span></mjx-container>를 연결한 선분의 길이 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D443 TEX-I"></mjx-c></mjx-mi><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D444 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-msqrt space="4"><mjx-sqrt><mjx-surd><mjx-mo class="mjx-sop"><mjx-c class="mjx-c221A TEX-S1"></mjx-c></mjx-mo></mjx-surd><mjx-box style="padding-top: 0.103em;"><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-msub space="3"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-msup><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-script style="vertical-align: 0.289em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msup><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c2B"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D466 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-msub space="3"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D466 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: -0.15em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msub><mjx-msup><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-script style="vertical-align: 0.289em;"><mjx-mn class="mjx-n" size="s"><mjx-c class="mjx-c32"></mjx-c></mjx-mn></mjx-script></mjx-msup></mjx-box></mjx-sqrt></mjx-msqrt></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>P</mi><mi>Q</mi><mo>=</mo><msqrt><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>?</mo><msub><mi>x</mi><mn>2</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mn>1</mn></msub><mo>?</mo><msub><mi>y</mi><mn>2</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></msqrt></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$PQ=\sqrt{(x_1-x_2)^2+(y_1-y_2)^2}$</span></mjx-container>의 기댓값이다.</p>

<p>무민 유지애 선생은 지애 상수를 아주 정밀한 자릿수까지 빠르게&nbsp;계산하는 놀라운 방법을 찾았지만,<span style="color:#555;"> </span><a href="https://www.youtube.com/watch?v=0AyZlaG2s-s" style="text-decoration:none"><span style="color:#555;">다양한</span></a><span style="color:#555;"> </span><a href="https://www.youtube.com/channel/UC0b-mnb0a4bFM25dbeKMuLA" style="text-decoration:none"><span style="color:#555;">활동</span></a><span style="color:#555;"> </span>때문에&nbsp;바빠 아직 이를 구현하지&nbsp;못했다. 그녀를 도와 지애 상수를 소수점 아래&nbsp;222자리까지 계산해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>지애 상수를 <strong>반올림하여</strong>&nbsp;소수점 아래&nbsp;222자리까지 출력하라. 형식은 "0.xxxxxx"의 형태로, 소수점 뒤에 올 자릿수(xxxxxx)의 개수가 정확히 222개가 되어야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>시에르핀스키 삼각형에서 한 점을 균등하게 고르는 방법은 다음과 같이 엄밀하게 정의할&nbsp;수 있다. 먼저 시에르핀스키 삼각형을 만드는 최초의 변의 길이가 1인 정삼각형 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D447 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>T</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$T$</span></mjx-container>에서 시작한다. 본문에서 설명한 2번째 단계를 거치면 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D447 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>T</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$T$</span></mjx-container>에서 3개의 작은 정삼각형들이 나온다. 그중 하나를 균등한 확률(1/3)로 골라 새로운 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D447 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>T</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$T$</span></mjx-container>로 정의하자. 이 과정을 반복하면 삼각형 <mjx-container class="MathJax" jax="CHTML" style="font-size: 109%; position: relative;"><mjx-math class="MJX-TEX" aria-hidden="true"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D447 TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>T</mi></math></mjx-assistive-mml><span aria-hidden="true" class="no-mathjax mjx-copytext">$T$</span></mjx-container>는 크기가 반씩 줄어들면서 어느 점 하나로 수렴한다. 이 점을&nbsp;시에르핀스키 삼각형에서 균등하게 고른 한 점으로 한다.</p>

				</div>
				</div>','','0.4227021810348385578571
','MATH'),
                                                                                                                (3516,'BAEKJOON','https://www.acmicpc.net/problem/22236',22236,'가희와 비행기','1초','512 MB',12,'<p>가희는 김포 공항에서 김해 공항까지 비행기를 타고 가려고 합니다.</p>

<p>비행기가&nbsp;수평 방향으로 1만큼 이동하였을 때,<strong>&nbsp;비행기의 고도는 1만큼 변화합니다. (상승 또는 하강)</strong></p>

<p>비행기가 상승하거나 하강할 때에는 <strong>이동한 수평 거리 당, 고도 변화량이&nbsp;동일</strong>합니다. 그림 1은 이 조건을 만족하지만, 그림 2는 그렇지 않습니다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/1a30e9c0-21aa-4c1e-b046-8aafd51282be/-/preview/">&nbsp; &nbsp;&nbsp;<img alt="" src="https://upload.acmicpc.net/48501960-e0d5-4c9e-82ce-7cbc3b10cf2e/-/preview/"></p>

<p style="text-align: center;"><strong>[그림 1] 비행기가 상승할 때와 하강할 때</strong></p>

<p style="text-align: center;">&nbsp;</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/6b967991-2d5d-4f7c-b64e-575cb987bbc7/-/preview/"></p>

<p style="text-align: center;"><strong>[그림 2] 문제의 조건을 만족하지 않는 비행 경로&nbsp;</strong></p>

<p>김포 공항에서 김해 공항까지 수평 거리는 <em>d</em>입니다. 아래 조건을 만족하는 비행기가 비행할 수 있는 가짓수를 구해 주세요.</p>

<p>&nbsp;</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/d898742f-6e1e-4e1e-90bf-8bf44720cfb4/-/preview/"><br>
<strong>[그림 3] 김포공항에서 김해공항 방항으로 날아가는 비행기</strong></p>

<ul>
	<li>김포 공항에서 이륙하면 김해 공항에 착륙할 때 까지 <strong>다른 어떠한 지점에도 착륙하지 않습니다. 고도가 0이 되었을 때, 착륙하였다고 합니다.</strong></li>
	<li>비행기는 수평 거리 <em>d</em>만큼 이동합니다. &nbsp;수평거리 <em>d</em>만큼 이동했을 때 고도가 0인 지점에 김해 공항이 있습니다.</li>
	<li>비행기는 이륙할 때부터 착륙할 때 까지 비행 방향을 바꾸지 않습니다. 즉, 김포 공항에서부터 김해 공항까지 일직선으로 날아갑니다.</li>
	<li>비행기는 지구를 한 바퀴 이상 돌지 않으며, 김해 공항이 있는 방향 반대편(북서쪽)으로 비행하지 않습니다.</li>
	<li>김포 공항과 김해 공항의 고도는 0이며, <strong>비행기가 날아가는 경로 상에는 장애물이&nbsp;존재하지 않습니다.</strong></li>
</ul>

<p>&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 <em>d</em>와 <em>m</em>이 주어집니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>문제에 대한 답을 <em>m</em>으로 나눈 나머지를 출력해 주세요.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 1000000007
','1
','MATH'),
                                                                                                                (3517,'BAEKJOON','https://www.acmicpc.net/problem/22238',22238,'가희와 btd5','2.5초','512 MB',11,'<p>btd5에는 Darting Gun Tower가 있습니다. Darting Gun Tower는 아래의 알고리즘으로 풍선을 공격합니다.</p>

<ul>
	<li>공격하고자 하는 목표물의 방향으로 공격 방향을 바꿉니다.</li>
	<li>공격 방향에 있는 풍선들의 체력을 <i>d</i>씩 낮춥니다.</li>
</ul>

<p><strong>Darting Gun Tower</strong>는&nbsp;좌표 (0, 0)에 하나 있습니다.<br>
Darting Gun Tower가 공격을 하게 되면, <strong>공격하는 방향에 놓인 모든 풍선들은&nbsp;동일한 수치의 피해</strong>를 입히게 됩니다.<br>
초기에 풍선은 <em>N</em>개 있고, Darting Gun Tower는 공격을 <em>M</em>번 하였습니다. 공격을 끝낼 때 마다, 남은 풍선의 수를 세어 주세요.<br>
초기 상태에 Darting Gun Tower가 특정 방향으로 데미지가 10<sup>9</sup>&nbsp;이상의 공격을 했을 때, <strong>모든 풍선을 제거할 수 있는 방법이 존재합니다.</strong></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 <em>N</em>, <em>M</em>이 주어집니다.</p>

<p>2번째 줄부터 <em>N</em>+1번째 줄까지 풍선이 있는 <em>x</em>좌표, <em>y</em>좌표, 체력이 주어집니다.</p>

<p><em>N</em>+2번째 줄부터 <em>N</em>+<em>M</em>+1번째 줄까지 Darting Gun Tower의 공격 방향 (<em>x</em>, <em>y</em>)와, Darting Gun Tower가 준 데미지 <em>d</em>가 주어집니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p><em>x</em>번째 줄에 <em>x</em>번째 공격이 끝났을 때 남은 풍선의 개수를 출력해 주세요.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 1
1 1 3
3 3 4
2 2 2
1 1 3
','1
','MATH'),
                                                                                                                (3518,'BAEKJOON','https://www.acmicpc.net/problem/22289',22289,'큰 수 곱셈 (3)','1초','512 MB',20,'<p>두 정수 A와 B가 주어졌을 때, 두 수의 곱을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 A와 B가 주어진다. 두 정수는 0보다 크거나 같은 정수이며, 0을 제외한 정수는 0으로 시작하지 않으며, 수의 앞에 불필요한 0이 있는 경우도 없다. 또한, 수의 길이는 1,000,000자리를 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>두 수의 곱을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 2
','2
','MATH'),
                                                                                                                (3519,'BAEKJOON','https://www.acmicpc.net/problem/22341',22341,'사각형 면적','1초(추가시간없음)','1024 MB',4,'<p>가로, 세로 길이가 모두 N인 커다란 종이가 주어져 있다. 좌표 (X, Y)는 종이의 가장 왼쪽 위 점을 (0, 0) 으로 하고, (0, 0)에서 세로로 거리 X, 가로로 거리 Y 를 이동한 점을 의미한다. 따라서, 종이의 가장 오른쪽 아래 점의 좌표는 (N, N)이 된다.</p>

<p>C개의 점이 주어진다. 점들의 좌표는 모두 양의 정수이고, 순서대로 1부터 C까지 번호가 매겨진다. 두 개 이상의 점이 같은 좌표를 가질 수도 있다.</p>

<p>번호 순서대로 점들에 대해서 다음과 같은 일을 한다. 현재 종이의 세로 길이가 A, 가로 길이가 B이고, 이번 순서의 점이 (X, Y )라고 하자. 처음 시작할 때는 A와 B 모두 N과 같다.</p>

<ul>
	<li>만약 점이 종이의 경계나 밖에 있다면, 즉 X ≥ A이거나, Y ≥ B라면 이 점은 무시된다.</li>
	<li>만약 점이 종이 안에 있다면, 이 점을 지나는 가로 방향 직선으로 종이를 자르는 것과, 세로 방향 직 선으로 종이를 자르는 것 중 하나를 수행해야 한다. 종이를 가로로 자를 때는 위쪽을 남기고 아래쪽을 버리고, 세로로 자를 때는 왼쪽을 남기고 오른쪽을 버린다. 두 경우 중에서 남은 직사각형의 면적이 넓은 쪽을 선택해야 한다. 만약 두 경우의 남은 직사각형의 면적이 같다면, 가로로 잘라야 한다.</li>
</ul>

<p>다음 예제를 생각해보자.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/24942f08-a85e-4b41-88eb-b6fceeadbf06/-/preview/" style="width: 394.167px; height: 260px;"></p>

<p>세로 길이 4, 가로 길이 8인 종이가 주어져 있는 상태에서, 점 (3, 6)을 생각해보자. 그림에서 한 칸은 면적이 1이다. 이 경우 이 점을 지나는 세로 직선으로 종이를 자르면 세로 길이 4, 가로 길이 6인 종이가 남고, 이 점을 지나는 가로 직선으로 종이를 자르면 세로 길이 3, 가로 길이 8인 종이가 남게 된다. 두 사각형은 모두 면적이 24로 같으므로 조건에 따라 가로로 잘라야 한다. 그래서, 이 예에서는 세로 길이 3, 가로 길이 8인 종이가 남는다.</p>

<p>위 일을 C개의 모든 점에 대해서 1번부터 C번까지 차례대로 수행했을 때, 마지막으로 남는 종이의 면적을 구하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에, 두 정수 N과 C가 공백 하나씩을 사이에 두고 주어진다. 다음 C 줄에는 각 줄마다 차례대로 점 (X, Y)를 나타내는 두 정수 X와 Y가 공백 하나씩을 사이에 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 마지막으로 남는 종이의 면적을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 3
3 3
2 2
1 1
','4
','MATH');