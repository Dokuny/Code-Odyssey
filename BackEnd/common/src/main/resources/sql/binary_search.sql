INSERT INTO problem (problem_id,platform,href,no,title,runtime,memory,difficulty,content,input,output,type) VALUES
                                                                                                                                        (14570,'BAEKJOON','https://www.acmicpc.net/problem/1056',1056,'수','2초','128 MB',19,'<p>1부터 시작해서 N을 만들려고 한다. 사용할 수 있는 연산은 아래와 같이 총 3가지이다. 이때, N을 만드는데 사용하는 연산의 최소 횟수를 구하는 프로그램을 작성하시오.</p>

<ol>
	<li>현재 수를 1 증가시킴 (현재 수+1)</li>
	<li>현재 수가 1보다 크면 1 감소 시킴 (현재 수-1)</li>
	<li>현재 수를 자연수 제곱함. (현재 수^x, x는 자연수)</li>
</ol>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N이 주어진다. N은 10<sup>18</sup>보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제의 정답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','80
','4
','BINARY_SEARCH'),
                                                                                                                                        (14571,'BAEKJOON','https://www.acmicpc.net/problem/1114',1114,'통나무 자르기','2초','128 MB',15,'<p>벌목꾼 백은진은 나무를 종이 공장에 옮겨야 한다. 하지만, 통나무의 길이가 너무 길어서 트럭에 들어가지 않으므로, 여러개의 조각으로 나누려고 한다.</p>

<p>통나무의 길이는 L이고, K개의 위치에서만 자를 수 있다. 통나무를 자를 수 있는 위치가 주어진다.&nbsp;이 위치는 통나무의 가장 왼쪽에서부터 떨어진 거리이다. 통나무를 자를 수 있는 횟수는 최대 C번이다.</p>

<p>통나무의 가장 긴 조각을 작게 만들고, 그 길이를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 세 정수 L, K, C가 주어진다. 둘째 줄에는 통나무를 자를 수 있는 위치가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 두 개의 수를 출력한다. 첫 번째 수는 가장 긴 조각의 길이이고, 두 번째 수는 그 때 처음 자르는 위치를 출력한다. 만약 가능한 것이 여러 가지라면, 처음 자르는 위치가 작은 것을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','9 2 1
4 5
','5 4
','BINARY_SEARCH'),
                                                                                                                                        (14572,'BAEKJOON','https://www.acmicpc.net/problem/1166',1166,'선물','2초','128 MB',8,'<p>민식이는 아이들에게 선물할 같은 크기의 작은 박스를 N개 가지고 있다. 모든 작은 박스는 정육면체이고, 크기는 A × A × A 이다. 민식이는 이 작은 박스를 크기가&nbsp;L × W × H 인 직육면체 박스에 모두 넣으려고 한다. 모든 작은 박스는 큰 박스 안에 있어야 하고, 작은 박스의 변은 큰 박스의 변과 평행해야 한다.</p>

<p>N, L, W, H가 주어질 때, 가능한 A의 최댓값을 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 네 정수 N, L, W, H가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 가능한 A의 최댓값을 출력한다. 절대/상대 오차는 10<sup>-9</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10 4 2 10
','2.0
','BINARY_SEARCH'),
                                                                                                                                        (14573,'BAEKJOON','https://www.acmicpc.net/problem/1208',1208,'부분수열의 합 2','1초','256 MB',15,'<p>N개의 정수로 이루어진 수열이 있을 때, 크기가 양수인 부분수열 중에서 그 수열의 원소를 다 더한 값이 S가 되는 경우의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수의 개수를 나타내는 N과 정수 S가 주어진다. (1 ≤ N ≤ 40, |S| ≤ 1,000,000) 둘째 줄에 N개의 정수가 빈 칸을 사이에 두고 주어진다. 주어지는 정수의 절댓값은 100,000을 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 합이 S가 되는 부분수열의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 13 15 87 30 22 39 49 42 52 83 100 7 67 27 30 62 47 76 4 19 13 25 78 55 4 21 48 42 59 59 47 26 47 92 67 49 2 27 67 76 44 44 23 69 83 100 64 44 95 63 46 17 77 81 16 77 80 78 10 26 42 19 5 58 62 42 59 85 77 4 87 89 70 38 3 35 10 8 87 42 67 37 2 58 55 2 56 6 94 71 46 45 35 35 30 76 73 15 15 7 0 73 14 51 91 5 58 52 27 78 32 68 98 13 39 71 85 40 40 36 17 28 80 79 76 53 90 26 73 7 71 61 25 3 46 97 71 64 76 21 22 25 97 27 7 70 92 99 2 42 75 56 66 71 61 10 86 79 52 46 81 5 5 76 98 81 72 55 66 91 15 62 92 69 13 79 91 15 98 88 96 86 33 34 89 22 89 36 10 68 10 56 39 100 84 55 76 26 15 76 0 0 79 35 31 64 91 88 74 8 34 28 19 70 93 4 19 41 40 42 7 66 51 55 76 16 70 3 56 64 95 64 93 52 97 21 72 82 47 57 2 57 7 96 54 66 8 67 72 90 53 43 73 53 95 77 49 87 41 86 15 55 17 72 50 54 68 13 72 2 63 41 53 0 82 98 4 0 30 29 3 64 20 98 37 82 22 83 11 28 60 22 44 61 74 78 6 62 51 35 14 92 38 18 18 96 91 14 14 39 98 82 2 79 63 80 91 16 71 82 40 12 75 94 67 38 98 50 20 65 4 55 61 26 40 15 96 22 68 26 36 15 44 61 31 70 4 23 0 3 49 48 94 54 6 96 36 42 63 28 76 15 25 28 58 52 84 13 69 20 19 30 63 66 25 31 14 77 35 5 32 1 78 97 43 2 58 11 73 56 78 99 91 40 0 10 4 100 18 14 85 20 76 66 56 62 57 35 79 43 61 32 60 41 37 32 63 13 76 98 76 88 41 16 45 29 55 32 50 96 31 58 92 43 71 4 55 3 22 7 54 91 2 100 84 18 32 73 64 45 78 22 86 58 46 28 19 6 60 80 15 65 12 65 86 73 94 4 85 90 67 95 17 44 49 16 27 58 15 97 83 78 41 91 7 13 20 18 85 56 55 87 87 31 77 47 63 55 18 81 35 0 14 5 46 34 94 7 11 97 74 37 34 7 65 45 62 69 83 38 85 39 96 100 89 44 86 28 26 24 18 23 78 45 10 4 24 69 95 43 66 52 32 79 93 68 11 63 74 11 32 33 40 68 5 81 14 34 82 96 78 23 84 65 55 85 20 16 35 16 86 66 90 1 18 83 92 36 95 34 67 94 17 84 88 54 11 82 38 35 98 89 70 54 70 11 0 66 31 21 69 79 56 5 89 0 28 95 11 40 61 8 5 40 34 96 67 60 66 39 15 59 74 41 55 69 51 56 4 91 21 93 2 21 8 21 12 64 61 38 80 54 9 95 32 57 88 66 65 25 21 64 13 90 56 37 45 64 57 64 51 55 62 54 30 27 2 73 1 0 97 29 24 87 55 14 59 49 2 60 69 49 15 9 95 35 12 70 45 73 31 59 93 1 4 83 92 43 38 66 24 6 18 52 35 50 28 36 79 63 82 36 15 81 85 2 87 63 32 13 60 76 42 11 6 51 92 3 76 62 48 78 29 72 78 40 49 49 69 43 9 98 5 91 57 44 25 15 45 18 96 4 11 57 64 17 51 97 70 82 72 67 47 89 34 1 30 52 2 92 35 21 51 37 64 41 77 83 58 34 50 64 20 79 55 91 36 7 9 56 10 47 86 35 6 92 22 25 66 24 26 20 10 70 12 21 21 100 78 61 19 47 60 84 72 19 5 44 59 38 90 60 75 24 57 44 70 26 88 73 69 31 63 25 66 47 56 27 37 2 49 59 45 72 18 91 94 4 81 88 57 69 82 64 62 72 28 8 93 4 63 69 0 28 62 0 55 58 99 35 4 65 100 95 57 42 77 96 35 21 45 70 57 61 98 83 18 76 59 2 33 38 79 51 16 62 60 17 46 77 96 16 67 96 12 29 73 94 85 7 58 95 23 56 58 48 78 22 69 57 39 79 75 86 44 12 76 3 53 66 66 82 68 32 89 84 56 18 29 34 57 31 36 55 27 46 68 7 84 35 44 15 78 93 16 91 24 43 3 48 43 70 10 63 78 51 98 100 79 20 75 16 78 57 29 89 88 87 58 76 62 11 42 45 30 49 13 26 91 76 74 98 63 88 76 60 52 28 86 ','#5 52','BINARY_SEARCH'),
                                                                                                                                        (14574,'BAEKJOON','https://www.acmicpc.net/problem/1300',1300,'K번째 수','2초','128 MB',15,'<p>세준이는 크기가 N×N인 배열 A를 만들었다. 배열에 들어있는 수&nbsp;A[i][j] = i×j 이다. 이 수를 일차원 배열 B에 넣으면 B의 크기는 N×N이 된다. B를 오름차순 정렬했을 때, B[k]를&nbsp;구해보자.</p>

<p>배열 A와 B의 인덱스는 1부터 시작한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 배열의 크기 N이 주어진다. N은 10<sup>5</sup>보다 작거나 같은 자연수이다. 둘째 줄에 k가 주어진다. k는 min(10<sup>9</sup>, N<sup>2</sup>)보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>B[k]를&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
7
','6
','BINARY_SEARCH'),
                                                                                                                                        (14576,'BAEKJOON','https://www.acmicpc.net/problem/1365',1365,'꼬인 전깃줄','1초','128 MB',14,'<p>공화국에 있는 유스타운 시에서는 길을 사이에 두고 전봇대가 아래와 같이 두 줄로 늘어서 있다. 그리고 길 왼편과 길 오른편의 전봇대는 하나의 전선으로 연결되어 있다. 어떤 전봇대도 두 개 이상의 다른 전봇대와 연결되어 있지는 않다.</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/upload/201004/picpicpicpicpicpicpicp.JPG" style="height:181px; width:141px"></p>

<p>문제는 이 두 전봇대 사이에 있는 전깃줄이 매우 꼬여 있다는 점이다. 꼬여있는 전깃줄은 화재를 유발할 가능성이 있기 때문에 유스타운 시의 시장 임한수는 전격적으로 이 문제를 해결하기로 했다.</p>

<p>임한수는 꼬여 있는 전깃줄 중 몇 개를 적절히 잘라 내어 이 문제를 해결하기로 했다. 하지만 이미 설치해 놓은 전선이 아깝기 때문에 잘라내는 전선을 최소로 하여 꼬여 있는 전선이 하나도 없게 만들려고 한다.</p>

<p>유스타운 시의 시장 임한수를 도와 잘라내야 할 전선의 최소 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 전봇대의 개수 N(1 ≤ N ≤ 100,000)이 주어지고, 이어서 N보다 작거나 같은 자연수가 N개 주어진다. i번째 줄에 입력되는 자연수는 길 왼쪽에 i번째 전봇대와 연결된 길 오른편의 전봇대가 몇 번 전봇대인지를 나타낸다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>전선이 꼬이지 않으려면 최소 몇 개의 전선을 잘라내야 하는 지를 첫째 줄에 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
2 3 4 1
','1','BINARY_SEARCH'),
                                                                                                                                        (14579,'BAEKJOON','https://www.acmicpc.net/problem/1425',1425,'원숭이 땅을 옮기다','2초','128 MB',14,'<p>원숭이는 나무에 산다. 원숭이의 나라는 2차원의 정수좌표로 나타낼 수 있다.</p>

<p>땅은 X축에 있고, 나무는 모두 X축의 정수좌표에 심어져 있다. 나무는 수직으로만 자라고, 이 나라에서 나무는 밑으로도 자란다.</p>

<p>원숭이는 나무에서 위아래로만 이동할 수 있다. 원숭이도 나무에서 떨어질 수 있기 때문에, 나무에서 나무로 점프하는 위험한 행동은 하지 않는다. 그리고 땅에서는 좌우로 이동하거나, 나무를 탈 수 있다.</p>

<p>원숭이들을 서로 다른 좌표에 위치해 있다. 원숭이들의 거리는 다음과 같이 구한다.</p>

<ol>
	<li>만약 두 원숭이가 같은 X좌표에 있다면 (같은 나무에 있다면) 두 원숭이의 거리는 Y좌표의 차이이다. (파란색 그림)</li>
	<li>만약 두 원숭이가 다른 X좌표에 있다면 (다른 나무에 있다면) 두 원숭이의 거리는 땅과 원숭이 1 사이의 거리 + 땅과 원숭이 2 사이의 거리 + 그들의 X좌표의 차이 이다. (초록색, 분홍색 그림)</li>
</ol>

<p><img alt="" src=https://www.acmicpc.net/upload/201004/tree.png" style="height:205px; width:274px"></p>

<p>원숭이들의 왕 엔토피아는 원숭이들의 생활을 좀 더 편하게 해주기 위해서 땅을 옮기려고 한다.</p>

<p>엔토피아는 각 원숭이들의 거리의 최댓값을 최소화하려고 한다.</p>

<p>땅을 옮길때는 Y=N과 같이 X축에 수평인 방향으로만 옮길 수 있다. 땅을 옮기지 않을 수도 있다. 이때, N은 항상 정수이어야 한다.</p>

<p>원숭이의 위치가 주어졌을 때, 땅을 옮기거나 옮기지 않아서 원숭이들의 거리의 최댓값의 최솟값을 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 원숭이가 몇 마리 있는 지 주어진다. 원숭이는 적어도 2마리는 존재하며, 50마리를 넘지 않는다. 둘째 줄에 각 원숭이들의 좌표가 주어진다. 원숭이들의 좌표는 X좌표 Y좌표 순으로 주어진다. 좌표의 절댓값은 1,000,000,000보다 작거나 같다. 두 원숭이가 같은 위치에 있는 경우는 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 원숭이들의 거리의 최댓값의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 4
4 1
1 1
','6
','BINARY_SEARCH'),
                                                                                                                                        (14578,'BAEKJOON','https://www.acmicpc.net/problem/1450',1450,'냅색문제','1초','128 MB',15,'<p>세준이는 N개의 물건을 가지고 있고, 최대 C만큼의 무게를 넣을 수 있는 가방을 하나 가지고 있다.</p>

<p>N개의 물건을 가방에 넣는 방법의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 C가 주어진다. N은 30보다 작거나 같은 자연수, C는 10<sup>9</sup>보다 작거나 같은 음이 아닌 정수이다.&nbsp;둘째 줄에 물건의 무게가 주어진다. 무게도 10<sup>9</sup>보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 가방에 넣는 방법의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 1
1 1
','3
','BINARY_SEARCH'),
                                                                                                                                        (14577,'BAEKJOON','https://www.acmicpc.net/problem/1477',1477,'휴게소 세우기','2초','128 MB',12,'<p>다솜이는 유료 고속도로를 가지고 있다. 다솜이는 현재 고속도로에 휴게소를 N개 가지고 있는데, 휴게소의 위치는 고속도로의 시작으로부터 얼만큼 떨어져 있는지로 주어진다. 다솜이는 지금 휴게소를 M개 더 세우려고 한다.</p>

<p>다솜이는 이미 휴게소가 있는 곳에 휴게소를 또 세울 수 없고, 고속도로의 끝에도 휴게소를 세울 수 없다. 휴게소는 정수 위치에만 세울 수 있다.</p>

<p>다솜이는 이 고속도로를 이용할 때, 모든 휴게소를 방문한다. 다솜이는 휴게소를 M개 더 지어서 휴게소가 없는 구간의 길이의 최댓값을 최소로 하려고 한다. (반드시 M개를 모두 지어야 한다.)</p>

<p>예를 들어, 고속도로의 길이가 1000이고, 현재 휴게소가 {200, 701, 800}에 있고, 휴게소를 1개 더 세우려고 한다고 해보자.</p>

<p>일단, 지금 이 고속도로를 타고 달릴 때, 휴게소가 없는 구간의 최댓값은 200~701구간인 501이다. 하지만, 새로운 휴게소를 451구간에 짓게 되면, 최대가 251이 되어서 최소가 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 현재 휴게소의 개수 N, 더 지으려고 하는 휴게소의 개수 M, 고속도로의 길이 L이 주어진다. 둘째 줄에 현재 휴게소의 위치가 공백을 사이에 두고 주어진다. N = 0인 경우 둘째 줄은 빈 줄이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 M개의 휴게소를 짓고 난 후에 휴게소가 없는 구간의 최댓값의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 7 800
622 411 201 555 755 82
','70
','BINARY_SEARCH'),
                                                                                                                                        (14580,'BAEKJOON','https://www.acmicpc.net/problem/1508',1508,'레이스','2초','512 MB',14,'<p>세준이는 세준항공으로 돈을 무지막지하게 번 뒤, 레이스 대회를 개최했다. 레이스 트랙은 길이가 N인 직선이다.</p>

<p>세준이는 심판 M명을 적절한 곳에 배치시키려고 한다. 심판은 아무 곳에나 배치시킬 수 있지 않다. 심판은 미리 정해진 K개의 곳에만 위치할 수 있다.</p>

<p>세준이는 심판을 배치할 때, 가장 가까운 두 심판의 거리를 최대로 하려고 한다.</p>

<p>심판을 어디에 배치시켜야 할지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N, M, K가 주어진다. N은 1,000,000보다 작거나 같은 자연수이고, M은 K보다 작거나 같은 자연수이다. 또, K는 2보다 크거나 같고, 50보다 작거나 같다. 둘째 줄에 심판이 있을 수 있는 K개의 위치가 주어진다. K개의 위치는 N보다 작거나 같은 자연수 또는 0이며, 오름차순으로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 심판을 어떻게 배치시켜야 가장 가까운 심판의 거리가 최대가 될 것이지 출력한다. 출력할 때는 예제와 같이 심판을 세울 곳에는 1을, 세우지 않을 곳에는 0을 출력한다. 만약 정답이 여러개일 경우에는 사전순으로 가장 늦는 것을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','11 3 4
0 5 10 11
','1110
','BINARY_SEARCH'),
                                                                                                                                        (14581,'BAEKJOON','https://www.acmicpc.net/problem/1561',1561,'놀이 공원','2초','128 MB',14,'<p>N명의 아이들이 한 줄로 줄을 서서 놀이공원에서 1인승 놀이기구를 기다리고 있다. 이 놀이공원에는 총 M종류의 1인승 놀이기구가 있으며, 1번부터 M번까지 번호가 매겨져 있다.</p>

<p>모든 놀이기구는 각각 운행 시간이 정해져 있어서, 운행 시간이 지나면 탑승하고 있던 아이는 내리게 된다. 놀이 기구가 비어 있으면 현재 줄에서 가장 앞에 서 있는 아이가 빈 놀이기구에 탑승한다. 만일 여러 개의 놀이기구가 동시에 비어 있으면, 더 작은 번호가 적혀 있는 놀이기구를 먼저 탑승한다고 한다.</p>

<p>놀이기구가 모두 비어 있는 상태에서 첫 번째 아이가 놀이기구에 탑승한다고 할 때, 줄의 마지막 아이가 타게 되는 놀이기구의 번호를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N(1 ≤&nbsp;N ≤ 2,000,000,000)과 M(1 ≤ M ≤ 10,000)이 빈칸을 사이에 두고 주어진다. 둘째 줄에는 각 놀이기구의 운행 시간을 나타내는 M개의 자연수가 순서대로 주어진다. 운행 시간은 1 이상 30 이하의 자연수이며, 단위는 분이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 마지막 아이가 타게 되는 놀이기구의 번호를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 5
7 8 9 7 8
','3
','BINARY_SEARCH'),
                                                                                                                                        (14582,'BAEKJOON','https://www.acmicpc.net/problem/1637',1637,'날카로운 눈','2초','128 MB',17,'<p>동물원에서 막 탈출한 원숭이 한 마리가 세상구경을 하고 있다. 그 원숭이는 좀 특이한 원숭이였다. 어떤 것도 꿰뚫어볼 수 있는 날카로운 눈을 가진 기이한 원숭이였다. 부드러운 눈을 가진 멍멍이는 언제나 날카로운 눈을 가진 원숭이를 부러워했지만 한편으로는 매우 질투했다.</p>
<p>어느 날 멍멍이는 원숭이의 날카로운 눈이 너무 샘나서 원숭이를 직접 패고 싶었지만 날카로운 눈으로 찌를까봐 무서워서 때리지는 못하고 대신, 원숭이에게 문제 하나를 던져주었다. 그 문제는 다음과 같다.</p>
<p>정수가 여러 개 모여 있는 정수더미가 있다. 그 안에 어떤 특정한 정수 하나만 홀수개 존재하고 나머지 정수는 모두 짝수개 존재한다. 정수더미 속에서 날카로운 눈을 이용해 홀수개 존재하는 정수를 찾아야 하는 문제이다.</p>
<p>근데 멍멍이가 문제를 전달해 주려다가 생각해보니 정수더미 안에 정수가 적게 있으면 문제가 너무 쉬워지게 되는 것이다. 그래서 정수더미안에 정수를 무지막지하게 많이 넣기로 했다. 정수더미가 주어졌을 때, 그 안에 홀수개 존재하는 정수를 찾는 프로그램을 작성하시오.</p>

					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 입력의 개수 N이 주어진다. N은 1이상 20,000이하인 수이다. 그 다음 줄부터 N줄에 걸쳐 세 개의 정수 A, C, B가 주어지는데, 이것은 A, A+B, A+2B, ..., A+kB (단, A+kB ? C) 의 정수들이 정수더미 안에 있다는 것을 나타낸다. A, B, C는 1보다 크거나 같고 2,147,483,647보다 작거나 같은 정수이다. 정수더미는 N개의 입력이 나타내는 정수들을 모두 포함한다.</p>
					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 정수 두 개를 출력하는데, 첫 번째는 홀수개 존재하는 정수를 출력하고, 두 번째는 그 정수가 몇 개 들어있는지 출력한다. 만약 홀수개 존재하는 정수가 없다면 NOTHING을 출력한다.</p>
					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제로 주어진 정수더미안에는 4가 3개, 4를 제외한 나머지 수들은 각각 2개씩 들어있다. 따라서 답은 “4 3” 이 된다.</p>
				</div>
				</div>','4
1 10 1
4 4 1
1 5 1
6 10 1
','4 3
','BINARY_SEARCH'),
                                                                                                                                        (14583,'BAEKJOON','https://www.acmicpc.net/problem/1654',1654,'랜선 자르기','2초','128 MB',9,'<p>집에서 시간을 보내던 오영식은 박성원의 부름을 받고 급히 달려왔다. 박성원이 캠프 때 쓸 N개의 랜선을 만들어야 하는데 너무 바빠서 영식이에게 도움을 청했다.</p>

<p>이미 오영식은 자체적으로 K개의 랜선을 가지고 있다. 그러나 K개의 랜선은 길이가 제각각이다. 박성원은 랜선을 모두 N개의 같은 길이의 랜선으로 만들고 싶었기 때문에 K개의 랜선을 잘라서 만들어야 한다. 예를 들어 300cm 짜리 랜선에서 140cm 짜리 랜선을 두 개 잘라내면 20cm는 버려야 한다. (이미 자른 랜선은 붙일 수 없다.)</p>

<p>편의를 위해 랜선을 자르거나 만들 때 손실되는 길이는 없다고 가정하며, 기존의 K개의 랜선으로 N개의 랜선을 만들 수 없는 경우는 없다고 가정하자. 그리고 자를 때는 항상 센티미터 단위로 정수길이만큼 자른다고 가정하자. N개보다 많이 만드는 것도 N개를 만드는 것에 포함된다. 이때 만들 수 있는 최대 랜선의 길이를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 오영식이 이미 가지고 있는 랜선의 개수 K, 그리고 필요한 랜선의 개수 N이 입력된다. K는 1이상 10,000이하의 정수이고, N은 1이상 1,000,000이하의 정수이다. 그리고 항상 K ? N 이다. 그 후 K줄에 걸쳐 이미 가지고 있는 각 랜선의 길이가 센티미터 단위의 정수로 입력된다. 랜선의 길이는 2<sup>31</sup>-1보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 N개를 만들 수 있는 랜선의 최대 길이를 센티미터 단위의 정수로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>802cm 랜선에서 4개, 743cm 랜선에서 3개, 457cm 랜선에서 2개, 539cm 랜선에서 2개를 잘라내 모두 11개를 만들 수 있다.</p>

				</div>
				</div>','4 11
802
743
457
539
','200
','BINARY_SEARCH'),
                                                                                                                                        (14586,'BAEKJOON','https://www.acmicpc.net/problem/2031',2031,'이 쿠키 달지 않아!','2초','512 MB',14,'<p>최근 심모 양(17)은 친구 사모 양(17)이 알바를 하는 허브차 카페에서 독특한 경험을 했습니다. 바로 다이어트 효과가 있는 김네마 실베스터라는 허브를 알게 된 건데요, 신기하게도 김네마 실베스터 차를 마시면 일시적으로 단맛을 느끼지 못하게 된다고 합니다. 김네마 다이어트를 시작하기로 마음먹은 심모 양은 자신의 식습관을 고려해서 미래 <em>T</em> 분 동안 먹을 <em>N</em> 종류의 음식에 대해 각각의 음식을 먹을 시각을 분 단위로 표시한 길이 <em>N</em>의 목록을 만들었습니다. 김네마 실베스터 차 한 잔을 마시면 <em>D</em> 분 동안 다이어트 효과가 유지되는데, 심모 양은 총 <em>K</em> 잔의 김네마 실베스터 차를 적당한 타이밍에 마셔서 다이어트 효과가 유지되는 동안 음식을 먹는 횟수를 최대로 하기로 했습니다.</p>

<p>예를 들어 <em>D</em> = 5, <em>K</em> = 2이고 심모 양의 목록이 다음과 같다고 합시다.</p>

<p>9, 15, 7, 12, 14, 9, 3</p>

<p>이때 심모 양이 두 잔의 차를 3분, 9분에 마시면 첫 번째 잔은 3분에 먹는 음식부터 7분까지 먹는 음식까지에 (8분에 먹는 음식에는 효과가 있지 않습니다), 두 번째 잔은 9분에 먹는 음식부터 13분에 먹는 음식까지에 효과가 있습니다. 따라서 효과가 적용되는 횟수는 총 5번입니다.</p>

<p><strong><u>9</u></strong>, 15, <u><strong>7</strong></u>, <u><strong>12</strong></u>, 14, <u><strong>9</strong></u>, <u><strong>3</strong></u></p>

<p>한 편 두 잔의 차를 7분, 12분에 마시면 다음과 같이 효과가 적용되는 횟수가 6번이 되고, 이때가 최대입니다.</p>

<p><u><strong>9</strong></u>, <u><strong>15</strong></u>, <u><strong>7</strong></u>, <u><strong>12</strong></u>, <u><strong>14</strong></u>, <u><strong>9</strong></u>, 3</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 4개의 자연수 <em>T</em>, <em>N</em>, <em>D</em>, <em>K</em>가 주어집니다. (1 ≤ <em>T</em> ≤ 10<sup>9</sup>, 1 ≤ <em>N</em> ≤ 10<sup>6</sup>, 1 ≤ <em>D</em> ≤ 10<sup>9</sup>, 1 ≤ <em>K</em> ≤ 10)</p>

<p>두 번째 줄에 <em>N </em>종류의 음식 각각을 먹을 시각을 나타내는 <em>N</em> 개의 자연수 <em>a</em><sub>1</sub>, ..., <em>a</em><sub><em>N</em></sub>이 주어집니다. (1 ≤ <em>a</em><sub><em>i</em></sub> ≤ <em>T</em>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 심모 양이 적당한 타이밍에 김네마 실베스터 차를 마셨을 때 효과가 적용되는 횟수의 최댓값을 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','20 7 5 2
9 15 7 12 14 9 3
','6
','BINARY_SEARCH'),
                                                                                                                                        (14587,'BAEKJOON','https://www.acmicpc.net/problem/2080',2080,'겹치는 선분','2초','256 MB',19,'<p>N(1 ≤ N ≤ 100,000)개의 선분이 주어졌을 때, 서로 겹치는 서로 다른 선분 쌍의 개수를 알아내는 프로그램을 작성하시오. 두 선분이 겹친다는 말은, 두 선분에 공통적으로 포함되는 점들이 무한 개 존재한다는 의미이다. 즉, 선분의 끝점만 닿아 있는 경우는 겹치는 경우가 아닌 것이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 N이 주어진다. 다음 N개의 줄에는 각 선분의 양 끝점의 x, y좌표를 나타내는 네 정수가 주어진다. 각 좌표는 0이상 1,000,000의 값을 가지며, 한 선분의 양 끝점이 같은 경우는 주어지지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 답을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1 1 2 2
2 2 3 3
1 1 3 3
','2
','BINARY_SEARCH'),
                                                                                                                                        (14588,'BAEKJOON','https://www.acmicpc.net/problem/2102',2102,'보석 줍기','2초','128 MB',17,'<p>수영이는 고대 유적을 탐사하던 도중 보석을 발견했다. 유적 속에는 N(1 ≤ N ≤ 100,000)개의 보석들이 일렬로 놓여 있었다. 각각의 보석의 가치는 다를 수 있기 때문에, 수영이는 가급적 많은 이득을 얻을 수 있도록 보석을 가져가려 한다. 이때, 다음 세 가지의 조건이 만족되어야 한다.</p>

<ol>
	<li>보석들과 함께 함정이 설치되어 있기 때문에 1번 보석이 놓여있는 곳부터, N번 보석이 놓여 있는 곳까지 순서대로 이동해야 한다. 물론 1번 보석부터 N번 보석까지가 차례로 놓여있다고 가정하며, 보석을 줍다가 도중에 뒤로 돌아갈 수 없는 것이다. 각각의 보석이 놓여 있는 위치에서 수영이는 두 가지 선택을 할 수 있는데, 그 자리에 있는 보석을 줍거나 줍지 않고 그 다음 보석이 놓여 있는 곳으로 이동하게 된다.</li>
	<li>또한 보석들과 함께 경보 장치가 설치되어 있는데, 이 장치는 보석을 한 개 주우면 작동하게 된다. 보석을 한 개 더 줍게 되면 이 경보 장치는 유적을 무너뜨리도록 설계되어 있다. 단, 경보 장치를 속일 수 있는 방법이 있는데, M(1 ≤ M ≤ N)개 이상의 연속적인 보석을 줍게 되면 경보 장치가 인식하지 못하게 된다. 따라서 보석을 줍기 시작하면 그 위치에 있는 보석을 포함하여 M개 이상의 보석을 연속적으로 주워야 하고, 줍기를 멈춘 후에는 다시 줍기 시작할 수 없다. 즉, 보석을 주울 기회는 오직 한 번 뿐이며, 보석을 주울 때에는 연속적으로 M개 이상 주워야 한다.</li>
	<li>주운 보석들의 가치의 합이 크더라도, 보석의 개수가 많다면 무게가 많이 나가서 힘들 수도 있다. 물론, 보석들의 가치의 합이 충분히 크다면 무거움을 감수할 수도 있다. 따라서 수영이는 주운 보석들의 가치의 평균이 최대가 되도록 하려 한다.</li>
</ol>

<p>보석들의 개수가 매우 많기 때문에, 수영이는 이 문제를 컴퓨터를 이용하여 풀기로 하였다. 보석들에 대한 정보가 주어졌을 때, 위의 조건들을 만족하면서 보석을 주울 때, 가치의 평균의 최댓값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 두 정수 N, M이 주어진다. 다음 N개의 줄에는 차례로 각 보석의 가치가 주어진다. 각 보석의 가치는 0 이상 2,000 이하의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 가치의 평균의 최댓값을 1,000배 한 정수를 출력한다. 반올림 문제가 생길 수 있으므로, 정수 연산을 하여 1,000×(가치의 총 합)/(보석의 개수)을 출력하도록 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10 6
6
4
2
10
3
8
5
9
4
1
','6500
','BINARY_SEARCH'),
                                                                                                                                        (14584,'BAEKJOON','https://www.acmicpc.net/problem/2110',2110,'공유기 설치','2초','128 MB',12,'<p>도현이의 집 N개가 수직선 위에 있다. 각각의 집의 좌표는 x<sub>1</sub>, ..., x<sub>N</sub>이고, 집 여러개가 같은 좌표를 가지는 일은 없다.</p>

<p>도현이는 언제 어디서나 와이파이를 즐기기 위해서 집에 공유기 C개를 설치하려고 한다. 최대한 많은 곳에서 와이파이를 사용하려고 하기 때문에, 한 집에는 공유기를 하나만 설치할 수 있고, 가장 인접한 두 공유기 사이의 거리를 가능한 크게 하여 설치하려고 한다.</p>

<p>C개의 공유기를 N개의 집에 적당히 설치해서, 가장 인접한 두 공유기 사이의 거리를 최대로 하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 집의 개수 N (2 ≤ N ≤ 200,000)과 공유기의 개수 C (2 ≤ C ≤ N)이 하나 이상의 빈 칸을 사이에 두고 주어진다. 둘째 줄부터 N개의 줄에는 집의 좌표를 나타내는 x<sub>i</sub> (0 ≤ x<sub>i</sub> ≤ 1,000,000,000)가 한 줄에 하나씩 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 가장 인접한 두 공유기 사이의 최대 거리를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>공유기를 1, 4, 8 또는 1, 4, 9에 설치하면 가장 인접한 두 공유기 사이의 거리는 3이고, 이 거리보다 크게 공유기를 3개 설치할 수 없다.</p>

				</div>
				</div>','5 3
1
2
8
4
9
','3
','BINARY_SEARCH'),
                                                                                                                                        (14575,'BAEKJOON','https://www.acmicpc.net/problem/2112',2112,'두 부분 문자열','2초','128 MB',17,'<p>문자열 A의 부분 문자열이란, A에 속하는 하나 또는 그 이상의 문자(연속하지 않아도 된다)를 이용해서 만든 새로운 문자열이다. 이때, A에서의 순서를 그대로 유지해야 된다.</p>

<p>두 문자열 A와 B가 주어진다. 이때, A의 부분 문자열이면서, B의 부분 문자열이 아닌 가장 짧은 부분 문자열을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 문자열 A, 둘째 줄에 문자열 B가 주어진다. 문자열은 알파벳 소문자로만 이루어져 있고, 길이는 1000보다 작거나 같다. 항상 정답이 존재하는 경우만 입력으로 주어진다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 A의 부분 문자열이면서, B의 부분 문자열이 아닌 가장 짧은 부분 문자열의 길이를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','ababaa
abbaa
','3
','BINARY_SEARCH'),
                                                                                                                                        (14589,'BAEKJOON','https://www.acmicpc.net/problem/2130',2130,'수조','2초','128 MB',15,'<p>N(1 ≤ N ≤ 50,000)개의 수조가 있다. 각각의 수조는 3차원 공간상에 존재한다. 수조에 대한 정보는 수조가 위치한 높이 b(0 ≤ b ≤ 1,000,000), 수조 자체의 높이 h(1 ≤ h ≤ 40,000), 수조의 가로길이 w(1 ≤ w ≤ 40,000), 수조의 세로길이 d(1 ≤ d ≤ 40,000)로 표현된다. 모든 수조의 아래에는 파이프가 달려 있고, 모든 파이프들은 하나로 연결되어 있다.</p>

<p>이러한 수조에 부피 V(1 ≤ V ≤ 2,000,000,000)만큼의 물을 넣으려고 한다. 수조들은 모두 파이프로 연결되어 있기 때문에, 전체 수조들의 제일 아래부터 차례로 물이 차게 된다. 문제의 편의를 위해서 파이프의 크기는 무시하기로 하자. 즉, 물은 파이프에는 들어가지 않고 수조에만 채워지는 것으로 간주한다. 이와 같이 물을 채웠을 때, 최종 수면의 높이를 구하려고 한다. 예를 들어 아래와 같은 경우에는 최종 수면의 높이 17이 된다.</p>

<p style="text-align: center;"><img alt="" src="/JudgeOnline/upload/201008/water.PNG" style="height: 320px; width: 379.167px;"></p>

<p>수조들에 대한 정보와 물의 양이 주어졌을 때, 최종 수면의 높이를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 N이 주어진다. 다음 N개의 줄에는 각 수조의 b, h, w, d값이 주어진다. 제일 마지막 줄에는 물의 부피가 주어진다. 모든 입력은 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 최종 수면의 높이를 소수점 아래 둘째 자리까지 출력한다. 절대 오차는 10<sup>-2</sup>까지 허용한다. 만약 물의 양이 많을 경우에는 OVERFLOW를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
11 7 5 1
15 6 4 1
5 8 5 1
19 4 8 1
78
','17.00
','BINARY_SEARCH'),
                                                                                                                                        (14590,'BAEKJOON','https://www.acmicpc.net/problem/2264',2264,'대칭 그림','2초','128 MB',0,'<p>어떤 사람이 종이에 점을 찍어서 그림을 그렸다. 그림을 다 그려놓고 보니, 이 그림이 대칭인지 아닌지 궁금해졌다.</p>

<p>대칭이라는 말의 의미는, 종이를 한 번 접었을 때, 위쪽 종이에 점이 찍힌 적이 있는 위치와 아래쪽 종이에 점이 찍힌 적이 있는 위치가 일치할 때를 의미한다. 종이에는 결이 있기 때문에, 종이를 접을 때에는 x축에 수직하게(y축에 평행하게)만 접을 수 있다. 종이를 접는 위치가 반드시 종이의 정 가운데일 필요는 없다. 접힌 선 위에 있는 점들은 무시해도 된다.</p>

<p>점을 찍은 순서대로 점의 위치가 주어졌을 때, 이 그림이 대칭인지 판별하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 점을 찍은 회수 N(1 ≤ N ≤ 100,000)이 주어진다. 다음 N개의 줄에는 순서대로 점을 찍은 x, y좌표가 주어진다. 각각의 좌표는 절댓값이 1,000,000,000을 넘지 않는 정수이다. 즉, 종이가 (-1,000,000,000, -1,000,000,000)부터 (1,000,000,000, 1,000,000,000)까지 있다고 생각하면 된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>가능할 경우에는 첫째 줄에 접은 위치의 x좌표를 출력한다. 접은 위치의 x좌표가 실수로 나오는 경우에는 소수점 아래 첫째 자리만 출력한다. 즉, %.1lf 로 출력하라는 의미이다. 불가능한 경우에는 NO를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
0 0
2 2
2 0
0 2
','1
','BINARY_SEARCH'),
                                                                                                                                        (14591,'BAEKJOON','https://www.acmicpc.net/problem/2343',2343,'기타 레슨','2초','128 MB',10,'<p>강토는 자신의 기타 강의 동영상을 블루레이로 만들어 판매하려고 한다. 블루레이에는 총 N개의 강의가 들어가는데, 블루레이를 녹화할 때, 강의의 순서가 바뀌면 안 된다. 순서가 뒤바뀌는 경우에는 강의의 흐름이 끊겨, 학생들이 대혼란에 빠질 수 있기 때문이다. 즉, i번 강의와 j번 강의를 같은 블루레이에 녹화하려면 i와 j 사이의 모든 강의도 같은 블루레이에 녹화해야 한다.</p>

<p>강토는 이 블루레이가 얼마나 팔릴지 아직 알 수 없기 때문에, 블루레이의 개수를 가급적 줄이려고 한다. 오랜 고민 끝에 강토는 M개의 블루레이에 모든 기타 강의 동영상을 녹화하기로 했다. 이때, 블루레이의 크기(녹화 가능한 길이)를 최소로 하려고 한다. 단, M개의 블루레이는 모두 같은 크기이어야 한다.</p>

<p>강토의 각 강의의 길이가 분 단위(자연수)로 주어진다. 이때, 가능한 블루레이의 크기 중 최소를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 강의의 수 N (1 ≤ N ≤ 100,000)과 M (1 ≤ M ≤ N)이 주어진다. 다음 줄에는 강토의 기타 강의의 길이가 강의 순서대로 분 단위로(자연수)로 주어진다. 각 강의의 길이는 10,000분을 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 가능한 블루레이 크기중 최소를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>강의는 총 9개이고, 블루레이는 총 3개 가지고 있다.</p>

<p>1번 블루레이에 1, 2, 3, 4, 5, 2번 블루레이에 6, 7, 3번 블루레이에 8, 9 를 넣으면 각 블루레이의 크기는 15, 13, 17이 된다. 블루레이의 크기는 모두 같아야 하기 때문에, 블루레이의 크기는 17이 된다. 17보다 더 작은 크기를 가지는 블루레이를 만들 수 없다. </p>

<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/w0w2Lixl5A8" width="560"></iframe></p>

				</div>
				</div>','9 3
1 2 3 4 5 6 7 8 9
','17
','BINARY_SEARCH'),
                                                                                                                                        (14593,'BAEKJOON','https://www.acmicpc.net/problem/2352',2352,'반도체 설계','2초','128 MB',14,'<p>반도체를 설계할 때 n개의 포트를 다른 n개의 포트와 연결해야 할 때가 있다.</p>

<p style="text-align: center;"><img alt="" src="/JudgeOnline/upload/201103/chip.png" style="height: 163.333px; width: 394.167px;"></p>

<p>예를 들어 왼쪽 그림이 n개의 포트와 다른 n개의 포트를 어떻게 연결해야 하는지를 나타낸다. 하지만 이와 같이 연결을 할 경우에는 연결선이 서로 꼬이기 때문에 이와 같이 연결할 수 없다. n개의 포트가 다른 n개의 포트와 어떻게 연결되어야 하는지가 주어졌을 때, 연결선이 서로 꼬이지(겹치지, 교차하지) 않도록 하면서 최대 몇 개까지 연결할 수 있는지를 알아내는 프로그램을 작성하시오</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 n(1 ≤ n ≤ 40,000)이 주어진다. 다음 줄에는 차례로 1번 포트와 연결되어야 하는 포트 번호, 2번 포트와 연결되어야 하는 포트 번호, …, n번 포트와 연결되어야 하는 포트 번호가 주어진다. 이 수들은 1 이상 n 이하이며 서로 같은 수는 없다고 가정하자.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 최대 연결 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
4 2 6 3 1 5
','3
','BINARY_SEARCH'),
                                                                                                                                        (14594,'BAEKJOON','https://www.acmicpc.net/problem/2365',2365,'숫자판 만들기','5초','128 MB',18,'<p>가로의 크기와 세로의 크기가 각각 N인 숫자판이 있다. 숫자판의 각 칸에는 음 아닌 정수들만 들어갈 수 있고 각 행과 각 열의 합이 미리 주어진다고 하자. N=2 인 경우의 예가 다음에 있다.</p>

<table class="table table-bordered" style="width:15%">
	<tbody>
		<tr>
			<td style="width:5%">?</td>
			<td style="width:5%">?</td>
			<td style="width:5%">12</td>
		</tr>
		<tr>
			<td>?</td>
			<td>?</td>
			<td>4</td>
		</tr>
		<tr>
			<td>6</td>
			<td>10</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>

<p>위 그림에서 숫자판 옆의 수는 해당하는 행에 들어가는 숫자의 합을 나타내며, 숫자판 아래의 수는 해당하는 열에 들어가는 숫자의 합을 나타낸다. 이제, 숫자판에 주어진 합과 일치하도록 수를 넣으려고 한다. 합이 일치되도록 숫자를 넣는 방법은 여러 가지 있을 수 있으며 위의 예에 대해 서로 다른 형태를 3가지만 보이면 다음과 같다.</p>

<table class="table table-bordered" style="width:10%">
	<tbody>
		<tr>
			<td style="width:5%">5</td>
			<td style="width:5%">7</td>
		</tr>
		<tr>
			<td>1</td>
			<td>3</td>
		</tr>
	</tbody>
</table>

<table class="table table-bordered" style="width:10%">
	<tbody>
		<tr>
			<td style="width:5%">6</td>
			<td style="width:5%">6</td>
		</tr>
		<tr>
			<td>0</td>
			<td>4</td>
		</tr>
	</tbody>
</table>

<table class="table table-bordered" style="width:10%">
	<tbody>
		<tr>
			<td style="width:5%">4</td>
			<td style="width:5%">8</td>
		</tr>
		<tr>
			<td>2</td>
			<td>2</td>
		</tr>
	</tbody>
</table>

<p>이 문제에서는 가능한 여러 가지 형태중 숫자판에 들어가는 최대 숫자의 값을 최소로 하는 형태를 찾고자 한다. 그러므로, 위의 예에서는 최대 숫자가 6 인 형태가 원하는 답이다. 이 문제를 해결하는 프로그램을 작성하시오.&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫째 줄에는 행(열)의 크기 N이 주어진다(1 ≤ N ≤ 50). 둘째 줄에는 N개의 정수가 주어진다. 주어지는 정수는 1행부터 N행까지의 합을 차례대로 나타낸다.&nbsp;셋째 줄에는 N개의 정수가 주어진다. 주어지는 정수는 1열부터 N열까지의 합을 차례대로 나타낸다. 합을 나타내는 각 정수는 0 이상 10000 이하이다. 숫자판을 구성할 수 없는 입력은 주어지지 않는다고 가정한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 줄에는 배정된 수들중 최댓값을 출력한다. 둘째 줄부터 (N+1)째줄까지 각 행에 배정된 수들을 한 줄에 한 행씩 출력한다. 배정되는 각각의 정수는 0 이상이어야 한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
12 4
6 10
','6
6 6
0 4
','BINARY_SEARCH'),
                                                                                                                                        (14595,'BAEKJOON','https://www.acmicpc.net/problem/2428',2428,'표절','1초','128 MB',8,'<p>세계적인 석유 재벌 "규현 조 압둘 티크리티 안드레스 후세인 리오넬 솔레르 살라 마리우 두스 산투스 펠리스 빈 자이드 술탄 친나왓 뱅거 7세"는 1등 상품으로 페라리를 걸고 프로그래밍 대회를 개최했다. 이 대회의 참석자는 총 N명이고 각각 솔루션 파일 1개를 제출했다. 이 솔루션 파일을 F<sub>1</sub>, F<sub>2</sub>, ..., F<sub>n</sub>이라고 한다.</p>

<p>채점 결과를 발표하기 전에, 남의 것을 배낀 사람이 있는지 찾아내려고 한다. 이 대회의 주최측은 두 파일을 비교해서 너무 비슷한지 아닌지 판별하는 프로그램이 있다.</p>

<p>하지만, 제출한 파일의 개수가 너무 많아서, 모든 쌍을 검사한다면, 2012년 지구가 멸망할 때 까지도 검사를 해야할 판이다. 따라서, 파일 크기가 너무 다른 경우에는 그러한 쌍을 검사하지 않고 넘어가기로 했다.</p>

<p>좀더 정확하게 하기 위해서, 대회의 심판들은 두 파일이 있을 때, 작은 파일의 크기가 큰 파일 크기의 90%보다도 작을 때는, 이러한 쌍은 검사하지 않고 넘어가기로 했다. 따라서, (F<sub>i</sub>, F<sub>j</sub>) 쌍을 검사해야 하는데, 이때, i≠j이고, size(F<sub>i</sub>) ≤ size(F<sub>j</sub>)이면서, size(F<sub>i</sub>) ≥ 0.9 × size(F<sub>j</sub>)인 쌍만 검사하려고 한다.</p>

<p>몇 개의 쌍을 검사해야 하는 지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 제출한 솔루션의 개수 N이 주어진다. 둘째 줄에는 각 솔루션 파일의 크기 size(F<sub>1</sub>), size(F<sub>2</sub>), ..., size(F<sub>N</sub>)이 주어진다. (1 ≤ N ≤ 100,000, 1 ≤ size(F<sub>i</sub>) ≤ 100,000,000) 솔루션 파일의 크기는 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 검사해야 하는 파일의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
2 1
','0
','BINARY_SEARCH'),
                                                                                                                                        (14596,'BAEKJOON','https://www.acmicpc.net/problem/2467',2467,'용액','1초','128 MB',11,'<p>KOI 부설 과학연구소에서는 많은 종류의 산성 용액과 알칼리성 용액을 보유하고 있다. 각 용액에는 그 용액의 특성을 나타내는 하나의 정수가 주어져있다. 산성 용액의 특성값은 1부터 1,000,000,000까지의 양의 정수로 나타내고, 알칼리성 용액의 특성값은 -1부터 -1,000,000,000까지의 음의 정수로 나타낸다.</p>

<p>같은 양의 두 용액을 혼합한 용액의 특성값은 혼합에 사용된 각 용액의 특성값의 합으로 정의한다. 이 연구소에서는 같은 양의 두 용액을 혼합하여 특성값이 0에 가장 가까운 용액을 만들려고 한다.&nbsp;</p>

<p>예를 들어, 주어진 용액들의 특성값이 [-99, -2, -1, 4, 98]인 경우에는 특성값이 -99인 용액과 특성값이 98인 용액을 혼합하면 특성값이 -1인 용액을 만들 수 있고, 이 용액의 특성값이 0에 가장 가까운 용액이다. 참고로, 두 종류의 알칼리성 용액만으로나 혹은 두 종류의 산성 용액만으로 특성값이 0에 가장 가까운 혼합 용액을 만드는 경우도 존재할 수 있다.</p>

<p>산성 용액과 알칼리성 용액의 특성값이 정렬된 순서로 주어졌을 때, 이 중 두 개의 서로 다른 용액을 혼합하여 특성값이 0에 가장 가까운 용액을 만들어내는 두 용액을 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 전체 용액의 수 N이 입력된다. N은 2 이상 100,000 이하의 정수이다. 둘째 줄에는 용액의 특성값을 나타내는 N개의 정수가 빈칸을 사이에 두고 오름차순으로 입력되며, 이 수들은 모두 -1,000,000,000 이상 1,000,000,000 이하이다. N개의 용액들의 특성값은 모두 서로 다르고, 산성 용액만으로나 알칼리성 용액만으로 입력이 주어지는 경우도 있을 수 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 특성값이 0에 가장 가까운 용액을 만들어내는 두 용액의 특성값을 출력한다. 출력해야 하는 두 용액은 특성값의 오름차순으로 출력한다. 특성값이 0에 가장 가까운 용액을 만들어내는 경우가 두 개 이상일 경우에는 그 중 아무것이나 하나를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
-99 -2 -1 4 98
','-99 98
','BINARY_SEARCH'),
                                                                                                                                        (14597,'BAEKJOON','https://www.acmicpc.net/problem/2470',2470,'두 용액','1초(추가시간없음)','128 MB',11,'<p>KOI 부설 과학연구소에서는 많은 종류의 산성 용액과 알칼리성 용액을 보유하고 있다. 각 용액에는 그 용액의 특성을 나타내는 하나의 정수가 주어져있다.  산성 용액의 특성값은 1부터 1,000,000,000까지의 양의 정수로 나타내고, 알칼리성 용액의 특성값은 -1부터 -1,000,000,000까지의 음의 정수로 나타낸다.</p>

<p>같은 양의 두 용액을 혼합한 용액의 특성값은 혼합에 사용된 각 용액의 특성값의 합으로 정의한다. 이 연구소에서는 같은 양의 두 용액을 혼합하여 특성값이 0에 가장 가까운 용액을 만들려고 한다. </p>

<p>예를 들어, 주어진 용액들의 특성값이 [-2, 4, -99, -1, 98]인 경우에는 특성값이 -99인 용액과 특성값이 98인 용액을 혼합하면 특성값이 -1인 용액을 만들 수 있고, 이 용액이 특성값이 0에 가장 가까운 용액이다. 참고로, 두 종류의 알칼리성 용액만으로나 혹은 두 종류의 산성 용액만으로 특성값이 0에 가장 가까운 혼합 용액을 만드는 경우도 존재할 수 있다.</p>

<p>산성 용액과 알칼리성 용액의 특성값이 주어졌을 때, 이 중 두 개의 서로 다른 용액을 혼합하여 특성값이 0에 가장 가까운 용액을 만들어내는 두 용액을 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 전체 용액의 수 N이 입력된다. N은 2 이상 100,000 이하이다. 둘째 줄에는 용액의 특성값을 나타내는 N개의 정수가 빈칸을 사이에 두고 주어진다. 이 수들은 모두 -1,000,000,000 이상 1,000,000,000 이하이다. N개의 용액들의 특성값은 모두 다르고, 산성 용액만으로나 알칼리성 용액만으로 입력이 주어지는 경우도 있을 수 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 특성값이 0에 가장 가까운 용액을 만들어내는 두 용액의 특성값을 출력한다. 출력해야 하는 두 용액은 특성값의 오름차순으로 출력한다. 특성값이 0에 가장 가까운 용액을 만들어내는 경우가 두 개 이상일 경우에는 그 중 아무것이나 하나를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
-2 4 -99 -1 98
','-99 98
','BINARY_SEARCH'),
                                                                                                                                        (14598,'BAEKJOON','https://www.acmicpc.net/problem/2473',2473,'세 용액','1초','256 MB',13,'<p>KOI 부설 과학연구소에서는 많은 종류의 산성 용액과 알칼리성 용액을 보유하고 있다. 각 용액에는 그 용액의 특성을 나타내는 하나의 정수가 주어져있다. &nbsp;산성 용액의 특성값은 1부터 1,000,000,000까지의 양의 정수로 나타내고, 알칼리성 용액의 특성값은 -1부터 -1,000,000,000까지의 음의 정수로 나타낸다.</p>

<p>같은 양의 세 가지 용액을 혼합한 용액의 특성값은 혼합에 사용된 각 용액의 특성값의 합으로 정의한다. 이 연구소에서는 같은 양의 세 가지 용액을 혼합하여 특성값이 0에 가장 가까운 용액을 만들려고 한다.&nbsp;</p>

<p>예를 들어, 주어진 용액들의 특성값이 [-2, 6, -97, -6, 98]인 경우에는 특성값이 -97와 -2인 용액과 특성값이 98인 용액을 혼합하면 특성값이 -1인 용액을 만들 수 있고, 이 용액이 특성값이 0에 가장 가까운 용액이다. 참고로, 세 종류의 알칼리성 용액만으로나 혹은 세 종류의 산성 용액만으로 특성값이 0에 가장 가까운 혼합 용액을 만드는 경우도 존재할 수 있다.</p>

<p>산성 용액과 알칼리성 용액이 주어졌을 때, 이 중 같은 양의 세 개의 서로 다른 용액을 혼합하여 특성값이 0에 가장 가까운 용액을 만들어내는 세 용액을 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 전체 용액의 수 N이 입력된다. N은 3 이상 5,000 이하의 정수이다. 둘째 줄에는 용액의 특성값을 나타내는 N개의 정수가 빈칸을 사이에 두고 주어진다. 이 수들은 모두 -1,000,000,000 이상 1,000,000,000 이하이다. N개의 용액들의 특성값은 모두 다르고, 산성 용액만으로나 알칼리성 용액만으로 입력이 주어지는 경우도 있을 수 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 특성값이 0에 가장 가까운 용액을 만들어내는 세 용액의 특성값을 출력한다. 출력해야하는 세 용액은 특성값의 오름차순으로 출력한다. 특성값이 0에 가장 가까운 용액을 만들어내는 경우가 두 개 이상일 경우에는 그 중 아무것이나 하나를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
-2 6 -97 -6 98
','-97 -2 98
','BINARY_SEARCH'),
                                                                                                                                        (14600,'BAEKJOON','https://www.acmicpc.net/problem/2512',2512,'예산','1초','128 MB',9,'<p>국가의 역할 중 하나는 여러 지방의 예산요청을 심사하여 국가의 예산을 분배하는 것이다. 국가예산의 총액은 미리 정해져 있어서 모든 예산요청을 배정해 주기는 어려울 수도 있다. 그래서 정해진 총액 이하에서 <strong>가능한 한 최대의</strong> 총 예산을 다음과 같은 방법으로 배정한다.</p>

<ol>
	<li>모든 요청이 배정될 수 있는 경우에는 요청한 금액을 그대로 배정한다.</li>
	<li>모든 요청이 배정될 수 없는 경우에는 특정한 <strong>정수</strong> 상한액을 계산하여 그 이상인 예산요청에는 모두 상한액을 배정한다. 상한액 이하의 예산요청에 대해서는 요청한 금액을 그대로 배정한다.&nbsp;</li>
</ol>

<p>예를 들어, 전체 국가예산이 485이고 4개 지방의 예산요청이 각각 120, 110, 140, 150이라고 하자. 이 경우, 상한액을 127로 잡으면, 위의 요청들에 대해서 각각 120, 110, 127, 127을 배정하고 그 합이 484로 가능한 최대가 된다.&nbsp;</p>

<p>여러 지방의 예산요청과 국가예산의 총액이 주어졌을 때, 위의 조건을 모두 만족하도록 예산을 배정하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 지방의 수를 의미하는 정수 N이 주어진다. N은 3 이상 10,000 이하이다. 다음 줄에는 각 지방의 예산요청을 표현하는 N개의 정수가 빈칸을 사이에 두고 주어진다. 이 값들은 모두 1 이상 100,000 이하이다. 그 다음 줄에는 총 예산을 나타내는 정수 M이 주어진다. M은 N 이상 1,000,000,000 이하이다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에는 배정된 예산들 중 최댓값인 정수를 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
120 110 140 150
485
','127
','BINARY_SEARCH'),
                                                                                                                                        (14599,'BAEKJOON','https://www.acmicpc.net/problem/2515',2515,'전시장','1초','256 MB',14,'<p>전시장에서 그림을 판매하는 업체에 하나의 전시대가 배정된다. 전시될 그림은 직사각형의 모양을 가지고 있고, 그림의 높이는 다를 수 있지만 폭은 모두 동일하다고 가정한다. 각 그림에는 가격이 매겨져 있다. </p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/5c4fa7a7-8987-43d1-a380-5e17462285d0/-/preview/" style="width: 300px; height: 169px;"></p>

<p>업체는 그림들을 관람객에게 보이기 위해 전시대에 배치하는데, 전시대의 폭이 그림의 폭과 동일하여 겹쳐서 배치해야만 한다. 예를 들어, 위의 그림은 전시대에 네 개의 그림 A, B, C, D를 C, B, A, D의 순서로 겹쳐서 배치한 상황을 보여준다.</p>

<p>위 그림의 오른쪽 부분은 전시된 그림들의 배치를 옆에서 본 모양을 나타내고, 왼쪽 부분은 배치한 그림들을 앞에서 보아서 관람객들이 보게 될 모양을 나타낸다. 그림 A는 앞의 그림 B때문에 가려져서 관람객에게 전혀 보이지 않고, 부분적으로라도 보이는 그림은 B, C, D 뿐이다. </p>

<p>보이는 부분의 세로 길이가 특정 정수 S이상인 그림만 관람객이 관심을 보이고 사게 된다고 가정한다. 전시된 그림들 중 보이는 부분의 세로 길이가 S이상인 그림을 판매가능 그림이라고 부른다. </p>

<p>그림의 높이와 가격이 주어질 때, 판매가능 그림들의 가격의 합이 최대가 되도록 그림을 배치할 때, 그 최대합을 구하는 프로그램을 작성하시오. </p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 그림의 개수 N (1 ≤ N ≤ 300,000)과 판매가능 그림을 정의하는 1이상의 정수 S가 빈칸을 사이에 두고 주어진다. 다음 이어지는 N개의 줄 각각에는 한 그림의 높이와 가격을 나타내는 정수 H와 C가 빈칸을 사이에 두고 주어진다. 단, 1 ≤ S ≤ H ≤ 20,000,000, 1 ≤ C ≤ 1,000이다. </p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 판매가능 그림들의 가격의 합이 최대가 되도록 배치했을 때 그 최대 합을 출력한다. </p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 4
15 80
8 230
10 100
17 200
20 75
26 80
','510
','BINARY_SEARCH'),
                                                                                                                                        (14602,'BAEKJOON','https://www.acmicpc.net/problem/2532',2532,'먹이사슬','1초','256 MB',17,'<p>1부터 N까지 번호가 붙여져 있는 N마리 서로 다른 동물이 있다. 모든 동물은 동일한 하나의 수평선 상에서 연속된 구간 내에서 활동한다. 이 구간을 그 동물의 활동영역이라 한다. 동물의 활동영역은 구간의 왼쪽 위치와 오른쪽 위치 쌍으로 나타낸다. 예를 들어, 7마리 동물의 활동영역이 다음 그림과 같다고 하자. 각 동물의 활동 영역은 선분으로 나타내어져 있다. 아래에서 동물 1의 활동영역은 (2, 4), 동물 2의 활동영역은 (6, 10), ..., 동물 7의 활동영역은 (3, 4)이다.</p>

<p style="text-align: center;"><img alt="" src=https://www.acmicpc.net/upload/images/hgfgd.png" style="height: 106px; width: 230px;"></p>

<p>활동영역이 (x<sub>1</sub>, x<sub>2</sub>)인 동물 i와 (x<sub>3</sub>, x<sub>4</sub>)인 동물 j에 대하여, 다음 세 조건 중 하나를 만족하면 i가 j보다 먹이사슬에서 상위에 있다고 한다.&nbsp;</p>

<ul>
	<li><strong>조건 1:</strong> x<sub>1</sub> < x<sub>3</sub> 이고 x<sub>2</sub> > x<sub>4</sub></li>
	<li><strong>조건 2</strong>: x<sub>1</sub> = x<sub>3</sub> 이고 x<sub>2</sub> > x<sub>4</sub> &nbsp;</li>
	<li><strong>조건 3</strong>: x<sub>1</sub> < x<sub>3</sub> 이고 x<sub>2</sub> = x<sub>4</sub>&nbsp;</li>
</ul>

<p>동물들의 집단에 대하여 다음 조건을 만족하면서 모든 동물들을 나열 할 수 있으면, 이 집단은 먹이사슬 구조를 가진다고 말한다.</p>

<p><strong>조건</strong>: 나열된 각 동물은 뒤에 나오는 모든 동물보다 먹이사슬에서 상위에 있다.&nbsp;</p>

<p>단, 하나의 동물로 이루어진 집단도 먹이사슬 구조를 가진다고 말한다. 먹이사슬 구조를 가지는 동물 집단의 크기는 이 집단에 속하는 동물의 수로 정의한다.&nbsp;</p>

<p>동물들의 활동영역이 주어질 때, 먹이사슬 구조를 가지는 동물 집단의 최대 크기를 구하는 프로그램을 작성하시오.&nbsp;</p>

<p>앞의 그림 예에서 먹이사슬 구조를 가지는 동물 집단의 예로 {1}, {2, 4}, {2, 6}, {1, 3}, {1, 3, 7}, ... 등이 있다. 집단 {1, 3, 7}에서 &nbsp;3은 1보다 상위이고 1은 7보다 상위로서 먹이사슬 구조를 가지는 최대 크기의 집단이다. 최대 크기 집단은 하나 이상일 수 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 동물의 수를 나타내는 N (1 ≤ N ≤ 500,000)이 주어진다. 다음 각 줄에 동물의 번호, 동물의 활동영역의 왼쪽 위치 L, 오른쪽 위치 R이 빈 칸을 사이에 두고 나온다. L, R은 1 이상 1,000,000,000 이하의 양의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>먹이사슬 구조를 가지는 최대 집단의 크기를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7
1 2 4
3 1 5
4 7 8
6 9 10
2 6 10
5 5 7
7 3 4
','3
','BINARY_SEARCH'),
                                                                                                                                        (14601,'BAEKJOON','https://www.acmicpc.net/problem/2539',2539,'모자이크','1초','128 MB',12,'<p>수찬이는 선생님을 도와서 교실 벽면을 장식할 모자이크 그림을 그리기로 하였다. 이를 위하여 직사각형 모양의 큰 도화지를 준비하여 교실 벽에 붙이고 1cm 간격으로 가로선과 세로선을 그려서 정사각형 모양의 칸을 만들고, 각 칸마다 같은 색의 물감으로 색칠을 하였다. 그런데 잘못 칠해진 칸이 있음을 발견하게 되었다.</p>

<p>수찬이는 도화지와 색깔이 같은 색종이를 사서 잘못 칠해진 칸에 색종이를 붙이고 다시 그리는 것이 좋겠다고 생각하고 선생님께 상의를 드렸다. 선생님께서는 정해진 장수의 색종이를 사용하여 아래와 같은 조건을 따르면서 잘못 칠해진 칸을 모두 가리되, 가장 작은 색종이의 크기를 구하는 새로운 문제를 내셨다.</p>

<ol>
	<li>사용되는 색종이는 모두 크기가 같고 정사각형 모양이다.</li>
	<li>색종이 크기는 한 변의 길이로 나타내며, 원하는 크기의 색종이는 모두 구할 수 있다.</li>
	<li>모든 색종이는 반드시 도화지의 밑변에 맞추어 붙인다. 이때 색종이를 겹쳐서 붙일 수 있다.</li>
</ol>

<p>도화지 위의 행은 다음 그림과 같이 맨 아래에서 위쪽으로 1번부터 순서대로 번호가 매겨져 있고, 열은 왼쪽에서 오른쪽으로 1번부터 번호가 매겨져 있다. 이 그림은 도화지에 가로선과 세로선을 그어서 4개의 행과 14개의 열, 그리고 56개의 칸으로 나눈 모양을 보여준다. 잘못 칠해진 칸은 회색으로 표시되어 있다.  </p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/c954c2d8-b39f-4918-bba7-9a3ea6fb0d14/-/preview/" style="width: 261px; height: 89px;"></p>

<p>도화지 위의 칸은 행 번호와 열 번호로 나타낸다. 예를 들어 위 그림에서 가장 왼쪽에 있는 잘못 칠해진 칸 A의 위치는 (2, 1)이다. 위 그림과 같이 도화지에서 잘못 칠해진 칸이 9개 주어지고 색종이 4장을 사용한다면 가장 작은 색종이의 크기는 3cm이다.</p>

<p>도화지의 행의 개수와 열의 개수, 그리고 도화지에 잘못 칠해진 칸들의 위치가 주어질 때, 주어진 장수의 색종이를 사용하여 앞의 세 가지 조건에 따라 모든 잘못 칠해진 칸을 가릴 수 있는 가장 작은 색종이의 크기를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 도화지 위의 행의 개수와 열의 개수를 나타내는 자연수가 빈칸을 사이에 두고 주어진다. 행의 개수와 열의 개수는 모두 1000000 이하이다. 둘째 줄에는 사용할 색종이의 장수를 나타내는 자연수가 주어진다. 사용할 색종이는 100장 이하이다. 셋째 줄에는 도화지에 잘못 칠해진 칸의 개수를 나타내는 자연수가 주어진다. 잘못 칠해진 칸은 1000개 이하이다. 넷째 줄부터 마지막 줄까지 잘못 칠해진 칸의 위치가 한 줄에 하나씩 주어진다. 잘못 칠해진 칸의 위치는 빈칸을 사이에 두고 행 번호가 주어진 다음 열 번호가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 주어진 장수의 색종이를 사용하여 잘못 칠해진 칸을 모두 가릴 수 있는 가장 작은 색종이의 크기가 몇 cm인지를 나타내는 자연수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 14
4
9
1 2
2 1
2 3
1 6
3 5
1 10
3 6
1 12
2 13
','3
','BINARY_SEARCH'),
                                                                                                                                        (14603,'BAEKJOON','https://www.acmicpc.net/problem/2543',2543,'초고속철도','1초','128 MB',17,'<p>최고 속력 600 km/h로 운행하는 것을 목표로 하는 ‘한국형 초고속철도 사업’이 순조롭게 진행되고 있다. 이미 초고속철도의 시험선로를 구축하였고 열차를 시험운행하고 있다. 그리고 선로의 상태를 검사하기 위하여, 선로의 지정된 검사구간을 담당하는 로봇을 설치하였다. 그런데 검사구간이 서로 겹치는 로봇 사이에는 빈번한 데이터 교환이 필요하다. 따라서 이를 지원할 데이터 송수신 장치를 모든 로봇에 설치할 뿐만 아니라, 특별한 데이터 처리장치를 로봇에 부착하기로 하였다. 그러나 이 처리장치는 모든 로봇에 부착하지 않아도 되지만, 두 로봇이 담당하고 있는 검사구간이 서로 겹치면 이 두 로봇 중에서 적어도 하나에는 반드시 부착되어야 한다.</p>

<p>아래 그림과 같은 시험선로에서 네 개의 로봇 a, b, c, d가 있고, 각 로봇의 검사구간은 아래와 같다고 하자. 로봇 a와 b는 담당하는 선로의 검사구간이 겹치므로 둘 중 최소한 하나에 처리장치가 부착되어야 한다. 로봇 b와 c, b와 d, 그리고 c와 d의 경우도 마찬가지이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/47b8f973-34b6-4e0b-9e0d-160053edcb06/-/preview/" style="width: 335.833px; height: 83.3333px;"></p>

<p>위의 조건을 만족하면서 처리장치를 부착하는 것은 여러 가지 경우가 있을 수 있다. 위 그림의 예에서 {a, b, c, d} 모두에 부착할 수도 있고, {b, c}에 부착할 수도 있다. 우리 팀에서는 어떤 로봇에 처리장치를 부착하는 것이 좋은 지를 연구하고 있는데, 우선 위 조건을 만족하면서 처리장치를 부착할 수 있는 모든 경우의 수를 구하여 보기로 하였다. 위의 예에서 가능한 경우를 모두 나열해보면 {a, b, c, d}, {a, b, c}, {a, b, d}, {a, c, d}, {b, c, d}, {b, d}, {b, c}, 총 일곱 가지 경우가 있다.</p>

<p>시험선로를 눈금이 매겨진 직선으로 나타내며, 로봇의 검사구간은 이 직선 위에 있다고 할 때, 로봇들이 담당하는 선로의 검사구간을 입력 받아 로봇에 처리장치를 부착할 수 있는 모든 경우의 수를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 로봇의 개수 N (1 ≤ N ≤ 100,000)이 입력된다. 둘째 줄부터 N 개의 줄에 한 줄에 하나씩 로봇이 담당하는 검사구간의 왼쪽 끝점의 좌표와 오른쪽 끝점의 좌표가 빈 칸을 사이에 두고 주어진다. 이들 좌표는 모두 0 이상 10,000,000 이하인 정수이다. 각 검사구간의 왼쪽 끝점의 좌표가 오른쪽 끝점의 좌표보다 항상 작다. 또한 검사구간들의 끝점들의 좌표는 모두 서로 다르다. 다시 말하면, 어떤 좌표 값에도 두 개 이상의 검사구간의 끝점이 위치하지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 문제의 조건을 만족하면서 처리장치를 부착할 수 있는 경우의 수를 출력한다. 만약 경우의 수가 20,070,713 이상일 때에는 20,070,713으로 나눈 나머지를 출력한다. 또한 계산 도중 오버플로우가 발생할 수 있음을 유의하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
6 20
13 49
29 41
34 55
','7
','BINARY_SEARCH'),
                                                                                                                                        (14608,'BAEKJOON','https://www.acmicpc.net/problem/2613',2613,'숫자구슬','1초','128 MB',14,'<p>N개의 숫자 구슬이 <그림 1>과 같이 막대에 꿰어져 일자로 놓여 있다. 이들 구슬은 막대에서 빼낼 수 없고,&nbsp;바꿀 수 없다.</p>

<p style="text-align: center;"><img alt="" src=https://www.acmicpc.net/upload/images/zpnX89PzMGeEESangEe4ecW.png" style="width: 321px; height: 76px; "></p>

<p>이 숫자 구슬을 M개의 그룹으로 나누었을 때 각각의 그룹의 합 중 최댓값이 최소가 되도록 하려 하다. 예를 들어 세 그룹으로 나눈다고 할 때 <그림 2>와 같이 그룹을 나누면 그룹의 합은 각각 11, 15, 18이 되어 그 중 최댓값은 18이 되고, <그림 3>과 같이 나누면 각 그룹의 합은 각각 17, 12, 15가 되어 그 중 최댓값은 17이 된다. 숫자 구슬의 배열이 위와 같을 때는 그룹의 합 중 최댓값이 17보다 작게 만들 수는 없다. 그룹에 포함된 숫자 구슬의 개수는 0보다 커야 한다.</p>

<p style="text-align: center;"><img alt="" src=https://www.acmicpc.net/upload/images/9CfPHHJIQowLabmJuT.png" style="width: 321px; height: 203px; "></p>

<p>각 그룹의 합 중 최댓값이 최소가 되도록 M개의 그룹으로 나누었을 때, 그 최댓값과 각 그룹을 구성하는 구슬의 개수를 찾아 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 구슬의 개수 N과 그룹의 수 M이 주어진다. 둘째 줄에는 각 구슬이 적혀진 숫자가 왼쪽부터 차례로 주어진다. N은 300 이하의 자연수, M은 N이하의 자연수이며, 구슬에 적혀진 숫자는 100 이하의 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 그룹의 합 중 최댓값이 최소가 되도록 M개의 그룹으로 나누었을 때 그 최댓값을 첫째 줄에 출력하고, 둘째 줄에는 각 그룹을 구성하는 구슬의 개수를 왼쪽부터 순서대로 출력한다. 구슬의 개수를 출력할 때는 사이에 한 칸의 공백을 둔다. 만약 그룹의 합의 최댓값이 최소가 되도록 하는 경우가 둘 이상이라면 그 중 하나만을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8 3
5 4 2 6 9 3 8 7
','17
4 2 2
','BINARY_SEARCH'),
                                                                                                                                        (14610,'BAEKJOON','https://www.acmicpc.net/problem/2632',2632,'피자판매','2초','128 MB',14,'<p>고객이 두 종류의 피자 A와 B를 취급하는 피자가게에서 피자를 주문하고자 한다. <그림 1>과 같이 각 종류의 피자는 다양한 크기의 여러 개의 피자조각으로 나누어져 있다. 각 조각에 쓰여진 숫자는 피자조각의 크기를 나타낸다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/716aac2f-1375-4484-bf48-023e0fd3d665/-/preview/" style="width: 253px; height: 149px;"></p>

<p style="text-align: center;"><그림 1></p>

<p>고객이 원하는 피자의 크기를 이야기하면, 피자가게에서는 한 종류의 피자를 2 조각 이상 판매할 때는 반드시 연속된 조각들을 잘라서 판매한다. 이때 판매한 피자조각의 크기 합이 주문한 크기가 되어야 한다. 판매한 피자조각은 모두 A종류이거나, 모두 B종류이거나, 또는 A와 B 종류가 혼합될 수 있다. 예를 들어서, <그림 1> 과 같이 잘라진 피자가 있을 때, 손님이 전체 크기가 7 인 피자를 주문하면, 피자 가게에서는 <그림2>와 같이 5 가지 방법으로 피자를 판매할 수 있다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/11e274ec-7970-42ad-9ffa-6d926b261f19/-/preview/" style="width: 259px; height: 472px;"></p>

<p style="text-align: center;"><그림 2></p>

<p>피자가게에서 손님이 원하는 크기의 피자를 판매하는 모든 방법의 가지 수를 계산하는 프로그램을 작성하시오</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 손님이 구매하고자 하는 피자크기를 나타내는 2,000,000 이하의 자연수가 주어진다. 두 번째 줄에는 A, B 피자의 피자조각의 개수를 나타내 는 정수 m, n 이 차례로 주어진다 (3 ≤ m, n ≤ 1000). 세 번째 줄부터 차례로 m 개의 줄에는 피자 A의 미리 잘라진 피자조각의 크기를 나타내는 정수가 주어진다. 그 다음 n 개의 줄에는 차례로 피자B의 미리 잘라진 피자조각의 크기를 나타내는 정수가 주어진다. 각 종류의 피자조각의 크기는 시계방향으로 차례로 주어지며, 각 피자 조각의 크기는 1000 이하의 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에는 피자를 판매하는 방법의 가지 수를 나타내는 정수를 출력한다. 피자를 판매하는 방법이 없는 경우에는 숫자 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7
5 3
2
2
1
7
2
6
8
3
','5
','BINARY_SEARCH'),
                                                                                                                                        (14605,'BAEKJOON','https://www.acmicpc.net/problem/2792',2792,'보석 상자','1초','128 MB',10,'<p>보석 공장에서 보석 상자를 유치원에 기증했다. 각각의 보석은 M가지 서로 다른 색상 중 한 색상이다. 원장 선생님은 모든 보석을 N명의 학생들에게 나누어 주려고 한다. 이때, 보석을 받지 못하는 학생이 있어도 된다. 하지만, 학생은 항상 같은 색상의 보석만 가져간다.</p>

<p>한 아이가 너무 많은 보석을 가져가게 되면, 다른 아이들이 질투를 한다. 원장 선생님은 이런 질투심을 수치화하는데 성공했는데, 질투심은 가장 많은 보석을 가져간 학생이 가지고 있는 보석의 개수이다. 원장 선생님은 질투심이 최소가 되게 보석을 나누어 주려고 한다.</p>

<p>상자에 빨간 보석이 4개 (RRRR), 파란 보석이 7개 (BBBBBBB) 있었고, 이 보석을 5명의 아이들에게 나누어 주는 경우를 생각해보자. RR, RR, BB, BB, BBB로 보석을 나누어주면 질투심은 3이 되고, 이 값보다 작게 나누어 줄 수 없다.</p>

<p>상자 안의 보석 정보와 학생의 수가 주어졌을 때, 질투심이 최소가 되게 보석을 나누어주는 방법을 알아내는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 아이들의 수 N과 색상의 수 M이 주어진다. (1 ≤ N ≤ 10<sup>9</sup>, 1 ≤ M ≤ 300,000, M ≤ N)</p>

<p>다음 M개 줄에는 구간 [1, 10<sup>9</sup>]에 포함되는 양의 정수가 하나씩 주어진다. K번째 줄에 주어지는 숫자는 K번 색상 보석의 개수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 질투심의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 2
7
4
','3
','BINARY_SEARCH'),
                                                                                                                                        (14606,'BAEKJOON','https://www.acmicpc.net/problem/2802',2802,'크레용','5초','160 MB',18,'<p>창영이는 생일 선물로 크레용 N개를 받았다. 각 크레용의 색은 빨강, 초록, 파랑이 혼합으로 나타낼 수 있다. i번 크레용의 색은 빨강 성분 R<sub>i</sub>, 초록 성분 G<sub>i</sub>, 파랑 성분 B<sub>i</sub>로 나타낼 수 있다.</p>

<p>i번 크레용과 j번 크레용의 거리는 max(|R<sub>i</sub> - Rj|, |G<sub>i</sub> - G<sub>j</sub>|, |B<sub>i</sub> - B<sub>j</sub>|) 이다. 크레용 여러 개의 채도는 두 크레용의 거리 중 가장 큰 값이다.</p>

<p>창영이는 가지고 있는 크레용 중에서 채도가 가장 작게 되는 크레용 K개를 고르려고 한다. 이때, 어떻게 고르면 채도가 최소가 되는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 K가 주어진다. (2 ≤ K ≤ N ≤ 100,000)</p>

<p>다음 N개 줄에는 각 크레용의 색상 성분 R<sub>i</sub>, G<sub>i</sub>, B<sub>i</sub>가 주어진다. (0 ≤ R<sub>i</sub>, G<sub>i</sub>, B<sub>i</sub> ≤ 255)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 K개를 골랐을 때, 가장 작은 채도를 출력한다. 다음 K개 줄에는 고른 크레용의 R, G, B 성분을 한 줄에 하나씩 출력한다.&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 2
1 3 2
2 6 4
','3
1 3 2
2 6 4
','BINARY_SEARCH'),
                                                                                                                                        (14607,'BAEKJOON','https://www.acmicpc.net/problem/2805',2805,'나무 자르기','1초','256 MB',9,'<p>상근이는 나무 M미터가 필요하다. 근처에 나무를 구입할 곳이 모두 망해버렸기 때문에, 정부에 벌목 허가를 요청했다. 정부는 상근이네 집 근처의 나무 한 줄에 대한 벌목 허가를 내주었고, 상근이는 새로 구입한 목재절단기를&nbsp;이용해서 나무를 구할것이다.</p>

<p>목재절단기는 다음과 같이 동작한다. 먼저, 상근이는 절단기에 높이 H를 지정해야 한다. 높이를 지정하면 톱날이 땅으로부터 H미터 위로 올라간다. 그 다음, 한 줄에 연속해있는 나무를 모두 절단해버린다. 따라서, 높이가 H보다 큰 나무는 H 위의 부분이 잘릴 것이고, 낮은 나무는 잘리지 않을 것이다. 예를 들어, 한 줄에 연속해있는 나무의 높이가 20, 15, 10, 17이라고 하자. 상근이가 높이를 15로 지정했다면, 나무를 자른 뒤의 높이는 15, 15, 10, 15가 될 것이고, 상근이는 길이가 5인 나무와 2인 나무를 들고 집에 갈 것이다. (총 7미터를 집에 들고 간다) 절단기에 설정할 수 있는 높이는 양의 정수 또는 0이다.</p>

<p>상근이는 환경에 매우 관심이 많기 때문에, 나무를 필요한 만큼만 집으로 가져가려고 한다. 이때, 적어도 M미터의 나무를 집에 가져가기 위해서 절단기에 설정할 수 있는 높이의 최댓값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 나무의 수 N과 상근이가 집으로 가져가려고 하는 나무의 길이 M이 주어진다. (1 ≤ N ≤ 1,000,000, 1 ≤ M ≤ 2,000,000,000)</p>

<p>둘째 줄에는 나무의 높이가 주어진다. 나무의 높이의 합은 항상 M보다 크거나 같기 때문에, 상근이는 집에 필요한 나무를 항상 가져갈 수 있다. 높이는 1,000,000,000보다 작거나 같은 양의 정수 또는 0이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>적어도 M미터의 나무를 집에 가져가기 위해서 절단기에 설정할 수 있는 높이의 최댓값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 7
20 15 10 17
','15
','BINARY_SEARCH'),
                                                                                                                                        (14611,'BAEKJOON','https://www.acmicpc.net/problem/2819',2819,'상근이의 로봇','1초','128 MB',14,'<p>상근이는 새로운 로봇을 만들었다. 이 로봇의 성능을 시험하기 위해서 테스트 트랙 위에서 테스트하기로 했다. 테스트 트랙은 2차원 평면이다. 가장 처음에 로봇은 (0,0)에서 시작한다. 상근이는 로봇에게 S, J, I, Z중 하나의 명령을 보낸다. 이 명령은 로봇이 움직여야 하는 방향을 나타낸다.</p>

<p>로봇이 현재 (x,y)에 있다고 하자. S(north)는 (x, y+1)로, J(south)는 (x,y-1)로, I(east)는 (x+1,y)로, Z(west)는 (x-1,y)로 이동하라는 의미이다.</p>

<p>상근이는 로봇이 올바르게 움직이는지 확인하기 위해서 테스트 트랙 위에 N개의 고정된 조사점을 설치했다. 로봇은 명령을 수행할 때마다, 각 조사점과의 거리의 합을 상근이에게 전송한다. 이때, 거리는 맨해튼 거리이다.</p>

<p>로봇이 상근이에게 전송한 값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 조사점의 수 N과 명령의 수 M이 주어진다. (1 ≤ N ≤ 100,000, 1 ≤ M ≤ 300,000)</p>

<p>다음 N개 줄에는 조사점의 x좌표와 y좌표가 주어진다. 모든 좌표의 절댓값은 백만보다 작거나 같은 정수이다. 같은 좌표를 가지는 조사점이 여러 개 있을 수도 있다. 이때는, 각각의 거리를 따로 계산해서 합해야 한다.</p>

<p>마지막 줄에는 상근이가 로봇에게 전송한 명령이 순서대로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 총 M줄이다. i번째 줄에는, i번째 명령을 수행하고 난 후에 상근이에게 전송한 값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1 3
0 -10
ISI
','11
12
13
','BINARY_SEARCH'),
                                                                                                                                        (14609,'BAEKJOON','https://www.acmicpc.net/problem/2855',2855,'흥미로운 수열','1초','128 MB',18,'<p>2*K개로 이루어진 수열이 있을 때, 처음 K개의 원소의 합과 마지막 K개의 원소의 합이 S를 넘지 않을 때, 이 수열을 흥미로운 수열이라고 한다.</p>

<p>크기가 N인 수열이 주어졌을 때, 각각의 수열의 원소에서 시작하는 부분 연속 수열 중 가장 긴 흥미로운 수열의 길이를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 S가 주어진다. (2 ≤N ≤ 100,000, 1 ≤ S ≤&nbsp;2×10<sup>9</sup>)</p>

<p>둘째 줄부터 N개의 줄에 수열 A의 원소가 한 줄에 하나씩 주어진다. 이 수는 양수이며, 수열 A의 모든 원소의 합은 2×10<sup>9</sup>를 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 총 N개의 줄로 이루어져 있다. i번째 줄에는 i번째 원소에서 시작하는 가장 긴 흥미로운 수열의 길이를 출력한다. 만약 흥미로운 수열이 없을 때는 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 10000
1
1
1
1
1
','4
4
2
2
0
','BINARY_SEARCH'),
                                                                                                                                        (14612,'BAEKJOON','https://www.acmicpc.net/problem/2878',2878,'캔디캔디','1초','128 MB',14,'<p>오늘 사탕 M개를 가득 담은 박스가 택배로 택희네 집에 도착했다. 택희는 이 사탕을 N명의 친구들에게 나누어 주려고 한다.</p>

<p>택희의 친구들은 문자로 사탕을 몇 개 받고 싶은지 보냈다. 만약 받고 싶은 개수만큼 사탕을 받지 못한다면, 그 친구는 분노하게 되고, 못 받는 개수가 많아질 수록 더욱 분노하게 된다.</p>

<p>놀랍게도 택희는 친구들의 분노를 수치화 할 수 있는데, 이것은 못 받는 사탕 개수의 제곱이다.</p>

<p>예를 들어, 택희의 친구 백준이가 받고 싶은 사탕의 개수가 32개였을 때, 사탕을 29개 받아 3개를 받지 못한다면, 그의 분노는 3의 제곱 9가 된다.</p>

<p>택희가 받은 사탕의 개수와 친구의 수, 그리고 그 친구들이 받고 싶어하는 사탕의 개수가 주어졌을 때, 사탕을 적절히 나누어 주어 친구들의 분노의 합을 최소화해 그 값을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 M(1 ≤&nbsp;M ≤ 2×10<sup>9</sup>)와 N(1 ≤ N ≤ 100,000)이 주어진다. 둘째 줄부터 N개의 줄에는 각 친구들이 받고 싶어하는 사탕의 개수가 주어진다. 이 개수는 2×10<sup>9</sup>보다 작으며, 친구들이 받고 싶어하는 사탕의 개수의 합은 항상 M을 넘는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 택희 친구들의 분노의 합의 최솟값을 2<sup>64</sup>로 나눈 나머지를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 3
1
3
2
','1
','BINARY_SEARCH'),
                                                                                                                                        (14616,'BAEKJOON','https://www.acmicpc.net/problem/2881',2881,'산책길','1초','128 MB',14,'<p>정부는 오크 나무 숲을 통과하는 산책길를 만들려고 한다. 숲을 평면으로 나타낼 수 있고, 나무 N개는 평면위의 격자점으로 나타낼 수 있다.</p>

<p>산책길은 축에 평행한 직사각형으로 나타낸다. 산책길의 변 위에 있는 나무는 베어내야 한다. 산책길 내부에 있는 나무는 문제가 되지 않으며, 베어내지 않아도 된다.</p>

<p>산림청에서는 산책길 계획을 공모전으로 열었고, 총 P개의 산책길가 접수되었다. 각각의 접수된 산책길에 대해서, 그 산책길를 만들려면 나무를 몇 개나 잘라내야하는지 구하는 프로그램을 작성하시오. 나무는 변 위에 있는 나무만 베어야한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 나무의 수 N이 주어진다. (1 ≤ N ≤ 300,000)</p>

<p>다음 N개 줄에는 나무의 좌표 X와 Y가 한 줄에 하나씩 주어진다. 한 점위에 나무가 두 개 이상 있는 경우는 없다. (1 ≤ X, Y ≤ 10<sup>9</sup>)</p>

<p>다음 줄에는 접수된 산책로 계획의 수 P (1 ≤ P ≤ 100,000)가 주어진다.</p>

<p>다음 P개 줄에는 X1, Y1, X2, Y2 (1 ≤ X1 < X2 ≤ 10<sup>9</sup>, 1 ≤ Y1 < Y2 ≤ 10<sup>9</sup>)가 주어진다. (X1, Y1)은 직사각형의 왼쪽 아래 좌표, (X2, Y2)는 오른쪽 위 좌표를 나타낸다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>총 P개의 줄에 각 산책로를 건설하려면 나무를 몇 개나 베어야 하는지 출력한다. 입력으로 주어진 순서를 지켜 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/f1780a29-d9a1-4568-a458-c2ec51fb2181/-/preview/" style="width: 217px; height: 218px;"></p>

				</div>
				</div>','6
1 2
3 2
2 3
2 5
4 4
6 3
4
2 2 4 4
2 2 6 5
3 3 5 6
5 1 6 6
','3
4
0
1
','BINARY_SEARCH'),
                                                                                                                                        (14613,'BAEKJOON','https://www.acmicpc.net/problem/2962',2962,'동물원 확장','1초','128 MB',16,'<p>네버랜드는 한국에서 가장 큰 규모를 자랑하는 동물원이다. 이번에 이 동물원은 야생 상태와 흡사한 생태 단지를 만들기 위해서 근처 부지를 구입했다.</p>

<p>동물원에서 가장 인기있는 동물은 원숭이이다. 원숭이는 점프하고 나무를 기어 오르는 것과 같은 기술을 이용해서 남녀노소 모든 방문객을 즐겁게 해준다.</p>

<p>원숭이는 크게 두 종으로 나눌 수 있다. 한 종은 나무를 오르고, 코코넛을 따는 것에 특화되어 있는 종이고, 다른 종은 코코넛을 여는데 특화되어있다.</p>

<p>첫 번째 원숭이 종은 총 N마리, 두 번째는 M마리가 있다. 각각의 종은 번호가 1부터 차례대로 매겨져 있다.</p>

<p>첫 번째 종의 원숭이 중 k번째 원숭이는 오를 나무를 찾아 첫 코코넛을 따는데 A<sub>k</sub>초가 걸린다. 이후에 B<sub>k</sub>초마다 새로운 코코넛을 생산한다.</p>

<p>두 번째 종의 원숭이 중 k번째 원숭이는 코코넛을 여는 좋은 도구를 찾고, 첫 코코넛을 여는데 C<sub>k</sub>초가 걸린다. 이후 D<sub>k</sub>초마다 새로운 코코넛을 열 수 있다.</p>

<p>안타깝게도, 두 원숭이 종은 서로 사이가 좋지 않기 때문에 동시에 같은 장소에 있을 수 없다. 따라서, 동물원 사육사는 첫 번째 원숭이 종이 코코넛을 모두 따면 즉시 우리로 돌려 보내고 두 번째 종을 부를 것이다.</p>

<p>동물원 사육사는 첫 번째 종이 모든 코코넛을 따는 즉시 도착한다. 우리로 보내는 시간과 우리에서 원숭이를 불러오는 시간은 무시할 수 있을 만큼 매우 작다.</p>

<p>상근이는 두 번째 종을 매우 좋아한다. 하지만, 언제 가야 되는지를 모르고 있다. 원숭이가 생태 단지에 있는 전체 시간이 주어졌을 때, 언제 도착하면 두 번째 원숭이를 볼 수 있는지 구하는 프로그램을 작성하시오. 상근이는 전체 코코넛의 개수를 알 수 없다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 원숭이가 생태 부지에 있는 전체 시간 T (1 ≤ T ≤ 1,000,000,000)가 주어진다.</p>

<p>둘째 줄에는 첫 번째 원숭이의 수 N이 주어진다. (1 ≤ N ≤ 100)</p>

<p>다음 N개 줄에는 k번째 원숭이의 정보 A<sub>k</sub>와 B<sub>k</sub>가 주어진다. (1 ≤ A<sub>k</sub>, B<sub>k</sub> ≤ 1,000,000,000)</p>

<p>다음 줄에는 두 번째 원숭이의 수 M이 주어진다. (1 ≤ M ≤ 100)</p>

<p>다음 M개 줄에는 k번째 원숭이의 정보 C<sub>k</sub>와 D<sub>k</sub>가 주어진다. (1 ≤ C<sub>k</sub>, D<sub>k</sub>, ≤ 1,000,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 첫 번째 종이 우리로 들어가는 시간이자 두 번째 종이 생태 단지로 들어오는 시간을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 예제는 코코넛이 세 개 있는 경우다.</p>

<p>첫 번째 종은 한 마리다. 이 원숭이가 나무를 올라서 첫 코코넛을 따는데 걸리는 시간은 3초이다. 그 다음 4초에 두 번째 코코넛을 따며, 5초에 세 번째 코코넛을 딴다.</p>

<p>사육사는 문을 연지 5초가 지났을 때, 생태 단지에 들어와서 첫 원숭이를 우리로 돌려보내고 두 번째 종을 생태 단지로 불러온다. 이 시간부터 두 번째 종을 볼 수 있기 때문에 정답은 5이다.</p>

<p>문을 연 시간부터 10초가 지나면 도구를 찾고 첫 코코넛을 따고, 11초에 두 번째 코코넛, 12초에 세 번째 코코넛을 딴다. 이제 사육사가 들어와서 다시 원숭이를 우리로 돌려 보낸다.</p>

				</div>
				</div>','12
1
3 1
1
5 1
','5
','BINARY_SEARCH'),
                                                                                                                                        (14615,'BAEKJOON','https://www.acmicpc.net/problem/2977',2977,'폭탄제조','1초','128 MB',15,'<p>효진이는 돈이 매우 많은 대학생이다. 어느 날, 효진이가 열심히 공부한 과목의 교수가 F학점을 주겠다고 농담을 했다. 하지만 효진이는 화가 나서 폭탄을 마구 만들어내 효진이가 소유한 개인소유의 섬에 무차별 폭파를 가하기로 했다. (효진이는 평화를 사랑하므로 대학교를 폭파하진 않는다.) 폭탄의 이름은 효진봄바이다. 효진봄바는 N개의 부품으로 이루어져있고, 효진봄바를 만들기 위해선 각 부품이 여러 개 필요하다.</p>

<p>효진이의 비밀창고에는 위의 부품들이 일부 보관돼있다. 효진이는 M달러로 암시장에 가서 부품들을 더 사려고 한다. 암시장엔 없는 부품이 없고, 소비자의 선택을 존중하기 위해 각 부품마다 소형 패키지와 대형 패키지가 준비돼있다.</p>

<p>효진이는 M달러로 부품들을 사, 폭탄을 최대한 많이 만들고 싶어한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 정수 N(1 ≤ N ≤ 100)과 M(1 ≤ M ≤ 100000)이 주어진다.</p>

<p>다음 N개의 각 줄마다 부품 하나의 정보를 의미하는 6개의 양의 정수가 주어진다.</p>

<ul>
	<li>X(10 ≤ X ≤ 100), 폭탄 한 개에 필요한 해당 부품의 개수</li>
	<li>Y(1 ≤ Y ≤ 100), 효진이의 비밀창고에 있는 해당 부품의 개수</li>
	<li>S<sub>M</sub>(1 ≤ S<sub>M</sub> < 100), 소형 패키지에 있는 부품의 개수</li>
	<li>P<sub>M</sub>(10 ≤ P<sub>M</sub> < 100), 소형 패키지의 가격</li>
	<li>S<sub>V</sub>(S<sub>M</sub> < S<sub>V</sub> ≤ 100), 대형 패키지에 있는 부품의 개수</li>
	<li>P<sub>V</sub>(P<sub>M</sub>< P<sub>V</sub> ≤ 100), 대형 패키지의 가격</li>
</ul>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>효진이가 M달러를 적절히 써서 만들 수 있는 폭탄의 최대 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제에서 99달러로 첫 번째 부품의 소형 패키지 3개와 대형 패키지 1개를, 두 번째 부품의 소형 패키지 1개와 대형 패키지 2개를 구입할 수 있다. (3·10 + 1·11 + 1·10 + 2·24 = 99)</p>

<p>비밀창고에는 첫 번째 부품이 51개 (8 + 3·10 + 1·13), 두 번째 부품이 60개 (20 + 1·6 + 2·17) 있게 되고 총 5개의 폭탄을 만들 수 있다.</p>

				</div>
				</div>','2 100
10 8 10 10 13 11
12 20 6 10 17 24
','5
','BINARY_SEARCH'),
                                                                                                                                        (14617,'BAEKJOON','https://www.acmicpc.net/problem/3008',3008,'직각 삼각형의 개수','1초','128 MB',17,'<p>2차원 평면 위에 점 N개가 있다.</p>

<p>세 점을 골랐을 때, 직각 삼각형을 이루는 것의 쌍의 수를 구하는 프로그램을 작성하시오. 직각 삼각형이란 한 각이 90도인 삼각형이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 점의 수 N이 주어진다. (3 ≤ N ≤ 1500)</p>

<p>다음 N개 줄에는 점의 x좌표와 y좌표가 공백으로 구분되어진 상태로 주어진다. 좌표는 -10<sup>9</sup>와 10<sup>9</sup> 사이이다. 두 점이 같은 좌표를 갖는 경우는 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 직각 삼각형의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
4 2
2 1
1 3
','1
','BINARY_SEARCH'),
                                                                                                                                        (14618,'BAEKJOON','https://www.acmicpc.net/problem/3020',3020,'개똥벌레','1초','128 MB',11,'<p>개똥벌레 한 마리가 장애물(석순과 종유석)로 가득찬 동굴에 들어갔다. 동굴의 길이는 N미터이고, 높이는 H미터이다. (N은 짝수) 첫 번째 장애물은 항상 석순이고, 그 다음에는 종유석과 석순이 번갈아가면서 등장한다.</p>

<p>아래 그림은 길이가 14미터이고 높이가 5미터인 동굴이다. (예제 그림)</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/c6fd496d-ccf5-4f9d-a06e-32b121fc6a82/-/preview/" style="width: 271px; height: 108px;"></p>

<p>이 개똥벌레는 장애물을 피하지 않는다. 자신이 지나갈 구간을 정한 다음 일직선으로 지나가면서 만나는 모든 장애물을 파괴한다.</p>

<p>위의 그림에서 4번째 구간으로 개똥벌레가 날아간다면 파괴해야하는 장애물의 수는 총 여덟개이다. (4번째 구간은 길이가 3인 석순과 길이가 4인 석순의 중간지점을 말한다)</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/bfcbb94f-0e15-4ff9-b2ef-43e07c7ee503/-/preview/" style="width: 292px; height: 108px;"></p>

<p>하지만, 첫 번째 구간이나 다섯 번째 구간으로 날아간다면 개똥벌레는 장애물 일곱개만 파괴하면 된다.</p>

<p>동굴의 크기와 높이, 모든 장애물의 크기가 주어진다. 이때, 개똥벌레가 파괴해야하는 장애물의 최솟값과 그러한 구간이 총 몇 개 있는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 H가 주어진다. N은 항상 짝수이다. (2 ≤ N ≤ 200,000, 2 ≤ H ≤ 500,000)</p>

<p>다음 N개 줄에는 장애물의 크기가 순서대로 주어진다. 장애물의 크기는 H보다 작은 양수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 개똥벌레가 파괴해야 하는 장애물의 최솟값과 그러한 구간의 수를 공백으로 구분하여 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 7
1
5
3
3
5
1
','2 3
','BINARY_SEARCH'),
                                                                                                                                        (14604,'BAEKJOON','https://www.acmicpc.net/problem/3066',3066,'브리징 시그널','1초','128 MB',14,'<p>
	ACM(Advanced Chip Manufacture)이라는 회사의 수석 칩(chip) 설계자인 한승이는 고민에 빠져있다. 경로 설계자들의 잘못으로 두 개의 블록의 포트를 연결하는 칩 위의 시그널들이 서로 교차하게 만들어졌다. 이 시점에서 경로 설계를 다시 하는 것은 비용이 너무 많이든다. 그 대신 엔지이너들은 교차하는 시그널들을 브리징 하기로 했다. 브리징은 시그널이 서로 교차하는 경우 하나의 시그널이 다른 시그널과 접촉하지 않도록 수직으로 띄우는 작업이다. 하지만 브리징은 어려운 작업이므로 가능하면 적은 수의 시그널만 브리징 해야한다. 실리콘 표면에서 서로 교차하지 않고 연결될 수 있는 최대 시그널의 개수를 찾는 프로그램을 작성하시오.</p>
<p>
	&nbsp;</p>
<table class="table table-bordered">
	<tbody>
		<tr>
			<td style="width:50%;text-align:center">
				<img alt="" src=https://www.acmicpc.net/upload/images/chip1.png" style="width: 139px; height: 184px;"></td>
			<td style="width:50%;text-align:center">
				<img alt="" src=https://www.acmicpc.net/upload/images/chip2.png" style="width: 139px; height: 183px;"></td>
		</tr>
		<tr>
			<td style="text-align:center">
				<strong>그림 1.</strong> 문제가 생긴 두 개의 블록의 포트와 포트를 연결하는 시그널</td>
			<td style="text-align:center">
				<strong>그림 2.</strong> 최대 세 개의 시그널이 서로 교차하지 않고 연결될 수 있다. 점선으로 표시된 시그널은 브리징 해야한다.</td>
		</tr>
	</tbody>
</table>
<p>
	&nbsp;</p>
<p>
	두 개의 블록의 포트는 1번부터 N번까지 위에서 아래로 번호가 매겨져 있다. 각 포트는 다른 블록의 한 포트와 연결된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력의 첫 줄에는 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 첫 번째 줄에 포트의 개수 N(1 ≤ N ≤ 40000)이 주어지고, 두 번째 줄부터는 왼쪽 블록의 포트와 연결되어야 하는 오른쪽 블록의 포트 번호 k<sub>i</sub>(1 ≤ k<sub>i</sub> ≤ N)가 한 줄에 하나씩 N개 주어진다. 즉, i+1번째 줄에는 왼쪽 블록의 i번 포트와 연결되어야 하는 오른쪽 블록의 포트 번호가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대해 서로 교차하지 않고 연결될 수 있는 최대 시그널의 개수를 한 줄에 하나씩 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
6
4
2
6
3
1
5
10
2
3
4
5
6
7
8
9
10
1
9
5
8
9
2
3
1
7
4
6
','3
9
4
','BINARY_SEARCH'),
                                                                                                                                        (14592,'BAEKJOON','https://www.acmicpc.net/problem/3079',3079,'입국심사','1초','128 MB',11,'<p>상근이와 친구들은 오스트레일리아로 여행을 떠났다. 상근이와 친구들은 총 M명이고, 지금 공항에서 한 줄로 서서 입국심사를 기다리고 있다. 입국심사대는 총 N개가 있다. 각 입국심사관이 심사를 하는데 걸리는 시간은 사람마다 모두 다르다. k번 심사대에 앉아있는 심사관이 한 명을 심사를 하는데 드는 시간은 T<sub>k</sub>이다.</p>

<p>가장 처음에 모든 심사대는 비어있고, 심사를 할 준비를 모두 끝냈다. 상근이와 친구들은 비행기 하나를 전세내고 놀러갔기 때문에, 지금 심사를 기다리고 있는 사람은 모두 상근이와 친구들이다. 한 심사대에서는 한 번에 한 사람만 심사를 할 수 있다. 가장 앞에 서 있는 사람은 비어있는 심사대가 보이면 거기로 가서 심사를 받을 수 있다. 하지만 항상 이동을 해야 하는 것은 아니다. 더 빠른 심사대의 심사가 끝나길 기다린 다음에 그 곳으로 가서 심사를 받아도 된다.</p>

<p>상근이와 친구들은 모두 컴퓨터 공학과 학생이기 때문에, 어떻게 심사를 받으면 모든 사람이 심사를 받는데 걸리는 시간이 최소가 될지 궁금해졌다.</p>

<p>예를 들어, 두 심사대가 있고, 심사를 하는데 걸리는 시간이 각각 7초와 10초라고 하자. 줄에 서 있는 사람이 6명이라면, 가장 첫 두 사람은 즉시 심사를 받으러 가게 된다. 7초가 되었을 때, 첫 번째 심사대는 비어있게 되고, 세 번째 사람이 그곳으로 이동해서 심사를 받으면 된다. 10초가 되는 순간, 네 번째 사람이 이곳으로 이동해서 심사를 받으면 되고, 14초가 되었을 때는 다섯 번째 사람이 첫 번째 심사대로 이동해서 심사를 받으면 된다. 20초가 되었을 때, 두 번째 심사대가 비어있게 된다. 하지만, 여섯 번째 사람이 그 곳으로 이동하지 않고, 1초를 더 기다린 다음에 첫 번째 심사대로 이동해서 심사를 받으면, 모든 사람이 심사를 받는데 걸리는 시간이 28초가 된다. 만약, 마지막 사람이 1초를 더 기다리지않고, 첫 번째 심사대로 이동하지 않았다면, 모든 사람이 심사를 받는데 걸리는 시간이 30초가 되게 된다.</p>

<p>상근이와 친구들이 심사를 받는데 걸리는 시간의 최솟값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 M이 주어진다. (1 ≤ N ≤ 100,000, 1 ≤ M ≤ 1,000,000,000)</p>

<p>다음 N개 줄에는 각 심사대에서 심사를 하는데 걸리는 시간인 T<sub>k</sub>가 주어진다. (1 ≤ T<sub>k</sub> ≤ 10<sup>9</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 상근이와 친구들이 심사를 마치는데 걸리는 시간의 최솟값을 출력한다. </p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 6
7
10
','28
','BINARY_SEARCH'),
                                                                                                                                        (14621,'BAEKJOON','https://www.acmicpc.net/problem/3244',3244,'두 부분 문자열 2','1초','128 MB',18,'<p>문자열 A의 부분 문자열이란, A에 속하는 하나 또는 그 이상의 문자(연속하지 않아도 된다)를 이용해서 만든 새로운 문자열이다. 이때, A에서의 순서를 그대로 유지해야 된다.</p>

<p>두 문자열 A와 B가 주어진다. 이때, A의 부분 문자열이면서, B의 부분 문자열이 아닌 가장 짧은 부분 문자열을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 문자열 A, 둘째 줄에 문자열 B가 주어진다. 문자열은 알파벳 소문자로만 이루어져 있고, 길이는 2000보다 작거나 같다. 항상 정답이 존재하는 경우만 입력으로 주어진다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 A의 부분 문자열이면서, B의 부분 문자열이 아닌 가장 짧은 부분 문자열의 길이를 출력하고, 둘째 줄에는 문자열을 출력한다. 만약, 가능한 문자열이 여러 가지인 경우에는 아무거나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','ababaa
abbaa
','3
bab
','BINARY_SEARCH'),
                                                                                                                                        (14628,'BAEKJOON','https://www.acmicpc.net/problem/3611',3611,'팀의 난이도','1초','128 MB',24,'<p>상근이는 개인이 소유한 한 중소기업의 CEO이다. 이 회사의 소유주는 자신의 아들 정인이를 회사의 팀장으로 임명했다. 상근이는 정인이가 일을 잘하면 소유주가 CEO자리를 정인이에게 줄 것이라고 생각한다. 다행히 그는 정인이의 팀에 속하는 사람을 정할 수 있다. 따라서 상근이는 정인이를 위해 최대한 일을 못하는 팀을 만들려고 한다.</p>

<p>상근이는 같은 팀에 속했을 때, 일을 못하는 사람들의 쌍을 모두 알고 있다. 상근이는 팀의 난이도라는 말을 주로 사용하는데, 이것은 같은 팀에 속했을 때, 일을 못하는 쌍의 수를 팀원의 수로 나눈 값이다. 팀의 난이도가 높아질수록 팀을 관리하는 것은 매우 어렵다.</p>

<p>팀의 난이도가 가장 높은 그룹을 찾는 프로그램을 작성하시오.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/hardteam.png" style="height:154px; width:155px"></p>

<p>위와 같은 경우에 난이도가 가장 높은 팀은 1, 2, 4, 5로 구성된 팀이다. 총 5개의 쌍이 일을 못하는 사람의 쌍이고, 이를 팀원의 수로 나누면 5/4가 된다. 예를 들어, 이 팀에 3을 추가하면, 난이도는 6/5로 감소하게 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫째 줄에는 직원의 수 n과 같은 팀에 속하면 일을 못하는 쌍의 수 m이 주어진다. (1 ≤ n ≤ 100, 0 ≤ m ≤ 1000)</p>

<p>다음 m개 줄에는 쌍에 속하는 두 사람의 번호 a<sub>i</sub>와 b<sub>i</sub>가 주어진다. (1 ≤ a<sub>i</sub>, b<sub>i</sub> ≤ n, a<sub>i</sub> ≠ b<sub>i</sub>) 같은 쌍이 두 번 주어지는 경우는 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에는 가장 난이도가 높은 팀에 속하는 사람의 수 k (1 ≤ k&nbsp;≤ n)를 출력한다. 그 다음 k개 줄에는 팀에 속하는 사람의 번호를 오름차순으로 출력한다. 난이도가 가장 높은 팀이 여럿인 경우에는 아무거나 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 6
1 5
5 4
4 2
2 5
1 2
3 1
','4
1
2
4
5
','BINARY_SEARCH'),
                                                                                                                                        (14630,'BAEKJOON','https://www.acmicpc.net/problem/3649',3649,'로봇 프로젝트','5초','256 MB',11,'<p>상근이와 선영이는 학교 숙제로 로봇을 만들고 있다. 로봇을 만들던 중에 구멍을 막을 두 레고 조각이 필요하다는 것을 깨달았다.</p>

<p>구멍의 너비는 x 센티미터이고, 구멍에 넣을 두 조각의 길이의 합은 구멍의 너비와 정확하게 일치해야 한다. 정확하게 일치하지 않으면, 프로젝트 시연을 할 때 로봇은 부수어질 것이고 상근이와 선영이는 F를 받게 된다. 구멍은 항상 두 조각으로 막아야 한다.</p>

<p>지난밤, 상근이와 선영이는 물리 실험실에 들어가서 레고 조각의 크기를 모두 정확하게 재고 돌아왔다. 구멍을 완벽하게 막을 수 있는 두 조각을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다.</p>

<p>각 테스트 케이스의 첫째 줄에는 구멍의 너비 x (1 ≤ x ≤ 20, x는 정수)가 주어진다. x의 단위는 센티미터이다.</p>

<p>다음 줄에는 물리 실험실에 있는 레고 조각의 수 n이 주어진다. (0 ≤ n ≤ 1000000)</p>

<p>다음 n개의 줄에는 레고 조각의 길이 ℓ이 주어진다. ℓ은 양의 정수이며,&nbsp;단위는 나노미터이다. 블록의 길이는 10 센티미터 (100000000 나노미터)를 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 한 줄에 하나씩, 구멍을 완벽하게 막을 수 있는 두 조각이 없다면 danger를 출력한다. 막을 수 있는 경우에는 yes ℓ<sub>1</sub> ℓ<sub>2</sub>를 출력한다. (ℓ<sub>1</sub> ≤ ℓ<sub>2</sub>)</p>

<p>정답이 여러 개인 경우에는 |ℓ<sub>1</sub> - ℓ<sub>2</sub>|가 가장 큰 것을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
4
9999998
1
2
9999999
','yes 1 9999999
','BINARY_SEARCH'),
                                                                                                                                        (14632,'BAEKJOON','https://www.acmicpc.net/problem/3666',3666,'리스크','3초','128 MB',21,'<p>리스크는 세계를 무대로 한 보드 위에서 진행되는 유명한 보드 게임이다. 이 세계는 국경선으로 나뉘어진 여러 지역으로 이루어져 있고, 각각의 지역은 하나의 플레이어에게 배정된다. 모든 지역엔 각 지역을 가진 플레이어의 군대가 하나 이상 주둔해야 한다.</p>

<p>각 턴마다, 당신은 당신의 군대를 제자리에 두거나 인접한 자신의 영토로 보낼 수 있다. 딱히 이동할 군대가 없다면 턴을 패스하는 것도 가능하다. 각 군대는&nbsp;현재 턴에 주둔한&nbsp;영역에서 인접한 영역으로의 이동만이 가능하며, 이와 같은 조건 하에서라면&nbsp;여러 번&nbsp;군대를&nbsp;이동시켜도 상관없다.&nbsp;필요하다면 나누어 보낼 수도 있지만, 모든 군대를 이동시켜 영토에 주둔하는 군대가 0이 되게 할 수는 없다.</p>

<p>일반적으로는 적의 영토와 인접한 영역에 최대한의 군대를 보내는 전략을 사용한다. 이번 턴에 당신은 당신이 가진 영역 중 가장 취약한 영역(즉, 적국과 인접해 있으며 아군의 수가 가장 적은 영역)을 최대한 강하게 만드려고 한다. 이때, 이번 턴이 끝나면 당신의 가장 취약한 영역에 최대 몇 명의 군대가 주둔할 수 있을까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 수가 주어진다. 이 수는 100을 넘지 않는다.</p>

<p>각 테스트 케이스는 다음과 같이 구성되어 있다.</p>

<ul>
	<li>정수 n ( 1&nbsp;≤ n&nbsp;≤ 100 ) : 영토의 총 수</li>
	<li>n개의 정수 ai ( 0&nbsp;≤ ai&nbsp;≤ 100 ) : 각 지역에 주둔하고 있는 당신의 군대 수. 만일 이 값이 0이라면 적군에 의해 점령된 지역임을 의미한다.</li>
	<li>n개의 줄에 걸쳐 n개의 문자 Y 또는 N : i행 j열의 문자는 i번째 영토와 j번째 영토의 인접 여부를 나타낸다. Y 일 경우 인접하며, N 일 경우 인접하지 않는다. 항상 대칭으로 주어지며, i번째 행의 i번째 열은 항상 N 이다.</li>
</ul>

<p>모든 테스트 케이스에서 당신은 적어도 하나의 영토를 갖고 있으며, 당신의 적 또한 최소한 하나의 영토를 갖고 있다. 또한, 최소한 적국과 하나의 영토는 서로 인접해 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 첫 줄에 가장 취약한 영역에 배치될 수 있는 최대의 군대 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
3
1 1 0
NYN
YNY
NYN
7
7 3 3 2 0 0 5
NYNNNNN
YNYYNNN
NYNYYNN
NYYNYNN
NNYYNNN
NNNNNNY
NNNNNYN
','1
4
','BINARY_SEARCH'),
                                                                                                                                        (14633,'BAEKJOON','https://www.acmicpc.net/problem/3745',3745,'오름세','1초','128 MB',14,'<p>주식투자를 좋아하는 정인이는 주가의 오름세를 살펴보려고 한다.</p>

<p>정인이는 n일 동안 매일 주가를 적어놓았고, 여기서 오름세를 찾아보려고 한다.</p>

<p>n일 동안의 주가를 p<sub>1</sub>, p<sub>2</sub>, ..., p<sub>n</sub>이라고 했을 때, 오름세란 부분수열 p<sub>i<sub>1</sub></sub> < p<sub>i<sub>2</sub></sub> < ... < p<sub>i<sub>k</sub></sub> (i<sub>1</sub> < i<sub>2</sub> < ... i<sub>k</sub>)을 말한다.</p>

<p>n일 동안 주가가 주어졌을 때, 가장 긴 오름세를 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스의 첫째 줄에는 주가를 관찰한 날의 수 N (N ≤ 100000)이 주어진다. 둘째 줄에는 관찰한 주가가 첫 날부터 순서대로 주어진다. 주가는 한 개 이상의 공백으로 구분되어 있으며, 그 외의 위치에서도 자유롭게 나올 수 있다. 주가는 100,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서 입력으로 주어진 주가의 가장 긴 오름세의 길이를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
5 2 1 4 5 3
3
1 1 1
4
4 3 2 1
','3
1
1
','BINARY_SEARCH'),
                                                                                                                                        (14636,'BAEKJOON','https://www.acmicpc.net/problem/3903',3903,'제주도','1초','128 MB',22,'<p>상근이는 추석 연휴에 아름다운 자연 경관을 자랑하는 제주도로 놀러가기로 했다. 제주도 지도를 보면서 여행 계획을 세우던 상근이는 갑자기 바다에서 가장 멀리 떨어져 있는 곳이 어딘지 궁금해졌다.</p>

<p>섬의 지도가 주어졌을 때, 바다와 가장 멀리 떨어져있는 곳을 구하는 프로그램을 작성하시오. 섬은 볼록 다각형이며, 단순 다각형이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스의 첫째 줄에는 섬의 꼭짓점의 개수 n(3 ≤ n ≤ 100)이 주어진다. 다음 N개 줄에는 꼭짓점의 x좌표와 y좌표가 반시계방향순서로 주어진다. 다각형은 선분 (xi, yi)-(xi+1, yi+1) (1 ≤ i ≤ n-1)과 (xn, yn)-(x1, y1)으로 이루어져 있다. 모든 좌표 값은 0보다 크거나 같고, 10000보다 작거나 같다.</p>

<p>입력의 마지막 줄에는 0이 하나 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서, 섬에서 가장 멀리 떨어져 있는 곳이 얼만큼 떨어져 있는지 거리를 출력한다. 정답과의 오차는 0.00001(10<sup>-5</sup>)까지 허용된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
0 0
10000 0
10000 10000
0 10000
3
0 0
10000 0
7000 1000
6
0 40
100 20
250 40
250 70
100 90
0 70
3
0 0
10000 10000
5000 5001
0
','5000.000000
494.233641
34.542948
0.353553
','BINARY_SEARCH'),
                                                                                                                                        (14642,'BAEKJOON','https://www.acmicpc.net/problem/4454',4454,'상근이의 여자친구','1초','128 MB',10,'<p>
	상근이는 여자친구를 데리러 가야 한다. 상근이의 차에는 기름이 t만큼 있고, 여자친구는 상근이가 현재 있는 위치와 m킬로미터 떨어져 있다.</p>

<p>
	상근이는 여자친구를 최대한 빨리 데리러 가야 하기 때문에, 중간에 주유소에 들릴 시간이 없다. 어렸을 때부터 물리, 수학 영재로 전국에 이름을 날리던 상근이는 차의 속도에 따라 소모되는 기름의 양을 계산했다.</p>

<p>
	속도가 시속 v 킬로미터 일 때, 한시간 동안 소모되는 기름의 양은 다음과 같다.</p>

<p>
	av<sup>4</sup> + bv<sup>3</sup> + cv<sup>2</sup> + dv</p>

<p>
	상근이는 출발할 때부터 도착할 때까지 일정한 속도로 이동한다. 기름이 바닥나지 않으면서 최대한 여자친구에게 빨리가려면 시속 몇 킬로미터로 이동해야 하는지 출력한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	입력은 여러 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 음이 아닌 여섯 개의 실수로 이루어져 있다. 이 실수는 순서대로 a, b, c, d, m, t이다. 모든 값은 1000을 넘지 않으며, c, d, m, t값은 양수이다. 항상 답이 존재하는 경우만 입력으로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대해서 기름이 바닥나지 않으면서 여자친구에게 가장 빨리 도착하려면 시속 몇 킬로미터로 달려야 하는지를 소수점 둘째자리까지 출력한다. (버림해서 출력한다.)</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','0.000001 0.0001 0.029 0.2 12 100
2.8e-8 7.6e-6 0.0013 0.47 11.65 20.81
1.559e-7 1.8195e-5 0.0022233 0.31292 58.902 85.585
','134.41
257.45
142.65
','BINARY_SEARCH'),
                                                                                                                                        (14651,'BAEKJOON','https://www.acmicpc.net/problem/5383',5383,'안녕! 난 루피! 장래에 해적왕이 될 사내다!','1초','128 MB',24,'<p>안녕! 난 몽키 D. 루피라고 해! 해적왕이 될 남자지! 우리는 며칠 전에 드디어 전설의 보물 원피스가 숨겨진 섬을 표시해 둔 보물지도를 손에 넣었어! 원피스가 뭐냐고? 에이 참, 그것도 모르다니... 전설의 해적왕 골 D. 로저가 숨겨놓은 보물이라구! 여튼, 이 보물지도를 보고 우리는 그 섬이 어딘지 찾아가야 해!</p>

<p>보물섬이 위치해 있는 해안은 아주 작은 섬들이 굉장히 많이 있다고 들었어. 그래서 섬을 하나하나 뒤져보는 건 너무 오래 걸린다구! 그런데 이 보물지도 좀 이상해. 보통 생각하는 조감 시점의 보물지도가 아니라, 보물섬의 정상에서 바닷가를 바라보았을 때 어떤 섬들이 보이는지만 그려놓았어. 이건 워낙에 그 바다가 위험천만하고 재해가 많이 일어나서였나&nbsp;봐.</p>

<p style="text-align:center"><img alt="" src=https://www.acmicpc.net/upload/images2/treasure.png" style="height: 154.167px; opacity: 0.9; text-align: center; width: 339.167px;"></p>

<p>예를 들면 왼쪽 그림이 실제 섬들의 위치이고, 오른쪽이 보물지도야. 보물지도에서 왼쪽에 그려진 섬은 실제로도 보물섬의 정상에서 바라보았을 때 왼쪽에 있다는 뜻이야. 그런데 그림을 그린 사람이 실력이 형편없었는지 두 섬이 떨어진 거리는 실제 보는 것과 차이가 심하다고 해. 게다가 이 해안이 안개까지 짙어서 실제로 안개에 가려서 보이지 않은 섬들은 그려지지도 않았어.&nbsp;다행히 시력은 좋아서 180도 전방을 다 그려냈고, 섬마다 정확한 표식을 해 놓아서 그 섬이&nbsp;어떤 섬인지는 확실히 알 수 있어.</p>

<p>만약 보물섬이 Rummet이었다고 치자면, Rummet에서 동쪽을 바라보았을 때 첫 번째 보물지도처럼 왼쪽부터 Wisket, Ginnet, Vinnet 섬 순으로 보일 것이고, 아니면 Liquorel, Cidrel 섬들이 보일 수도 있어. 아까 말했듯이 안개 때문에 몇몇 섬들이 그려지지 않은데다가, 실제로 볼 때 이 섬들 사이의 거리와 지도상에 그려진 거리는 아주 다르고 들쑥날쑥하지?</p>

<p>하지만 우리는 이제 보물지도뿐 아니라 그 해안에 어떤 섬이 있는지를 아주 정확히 나타내는 조감 시점의 지도도 찾았어! 이 지도들을 갖고 보물섬이 어딘지 찾아내서 기필코 해적왕이 되고 말 거야!&nbsp;보물섬을&nbsp;찾아낼 수 있겠어?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 테스트 케이스의 개수가 주어져. 각 테스트 케이스는 다음과 같은 형식으로 이루어져 있어.</p>

<ul>
	<li>첫 번째 줄에 섬의 개수를 나타내는 정수 n이 주어져. (1 ≤ n ≤ 125,000)</li>
	<li>이어서 N개의 줄에 각 섬의 좌표가 정수&nbsp;x<sub>i</sub>와 y<sub>i</sub>가 주어져.&nbsp;(0 < x<sub>i</sub>, y<sub>i</sub> < 2<sup>29</sup>) i+1번째 줄은 섬&nbsp;T<sub>i</sub>의 좌표야.</li>
	<li>이어서 하나의 줄에, 이 바다에서 해결해야 할 문제 개수 k가 주어져. 각 문제는 다음과 같은 형식으로 이루어져 있어.
	<ul>
		<li>첫 번째 줄에 정보의 개수 m이 주어져. (0 ≤ m ≤ 10,000)</li>
		<li>이어서 m개의 줄에 두 정수 l, r이 주어져. (1 ≤ l, r ≤ n,&nbsp;l ≠ r) 이건 보물지도에서 섬 T<sub>l</sub>이 섬 T<sub>r</sub>보다 왼쪽에 그려졌다는 뜻이야.</li>
	</ul>
	</li>
</ul>

<p>어떤 바닷가든지, 동일한 x좌표를 가진 두 섬은 존재하지 않고, 동일한 y좌표를 가진 두 섬도 존재하지 않아. 그리고 어떠한 세 섬도 일직선상에 있지 않아.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 문제마다 다음과 같이 정답을 출력하면 돼.</p>

<p>보물섬일 가능성이 있는 섬들의 번호를&nbsp;오름차순으로 한 줄에 하나씩 출력해.</p>

<p>마지막 줄에는 정수 0을 하나 출력해.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>주어진 입력 예제는 문제 설명에서 보여준 지도를 나타낸 예제이다. 주어진 정보로 추측할 수 있는 보물섬들은 Rummet, Alet, Schnaphpsum이다.</p>

				</div>
				</div>','1
9
28 34
32 30
12 29
27 22
42 23
18 18
5 14
26 12
34 5
1
4
1 2
1 9
2 9
4 5
','6
7
8
0
','BINARY_SEARCH'),
                                                                                                                                        (14650,'BAEKJOON','https://www.acmicpc.net/problem/5394',5394,'시계','1초','128 MB',24,'<p>
	희원이는 지난 몇 년동안 원형 시계를 수집한 수집가이다. 이 시계는 모두 거실의 한 벽에 걸려있다. 이번에 큰 돈을 벌게된 희원이는 시계를 하나 더 사려고 한다. 이때, 벽에 있는 시계의 위치를 건드리지 않으면서 매달 수 있는 가장 큰 시계를 구매하려고 한다.</p>

<p>
	벽은 너비 W, 높이 H의 직사각형 모양이다. 각 시계의 중심 좌표는 (x<sub>i</sub>, y<sub>i</sub>)이고, 반지름은 r<sub>i</sub>이다. 희원이의 시계는 벽의 경계와 겹치거나 다른 시계와 겹치지 않는다. 하지만, 서로 접할 수는 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>
	첫째 줄에 테스트 케이스의 개수가 주어진다. 각 테스트 케이스의 첫째 줄에는 벽의 너비와 높이 W, H가 주어진다. (1 ≤ W,H ≤ 1,000,000) 다음 줄에는 벽에 걸려있는 시계의 수 C(0 ≤ C ≤ 50)가 주어진다. 다음 C개 줄에는 각 시계의 정보 x<sub>i</sub>, y<sub>i</sub>, r<sub>i</sub>가 주어진다. (r<sub>i</sub> > 0, 0 ≤ x<sub>i</sub> - r<sub>i</sub>, x<sub>i</sub> + r<sub>i</sub> ≤ W, 0 ≤ y<sub>i</sub> - r<sub>i</sub>, y<sub>i</sub> + r<sub>i</sub> ≤ H)</p>
<p>
	모든 시계의 쌍 i와 j (i ≠ j)는 (x<sub>i</sub> - x<sub>j</sub>)<sup>2</sup> + (y<sub>i</sub> - y<sub>j</sub>)<sup>2</sup> ≥ (r<sub>i</sub> + r<sub>j</sub>)<sup>2</sup> 를 만족한다.&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>
	각 테스트 케이스에 대해서, 희원이가 구매할 수 있는 가장 큰 시계의 반지름을 출력한다. 정답과의 오차는 10<sup>-6</sup>까지 허용한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
10 10
4
2 2 1
2 8 1
8 2 1
8 8 1
','3.242640687119285
','BINARY_SEARCH'),
                                                                                                                                        (14655,'BAEKJOON','https://www.acmicpc.net/problem/5530',5530,'JOIOI 탑','1초','128 MB',20,'<p>JOIOI 탑은 원반을 이용해서 혼자 재미있게 놀 수 있는 게임이다.</p>

<p>이 게임은 <code>J</code>, <code>O</code>, <code>I</code>중 하나의 문자가 쓰여진 원반을 이용한다. 원반은 모두 반지름이 다르다. 가장 처음에 원반은 반지름이 큰 것이 가장 아래에 있고, 나머지는 작아지는 순서대로 쌓여 있다.</p>

<p>상근이는 이 원반을 이용해 가능한 많은 미니 JOIOI 탑을 만들려고 한다. 미니 JOIOI 탑은 3개의 원반으로 구성되며, 반지름이 작은 것부터 읽었을 때 <code>JOI</code>나 <code>IOI</code>이어야 한다. 한 미니 JOIOI 탑에 속한 원반은 다른 탑에 속할 수 없다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/58cba022-9053-4e69-964f-425f944d359b/-/preview/" style="width: 332px; height: 199px;"></p>

<p>반지름이 작은 원반부터 순서대로 원반에 적혀져 있는 문자가 순서대로 주어진다. 이때, 만들 수 있는 미니 JOIOI 탑의 최대 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 원반의 개수 N이 주어진다. 둘째 줄에는 원반에 적혀있는 문자가 반지름이 작은 순서대로 주어진다. (1 ≤ N ≤ 1,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 만들 수 있는 미니 JOIOI 탑의 최대 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
JOIIOI
','2
','BINARY_SEARCH'),
                                                                                                                                        (14656,'BAEKJOON','https://www.acmicpc.net/problem/5631',5631,'방사능','1초','128 MB',12,'<p>원자력 발전소는 현대 문명의 축복이자 저주이다. 원자력 발전소는 많은 위험성이 있지만, 전기를 만드는 가장 싼 방법이다. 이 문제에서는 거리가 멀지 않은 두 원자력 발전소에 어떤 상황에 대해서 생각해 본다.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/nppk.png" style="height: 217.5px; width: 344.167px;"></p>

<p>그림 1. 두 원자력 발전소. (81, 49)와 (77, 33)에 있는 집은 매우 위험한 지역이다.</p>

<p>먼저, 땅이 모두 평평하고, 2차원 좌표 평면 위에 모든 집이 있다고 가정한다. 두 원자력 발전소가 각각 (ax, ay)와 (bx, by)에 있다고 가정한다. 발전소 (ax, ay)와 거리가 R1이내인 곳(R1인 곳도 포함)은 방사능 고위험 지역이다. 발전소 (bx, by)와 거리가 R2이내인 곳(R2인 곳도 포함)도 방사능 고위험 지역이다. 따라서, 원자력 발전소 1과 2의 관계자는 특별한 보호 장비를 방사능 고위험 지역에 있는 집에게 나누어 준다. 따라서, 두 원자력 발전소의 위험 지역에 모두 포함되는 집은 보호 장비를 두 개 받게 된다. 하지만, 이 보호 장비는 하나만 있어도 집을 안전하게 보호할 수 있다.</p>

<p>방사능 고위험 지역의 밖에 있는 집은 방사능 저위험 지역이다. 하지만, 저위험 지역에 있는 집은 보호 장비를 받지 못한다. 이 경우에 보호 장비를 두 개 가지고 있는 집에서 하나를 저위험 지역에 있는 집에게 주면, 저위험 지역도 보호 장비를 하나 가질 수 있다. 이렇게 보호 장비를 나누어주어도, 받지 못하는 집이 있을 수 있다.</p>

<p>집의 위치와 두 원자력 발전소의 위치, 그리고 가능한 R1, R2가 주어졌을 때, 각각의 경우에 대해서, 보호 장비를 가질 수 없는 집의 수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 최대 3개의 테스트 케이스로 이루어져 있다. 각 테스트 케이스는 아래와 같이 이루어져 있다.</p>

<p>첫째 줄에는 집의 수 N이 주어진다. (0 < N ≤ 200000) 다음 N개 줄에는 집의 좌표 xi, yi가 주어진다. (0 ≤ xi, yi ≤ 20000) 두 집이 같은 곳에 있는 경우는 없다.</p>

<p>다음 줄에는 ax, ay, bx, by, q가 주어진다. (0 ≤ ax, ay, bx, by ≤ 20000, 0 < q ≤ 20000) ax, ay, bx, by는 원자력 발전소의 좌표이고, q는 가능한 R1, R2값의 수이다.</p>

<p>다음 q개 줄에는 R1, R2가 주어진다. (0 < R1, R2 ≤ 13000)</p>

<p>마지막 줄에는 0이 하나 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스는 q+1 줄을 출력해야 한다. 첫째 줄은 테스트 케이스 번호를 출력한다. 그 다음, 가능한 R1, R2값에 대해서, 보호 장비를 받을 수 없는 집의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','11
95 75
27 6
93 5
124 13
34 49
65 61
81 49
77 33
110 50
91 22
110 25
57 42 97 36 2
31 25
25 25
0
','Case 1:
2
2
','BINARY_SEARCH'),
                                                                                                                                        (14659,'BAEKJOON','https://www.acmicpc.net/problem/5821',5821,'쌀 창고','1초','256 MB',17,'<p>어느 시골에, 쌀의 길 이라고 불리는 긴 직선 도로가 있다. 이 길을 따라 R 개의 논들이 있다. 각 논들은 1 이상 L 이하의 정수좌표를 갖는다. 논들은 좌표 값이 감소하지 않는 순서로 주어진다. 즉, 0 ≤ i < R 에 대해서, 논 i 는 좌표 X[i] 에 있다. 1 ≤ X[0] ≤ ... ≤ X[R-1] ≤ L 라고 가정할 수 있다.</p>

<p>여러 개의 논이 하나의 같은 좌표에 있을 수 있음을 주의하라.</p>

<p>논에서 수확한 가능한 가장 많은 쌀들을 저장할 수 있는 하나의 쌀 창고를 세우려고 계획하고 있다. 논의 위치와 같이, 쌀 창고의 위치는 1 이상 L 이하의 정수좌표에만 있을 수 있다. 쌀 창고는 논들이 위치하고 있는 장소를 포함하여 어떤 곳에든지 세울 수 있다.</p>

<p>수확의 계절에 각 논들은 정확히 트럭 한대 분량의 쌀만 생산할 수 있다. 쌀들을 창고로 옮기기 위해서 트럭 운전사들을 고용하여야 한다. 트럭 운전사는 한 트럭분량의 쌀을 창고로 옮기는데 단위 거리당 1 바트의 요금을 청구한다. 다르게 말하자면, 논으로부터 쌀을 창고로 옮기는 비용은, 논의 좌표 값과 창고의 좌표 값의 차이와 같다.</p>

<p>불행히도, 올해의 예산이 충분하지 못하여 쌀의 수송에는 최대 B 바트 까지만 사용할 수 있다. 여러분이 해야 할 일은 가능한 가장 많은 쌀을 창고로 모으기 위한 창고의 위치를 결정하는 것이다.</p>

<p>다음의 파라미터를 갖는 besthub(R,L,X,B) 함수를 작성하라:</p>

<ul>
	<li>R ? 논의 수. 논들은 0 이상 R-1 이하의 번호로 나타낸다.&nbsp;</li>
	<li>L ? 최대 좌표 값.</li>
	<li>X ? 가장 작은 수부터 가장 큰 수까지 정렬된 정수의 1 차원 배열. 0 ≤ i < R 에 대하여, 논 i 는 X[i]에 위치한다.&nbsp;</li>
	<li>B ? 예산.</li>
</ul>

<p>여러분의 함수는 반드시 최적의 쌀 창고의 위치를 찾아야 하고, 예산 범위 이내에서 쌀 창고까지 옮길 수 있는 최대 쌀의 양이 트럭 몇 대 분량 인지를 리턴 하여야 한다.</p>

<p>쌀을 옮기는데 허용된 예산은 매우 클 수가 있음을 주의하라. 예산은 64-비트의 정수로 주어지고, 계산 과정에서는 64-비트의 정수를 사용하도록 권장한다. C/C++에서는 long long 데이터 형을 사용하고, 파스칼에서는 Int64 데이터 형을 사용하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 R, L, B가 주어진다. 둘째 줄부터 R개 줄에는 X[i]가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>besthub(R,L,X,B)의 리턴값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/f8a43431-2537-4c9e-8f35-529b38c74d75/-/preview/" style="width: 521px; height: 93px;"></p>

<p style="text-align: center;">쌀 창고</p>

<p>이 경우에는 창고의 위치에 대한 여러 개의 최적 위치가 있다: 10 이상 14 이하의 어느 정수 위치에든지 쌀 창고를 둘 수 있다. 위의 그림은 최적 위치들 중의 하나를 보여준다. 이 경우 10 과 12, 14 의 위치에 있는 논으로부터 쌀들을 옮길 수 있다. 어떤 최적의 창고 위치에 대해서든지, 쌀의 총 수송 비용은 6 바트 이하이다. 세 개보다 많은 논으로부터 쌀을 모을 수 있는 창고의 위치는 존재하지 않으므로, 이 답이 최적이고, besthub 은 3 을 리턴 해야 한다.</p>

				</div>
				</div>','5 20 6
1
2
10
12
14
','3
','BINARY_SEARCH'),
                                                                                                                                        (14663,'BAEKJOON','https://www.acmicpc.net/problem/6209',6209,'제자리 멀리뛰기','1초','128 MB',13,'<p>GSHS에서는 체력측정에서 제자리 멀리뛰기가 가장 중요하다. GSHS의 체육선생님께서는 학생들의 제자리 멀리뛰기 실력을 키워주게 하기 위해서 특수 훈련을 준비중이다.</p>

<p>특수 훈련장소는 GSHS특수 트레이닝 센터로 이 곳은 끓는 용암으로 가득 차 있다. 체육선생님께서는 이 용암으로 가득찬 방의 가운데 있는 돌섬에 학생들을 가두고 학생들이 탈출해 나오기를 기대하고 있다. 탈출할 수 있는 방법은 단 한가지 이다. 돌섬에서 탈출구까지 띄엄 띄엄 존재하는 작은 돌섬들로 점프하여 탈출구까지 가는 것이다.</p>

<p>돌섬에서 탈출구 사이에는 총 n개의 작은 돌섬이 있다. 선생님은 이 n개의 작은 돌섬들 중 m개를 제거하여 학생들이 최대한 멀리뛰기 연습의 효율을 높이기 위해서 학생들이 각 돌섬을 점프한 거리의 최솟값을 최대한 크게 하려고 한다. 물론 학생들은 체력이 좋기 때문에 두 돌섬이 아무리 멀더라도 점프할 수 있다. 즉, 빠지는 일은 없다.</p>

<p>그리고 학생들은 탈출 시 n-m개의 모든 돌섬을 밟으면서 탈출해야 한다.</p>

<p>학 생들이 갇힌 돌섬으로부터 탈출구까지의 거리 d가 주어지고, 각 n개의 작은 돌섬의 위치(갇힌 돌섬으로 부터의 거리)가 주어지며, 제거할 수 있는 작은 돌섬의 수 m이 주어질 때, m개를 제거한 후 학생들이 점프하는 최소거리의 최댓값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 갇힌 돌섬으로부터 탈출구까지의 거리 d(1 ≤&nbsp;d ≤ 1,000,000,000), 작은 돌섬의 수 n(0 ≤ n ≤ 50,000), 제거할 수 있는 작은 돌섬의 수 m (0 ≤ m ≤&nbsp;n)이 공백으로 구분되어 주어진다.</p>

<p>두 번째 줄부터 n줄에 걸쳐서 갇힌섬으로부터 각 작은 돌섬이 얼마나 떨어져 있는지를 나타내는 하나의 정수가 한 줄에 하나씩 주어진다. (단, 두 돌섬은 같은 위치에 있을 수 없다.)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>m개의 작은섬을 제거한 뒤 학생들이 점프할 수 있는 최소거리의 최댓값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','25 5 2
2
14
11
21
17
','4
','BINARY_SEARCH'),
                                                                                                                                        (14662,'BAEKJOON','https://www.acmicpc.net/problem/6236',6236,'용돈 관리','1초','128 MB',9,'<p>현우는 용돈을 효율적으로 활용하기 위해 계획을 짜기로 하였다. 현우는 앞으로 N일 동안 자신이 사용할 금액을 계산하였고, 돈을 펑펑 쓰지 않기 위해 정확히 M번만&nbsp;통장에서 돈을 빼서 쓰기로 하였다.&nbsp;현우는 통장에서 K원을 인출하며, 통장에서 뺀&nbsp;돈으로 하루를 보낼 수 있으면 그대로 사용하고, 모자라게 되면 남은 금액은 통장에 집어넣고 다시 K원을 인출한다. 다만 현우는 M이라는 숫자를 좋아하기 때문에, 정확히 M번을 맞추기 위해서 남은 금액이 그날 사용할 금액보다 많더라도 남은 금액은 통장에 집어넣고 다시 K원을 인출할 수 있다. 현우는 돈을 아끼기 위해 인출 금액 K를 최소화하기로 하였다. 현우가 필요한 최소 금액 K를&nbsp;계산하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>1번째 줄에는 N과 M이 공백으로 주어진다. (1 ≤ N ≤ 100,000,&nbsp;1 ≤ M ≤ N)</p>

<p>2번째 줄부터 총 N개의 줄에는 현우가 i번째 날에 이용할 금액이 주어진다. (1 ≤ 금액 ≤ 10000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 현우가 통장에서 인출해야 할 최소 금액 K를&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7 5
100
400
300
100
500
101
400
','500
','BINARY_SEARCH'),
                                                                                                                                        (14668,'BAEKJOON','https://www.acmicpc.net/problem/7453',7453,'합이 0인 네 정수','12초(추가시간없음)','1024 MB',14,'<p>정수로 이루어진 크기가 같은 배열 A, B, C, D가 있다.</p>

<p>A[a], B[b], C[c], D[d]의&nbsp;합이 0인&nbsp;(a, b, c, d) 쌍의 개수를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 배열의 크기 n (1 ≤ n ≤ 4000)이 주어진다. 다음 n개 줄에는 A, B, C, D에 포함되는 정수가 공백으로 구분되어져서 주어진다. 배열에 들어있는 정수의 절댓값은 최대 2<sup>28</sup>이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>합이 0이 되는 쌍의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
-45 22 42 -16
-41 -27 56 30
-36 53 -37 77
-36 30 -75 -46
26 -38 -10 62
-32 -54 -6 45
','5
','BINARY_SEARCH'),
                                                                                                                                        (14675,'BAEKJOON','https://www.acmicpc.net/problem/7795',7795,'먹을 것인가 먹힐 것인가','1초','256 MB',8,'<p>심해에는 두 종류의 생명체 A와 B가 존재한다. A는 B를 먹는다. A는 자기보다 크기가 작은 먹이만 먹을 수 있다. 예를 들어, A의 크기가 {8, 1, 7, 3, 1}이고, B의 크기가 {3, 6, 1}인 경우에 A가 B를 먹을 수 있는 쌍의 개수는 7가지가 있다. 8-3, 8-6, 8-1, 7-3, 7-6, 7-1, 3-1.</p>

<p><img alt="" src=https://www.acmicpc.net/upload/images/ee(1).png" style="height:164px; width:209px"></p>

<p>두 생명체 A와 B의 크기가 주어졌을 때, A의 크기가 B보다 큰 쌍이 몇 개나 있는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스의 첫째 줄에는 A의 수 N과 B의 수 M이 주어진다. 둘째 줄에는 A의 크기가 모두 주어지며, 셋째 줄에는 B의 크기가 모두 주어진다. 크기는 양의 정수이다.&nbsp;(1 ≤ N, M ≤ 20,000)&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다, A가 B보다 큰 쌍의 개수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
5 3
8 1 7 3 1
3 6 1
3 4
2 13 7
103 11 290 215
','7
1
','BINARY_SEARCH'),
                                                                                                                                        (14691,'BAEKJOON','https://www.acmicpc.net/problem/8983',8983,'사냥꾼','1초','128 MB',12,'<p>KOI 사냥터에는 N 마리의 동물들이 각각 특정한 위치에 살고 있다. 사냥터에 온 사냥꾼은 일직선 상에 위치한 M 개의 사대(총을 쏘는 장소)에서만 사격이 가능하다. 편의상, 일직선을 x-축이라 가정하고, 사대의 위치 x<sub>1</sub>, x<sub>2</sub>, ..., x<sub>M</sub>은 x-좌표 값이라고 하자. 각 동물이 사는 위치는 (a<sub>1</sub>, b<sub>1</sub>), (a<sub>2</sub>, b<sub>2</sub>), ..., (a<sub>N</sub>, b<sub>N</sub>)과 같이 x,y-좌표 값으로 표시하자. 동물의 위치를 나타내는 모든 좌표 값은 양의 정수이다.</p>

<p>사냥꾼이 가지고 있는 총의 사정거리가 L이라고 하면, 사냥꾼은 한 사대에서 거리가 L 보다 작거나 같은 위치의 동물들을 잡을 수 있다고 한다. 단, 사대의 위치 x<sub>i</sub>와 동물의 위치 (a<sub>j</sub>, b<sub>j</sub>) 간의 거리는 |x<sub>i</sub>-a<sub>j</sub>| + b<sub>j</sub>로 계산한다.</p>

<p>예를 들어, 아래의 그림과 같은 사냥터를 생각해 보자. (사대는 작은 사각형으로, 동물의 위치는 작은 원으로 표시되어 있다.) 사정거리 L이 4라고 하면, 점선으로 표시된 영역은 왼쪽에서 세 번째 사대에서 사냥이 가능한 영역이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/80de7dba-b822-4f30-b833-de3071af385b/-/preview/" style="width: 272px; height: 160px;"></p>

<p>사대의 위치와 동물들의 위치가 주어졌을 때, 잡을 수 있는 동물의 수를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에는 사대의 수 M (1 ≤ M ≤ 100,000), 동물의 수 N (1 ≤ N ≤ 100,000), 사정거리 L (1 ≤ L ≤ 1,000,000,000)이 빈칸을 사이에 두고 주어진다. 두 번째 줄에는 사대의 위치를 나타내는 M개의 x-좌표 값이 빈칸을 사이에 두고 양의 정수로 주어진다. 이후 N개의 각 줄에는 각 동물의 사는 위치를 나타내는 좌표 값이 x-좌표 값, y-좌표 값의 순서로 빈칸을 사이에 두고 양의 정수로 주어진다. 사대의 위치가 겹치는 경우는 없으며, 동물들의 위치가 겹치는 경우도 없다. 모든 좌표 값은 1,000,000,000보다 작거나 같은 양의 정수이다. </p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 단 한 줄이며, 잡을 수 있는 동물의 수를 음수가 아닌 정수로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 8 4
6 1 4 9
7 2
3 3
4 5
5 1
2 2
1 4
8 4
9 4
','6
','BINARY_SEARCH'),
                                                                                                                                        (14694,'BAEKJOON','https://www.acmicpc.net/problem/9007',9007,'카누 선수','3초','256 MB',14,'<p>국제 카누 경주 챔피언십 (International Canoe Sprint Championship : ICSC)가 머지 않아 개막된다. ICSC에서 인증하는 공식 보트는 C1, C2 그리고 C4로 구성되며, "C"는 카누를 그리고 숫자는 노를 젓는 사람의 수를 의미한다. 카누 경주는 잔잔한 물 위의 여러개로 구획된 직선 코스에서 이루어진다. ICSC에서는 국제 경기를 200m, 500m 그리고 1000m로 구분하고 있다.</p>

<p style="text-align: center;"><img src="/userupload/jcdgods/201509/d1c460011a93350813f544f4dbb65455.jpg" style="height: 64.1667px; width: 340px;"></p>

<p>한국 스포츠 학교(Korea Sports School : KSS)는 ICSC 의 C4 1000m 경기에 참가할 예정이다. KSS에는 같은 수의 학생으로 구성된 4개의 반을&nbsp;가지며, 각 반에서 1명씩을 선출하여 경기에 참가한다. KSS에는 다수의 C4 보트를 가지고 있으며 각 보트는 선수들의 몸무게 합이 특정 값에 근사할 때 최대의 성과를 낼 수 있다. 예를 들어 특정 값이 300이고 각 반의 학생들의 몸무게가 아래와 같다고 하자.</p>

<ul>
	<li>Class-1: 60, 52, 80, 40</li>
	<li>Class-2: 75, 68, 88, 63</li>
	<li>Class-3: 48, 93, 48, 54</li>
	<li>Class-4: 56, 73, 49, 75</li>
</ul>

<p>각 반에서 차례로 60,75,93 그리고 73 학생을 선택하게 되면 몸무게 합이 301으로 300에 가장 근사하게 된다. 몇몇의 경우에는 두개의 근사값이 나올 수 있다. 예를 들어 특정 값이 200일 때, 몸무게의 합이 198과 202가 나올 수 있으며 이러한 경우에는 더 작은 값이 카누 게임 진행에 더 적합하다. 따라서 몸무게의 합이 198인 학생들이 선택받게 된다.</p>

<p>보트의 특정값과 학생들의 몸무게가 주어졌을때, 위의 조건을 만족하는 4명의 학생을 선택하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>이 문제에서는 입력은 표준 입력을 사용한다. 입력의 첫 줄에는 T개의 테스트 케이스가 주어진다. 각 테스트 케이스에는 두 개의 정수 k와 n이 주어지며, k( 1 ≤ k ≤ 40,000,000)는 보트의 특정 값 그리고 n( 1 ≤ n ≤ 1,000 )은 KSS 각 반의 학생수이다.</p>

<p>이어지는 4개의 줄에 차례로 각 반의 학생들의 몸무게가 n개씩 주어진다. 이때 몸무게는 1에서 10,000,000까지이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 표준 출력을 이용한다. 각 테스트 케이스에 해당하는 값을 한 줄에 출력한다. 해당 줄에는 카누 선수로 지목된 학생들의 몸무게의 총합이 포함되어 있어야 한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
300 4
60 52 80 40
75 68 88 63
48 93 48 54
56 73 49 75
8 3
1 2 3
1 2 3
1 2 3
1 2 3
32 2
2 5
9 4
10 20
4 2
','301
8
31
','BINARY_SEARCH'),
                                                                                                                                        (14693,'BAEKJOON','https://www.acmicpc.net/problem/9024',9024,'두 수의 합','1초','128 MB',11,'<p>여러 개의 서로 다른 정수 S = {a<sub>1</sub>, a<sub>2</sub>, …, a<sub>n</sub>} 와 또 다른 정수 K 가 주어졌을 때, S 에 속하는 서로 다른 두 개의 정수의 합이 K 에 가장 가까운 두 정수를 구하시오. 예를 들어, 10 개의 정수</p>

<p style="text-align: center;">S = { -7, 9, 2, -4, 12, 1, 5, -3, -2, 0}</p>

<p>가 주어졌을 때, K = 8 에 그 합이 가장 가까운 두 정수는 {12, -4} 이다. 또한 K = 4 에 그 합이 가장 가까운 두 정수는 {-7, 12}, {9, -4}, {5, -2}, {5, 0}, {1, 2} 등의 다섯 종류가 있다.</p>

<p>여러 개의 서로 다른 정수가 주어졌을 때, 주어진 정수들 중에서 서로 다른 두 정수의 합이 주어진 또 다른 정수에 가장 가까운 두 정수의 조합의 수를 계산하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>프로그램은 표준입력으로 입력을 받는다. 프로그램 입력은 t 개의 테스트 케이스로 구성된다. 입력의 첫 번째 줄에 테스트 케이스의 개수를 나타내는 정수 t 가 주어진다. 두 번째 줄부터 두 줄에 한 개의 테스트 케이스에 해당하는 데이터가 주어진다. 각 테스트 케이스의 첫 번째 줄에는 두 개의 정수 n 과 K (2 ≤ n ≤ 1,000,000, -10<sup>8</sup> ≤ K ≤ 10<sup>8</sup> )가 한 개의 공백을 사이에 두고 입력된다. 두 번째 줄에는 n 개의 정수가 하나의 공백을 사이에 두고 주어지며, 각 정수의 최댓값은 10<sup>8</sup> 이고, 최솟값은 -10<sup>8</sup> 이다. 잘못된 데이터가 입력되는 경우는 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>출력은 표준출력(standard output)을 사용한다. 입력되는 테스트 케이스의 순서대로 다음 줄에 이어서 각 테스트 케이스의 결과를 출력한다. 각 테스트 케이스의 출력되는 첫 줄에 입력으로 주어진 n 개의 정수들 중에서 서로 다른 두 정수의 합이 주어진 또 다른 정수 K 에 가장 가까운 두 정수의 조합의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
10 8
-7 9 2 -4 12 1 5 -3 -2 0
10 4
-7 9 2 -4 12 1 5 -3 -2 0
4 20
1 7 3 5
5 10
3 9 7 1 5
','1
5
1
2
','BINARY_SEARCH'),
                                                                                                                                        (14697,'BAEKJOON','https://www.acmicpc.net/problem/9460',9460,'메탈','5초','256 MB',15,'<p>매우 드물고 비싼 금속을 지하에서 찾아냈다. 금속은 땅 속에 넓게 흩어져 있기 때문에 신중하게 채굴 계획을 세우려고 한다. 따라서, 그림 1과 같이 수직 엘리베이터(vertical elevator)로 연결된 여러 개의 수평 터널(horizontal tunnel)을 만들기로 했다. 모든 엘리베이터는 한 터널의 오른쪽 끝과 다른 터널의 왼쪽 끝을 연결한다. 또, 터널과 엘리베이터의 연결 구조는 땅에 대해서 단조로워야 한다. 즉, 가장 왼쪽에 있는 터널의 끝에서 시작해서 가장 오른족에 있는 터널의 끝에 이동할 때, 다시 왼쪽으로 이동하는 일 없이 모든 터널을 지날 수 있어야 한다.</p>

<p>예산이 제한되어 있기 때문에, 수평 터널을 k개만 만들기로 했다. (k는 양의 정수) 따라서, 수평 터널을 연결할 수직 엘리베이터는 최대 k-1개 만들 수 있다. 이제, 수평 터널과 각각의 금속을 연결하는 수직 터널을 만들어야 한다. 한 금속을 채굴하는데 드는 비용은 수평 터널과의 수직 거리이다. 금속 n개를 채굴하는데 필요한 비용은 각 금속의 채굴 비용 중 최댓값이다.</p>

<p style="text-align:center"><img alt="" src=https://www.acmicpc.net/upload/images/metal.png" style="height: 209.167px; width: 387.5px;"></p>

<p>그림 1. 금속이 15개, k=3인 경우의 채굴 계획. 이 계획에서 최대 거리는 오른쪽 빨간색으로 표시된 거리이고, 그 거리가 이 계획의 채굴 비용이다.</p>

<p>그림 1과 같이, 각 금속은 2차원 평면 위의 점으로 나타낼 수 있고, 수평 터널은 수평선, 수직 터널과 엘리베이터는 수직선으로 나타낼 수 있다. 점 n개 P = {p<sub>1</sub>, p<sub>2</sub>, ..., p<sub>n</sub>}와 양의 정수 k가 주어진다. 이때, 금속 p<sub>i</sub>를 채굴하는데 필요한 비용 cost(p<sub>i</sub>)은 수평 터널과 떨어진 수직 거리이다. P = {p<sub>1</sub>, p<sub>2</sub>, ... p<sub>n</sub>}의 채굴 비용 cost(P)는 모든 cost(P<sub>i</sub>)중 최댓값 (max<sub>1≤i≤n</sub>cost(p<sub>i</sub>)) 이다. 이때, cost(P)를 최소로 만드는 (최대) k개 수평 터널의 위치를 결정해야 한다.</p>

<p>점 n개의 집합 P와 양의 정수 k가 주어졌을 때, cost(P)의 최솟값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스의 첫째 줄에는 점(금속)의 개수 n과 k가 주어진다. (2 ≤ n ≤ 10,000) 다음 줄에는 점 p<sub>1</sub>, p<sub>2</sub>, ..., p<sub>n</sub>의 좌표를 나타내는 정수 2n개 (x<sub>1</sub>, y<sub>1</sub>), (x<sub>2</sub>, y<sub>2</sub>), ..., (x<sub>n</sub>, y<sub>n</sub>)이 주어진다. (-100,000,000 ≤ x<sub>i</sub>, y<sub>i</sub> ≤ 100,000,000) 모든 좌표는 공백으로 구분되어 있고, 두 점이 같은 x좌표를 갖는 경우는 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 cost(P)의 최솟값을 출력한다. 항상 소수점 둘째 자리에서 반올림해서 첫째 자리까지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
3 1
-1 0 0 0 1 0
5 2
2 5 9 2 6 3 -2 2 7 0
','0.0
1.5
','BINARY_SEARCH'),
                                                                                                                                        (14702,'BAEKJOON','https://www.acmicpc.net/problem/9998',9998,'블록 쌓기','1초','128 MB',13,'<p>윤형이와 동혁이가 블록 쌓기 놀이를 한다. 두 명 모두 너비 N의 블록 건물을 쌓았는데, 윤형이는 k번째 열에 Y<sub>k</sub>개의 블록을 쌓았고 동혁이는 k번째 열에 D<sub>k</sub>개의 블록을 쌓았다. 윤형이와 동혁이는 블록을 쌓거나 빼면서 두 개의 똑같은 건물을 만들려고 한다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/86911055-3c2f-4e51-bce7-2a2fdcb597f3/-/preview/" style="width: 387px; height: 112px;"></p>

<p>한편, 이 둘이 새로 만들려는 건물은 위 그림의 오른쪽 형태와 같이 팩맨 모양이 되어야 한다. 즉, 왼쪽에서 오른쪽으로 갈수록 블록의 개수가 감소하다가 증가하는 꼴이 되어야 한다. 또, 인접한 두 열의 블록의 개수는 정확히 한 개씩만 차이나야 하며, 블록의 개수가 가장 적은 열은 정중앙이여야 한다.</p>

<p>방을 어지르지 않기 위해서, 블록을 하나 뺐으면 바로 블록 상자에 넣는다. 블록을 다른 곳으로 옮겨야 한다면, 블록을 상자에 넣었다가 빼서 원하는 곳에 쌓아야 한다.&nbsp;블록 상자에는 무한히 많은 블록이 있다.</p>

<p>윤형이와 동혁이가 원하는 방법으로 블록 건물을 바꿀 때, 블록을 빼거나 쌓는 횟수를 최소화하는 프로그램을 작성하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 두 블록 건물의 너비 N이 주어진다. N은 홀수이다.</p>

<p>두 번째 줄에는 윤형이의 블록 건물의 높이 Y<sub>k</sub>가 주어진다.</p>

<p>세 번째 줄에는 동혁이의 블록 건물의 높이 D<sub>k</sub>가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>블록을 쌓거나 빼는 작업의 수의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 예제의 경우 윤형이의 블록 건물의 1번째 열에 블록 2개를 더 쌓고, 동혁이의 블록 건물의 3번째 열에 블록 1개를 더 쌓으면 된다.</p>

				</div>
				</div>','3
1 2 3
3 2 2
','3
','BINARY_SEARCH'),
                                                                                                                                        (14705,'BAEKJOON','https://www.acmicpc.net/problem/10227',10227,'삶의 질','5초','256 MB',18,'<p>Alberta 시에서는 도시가 직사각형 격자모양의 블록으로 설계되어 있다. 블록은 가장 북쪽 0번부터 가장 남쪽 R-1번까지(행의 번호), 가장 서쪽 0번부터 가장 동쪽 C-1번까지로(열의 번호) 나누어져 있다.</p>

<p>각 블록에서 삶의 질은 1에서 R×C 사이의 유일한 수로 표현되며, 이를 quality rank라 한다. 1로 표현된 삶의 질이 가장 좋은 quality rank이고, R×C은 가장 나쁜 quality rank이다.</p>

<p>홍준이는 H×W (1 ≤ H ≤ R, 1 ≤ W ≤ C)의 영역에서 quality rank의 중간값 중 가장 질이 높은(수의 크기는 가장 작은) 값을 찾으려고 한다. H와 W는 홀수이고 각각은 R과 C를 초과하지 않는다. 홀수개의 quality rank들 중에서 중간값 m은 m보다 더 좋은 랭크의 수와 m보다 더 나쁜 랭크의 수가 같은 것으로 정의한다.</p>

<p>홍준이를 도와 H×W의 크기를 가지는 영역들 중에서 quality rank의 중간값 중 가장 질이 높은 값을 찾는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 4개의 정수 R, C, H, W 가 주어진다. R과 C는 각각 도시의 행과 열의 크기를 나타내고, H와 W는 각각 홍준이가 정한 영역에서의 행과 열의 크기이다. 그 다음 R개의 줄에 각각 C개의 quality rank를 나타내는 정수가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 quality rank의 중간값 중 가장 질이 높은 값을&nbsp;출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 5 3 3
5 11 12 16 25
17 18 2 7 10
4 23 20 3 1
24 21 19 14 9
6 22 8 13 15
','9
','BINARY_SEARCH'),
                                                                                                                                        (14708,'BAEKJOON','https://www.acmicpc.net/problem/10425',10425,'피보나치 인버스','1초','512 MB',9,'<p>\[F_n = &nbsp;\begin{cases} 0 &nbsp;&amp; \text{if n = 0;} \\ 1 &nbsp; &amp; \text{if n = 1;} \\ F_{n-1} + F_{n-2} &nbsp; &amp; \text{if n > 1.} \end{cases}\]</p>

<p>피보나치 수는 수학에서 위의 점화식으로 정의되는 수열이다. 피보나치 수는 0과 1로 시작하며, 다음 피보나치 수는 바로 앞의 두 피보나치 수의 합이 된다. n = 0, 1,...에 해당하는 피보나치 수는 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946… 이다.&nbsp;</p>

<p>프로그래밍 실습에서 문제 중 n을 입력 받았을 때 F<sub>n</sub>의 값을 출력하는 문제가 자주 등장한다. 실습을 하고 있던 희원이는 문득 이 문제가 너무 쉽다고 생각했다. 희원이는 실습 도중 반대로 F<sub>n</sub>이 주어졌을 때 n을 출력하는 문제는 어떨지 궁금했다. &nbsp;피보나치 수 F<sub>n</sub>이 주어졌을 때 n을 출력하는 프로그램을 만들어 보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 테스트케이스를 나타내는 T(1 ≤ T ≤ 100)가 입력으로 주어진다. 두 번째 줄부터 각 테스트케이스마다 양의 정수 F<sub>n</sub>이 입력으로 주어진다. (1 ≤ F<sub>n</sub> ≤ 10<sup>21000</sup>, 1 ≤ N ≤ 100,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>피보나치 수 F<sub>n</sub>이 주어졌을 때 n을 출력한다. 만약 가능한 경우가 여러 개 있는 경우에는 가장 큰 인덱스를 출력하라. 피보나치 수가 아닌 수가 들어오는 경우는 없다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1
5
8
1597
','2
5
6
17
','BINARY_SEARCH'),
                                                                                                                                        (14710,'BAEKJOON','https://www.acmicpc.net/problem/10454',10454,'세 네모','3초','256 MB',19,'<p>철승이는 사물을 좌표계로 생각하기를 좋아한다. 어느 날 집안에 파리가 앉았던 벽의 위치마다 점을 찍고있던 철승이는 엄마에게 등짝 스매싱을 맞는다.</p>

<p>철승이네 집의 벽은 한 변이 1cm인 정사각형의 패턴이 그려진 벽지로 도배되어 있으며, 똑똑한 파리는 이 패턴 정사각형의 모서리에만 앉았다.</p>

<p style="text-align:center"><img alt="" src=https://www.acmicpc.net/upload/images2/3sq1.png"></p>

<p style="text-align:center">< 파리가 앉은 예시 ></p>

<p>새로운 벽지로 모든 점들을 덮으려고하던 철승이는 갑자기 궁금증이 생겼다. 정사각형 모양의 벽지조각 3개만 사용해서 모든 점들을 가린다고 하면 조각의 한 변은 최소 몇 cm이어야 할까?</p>

<p>크기가 똑같고, 벽지와 같은 무늬의 정사각형 종이 3장으로 모든 점들을 가린다고 할 때에 한 종이의 변은 최소 몇 cm인지 계산해보자. 벽지는 깔끔하게 다시 도배해야 하므로 모든 종이는 정확히 정사각형 패턴들과 모서리가 일치해야한다. 종이의 모서리나 면 끝과 점한 점은 가려졌다고 가정한다.</p>

<p>아래의 예제는 정사각형 종이 3장으로 위의 점들을 가리는 경우들을 보여준다.</p>

<p style="text-align:center"><img alt="" src=https://www.acmicpc.net/upload/images2/3sq2.png" style="width: 342.5px; height: 113.333px;"></p>

<p>두 경우에서 오른쪽의 방법이 종이가 더 작으므로 더 좋은 방법이 된다. 철승이의 궁금증을 풀어주기 위해 최소의 벽지 조각의 크기를 계산하자.</p>

<p>모든 종이의 크기는 정수여야하며, 한 점만 가리는 종이(크기가 0인)가 있을 수 있다. 세 종이의 크기는 모두 동일해야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에는 테스트 케이스의 수 T가 주어진다.</p>

<p>이 후 T개의 테스트 케이스마다, 첫 줄에는 점의 수 n (1 ≤ n ≤ 100,000)이 주어진다.</p>

<p>그 후 n줄에 걸쳐서 점의 위치 x<sub>i</sub>, y<sub>i</sub> (-1,000,000,000 ≤ x<sub>i</sub>, y<sub>i</sub> ≤ 1,000,000,000)&nbsp;가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스마다 한 줄에 최소의 종이조각의 크기를 정수로 출력하시오. 단, 종이조각의 크기는 0이 될 수 있음에 유의하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
5
1 0
0 1
5 2
2 3
3 2
11
1 8
3 8
5 5
5 10
6 4
7 7
8 8
9 2
11 6
12 3
10 4
4
1 1
2 8
-21 45
1 1
','1
4
0
','BINARY_SEARCH'),
                                                                                                                                        (14714,'BAEKJOON','https://www.acmicpc.net/problem/10756',10756,'편식','1초','512 MB',22,'<p>병찬이는 친구 공찬이를 위해 맛있는 피자를 시켰다. 하지만 공찬이는 올리브를 싫어해서 피자를 잘라서 먹으려고 한다.</p>

<p>병찬이가 갖고 온 피자는 볼록다각형 모양을 하고 있으며, 올리브는 피자 안에 박혀있다. 공찬이는 피자를 보다 편하게 자르기 위해 인접하지 않은 두 꼭짓점을 선택하여 그 두 꼭짓점을 잇는 직선을 따라 피자를 자른다. 공찬이는 잘린 피자의 두 조각 중 올리브가 없는 쪽을 선택해서 먹을 것이다. 다만, 공찬이가 자르는 직선 위에 올리브가 있는 경우 올리브가 두 갈래로 잘리므로 두 조각 모두 먹지 못한다.</p>

<p style="text-align:center"><img alt="" src=https://www.acmicpc.net/upload/images3/sir.png" style="height:246px; line-height:20.8px; opacity:0.9; text-align:center; width:289px"></p>

<p style="text-align:center">이 그림은 첫 번째 예제의 피자 모양이다. 공찬이가 자른 흔적이 점선으로 남아있다.</p>

<p>병찬이는 피자를 많이 먹지 않기 때문에 공찬이는 자신이 먹을 부분이 최대한 크게 피자를 자르려고 한다. 공찬이를 도와 얼마나 피자를 크게 자를 수 있는지 구하는 프로그램을 작성하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 피자의 꼭짓점의 수 N이 주어진다.</p>

<p>두 번째 줄부터 N개의 줄에는 피자의 각 꼭짓점의 좌표 X<sub>i</sub>, Y<sub>i</sub>가 주어진다. 피자의 꼭짓점은 시계 반대 방향으로 주어진다. 피자에서 만들어지는 N개의 각들은 전부 180도보다 작다.</p>

<p>N+2번째 줄에는 올리브의 수 M이 주어진다.</p>

<p>N+3번째 줄부터 M개의 줄에는 올리브의 좌표 Xi, Yi가 주어진다. 올리브가 피자의 변 위에 있거나 피자 밖에 있는 경우는 존재하지 않으며, 올리브는 매우 작아서 점으로 간주해도 상관없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>만약 공찬이가 피자를 어떻게 자르더라도 두 조각 모두 올리브가 있는 경우 0을 출력한다.</p>

<p>그렇지 않은 경우 공찬이가 먹을 수 있는 피자의 최대 넓이를 2로 곱한 값을 출력한다. 잘 생각해보면, 답은 항상 정수임을 알 수 있다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 2 설명: 공찬이는 피자의 2번 점과 5번 점을 잇는 직선을 따라 피자를 자르면 된다.</p>

<p>예제 3 설명: 공찬이는 피자의 1번 점과 3번 점을 잇는 직선을 따라 피자를 자르면 된다.</p>

				</div>
				</div>','5
0 1
3 0
4 2
2 3
0 3
3
2 1
3 1
3 2
','4
','BINARY_SEARCH'),
                                                                                                                                        (14726,'BAEKJOON','https://www.acmicpc.net/problem/11663',11663,'선분 위의 점','1초','256 MB',8,'<p>일차원 좌표상의 점 N개와 선분 M개가 주어진다. 이때, 각각의 선분 위에 입력으로 주어진 점이 몇 개 있는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 점의 개수 N과 선분의 개수 M이 주어진다. (1 ≤ N, M ≤ 100,000) 둘째 줄에는 점의 좌표가 주어진다. 두 점이 같은 좌표를 가지는 경우는 없다. 셋째 줄부터 M개의 줄에는 선분의 시작점과 끝점이 주어진다. 입력으로 주어지는 모든 좌표는 1,000,000,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어진 각각의 선분 마다, 선분 위에 입력으로 주어진 점이 몇 개 있는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 5
1 3 10 20 30
1 10
20 60
3 30
2 15
4 8
','3
2
4
2
0
','BINARY_SEARCH'),
                                                                                                                                        (14738,'BAEKJOON','https://www.acmicpc.net/problem/12014',12014,'주식','5초','512 MB',14,'<p>어느 날 당신은 출근길에, 지하철역 쓰레기통에서 놀라운 문서를 얻게 되었다. 이 문서는 미래의 어떤 회사의 주식 가격의 변동이 담겨 있었다. 설마 하는 마음으로 이 회사의 주식 가격의 변동을 본 결과, 문서에 담긴 내용이 사실이라는 것을 알게 되었다. 아마도 미래에서 타임머신을 타고 온 후손이 선조를 돕기 위해서 보낸 것이 아닐까 하는 마음이 들었다.</p>

<p>앞으로 N 일간 주식 가격이 N 개의 숫자로 주어져 있다. 당신은 지금까지 주식이라는 것을 거래해본 적이 없기 대문에, 증권회사에 가서 거래를 시작하기로 했다. 미래를 알면서 주식을 거래한다면 다른 사람들이 의심할지도 모른다는 생각이 들어서, 총 K 번 주식을 사기로 했다. 하루에는 주식을 한 번만 살수 있기 때문에, 주식을 사는 날은 총 K 일이다.</p>

<p>의심을 더 줄이기 위해서, 주식을 살 때마다 맨 처음을 제외하고는 바로 직전에 주식을 샀을 때보다 가격이 올라갔을 때만 사기로 했다. 예를 들어, 10일간 주가의 변동이 다음 표와 같다고 하자.</p>

<table class="table table-bordered">
	<thead>
		<tr>
			<th>날짜</th>
			<th>1</th>
			<th>2</th>
			<th>3</th>
			<th>4</th>
			<th>5</th>
			<th>6</th>
			<th>7</th>
			<th>8</th>
			<th>9</th>
			<th>10</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<th>주가</th>
			<td>100</td>
			<td>50</td>
			<td>70</td>
			<td>90</td>
			<td>75</td>
			<td>87</td>
			<td>105</td>
			<td>78</td>
			<td>110</td>
			<td>60</td>
		</tr>
	</tbody>
</table>

<p>K=3이라면, 2일, 3일, 4일에 주식을 사면 그날의 주가는 50, 70, 90이기 대문에 주어진 조건을 만족한다. 만약 K=6이라면, 2일, 3일, 5일, 6일, 7일, 9일에 주식을 사면 주가가 50, 70, 75, 87, 105, 110이기 때문에 주어진 조건을 만족한다. K=10이라면 조건을 만족할 수 없다.</p>

<p>N과 K, 주가가 주어졌을때 주어진 조건을 만족하게 주식을 구입할 수 있는지 여부를 알려주는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력 파일에는 여러 테스트 케이스가 포함될 수 있다. 파일의 첫째 줄에 케이스의 개수 T(2 ≤ T ≤ 100)가 주어지고, 이후 차례로 T 개 테스트 케이스가 주어진다. 각 테스트 케이스의 첫 줄에 두 정수 N과 K이 주어진다. N은 앞으로 주가를 알 수 있는 날 수이며, (1 ≤ N ≤ 10,000) K는 거래의 회수이다. (1 ≤ K ≤ 10,000) 다음 줄에는 앞으로 N 날의 주가가 사이에 공백을 두고 주어진다. 주가는 1부터 10,000 사이의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해서 출력은 한 줄로 구성된다. T 번째 테스트 케이스에 대해서는 첫째 줄에는 "Case #T"를 출력한다. 두 번째 줄에는 주어진 조건을 만족하게 주식을 살 수 있으면 1, 아니면 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>국정원 소프트웨어 SW 공채 역량평가 샘플 예제</p>

<p>출처:&nbsp;국정원 채용 시스템 홈페이지</p>

				</div>
				</div>','3
10 6
100 50 70 90 75 87 105 78 110 60
6 3
100 90 80 70 60 50
10 4
8 11 9 7 4 6 12 13 5 10','Case #1
1
Case #2
0
Case #3
1
','BINARY_SEARCH'),
                                                                                                                                        (14717,'BAEKJOON','https://www.acmicpc.net/problem/12015',12015,'가장 긴 증가하는 부분 수열 2','1초','512 MB',14,'<p>수열 A가 주어졌을 때, 가장 긴 증가하는&nbsp;부분&nbsp;수열을 구하는 프로그램을 작성하시오.</p>

<p>예를 들어, 수열 A = {10, 20, 10, 30, 20, 50} 인 경우에 가장 긴 증가하는 부분&nbsp;수열은&nbsp;A = {<strong>10</strong>,&nbsp;<strong>20</strong>, 10,&nbsp;<strong>30</strong>, 20,&nbsp;<strong>50</strong>} 이고, 길이는 4이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 수열 A의 크기 N (1 ≤ N ≤ 1,000,000)이 주어진다.</p>

<p>둘째 줄에는 수열 A를 이루고 있는 A<sub>i</sub>가 주어진다. (1 ≤ A<sub>i</sub>&nbsp;≤ 1,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 수열 A의 가장 긴 증가하는 부분 수열의 길이를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
10 20 10 30 20 50
','4
','BINARY_SEARCH'),
                                                                                                                                        (14725,'BAEKJOON','https://www.acmicpc.net/problem/12099',12099,'점심메뉴','1초','512 MB',12,'<p>승관이와 영우는 앞으로 Q일 동안 점심을 같이 먹기로 했다.&nbsp;</p>

<p>승관이는 [u, v] 구간의 매운맛을 좋아하고 영우는 [x, y] 구간의 단맛을 좋아한다. (u, v, x, y는 매일 매일 기분 따라 바뀐다)&nbsp;</p>

<p>N가지 점심 메뉴의 매운맛 수치 a와, 단맛 수치 b가 주어지고, 앞으로 Q 일간의 u, v, x, y가 주어진다.&nbsp;</p>

<p>승관이와 영우의 점심 메뉴 선택을 돕기 위해, 날마다 승관이와 영우가 둘 다 좋아하는 메뉴의 수를 알려주는 프로그램을 만들어주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에 점심 메뉴의 수 N(1 ≤ N ≤ 10만)과, 점심을 같이 먹는 기간 Q(1 ≤ Q ≤ 5000)가 주어진다.&nbsp;</p>

<p>둘째 줄부터 N개의 줄에 각 메뉴의 매운맛, 단맛 수치인 a, b가 주어진다. (1≤ a, b ≤ 10억)&nbsp;</p>

<p>a, b값은 유니크하다. 즉 같은 a 값을 가지는 서로 다른 두 메뉴는 없고, 같은 b 값을 가지는 서로 다른 두 메뉴도 없다.&nbsp;</p>

<p>그 다음 줄부터 Q개의 줄에 각 날의 u, v, x, y가 주어진다. (1 ≤ u ≤ v ≤ 10억, v ≤ u + 10000, 1 ≤ x ≤ y ≤ 10억, y ≤ x + 10000)&nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>Q개의 줄에 줄마다 각 날의 영우와 승관이가 둘 다 좋아하는 메뉴의 수, 즉 u ≤ a ≤ v 이고, x ≤ b ≤ y 인 메뉴의 수를 출력한다&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6 4
10 50
30 30
20 70
60 20
70 40
100 10
1 1000 10 70
10 30 50 70
10 100 20 20
30 99 1 39
','6
2
1
2
','BINARY_SEARCH'),
                                                                                                                                        (14739,'BAEKJOON','https://www.acmicpc.net/problem/12738',12738,'가장 긴 증가하는 부분 수열 3','3초','512 MB',14,'<p>수열 A가 주어졌을 때, 가장 긴 증가하는&nbsp;부분&nbsp;수열을 구하는 프로그램을 작성하시오.</p>

<p>예를 들어, 수열 A = {10, 20, 10, 30, 20, 50} 인 경우에 가장 긴 증가하는 부분&nbsp;수열은&nbsp;A = {<strong>10</strong>,&nbsp;<strong>20</strong>, 10,&nbsp;<strong>30</strong>, 20,&nbsp;<strong>50</strong>} 이고, 길이는 4이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 수열 A의 크기 N (1 ≤ N ≤ 1,000,000)이 주어진다.</p>

<p>둘째 줄에는 수열 A를 이루고 있는 A<sub>i</sub>가 주어진다. (-1,000,000,000&nbsp;≤ A<sub>i</sub>&nbsp;≤ 1,000,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 수열 A의 가장 긴 증가하는 부분 수열의 길이를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
10 20 10 30 20 50
','4
','BINARY_SEARCH'),
                                                                                                                                        (14742,'BAEKJOON','https://www.acmicpc.net/problem/12801',12801,'중계 신호','2초','512 MB',24,'<p>어떤 섬에 사는 사람들이 있다. 이 사람들은 보통 어업을 생업으로 삼기 때문에 이 섬에 사는 사람들은 중 N개의 가구는 낚싯배를 가지고 있다. 사람들이 한창 일을 하러 나가는 오후에는 N개의 배가 모두 섬을 떠나 바다 위에 떠 있는데, 각 배들은 좌표 평면 위의 한 점으로 나타낼 수 있다. 또, 사람들이 살고 있는 섬은 M개의 점으로 이루어진 볼록 다각형으로 볼 수 있다. (우연히도, 모든 배들과 섬을 이루는 꼭짓점들은 격자점 위에 놓여 있다고 한다.) 다음 그림은 섬과 배의 배치의 예시이다.</p>

<p style="text-align:center"><img alt="1.png" src="https://upload.acmicpc.net/9016f919-0859-4b62-b24f-0d4bf29073ef/-/preview/" style="height:207px; width:286px"></p>

<p>(중앙의 주황색 볼록 다각형이 섬, 번호가 매겨진 파란 점들이 낚싯배다.)</p>

<p>각각의 배에는 라디오 통신 기기가 달려 있는데, 두 배 사이에 장애물이 없다면 이 통신 기기를 통해 두 배가 연락을 주고받을 수 있다. 정확히는, 어떤 두 배를 잇는 선분이 <strong>섬의 내부와 교차하지 않는다</strong>면 두 배는 연락을 주고받을 수 있다. (두 배를 잇는 선분이 볼록 다각형의 꼭짓점이나 변에만 닿는 것은 상관없다.)</p>

<p>어떤 배 A가 위험한 상황에 빠졌다고 하면, 그 배는 주위의 <strong>신호가 닿는 모든 배들에게</strong> 구조 신호를 전달한다. 그 후, 구조 신호를 수신한 모든 배들은 다시 신호가 닿는 모든 배들에게 A가 위험한 상황에 빠졌다는 <strong>중계 신호</strong>를 전달한다. <strong>중계 신호를 수신한 배들이 다시 신호를 전달하지는 않는다.</strong></p>

<p>당신은 섬을 이루는 M개의 점과 1~N의 번호가 붙은 N개의 배의 위치를 알고 있고, 1번 배가 위험한 상황에 빠졌다고 할 때 1번 배에게서 <strong>신호를 전달받는 배의</strong> <strong>수</strong>를 구해야 한다. 이때, 신호를 전달받는 배라는 것은 1번 배가 처음에 발신한 <strong>구조 신호</strong>와 구조 신호를 수신한 배들이 발신한 <strong>중계 신호</strong> 중 <strong>하나라도 전달받은 </strong>배를 뜻한다. (1번 배는 신호를 전달받은 배로 치지 않는다.)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 배의 수 N&nbsp;(1 ≤ N ≤ 100 000)이 주어진다.</p>

<p>이후의 N개 줄에는 배의 위치에 대한 정보가 주어진다. i번째 줄에는 i번 배의 x좌표와 y좌표가 공백을 사이에 두고 순서대로 주어진다.</p>

<p>다음 줄에는 섬을 이루는 꼭짓점의 수 M (3 ≤ M ≤ 100 000)이 주어진다.</p>

<p>이후의 M개 줄에는 각 꼭짓점의 좌표에 대한 정보가 주어진다. i번째 줄에는 섬의 i번째 꼭짓점의 x좌표와 y좌표가 공백을 사이에 두고 순서대로 주어진다.</p>

<p>주어지는 섬은 볼록 다각형이며, 섬을 이루는 점들은 반시계 방향으로 주어진다.</p>

<p>섬을 이루는 볼록 다각형의 인접한 두 변은 기울기가 같지 않음이 보장된다.</p>

<p>모든 배와 섬의 꼭짓점의 x좌표와 y좌표는 -10<sup>9&nbsp;</sup>이상, 10<sup>9</sup> 이하이다.</p>

<p>모든 배들의 좌표가 다르고, 어느 배도 섬의 내부나 변 위에 존재하지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>1번 배가 위험한 상황에 빠졌을 때, 1번 배에게서 <strong>구조 신호</strong>나<strong> 중계 신호</strong>를 전달받을 수 있는 배의 수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','9
9 6
8 5
10 8
8 8
-2 3
-1 5
9 1
0 1
-1 2
7
1 1
5 1
8 3
7 5
4 6
0 5
-1 3
','6
','BINARY_SEARCH'),
                                                                                                                                        (14743,'BAEKJOON','https://www.acmicpc.net/problem/12915',12915,'대회 개최','2초','512 MB',10,'<p>현종이는 프로그래밍 대회를 개최하는 것을 매우 좋아한다. 현종이는 프로그래밍 대회를 위해서 문제를 매우 많이 만들어놓았고, 이제 이 문제를 이용해서 프로그래밍 대회를 몇 번 개최할 수 있는지 알아보려고 한다.</p>

<p>현종이가 개최하는 프로그래밍 대회는 문제 3개로 이루어져 있고, 쉬운 문제, 중간 문제, 어려운 문제로 구성되어 있다. 대회를 개최하기 위해서는 문제 3개가 모두 있어야 한다.</p>

<p>현종이는 지금까지 만든 문제를 총 5가지 난이도로 분류했으며, 난이도는 다음과 같다.</p>

<ul>
	<li>E개의 문제는 쉬운 문제로 사용할 수 있다.</li>
	<li>EM개의 문제는 쉬운 문제나 중간 문제로 사용할 수 있다.</li>
	<li>M개의 문제는 중간 문제로 사용할 수 있다.</li>
	<li>MH개의 문제는 중간 문제나 어려운 문제로 사용할 수 있다.</li>
	<li>H개의 문제는 어려운 문제로 사용할 수 있다.</li>
</ul>

<p>모든 문제는 한 대회에서만 사용할 수 있으며, 한 가지 난이도로만 사용할 수 있다.</p>

<p>현종이가 대회를 최대 몇 번 열 수 있는지 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 E, EM, M, MH, H가 주어진다. (0 ≤ E, EM, M, MH, H ≤ 100,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 현종이가 프로그래밍 대회를 최대 몇 번 열 수 있는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 2 1 2 2
','3
','BINARY_SEARCH'),
                                                                                                                                        (14745,'BAEKJOON','https://www.acmicpc.net/problem/12921',12921,'제한된 메모리','7초','4 MB (추가 메모리 없음)',20,'<p>N개의 정수로 구성된 배열 X에 대한 정보가 주어집니다. 그리고 몇 개의 쿼리가 주어집니다. 각 쿼리는 하나의 정수 q로 표현됩니다. 해당 쿼리에 대해서 배열 X에서 q번째로 작은 원소를 구해야 합니다. 여기서 q는 0-based index입니다. 즉, q=0이면 가장 작은 원소, q=1이면 두 번째로 가장 작은 원소를 구해야 합니다.</p>

<p>이 문제는 너무 쉬워 보일 수 있습니다. 단순히 정렬 후, 쿼리에 대한 답을 출력하면 되기 때문입니다. 이 방법을 막기 위해서 이 문제는 메모리 제한이 너무 작습니다. 배열 X에 대한 정보 전체를 저장할 수 없습니다. 하지만 쿼리의 수는 적어서 쿼리에 대한 정보 전체는 저장할 수 있습니다.</p>

<p>N, x0, a, b가 주어지고 쿼리의 정보가 담긴 배열이 주어집니다. 배열 X를 생성하는 pseudocode는 다음과 같습니다.</p>

<pre>X[0] = x0
for i = 1 to n-1:
        X[i] = (X[i-1] * a + b) % (1000000007)
</pre>

<p>Integer overflow에 주의하세요.</p>

<p>모든 쿼리에 대한 답을 모두 더한 값을 출력하는 프로그램을 작성하세요.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 4개의 정수 N, x0, a, b가 주어집니다. (1 ≤ N ≤ 2,000,000, 0 ≤ x0, a, b ≤ 1,000,000,006)</p>

<p>둘째 줄에는 쿼리의 개수 Q이 주어집니다. (1 ≤ Q ≤ 1000)</p>

<p>셋째 줄에는 쿼리의 각 원소를 나타내는 Q개의 정수가 주어집니다. (0 ≤ q ≤ N-1)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>문제의 답을 나타내는 정수를 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 100 1 5
2
0 3
','215
','BINARY_SEARCH'),
                                                                                                                                        (14747,'BAEKJOON','https://www.acmicpc.net/problem/12926',12926,'쉽게 제한된 메모리','7초','4 MB (추가 메모리 없음)',19,'<p>N개의 정수로 구성된 배열 X에 대한 정보가 주어집니다. 그리고 몇 개의 쿼리가 주어집니다. 각 쿼리는 하나의 정수 q로 표현됩니다. 해당 쿼리에 대해서 배열 X에서 q번째로 작은 원소를 구해야 합니다. 여기서 q는 0-based index입니다. 즉, q=0이면 가장 작은 원소, q=1이면 두 번째로 가장 작은 원소를 구해야 합니다.</p>

<p>이 문제는 너무 쉬워 보일 수 있습니다. 단순히 정렬 후, 쿼리에 대한 답을 출력하면 되기 때문입니다. 이 방법을 막기 위해서 이 문제는 메모리 제한이 너무 작습니다. 배열 X에 대한 정보 전체를 저장할 수 없습니다. 하지만 쿼리의 수는 적어서 쿼리에 대한 정보 전체는 저장할 수 있습니다.</p>

<p>N, x0, a, b가 주어지고 쿼리의 정보가 담긴 배열이 주어집니다. 배열 X를 생성하는 pseudocode는 다음과 같습니다.</p>

<pre>X[0] = x0
for i = 1 to n-1:
        X[i] = (X[i-1] * a + b) % (1000000007)
</pre>

<p>Integer overflow에 주의하세요.</p>

<p>모든 쿼리에 대한 답을 모두 더한 값을 출력하는 프로그램을 작성하세요.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 4개의 정수 N, x0, a, b가 주어집니다. (1 ≤ N ≤ 1,000,000, 0 ≤ x0, a, b&nbsp;≤ 1,000,000,006)</p>

<p>둘째 줄에는 쿼리의 개수 Q이 주어집니다. (1 ≤ Q ≤ 100)</p>

<p>셋째 줄에는 쿼리의 각 원소를 나타내는 Q개의 정수가 주어집니다. (0 ≤ q ≤ N-1)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>문제의 답을 나타내는 정수를 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 100 1 5
2
0 3
','215
','BINARY_SEARCH'),
                                                                                                                                        (14746,'BAEKJOON','https://www.acmicpc.net/problem/12929',12929,'빌딩 높이','2초','512 MB',14,'<p>오늘은 천나라에 빌딩 N개를 새로 만들려고 한다. 새로운 빌딩은 일렬로 놓여져 있어야 하고, 차례대로 1번부터 N번까지 번호를 붙인다.</p>

<p>천나라에는 다음과 같이 새로운 빌딩에 대한 높이 제한이 있다.</p>

<ul>
	<li>모든 빌딩의 높이는 음이 아닌 정수이어야 한다.</li>
	<li>빌딩 1의 높이는 0이다.</li>
	<li>인접한 두 빌딩의 높이의 차이는 K보다 작거나 같아야 한다.</li>
	<li>빌딩 X[i]의 높이는 T[i]보다 작거나 같아야 한다.</li>
</ul>

<p>천나라의 높이 제한을 지키면서, 지을 수 있는 가장 큰 높이를 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 K가 주어진다. (1 ≤ N, K ≤ 1,000,000,000)</p>

<p>둘째 줄에는 X와 T의 크기 M이 주어진다. (0 ≤ M ≤ min(N, 500))</p>

<p>M이 0이상일 경우 셋째 줄에는 X[i]가, 넷째 줄에는 T[i]가 주어진다. (1 ≤ X[i] ≤ N, 1 ≤ T[i] ≤ 1,000,000,000, X[i] < X[i+1]) M이 0인 경우에는 셋째 줄과 넷째 줄이 주어지지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>천나라의 높이 제한을 지키면서 지을 수 있는 가장 높은 빌딩의 높이를 출력한다.&nbsp;</p>

<p>&nbsp;</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','10 1
2
3 8
1 1
','3
','BINARY_SEARCH'),
                                                                                                                                        (14748,'BAEKJOON','https://www.acmicpc.net/problem/12991',12991,'홍준이의 행렬','2초','512 MB',14,'<p>홍준이에게는 길이가 N인 수열 2개 A와 B가 있습니다. 이때 N<sup>2</sup> 크기의 행렬을 만드는데, 행렬의 i행 j열의 원소는 수열 A의 i번째 원소와 수열 B의 j번째 원소의 곱으로 정의합니다. 홍준이는 이 원소들을 모두 정렬하였습니다.</p>

<p>홍준이는 정렬된 결과에서 K번째(1번부터 계산)에 위치하는 값이 궁금해졌습니다. 하지만 계산이 느린 홍준이는 정렬하는데 너무 시간이 오래 걸리기 때문에 여러분에게 도움을 요청하였습니다. 홍준이를 도와 K번째 원소의 값을 구하는 프로그램을 작성하세요.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 N과 K가 주어집니다. (1 ≤ N ≤ 30000, 1 ≤ K ≤ N<sup>2</sup>)</p>

<p>둘째 줄에 수열 A의 원소를 나타내는 N개의 정수가 공백을 사이에 두고 주어집니다.</p>

<p>셋째 줄에 수열 B의 원소를 나타내는 N개의 정수가 공백을 사이에 두고 주어집니다.</p>

<p>각 수열의 원소들은 1 이상 10억 이하의 자연수입니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>N<sup>2</sup> 크기의 행렬에서 K번째로 작은 수의 값을 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 3
2 3
3 5
','10
','BINARY_SEARCH'),
                                                                                                                                        (14749,'BAEKJOON','https://www.acmicpc.net/problem/13032',13032,'PS 테러리스트','2초','512 MB',12,'<p>세계 최고의 PS(PROBABLY S**SUNGMAN)를 뽑는 대회예선에서 죽을 쑨 현정이는 분을 못참고 주최인 S모 회사에 테러를 하기로 했다. 회사 지하에 잠입한 현정이는 그 곳에 일렬로 N개의 폭탄을 설치했다. 각 폭탄은 왼쪽부터 오른쪽으로 1~N번째로 구분한다. i번째 폭탄은 x<sub>i</sub>좌표에 위치하며, p<sub>i</sub>만큼의 파괴력을 가지고 있다. 각 폭탄은 바닥에 놓아진 순간부터 일정 시간이 흐르면 폭발하는 시한폭탄이다. 맞춰져있는 시간은 모두 같지만, 현정이가 폭탄을 오른쪽에서부터 놓았기 때문에 오른쪽에 있을 수록 폭발하는 시간이 조금씩 빠르다.</p>

<p>테러 꿈나무인 현정이는 폭탄의 폭발 범위가 겹쳐도 알아서 연쇄 폭발할거라 생각했지만, 이 폭탄들은 조금 특별하다. i번째 폭탄은 자신으로부터 왼쪽으로 p<sub>i</sub>이내에 있는 모든 것을 파괴한다. 문제는 그 모든 것에 아직 폭발하지 않은 폭탄들도 포함된다는 것이다. 먼저 폭발한 폭탄으로 인해 파괴된 폭탄은 폭발하지 못하고 불발 폭탄이 된다.</p>

<p>당황한 현정이는 전설적인 테러리스트 성관이에게 도움을 청했다. 성관이는 이미 폭탄을 다시 배치하기에는 너무 늦었으므로, N번 폭탄보다 오른쪽에 즉석폭탄을 터뜨려 기존에 설치된 폭탄 중 몇개를 미리 불발폭탄으로 만드는 방법을 추천했다. 즉석폭탄은 x<sub>n</sub>보다 큰 임의의 좌표 어디든, 현정이가 원하는 만큼의 파괴력으로 설치할 수 있다. 즉석폭탄은 어떤 폭탄보다도 먼저 폭발한다. 즉석폭탄을 설치했을 때, 최소로할 수 있는 불발폭탄의 개수는 몇 개일까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>한 줄에 현정이가 기존에 설치한 시한폭탄의 개수 N(1 ≤ N ≤ 100,000)이 주어진다. 다음 N개의 줄에는 차례대로 i번째 폭탄의 좌표 xi(0 ≤ xi ≤ 1,000,000)와 파괴력 p<sub>i</sub>(1 ≤ p<sub>i</sub> ≤ 1,000,000)가 주어진다. x<sub>i</sub>가 작을수록 왼쪽, 클 수록 오른쪽에 있다. 서로 같은 위치에 존재하는 폭탄은 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>한 줄에 하나의 즉석폭탄을 추가해 최소로할 수 있는 불발 폭탄의 개수를 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>Sample1: 좌표 9에 파괴력이 2인 즉석폭탄을 설치하면 불발폭탄은 하나만 생긴다.</p>

<p>Sample2: 좌표 1337에 파괴력이 42인 즉석폭탄을 설치하면 불발폭탄은 세개만 생긴다.</p>

				</div>
				</div>','4
1 9
3 1
6 1
7 4
','1
','BINARY_SEARCH'),
                                                                                                                                        (14754,'BAEKJOON','https://www.acmicpc.net/problem/13397',13397,'구간 나누기 2','2초','512 MB',12,'<p>N개의 수로 이루어진 1차원 배열이 있다. 이 배열을 M개 이하의 구간으로 나누어서 구간의 점수의 최댓값을 최소로 하려고 한다. 구간은 다음과 같은 조건을 만족해야 한다.</p>

<ol>
	<li>하나의 구간은 하나 이상의 연속된 수들로 이루어져 있다.</li>
	<li>배열의 각 수는 모두 하나의 구간에 포함되어 있어야 한다.</li>
</ol>

<p>구간의 점수란 구간에 속한 수의 최댓값과 최솟값의 차이이다.</p>

<p>예를 들어, 배열이 [1, 5, 4, 6, 2, 1, 3, 7] 이고, M = 3인 경우가 있다.</p>

<p>이때, [1, 5], [4, 6, 2], [1, 3, 7]로 구간을 나누면 각 구간의 점수는 4, 4, 6점이 된다. 이때, 최댓값은 6점이다.</p>

<p>만약, [1, 5, 4], [6, 2, 1], [3, 7]로 구간을 나누었다면, 각 구간의 점수는 4, 5, 4점이 되고, 이때 최댓값은 5점이 된다.</p>

<p>두 경우 중에서 최댓값이 최소인 것은 5점인 것이고, 5점보다 최댓값을 작게 만드는 방법은 없다.</p>

<p>배열과 M이 주어졌을 때, 구간의 점수의 최댓값의 최솟값을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 배열의 크기 N과 M이 주어진다. (1 ≤ N ≤ 5,000, 1 ≤ M ≤ N)</p>

<p>둘째 줄에 배열에 들어있는 수가 순서대로 주어진다. 배열에 들어있는 수는 1보다 크거나 같고, 10,000보다 작거나 같은 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 구간의 점수의 최댓값의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8 3
1 5 4 6 2 1 3 7
','5
','BINARY_SEARCH'),
                                                                                                                                        (14757,'BAEKJOON','https://www.acmicpc.net/problem/13702',13702,'이상한 술집','1초','512 MB',8,'<p>프로그래밍 대회 전날, 은상과 친구들은 이상한 술집에 모였다. 이 술집에서 막걸리를 시키면 주전자의 용량은 똑같았으나 안에 들어 있는 막걸리 용량은 랜덤이다. &nbsp;즉 한 번 주문에 막걸리 용량이 802ml 이기도 1002ml가 나오기도 한다. &nbsp;은상은 막걸리 N 주전자를 주문하고, 자신을 포함한 친구들 K명에게 막걸리를 똑같은 양으로 나눠주려고 한다. &nbsp;그런데 은상과 친구들은 다른 주전자의 막걸리가 섞이는 것이 싫어서, 분배 후 주전자에 막걸리가 조금 남아 있다면 그냥 막걸리를 버리기로 한다. &nbsp;(즉, 한 번 주문한 막걸리에 남은 것을 모아서 친구들에게 다시 주는 경우는 없다. &nbsp;예를 들어 5명이 3 주전자를 주문하여 1002, 802, 705 ml의 막걸리가 각 주전자에 담겨져 나왔고, 이것을 401ml로 동등하게 나눴을 경우 각각 주전자에서 200ml, 0m, 304ml 만큼은 버린다.) 이럴 때 K명에게 최대한의 많은 양의 막걸리를 분배할 수 있는 용량 ml는 무엇인지 출력해주세요.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 은상이가 주문한 막걸리 주전자의 개수 N, 그리고 은상이를 포함한 친구들의 수 K가 주어진다.&nbsp;둘째 줄부터 N개의 줄에 차례로 주전자의 용량이 주어진다. N은 10000이하의 정수이고, K는 1,000,000이하의 정수이다. 막걸리의 용량은 2<sup>31</sup> -1 보다 작거나 같은 자연수 또는 0이다. 단, 항상 <strong>N ≤ K </strong>이다. 즉, 주전자의 개수가 사람 수보다 많을 수는 없다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 K명에게 나눠줄 수 있는 최대의 막걸리 용량 ml 를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>2번째 예제에서 205ml로 나눌 경우 2,2,3,4 가 된다. 하지만 206ml라고 하면 각각 2, 2, 3, 3 으로 나눌 수 있기 때문에 나누는 용량을 조금 줄여야한다.</p>

				</div>
				</div>','2 3
702
429
','351
','BINARY_SEARCH'),
                                                                                                                                        (14762,'BAEKJOON','https://www.acmicpc.net/problem/14003',14003,'가장 긴 증가하는 부분 수열 5','3초','512 MB',16,'<p>수열 A가 주어졌을 때, 가장 긴 증가하는&nbsp;부분&nbsp;수열을 구하는 프로그램을 작성하시오.</p>

<p>예를 들어, 수열 A = {10, 20, 10, 30, 20, 50} 인 경우에 가장 긴 증가하는 부분&nbsp;수열은&nbsp;A = {<strong>10</strong>,&nbsp;<strong>20</strong>, 10,&nbsp;<strong>30</strong>, 20,&nbsp;<strong>50</strong>} 이고, 길이는 4이다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 수열 A의 크기 N (1 ≤ N ≤ 1,000,000)이 주어진다.</p>

<p>둘째 줄에는 수열 A를 이루고 있는 A<sub>i</sub>가 주어진다. (-1,000,000,000&nbsp;≤ A<sub>i</sub>&nbsp;≤ 1,000,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 수열 A의 가장 긴 증가하는 부분 수열의 길이를 출력한다.</p>

<p>둘째 줄에는 정답이 될 수 있는 가장 긴 증가하는 부분 수열을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','6
10 20 10 30 20 50
','4
10 20 30 50
','BINARY_SEARCH'),
                                                                                                                                        (14765,'BAEKJOON','https://www.acmicpc.net/problem/14233',14233,'악덕 사장','2초','512 MB',10,'<p>남규회사를 운영하는 사장 zych는 직원들을 부려먹는 걸로 유명하다. 오늘도 zych는 직원들을 부려먹기 위해 고민을 하고 있다.</p>

<p>회사에 들어온 일들은 n개가 있고 각 일들의 마감기한이 있다. 일을 못하면 계약금을 물어야하기 때문에 모든 일을 해야 한다. 하지만 너무 적은 시간을 들이면 퀄리티가 낮아지므로 직원들을 굴려서 최대한 많은 시간을 일을 하게 하려한다. 하지만 또 일마다 시간이 다르면 직원들이 혼동을 하기에, 모든 일을 딱 k시간만 일을 하게 하려한다.</p>

<p>일들의 마감기한이 주어졌을 때, 모든 일을 하면서 k가 최대가 되는 값을 출력하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 일의 개수 n이 주어진다.(1≤n≤50,000)</p>

<p>둘째 줄에는 각 일별로 마감기한 Ai가 주어진다.(1≤Ai≤1,000,000,000) 마감기한이 같은 입력은 들어오지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>모든 일을 다 할 수 있는 일의 기한 최대 k를 출력하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1 2 3 4 5
','1
','BINARY_SEARCH'),
                                                                                                                                        (14766,'BAEKJOON','https://www.acmicpc.net/problem/14407',14407,'함대','2초','512 MB',18,'<p>nein나라는 이번에 sys나라를 바다를 통하여 침공을 할 계획이다. 둘 사이에는 여러 섬들이 있고, 이들 사이를 잇는 수로들이 있다. 하지만 nein나라와 sys나라사이의 바다는 파도가 매우 심하고, 수로마다 불규칙적이다. 수로마다 특정 파도 높이가 있는데, 이 수로를 통과하려면 그 높이에 비례하게 배의 두께를 두껍게 만들어야 한다. 만약, 특정 수로에 파도가 5라는 높이를 가진다면, 배의 두께는 5이상이어야 한다.</p>

<p>또한, 하나의 수로에 같은 시간에는 동시에 배가 지나갈 수 없다. 만약, 같은 섬에서 두 배가 있고 같은 수로를 사용하려 한다면, 1이라는 시간에 한 배가 출발하면, 다음 배는 2가 되어야 출발할 수 있다. 수로는 어느 곳이나 1이라는 시간에 통과할 수 있다. 그리고 배들은 수로를 이용하기 위하여 섬에 정박해 있다가 갈 수 있다.</p>

<p>이러한 수로들을 바탕으로 침공 계획을 세우고 있다. 전쟁은 속도가 생명이기 때문에, T라는 시간만에 k개의 배가 sys나라에 도착하여야 한다. 하지만 배가 동시에 도착할 필요는 없다. 또한, 배는 일괄적으로 만드므로 모두 두께가 동일하다.</p>

<p>이런 상황에서 nein나라가 sys나라를 T라는 시간만에 침공할 수 있는 배의 최소 두께를 구하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 nein나라와 sys나라 사이에 있는 섬들의 개수n, 섬들 사이의 수로의 개수 m, 침공을 위한 시간 T, 침공할 배의 개수 k가 주어진다. (2≤n≤50, 1≤t,k≤50, 1≤m≤1,000) nein나라는 1번섬, sys나라는 n번섬에 존재한다.</p>

<p>다음 m줄에는 수로의 두 섬 번호 a,b, 파도의 높이 h가 주어진다.(1≤a,b≤n, 1≤h≤100,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>nein나라가 sys나라를 T라는 시간만에 침공할 수 있는 배의 최소 두께를 구하시오. 만약 T라는 시간에 침공할 수 없다면 -1을 출력하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 6 3 3
1 2 1
1 3 1
1 4 3
2 5 2
3 5 1
4 5 1
','2
','BINARY_SEARCH'),
                                                                                                                                        (14767,'BAEKJOON','https://www.acmicpc.net/problem/14434',14434,'놀이기구1','2초','256 MB',15,'<p>1번부터 N번까지 번호가 매겨져있는 총 N명의 아이들이 있다. 아이들은 놀이공원에 가는 걸 좋아하지만 아이들은 키제한 때문에 타지 못하는 일이 빈번하다. 놀이기구는 1번부터 M번까지 총 M개가 있으며, 모든 놀이기구는 정원이 2명이다. 아이 i와 아이 j가 함께 놀이기구 k를 타려면, (아이 i의 키) + (아이 j의 키) ≥ (놀이기구 k의 키제한) 이 성립해야한다.</p>

<p>이러한 (i, j, k) 쌍이 Q개 주어지는데, 이 뜻은 아이 i와 아이 j가 놀이기구 k를 타려고 매일 시도한다는 뜻이다.</p>

<p>아이들의 처음 키는 모두 0cm이기 때문에 처음에는 모두 놀이기구를 타지 못하지만, 아이들은 성장기이므로 키가 쑥쑥 자란다.</p>

<p>구체적으로, 첫날부터 K번째 날까지 매일매일 한 명씩 키가 1씩 자라게 된다. 매일매일 누구의 키가 자라는지 주어질 때, 첫날부터 K번째 날까지 각 날마다 아이들이 놀이기구를 총 몇 번 타는지 출력하는 프로그램을 작성하여라. (단, 놀이기구를 타는 것 보다 키가 자라는 것이 먼저 일어난다)</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p dir="ltr">첫째 줄에 아이들의 수 N, 놀이기구의 수 M, 기간 K, 질문의 개수 Q가 주어진다. (1 ≤ N, M, K, Q ≤&nbsp;200,000)</p>

<p dir="ltr">둘째 줄에는 놀이기구들의 키제한이 순서대로 주어진다. (1 ≤ 키제한 ≤ 200,000)</p>

<p dir="ltr">셋째 줄에는 각 날에 키가 자라는 아이의 번호가 총 K개 주어진다. (1 ≤&nbsp;번호 ≤ N)</p>

<p dir="ltr">그 다음 Q줄에 걸쳐 (i, j, k) 쌍이 주어진다. (1 ≤ i, j ≤ N, 1 ≤ k ≤ M)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>K줄에 걸쳐 각 날마다 아이들이 놀이기구를 총 몇번 타는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>둘째날까지 아이들은 놀이기구를 타지 못한다.</p>

<p>셋째날에는 아이 3과 아이 5가 놀이기구 3을 탈 수 있다.</p>

<p>넷째날에는 아이 3과 아이 5가 놀이기구 3을 탈 수 있고, 아이 1과 아이 2가 놀이기구 2를 탈 수 있다.</p>

				</div>
				</div>','5 3 4 4
4 3 1
2 2 5 1
1 2 2
1 2 1
1 5 2
3 5 3
','0
0
1
2
','BINARY_SEARCH'),
                                                                                                                                        (14768,'BAEKJOON','https://www.acmicpc.net/problem/14575',14575,'뒤풀이','1초','128 MB',10,'<p>도현이는 이번 대회를 준비하면서 거한 저녁 만찬을 예약했다.</p>

<p>하지만 <a href="https://www.acmicpc.net/problem/14574">모종의 이유</a>로 요리사들이 모두 천국으로 떠나버렸기 때문에, 도현이는 어쩔 수 없이 평범한 신촌 술집을 뒤풀이 장소로 정할 수밖에 없었다.</p>

<p>도현이는 우선 각 사람에게 어느 정도 마시면 기분이 좋은지(L<sub>i</sub>)와, 어느 정도 마시면 힘든지(R<sub>i</sub>)를 물어보았다. 각 사람은 L<sub>i</sub>미만의 술을 마시면 술이 부족해 기분이 좋지 않고, R<sub>i</sub>를 초과하는 술을 마시면 천국으로 가버릴 수도 있다. 도현이는 각 사람들에게 적당량씩 술을 분배하려고 한다.</p>

<p>그런데 신촌 술집이 항상 그렇듯이, 사장님은 도현이에게 T이상의 술을 반드시 팔아줘야만 예약을 잡아주겠다고 엄포를 놓았다. 마침 도현이의 통장엔 정확히 T의 술을 살 수 있는 금액이 들어 있었고, 도현이는 정확히 T의 술을 결제하였다.</p>

<p>이제 도현이는 모든 사람 i에게 L<sub>i</sub>이상 R<sub>i</sub>이하의 술을 주면서, 그 총합이 정확히 T가 되도록 술을 분배하려고 한다. 하지만 안타깝게도, 사람들은 자신의 주량을 과대평가하는 경향이 있다. 이에 따라 도현이는 S의 값을 정하고, 각 사람에게 그 사람이 원하는 술의 양이 얼마이던지 관계없이 S이하의 술만을 주려고 한다. 이제 도현이는 술도 결제했고, 주량도 조사했으므로,</p>

<ol>
	<li>모든 사람 i가 L<sub>i</sub>이상 R<sub>i</sub>이하의 술을 받으면서,</li>
	<li>모든 사람이 받은 술의 총합이 정확히 T가 되고,</li>
	<li>어떤 사람도 S를 초과하는 술은 받지 않게 할 수 있는,</li>
</ol>

<p>그러한 S값만 결정하면 된다.</p>

<p>도현이를 도와 조건을 만족하는 S값을 찾아주도록 하자.</p>

<p>만약 그런 값이 여러 개라면, 도현이는 그 중 가장 작은 값을 찾고 싶다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 대회 참가자의 수 N과 술의 총량 T가 주어진다. (1 ≤ N ≤ 1000, 1 ≤ T ≤ 10<sup>9</sup>)</p>

<p>둘째 줄부터 N개의 줄에 걸쳐, 각 사람에 대한 L<sub>i</sub>와 R<sub>i</sub>값이 주어진다. (1 ≤ L<sub>i</sub> ≤ R<sub>i</sub> ≤ 10<sup>6</sup>)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>만약 S의 값과는 관계없이 항상 불가능하다면 첫째 줄에 -1만을 출력한다.</p>

<p>문제의 조건을 만족하는 S값이 존재한다면 가장 작은 값 하나를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 10
2 5
4 10
1 3
','4
','BINARY_SEARCH'),
                                                                                                                                        (14772,'BAEKJOON','https://www.acmicpc.net/problem/14627',14627,'파닭파닭','2초','256 MB',9,'<p style="text-align:center"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14627/1.png" style="height:195px; width:258px"></p>

<p>평소 요리에 관심이 많은 승균이는 치킨집을 개업하였다. 승균이네 치킨집은 파닭이 주메뉴다. 승균이는 가게를 오픈하기 전에 남부시장에 들러서 길이가 일정하지 않은 파를 여러 개 구매하였다. 승균이는 파닭의 일정한 맛을 유지하기 위해 각각의 파닭에 같은 양의 파를 넣는다. 또 파닭 맛은 파의 양에 따라 좌우된다고 생각하기 때문에 될 수 있는 한 파의 양을 최대한 많이 넣으려고 한다. (하지만 하나의 파닭에는 하나 이상의 파가 들어가면 안 된다.) 힘든 하루를 마치고 승균이는 파닭을 만들고 남은 파를 라면에 넣어 먹으려고 한다. 이때 라면에 넣을 파의 양을 구하는 프로그램을 작성하시오. 승균이네 치킨집 자는 정수만 표현되기 때문에 정수의 크기로만 자를 수 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 승균이가 시장에서 사 온 파의 개수 S(1 ≤ S ≤ 1,000,000), 그리고 주문받은 파닭의 수 C(1 ≤ C ≤ 1,000,000)가 입력된다. 파의 개수는 항상 파닭의 수를 넘지 않는다. (S ≤ C) 그 후, S 줄에 걸쳐 파의 길이 L(1 ≤ L ≤ 1,000,000,000)이 정수로 입력된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>승균이가 라면에 넣을 파의 양을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>파닭 하나당 넣을 수 있는 최대 파의 길이는 175cm으로, 440cm 파에서 2개, 350cm 파에서 2개, 230cm 파에서 1개, 총 5개의 파닭을 만들 수 있고, 각각의 파에서 90cm + 0cm + 55cm = 145cm의 파가 남는다.</p>

				</div>
				</div>','3 5
440
350
230
','145
','BINARY_SEARCH'),
                                                                                                                                        (14782,'BAEKJOON','https://www.acmicpc.net/problem/15317',15317,'동방 보수','2초','512 MB',14,'<p>아주대학교에는 N개의 동아리방이 있었다. 빅-종빈빌런이 나타나기 전까지는. 어느 날 나타난 빅-종빈빌런은 아주대학교의 모든 동아리방을 파괴하고, 동아리들을 내쫓았다. 빅-종빈빌런이 떠난 자리에는 무너져내린 동방만이 남았다.</p>

<p>M 개의 동방 없는 동아리들은 각자 S<sub>i</sub> (1 ≤ i&nbsp;≤ M)만큼의 예산을 가지고 있다. 각 동아리는 최대 이 예산을 사용하여 동아리방을 재건하려고 한다. 각 동방을 다시 사용할 수 있기 위해서는 보수비용으로 C<sub>i</sub> (1 ≤ i&nbsp;≤ N)원이 필요하다. 한 동방은 하나의 동아리에 배정될 수 있으며, 하나의 동아리는 하나의 동방만을 가질 수 있다. 각 동아리는 보수를 하고 돈이 남는다고 해서 다른 동아리에 돈을 보태주지는 않는다.</p>

<p>종빈이는 소속된 소학회가 동방이 없어 동방 없는 동아리가 얼마나 서러운지 잘 안다. 이에 최대한 많은 동아리가 동방을 가질 수 있게 도와주려 한다. 종빈이가 도울 것은 당연히 예산이 부족해 동아리방을 얻지 못하는 동아리들이다. 종빈이는 이러한 동아리들에게 동방 보수 비용을 보태주려고 한다.&nbsp;</p>

<p>종빈이가 도와줄 수 있는 금액의 합계가 최대 X원이라고 할 때, 동방을 가질 수 있는 동아리는 최대 몇 개일지를 알아보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 N (1 ≤ N ≤ 100,000), M (1 ≤ M ≤ 100,000), X (0 ≤ X ≤ 1,000,000,000) 가 주어진다. 두 번째 줄에 N개의 동방 보수비용 C<sub>i</sub> (0 ≤ C<sub>i</sub> ≤ 1,000,000,000)가 차례로 주어진다. 세 번째 줄에 M개의 동아리의 예산 S<sub>i</sub> (0 ≤ S<sub>i</sub> ≤ 1,000,000,000) 가 차례로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>동방을 가질 수 있는 동아리의 최대 개수를 한 줄에 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>2번 예제에서 각 동아리방을 고치는데 비용이 5, 8, 9, 1, 7이고 각 동아리 들은 2, 10, 5, 3의 금액을 가지고 있다.&nbsp;</p>

<p>이때 2번 동아리에 3번방, 4번 동아리에 4번방 배정하면 종빈이가 돈을 지원해 줄 필요가 없고3번동아리에 1번방을 배정하면 종빈이가 2원을 지원해주면서 종빈이의 도와줄 수 있는 금액 한도 내에서 3개의 동아리가 동아리방을 배정받을 수 있게 된다.</p>

<p>어떻게 배정해도 4개의 동아리가 모두 방을 배정받을 순 없다.</p>

				</div>
				</div>','3 4 0
1 2 3
3 3 3 3
','3
','BINARY_SEARCH'),
                                                                                                                                        (14788,'BAEKJOON','https://www.acmicpc.net/problem/15682',15682,'삼차 방정식 풀기 2','2초','512 MB',21,'<p>삼차 방정식 Ax<sup>3</sup> + Bx<sup>2</sup> + Cx + D = 0&nbsp;의 모든 실수 해를 찾는 프로그램을 작성하시오.</p>

<p>입력으로 주어지는 방정식은 정수 해를 적어도 한 개 갖는다.</p>

<p>A, B, C, D는 -2,000,000보다 크거나 같고, 2,000,000보다 작거나 같은 수이고, A는 0이 아니다. 모든 해는 -1,000,000보다 크거나 같고, 1,000,000보다 작거나 같다. A, B, C, D는 소수점 11째자리까지 들어올 수 있다.&nbsp;주어지는 방정식의 해의 차이는 10<sup>-9</sup>보다 크다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 테스트 케이스의 개수 N (0 < N < 100)이 주어진다. 다음 N개 줄에는 삼차 방정식의 계수 A, B, C, D가 한 줄에 하나씩 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>입력으로 주어진 방정식마다 모든 실수 해를 오름차순으로 출력한다. 해의 절대/상대 오차는 10<sup>-9</sup>까지 허용한다. 중근이 존재하는 경우에는 한 번만 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
1.5 -5 2 -1.5
2 -7 7 -2
2 0 0 0
','3.0000
0.5000 1.0000 2.0000
0.0000
','BINARY_SEARCH'),
                                                                                                                                        (14799,'BAEKJOON','https://www.acmicpc.net/problem/15716',15716,'딸기당근수박참외메론게임','1초','128 MB',21,'<blockquote>
<p>디디가 좋아하는 랜덤게임 ~! 무슨 게임~! 게임 스타트 !!</p>

<p>딸기당근수박참외메론게임♪</p>
</blockquote>

<p>디디대학에서의 딸기당근수박참외메론게임의 룰은 다음과 같은 규칙으로 진행된다.</p>

<ol>
	<li>게임에 쓰일 단어의 수 n과 박자 수 b를 정한다. 단, 박자수는 단어의 수보다 크거나 같아야 하며, 같은 단어가 여러 번 들어갈 수 있다.</li>
	<li>앞서 정한 n만큼, 사용할 단어(S<sub>1</sub>, S<sub>2</sub>, ..., S<sub>n</sub>)를 정한다.</li>
	<li>각 i(1, 2, ...) 차례마다 단어들을 아래 코드와 같은 결과로 말해야 한다.</li>
</ol>

<pre class="brush:c++; toolbar:false;">if(b == 1) printf("%s", S[1]);
else {
    if ((i - 1) % (2 * (b - 1)) + 1 < b) {
        for (int j = 1; j <= (i - 1) % (b - 1) + 1; j++) printf("%s ", S[(j - 1) % n + 1]);
    }
    else {
        for (int j = 1; j <= b - ((i - 1) % (b - 1)); j++)
            printf("%s ", S[(j - 1) % n + 1]);
    }
}
</pre>

<p>단어 집합 S는 번호가 1부터 시작됨에 유의하라.</p>

<p>예를 들어, n은 3, b는 5, 집합&nbsp;S = {king, god, gd}일 때,</p>

<ul>
	<li>king</li>
	<li>king god</li>
	<li>king god gd</li>
	<li>king god gd king</li>
	<li>king god gd king god</li>
	<li>king god gd king</li>
	<li>king god gd</li>
	<li>king god</li>
	<li>king</li>
	<li>king god</li>
	<li>...</li>
</ul>

<p>각 차례마다 위와 같은 순서대로 말해야한다.</p>

<p>디디는 문득 게임내에서 임의의 단어 k가 외쳐진 횟수가 X번째가 될 때, 그 차례가 몇번 째 인지 궁금해지기 시작했다.&nbsp;그런 디디의 궁금증을 해결해 줄 프로그램을 작성하라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 n(1 ≤ n ≤ 2 × 10<sup>5</sup>)과 b(n ≤ b ≤&nbsp;10<sup>12</sup>)가 주어진다.</p>

<p>둘째 줄에는 임의의 단어 k와 X(1 ≤ X ≤ 10<sup>12</sup>)가 주어진다.</p>

<p>셋째 줄에는 게임에 쓰일 단어 n개가 공백으로 구분되어 주어진다. 모든 단어는 알파벳 소문자로 구성되어 있으며, 각 단어의 길이는 10을 넘지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>문제의 정답을 출력하라. 정답이 항상 존재하는 경우만 입력으로 주어지는 것이 보장된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 5
king 8
king god gd
','6
','BINARY_SEARCH'),
                                                                                                                                        (14792,'BAEKJOON','https://www.acmicpc.net/problem/15732',15732,'도토리 숨기기','1초','128 MB',14,'<p>HEPC 1등 상금으로 도토리 D개를 받은 욕심많은 다람쥐 수형이는 자신의 모든 도토리를 뺏기지 않게 보관하려고 한다. 수형이는 1부터 N까지의 번호가 붙여있는 N개의 상자를 가지고 있고 이 안에 도토리를 넣어 다른 다람쥐들이 찾지 못하게 전부 숨기려고 한다. 상자가&nbsp;너무 많아 도토리가 있는 상자를 모두 외울 수 없는 수형이는 A번 상자부터 B번 상자까지 C개 간격으로 도토리를 하나씩 더 넣는 규칙을 만들었다! 다른 다람쥐들이 규칙을 눈치채고 모든 도토리를 잃는 것이 무서운 나머지 이러한 규칙들을 K개를 만들어 도토리를 최대한 안전하게 저장해 놓으려고 한다. 예를 들어 100번 상자부터 150번상자까지 10개 간격으로, 110번 상자부터 150번 상자까지 15개 간격으로 넣는다면 100, 110, 120, 125, 130, 140, 150번 상자에 도토리가 있으며 110번 상자와 140번 상자에는 2개의 도토리가 들어가 있게 된다. 상자 하나에 들어갈 수 있는 도토리의 개수는 제한이 없으며 앞의 상자부터 최대한 꽉꽉 채워나간다고 했을 때 마지막 도토리가 들어가 있는 상자의 번호를 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 상자의 개수 N(1 ≤ N ≤ 1,000,000)과 규칙의 개수 K(1 ≤ K ≤ 10,000), 도토리의 개수 D(1 ≤ D ≤ 1,000,000,000)가 주어진다. 그 후 K개 줄에는 A, B, C(1 ≤ C ≤ A ≤ B ≤ N)가 주어지며 A번 상자부터 B번 상자까지 C개 간격으로 도토리를 하나씩 넣는 규칙을 뜻한다. D는 모든 규칙으로 넣을 수 있는 도토리의 수보다 같거나 작다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>D개의 도토리를 규칙에 맞게 상자 앞에서부터 넣었을 때 마지막 도토리가 들어가는 상자의 번호를 출력하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','200 2 5
100 150 10
110 150 15
','125
','BINARY_SEARCH'),
                                                                                                                                        (14796,'BAEKJOON','https://www.acmicpc.net/problem/15790',15790,'최종병기 활','1초','512 MB',14,'<p>‘최종병기 활’ 이라는 영화를 보던 지훈이는 깊은 감명을 받아 직접 활을 만들어 보기로 한다.&nbsp;</p>

<p>활의 구조는 나무부분인 활대와 고무줄부분인 활줄로 나뉘는데, 나무로 되어있는 활대부분에 활줄을 걸어 활을 만든다.&nbsp;</p>

<p>지훈이의 아버지는 목수이시기 때문에, 활대는 아버지에게 부탁하면 원하는 길이와 모양으로 만들어 주신다. 따라서 지훈이는 활줄을 만들기위해 고무줄을 사러 문구점에 찾아갔다.</p>

<p>문구점에서 고리모양의 고무줄을 사왔는데, 이 고무줄은 N 길이의 둘레를 가진다.&nbsp;</p>

<p>그리고 고무줄에 M개의 위치에 홈이 파여 있는데, 이 고무줄은 너무 튼튼해서 홈이 파인 곳만 절단할 수 있다. 고무줄에서 홈이 파인 위치 X는 시계 12시방향을 기준으로 0부터 시작해서 시계방향으로 1씩 증가한다. 따라서 홈이 파인 위치 X는 0부터 N-1 까지의 정수로 표현된다.</p>

<p>아래의 [그림2]은 N = 20, M = 3, X = {2,4,6} 일 때 고무줄의 그림이다.</p>

<p>또한 최고의 활을 만들기위해서는 K겹의 고무줄이 필요하다. 따라서 주어진 고무줄을 적당히 절단하여 K개의 직선고무줄을 얻어낼 것이다. K겹의 직선고무줄을 겹쳐 활대에 걸게 되는데, 이때 K개의 직선고무줄 중 가장 작은 고무줄의 길이에 의해 활의 길이가 결정된다. 즉, 절단한 고무줄 중 가장 작은 고무줄의 길이가 활의 길이가 된다.</p>

<p>지훈이가 만들 수있는 가장 긴 활의 길이는?</p>

<p style="text-align: center;"><img alt="" src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/15790/1.png" style="width: 390.833px; height: 155.833px;"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫째 줄에 고무줄의 둘레 N(1 ≤ N ≤ 100000 인 정수)과 절단이 가능한 홈의 개수 M(1 ≤ M ≤ min(N,1000) 인 정수) 그리고 최고의 활을 만들때 필요한 고무줄겹의 수 K(1 ≤ K ≤ M 인 정수)가 주어진다.</p>

<p>이후 두 번째 줄부터 M+1번째 줄까지 고무줄에서 절단이 가능한 홈의 위치 X(0 ≤ X ≤ N-1 인 정수)가 주어진다. 주어지는 홈의 위치는 각각 유일하며 오름차순으로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>만들 수 있는 가장 긴 활의 길이를 출력하시오. 만약 활을 만들 수 없다면 -1을 출력하시오</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','20 3 3
2
4
6
','2
','BINARY_SEARCH'),
                                                                                                                                        (14795,'BAEKJOON','https://www.acmicpc.net/problem/15810',15810,'풍선 공장','1초','256 MB',9,'<p>전북대학교 프로그래밍 경진 대회에서는 ACM-ICPC 스타일을 따라 문제를 해결한 팀에게 그 문제에 해당하는 풍선을 달아준다.</p>

<p>풍선을 담당하는 N명의 스태프가 있다. 스태프마다 폐활량이 다르기 때문에 하나의 풍선을 만드는 데 걸리는 시간은 다양하다.</p>

<p>대회가 시작되고 운영진으로부터 M개의 풍선을 만들어 달라는 의뢰가 들어왔다!</p>

<p>각 스태프가 풍선 하나를 만드는 시간(분) A<sub>i</sub>를 알고 있을 때, 풍선 M개를 만들기 위해서 최소 몇 분이 걸릴까?</p>

<p>풍선을 만든 후에 문제를 표시할 것이기 때문에 풍선의 종류는 상관이 없다.</p>

<p>모든 스태프는 풍선을 만드는 데에 정확하게 자신이 말한 시간만큼 걸린다. 예를 들어 스태프 A가 풍선 하나를 만드는 데 5분이 걸린다면, 0분에 만들기 시작해서 5분에 끝난다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>스태프의 수 N과 풍선의 개수 M이 입력된다. (1 ≤ N, M ≤ 1 000 000)</p>

<p>다음 줄에 N명의 각 스태프들이 풍선 하나를 만드는 데 걸리는 시간 A<sub>i</sub>가 순서대로 주어진다. A<sub>i</sub>는 1 000 000 이하의 자연수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>M개의 풍선이 다 만들어지는 최소 시간을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>1, 2, 3번 스태프가 각각 5분, 7분, 3분씩 걸린다면 3분이 지났을 때 3번 스태프가 1개, 5분에 1번 스태프가 1개, 6분에 3번 스태프가 1개를, 7분에 2번 스태프가 1개를, 9분에 3번 스태프가 1개를, 10분에 1번 스태프가 1개를, 12분에 3번 스태프가 1개를, 14분에 2번 스태프가 마지막 1개를 만들면 총 14분으로 최소 시간이 걸린다.&nbsp;</p>

				</div>
				</div>','3 8
5 7 3
','14
','BINARY_SEARCH'),
                                                                                                                                        (14789,'BAEKJOON','https://www.acmicpc.net/problem/15908',15908,'복구','2초','512 MB',19,'<p>shake! 회사에서는 사용자 목록을 자체 개발한 특별한 방법으로 저장한다. 이 방법을 알고 있는 사람은 세계에 단 두 명밖에 없었지만, 최근 Acka가 shake! 회사를 해킹하여 방법을 세상에 공개하였다.</p>

<p>그 방법은 각 사용자의 데이터를 양의 정수로 표현한 뒤, 데이터 조각으로 바꿔 이어 붙인 뒤 파일에 저장하는 것이다. 각 데이터 조각은 맨 앞에 데이터 조각의 길이를 적고, 나머지 부분에 양의 정수로 표현한 데이터를 적는 것으로 만든다.</p>

<p>예를 들어, 3명의 사용자가 있고, 각 사용자의 데이터가 {2, 5, 5}, {1, 4, 5, 1}, {2, 3, 1}이라고 해 보자. 각각을 데이터 조각으로 바꾸면 {4, 2, 5, 5}, {5, 1, 4, 5, 1}, {4, 2, 3, 1}이 되고, 최종적으로 데이터 조각을 이어 붙여 {4, 2, 5, 5, 5, 1, 4, 5, 1, 4, 2, 3, 1}을 파일에 저장한다.</p>

<p>그런데 Acka가 해킹하는 과정에서 사용자 목록을 저장한 파일을 훼손할 수 있기 때문에, 사용자 목록 파일에 원래는 있어야 하지 말아야 할 수들이 추가되었을 수 있다. shake! 회사에서는 사용자 목록을 복구하기 위해 각 수가 원래의 사용자 목록에도 있었을 가능성을 모두 계산하였으나, 원래의 파일을 복구하는 데에는 실패했다.</p>

<p>이제, shake! 회사의 유능한 직원인 당신이 원래의 파일을 복구해야 한다. 손상된 파일과 각 수가 원래의 사용자 목록에도 있었을 가능성이 주어질 때, 수를 적당히 지워서 올바른 파일로 복구하되, 지운 수들의 가능성의 최댓값을 최소화하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 손상된 파일을 이루는 수의 개수 N(1 ≤ N ≤ 100,000)이 주어진다.</p>

<p>다음 줄에 손상된 파일을 이루는 정수 N개가 주어진다. 이 수들은 모두 1 이상 N 이하이다.</p>

<p>다음 줄에 각 수가 원래의 사용자 목록에도 있었을 가능성을 나타내는 정수 N개가 주어진다. 이 수들은 모두 1 이상 100,000 이하이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 줄에 지운 수들의 가능성의 최댓값을 최소화했을 때, 지운 수들의 가능성의 최댓값을 출력한다.</p>

<p>만약 수를 지우지 않아도 된다면 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>예제 1에 대해, 3번째 수와 6번째 수를 지우면 {3, 1, 2}, {2, 1}, {3, 1, 3}이 된다.</p>

<p>예제 2에 대해, 1번째, 8번째, 9번째, 11번째, 16번째, 17번째, 19번째 수를 지우면 {4, 2, 5, 5}, {5, 1, 4, 5, 1}, {4, 2, 5, 2}가 된다.</p>

<p>예제 3에 대해, 수를 지우지 않아도 {5, 5, 5, 5, 5}, {4, 4, 4, 4}, {3, 3, 3}, {2, 2}, {1}이 된다.</p>

				</div>
				</div>','10
3 1 3 2 2 3 1 3 1 3
2 3 1 2 2 1 2 3 3 2
','1
','BINARY_SEARCH'),
                                                                                                                                        (14790,'BAEKJOON','https://www.acmicpc.net/problem/15968',15968,'물병 잡기','2초','256 MB',19,'<p>재혁이는 신기한 취미를 가지고 있다. 그 취미는 어떤 시간 T에 위치가 L 이상 R 이하인 모든 물병의 물을 맛보는 것이다!! 하지만, 가만히 앉아서 제자리에서 물만 먹던 재혁이는 비만에 걸릴 것을 우려하여 움직이기로 했다. 그리고 물병들은 자유분방하기 때문에 어떤 특정 상황이 되면 움직인다.</p>

<p>물병에는 1, 2, ..., N의 번호가 붙어 있고, i의 번호가 붙은 물병의 초기 위치는 -i이다. 재혁이의 초기 위치는 0이다. 재혁이와 물병들은 매초 순간이동을 하는데, 그 규칙은 다음과 같다.</p>

<ol>
	<li>재혁이는 1초마다 오른쪽으로 1씩 움직인다.</li>
	<li>물병은 물이 쏟아질 것을 우려해서 함부로 움직이지 않는다. 재혁이가 이동한 후, 물병 1은 재혁이와의 거리가 D<sub>1</sub>+1 이상 차이나면 (재혁이의 위치)-1로 이동한다.</li>
	<li>물병 1의 위치가 결정된 후, 물병 2는 물병 1과의 거리가 D<sub>2</sub>+1 이상 차이나면 (물병 1의 위치)-1로 이동한다. 같은 방식으로 물병 3, 4, ..., N이 순서대로 이동한다. 즉 물병 i는 물병 i-1과의 거리가 D<sub>i</sub>+1 이상 차이나면 (물병 i-1의 위치)-1로 이동한다.</li>
</ol>

<p>재혁이는 무지막지하게 물을 먹다가 갑자기 어떤 시간 T와 구간 L, R에 대해서 자신이 몇개의 물을 마실 수 있는지 궁금해졌다. 그런데 물을 너무 많이 먹은 나머지 재혁이 자신도 물병이라고 착각하기 시작했다. 즉 재혁이의 위치가 L 이상 R 이하라면 질의의 답에 1을 더해야 한다. 재혁이를 위해 시간 T와 L, R들이 주어졌을 때 몇 개의 물병을 잡을 수 있는지 알려주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄엔 물병의 개수 N(1 ≤ N ≤ 500,000)과 질의의 개수 Q(1 ≤ Q ≤ 500,000)가 주어진다.</p>

<p>다음 N개의 줄에 D<sub>i</sub>(1 ≤ D<sub>i</sub>&nbsp;≤ 1,000,000,000)가 주어진다.</p>

<p>다음 Q개의 줄에 T<sub>i</sub>, L<sub>i</sub>, R<sub>i</sub>(1 ≤ T<sub>i</sub>, L<sub>i</sub>&nbsp;≤ 1,000,000,000, L<sub>i</sub>&nbsp;≤ R<sub>i</sub>&nbsp;≤ 1,000,000,000)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>Q줄에 걸쳐 질의의 답을 출력한다. 즉 i번째 줄에는 시간 T<sub>i</sub>에 위치가 L<sub>i</sub>&nbsp;이상 R<sub>i</sub>&nbsp;이하인 물병이 몇 개인지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 6
2
5
3
1 2 4
2 2 4
3 2 4
4 2 4
5 2 4
6 2 4
','0
1
1
2
1
2
','BINARY_SEARCH'),
                                                                                                                                        (14801,'BAEKJOON','https://www.acmicpc.net/problem/16160',16160,'이진 트리와 수열','3초','256 MB',21,'<p>높이가 <i>H</i>인 포화 이진 트리가 주어진다. 트리의 리프&nbsp;노드들에는 순서대로 길이 <i>N</i>인 수열 <em>P</em>가 반복되어 나타나며, 부모 노드는 자신의 왼쪽 자식 노드와&nbsp;오른쪽 자식 노드의 수열들을 순서대로&nbsp;가지고 있다. 예를 들어, <i>H</i>가&nbsp;4고 수열 <em>P</em>가 {2, 3, 1}이라면 트리는 아래의 그림처럼 형성된다.</p>

<p><meta charset="utf-8"></p>

<p dir="ltr" style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/a6c47613-babc-4da2-90d1-92c8db5a8fcd/-/preview/" style="width: 360px; height: 125.833px;"></p>

<p dir="ltr">우리는 어떤 특정 깊이 <em>X</em>에서 동일한 수열이 <em>K</em>번 이상 등장할 때 <em>X</em>의 최솟값을&nbsp;구하려고 한다.&nbsp;예를 들어,&nbsp;<em>K</em>=2일 때&nbsp;깊이 3에서&nbsp;수열 {2, 3}이 두번 등장하고, 그보다 더 작은 깊이에서는 두 번 이상 등장하는 수열이 존재하지 않으므로 최소 깊이는 3이 된다. 위 작업을 수행할 수 있는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 트리의 높이&nbsp;<i>H</i>(3 ≤ <i>H</i>&nbsp;≤ 63),&nbsp;수열 <em>P</em>의 길이 <i>N</i>(1 ≤ <i>N</i>&nbsp;≤ min(2<sup><i>H</i>-1</sup>, 2 x 10<sup>5</sup>)),&nbsp;<em>K</em>(1 ≤ <em>K</em> ≤ 2<sup><i>H</i>-1</sup>)가 공백으로 구분되어 주어진다.</p>

<p><meta charset="utf-8"></p>

<p dir="ltr">둘째 줄에는 수열 <em>P</em>의 원소를 나타내는 <i>N</i>개의 정수가&nbsp;순서대로 공백으로 구분되어 주어지며, 이 값은&nbsp;10<sup>5</sup>을 넘지 않는 양의 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>동일한 수열이 <em>K</em>번 이상 등장하는 최소 깊이를 출력하라. 만약 그러한 깊이가 존재하지 않는다면 -1을 출력하라.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 3 2
2 3 1
','3
','BINARY_SEARCH'),
                                                                                                                                        (14805,'BAEKJOON','https://www.acmicpc.net/problem/16401',16401,'과자 나눠주기','1초','256 MB',9,'<p>명절이 되면, 홍익이 집에는 조카들이 놀러 온다.  떼를 쓰는 조카들을 달래기 위해 홍익이는 막대 과자를 하나씩 나눠준다.</p>

<p>조카들이 과자를 먹는 동안은 떼를 쓰지 않기 때문에, 홍익이는 조카들에게 최대한 긴 과자를 나눠주려고 한다.</p>

<p>그런데 나눠준 과자의 길이가 하나라도 다르면 조카끼리 싸움이 일어난다. 따라서 반드시 모든 조카에게 같은 길이의 막대 과자를 나눠주어야 한다.</p>

<p>M명의 조카가 있고 N개의 과자가 있을 때, 조카 1명에게 줄 수 있는 막대 과자의 최대 길이를 구하라.</p>

<p>단, 막대 과자는 길이와 상관없이 여러 조각으로 나눠질 수 있지만, 과자를 하나로 합칠 수는 없다. 단, 막대 과자의 길이는 양의 정수여야 한다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 조카의 수 M (1 ≤ M ≤ 1,000,000), 과자의 수 N (1 ≤ N ≤ 1,000,000)이 주어진다.</p>

<p>둘째 줄에 과자 N개의 길이 L<sub>1</sub>, L<sub>2</sub>, ..., L<sub>N</sub>이 공백으로 구분되어 주어진다. 과자의 길이는 (1 ≤ L<sub>1</sub>, L<sub>2</sub>, ..., L<sub>N </sub>≤ 1,000,000,000) 를 만족한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에 조카 1명에게 줄 수 있는 막대 과자의 최대 길이를 출력한다.</p>

<p>단, 모든 조카에게 같은 길이의 막대과자를 나눠줄 수 없다면, 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 10
1 2 3 4 5 6 7 8 9 10
','8
','BINARY_SEARCH'),
                                                                                                                                        (14806,'BAEKJOON','https://www.acmicpc.net/problem/16434',16434,'드래곤 앤 던전','1초','256 MB',12,'<p>용사는 공주를 구하기 위해 무시무시한 용이 있는 던전으로 향하기로 하였습니다. 우선 용사는 용사 자신과 던전을 분석하였습니다.</p>

<p>용사에게는 세 종류의 능력치가 있습니다.&nbsp;</p>

<ul>
	<li><em>H<sub>MaxHP</sub></em> : 용사의 최대 생명력입니다. 이 값은 1이상이어야 하며 던전에 들어간 이후로 변하지 않습니다.</li>
	<li><em>H<sub>CurHP</sub></em> : 현재 용사의 생명력입니다. 던전에&nbsp;들어가기 전 이 값은 용사의 최대 생명력&nbsp;<em>H<sub>MaxHP</sub></em>와&nbsp;같습니다. 이 값은 <em>H<sub>MaxHP</sub></em>보다 커질 수&nbsp;없습니다.</li>
	<li><em>H<sub>ATK</sub></em> : 용사의 공격력입니다.</li>
</ul>

<p>던전은 총 <em>N</em>개의 방으로 이루어져 있고 <em>i</em>번째 방을 통해서만 <em>i</em>+1번째 방으로 이동 할 수 있습니다. 방에는 포션이 있거나 몬스터가 있는데 몬스터가 있을 경우 몬스터를 쓰러트려야지 다음방으로 이동 할 수 있습니다. <em>N</em>번째 방에는 공주와 용이 있고, 용을 무찌르면&nbsp;공주를 구할 수 있습니다.</p>

<p>몬스터가 있는 방에 올 경우 다음과 같이 전투가 진행됩니다.</p>

<ol>
	<li>용사의 공격력&nbsp;<em>H<sub>ATK</sub></em>만큼 몬스터의 생명력을 깎습니다.</li>
	<li>몬스터의 생명력이 0 이하이면 전투가 종료되고 용사는 다음 방으로 이동합니다.</li>
	<li>몬스터의 공격력만큼 용사의 생명력&nbsp;<em>H<sub>CurHP</sub></em>를&nbsp;깎습니다.</li>
	<li>용사의 생명력이 0 이하이면 전투가 종료되고 용사는 사망합니다.</li>
	<li>다시 1부터&nbsp;진행합니다.</li>
</ol>

<p>포션이 있는 방에 올 경우 포션을 마셔서&nbsp;현재 용사의 생명력 <em>H<sub>CurHP</sub></em>가 일정량 회복되고 공격력 <em>H<sub>ATK</sub></em>도 일정량만큼 증가됩니다. 회복된 생명력이 최대 생명력 <em>H<sub>MaxHP</sub></em>보다 큰 경우 용사의 현재 생명력 <em>H<sub>CurHP</sub></em>가 최대 생명력 <em>H<sub>MaxHP</sub></em>와&nbsp;같아집니다.</p>

<p>용사는 던전으로 향하기 전에 만반의 준비를 하고 있습니다. 용사는 수련을 하면 최대 생명력 <em>H<sub>MaxHP</sub></em>를 늘릴 수 있는데 얼마나 수련해야 할지 고민입니다.</p>

<p>용사는 <em>N</em>번 방에 있는 용을 쓰러트리기 위한 최소의 <em>H<sub>MaxHP</sub></em>를 여러분이 계산해주면 좋겠다고 합니다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 방의 개수 <em>N&nbsp;</em>(1 ≤&nbsp;<em>N<sub>&nbsp;&nbsp;</sub></em>≤ 123,456)&nbsp;과 용사의 초기 공격력&nbsp;<em>H<sub>ATK</sub></em>&nbsp;(1 ≤&nbsp;<em>H<sub>ATK&nbsp;&nbsp;</sub></em>≤&nbsp;1,000,000) 가 주어집니다.</p>

<p><em>i</em>+1번째 줄엔 <em>i</em>번째 방의 정보를 나타내는 세개의 정수 <em>t<sub><span style="font-size: 10.8333px;">i</span></sub></em>, <em>a<sub>i</sub></em>, <em>h<sub>i</sub></em>&nbsp;(<em>t<sub><span style="font-size: 10.8333px;">i</span></sub></em> ∈ {1, 2}, 1 ≤ <em>a<sub>i</sub></em>, <em>h<sub>i&nbsp;&nbsp;</sub></em>≤&nbsp;1,000,000) 가&nbsp;주어집니다.&nbsp;</p>

<p><em>t<sub><span style="font-size: 10.8333px;">i</span></sub></em>가 1인 경우 공격력이 <em>a<sub>i</sub></em>이고 생명력이 <em>h<sub>i</sub></em>인 몬스터가 있음을 나타내고,&nbsp;<em>t<sub><span style="font-size: 10.8333px;">i</span></sub></em>가 2인 경우 용사의 공격력 <em>H<sub>ATK</sub></em>를&nbsp;<em>a<sub>i</sub></em>만큼 증가시켜주고 용사의 현재 생명력 <em>H<sub>CurHP</sub></em>를&nbsp;<em>h<sub>i</sub></em>만큼 회복시켜주는 포션이 있음을 나타냅니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>용사가 <em>N</em>번째 방에 있는 용을 쓰러트리기 위한 최소의 <em>H<sub>MaxHP</sub></em>를 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 3
1 1 20
2 3 10
1 3 100','49','BINARY_SEARCH'),
                                                                                                                                        (14811,'BAEKJOON','https://www.acmicpc.net/problem/16564',16564,'히오스 프로게이머','2초','512 MB',10,'<p>성권이는 <a href="https://heroesofthestorm.com/">Heroes of the Storm</a> 프로게이머 지망생이다.</p>

<p>이 게임에는 총 N개의 캐릭터가 있다. 그리고 현재 각 캐릭터의 레벨은 X<sub>i</sub>이다. 성권이는 앞으로 게임이 끝날 때까지, 레벨을 최대 총합 K만큼 올릴 수 있다.</p>

<p>팀 목표레벨 T =min(X<sub>i</sub>) (1 ≤ i ≤ N)라고 정의하면, 게임이 끝날 때까지 성권이가 달성할 수 있는 최대 팀 목표레벨 T는 무엇인가?</p>

<p>예를 들어, N = 3, X<sub>1</sub>= 10, X<sub>2</sub>= 20, X<sub>3</sub>= 15이고 K = 10일 때, X<sub>1</sub>을 7만큼 올리고 X<sub>3</sub>을 2만큼 올리면 최소 레벨 X<sub>i</sub>는 17이 된다. 따라서 팀 목표레벨 T는 17이다. 이 경우처럼 레벨을 총합 K보다 적게 올릴 수도 있다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 캐릭터의 개수 N, 올릴 수 있는 레벨 총합 K가 주어진다. (1 ≤ N ≤1,000,000, 1 ≤ K ≤ 1,000,000,000)</p>

<p>다음 N개의 줄에는 현재 각 캐릭터의 레벨이 X<sub>1</sub><em>, </em>X<sub>2</sub>, X<sub>3</sub>, ... , X<sub>n</sub> 으로 주어진다. (1 ≤ X<sub>i</sub> ≤ 1,000,000,000)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>가능한 최대 팀 목표레벨 T를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 10
10
20
15
','17
','BINARY_SEARCH'),
                                                                                                                                        (14809,'BAEKJOON','https://www.acmicpc.net/problem/17078',17078,'원 위의 개미','1초','512 MB',17,'<p>택희는 원 하나를 갖고 있고, 그 원의 둘레를 일정한 속도로 기어다니는 개미 <em>M</em>마리를 키우고 있다. 각 개미들의 크기는 무시할 수 있을 정도로 매우 작다.</p>

<p>어느 날 택희는 원주를 <em>N</em>(≥<em>M</em>)등분하는 점을 찍고, 각 지점에 시계방향으로 1, 2, 3, …, <em>N</em>의 번호를 붙였다. 각 지점의 번호를 시계방향으로 읽으면 1, 2, 3, …, <em>N</em>이 되며, <em>N</em>번 지점 다음에는 1번 지점이 있게 될 것이다. 그 후, 모든 개미가 서로 다른 어떤 지점 위에 있도록 개미들을 놓았다. 개미들은 시계방향 또는 반시계방향의 초기 방향을 바라보고 있으며, 택희가 “시작”을 외치면 모든 개미들은 바라보고 있는 방향으로 이동하게 된다. 시작 시각은 0이며, 그 이후 정확히 1초마다 개미들은 다음 지점에 도착한다.</p>

<p>모든 개미는 동일한 속력으로 이동하다가, 서로를 마주칠 경우 그 즉시 방향을 바꾸어 돌아가게 된다. 개미들은 무한히 움직이며 택희가 찍은 <em>N</em>개의 점을 밟고 지나다니게 될 것이다.</p>

<p>택희는 개미들의 초기 위치와 방향에 따라, 같은 시간동안 상대적으로 조금 더 많이 밟히는 지점들이 있을 것이라 생각했다. 하지만 개미들은 멈추지 않기 때문에, 실제로 그런 지점이 있는지는 확인할 수가 없었다.</p>

<p>개미들은 시각 0에 자신이 서 있는 지점을 밟고 있으므로, 개미가 초기에 서 있는 모든 지점은 시각 0에 밟힌 횟수가 1이며, 아닌 모든 지점은 시각 0에 밟힌 횟수가 0이다. 또한, 개미 두 마리가 동시에 어떤 지점을 밟을 경우, 그 지점은 그 시각에 두 번 밟힌 것으로 센다.</p>

<p>택희는 자신이 세운 가설을 실험할 프로그램이 필요하다고 판단하였다. 정확히는, 어떤 지점 <em>P</em>가 <em>X</em>번 이상 밟히게 되는 최초의 시각이&nbsp;여러 개 궁금해졌다. 택희를 위해, 이러한 질의를 빠르게 해결해 줄 프로그램을 작성해보도록 하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 원주 위의 점의 개수 <em>N</em> (2&nbsp;≤ <em>N</em> ≤ 10<sup>5</sup>)과 개미의 수 <em>M</em> (1 ≤ <em>M</em> ≤ <em>N</em>), 택희가 궁금해하는 정보의 수 <em>Q</em> (1 ≤ <em>Q</em> ≤ 10<sup>5</sup>)가 주어진다.</p>

<p>이어 <em>M</em>개의 줄에 각 개미들의 초기 위치 <em>P<sub>i</sub></em>와 진행방향 <em>d<sub>i</sub></em>가 주어진다. (1 ≤ <em>P<sub>i</sub></em> ≤ <em>N</em>, <em>d<sub>i</sub></em> = 0 or 1)</p>

<p>모든 <em>P<sub>i</sub></em>는 서로 다르다.</p>

<p><em>d<sub>i&nbsp;</sub></em>= 0일 경우 개미는 시계방향으로 이동하고, <em>d<sub>i&nbsp;</sub></em>= 1일 경우 반시계방향으로 이동한다.</p>

<p>이어 <em>Q</em>줄에 걸쳐, 택희가 궁금해하는 정보 <em>P</em> <em>X</em>가 주어진다. (1 ≤ <em>P</em> ≤ <em>N</em>, 1 ≤ <em>X</em> ≤ 10<sup>9</sup>)</p>

<p>이는 지점 <em>P</em>가 <em>X</em>번 이상 밟히는 최초의 시각이 궁금하다는 의미이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p><em>Q</em>줄에 걸쳐, 각 질의의 답을 출력한다. 시작 시각은 0이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 2 3
2 0
4 1
3 4
1 2
2 1
','5
3
0
','BINARY_SEARCH'),
                                                                                                                                        (14815,'BAEKJOON','https://www.acmicpc.net/problem/17124',17124,'두 개의 배열','2초','512 MB',8,'<p>정수 배열 A 와 B가 있다. A는 총 n개의 서로 다른 양의 정수를 포함하고 B는 총 m개의 서로 다른 양의 정수를 포함한다.</p>

<p>A, B를 이용해서 길이가 n인 새로운 배열 C를 만들어보자.</p>

<ul>
	<li>C[i] 는 배열 B에 있는 값 중 A[i] 에 가장 가까운 값 (절대값 차이가 가장 작은 값)으로 정의 된다.&nbsp;</li>
	<li>만약 이 조건을 만족하는 값들이 여럿 있는 경우, 그 중 가장 크기가 작은 값으로 정의 된다.</li>
</ul>

<p>예를 들어 A = [20, 5, 14, 9] 그리고 B = [16, 8, 12] 라고 해보자.</p>

<ul>
	<li>C[1] = 16 이다 - 왜냐하면 B[1] = 16이 A[1] = 20에 가장 가깝기 때문이다.</li>
	<li>C[2] = 8 이다 - 왜냐하면 B[2] = 8이 A[2] = 5에 가장 가깝기 때문이다.</li>
	<li>C[3] = 12 이다 - 왜냐하면 B[1] = 16 와 B[3] = 12 모두 A[3] = 14에 가장 가깝지만, B[3]의 값이 더 작기 때문이다.</li>
	<li>C[4] = 8이다.</li>
</ul>

<p>이 예제의 경우 C = [16, 8, 12, 8]으로 정의된다.</p>

<p>두 배열 A와 B가 주어졌을 때, 새로운 배열 C를 계산하여 배열 C에 포함된 값들의 합을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 수 T (1 <= T <= 10)가 주어진다.</p>

<p>각 테스트 케이스는 세 줄에 걸쳐서 주어진다.</p>

<p>첫 줄에는 n과 m이 공백으로 구분되어 주어진다 (1 <= n, m <= 10^6).</p>

<p>두 번째 줄에는 공백으로 구분된 n개의 정수가 주어지며, A[1] 부터 A[n]을 나타낸다 (각각의 값은 1이상 10^9 이하이다).</p>

<p>세 번째 줄에는 공백으로 구분된 m개의 정수가 주어지며, B[1] 부터 B[m]을 나타낸다 (각각의 값은 1이상 10^9 이하이다).</p>

<p>앞서 언급한대로, A와 B는 각각 서로 다른 양의 정수들을 포함한 배열들이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 배열 C를 구하고 해당 배열의 모든 원소 합을 한 줄에 출력하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 테스트 케이스는 문제에서 언급되었다.</p>

<p>두 번째 테스트 케이스의 경우 A = [16, 8, 12] 이고 &nbsp;B = [20, 5, 14, 9] 이다.</p>

<p>이 경우 배열 C는 [14, 9, 14] 이며 따라서 정답은 14+9+14 = 37이다.</p>

<p>세 번째 테스트의 경우 C = [2 2 3] 이며 정답은 7이다.&nbsp;</p>

				</div>
				</div>','3
4 3
20 5 14 9
16 8 12
3 4
16 8 12
20 5 14 9
3 3
1 2 3
2 3 4
','44
37
7
','BINARY_SEARCH'),
                                                                                                                                        (14814,'BAEKJOON','https://www.acmicpc.net/problem/17179',17179,'케이크 자르기','1초','512 MB',11,'<p>생일을 맞이한 주성이가 생일 파티를 준비하려고 한다. 주성이는 일반 케이크 대신 평소 좋아하던 롤 케이크를 준비했다. 롤 케이크에는 장식이 존재해서 특정 위치에서만 자를 수 있다. 주성이는 롤 케이크 조각을 파티에 올 친구의 수 만큼 준비하고 싶어서, 가장 작은 조각의 크기를 미리 알아보기로 했다. 하지만 짓궂은 주성이의 친구들은 생일파티에 몇 명이 참석하는지 직접적으로 알려주지를 않는다. 그래서 몇 개의 수를 목록에 적어, 각 수만큼 조각을 만들었을 때 가장 작은 조각의 길이의 최댓값을 구하려고 한다.</p>

<p>예를 들어 70cm의 롤 케이크에 자를 수 있는 지점이 5군데(10cm, 20cm, 35cm, 55cm, 60cm)가 있다고 하자. 만약 목록에 적힌 수 중 하나가 3이라면 이때 가장 작은 조각의 길이는 최대 15cm이다. 예를 들어 20cm, 35cm, 55cm 지점을 자를 때 최대가 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 자르는 횟수가 담긴 목록의 길이 N과 자를 수 있는 지점의 개수 M, 그리고 롤 케이크의 길이인 정수 L이 주어진다. (1 ≤ N ≤ M ≤ 1,000, 1 < L ≤ 4,000,000)</p>

<p>다음 M줄에 걸쳐 자를 수 있는 지점을 나타내는 정수 S<sub>i</sub>가 주어진다. (1 ≤ S<sub>i</sub> < L)</p>

<p>다음 N줄에 걸쳐 자르는 횟수를 나타내는 정수 Q<sub>i</sub>가 주어진다. (1 ≤ Q<sub>i</sub>&nbsp;≤ M)</p>

<p>S<sub>i</sub>는 오름차순으로 주어지고 중복되는 수는 없으며, Q<sub>i</sub>도 마찬가지이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>N개 줄에 걸쳐 각 목록에 있는 횟수대로 롤 케이크를 잘랐을 때 가장 작은 조각의 길이의 최댓값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2 5 70
10
20
35
55
60
3
4
','15
10
','BINARY_SEARCH'),
                                                                                                                                        (14817,'BAEKJOON','https://www.acmicpc.net/problem/17245',17245,'서버실','1초','256 MB',9,'<p>서버실은 여러 대의 서버 컴퓨터들을 안정적으로 운영할 수 있는 환경을 유지하기 위해 설치된 공간을 말한다.</p>

<p>이 회사의 서버실은 N×N 칸으로 구분되어 있고, 각 칸마다 서버 랙이 있어 컴퓨터를 여러 대 쌓을 수 있다. 서버가 과열되지 않도록 서버실에는 언제나 냉방기가 작동하고 있다. 그런데 회사가 경제적으로 어려움에 처한 나머지, 서버실의 운영 비용을 줄이기 위해 서버실 내의 컴퓨터 중 절반만 정상적으로 관리하기로 하였다.</p>

<p>냉방기에서 나온 차가운 공기는 서버실의 아래쪽부터 서서히 차오른다. 1분마다 컴퓨터 한 대의 높이만큼 방을 채운다. 이 회사의 서버 컴퓨터는 환경에 매우 민감하여 차가운 공기를 받아야만 동작하고 그렇지 못하면 장애를 일으킨다.</p>

<p>서버실의 컴퓨터 중 절반 이상이 켜지려면 몇 분이 필요할까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>정수 N이 주어진다. (1 ≤ N ≤ 1000)</p>

<p>N×N개의 각 칸에 컴퓨터가 몇 대 쌓여있는지가 입력된다. 한 칸에는 최대 10,000,000대까지 쌓여있을 수 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>몇 분이 지나야 전체 컴퓨터의 절반 이상이 장애를 일으키지 않고 동작할 수 있는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1 4 0 2 1
0 0 5 6 3
8 4 7 2 0
7 1 0 5 3
4 5 7 9 1
','3
','BINARY_SEARCH'),
                                                                                                                                        (14819,'BAEKJOON','https://www.acmicpc.net/problem/17266',17266,'어두운 굴다리','1초','256 MB',7,'<p>인하대학교 후문 뒤쪽에는 어두운 굴다리가 있다. 겁쟁이 상빈이는 길이 조금이라도 어둡다면 가지 않는다. 따라서 굴다리로 가면 최단거리로 집까지 갈수 있지만, 굴다리는 어둡기 때문에 빙빙 돌아서 집으로 간다. 안타깝게 여긴 인식이는 굴다리 모든 길 0~<em>N</em>을 밝히게 가로등을 설치해 달라고 인천광역시에 민원을 넣었다. 인천광역시에서 가로등을 설치할 개수 <em>M</em>과 각 가로등의 위치 <em>x</em>들의 결정을 끝냈다. 그리고 각 가로등은 높이만큼 주위를 비출 수 있다. 하지만 갑자기 예산이 부족해진 인천광역시는 가로등의 높이가 높을수록 가격이 비싸지기 때문에 최소한의 높이로 굴다리 모든 길 0~<em>N</em>을 밝히고자 한다. 최소한의 예산이 들 높이를 구하자.<strong> 단 가로등은 모두 높이가 같아야 하고, 정수이다.</strong></p>

<p>다음 그림을 보자.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/d21c182b-3a7d-48ba-b198-65a1bd3ddd98/-/preview/"></p>

<p style="text-align: center;"><strong>가로등의 높이가 H라면 왼쪽으로 H, 오른쪽으로 H만큼 주위를 비춘다.</strong></p>

<p>다음 그림은 예제1에 대한 설명이다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/a1f0fc3c-7c16-4108-bb18-31fe9ff3bbe4/-/preview/" style="height: 121.667px; width: 347.5px;"></p>

<p>가로등의 높이가 1일 경우 0~1사이의 길이 어둡기 때문에 상빈이는 지나가지 못한다.</p>

<p>아래 그림처럼 높이가 2일 경우 0~5의 모든 길이 밝기 때문에 상빈이는 지나갈 수 있다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/0c74958f-4437-405d-9242-f204282c0b45/-/preview/" style="height: 152.5px; width: 347.5px;"></p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 굴다리의 길이 <em>N </em>이 주어진다. (1 ≤ <em>N</em> ≤ 100,000)</p>

<p>두 번째 줄에 가로등의 개수 <em>M </em>이 주어진다. (1 ≤ <em>M</em> ≤ <em>N</em>)</p>

<p>다음 줄에 <em>M </em>개의 설치할 수 있는 가로등의 위치 <em>x </em>가 주어진다. (0 ≤ <em>x</em> ≤ <i>N</i>)</p>

<p>가로등의 위치 <em>x</em>는 오름차순으로 입력받으며 가로등의 위치는 중복되지 않으며, 정수이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>굴다리의 길이 N을 모두 비추기 위한 가로등의 최소 높이를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
2
2 4
','2
','BINARY_SEARCH'),
                                                                                                                                        (14820,'BAEKJOON','https://www.acmicpc.net/problem/17369',17369,'유령의 집','3초(추가시간없음)','1024 MB',19,'<p>세상의 모든 지식을 깨우쳐 더 이상 공부할 것이 없게 된 승현이는 새로운 지식을 찾기 위해 프로그래밍 대회를 떠나지 못한 지박령들이 사는 유령의 집을 찾아갔다.</p>

<p style="margin-top: 20px;"><img alt="ghost1" src="https://upload.acmicpc.net/6776b9fa-5b19-4a1f-9837-21347cbf5f74/-/preview/" style="display: block; margin-left: auto; margin-right: auto; width: 100%; max-width: 300px;"></p>

<p style="margin-bottom: 20px; text-align: center;">유령의 집의 예시</p>

<p>유령의 집은 정사각형 모양의 방들이 벽을 맞대고 붙어서 커다란 직사각형을 이루는 구조이며, 각 방에는 빛이 통과할 수 있는 창문이 사방의 벽에 하나씩 달려 있다. 바깥으로 뚫린 창문으로는 외부에서 안을 들여다볼 수 있다. 승현이는 이 창문들을 구분하기 위해 번호를 붙여 놓았다.</p>

<ul>
	<li>건물을 하늘에서 내려다봤을 때, 위쪽 벽에 난 창문들은 왼쪽부터 <code>U1</code>, <code>U2</code>, <code>U3</code>, ... 번, 아래쪽 벽에 난 창문들은 왼쪽부터 <code>D1</code>, <code>D2</code>, <code>D3</code>, ... 번으로 부른다.</li>
	<li>마찬가지로 왼쪽 벽에 난 창문들은 위쪽부터 <code>L1</code>, <code>L2</code>, <code>L3</code>, ... 번, 오른쪽 벽에 난 창문들은 위쪽부터 <code>R1</code>, <code>R2</code>, <code>R3</code>, ... 번으로 부른다.</li>
</ul>

<p>방들 중 몇몇에는 거울이 놓여 있거나 유령이 살고 있다. 거울은 방에 대각선 방향으로 놓여 있으며, 양면 모두 빛을 반사한다. 유령은 건너편이 훤히 비칠 정도로 투명하고, 모두 똑같이 생겨서 구별할 수 없다.</p>

<p style="margin-top: 20px;"><img alt="ghost2" src="https://upload.acmicpc.net/5846484a-7f22-4156-b1dd-bf001579ac4d/-/preview/" style="display: block; margin-left: auto; margin-right: auto; width: 344.167px; max-width: 714px; height: 93.3333px;"></p>

<p style="margin-bottom: 20px; text-align: center;"><code>D2</code>번 창문으로 들여다봤을 때</p>

<p>위의 예시와 같은 집에서 <code>D2</code>번 창문으로 안을 들여다보면 승현이에게서 1만큼 떨어진 위치와 4만큼 떨어진 위치에 유령이 한 마리씩 보인다. 승현이가 들여다본 창문들이 주어질 때, 승현이가 본 유령들의 수와 위치를 구해 보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 유령의 집의 세로 길이와 가로 길이를 의미하는 정수 <em>N</em>과 <em>M</em>, 거울 또는 유령이 있는 방의 개수를 의미하는 정수 <em>K</em>, 승현이가 안을 들여다본 횟수를 의미하는 정수 <em>Q</em>(1 ≤ <em>N</em>, <em>M</em>, <em>K</em>, <em>Q</em> ≤ 300,000)가 공백 하나를 사이에 두고 주어진다.</p>

<p>다음 <em>K</em>개의 줄에 걸쳐 각 줄에 방의 정보를 나타내는 정수 <em>x</em>와 <em>y</em>(1 ≤ <em>x</em> ≤ <em>N</em>, 1 ≤ <em>y</em> ≤ <em>M</em>), 문자 <em>c</em>가 공백 하나를 사이에 두고 주어진다. <em>c</em>는 <code>/</code>, <code>\</code>, <code>!</code> 중 하나이며, <em>x</em>번째 줄 <em>y</em>번째 칸의 방에 <em>c</em>가 <code>/</code>이면 ? 방향 거울이, <code>\</code>이면 ? 방향 거울이, <code>!</code>이면 유령이 있음을 의미한다. 같은 위치의 방이 두 번 이상 주어지는 경우는 없다.</p>

<p>다음 <em>Q</em>개의 줄에 걸쳐 각 줄에 승현이가 들여다본 창문의 번호가 주어진다. 번호는 공백을 포함하지 않으며 해당 번호의 창문이 존재함이 보장된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p><em>Q</em>개의 줄에 걸쳐 각 줄에 각 시도마다 승현이가 본 유령의 수와 각각의 유령이 승현이에게서 떨어져 있는 거리의 총합을 출력한다. 유령이 하나도 보이지 않을 경우 거리의 총합은 0이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 4 6 4
1 2 /
1 3 !
2 1 !
3 1 \
3 2 !
3 4 !
D2
U1
L1
R2
','2 5
3 12
0 0
1 4
','BINARY_SEARCH'),
                                                                                                                                        (14826,'BAEKJOON','https://www.acmicpc.net/problem/17383',17383,'옥토끼는 통신교육을 풀어라!!','1초(추가시간없음)','1024 MB',17,'<p>UCPC World Finals 2020을 준비하는 옥토끼는 여름학교에 가기 위하여 통신교육 문제를 푼다. 그러나 악덕 조교 tncks0121은 옥토끼가 오랫동안 문제를 풀지 않으면 옥통풀을 외치며 독촉한다.</p>

<p>옥토끼는 <em>N</em>개의 문제를 모두 풀어야 하며 각 문제를 푸는 데 <em>T<sub>i</sub></em>분이 걸린다. 옥토끼는 멀티태스킹 능력이 발달하여 한 번에 동시에 두 개의 문제를 풀 수 있다. 모든 문제는 정수 시각에 풀기 시작해야 하며 한 번 풀기 시작한 문제는 도중에 풀이를 중단하지 않는다. 옥토끼가 항상 문제를 풀고 있을 필요는 없으며 문제를 푸는 순서에는 제약이 없다.</p>

<p>tncks0121은 옥토끼가 문제를 해결한 시점만 볼 수 있을 뿐, 옥토끼가 지금 문제를 풀고 있는지 쉬고 있는지 모른다. 문제 하나를 풀고 나서 다음 문제를 풀기까지 걸리는 시간이 길어지면 tncks0121의 독촉이 심해지기 때문에, 옥토끼는 이 간격의 최댓값이 최소가 되도록 계획을 세워 모든 문제를 풀려고 한다. 옥토끼를 도와 문제를 푸는 전략을 짜는 프로그램을 작성하여라. tncks0121은 통신교육이 시작되자마자 독촉을 시작하므로, 옥토끼가 첫 문제를 푸는 데 걸리는 시간도 고려해야 함에 유의하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 문제의 수 N (1 ≤ <em>N</em> ≤ 100,000)이 주어진다.</p>

<p>두 번째 줄에는 옥토끼가 각 문제를 푸는 데 걸리는 시간 <em>T<sub>i</sub></em> (1 ≤ <em>T<sub>i</sub></em> ≤ 10<sup>9</sup>, <em>T<sub>i</sub></em>는 정수)가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 옥토끼가 문제 하나를 풀고 나서 다음 문제를 풀기까지 걸리는 최대 시간의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','7
3 4 5 9 10 14 15
','5
','BINARY_SEARCH'),
                                                                                                                                        (14825,'BAEKJOON','https://www.acmicpc.net/problem/17393',17393,'다이나믹 롤러','2초','512 MB',8,'<p>페인팅 전문 회사 부키치 암즈는 거대한 페인팅용 롤러 "다이나믹 롤러"를 출시하였다. 이 신제품은 평범한 페인팅 롤러와 마찬가지로 굴려서 칠할 수 있지만, 손잡이를 세로로 휘둘러 잉크를 한번에 흩뿌릴 수도 있도록 설계되었다. 이러한 새로운 사용방법은 거대한 몸집과 맞물려 매우 역동적으로 보였기 때문에, 이 롤러의 이름은 다이나믹 롤러가 되었다. 평소 페인팅에 관심이 많던 멩미는 다이나믹 롤러의 매력에 흠뻑 빠져, 단숨에 다이나믹 롤러를 구매했다. 지금 당장 롤러를 시험해 보고 싶었던 멩미는 통로 일부분을 칠해보기로 했다.</p>

<p>통로는 1 × <em>N</em> 길이의 일자 형태를 가지고 있고, 통로의 바닥은 1 × 1 타일로 가득 차있다. 각 타일은 잉크지수 <em>A<sub>i</sub></em> 와 점도지수 <em>B<sub>i </sub></em>를 가지고 있다. 타일이 제각각 다른 특성을 가지고 있기 때문에, 멩미는 세심하게 롤러를 휘둘러야만 한다. 멩미가 <em>i</em> 번째 타일 위에 서 있을 때, 멩미는 다이나믹 롤러로 현재 위치보다 오른쪽에 있으면서 점도지수가 서 있는 칸의 잉크지수 <em>A<sub>i</sub></em> 이하인 칸을 칠할 수 있다.</p>

<p>통로는 기본적인 관리가 되고 있기 때문에, 각 칸의 잉크지수 <em>A<sub>i</sub></em> 는 점도지수 <em>B<sub>i</sub></em> 이상이다. 그러나 깊숙한 통로는 관리에 어려움이 있기 때문에, 점도지수 <em>B<sub>i </sub></em>는 항상 오름차순이다. 이런 상황 속에서 멩미가 통로의 각 타일에서 서 있을 때 다이나믹 롤러로 칠할 수 있는 최대의 칸 수를 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 통로의 길이인 자연수 <em>N</em>이 입력으로 주어진다. (1 ≤ <em>N</em> ≤ 5 × 10<sup>5</sup>)</p>

<p>두 번째 줄에 <em>N</em>개의 정수 <em>A</em><sub>1</sub>, <em>A</em><sub>2</sub>, ..., <em>A<sub>N</sub></em>이 공백으로 구분되어 주어진다. <em>A<sub>i</sub></em> 는 <em>i</em> 번째 칸의 잉크지수를 의미한다. (1 ≤ <em>A?</em> ≤ 10<sup>18</sup>)</p>

<p>세 번째 줄에 <em>N</em>개의 정수 <em>B</em><sub>1</sub>, <em>B</em><sub>2</sub>, ..., <em>B<sub>N</sub></em>이 공백으로 구분되어 주어진다. <em>B<sub>i</sub></em> 는 <em>i</em> 번째 칸의 점도지수를 의미한다. (1 ≤ <em>B?</em> ≤ 10<sup>18</sup>, <em>A<sub>i</sub></em> ≥ <em>B<sub>i</sub></em>)</p>

<p><em>B</em><sub>1</sub>, <em>B</em><sub>2</sub>, ..., <em>B<sub>N</sub></em>은 오름차순이다. 즉, 1 ≤ <em>i</em> ≤ <em>j</em> ≤ <em>N</em>을 만족하는 모든 정수 순서쌍 (<em>i</em>, <em>j</em>)에 대해 <em>B<sub>i</sub></em> ≤ <em>B<sub>j</sub></em> 가 성립한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 <em>N</em>개의 정수 <em>x</em><sub>1</sub>, <em>x</em><sub>2</sub>, ..., <em>x<sub>N</sub></em>을 공백으로 구분하여 출력한다. <em>x<sub>i</sub></em>는 <em>i</em> 번째 칸에 서서 다이나믹 롤러를 사용할 때 최대로 칠할 수 있는 칸의 개수이다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
10 10 10 10 10
10 10 10 10 10
','4 3 2 1 0
','BINARY_SEARCH'),
                                                                                                                                        (14827,'BAEKJOON','https://www.acmicpc.net/problem/17439',17439,'꽃집','1초(추가시간없음)','1024 MB',25,'<p>수학이니 과학이니, 컴퓨터니 사람이니, ……. 복잡하고 슬픈 세상에 신물이 난 남서는 새해가 되고 추위가 가실 즈음, 도시를 떠나 조용한 마을에 꽃집을 열었다.</p>

<p>남서는 처음엔 <span style="font-style: italic;">N</span>송이의 꽃을 가격순으로 일렬로 늘어놓았다. 그런데 개점 소식을 듣고 꽃집에 놀러 온 남서의 친구 끄드흐가 남서에게 이렇게 조언했다.</p>

<p>"꽃이 <span style="font-style: italic;">N</span>송이나 되니까 둘러보기가 너무 힘들어. 꽃다발로 묶는 게 어때?"</p>

<p>생각해보니 그랬다. <span style="font-style: italic;">N</span>송이는 너무 많지 않은가! 그래서 남서는 꽃을 꽃다발로 묶어 정리하기로 했다. 남서는 몇 가지 조건을 세웠다.</p>

<ul>
	<li>각각의 꽃을 꼭 한 번씩 사용한다. 따라서 모든 꽃은 반드시 단 하나의 꽃다발에 속한다.</li>
	<li>꽃다발을 만들 땐 가격순으로 진열된 현재 상태에서 인접한 꽃끼리만 묶는다. 즉, 각 꽃다발을 구성하는 꽃의 원래 위치는 연속한 구간을 이루어야 한다.</li>
	<li>꽃다발의 가격은, 그 꽃다발에 묶인 꽃의 가격의 합에, 묶인 꽃의 개수를 곱한 값이다. (그 이유는, 이해하긴 어렵지만 영업 비밀이라고 한다.)</li>
	<li>꽃다발은 총 <span style="font-style: italic;">K</span>개 이하로 만든다. (손님들이 보기 편하게 진열하기 위함이라고 한다.)</li>
</ul>

<p>이제 꽃다발을 어떻게 만들지 고민하던 남서는, 모든 꽃다발의 가격의 합이 꽃다발을 만드는 방법에 따라 달라질 수 있다는 사실을 깨달았다. 남서는 착하기 때문에 모든 꽃다발의 가격의 합이 최소가 되도록 꽃다발을 만들려고 한다.</p>

<p><span style="font-style: italic;">N</span>개의 꽃의 가격이 진열된 순서대로 주어질 때, <span style="font-style: italic;">K</span>개 이하의 꽃다발을 만들어 모든 꽃다발의 가격의 합을 최소화했을 때의 그 합을 구하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 양의 정수 <span style="font-style: italic;">N</span>과 <span style="font-style: italic;">K</span>가 주어진다. (1 ≤ <span style="font-style: italic;">N</span>, <span style="font-style: italic;">K</span> ≤ 50,000)</p>

<p>두 번째 줄에 꽃의 가격을 의미하는 <span style="font-style: italic;">N</span>개의 양의 정수 <span style="font-style: italic;">v</span><sub><span style="font-style: italic;">i</span></sub>가 띄어쓰기를 사이에 두고 주어진다. (1 ≤ <span style="font-style: italic;">v</span><sub><span style="font-style: italic;">i</span></sub> ≤ 50,000)</p>

<p>주어지는 수열 <span style="font-style: italic;">v</span><sub><span style="font-style: italic;">i</span></sub>는 단조 증가 수열임이 보장된다. 즉, 1 ≤ <span style="font-style: italic;">j</span> ≤ <span style="font-style: italic;">N</span>-1를&nbsp;만족하는 모든 <span style="font-style: italic;">j</span>에 대해, <span style="font-style: italic;">v</span><sub><span style="font-style: italic;">j</span></sub> ≤ <span style="font-style: italic;">v</span><sub><span style="font-style: italic;">j</span>+1</sub>임이 보장된다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에, <span style="font-style: italic;">K</span>개 이하의 꽃다발을 만들 때 모든 꽃다발의 가격의 합의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>노트</h2>
				</div>
				<div id="problem_hint" class="problem-text">
				<p>첫 번째 예제에서는 다음과 같이 세 개의 꽃다발을 만들면 된다.</p>

<ul>
	<li>(1, 1)로 하나,</li>
	<li>(5, 6)로 또 하나,</li>
	<li>(9)로 하나.</li>
</ul>

<p>꽃다발의 가격은 각각 4, 22, 9이므로 총 가격은 4 + 22 + 9 = 35이다. 꽃다발의 가격의 합을 이보다 작게 만들 수 있는 방법은 없다.</p>

				</div>
				</div>','5 3
1 1 5 6 9
','35
','BINARY_SEARCH'),
                                                                                                                                        (14843,'BAEKJOON','https://www.acmicpc.net/problem/17951',17951,'흩날리는 시험지 속에서 내 평점이 느껴진거야','1초','256 MB',12,'<p>넓은 시험 범위와 어려운 과제로 유명한 운영체제로 보는 데이터베이스시스템 알고리즘 수업은 시험지가 너무 많아 실내에서는 시험을 치를 수 없어서 야외에서 시험을 진행한다. 해당 수업의 수강생인 현수는 오랜 시간에 걸쳐 풀 수 있는 모든 문제를 풀었고 제출만을 남겨두고 있었다. 그러나 갑자기 불어오는 강풍에 현수의 시험지가 모두 날아가 버렸고, 날아간 시험지를 줍는 동안 남은 시간을 다 써버리고 말았다.</p>

<p>시험지에 명시된 규칙 중에는 채점하는 조교의 편의를 위해 시험지를 반드시 순서대로 제출하라는 규칙이 있는데, 이 규칙 때문에 현수는 힘들게 치른 시험이 0점 처리될 위기에 빠지게 되었다!</p>

<p>그러나, 마음씨 좋은 조교인 주찬이는 평소 수업에 열심히 참여한 현수에게 한 번의 기회를 주기로 했다. 규칙은 규칙이므로 많은 점수를 줄 수는 없고,&nbsp;시험지를 현재 순서 그대로 K개의 그룹으로 나눈 뒤 각각의 그룹에서 맞은 문제 개수의 합을 구하여 그 중 최솟값을&nbsp;시험 점수로 하기로 하였다. 현수가 이번 시험에서 받을 수 있는 최대 점수를 계산하는 프로그램을 작성하자.</p>

<p>현수는 모르는 문제를 아예 풀지 않기 때문에 현수가 푼 문제는 모두 맞았다고 생각할 수 있으며, 조교는 마음씨가 좋아서 자신이 줄 수 있는 최대한의 점수를 준다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 시험지의 개수 N과 시험지를 나눌 그룹의 수 K가 정수로 주어진다. (1 ≤ K ≤ N ≤ 10<sup>5</sup>)</p>

<p>두 번째 줄에 각 시험지마다 맞은 문제의 개수 x가 정수로 주어진다 (0 ≤ x ≤ 20)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>현수가 받을 수 있는 최대 점수를 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8 2
12 7 19 20 17 14 9 10
','50
','BINARY_SEARCH'),
                                                                                                                                        (14835,'BAEKJOON','https://www.acmicpc.net/problem/18113',18113,'그르다 김가놈','1.5초(추가시간없음)','1024 MB',9,'<p>정래는 김밥가게 “그르다 김가놈”에 납품할 김밥을 만드는 김밥 공장을 운영한다. 정래는 김밥 양쪽 끝을 “꼬다리”라고 부른다. 그리고 꼬다리를 잘라낸 김밥을 “손질된 김밥”이라고 부른다.&nbsp;</p>

<p>공장에서는 김밥 <em>N</em>개에 대해서, 김밥 꼬다리를 잘라내고 손질된 김밥을 김밥조각으로 만드는 작업을 한다. 꼬다리를 잘라낼 때에는 양쪽에서 균일하게 <em>K</em> cm만큼 잘라낸다. 만약 김밥의 길이가 2<em>K</em> cm보다 짧아서&nbsp;한쪽밖에 자르지 못한다면, 한쪽만 꼬다리를 잘라낸다. 김밥 길이가 <em>K</em> cm이거나 그보다 짧으면&nbsp;그 김밥은 폐기한다.</p>

<p>손질된 김밥들은 모두 일정한 길이 <em>P</em>로 잘라서 <em>P</em> cm의 김밥조각들로 만든다. <em>P</em>는 양의 정수여야 한다. 정래는 일정한 길이 <em>P</em> cm로 자른 김밥조각을 최소 <em>M</em>개 만들고 싶다. <em>P</em>를 최대한 길게 하고 싶을 때, <em>P</em>는 얼마로 설정해야 하는지 구하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 손질해야 하는 김밥의 개수 <em>N,</em>&nbsp;꼬다리의 길이 <em>K</em>, 김밥조각의 최소 개수 <em>M</em>이 주어진다.&nbsp;(1&nbsp;≤ <em>N</em>&nbsp;≤ 10<sup>6</sup>, 1&nbsp;≤ <em>K</em>,&nbsp;<em>M</em>&nbsp;≤ 10<sup>9</sup>, <em>N</em>, <em>K</em>,&nbsp;<em>M</em>은 정수)</p>

<p>두 번째 줄부터 김밥의 길이 <em>L</em>이 <em>N</em>개 주어진다. (1&nbsp;≤ <em>L</em>&nbsp;≤ 10<sup>9</sup>, <em>L</em>은 정수)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>김밥조각의 길이 <em>P</em>를&nbsp;최대로 할 때, <em>P</em>를 출력한다. 만족하는 <em>P</em>가 없는 경우, -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 6 4
20
10
3
','2
','BINARY_SEARCH'),
                                                                                                                                        (14840,'BAEKJOON','https://www.acmicpc.net/problem/18190',18190,'촛불과 그림자','1초(추가시간없음)','512 MB',26,'<p>꼭짓점이 (<em>A</em><sub>1</sub>, <em>B</em><sub>1</sub>), (<em>A</em><sub>2</sub>, <em>B</em><sub>2</sub>), ···, (<em>A<sub>N</sub></em>, <em>B<sub>N</sub></em>)인 빨간색 볼록 <em>N</em>각형과, 꼭짓점이 (<em>C</em><sub>1</sub>, <em>D</em><sub>1</sub>), (<em>C</em><sub>2</sub>, <em>D</em><sub>2</sub>), ···, (<em>C<sub>M</sub></em>, <em>D<sub>M</sub></em>)인 파란색 볼록 <em>M</em>각형이 있다.</p>

<p>여기서 재미있는 점은 아래 그림과 같이, 빨간색 볼록 다각형 내부에 파란색 볼록 다각형이 완전하게 포함된다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/03a7cc47-afea-432b-a73d-224c33587ea0/-/preview/" style="width: 395.833px; height: 277.5px;"></p>

<p style="text-align: center;"><strong><그림 1></strong>&nbsp;파란색 다각형을 포함하는 빨간색 다각형</p>

<p>빨간색 볼록 다각형 내부이나, 파란색 볼록 다각형의 내부와 경계에 포함되지 않는 영역을 <em>S</em>라 하자. 아래 그림과 같이, 영역 <em>S</em>의 한 점에 촛불을 설치하면 노랑색 영역이 밝아지고, 회색 영역에는 그림자가 생긴다.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/815ad3a4-3044-4184-951b-9f32584aaf8c/-/preview/" style="width: 399.167px; height: 277.5px;"></p>

<p style="text-align: center;"><strong><그림 2></strong>&nbsp;밝혀진 영역과 그림자 영역</p>

<p>다각형의 정보와 촛불의 위치가 주어질 때, 그림자 영역의 넓이를 계산하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 빨간색 다각형과 파란색 다각형의 꼭짓점 개수를 의미하는 두 자연수 <em>N</em>과 <em>M</em>, 쿼리의 개수를 의미하는 자연수 <em>Q</em>가 사이에 공백을 두고 주어진다.</p>

<p>두번째 줄부터 <em>N</em>개의 줄에 걸쳐, 빨간색 다각형의 꼭짓점 정보가 반시계 방향으로 주어진다. (<em>i</em>+1)번째 줄에는 두 정수 <em>A<sub>i</sub></em>와 <em>B<sub>i</sub></em>가 사이에 공백을 두고 주어진다(1 ≤&nbsp;<em>i</em> ≤&nbsp;<em>N</em>).</p>

<p>(<em>N</em>+2)번째 줄부터 <em>M</em>개의 줄에 걸쳐, 파란색 다각형의 꼭짓점 정보가 반시계 방향으로 주어진다. (<em>N</em>+<em>i</em>+1)번째 줄에는 두 정수 <em>C<sub>i</sub></em>와 <em>D<sub>i</sub></em>가 사이에 공백을 두고 주어진다(1 ≤&nbsp;<em>i</em> ≤&nbsp;<em>M</em>).</p>

<p>(<em>N</em>+<em>M</em>+2)번째 줄부터 <em>Q</em>개의 줄에 걸쳐, <em>Q</em>개의 쿼리에 관한 정보가 주어진다. (<em>N</em>+<em>M</em>+<em>i</em>+1)번째 줄에는 두 정수 <em>X<sub>i</sub></em>와 <em>Y<sub>i</sub></em>가 사이에 공백을 두고 주어진다(1 ≤&nbsp;<em>i</em> ≤&nbsp;<em>Q</em>). 이는 <em>i</em>번째 쿼리에서는 촛불을 (<em>X<sub>i</sub></em>, <em>Y<sub>i</sub></em>)에 설치함을 의미한다.</p>

<p>모든 <em>Q</em>개의 쿼리는 서로 독립적임에 유의하라.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄부터 <em>Q</em>개의 줄에 걸쳐, 쿼리에 대한 답을 차례대로 출력한다.</p>

<p>만약 촛불의 위치가 빨간색 볼록 다각형의 외부나 경계에 존재한다면, "<code>OUT</code>"을 출력한다.</p>

<p>만약 촛불의 위치가 파란색 볼록 다각형의 내부가 경계에 존재한다면, "<code>IN</code>"을 출력한다.</p>

<p>위 두 가지 경우가 모두 아니라면, 그림자의 영역의 넓이를 출력한다.</p>

<p>실수에 대한 절대·상대 오차는 10<sup>-6</sup>까지 허용된다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4 4 3
-4 -4
4 -4
4 4
-4 4
-1 -1
1 -1
1 1
-1 1
0 0
3 3
6 6
','IN
16.5
OUT
','BINARY_SEARCH'),
                                                                                                                                        (14839,'BAEKJOON','https://www.acmicpc.net/problem/18191',18191,'피아노 연주','2초(추가시간없음)','512 MB',18,'<p><em>N</em>개의 손가락을 가진 세빈이는 한 손만으로 모든 곡을 연주할 수 있는 최고의 피아니스트다.</p>

<p>세빈이의 두 인접한 손가락 사이의 거리는 <em>K</em>로 일정하다. 고로 <em>i</em>번째 손가락과 첫 번째 손가락 사이의 거리를 <em>X<sub>i</sub></em>라고 한다면, <em>X<sub>i</sub></em> = (<em>i</em>-1)<em>K</em>가 성립한다(1 ≤&nbsp;<em>i</em> ≤ <em>N</em>).</p>

<p>세빈이는 <em>M</em>개의 음으로 이루어진 곡을 연주하려 한다. 이때 각각의 음을 어떤 손가락으로 연주하는지에 따라 곡을 연주하는 것이 쉬워질 수도, 어려워질 수도 있다.</p>

<p><em>i</em>번째 음의 음높이를 <em>P<sub>i</sub></em>라 하고, 이 음을 <em>F<sub>i</sub></em>번째 손가락으로 연주한다 하자. <em>i</em>번째 음과 이와 인접한 (<em>i</em>+1)번째 음을 연주할 때의 난이도는 |(<em>P<sub>i</sub></em><sub>+1</sub> - <em>P<sub>i</sub></em>) - (<em>X<sub>F<sub>i</sub></sub></em><sub><sub>+1</sub></sub> - <em>X<sub>F<sub>i</sub></sub></em>)|다.</p>

<p>곡의 난이도는 인접한 두 음을 연주할 때의 난이도의 최댓값으로 정의한다. 각각의 음을 어떤 손가락으로 연주할지 결정하여 곡의 난이도를 최소화하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에 세빈이의 손가락의 수와 곡을 이루는 음의 수를 나타내는 두 자연수 <em>N</em>과 <em>M</em>, 두 인접한 손가락 사이의 거리를 나타내는 자연수 <em>K</em>가 사이에 공백을 두고 주어진다.</p>

<p>두번째 줄에는 <em>M</em>개의 정수 <em>P</em><sub>1</sub>, ···, <em>P<sub>M</sub></em>이 사이에 공백을 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 번째 줄에 곡의 난이도의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5 4 3
7 2 9 3
','1
','BINARY_SEARCH'),
                                                                                                                                        (14845,'BAEKJOON','https://www.acmicpc.net/problem/18195',18195,'정점 찾기','2초(추가시간없음)','512 MB',20,'<p>정점 <em>N</em>개로 이루어진 그래프에 단 하나의 간선이 숨겨져 있다. 이 간선은 <em>A</em>번 정점과 <em>B</em>번 정점을 연결하는 양방향 간선이다.</p>

<p>숨겨진 간선이 연결하는 두 정점의 번호 <em>A</em>, <em>B</em>를 찾아내는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>Sample Grader는 다음과 같은 정보를 표준 입력을 통하여 읽어들인다. 여러분은 어떠한 입력도 받으면 안된다.</p>

<p>첫 번째 줄에 테스트 케이스의 총 개수를 의미하는 자연수 <em>T</em>가 주어진다.</p>

<p>두번째 줄부터 <em>T</em>개의 줄에 걸쳐, <em>T</em>개의 테스트 케이스에 관한 정보가 주어진다. (<em>i</em>+1)번째 줄에는 세 개의 자연수 <em>N</em>, <em>A</em>, <em>B</em>가 사이에 공백을 두고 주어진다(1 ≤ <em>i</em> ≤ <em>T</em>).</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>Sample Grader는 다음과 같은 정보를 표준 출력을 통하여 출력한다. 여러분은 어떠한 출력도 하면 안된다.</p>

<p>Sample Grader는 첫 번째 줄부터 <em>T</em>개의 줄에 걸쳐, 각 줄마다 여러분이 찾은 <em>A</em>, <em>B</em>&nbsp;값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','2
4 3 2
5 1 2
','2 3
1 2
','BINARY_SEARCH'),

(14877,'BAEKJOON','https://www.acmicpc.net/problem/19619',19619,'자매 도시','2초','512 MB',22,'<p>인도네시아에는&nbsp;<em>N</em> 개의 도시가 있고, 0부터&nbsp;<em>N</em> - 1까지 번호가 매겨져 있다. 또&nbsp;<em>M</em> 개의 양방향 도로가 있는데,&nbsp;0 부터&nbsp;<em>M</em> - 1까지 번호가 매겨져 있다. 각 도로는 두 개의 서로 다른 도시를 연결한다.&nbsp;<em>i</em> 번 도로는&nbsp;<em>U</em>[<em>i</em>] 번 도시와&nbsp;<em>V</em>[<em>i</em>] 번 도시를 연결하고, 자동차로 여행하려면 휘발유&nbsp;<em>W</em>[<em>i</em>] 만큼이 필요하다. 어떤 두 도시도 서로 오갈&nbsp;수 있도록 도로망이 구축되어 있다.</p>

<p>앞으로&nbsp;<em>Q</em>&nbsp;일 동안, 매일매일 한 쌍의 도시가 자매 도시&nbsp;관계를 맺으려고 한다. 구체적으로는,&nbsp;<em>j</em>번째 날,&nbsp;<em>X</em>[<em>j</em>] 번 도시는&nbsp;<em>Y</em>[<em>j</em>] 번 도시와 자매 도시 관계를 맺으려고 한다. 이러려면,&nbsp;<em>X</em>[<em>j</em>] 번 도시는 대표단을 자동차를 이용해서&nbsp;<em>Y</em>[<em>j</em>] 번 도시로 보낸다. 비슷하게,&nbsp;<em>Y</em>[<em>j</em>]&nbsp;번 도시도 대표단을 자동차를 이용해서&nbsp;<em>X</em>[<em>j</em>] 번 도시로 보낸다.&nbsp;&nbsp;</p>

<p>혼잡을 막기 위해서, 두 자동차는 어느 순간에도 만나면 안된다. 보다 구체적으로는, 두 자동차가 동시에 같은 도시에 있으면 안된다. 또, 같은 도로를 동시에 서로 반대 방향으로 여행해도 안된다. 추가로, 어떤 도로를 여행하는 자동차는 이 도로를 끝까지 가서 목적지에 도착해야 한다. (다른 말로 하면, 도로 중간에서 유턴할 수 없다.) 그렇지만, 자동차는 같은 도시 또는 같은 도로를 한 번 이상 방문할 수 있다. 또, 자동차는 언제든지 어떤 도시에서든지&nbsp;대기할 수 있다.&nbsp;&nbsp;&nbsp;</p>

<p>연료 탱크가 큰 자동차는&nbsp;비싸기 때문에, 두 도시는 사용할 두 자동차의 연료 탱크의 최대 용량을 최소화하는 경로를 택하고 싶다. 각각의 도시에는 무한히 많은 휘발유가 있는 주유소가 있기 때문에, 자동차가 필요한&nbsp;연료 탱크의 최대 용량은 자동차가 이용할 모든 도로에서&nbsp;<strong>최대</strong>로 필요한 휘발유의 양이다.&nbsp;&nbsp;</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','','','BINARY_SEARCH'),
(14876,'BAEKJOON','https://www.acmicpc.net/problem/19623',19623,'회의실 배정 4','1초','256 MB',13,'<p>서준이는 아빠로부터 N개의 회의와 하나의 회의실을&nbsp;선물로 받았다. 각 회의는 시작 시간,&nbsp;끝나는 시간, 회의 인원이 주어지고 한 회의실에서 동시에 두 개 이상의 회의가 진행될 수 없다.&nbsp;단, 회의는 한번 시작되면&nbsp;중간에 중단될 수 없으며 한 회의가 끝나는 것과 동시에 다음 회의가 시작될 수 있다. 회의의 시작 시간은&nbsp;끝나는 시간보다 항상 작다. N개의 회의를 회의실에 효율적으로 배정할 경우 회의를 진행할 수 있는 최대 인원을 구하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 회의의 수 N이 주어진다. 둘째 줄부터 N + 1 줄까지&nbsp;공백을 사이에 두고 회의의 시작시간,&nbsp;끝나는 시간, 회의&nbsp;인원이 주어진다. &nbsp;</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에&nbsp;회의실에서 회의를 진행할 수 있는 최대 인원을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
10 50 50
30 60 60
20 120 100
80 100 50
110 140 70
','180
','BINARY_SEARCH'),
(14875,'BAEKJOON','https://www.acmicpc.net/problem/19637',19637,'IF문 좀 대신 써줘','1초(추가시간없음)','1024 MB',8,'<p>게임 개발자인 밀리는 전투력 시스템을 만들어, 캐릭터가 가진 전투력을 기준으로 칭호를 붙여주려고 한다.</p>

<p>예를 들어, 전투력 10,000 이하의 캐릭터는 WEAK, 10,000 초과 그리고 100,000 이하의 캐릭터는 NORMAL, 100,000 초과 그리고 1,000,000 이하의 캐릭터는 STRONG 칭호를 붙여준다고 하자. 이를 IF문으로 작성한다면 아래와 같이 구현할 수 있다.</p>

<pre><code>if power <= 10000
 print WEAK
else if power <= 100000
 print NORMAL
else if power <= 1000000
 print STRONG</code></pre>

<p>혼자서 게임을 개발하느라 매우 바쁜 밀리를 대신해서, 캐릭터의 전투력에 맞는 칭호를 출력하는 프로그램을 작성하자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 칭호의 개수&nbsp;<em>N</em>&nbsp;(1&nbsp;≤&nbsp;<em>N</em>&nbsp;≤ 10<sup>5</sup>)과&nbsp;칭호를 출력해야 하는 캐릭터들의 개수&nbsp;<em>M</em>&nbsp;(1&nbsp;≤&nbsp;<em>M</em> ≤ 10<sup>5</sup>)이 빈칸을 사이에 두고 주어진다.&nbsp;(1&nbsp;≤&nbsp;<em>N, M</em> ≤ 10<sup>5</sup>)</p>

<p>두 번째 줄부터&nbsp;<em>N</em>개의 줄에 각 칭호의 이름을 나타내는 길이 1 이상, 11 이하의 영어 대문자로만 구성된 문자열과 해당 칭호의 전투력 상한값을 나타내는 10<sup>9</sup>&nbsp;이하의 음이 아닌 정수가&nbsp;주어진다. 칭호는 전투력 상한값의 비내림차순으로 주어진다.&nbsp;</p>

<p><em>N&nbsp;</em>+ 2번째 줄부터<em>&nbsp;M</em>개의 각 줄에는 캐릭터의 전투력을 나타내는 음이 아닌 정수가&nbsp;주어진다. 해당하는 칭호가 없는 전투력은&nbsp;입력으로 주어지지 않는다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p><em>M</em>개의 줄에 걸쳐 캐릭터의 전투력에 맞는 칭호를 입력 순서대로 출력한다. 어떤 캐릭터의 전투력으로 출력할 수 있는 칭호가 여러 개인 경우 가장 먼저 입력된 칭호 하나만 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 8
WEAK 10000
NORMAL 100000
STRONG 1000000
0
9999
10000
10001
50000
100000
500000
1000000
','WEAK
WEAK
WEAK
NORMAL
NORMAL
NORMAL
STRONG
STRONG
','BINARY_SEARCH'),
(14886,'BAEKJOON','https://www.acmicpc.net/problem/19845',19845,'넴모넴모 2020','3초(추가시간없음)','1024 MB',12,'<p>오래된 테트리스 게임판 위에 수수께끼의 생물 “넴모”들이 살기 시작했다. 이 게임판은 가로로 10<sup>9</sup>칸, 세로로 <span style="font-style: italic;">N</span>층 크기이고, 넴모 한 마리는 한 층의 한 칸을 차지하고 산다. 편의상 왼쪽에서부터 <span style="font-style: italic;">x</span>번째, 아래쪽에서부터 <span style="font-style: italic;">y</span>층을 (<span style="font-style: italic;">x</span>, <span style="font-style: italic;">y</span>)로 표기하자.</p>

<p><span style="font-style: italic;">y</span>층에는 <span style="font-style: italic;">a</span><sub><span style="font-style: italic;">y</span></sub>마리의 넴모들이 살고 있다. 넴모들은 붙어있는 걸 좋아하기 때문에 (1, <span style="font-style: italic;">y</span>), …, (<span style="font-style: italic;">a</span><sub><span style="font-style: italic;">y</span></sub>, <span style="font-style: italic;">y</span>) 칸에 나란히 살고 있으며, 중력의 영향을 받기 때문에 모든 1 ≤ <span style="font-style: italic;">y</span> ≤ <span style="font-style: italic;">N</span> ? 1에 대해 <span style="font-style: italic;">a</span><sub><span style="font-style: italic;">y</span></sub> ≥ <span style="font-style: italic;">a</span><sub><span style="font-style: italic;">y</span>+1</sub>이다.</p>

<p style="margin-top: 15px;"><img alt="nemmo" src="https://upload.acmicpc.net/e3dd5590-b5f1-4f65-bff9-f09b56211938/-/preview/" style="display: block; margin-left: auto; margin-right: auto; width: 333.333px; max-width: 400px; height: 181.667px;"></p>

<p style="margin-bottom: 15px; text-align: center;">테트리스 게임판에 살고 있는 넴모들. 이 경우 <span style="font-style: italic;">N</span> = 3, <span style="font-style: italic;">a</span><sub>1</sub> = 3, <span style="font-style: italic;">a</span><sub>2</sub> = 3, <span style="font-style: italic;">a</span><sub>3</sub> = 2이다.</p>

<p>테트리스를 하고 싶은 레프는 레이저를 이용해서 넴모들을 치워버리려고 한다. (<span style="font-style: italic;">x</span>, <span style="font-style: italic;">y</span>)에 레이저를 설치하면 왼쪽에서 <span style="font-style: italic;">x</span>번째 칸에 살고 있는 넴모들 중 <span style="font-style: italic;">y</span>층 이상에 살고 있는 넴모들, <span style="font-style: italic;">y</span>층에 있는 넴모들 중 (<span style="font-style: italic;">x</span>, <span style="font-style: italic;">y</span>)보다 오른쪽에 있는 넴모들이 모두 사라진다. 그 이외의 넴모는 당장 사라지지는 않는다.</p>

<p style="margin-top: 15px;"><img alt="laser" src="https://upload.acmicpc.net/db89da45-151c-4df9-87dc-8e498c780b53/-/preview/" style="display: block; margin-left: auto; margin-right: auto; width: 333.333px; max-width: 400px; height: 181.667px;"></p>

<p style="margin-bottom: 15px; text-align: center;">(1, 2)에 레이저를 설치한 모습. 총 4마리의 넴모가 레이저에 맞아 사라진다.</p>

<p>레이저를 설치할 수 있는 위치는 총 <span style="font-style: italic;">Q</span>개가 있다. 레프를 위해 각 위치에 레이저를 설치했을 때 몇 마리의 넴모를 없앨 수 있는지 알려주자. 단, 실제로 레이저를 설치하는 것이 아닌 설치 계획만 하는 것이기 때문에, 설치 계획끼리 서로 영향을 주고받지는 않는다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 정수 <span style="font-style: italic;">N</span>, <span style="font-style: italic;">Q</span>가 공백으로 구분되어 주어진다. <span style="font-style: italic;">N</span>은 게임판의 세로 크기, <span style="font-style: italic;">Q</span>는 레이저를 설치할 수 있는 위치의 수를 의미한다.</p>

<p>둘째 줄에는 <span style="font-style: italic;">N</span>개의 정수 <span style="font-style: italic;">a</span><sub>1</sub>, …, <span style="font-style: italic;">a</span><sub><span style="font-style: italic;">N</span></sub>이 공백을 사이에 두고 주어진다. 이는 <span style="font-style: italic;">i</span>층에 <span style="font-style: italic;">a</span><sub><span style="font-style: italic;">i</span></sub>마리의 넴모가 살고 있다는 의미이다.</p>

<p>셋째 줄부터 <span style="font-style: italic;">Q</span>개의 줄에 걸쳐 레이저를 설치할 수 있는 위치가 주어진다. (<span style="font-style: italic;">i</span> + 2)번째 줄에는 두 정수 <span style="font-style: italic;">x</span><sub><span style="font-style: italic;">i</span></sub>와 <span style="font-style: italic;">y</span><sub><span style="font-style: italic;">i</span></sub>가 공백을 사이에 두고 주어지는데, 이는 (<span style="font-style: italic;">x</span><sub><span style="font-style: italic;">i</span></sub>, <span style="font-style: italic;">y</span><sub><span style="font-style: italic;">i</span></sub>)에 레이저를 설치할 수 있다는 의미이다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p><span style="font-style: italic;">Q</span>개의 줄에 걸쳐 답을 출력한다. <span style="font-style: italic;">i</span>번째 줄에는 (<span style="font-style: italic;">x</span><sub><span style="font-style: italic;">i</span></sub>, <span style="font-style: italic;">y</span><sub><span style="font-style: italic;">i</span></sub>)에 레이저를 설치하면 몇 마리의 넴모를 제거할 수 있는지 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 11
3 3 2
1 1
1 2
1 3
2 1
2 2
2 3
3 1
3 2
4 1
4 2
3 3
','5
4
2
4
3
1
2
1
0
0
0
','BINARY_SEARCH'),
(14881,'BAEKJOON','https://www.acmicpc.net/problem/19857',19857,'연금술사','1초(추가시간없음)','1024 MB',19,'<p>각고의 노력 끝에 현자의 돌을 얻은 연금술사는 모든 물질로 금을 만들 수 있는 것은 아니라는 사실을 깨닫고 절망하였다. 그러나, 그는 현자의 돌을 이용해 가치가 낮은 광물로 가치가 높은 광물을 만들 수 있다는 사실을 발견하였다. 물론, 가치가 높은 광물을 사용해서 얻은 결과물의 가치가 낮을 수도 있다.</p>

<p>구체적으로, 광물 <span style="font-style: italic;">k</span>(<span style="font-style: italic;">k</span> ≥ 1)개와 현자의 돌을 이용해 새로운 광물을 만드는 경우를 생각해 보자. 사용한 광물 <span style="font-style: italic;">k</span>개의 가치를 각각 <span style="font-style: italic;">x</span><sub>1</sub>, <span style="font-style: italic;">x</span><sub>2</sub>, …, <span style="font-style: italic;">x</span><sub><span style="font-style: italic;">k</span></sub>라 할 때, <span style="font-style: italic;">S</span> = {<span style="font-style: italic;">x</span><sub>1</sub>, <span style="font-style: italic;">x</span><sub>2</sub>, …, <span style="font-style: italic;">x</span><sub><span style="font-style: italic;">k</span></sub>}에 포함되지 않는 가장 작은 음이 아닌 정수 <span style="font-style: none;">MEX</span>(<span style="font-style: italic;">S</span>)가 최종 산물의 가치가 된다. 예를 들어, 가치가 각각 0, 1, 4, 2, 1인 광물과 현자의 돌을 이용해 새로운 광물을 만드는 경우, <span style="font-style: none;">MEX</span>({0, 1, 4, 2, 1}) = 3이므로 결과 광물의 가치는 3이 된다.</p>

<p>현재 연금술사는 가치가 0, 1, 2, …, (<span style="font-style: italic;">N&nbsp;</span>? 1)인 광물들을 각각 <span style="font-style: italic;">c</span><sub>0</sub>, <span style="font-style: italic;">c</span><sub>1</sub>, <span style="font-style: italic;">c</span><sub>2</sub>, …, <span style="font-style: italic;">c</span><sub><span style="font-style: italic;">N</span>-1</sub>개씩 가지고 있다. 연금술사는 이 광물들과 현자의 돌을 이용해 새로운 광물을 만드는 과정을 여러 번 반복할 수 있다. 결과물로 나온 광물도 다시 재료로 사용할 수 있다. 이 과정에서 현자의 돌은 무한히 사용할 수 있다.</p>

<p>연금술사의 목표는 최종적으로 단 하나의 광물만을 남기면서 그 광물의 가치를 최대로 하는 것이다. 단, 광물을 사용하지 않고 버릴 수는 없다.</p>

<p>연금술사가 최종적으로 얻게 될 단 하나의 광물의 가치의 최댓값을 구하여라.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 정수 <span style="font-style: italic;">N</span>이 주어진다.</p>

<p>두 번째 줄에 <span style="font-style: italic;">N</span>개의 정수 <span style="font-style: italic;">c</span><sub>0</sub>, <span style="font-style: italic;">c</span><sub>1</sub>, …, <span style="font-style: italic;">c</span><sub><span style="font-style: italic;">N</span>-1</sub>이 공백으로 구분되어 주어진다. 단, 연금술사는 적어도 하나 이상의 광물을 갖고 있다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫 줄에 최종적으로 남은 광물 하나의 가치의 최댓값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','1
1
','1
','BINARY_SEARCH'),
(14900,'BAEKJOON','https://www.acmicpc.net/problem/20181',20181,'꿈틀꿈틀 호석 애벌레 - 효율성','1초','512 MB',14,'<p>꿈틀꿈틀 호석 애벌레는 <em>N</em> 개의 먹이가 일렬로 나열된 나뭇가지를 오른쪽으로 기어가려고 한다. 시작하는 순간의 호석 애벌레가 0의 위치에 있고 <em>i </em>번째 먹이는 오른쪽으로 <em>i </em>초 기어가야 도달할 수 있다. 또한 매초 1 만큼 오른쪽으로 무조건 진행한다.</p>

<p>호석 애벌레는 <em>i</em> 번째 먹이가 맛있을수록 높은 만족도를 얻는다. 호석 애벌레는 절제라는 것을 모르는 욕심쟁이기 때문에 한번 먹이를 먹기 시작하면 연속적으로 계속 먹어야 하며, 누적된 만족도가 최소 만족도 <em>K</em>  이상이 되거나 더 이상 먹을 먹이가 없을 때에 연속적으로 먹는 것을 멈춘다. 만약 최소 만족도 이상이 되면 <em>K </em>를 초과한 만족도만큼 탈피 에너지를 축적한다. 직후에 호석 애벌레의 만족도는 다시 0 이 되고 먹이를 먹을 수 있게 된다. 나뭇가지를 전부 통과했을 때에 소화를 다 못 했을 경우에도 탈피 에너지는 최소 만족도를 넘기는 순간 이미 축적한 것으로 생각하자.</p>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/6586d1b0-793c-4ec1-a4bd-4d5fa92343c2/-/preview/" style="height: 178.333px; width: 385.833px;"></p>

<p>예를 들어 위와 같이 9개의 먹이가 존재하면, 호석 애벌레는 미래를 도모하여 1번 먹이를 과감하게 포기한다. 그리고 2번부터 먹기 시작해서 3번까지 먹으면 만족도가 9가 되어 3의 에너지를 축적하게 된다. 같은 이유로 4번 먹이도 포기하고 5번부터 먹으면 7번까지 연속으로 먹어서 15의 만족도를 얻는다. 이를 통해 9의 탈피 에너지가 쌓인다. 8, 9번 먹이까지 먹게 되면 2의 탈피 에너지가 축적된다. 이렇게 얻은 총 14의 탈피 에너지가 위의 예제에서는 최대치이다.</p>

<p>매초마다 호석 애벌레는 오른쪽으로 이동하면서 먹이를 지나치거나 먹기 시작할 수 있다. 먹기 시작하면 만족도가 채워질때까지 먹게 될것이다. 어떤 먹이들을 대해 먹어야 축적된 탈피 에너지가 최대가 될 수 있을까?</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫번째 줄에 먹이 개수 <em>N</em>, 최소 만족도 <em>K </em>가 공백으로 주어진다.</p>

<p>두번째 줄에는 1 번부터 <em>N </em>번 먹이의 만족도가 순서대로 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>축적된 탈피 에너지의 최댓값을 구하라. 만약 탈피를 한 번도 할 수 없다면 0을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 5
3 4 5
','4
','BINARY_SEARCH'),
(14901,'BAEKJOON','https://www.acmicpc.net/problem/20191',20191,'줄임말','1초','512 MB',14,'<p>문자열 A가 문자열 B의 <strong>줄임말</strong>이라는 것은 B의 순서를 바꾸지 않고 0 또는 그 이상 개수의 문자를 지워 A를 만들 수 있다는 뜻이다. 정의에 의해서 B는 자기 자신의 줄임말임에 유의하라. 예를 들어, <code>ac</code>, <code>ab</code>, <code>aa</code>, <code>aabc</code>는 <code>aabc</code>의 줄임말이고, <code>d</code>, <code>aaa</code>, <code>ba</code>는 <code>aabc</code>의 줄임말이 아니다.</p>

<p>영문 알파벳 소문자로만 이루어진 두 문자열 S와 T가 주어진다. T를 자연수 n번 반복해서 이어쓴 문자열을 T n이라고 하자. S가 T n의 줄임말이 되는 최소의 n을 구하라.</p>

<p>예를 들어, T = <code>ac</code>, S = <code>caa</code>라고 하면, T<sup>1</sup> = T = <code>ac</code>, T<sup>2</sup> = <code>acac</code>, T<sup>3</sup> = <code>acacac</code>이고 n = 3일 때 처음으로 S가 T<sup>n</sup>의 줄임말이 된다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 문자열 S가 주어진다.</p>

<p>둘째 줄에 문자열 T가 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>S가 T<sup>n</sup>의 줄임말이 되는 최소의 n을 출력한다. 단, 어떤 n에 대해서도 T<sup>n</sup>이 S의 줄임말이 되지 못할 때에는, -1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','caa
ac
','3
','BINARY_SEARCH'),
(14902,'BAEKJOON','https://www.acmicpc.net/problem/20211',20211,'게임 개발자 영우','3초','512 MB',19,'<p>게임 개발자가 꿈인 영우는 컴퓨터게임설계 수업의 과제로 RPG 게임을 개발했다. 영우가 만든 RPG 게임은 다음의 단계들을 순차적으로 수행하며 진행된다.</p>

<ul>
	<li>1단계 : 시작하기 전 이번 게임에서 사용할 특수 파라미터 <em>x</em>, <em>y</em>를 플레이어가 임의로 정한다. 단, <em>x</em>와 <em>y</em>는 <strong>양의 정수</strong>이어야 한다.</li>
	<li>2단계 : 게임을 시작하면 플레이어는 <strong>레벨이 0이고 보유 경험치가 0점인 상태</strong>로 시작한다.</li>
	<li>3단계 : 우선 플레이어는 동전을 하나 던진다. 동전을 던져서 나온 면에 따라서 일반&nbsp;또는 에픽 몬스터의&nbsp;사냥에 도전하고, 사냥 결과에 따라 경험치를 획득한다.
	<ul>
		<li>동전 앞면이 나온 경우 : 일반 몬스터 사냥에&nbsp;도전한다. 일반 몬스터는&nbsp;언제나 사냥에 성공하여 경험치를 <strong>3점</strong>&nbsp;획득한다.</li>
		<li>동전 뒷면이 나온 경우 : 에픽&nbsp;몬스터 사냥에 도전한다. 에픽 몬스터는&nbsp;강력하므로&nbsp;사냥에 실패할 수도 있다.&nbsp;이때 게임 내부적으로는, 플레이어의 현재 보유&nbsp;경험치에 따라 사냥 성공 여부가 결정된다. 만약 보유 경험치가 <strong>0 또는 짝수</strong>였다면, 사냥에 성공하여&nbsp;경험치를 <strong>5점</strong>&nbsp;획득한다. 만약 보유 경험치가 <strong>홀수</strong>였다면, 사냥에 실패하여&nbsp;경험치를 <strong>1점</strong>&nbsp;획득한다.</li>
	</ul>
	</li>
	<li>4단계 : 플레이어의 보유 경험치를 체크한다. 만약 보유 경험치가 <em>x</em>점 이상이라면 레벨업 이벤트가&nbsp;발동되어,&nbsp;레벨이 1 상승하고&nbsp;보유 경험치는 0점으로 초기화된다. 이때 보유하고 있던 경험치가 <em>x</em>점을 초과해&nbsp;아무리 많이 있었어도, 레벨이 여러번 오르거나&nbsp;남는 경험치가 보존되지는 않는다.</li>
	<li>5단계 : 플레이어의 레벨을 체크한다. 만약 현재 레벨이 <em>y</em>라면 게임이 즉시&nbsp;클리어되고 플레이어는 더이상 게임을 진행할 수 없다. 레벨&nbsp;<em>y</em>가 아니라면 3단계로 돌아가서 다시 동전을 던지고, 레벨 <em>y</em>가 될 때까지 이 과정을 반복한다. 레벨 <em>y</em>가 되기 전에는 절대 게임이 클리어되거나 종료되지&nbsp;않는다.</li>
</ul>

<p>영우는&nbsp;이 게임을 이미 클리어했고 그 당시의 게임 진행 기록을 남겼다. 영우의 진행 기록에는 게임이 시작될 때부터 클리어 될 때까지 수행한 동전 던지기의 결과가 차례대로 나와있다. 하지만, 그 외에 다른 정보들은 깜빡하고 전혀&nbsp;기록하지 않았다!&nbsp;특히 이 게임에서 중요한 요소인 특수 파라미터 x, y를 어떤 값으로 정했는지도 기록하지 않았다.</p>

<p>영우는 디버깅을 위해 게임 진행 기록을 온전히 복원하고 싶어졌다. 이를 위해서는 영우가 게임에서 사용한&nbsp;x, y의 값을 추정할 필요가&nbsp;있다. 다행히도&nbsp;우리는 영우가 만든 게임의 알고리즘을 알고 있기에, 이를 참고하여 x, y&nbsp;값으로 가능한 것들이 무엇이&nbsp;있는지 알아낼&nbsp;수&nbsp;있다.</p>

<p>영우의&nbsp;게임 진행&nbsp;기록을 보고 해당 게임에서 사용되었을 특수 파라미터 값 (x, y) 쌍으로 가능한 것들을 게임의 알고리즘에 근거하여 모두 찾아내보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 게임 시작부터 클리어까지 플레이어가 동전을 던진 횟수를 의미하는 정수 N(1 ≤ N ≤ 32,000)이 주어진다.</p>

<p>둘째 줄에는 게임&nbsp;시작부터 클리어까지 동전을 던져서 나온 면이&nbsp;공백 없이 던진 순서대로 N개 주어진다. 앞면이 나온 경우는 H, 뒷면이 나온 경우는 T로 표현한다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>첫째 줄에는 해당 게임에서 사용되었을 특수 파라미터 (x, y) 쌍으로 가능한 것의 개수 K를 출력한다.</p>

<p>둘째 줄부터 K개의 줄에 걸쳐서 가능한 (x, y) 쌍을 한 줄에 하나씩 출력한다. 각 줄에는 양의 정수 x와 y를 하나의 공백을 사이에 두고 출력한다.</p>

<p>만약 가능한 (x, y) 쌍이 여러 개라면, (x, y) 쌍들을 <strong>x의 오름차순</strong>으로 출력하되&nbsp;x의 값이 동일한&nbsp;쌍들 간에는&nbsp;<strong>y의 오름차순</strong>으로 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
HHT
','10
1 3
2 3
3 3
4 2
5 2
7 1
8 1
9 1
10 1
11 1
','BINARY_SEARCH'),
(14906,'BAEKJOON','https://www.acmicpc.net/problem/20293',20293,'연료가 부족해','1초','1024 MB',14,'<p>피라미드를 직접 보는 게 소원이었던 향빈이는 사막 투어 여행패키지를 신청하게 되었다. 그리고 여행 둘째 날에 사막 입구에 도착해서 사막 투어용 자동차에 탑승했다.</p>

<p>출발하기 전 들뜬 마음으로 자동차 안에 앉아있던 향빈이는 사막 투어 가이드북을 발견했다. 가이드북 안의 $R \times C$ 크기의 지도에는 연료 보관소 $N$곳의 위치와 연료 보관소마다 보관하고 있는 연료량이 표시되어 있었다.</p>

<p>평소에 자동차 덕후였던 향빈이는 모든 자동차의 연비를 외우고 있었고, 현재 탑승한 자동차가 $1$만큼의 거리를 움직일 때 연료를 $1$만큼 소비한다는 것을 알고 있다. 또한, 자동차는 지도의 $x$축 또는 $y$축과 평행한 방향으로만 주행한다. 따라서 예를 들어 자동차가 $\left(0,0\right)$에서 $\left(i,j\right)$까지 최단 거리로 움직인다면 연료는 $i+j$만큼 소비할 것이다.</p>

<p>현재 자동차의 연료가 없는 관계로, 여기에 있는 주유소에서 연료를 충전하고 나서 출발하려 한다. 하지만 주유소에서 파는 연료는 매우 비싸기 때문에, 향빈이는 여기서는 연료를 되도록 최소로 충전하고 이후에는 이동하면서 방문하는 연료 보관소에서 연료를 충전할 계획이다.</p>

<p>향빈이는 얼른 피라미드를 보고 싶기 때문에 운전사분께 피라미드와 멀어지는 방향으로는 운전하지 말아 달라고 부탁했다. 즉, 자동차는 오직 오른쪽이나 아래쪽으로만 이동한다.&nbsp;</p>

<p>주유소에서 충전 가능한 연료량에는 제한이 없으며, 현재 위치와 피라미드가 있는 위치에는 연료 보관소가 없다. 또한, 한 위치에 두 개 이상의 연료 보관소가 있는 경우는 없다.</p>

<p>문제는 연료 보관소마다 위치와 보관된 연료량이 다르기 때문에, 연료보관소들을 어떤 순서로 경유해서 이동하는가에 따라 처음 충전해야 하는 연료량이 달라질 수 있다는 점이다. 현 위치인 $\left(1,1\right)$에서 피라미드가 있는 지점인 $\left(R,C\right)$까지 가기 위해 주유소에서 충전해야 하는 연료량의 최솟값을 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에 지도의 세로 길이와 가로 길이를 나타내는 정수 $R$, $C$가 주어진다. ($2&nbsp;\leq&nbsp;R, C \leq 3\ 000$)</p>

<p>둘째 줄에 지도에 표시된 연료 보관소의 개수를 나타내는 정수 $N$이 주어진다. ($0 \leq N \leq 1\ 000$)</p>

<p>셋째 줄부터 $N$개 줄에 각 연료 보관소의 위치를 나타내는 정수 좌표 $\left(r,c\right)$와 보관중인 연료량을 나타내는 정수 $f$가 주어진다. ($1 \leq r \leq R$, $1 \leq c \leq C$, $0 \leq f \leq 100$)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>향빈이가 현 위치인 $\left(1,1\right)$에서 피라미드가 있는 지점인 $\left(R,C\right)$까지 가기 위해 주유소에서 충전해야 하는 연료량의 최솟값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3 3
1
2 2 1
','3
','BINARY_SEARCH'),
(14907,'BAEKJOON','https://www.acmicpc.net/problem/20495',20495,'수열과 헌팅','1초','1024 MB',10,'<p>준원이는 여자친구를 만들 시나리오를 진지하게 세우고 있다.</p>

<p>먼저, 지나가던 아름다운 여성 분이 준원이에게 길이가 <code>N</code>인 수열 <code>arr</code>을 정렬해달라고 부탁한다.&nbsp;그리고 준원이는 <code>#include <algorithm></code>을 선언한 뒤 <code>std::sort(arr, arr+N);</code>을 사용해 시간복잡도 O(N log N)으로 멋지게 정렬해준다. 그리고, 사랑에 빠진다.</p>

<p>준원이는 실제로 이 상황에 마주친다.&nbsp;하지만 그가 받은 수열은... 수열의 원소가 정해져 있지 않았다!</p>

<p style="text-align: center;">314 ± 25, 255 ± 140, ...</p>

<p>실제 수열의 각 원소는 받은 수열의 오차범위 내의 어떤 실수든 될 수 있다. 예를 들어, 첫번째 수인 314 ±&nbsp;25는 314 - 25 = 289&nbsp;이상 314 + 25 = 339 이하의 임의의 실수가 될 수 있다.</p>

<p>그녀는 길이 N의 수열 a<sub>1</sub> ± b<sub>1</sub>, ..., a<sub>N</sub> ±&nbsp;b<sub>N</sub>을 준원이에게 주고, 수열을 정렬한 이후 각각의 수가 몇 번째에 가 있을지를 알고 싶다. 물론, 수열이 범위 안에서 어느 수로 결정되는가에 따라 답이 바뀔 수 있기 때문에, <strong>각각의 수가 있을 수 있는 인덱스의 범위</strong>를 구하고 싶다. 만약 같은 수가 여러 개 있다면, 그 수들은 어떤 순서로 있든 무관하다. 준원이가 연애를 할 수 있도록, 여러분이 대신 그녀의 문제를 해결해 주자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫째 줄에는 준원이가 받은 수열의 길이 N이 주어진다.</p>

<p>둘째 줄부터 N개의 줄에 걸쳐 준원이가 받은 수열이 주어진다. i번째 줄에는&nbsp;준원이가 받은 수열의 i번째 원소 a<sub>i</sub> ±&nbsp;b<sub>i</sub>를 나타내는 두 정수 a<sub>i</sub>와 b<sub>i</sub>가 공백을 사이에 두고 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>총 N개의 줄에 걸쳐서 출력한다. i번째 줄에는 수열을 정렬한 후, 수열의 i번째 원소가 있을 수 있는 인덱스의 최솟값과 최댓값을 공백을 사이에 두고 출력한다.&nbsp;</p>

<p>수열의 인덱스는 1부터 시작한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
10 20
40 15
70 15
','1 2
1 3
2 3
','BINARY_SEARCH'),
(14913,'BAEKJOON','https://www.acmicpc.net/problem/20670',20670,'미스테리 싸인','2초','512 MB',18,'<p>취준생 태영이는 오랜 구직활동 끝에 취직에 성공했다. 여러가지 이유로 취업시장이 위축된 요즘, 가뭄의 단비 같은 일자리에 태영이는 기뻐했다. 하지만 모든 것은 계약되기 전에는 불확실한 법, 태영이는 하루빨리 근로계약서를 작성하고 싶은 마음에 밤잠을 설쳤다.</p>

<p>사회적 거리두기로 인한 언택트 시대, 태영이는 비대면 전자계약 서비스 <strong>모두싸인(MODUSIGN)</strong>을 이용해 근로계약서를 작성하게 되었다. 메일을 받은 후 태영이의 불안감은 사라졌고, 난생처음 작성해보는 계약서에 어떻게 하면 멋진 싸인을 할 수 있을지 행복한 고민을 시작했다.</p>

<p>태영이는 너무 튀지 않으면서도 독특한 느낌적인 느낌의 싸인을 만들고 싶다. 평소 기하학적인 감각이 돋보이던 태영이는 자신만의 룰을 지키며 싸인을 만드려고 한다. 태영이가 정한 룰은 다음과 같다.</p>

<ul>
	<li>태영이는 두 개의 볼록 다각형 A와 B를 정한다.</li>
	<li>다각형 B는 완전히 A의 내부에 존재한다.</li>
	<li>태영이의 싸인은 여러 개의 점을 차례로 이은 다각선이다.</li>
	<li>태영이의 싸인을 구성하는 점은 A의 내부에 있어야 한다. 그리고 B의 외부에 있어야 한다.</li>
	<li>도형의 외곽선 상에는 싸인의 점이 존재하지 않는다.</li>
	<li>문제에서 주어지는 모든 좌표는 정수다.</li>
</ul>

<p style="text-align: center;"><img alt="" src="https://upload.acmicpc.net/8338cb94-eb6a-4543-9732-ecf09dcd7dfc/" style="width: 347.5px; height: 108.333px;"></p>

<p style="text-align: center;"><그림 1> 왼쪽부터 차례로 성공적인 싸인, B내부에 점이 존재해 실패한 싸인, A외부에 점이 존재해 실패한 싸인</p>

<p>&nbsp;</p>

<p>두 도형 A, B의 정보와 태영이가 싸인한 다각선의 정보가 입력으로 주어질 때, 해당 싸인은 주어진 규칙을 만족하는지 판단하는 프로그램을 작성해주자. 만약 태영이의 싸인이 규칙을 위반했다면, 몇 개의 점이 규칙을 위반했는지 계산하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 번째 줄에는 세 개의 자연수 <em>N, M, K&nbsp;</em>가 공백으로 구분되어 주어진다.</p>

<ul>
	<li><em>N&nbsp;</em>은 도형 A를 구성하는 점의 수이다. (3 ≤&nbsp;<em>N&nbsp;</em>?≤&nbsp;10,000)</li>
	<li><em>M&nbsp;</em>은 도형 B를 구성하는 점의 수이다.&nbsp;(3 ≤ <em>M&nbsp;</em>?≤&nbsp;10,000)</li>
	<li><em>K&nbsp;</em>는 태영이의 싸인을 구성하는 점의 수이다. (2&nbsp;≤ <em>K&nbsp;</em>?≤ 300,000)</li>
</ul>

<p>두 번째 줄에는 도형 A를 구성하는 <em>N&nbsp;</em>개&nbsp;점의 좌표가 공백으로 구분된 2<em>N</em>개의 정수로 주어진다. 각 점의 좌표는 <strong><code><span style="background-color:#f1c40f;">X Y</span></code></strong>&nbsp;형식으로 공백으로 구분되어 주어진다. 각 점은 반시계 방향 순서로 주어진다.</p>

<p>세 번째 줄에는 도형 B를 구성하는 <em>M</em> 개&nbsp;점의 좌표가 공백으로 구분된 2<em>M</em>개의 정수로 주어진다. 각 점의 좌표는&nbsp;<strong><code><span style="background-color:#f1c40f;">X Y</span></code></strong>&nbsp;형식으로 공백으로 구분되어 주어진다. 각 점은 반시계 방향 순서로 주어진다.</p>

<ul>
	<li>다각형&nbsp;B의 모든 점은 다각형 A의 외곽선을 제외한 내부에 존재한다.</li>
</ul>

<p>네 번째 줄에는 싸인을 구성하는 <em>K</em>개&nbsp;점의 좌표가 공백으로 구분된 2<em>K</em>개의 정수로 주어진다. 각 점의 좌표는&nbsp;<strong><code><span style="background-color:#f1c40f;">X Y</span></code></strong>&nbsp;형식으로 공백으로 구분되어 주어진다. 각 점을 차례로 이으면 태영이의 싸인이 완성된다.</p>

<ul>
	<li>모든 좌표는 정수 값을 가진다.&nbsp;(-1,000,000,000&nbsp;≤ <em>X, Y&nbsp;</em>?≤ 1,000,000,000)</li>
	<li>문제에서 주어지는 점이 중복되는 경우는 존재하지 않는다.</li>
	<li>싸인의 점은 도형 A, B의 외곽선상에 존재하지 않는다.</li>
</ul>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>주어진 싸인이 태영이의 규칙을 만족한다면&nbsp;"<strong><code>YES</code></strong>"&nbsp;를 출력하시오.</p>

<p>만약 태영이의 규칙을 만족하지 않는다면, 조건을 위반한 점의 개수를 정수로 출력하시오.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','8 5 8
2 5 1 6 -2 6 -4 5 -5 2 -1 0 2 1 3 3
0 5 -4 4 -2 1 1 1 2 3
-4 2 -3 5 -3 2 1 5 2 2 -2 5 -1 5 2 4
','YES
','BINARY_SEARCH'),
(14914,'BAEKJOON','https://www.acmicpc.net/problem/20917',20917,'사회적 거리 두기','1초(하단참고)','512 MB',12,'<p>Albert는 L대학에서 주최하는 Hackathon 행사 진행을 도와주기로 했는데, 사회적 거리 두기 방침에 따라 모든 참가자들을 최대한 멀리 떨어트려 좌석 배정을 해주려 한다. 이를 위해&nbsp;아주 길다란 복도를 따라 특정 위치에 모니터, 책상, 의자를 두는 식으로 좌석을 배정하고, 각 좌석에는 최대 한 팀만 착석할 수 있다. 총 s개의 팀이 행사에 참가하고, 복도를 따라 총 n곳에 전원 공급이 가능한 콘센트가 설치되어 있다 -- 좌석은 반드시 콘센트가 설치된 곳에만 할 수 있다. 편의상 콘센트가 설치된 지점들의 위치를 x[1], x[2], ..., x[n] 이라 하자 (각 x[i]는 복도 입구로 부터의 거리를 나타낸다). 즉, i번째 콘센트는 복도의 입구로부터 x[i] 만큼 떨어진 곳에 있다.</p>

<p>Albert는 n개의 콘센트 위치 중 s개를 선택하여 좌석을 선택하되, 가장 가까운 두 좌석의 거리 (D라 하자)가 최대가 되도록 하고 싶다.</p>

<p>예를 들어, n = 3, s = 3 이고 x = [10, 100, 200]이라 하자. 이 경우 n = s 이므로 각 콘센트 위치에 좌석을 설치해야 한다. 가장 가까운 두 좌석의 거리는 (100 - 10) = 90 이다. 다른 예로, n = 6, s = 4 이고 x = [11, 19, 24, 26, 29, 30]이라 하자. 이 경우, x[1] = 11, x[2] = 19, x[3] = 24, x[4] = 29 각각에 좌석을 설치하면 가장 가까운 두 좌석의 거리는 5가 된다. 혹은, x[1] = 11, x[2] = 19, x[3] = 24, x[4] = 30을 선택하는 것도 가능하다. 가장 가까운 두 좌석의 거리가 6 이상이 되도록 4개의 좌석을 설치하는 방법은 없다.</p>

<p>입력으로 n, s, 그리고 x[1], ..., x[n]이 주어지면 가능한 가장 큰 D값을 출력하는 프로그램을 작성하시오.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에 테스트 케이스의 수 T가 주어진다. 각 테스트 케이스는 두 줄에 걸쳐 주어진다.</p>

<p>첫 줄에 n과 s가 공백으로 구분되어 주어진다. 다음 줄에 설치된 콘센트의 위치를 나타내는 n개의 정수가 공백으로 구분되어 주어진다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>각 테스트 케이스에 대해 달성 가능한 최대 D값을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','3
3 3
10 100 200
7 3
28 11 17 19 21 22 23
6 4
11 19 24 26 29 30
','90
8
5
','BINARY_SEARCH'),
(14912,'BAEKJOON','https://www.acmicpc.net/problem/20929',20929,'중간','1초','1024 MB',15,'<p>이 문제는 인터랙티브 문제다.</p>

<p>국렬이는 $1$ 이상 $10^9$ 이하의 $N$개의 자연수로 이루어진 두 배열 $A$, $B$를 가지고 있다. 당신은 $A$, $B$를 합쳤을 때 중간값을 구해야 한다. 중간값은 $2N$개 수들을 오름차순으로 정렬했을 때 $N$번째 수를 중간값이라고 한다.</p>

<p>국렬이는 인성이 나빠서 배열 $A$, $B$를 당신에게 제공하지 않을 것이다. 그래도 약간의 자비가 있기에 특정 배열의 $x$번째 수가 무엇인지 물어볼 기회를 줬다. 다만 40번까지 질문이 가능하며, 그 이상으로 질문할 경우 국렬이는 <span style="color:#c0392b;"><strong>틀렸습니다</strong></span>로 당신을 때릴 것이다. 답을 출력하는 것은 질문 횟수에 포함되지 않는다.</p>

<p>40번 이하로 질문해서 중간값을 구해보자.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력의 첫 줄에 배열의 길이 $N$이 주어진다. $N$은 $2^k$으로 표현할 수 있는 양의 정수만 주어진다. ($0 \le k \le 19$)</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>다음 중 하나를 표준 출력 스트림(stdout)으로 한 줄에 출력하여, 배열의 원소를 질문 할 수 있다.</p>

<ul>
	<li><span style="color:#e74c3c;"><code>? A x</code></span> : 배열 $A$의 $x$번째 수 ($1 \le x \le N$)</li>
	<li><span style="color:#e74c3c;"><code>? B x</code></span> : 배열 $B$의 $x$번째 수 ($1 \le x \le N$)</li>
</ul>

<p>어떤 배열에서 $x$번째 수는, 그 배열을 오름차순으로 정렬했을 때 $x$번째인 수를 의미한다</p>

<p>각 질문을 출력한 후에는 반드시 표준 출력 버퍼를 flush해 주어야 하고, 표준 입력 스트림(stdin)을 통해 질문에 대한 답을 입력받아야 한다. 질문에 대한 답을 입력받지 않으면 <span style="color:#4e5f70;"><strong>런타임에러</strong></span>를 받게 된다. 최대 질문 횟수는 40번으로, 그 이상으로 질문을 요청한 경우 <span style="color:#c0392b;"><strong>틀렸습니다!</strong></span>를 받는다.</p>

<p>만약 중간값을 알아낸 경우, 표준 출력 스트림으로 다음을 한 줄에 출력한다.</p>

<ul>
	<li><span style="color:#e74c3c;"><code>! x</code></span> : 배열 A, B를 합쳤을 때의 중앙값은 $x$이다.</li>
</ul>

<p>그 후 반드시 표준 출력 버퍼를 flush해야 하고, 프로그램을 종료한다. 이것은 질문 횟수에 포함되지 않는다.</p>

<p>언어별로 표준 출력 버퍼를 flush하는 방법은 다음과 같다.</p>

<ul>
	<li>C: <code>fflush(stdout)</code></li>
	<li>C++: <code>std::cout << std::flush</code></li>
    <li>Java: <code>System.out.flush()</code></li>
    <li>Python: <code>sys.stdout.flush()</code></li>
    </ul>

    </div>

    <div class="headline">
    <h2>힌트</h2>
    </div>
    <div id="problem_hint" class="problem-text">

    </div>
    </div>','2

1

2

2

3

','
? A 1

? A 2

? B 1

? B 2

! 2
','BINARY_SEARCH'),
(14921,'BAEKJOON','https://www.acmicpc.net/problem/21319',21319,'챔피언 (Easy)','2초','1024 MB',15,'<p><strong>입력 조건 외 챔피언 (Hard)와의 차이는 없다.</strong></p>

<p>민겸이는 세계적인 격투기 선수 육성 회사의 회장이다. 민겸이는 격투기 선수의 영입을 위해 세계 격투기 챔피언십을 관람하기로 했다. 세계 격투기 챔피언십의 규칙은 아래와 같다.</p>

<p>격투기 선수는 <em>N</em>명이고, 일렬로 서 있다. 선수들은 각각 전투력을 가지고 있다. 격투기 선수들은 양쪽으로 이웃한 두 명의 선수들 중 한 명에게 싸움을 걸어 격투를 벌인다. 이 때, 전투력이 높은 격투기 선수가 승리한다. 격투에서 승리한 선수는 자신감이 붙어 전투력이 1&nbsp;증가한다. 패배한 선수는 경기장을 빠져나가며 패배한 선수의 양 옆으로 이웃한 선수가 서로 이웃하게 된다. 전투력이 같은 두 선수가 격투를 벌이면 결판이 나지 않기 때문에 격투가 취소된다. 또한, 두 명의 선수가 격투를 하고 있을 때, 다른 선수들은 모두 그 시합을 지켜보느라 바쁘기 때문에 격투를 하지 않는다. 격투를 0회 이상 진행하여 마지막에 유일한 선수가 남는다면, 그 선수는 챔피언이 된다.</p>

<p>민겸이는 돈이 아주 많기 때문에, 세계 격투기 챔피언십에서 챔피언이 될 가능성이 있는 선수들을 모두 영입하려고 한다. 격투기 선수들의 전투력이 주어졌을 때, 민겸이가 영입해야 할 격투기 선수들을 민겸이에게 알려주자!</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>입력은 두 줄로 주어진다.</p>

<p>첫 번째 줄에는 격투기 선수의 수 <em>N</em>(1 ≤ <em>N</em> ≤ 200,000)이 주어진다.</p>

<p>두 번째 줄에는 1번부터 <em>N</em>번까지 각&nbsp;격투기 선수의&nbsp;전투력 <em>a<sub>1</sub></em>, <em>a<sub>2</sub></em>,&nbsp;…,&nbsp;<em>a<sub>N</sub></em>(1&nbsp;≤ <em>a<sub>i</sub></em>&nbsp;≤ 10<sup>9</sup>, 1&nbsp;≤ <em>i</em>&nbsp;≤ <em>N</em>)&nbsp;이 정수로 순서대로 주어진다.</p>

<p><strong>단, 각 격투기 선수들의 초기 전투력은 비내림차순으로 정렬되어 있다.</strong></p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>챔피언이 될 수 있는 격투기 선수들의 번호를 공백으로 구분하여 오름차순으로 출력한다. 각 선수들의 번호는 1부터&nbsp;<em>N</em>까지이다.</p>

<p>만약 아무도 챔피언이 될 수 없다면,&nbsp;-1을 출력한다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','4
1 1 3 4
','3 4
','BINARY_SEARCH'),
(14926,'BAEKJOON','https://www.acmicpc.net/problem/21556',21556,'우물 파기','0.2초','256 MB',15,'<p>폴리매스 왕국의 사람들은 우물을 이용해 지하수를 마십니다. 지하수의 근원은 물의 돌이라고 알려져 있으나, 물의 돌의 정확한 위치를 알고 있는 사람은 아무도 없습니다.</p>

<p>최근 들어 인구가 늘어나자 물이 부족해졌습니다. 사람들은 이를 해결하기 위해 두 개의 우물을 더 파려고 합니다. 우물을 팔 수 있는 곳은 $N$곳이 있으며, 이들 중에서 $i$번 위치와 $j$번 위치에 우물을 파면 $A_i+A_j$만큼의 이익을 얻을 수 있습니다.</p>

<p>우물을 파는 위치를 적당히 정해서 최대 이익을 얻는 것이 좋겠지만, 돌발 상황을 대비하여 모든 경우를 고려하려고 합니다. 당신의 목표는 가능한 모든 이익의 중간값을 찾는 것입니다. 즉, 우물을 팔 곳을 정하는 모든 $S=\frac{n(n-1)}{2}$가지 경우에 대해 얻을 수 있는 이익 중 $\lceil \frac{S}{2} \rceil$번째로 작은 것을 알아내려고 합니다. 이 문제를 해결하는 프로그램을 작성해 봅시다.</p>


					<div class="headline">
					<h2>입력</h2>
					</div>
					<div id="problem_input" class="problem-text">
					<p>첫 줄에는 우물을 팔 수 있는 위치의 수 $N$이 주어집니다.</p>

<p>둘째 줄에는 각 위치에 우물을 팠을 때 얻을 수 있는 이익을 나타내는 $N$개의 정수 $A_1, A_2, \cdots, A_N$이 주어집니다.</p>

					</div>

					<div class="headline">
					<h2>출력</h2>
					</div>
					<div id="problem_output" class="problem-text">
					<p>가능한 모든 이익 중&nbsp;$\lceil \frac{S}{2} \rceil$번째로 작은 값을 출력합니다.</p>

					</div>

				<div class="headline">
				<h2>힌트</h2>
				</div>
				<div id="problem_hint" class="problem-text">

				</div>
				</div>','5
1 3 2 5 4
','6
','BINARY_SEARCH');